[{"position":"org.easymock.internal.BridgeMethodResolver:255","failures":[0],"status":-1,"binaryOperator":"java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[1,2,3,4,5,6,7],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:205","sourceCode":"java.lang.reflect.Constructor<?>.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:204","sourceCode":"try {\n    java.lang.reflect.Constructor<?>.setAccessible(true);\n    T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException());\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cstr":"cstr"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[8,1,2,3,9,10,11,6,7,12],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[13,14,15,16,17,18,19,20,21],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:61","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>);\n} ","type":"CtIfImpl"},"failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,13,42,14,43,44,45,46,47,48,49,15,50,51,52,53,54,55,56,16,17,57,58,59,18,19,60,20,61,62,63,64,65,66,67,68,69,21,70,71,72,73,74,75,76,77,78,79],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:52","failures":[80,81,82,83,84,24,25,85,86,87,88,89,90,91,92,93,94,95,96,97,98,38,39,40,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,58,59,61,62,74,75,77,114,115,116,117],"status":-1,"binaryOperator":"(int) == (int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[118,119,120,121,122,109,117],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[13,14,15,16,17,58,18,19,20,21,74],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[21,70],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"failures":[123],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:110","sourceCode":"break","type":"CtBreakImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[124,125,126,127,0],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"leafClass"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:40","sourceCode":"if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[128,129,130,92,131,93,96,97,39,102,103,106,107,132,133,134,135],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:237","sourceCode":"return org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.reflect.Method.getParameterTypes())","type":"CtReturnImpl"},"failures":[124],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[22,136,137,138,139,140],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.internal.Range:44","failures":[141,142,118,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,22,23,124,125,126,127,0,175,176,177,80,178,81,179,180,82,181,182,183,184,185,186,83,187,188,189,190,191,136,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,84,208,209,210,211,212,213,214,215,216,217,24,25,26,27,28,29,218,219,220,221,222,85,223,86,87,224,225,88,89,90,91,92,131,93,94,95,96,97,98,226,227,228,229,230,231,232,233,234,235,236,237,238,30,31,32,33,34,239,240,119,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,35,36,262,263,264,265,266,267,268,37,269,270,271,137,272,138,273,274,275,276,277,278,279,280,281,282,283,284,285,139,140,38,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,39,40,310,99,100,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,41,352,353,354,355,356,357,358,359,8,360,361,13,42,14,43,44,45,46,47,48,49,15,50,51,52,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,101,393,102,103,394,395,104,105,396,106,107,397,108,398,120,399,121,122,109,11,6,400,401,402,403,404,405,406,407,408,409,7,410,411,12,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,110,111,112,113,442,443,444,445,446,447,448,449,450,451,452,53,453,54,55,56,16,17,123,57,58,59,18,19,60,20,61,62,63,64,65,66,67,68,69,21,70,71,72,73,74,75,76,454,455,456,457,458,459,460,461,462,463,464,77,465,114,115,466,467,468,469,470,471,472,473,474,475,476,477,478,116,479,480,481,482,483,484,78,485,79,486,487,488,489,490,117,491,492,493,494,495,496,497,498,499,500,501],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[22,23,181,182,183,184,136,192,193,194,25,26,27,28,29,235,30,270,271,137,272,138,273,276,277,279,280,281,283,284,285,139,140,289,290,292,40,99,100,344,345,346,347,348,349,41,355,356,357,399,11,403,407,409,410,413,419,422,432,438,444,445,53,454,455,456,457,459,460,461,77,114,115,486,490,491,492,494,501],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:304","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[147,306,313,314,315],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1039","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:178","failures":[167,410],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[141,142,118,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,22,23,124,125,126,127,0,175,176,177,80,178,81,179,180,82,181,182,183,184,185,186,83,187,188,189,190,191,136,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,84,208,209,210,211,212,213,214,215,216,217,24,25,26,27,28,29,218,219,220,221,222,85,223,86,87,224,225,88,89,90,91,92,131,93,94,95,96,97,98,226,227,228,229,230,231,232,233,234,235,236,237,238,30,31,32,33,34,239,240,119,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,35,36,262,263,264,265,266,267,268,37,269,270,271,137,272,138,273,274,275,276,277,278,279,280,281,282,283,284,285,139,140,38,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,39,40,310,99,100,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,41,352,353,354,355,356,357,358,359,8,360,361,13,42,14,43,44,45,46,47,48,49,15,50,51,52,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,101,393,102,103,394,395,104,105,396,106,107,397,108,398,120,399,121,122,109,11,6,400,401,402,403,404,405,406,407,408,409,7,410,411,12,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,110,111,112,113,442,443,444,445,446,447,448,449,450,451,452,53,453,54,55,56,16,17,123,57,58,59,18,19,60,20,61,62,63,64,65,66,67,68,69,21,70,71,72,73,74,75,76,454,455,456,457,458,459,460,461,462,463,464,77,465,114,115,466,467,468,469,470,471,472,473,474,475,476,477,478,116,479,480,481,482,483,484,78,485,79,486,487,488,489,490,117,491,492,493,494,495,496,497,498,499,500,501],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:45","sourceCode":"return org.easymock.internal.matchers.CompareTo<T>.matchResult(((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Comparable<T>))","type":"CtReturnImpl"},"failures":[55,16,65,68,76,502,503,504,505,506],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:839","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[73],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:115","sourceCode":"return org.easymock.IAnswer<?>.toString()","type":"CtReturnImpl"},"failures":[507,508,509],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[60,65,76,505],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[143],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[479],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1483","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[22,23,125,126,175,176,177,80,178,81,181,182,183,184,185,186,83,187,188,189,190,191,136,192,193,194,195,197,198,199,200,201,84,208,209,211,212,214,215,216,217,24,25,26,27,28,29,222,85,88,89,90,91,92,131,93,94,95,96,97,98,229,230,231,232,235,30,31,32,33,34,243,255,35,36,265,266,267,268,37,269,270,271,137,272,138,273,274,275,276,277,278,279,280,281,282,283,284,285,139,140,38,289,290,292,297,299,300,302,305,307,308,309,39,40,310,99,100,311,312,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,344,345,346,347,348,349,41,354,356,8,360,361,13,42,14,43,44,45,46,47,48,49,15,50,51,52,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,382,389,390,391,392,101,393,102,103,394,395,104,105,396,106,107,397,108,120,399,121,109,11,401,407,408,409,410,413,415,419,422,432,438,110,111,112,113,444,445,446,447,448,449,450,451,452,53,453,55,56,16,17,57,58,59,18,19,60,61,62,63,64,65,66,67,68,69,21,70,71,73,74,75,76,454,455,456,457,459,460,461,463,464,77,465,114,115,466,472,116,481,482,483,484,78,79,486,487,488,488,489,489,490,117,491,492,493,494,496,497,498,499,500,501],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"position":"org.easymock.EasyMock:959","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:327","failures":[227,228,314,315],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[510,8,360,361],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[411],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[1,2,3,4,5,6,7],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[510,8,360,361],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:603","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[88,89,90,511,512,513,514,92,38,40,99,100,102,77,114,115],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":17,"org.easymock.tests2.UsageTest.argumentsOrdered":107,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":91,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":374,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":473,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":150,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":395,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":487,"org.easymock.tests2.DelegateToTest.testReturnException":120,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":266,"org.easymock.tests.MockingTest.testPartialClassMocking":289,"org.easymock.tests.MockClassControlTest.testToString":256,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":441,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":159,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":426,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":422,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":316,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":511,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":445,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":1,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":60,"org.easymock.tests2.UsageTest.wrongArguments":103,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":30,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":388,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":231,"org.easymock.samples.ExampleTest.answerVsDelegate":117,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":172,"org.easymock.tests2.UsageConstraintsTest.testNull":58,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":294,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":347,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":261,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":373,"org.easymock.tests2.CaptureTest.testPrimitive":43,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":34,"org.easymock.tests.UsageTest.moreThanOneArgument":92,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":335,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":346,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":193,"org.easymock.tests.UsageTest.argumentsOrdered":97,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":223,"org.easymock.tests.UsageVarargTest.varargIntAccepted":209,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":155,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":25,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":401,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":5,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":477,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":339,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":408,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":118,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":29,"org.easymock.tests.ReplayStateInvalidUsageTest.times":304,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":382,"org.easymock.tests2.DependencyTest.testClassMocking":442,"org.easymock.tests2.AnswerTest.answer":116,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":20,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":157,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":392,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":169,"org.easymock.tests2.CaptureTest.testAnd":13,"org.easymock.tests2.UsageTest.strictResetToDefault":393,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":405,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":354,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":192,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":183,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":368,"org.easymock.tests2.DelegateToTest.testDelegate":109,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":225,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":331,"org.easymock.tests.LimitationsTest.mockFinalMethod":236,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":37,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":201,"org.easymock.tests2.DependencyTest.testClassMockingSupport":443,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":262,"org.easymock.tests2.CaptureTest.testCapture1_2446744":44,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":351,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":329,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":390,"org.easymock.tests.UsageThrowableTest.throwError":185,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":298,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":171,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":478,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":238,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":440,"org.easymock.samples.PartialClassMockTest.testGetArea":486,"org.easymock.tests.MockingTest.testInterfaceMocking":291,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":299,"org.easymock.tests2.CompareToTest.testLessOrEqual":506,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":26,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":427,"org.easymock.tests2.UsageTest.niceToStrict":394,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":207,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":317,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":141,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":407,"org.easymock.tests2.MockBuilderTest.testCreateMock":412,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":435,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":385,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":132,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":325,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":369,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":168,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":228,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":175,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":229,"org.easymock.tests.UsageOverloadedMethodTest.overloading":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":437,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":431,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":65,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":241,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":221,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":279,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":64,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":49,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":210,"org.easymock.tests2.EasyMockSupportClassTest.testAll":419,"org.easymock.tests.MockClassControlTest.testEquals":260,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":126,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":133,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":333,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":391,"org.easymock.tests2.CaptureTest.testCaptureAll":42,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":199,"org.easymock.tests.MockNameTest.defaultName":196,"org.easymock.tests2.UsageConstraintsTest.testMatches":66,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":194,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":296,"org.easymock.samples.ExampleTest.voteForRemovals":494,"org.easymock.tests.UsageVarargTest.allKinds":24,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":88,"org.easymock.samples.BasicClassMockTest.testPrintContent":498,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":200,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":190,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":463,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":474,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":122,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":269,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":10,"org.easymock.tests2.UsageConstraintsTest.greaterThan":68,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":420,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":182,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":357,"org.easymock.samples.ExampleTest.voteForRemoval":491,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":253,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":451,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":358,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":173,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":340,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":350,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":101,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":336,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":147,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":366,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":417,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":265,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":398,"org.easymock.tests2.CaptureTest.testCaptureFirst":52,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":146,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":367,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":108,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":244,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":275,"org.easymock.tests2.UsageTest.moreThanOneArgument":102,"org.easymock.tests2.CaptureTest.testCapture2_2446744":51,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":53,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":413,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":158,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":217,"org.easymock.tests.GenericTest.testBridgedEquals":0,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":180,"org.easymock.tests.UsageExpectAndReturnTest.longType":272,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":197,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":364,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":334,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":72,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":237,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":332,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":136,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":314,"org.easymock.tests.UsageCallCountTest.tooManyCalls":82,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":436,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":276,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":387,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":321,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":189,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":455,"org.easymock.tests.MockingTest.testNiceClassMocking":295,"org.easymock.tests.MockingTest.testClassMocking":287,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":176,"org.easymock.tests2.UsageConstraintsTest.testContains":63,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":448,"org.easymock.tests2.UsageConstraintsTest.testFind":57,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":85,"org.easymock.tests.MockTypeTest.fromEasyMockClass":170,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":79,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":308,"org.easymock.tests.UsageExpectAndReturnTest.object":278,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":41,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":386,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":372,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":2,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":212,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":205,"org.easymock.tests.UsageTest.exactCallCountByLastCall":98,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":35,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":145,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":86,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":218,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":130,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":6,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":84,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":284,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":119,"org.easymock.tests.ResultTest.createThrowResultToString":509,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":468,"org.easymock.tests.MockClassControlTest.testHashCode":259,"org.easymock.tests2.EasyMockSupportTest.testVerify":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":429,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":87,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":227,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":239,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":389,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":54,"org.easymock.tests.UsageVarargTest.varargCharAccepted":211,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":245,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":464,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":163,"org.easymock.tests2.UsageTest.openCallCountByLastCall":104,"org.easymock.tests.DefaultClassInstantiatorTest.object":246,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":375,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":226,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":203,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":430,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":323,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":187,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":380,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":467,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":258,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":355,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":322,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":285,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":438,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":257,"org.easymock.tests2.UsageTest.resumeIfFailure":397,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":167,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":338,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":268,"org.easymock.tests2.StubTest.stubWithReturnValue":363,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":7,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":73,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":277,"org.easymock.tests2.SerializationTest.testAllMockedMethod":361,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":156,"org.easymock.samples.SupportTest.voteForRemovals":501,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":134,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":124,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":470,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":328,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":510,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":162,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":479,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":220,"org.easymock.tests.UsageExpectAndThrowTest.object":326,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":70,"org.easymock.tests2.DelegateToTest.testWrongClass":121,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":22,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":23,"org.easymock.samples.ConstructorCalledMockTest.testTax":488,"org.easymock.tests.UsageStrictMockTest.range":99,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":342,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":371,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":454,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":327,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":409,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":416,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":96,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":306,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":230,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":128,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":166,"org.easymock.tests2.CaptureTest.testCaptureNone":48,"org.easymock.tests.UsageUnorderedTest.message":38,"org.easymock.tests.UsageVerifyTest.twoReturns":90,"org.easymock.tests.UsageVarargTest.varargByteAccepted":216,"org.easymock.tests2.ThreadingTest.testThreadSafe":450,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":433,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":81,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":497,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":206,"org.easymock.tests2.CaptureTest.testCapture_2617107":14,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":135,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":264,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":160,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":33,"org.easymock.tests2.UsageConstraintsTest.any":61,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":303,"org.easymock.tests2.StubTest.stub":362,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":315,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":161,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":267,"org.easymock.tests.UsageExpectAndThrowTest.longType":319,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":250,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":302,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":465,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":472,"org.easymock.tests2.SerializationTest.testClass":8,"org.easymock.tests.LimitationsTest.mockNativeMethod":235,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":140,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":127,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":379,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":466,"org.easymock.tests2.NameTest.nameForMocksControl":113,"org.easymock.tests2.MockedExceptionTest.testMockedException":447,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":421,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":95,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":485,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":292,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":320,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":344,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":410,"org.easymock.tests.MockingTest.testNicePartialClassMocking":290,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":349,"org.easymock.tests2.CompareToTest.testCompareEqual":504,"org.easymock.tests2.CaptureTest.testCaptureLast":47,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":377,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":263,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":461,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":19,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":71,"org.easymock.tests.MockingTest.testTwoMocks":288,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":462,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":270,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":324,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":106,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":75,"org.easymock.samples.ExampleTest.removeNonExistingDocument":495,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":384,"org.easymock.tests.UsageStrictMockTest.differentMethods":100,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":300,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":469,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":248,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":452,"org.easymock.tests2.MockBuilderTest.testCreateMockString":415,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":423,"org.easymock.tests.UsageExpectAndThrowTest.floatType":318,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":67,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":418,"org.easymock.tests.ResultTest.createReturnResultToString":508,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":481,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":400,"org.easymock.tests.UsageVerifyTest.twoThrows":89,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":432,"org.easymock.tests.ResultTest.createDelegateResultToString":507,"org.easymock.samples.ExampleTest.voteAgainstRemoval":492,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":164,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":151,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":356,"org.easymock.tests.LimitationsTest.privateConstructor":234,"org.easymock.tests2.UsageConstraintsTest.testNotNull":74,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":446,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":191,"org.easymock.tests2.UsageTest.defaultResetToNice":396,"org.easymock.samples.ExampleTest.voteAgainstRemovals":490,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":152,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":283,"org.easymock.tests.UsageVarargTest.differentLength":213,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":378,"org.easymock.tests2.CallbackTest.callback":484,"org.easymock.tests2.UsageConstraintsTest.equals":123,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":352,"org.easymock.tests.UsageTest.openCallCountByLastCall":94,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":55,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":32,"org.easymock.tests.UsageCallCountTest.tooFewCalls":80,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":457,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":232,"org.easymock.tests.UsageThrowableTest.throwCheckedException":188,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":129,"org.easymock.tests.MockingTest.testStrictClassMocking":286,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":460,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":36,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":456,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":383,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":305,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":459,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":483,"org.easymock.tests2.CompareToTest.testGreateOrEqual":505,"org.easymock.tests.ObjectMethodsTest.testHashCode":204,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":4,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":453,"org.easymock.tests2.NameTest.nameForNiceMock":112,"org.easymock.tests2.DependencyTest.testInterfaceMocking":444,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":3,"org.easymock.samples.ExampleTest.addDocument":493,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":434,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":439,"org.easymock.tests2.DelegateToTest.testStubDelegate":399,"org.easymock.tests2.AnswerTest.stubAnswer":482,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":40,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":411,"org.easymock.tests.UsageVarargTest.varargLongAccepted":215,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":311,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":149,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":139,"org.easymock.tests.UsageExpectAndReturnTest.floatType":137,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":11,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":489,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":476,"org.easymock.tests.UsageThrowableTest.noUpperLimit":186,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":69,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":242,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":56,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":337,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":45,"org.easymock.tests2.SerializationTest.test":360,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":247,"org.easymock.tests2.UsageConstraintsTest.testSame":59,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":271,"org.easymock.samples.SupportTest.addDocument":500,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":458,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":424,"org.easymock.tests.GenericTest.testPackageScope":125,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":144,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":475,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":293,"org.easymock.tests2.NameTest.nameForMock":110,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":280,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":414,"org.easymock.tests2.UsageStrictMockTest.differentMethods":115,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":353,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":138,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":330,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":202,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":184,"org.easymock.tests2.MockedExceptionTest.testRealException":449,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":174,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":154,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":153,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":77,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":31,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":307,"org.easymock.tests2.NameTest.nameForStrictMock":111,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":406,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":78,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":348,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":341,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":512,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":21,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":249,"org.easymock.tests.ErrorMessageTest.testGetters":513,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":403,"org.easymock.tests2.UsageStrictMockTest.range":114,"org.easymock.tests2.UsageConstraintsTest.lessThan":76,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":471,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":148,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":9,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":428,"org.easymock.tests2.CaptureTest.testCaptureRightOne":15,"org.easymock.tests2.UsageConstraintsTest.testOr":18,"org.easymock.tests.UsageRangeTest.combination":181,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":345,"org.easymock.tests.UsageTest.wrongArguments":93,"org.easymock.tests2.MockBuilderTest.testWithConstructor":402,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":425,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":255,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":273,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":142,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":281,"org.easymock.tests.UsageVarargTest.varargShortAccepted":214,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":251,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":179,"org.easymock.tests2.UsageConstraintsTest.cmpTo":62,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":480,"org.easymock.tests2.CompareToTest.testLessThan":502,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":143,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":105,"org.easymock.tests2.CaptureTest.testCaptureFromStub":50,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":297,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":404,"org.easymock.tests.UsageTest.unexpectedCallWithArray":131,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":39,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":178,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":282,"org.easymock.tests2.UsageConstraintsTest.constraints":16,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":310,"org.easymock.samples.ExampleTest.addAndChangeDocument":496,"org.easymock.tests.UsageStrictMockTest.testVerify":312,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":499,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":309,"org.easymock.tests2.CompareToTest.testGreateThan":503,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":198,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":46,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":27,"org.easymock.tests.LimitationsTest.abstractClass":233,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":274,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":28,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":243,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":514,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":208,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":370}}]
