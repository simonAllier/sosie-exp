[{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:70","sourceCode":"java.io.InputStream.close()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[0,1,2,3],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (this.java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:85","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object));\n} ","type":"CtIfImpl"},"failures":[4],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"method","finalizeMethod":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:128","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[5,6],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[7],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:68","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[8],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"argument"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[9],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[10,3,11],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[5,6],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[12,13,14,15],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:63","failures":[],"status":0,"binaryOperator":"(\"Failed to instantiate \" + (java.lang.Class<?>.getName()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[16],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:147","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:142","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.AndroidClassProxyFactory()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if ((this.java.lang.Object) == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[17,18,19,20,21,22,23,24,25,26,27,28],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[29,30,31,32,33,34,35,36,37,38,39,40,41,42],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:324","failures":[43,44,45],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[46,47,48,49],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[40,50,51],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[29,34,35,36,37,38,42],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","bridgeMethod":"hashCodeMethod"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.Capture:82","failures":[17,18,19,20,21,22,23,24,25,26,27,28],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[52],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[53,54],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:40","failures":[55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,43,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,44,45,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,53,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,12,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,9,253,254,255,256,257,258,259,4,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,29,336,337,30,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,10,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,52,377,378,8,5,379,16,380,381,382,383,384,385,386,387,13,388,389,14,15,390,391,392,393,394,395,396,397,398,399,400,401,402,54,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,40,50,51,41,42,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,17,506,18,19,20,21,22,23,507,24,26,27,508,28],"status":-1,"binaryOperator":"(int >= 0)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:51","failures":[509,43,165,268,491],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"position":"org.easymock.internal.RecordState:190","failures":[57,59,60,61,64,65,68,70,129,141,142,143,144,150,153,154,159,160,163,164,165,171,172,173,176,177,178,179,180,186,188,189,44,45,190,191,266,268,269,275,276,277,295,314,315,316,318,320,321,322,325,326,333,344,345,347,350,353,357,358,359,362,363,364,365,367,368,369,370,371,372,374,375,376,52,377,378,8,5,379,16,380,381,383,384,385,386,387,396,401,402,54,404,411,40,50,425,426,427,428,429,430,431,432,433,434,435,436,480,489,491,492,495,17,506,19,20,23,507,24,26,27,508,28],"status":-1,"binaryOperator":"(java.lang.Object instanceof java.lang.Number)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[510,25],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[362,5,383,511],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[365,370,373],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Matches:40","failures":[512],"status":-1,"binaryOperator":"(\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\")))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[377,513],"status":-1,"binaryOperator":"int >= 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[30,514,515,46,47,48,516,40,517,49,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:184","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; ++int) {\n    java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n    } \n    if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n        return false;\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:325","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[371],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[365,367],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[364,365,370,371,373,16,17,18,26],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":365,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":60,"org.easymock.tests2.UsageTest.argumentsOrdered":324,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":435,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":412,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":241,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":319,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":299,"org.easymock.tests2.DelegateToTest.testReturnException":419,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":203,"org.easymock.tests.MockingTest.testPartialClassMocking":134,"org.easymock.tests.MockClassControlTest.testToString":286,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":438,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":70,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":250,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":460,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":456,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":86,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":345,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":34,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":372,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":159,"org.easymock.tests2.UsageTest.wrongArguments":317,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":486,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":256,"org.easymock.samples.ExampleTest.answerVsDelegate":301,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":77,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":139,"org.easymock.tests2.UsageConstraintsTest.testNull":368,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":349,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":434,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":291,"org.easymock.tests2.CaptureTest.testPrimitive":19,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":163,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":105,"org.easymock.tests.UsageTest.moreThanOneArgument":61,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":348,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":57,"org.easymock.tests.UsageTest.argumentsOrdered":67,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":278,"org.easymock.tests.UsageVarargTest.varargIntAccepted":108,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":246,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":292,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":38,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":327,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":445,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":416,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":334,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":234,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":296,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":480,"org.easymock.tests.ReplayStateInvalidUsageTest.times":220,"org.easymock.tests2.DependencyTest.testClassMocking":342,"org.easymock.tests2.AnswerTest.answer":387,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":373,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":248,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":393,"org.easymock.tests2.CaptureTest.testAnd":17,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":74,"org.easymock.tests2.UsageTest.strictResetToDefault":315,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":331,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":356,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":56,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":429,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":143,"org.easymock.tests2.DelegateToTest.testDelegate":423,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":282,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":101,"org.easymock.tests.LimitationsTest.mockFinalMethod":211,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":206,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":196,"org.easymock.tests2.DependencyTest.testClassMockingSupport":343,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":155,"org.easymock.tests2.CaptureTest.testCapture1_2446744":20,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":10,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":99,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":391,"org.easymock.tests.UsageThrowableTest.throwError":186,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":214,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":76,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":417,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":283,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":59,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":474,"org.easymock.samples.PartialClassMockTest.testGetArea":298,"org.easymock.tests.MockingTest.testInterfaceMocking":136,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":215,"org.easymock.tests2.CompareToTest.testLessOrEqual":511,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":293,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":461,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":87,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":262,"org.easymock.tests2.UsageTest.niceToStrict":318,"org.easymock.tests2.ThreadingTest.testChangeDefault":11,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":516,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":232,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":333,"org.easymock.tests2.MockBuilderTest.testCreateMock":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":469,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":483,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":95,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":430,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":73,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":85,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":119,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":254,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":46,"org.easymock.tests.UsageOverloadedMethodTest.overloading":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":471,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":465,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":148,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":377,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":177,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":152,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":52,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":24,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":109,"org.easymock.tests2.EasyMockSupportClassTest.testAll":453,"org.easymock.tests.MockClassControlTest.testEquals":290,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":199,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":103,"org.easymock.tests2.CaptureTest.testCaptureAll":506,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":392,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":194,"org.easymock.tests.MockNameTest.defaultName":128,"org.easymock.tests2.UsageConstraintsTest.testMatches":378,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":58,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":212,"org.easymock.samples.ExampleTest.voteForRemovals":305,"org.easymock.tests.UsageVarargTest.allKinds":117,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":164,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":195,"org.easymock.samples.BasicClassMockTest.testPrintContent":311,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":190,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":487,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":422,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":413,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":207,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":39,"org.easymock.tests2.UsageConstraintsTest.greaterThan":5,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":454,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":142,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":359,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":231,"org.easymock.samples.ExampleTest.voteForRemoval":302,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":402,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":360,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":78,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":446,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":352,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":118,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":314,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":30,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":238,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":427,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":451,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":202,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":418,"org.easymock.tests2.CaptureTest.testCaptureFirst":28,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":12,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":428,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":326,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":151,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":173,"org.easymock.tests2.CaptureTest.testCapture2_2446744":508,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":403,"org.easymock.tests2.UsageTest.moreThanOneArgument":316,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":249,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":339,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":116,"org.easymock.tests.GenericTest.testBridgedEquals":201,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":47,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":514,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":126,"org.easymock.tests.UsageExpectAndReturnTest.longType":169,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":425,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":192,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":104,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":277,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":382,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":102,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":55,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":81,"org.easymock.tests.UsageCallCountTest.tooManyCalls":127,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":470,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":174,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":485,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":91,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":45,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":498,"org.easymock.tests.MockingTest.testNiceClassMocking":140,"org.easymock.tests.MockingTest.testClassMocking":132,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":120,"org.easymock.tests2.UsageConstraintsTest.testContains":376,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":396,"org.easymock.tests2.UsageConstraintsTest.testFind":367,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":154,"org.easymock.tests.MockTypeTest.fromEasyMockClass":75,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":400,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":263,"org.easymock.tests.UsageExpectAndReturnTest.object":176,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":353,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":484,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":433,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":111,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":35,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":260,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":48,"org.easymock.tests.UsageTest.exactCallCountByLastCall":68,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":129,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":237,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":69,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":279,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":42,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":182,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":106,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":147,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":407,"org.easymock.tests.MockClassControlTest.testHashCode":289,"org.easymock.tests2.EasyMockSupportTest.testVerify":437,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":463,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":280,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":145,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":84,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":390,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":496,"org.easymock.tests.UsageVarargTest.varargCharAccepted":110,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":223,"org.easymock.tests2.CaptureTest.testCaptureMultiple":7,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":488,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":253,"org.easymock.tests2.UsageTest.openCallCountByLastCall":320,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":517,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":436,"org.easymock.tests.DefaultClassInstantiatorTest.object":224,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":83,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":464,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":93,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":189,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":478,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":406,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":288,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":357,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":92,"org.easymock.tests.CapturesMatcherTest.test":510,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":183,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":472,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":287,"org.easymock.tests2.UsageTest.resumeIfFailure":325,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":72,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":444,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":205,"org.easymock.tests2.StubTest.stubWithReturnValue":495,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":29,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":175,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":383,"org.easymock.tests2.SerializationTest.testAllMockedMethod":51,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":247,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":32,"org.easymock.samples.SupportTest.voteForRemovals":313,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":197,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":409,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":98,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":9,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":13,"org.easymock.tests.UsageExpectAndThrowTest.object":96,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":71,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":380,"org.easymock.tests2.DelegateToTest.testWrongClass":421,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":272,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":273,"org.easymock.tests.UsageStrictMockTest.range":268,"org.easymock.samples.ConstructorCalledMockTest.testTax":308,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":448,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":432,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":497,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":515,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":97,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":335,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":450,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":66,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":221,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":255,"org.easymock.tests2.CaptureTest.testCaptureNone":507,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":276,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":1,"org.easymock.tests.UsageUnorderedTest.message":158,"org.easymock.tests.UsageVerifyTest.twoReturns":165,"org.easymock.tests.UsageVarargTest.varargByteAccepted":115,"org.easymock.tests2.ThreadingTest.testThreadSafe":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":467,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":124,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":261,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":310,"org.easymock.tests2.CaptureTest.testCapture_2617107":18,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":157,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":162,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":251,"org.easymock.tests2.UsageConstraintsTest.any":374,"org.easymock.tests2.StubTest.stub":494,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":219,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":82,"org.easymock.tests.UsageExpectAndThrowTest.longType":89,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":204,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":252,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":228,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":218,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":490,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":411,"org.easymock.tests2.SerializationTest.testClass":40,"org.easymock.tests.LimitationsTest.mockNativeMethod":210,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":185,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":200,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":477,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":493,"org.easymock.tests2.NameTest.nameForMocksControl":442,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":479,"org.easymock.tests2.MockedExceptionTest.testMockedException":395,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":455,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":65,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":399,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":137,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":90,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":346,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":336,"org.easymock.tests.MockingTest.testNicePartialClassMocking":135,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":351,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":475,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":33,"org.easymock.tests2.CaptureTest.testCaptureLast":23,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":156,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":504,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":371,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":381,"org.easymock.tests.MockingTest.testTwoMocks":133,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":505,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":166,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":94,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":323,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":385,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":3,"org.easymock.samples.ExampleTest.removeNonExistingDocument":306,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":482,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":216,"org.easymock.tests.UsageStrictMockTest.differentMethods":269,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":408,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":226,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":54,"org.easymock.tests2.MockBuilderTest.testCreateMockString":341,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":457,"org.easymock.tests.UsageExpectAndThrowTest.floatType":88,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":452,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":389,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":424,"org.easymock.tests.UsageVerifyTest.twoThrows":43,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":146,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":466,"org.easymock.samples.ExampleTest.voteAgainstRemoval":303,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":242,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":274,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":358,"org.easymock.tests.LimitationsTest.privateConstructor":209,"org.easymock.tests2.UsageConstraintsTest.testNotNull":384,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":394,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":191,"org.easymock.tests2.UsageTest.defaultResetToNice":322,"org.easymock.samples.ExampleTest.voteAgainstRemovals":300,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":181,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":243,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":476,"org.easymock.tests.UsageVarargTest.differentLength":112,"org.easymock.tests2.CallbackTest.callback":405,"org.easymock.tests2.UsageConstraintsTest.equals":366,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":354,"org.easymock.tests.UsageTest.openCallCountByLastCall":64,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":362,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":161,"org.easymock.tests.UsageCallCountTest.tooFewCalls":122,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":500,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":257,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":2,"org.easymock.tests.UsageThrowableTest.throwCheckedException":44,"org.easymock.tests.MockingTest.testStrictClassMocking":131,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":503,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":130,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":499,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":481,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":53,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":502,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":15,"org.easymock.tests2.CompareToTest.testGreateOrEqual":513,"org.easymock.tests.ObjectMethodsTest.testHashCode":4,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":512,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":37,"org.easymock.tests2.NameTest.nameForNiceMock":441,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":404,"org.easymock.tests2.DependencyTest.testInterfaceMocking":344,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":36,"org.easymock.samples.ExampleTest.addDocument":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":468,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":473,"org.easymock.tests2.DelegateToTest.testStubDelegate":420,"org.easymock.tests2.AnswerTest.stubAnswer":14,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":266,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":337,"org.easymock.tests.UsageVarargTest.varargLongAccepted":114,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":270,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":240,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":184,"org.easymock.tests.UsageExpectAndReturnTest.floatType":168,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":41,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":309,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":415,"org.easymock.tests.UsageThrowableTest.noUpperLimit":187,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":149,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":379,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":363,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":443,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":21,"org.easymock.tests2.SerializationTest.test":50,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":225,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":167,"org.easymock.tests2.UsageConstraintsTest.testSame":369,"org.easymock.samples.SupportTest.addDocument":312,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":501,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":458,"org.easymock.tests.GenericTest.testPackageScope":198,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":236,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":414,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":138,"org.easymock.tests2.NameTest.nameForMock":439,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":178,"org.easymock.tests2.UsageStrictMockTest.differentMethods":492,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":340,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":355,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":170,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":100,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":258,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":144,"org.easymock.tests2.MockedExceptionTest.testRealException":397,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":79,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":449,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":245,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":31,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":489,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":244,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":160,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":222,"org.easymock.tests2.NameTest.nameForStrictMock":440,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":332,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":398,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":49,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":350,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":447,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":16,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":227,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":329,"org.easymock.tests2.UsageStrictMockTest.range":491,"org.easymock.tests2.UsageConstraintsTest.lessThan":386,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":410,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":426,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":462,"org.easymock.tests2.CaptureTest.testCaptureRightOne":26,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":0,"org.easymock.tests2.UsageConstraintsTest.testOr":370,"org.easymock.tests.UsageRangeTest.combination":141,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":347,"org.easymock.tests.UsageTest.wrongArguments":63,"org.easymock.tests2.MockBuilderTest.testWithConstructor":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":459,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":285,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":171,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":179,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":233,"org.easymock.tests.UsageVarargTest.varargShortAccepted":113,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":229,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":125,"org.easymock.tests2.UsageConstraintsTest.cmpTo":375,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":388,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":235,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":321,"org.easymock.tests2.CaptureTest.testCaptureFromStub":27,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":213,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":330,"org.easymock.tests.UsageTest.unexpectedCallWithArray":62,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":265,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":123,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":180,"org.easymock.tests2.CaptureTest.testCapture":25,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":267,"org.easymock.tests2.UsageConstraintsTest.constraints":364,"org.easymock.samples.ExampleTest.addAndChangeDocument":307,"org.easymock.tests.UsageStrictMockTest.testVerify":271,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":297,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":264,"org.easymock.tests2.CompareToTest.testGreateThan":6,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":193,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":22,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":294,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":172,"org.easymock.tests.LimitationsTest.abstractClass":208,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":150,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":295,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":509,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":431,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":107}}]
