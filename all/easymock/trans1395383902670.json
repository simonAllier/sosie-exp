[{"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"this.org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[67],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[68,69,70,71,72,73,74,75,76,77,78,79,80,81,2,82,83,84,85,86,87,4,5,8,9,10,11,16,88,18,19,89,90,91,92,93,94,30,31,43,44,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,53,54,110,111,112,113,114,115,116,117,118,119,120,121,122,56,123,124,61,62,125,126,127,128,129,130,131,132,133,134,64,65,135,136,137,138],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[2,139,140,141,142,143,144,145,54,146,147,148,149],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.InjectionPlan:51","failures":[76,79,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"failures":[83,103,105,106,174,145,175,176,53,111,56,177,136,137,138],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[70,178,71,72,73,74,75,179,180,181,1,182,183,184,80,81,2,82,83,84,85,185,186,86,87,187,188,189,190,3,4,5,6,7,8,9,10,11,12,13,14,15,16,88,191,192,193,194,195,17,196,197,18,19,198,199,200,201,0,202,203,204,205,206,207,208,209,94,210,20,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,95,96,97,98,139,99,211,212,213,101,214,102,215,140,216,217,103,218,104,141,142,219,105,106,220,143,221,222,223,224,144,174,145,48,49,50,51,52,225,226,107,227,228,229,230,231,232,108,109,53,54,110,111,112,113,114,233,234,235,236,55,237,115,238,116,117,118,119,239,122,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,56,282,57,58,283,284,285,286,287,59,60,61,62,63,288,289,125,126,127,128,129,131,132,133,134,64,65,66,290,291,292,293,294,295,296,297,298,135,299,300,301,302,146,303,177,136,147,148,137,138,149],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[68,69,70,178,71,72,73,74,304,75,305,305,306,306,76,307,77,78,79,179,180,181,1,182,155,183,308,184,80,81,2,82,83,84,85,185,186,86,87,309,187,188,310,311,189,190,3,4,5,6,7,8,9,10,11,12,13,14,15,16,88,191,192,193,194,195,312,17,196,313,197,314,18,19,198,199,200,201,167,202,203,204,205,206,207,208,209,315,316,317,89,318,319,320,321,322,90,91,92,93,94,210,20,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,95,96,97,98,139,99,211,212,213,100,101,214,323,324,325,102,215,140,216,217,103,218,104,141,142,219,105,106,220,143,326,327,328,329,221,222,223,224,144,174,145,48,49,50,51,52,225,226,107,227,228,229,230,231,232,108,109,53,54,110,111,112,113,114,330,331,332,333,233,234,235,236,55,237,115,238,116,117,118,119,334,120,121,239,122,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,335,336,337,338,260,339,340,341,342,343,344,345,346,347,348,349,261,350,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,56,282,57,58,283,284,285,286,287,59,60,61,62,63,351,288,289,125,126,127,128,129,130,131,132,133,134,64,65,66,290,291,292,293,294,295,296,297,352,298,353,354,355,356,357,358,135,299,300,301,302,146,303,177,136,147,148,137,138,149],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1803","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[359,360,361,362,53,177],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[198,199,200,201,210,140,142,174,226,227,228,229,230,231,232,233,234,235,236,55,237,349,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,58,289,146,148],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:772","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[29],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:230","sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:58","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.IllegalArgumentException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[28],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:181","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:52","sourceCode":"return (int) == (int)","type":"CtReturnImpl"},"failures":[178,2,84,209,25,26,31,32,45,46,95,96,97,98,139,140,217,103,141,142,105,106,143,144,174,145,227,53,54,112,117,119,121,56,289,125,64,65,146,303,136,147,148,137,138,149],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:209","sourceCode":"if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"exception":"candidateParameter","throwableClass":"candidateParameter"}},{"transplant":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:157","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[184,363,185,364,365,366,367,368,369,370],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"failures":[371,22,29,35,47],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"this.org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[210,372,373,374,233,234,235,236,55,237,344,375],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[178,206,208,209,348],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.And:49","sourceCode":"java.util.Iterator<org.easymock.IArgumentMatcher>.next().appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[376],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.EasyMock:1708","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[68,69,70,178,71,72,73,74,304,75,305,305,306,76,307,77,78,79,179,180,181,1,182,155,183,308,184,80,81,2,82,83,84,85,185,186,86,87,309,187,188,310,311,189,190,3,4,5,6,7,8,9,10,11,12,13,14,15,16,88,191,192,193,194,195,312,17,196,313,197,314,18,19,198,199,200,201,167,202,203,204,205,206,207,208,209,315,316,317,89,318,319,320,321,322,90,91,92,93,94,210,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,95,139,377,99,211,212,213,100,101,214,323,324,325,102,215,140,216,217,103,218,104,141,142,219,105,106,220,143,326,327,328,329,221,222,223,224,144,174,145,48,49,50,51,52,226,107,227,228,229,230,231,232,108,109,53,54,110,111,112,113,233,234,235,236,55,237,115,116,117,118,119,334,120,121,239,122,378,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,335,346,347,348,349,379,350,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,56,282,380,57,58,283,284,285,286,287,59,60,61,62,63,351,288,289,125,126,127,128,129,130,131,132,133,134,64,65,66,290,291,292,293,294,381,295,296,297,352,135,299,300,301,302,146,303,177,136,147,148,137,138,149],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"failures":[382,383,384],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:89","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object)","type":"CtReturnImpl"},"failures":[155,156,80,2,82,83,84,85,87,187,188,189,190,191,196,314,385,167,168,316,89,319,320,322,90,22,37,95,96,97,98,213,100,386,323,324,325,102,215,140,217,103,218,104,105,106,220,143,144,174,145,387,225,108,53,54,110,111,112,113,331,388,389,67,390,391,392,393,394,115,116,117,334,120,121,347,379,261,350,56,395,130,353,354,355,299,146,303,177,136,137,138,149],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[151,152,154,157,158,161,163,164,166,169,170,173],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"matched","value":"matched"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[68,69,70,178,71,72,73,74,75,305,306,76,307,77,78,79,179,180,181,1,182,155,183,308,184,80,81,2,82,83,84,85,185,186,86,87,309,187,188,310,311,189,190,3,4,5,6,7,8,9,10,11,12,13,14,15,16,88,191,192,193,194,195,312,17,196,313,197,314,18,396,19,198,199,200,201,167,202,203,204,205,206,207,208,209,315,316,317,89,318,319,320,321,322,90,91,92,93,94,210,20,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,139,99,211,212,213,100,101,214,323,324,325,102,215,140,216,217,103,218,104,141,142,219,105,106,220,143,326,327,328,329,221,222,223,224,144,174,145,48,49,50,51,52,226,107,227,228,229,230,231,232,108,109,53,54,110,111,112,113,233,234,235,236,55,237,116,117,118,119,334,120,121,239,122,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,346,348,349,350,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,56,282,57,58,283,284,285,286,287,59,60,61,62,63,351,288,289,125,126,127,128,129,130,131,132,133,134,64,65,66,290,291,292,293,294,295,296,297,135,299,301,302,146,303,177,136,147,148,137,138,149],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:62","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[68,69,70,178,71,72,73,74,304,75,305,305,306,306,76,307,77,78,79,179,180,181,1,182,155,183,308,184,80,81,2,82,83,84,85,185,186,86,87,309,187,188,310,311,189,190,3,4,5,6,7,8,9,10,11,12,13,14,15,16,88,191,192,193,194,195,312,17,196,313,197,314,18,19,198,199,200,201,167,0,202,203,204,205,206,207,208,209,315,316,317,89,318,319,320,321,322,90,91,92,93,94,210,20,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,95,96,97,98,139,99,211,212,213,100,101,214,323,324,325,102,215,140,216,217,103,218,104,141,142,219,105,106,220,143,326,327,328,329,221,222,223,224,144,174,145,48,49,50,51,52,225,226,107,227,228,229,230,231,232,108,109,53,54,110,111,112,113,114,330,331,332,333,233,234,235,236,55,237,115,238,116,117,118,119,334,120,121,239,122,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,335,336,337,338,260,339,340,341,342,343,344,345,346,347,348,349,261,350,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,56,282,57,58,283,284,285,286,287,59,60,61,62,63,351,288,289,125,126,127,128,129,130,131,132,133,134,64,65,66,290,291,292,293,294,295,296,297,352,298,353,354,355,356,357,358,135,299,300,301,302,146,303,177,136,147,148,137,138,149],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[363,364,365,366,397,398,369],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[399,20,22,38,44],"status":-1,"binaryOperator":"int <= 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[196,296],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:129","sourceCode":"final java.lang.Throwable java.lang.Throwable","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:249","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[23],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[5,13,22],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:122","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:35","sourceCode":"final java.lang.Object java.lang.Object = org.easymock.internal.matchers.Equals.getExpected()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:52","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Double.java.lang.Class<java.lang.Double>, java.lang.Double.java.lang.Double.valueOf(0))","type":"CtInvocationImpl"},"failures":[204,223,237,240,241,248,255,262,263,270,277,66,293],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[139],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":23,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":146,"org.easymock.tests2.UsageTest.argumentsOrdered":106,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":91,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":168,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":104,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":76,"org.easymock.tests2.DelegateToTest.testReturnException":206,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":234,"org.easymock.tests.MockingTest.testPartialClassMocking":295,"org.easymock.tests.MockClassControlTest.testToString":353,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":385,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":262,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":327,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":308,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":364,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":29,"org.easymock.tests2.UsageTest.wrongArguments":103,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":59,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":161,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":223,"org.easymock.samples.ExampleTest.answerVsDelegate":178,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":392,"org.easymock.tests2.UsageConstraintsTest.testNull":25,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":193,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":90,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":358,"org.easymock.tests2.CaptureTest.testPrimitive":6,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":63,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":281,"org.easymock.tests.UsageTest.moreThanOneArgument":303,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":192,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":292,"org.easymock.tests.UsageTest.argumentsOrdered":138,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":380,"org.easymock.tests.UsageVarargTest.varargIntAccepted":127,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":48,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":398,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":213,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":172,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":214,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":52,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":383,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":155,"org.easymock.tests.ReplayStateInvalidUsageTest.times":342,"org.easymock.tests2.AnswerTest.answer":139,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":30,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":205,"org.easymock.tests2.CaptureTest.testAnd":3,"org.easymock.tests2.UsageTest.strictResetToDefault":216,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":196,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":291,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":301,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":318,"org.easymock.tests2.DelegateToTest.testDelegate":209,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":277,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":55,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":287,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":387,"org.easymock.tests2.CaptureTest.testCapture1_2446744":7,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":275,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":203,"org.easymock.tests.UsageThrowableTest.throwError":226,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":337,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":391,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":173,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":294,"org.easymock.samples.PartialClassMockTest.testGetArea":307,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":338,"org.easymock.tests2.CompareToTest.testLessOrEqual":399,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":49,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":389,"org.easymock.tests2.UsageTest.niceToStrict":218,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":263,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":101,"org.easymock.tests2.MockBuilderTest.testCreateMock":325,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":158,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":271,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":359,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":319,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":115,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":221,"org.easymock.tests.UsageOverloadedMethodTest.overloading":288,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":35,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":349,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":251,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":351,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":34,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":12,"org.easymock.tests2.EasyMockSupportClassTest.testAll":326,"org.easymock.tests.MockClassControlTest.testEquals":357,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":122,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":279,"org.easymock.tests2.CaptureTest.testCaptureAll":4,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":204,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":285,"org.easymock.tests.MockNameTest.defaultName":395,"org.easymock.tests2.UsageConstraintsTest.testMatches":36,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":293,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":335,"org.easymock.samples.ExampleTest.voteForRemovals":74,"org.easymock.tests.UsageVarargTest.allKinds":64,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":144,"org.easymock.samples.BasicClassMockTest.testPrintContent":78,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":286,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":231,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":80,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":169,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":237,"org.easymock.tests2.UsageConstraintsTest.greaterThan":38,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":368,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":300,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":314,"org.easymock.samples.ExampleTest.voteForRemoval":71,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":180,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":393,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":312,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":140,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":135,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":370,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":375,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":317,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":227,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":233,"org.easymock.tests2.CaptureTest.testCaptureFirst":16,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":89,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":143,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":350,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":247,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":1,"org.easymock.tests2.CaptureTest.testCapture2_2446744":15,"org.easymock.tests2.UsageTest.moreThanOneArgument":217,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":102,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":134,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":120,"org.easymock.tests.UsageExpectAndReturnTest.longType":243,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":283,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":315,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":280,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":43,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":278,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":290,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":373,"org.easymock.tests.UsageCallCountTest.tooManyCalls":121,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":384,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":116,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":248,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":160,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":267,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":230,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":187,"org.easymock.tests2.UsageConstraintsTest.testContains":33,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":238,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":200,"org.easymock.tests2.UsageConstraintsTest.testFind":24,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":289,"org.easymock.tests.MockTypeTest.fromEasyMockClass":390,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":108,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":19,"org.easymock.tests.UsageExpectAndReturnTest.object":250,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":17,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":159,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":322,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":129,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":365,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":333,"org.easymock.tests.UsageTest.exactCallCountByLastCall":149,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":57,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":123,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":363,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":125,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":256,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":348,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":163,"org.easymock.tests.MockClassControlTest.testHashCode":356,"org.easymock.tests2.EasyMockSupportTest.testVerify":93,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":382,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":124,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":346,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":202,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":0,"org.easymock.tests.UsageVarargTest.varargCharAccepted":128,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":81,"org.easymock.tests2.UsageTest.openCallCountByLastCall":141,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":92,"org.easymock.tests.DefaultClassInstantiatorTest.object":330,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":331,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":176,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":269,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":228,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":153,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":162,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":313,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":355,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":268,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":257,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":372,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":329,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":354,"org.easymock.tests2.UsageTest.resumeIfFailure":220,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":67,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":236,"org.easymock.tests2.StubTest.stubWithReturnValue":210,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":369,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":44,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":249,"org.easymock.tests2.SerializationTest.testAllMockedMethod":86,"org.easymock.samples.SupportTest.voteForRemovals":69,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":360,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":165,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":274,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":377,"org.easymock.tests.UsageExpectAndThrowTest.object":272,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":41,"org.easymock.tests2.DelegateToTest.testWrongClass":208,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":65,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":66,"org.easymock.tests.UsageStrictMockTest.range":111,"org.easymock.samples.ConstructorCalledMockTest.testTax":305,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":321,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":309,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":273,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":323,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":137,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":344,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":222,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":361,"org.easymock.tests2.CaptureTest.testCaptureNone":11,"org.easymock.tests.UsageUnorderedTest.message":56,"org.easymock.tests.UsageVerifyTest.twoReturns":145,"org.easymock.tests.UsageVarargTest.varargByteAccepted":133,"org.easymock.tests2.ThreadingTest.testThreadSafe":179,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":119,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":388,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":77,"org.easymock.tests2.CaptureTest.testCapture_2617107":5,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":62,"org.easymock.tests2.UsageConstraintsTest.any":31,"org.easymock.tests2.StubTest.stub":94,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":341,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":374,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":235,"org.easymock.tests.UsageExpectAndThrowTest.longType":265,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":340,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":82,"org.easymock.tests2.SerializationTest.testClass":185,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":167,"org.easymock.tests.LimitationsTest.mockNativeMethod":282,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":259,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":378,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":152,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":85,"org.easymock.tests2.NameTest.nameForMocksControl":98,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":154,"org.easymock.tests2.MockedExceptionTest.testMockedException":199,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":148,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":396,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":266,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":297,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":88,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":324,"org.easymock.tests.MockingTest.testNicePartialClassMocking":296,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":195,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":150,"org.easymock.tests2.CaptureTest.testCaptureLast":10,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":225,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":190,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":28,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":42,"org.easymock.tests.MockingTest.testTwoMocks":381,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":240,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":270,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":105,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":46,"org.easymock.samples.ExampleTest.removeNonExistingDocument":304,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":157,"org.easymock.tests.UsageStrictMockTest.differentMethods":112,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":260,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":164,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":181,"org.easymock.tests2.ConstraintsToStringTest.andToString":376,"org.easymock.tests2.MockBuilderTest.testCreateMockString":215,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":352,"org.easymock.tests.UsageExpectAndThrowTest.floatType":264,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":37,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":99,"org.easymock.tests.UsageVerifyTest.twoThrows":174,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":328,"org.easymock.samples.ExampleTest.voteAgainstRemoval":72,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":197,"org.easymock.tests2.UsageConstraintsTest.testNotNull":45,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":198,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":232,"org.easymock.tests2.UsageTest.defaultResetToNice":219,"org.easymock.samples.ExampleTest.voteAgainstRemovals":70,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":255,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":151,"org.easymock.tests.UsageVarargTest.differentLength":130,"org.easymock.tests2.CallbackTest.callback":87,"org.easymock.tests.UsageTest.openCallCountByLastCall":147,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":20,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":61,"org.easymock.tests.UsageCallCountTest.tooFewCalls":117,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":310,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":224,"org.easymock.tests.UsageThrowableTest.throwCheckedException":229,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":362,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":189,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":58,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":188,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":156,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":343,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":311,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":212,"org.easymock.tests.ObjectMethodsTest.testHashCode":332,"org.easymock.tests2.CompareToTest.testGreateOrEqual":371,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":397,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":182,"org.easymock.tests2.NameTest.nameForNiceMock":97,"org.easymock.tests2.DependencyTest.testInterfaceMocking":183,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":366,"org.easymock.samples.ExampleTest.addDocument":73,"org.easymock.tests2.DelegateToTest.testStubDelegate":207,"org.easymock.tests2.AnswerTest.stubAnswer":211,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":54,"org.easymock.tests.UsageVarargTest.varargLongAccepted":132,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":113,"org.easymock.tests.UsageExpectAndReturnTest.floatType":242,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":258,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":184,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":306,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":171,"org.easymock.tests.UsageThrowableTest.noUpperLimit":107,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":39,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":379,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":21,"org.easymock.tests2.SerializationTest.test":186,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":8,"org.easymock.tests2.UsageConstraintsTest.testSame":26,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":241,"org.easymock.samples.SupportTest.addDocument":68,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":339,"org.easymock.tests.GenericTest.testPackageScope":239,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":170,"org.easymock.tests2.NameTest.nameForMock":95,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":252,"org.easymock.tests2.UsageStrictMockTest.differentMethods":84,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":244,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":276,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":302,"org.easymock.tests2.MockedExceptionTest.testRealException":201,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":394,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":175,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":2,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":60,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":345,"org.easymock.tests2.NameTest.nameForStrictMock":96,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":18,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":194,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":40,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":100,"org.easymock.tests2.UsageStrictMockTest.range":83,"org.easymock.tests2.UsageConstraintsTest.lessThan":47,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":166,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":316,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":367,"org.easymock.tests2.CaptureTest.testCaptureRightOne":13,"org.easymock.tests2.UsageConstraintsTest.testOr":27,"org.easymock.tests.UsageRangeTest.combination":299,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":191,"org.easymock.tests.UsageTest.wrongArguments":136,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":298,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":245,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":253,"org.easymock.tests.UsageVarargTest.varargShortAccepted":131,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":334,"org.easymock.tests2.UsageConstraintsTest.cmpTo":32,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":142,"org.easymock.tests2.CaptureTest.testCaptureFromStub":14,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":336,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":386,"org.easymock.tests.UsageTest.unexpectedCallWithArray":177,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":53,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":118,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":254,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":110,"org.easymock.tests2.UsageConstraintsTest.constraints":22,"org.easymock.samples.ExampleTest.addAndChangeDocument":75,"org.easymock.tests.UsageStrictMockTest.testVerify":114,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":79,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":109,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":284,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":9,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":50,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":246,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":51,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":261,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":126,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":320}}]
