[{"position":"org.easymock.EasyMock:2000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1831","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EqualsWithDelta(double , double))","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:894","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:49","sourceCode":"org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties()","type":"CtAssignmentImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,0,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1107","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.RecordState:153","failures":[193,194,195,196,282,311,382,383,384,385,386,387],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[164,168],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1672","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(short[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[13,26,27,28,29,30,31,32,39,40,51,52,64,80,508,509,510,511,512,513,514,515,516,517,518,93,95,99,102,152,153,154,156,160,161,170,298,299,301,325,326,327,329,330,331,332,519,520,521,522,523,524,525,378,379,380,381,407,408,409,410,412,413,415,416,417,418,419,420,421,429,447,465],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:54","sourceCode":"return java.lang.Object[] == null ? java.lang.Object[] : java.lang.Object[]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:130","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.Invocation.NO_ARGS":"methodArgs","args":"methodArgs"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[53,112],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.MockBuilder:223","failures":[132],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[509,516,326,519,521,408],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1135","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:324","failures":[255,256,380],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[526],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[453],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:643","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:43","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"failures":[511,512,520],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[76],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:60","sourceCode":"if (!(java.util.Set<java.lang.String>.add(java.lang.String))) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String));\n} ","type":"CtIfImpl"},"failures":[11,200],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[64,69,72],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:140","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType) : org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:71","failures":[22,44,50,51,54,132,142,148,210,211,212,214,215,216,217,220,221,222,246,283,288,494],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[1,2,3,4,5,6,7,13,20,22,23,24,26,27,30,31,33,34,37,38,40,41,42,43,46,49,51,61,62,63,64,66,67,68,69,70,71,73,74,75,76,77,78,79,80,0,81,82,83,85,86,87,88,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,111,114,115,118,119,120,122,123,124,125,129,132,142,148,152,153,155,156,159,162,170,171,172,173,175,176,177,178,179,180,183,184,185,186,187,189,190,191,193,194,195,196,202,210,214,215,216,217,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,244,245,249,250,252,253,281,296,300,301,302,303,304,305,309,310,313,317,318,320,325,327,330,331,332,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,355,362,363,364,365,366,367,374,375,376,377,379,380,381,382,383,384,385,386,387,407,420,458,459,460,462,463,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,504,505,506,507],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[32],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[7,106,108,115,117,118,120,415,444,498],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[243,247],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[63,64,67,69,70,72,81,86,170,172,180],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:852","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[61,63,80,85],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:209","sourceCode":"if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[527],"status":-1,"binaryOperator":"(((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:327","failures":[292,293,307,308],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[20,21,528,22,24,38,39,41,42,43,44,46,47,48,49,50,51,52,53,54,55,58,126,127,129,131,132,133,134,135,137,138,139,140,142,143,144,145,146,147,148,184,185,186,187,190,191,193,194,195,210,529,211,212,530,213,214,215,216,531,217,219,220,221,532,222,243,244,245,246,247,283,288,294,295,296,297,314,315,316,317,318,320,323,354,355,356,357,358,359,360,361,422,423,424,425,426,427,428,490,494,495,496,506,507],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:61","failures":[27,46,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,0,81,82,83,84,85,86,87,88,106,108,113,170,171,172,173,174,175,176,177,178,179,180,181,182,183,209,281,282,309,310,311,312,313,326,327,343,344,345,346,347,348,349,386,429,469],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"failures":[533,534],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[33,35,37,417,498],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"this","value":"delegateTo","this":"lastResult"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[5,390,453],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[291,292,293,312],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:138","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[20,21,531,535],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[422,423,424,425,427,428],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[70],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"failures":[536],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:201","failures":[22,44,50,51,54,132,142,148,210,211,212,214,216,217,221,222,246,283,288,494],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:48","failures":[5,6,7,13,20,22,23,27,29,30,32,33,34,35,36,37,38,39,40,41,42,43,46,50,51,52,61,62,63,64,66,67,68,69,70,71,73,74,75,76,77,78,79,80,0,81,82,83,85,86,87,88,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,108,109,111,112,113,114,115,116,117,118,119,120,129,132,142,148,151,152,153,155,157,158,159,162,163,170,171,173,174,177,178,179,180,181,182,183,184,185,186,187,189,190,191,193,194,195,196,202,211,214,216,217,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,244,246,248,249,250,251,252,253,254,255,256,257,258,281,282,291,292,293,296,299,301,302,303,304,305,306,307,308,309,310,311,312,313,317,318,320,327,329,330,333,334,335,336,337,343,344,345,346,347,348,349,364,372,374,375,376,377,378,379,380,381,382,383,384,385,386,387,406,407,410,411,414,415,417,418,420,429,447,453,455,456,457,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,492,494,497,498,499,500,502,504,506,506,507,507],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append(((org.easymock.internal.ErrorMessage.getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[27,29,30,122,123,124,125,153,154,160,161,326,327,329,330,379,380,381,537,538,539,407,409,412,413,429],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","matches":"matches","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[76],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[423,427],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":64,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":406,"org.easymock.tests2.UsageTest.argumentsOrdered":161,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":103,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":14,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":441,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":156,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":493,"org.easymock.tests2.DelegateToTest.testReturnException":33,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":383,"org.easymock.tests.MockingTest.testPartialClassMocking":317,"org.easymock.tests.MockClassControlTest.testToString":356,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":121,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":450,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":136,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":470,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":132,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":537,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":92,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":280,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":71,"org.easymock.tests2.UsageTest.wrongArguments":154,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":309,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":208,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":352,"org.easymock.samples.ExampleTest.answerVsDelegate":498,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":288,"org.easymock.tests2.UsageConstraintsTest.testNull":67,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":322,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":41,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":102,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":361,"org.easymock.tests2.CaptureTest.testPrimitive":173,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":313,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":489,"org.easymock.tests.UsageTest.moreThanOneArgument":407,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":40,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":303,"org.easymock.tests.UsageTest.argumentsOrdered":413,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":333,"org.easymock.tests.UsageVarargTest.varargIntAccepted":460,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":517,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":446,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":343,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":210,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":18,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":57,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":215,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":433,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":347,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":264,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":512,"org.easymock.tests.ReplayStateInvalidUsageTest.times":396,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":202,"org.easymock.tests2.DependencyTest.testClassMocking":89,"org.easymock.tests2.AnswerTest.answer":115,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":72,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":448,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":4,"org.easymock.tests2.CaptureTest.testAnd":170,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":285,"org.easymock.tests2.UsageTest.strictResetToDefault":152,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":530,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":49,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":302,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":97,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":376,"org.easymock.tests2.DelegateToTest.testDelegate":37,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":337,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":263,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":485,"org.easymock.tests.LimitationsTest.mockFinalMethod":297,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":386,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":342,"org.easymock.tests2.DependencyTest.testClassMockingSupport":90,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":298,"org.easymock.tests2.CaptureTest.testCapture1_2446744":174,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":45,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":483,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":2,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":390,"org.easymock.tests.UsageThrowableTest.throwError":251,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":287,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":19,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":150,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":267,"org.easymock.samples.PartialClassMockTest.testGetArea":494,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":391,"org.easymock.tests.MockingTest.testInterfaceMocking":319,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":344,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":456,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":471,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":405,"org.easymock.tests2.UsageTest.niceToStrict":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":137,"org.easymock.tests2.ThreadingTest.testChangeDefault":110,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":526,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":431,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":214,"org.easymock.tests2.MockBuilderTest.testCreateMock":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":145,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":205,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":509,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":479,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":98,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":284,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":293,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":362,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":350,"org.easymock.tests.UsageOverloadedMethodTest.overloading":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":141,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":418,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":77,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":234,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":248,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":76,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":179,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":461,"org.easymock.tests2.EasyMockSupportClassTest.testAll":129,"org.easymock.tests.MockClassControlTest.testEquals":360,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":245,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":514,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":487,"org.easymock.tests2.CaptureTest.testCaptureAll":171,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":3,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":340,"org.easymock.tests.MockNameTest.defaultName":430,"org.easymock.tests2.UsageConstraintsTest.testMatches":78,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":388,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":304,"org.easymock.samples.ExampleTest.voteForRemovals":502,"org.easymock.tests.UsageVarargTest.allKinds":469,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":379,"org.easymock.samples.BasicClassMockTest.testPrintContent":496,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":341,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":257,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":25,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":387,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":36,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":15,"org.easymock.tests2.UsageConstraintsTest.greaterThan":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":130,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":375,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":52,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":268,"org.easymock.samples.ExampleTest.voteForRemoval":499,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":428,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":111,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":53,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":289,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":44,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":260,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":490,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":151,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":438,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":95,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":127,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":382,"org.easymock.tests2.CaptureTest.testCaptureFirst":183,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":32,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":437,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":96,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":163,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":421,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":230,"org.easymock.tests2.CaptureTest.testCapture2_2446744":182,"org.easymock.tests2.UsageTest.moreThanOneArgument":153,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":449,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":221,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":468,"org.easymock.tests.GenericTest.testBridgedEquals":247,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":369,"org.easymock.tests.UsageExpectAndReturnTest.longType":226,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":93,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":338,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":488,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":84,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":378,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":486,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":301,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":307,"org.easymock.tests.UsageCallCountTest.tooManyCalls":370,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":520,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":146,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":231,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":207,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":475,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":256,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":185,"org.easymock.tests.MockingTest.testNiceClassMocking":323,"org.easymock.tests.MockingTest.testClassMocking":315,"org.easymock.tests2.UsageConstraintsTest.testContains":75,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":363,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":195,"org.easymock.tests2.UsageConstraintsTest.testFind":66,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":250,"org.easymock.tests.MockTypeTest.fromEasyMockClass":286,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":108,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":324,"org.easymock.tests.UsageExpectAndReturnTest.object":233,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":46,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":206,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":527,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":101,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":463,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":403,"org.easymock.tests.UsageTest.exactCallCountByLastCall":414,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":436,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":334,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":371,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":524,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":21,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":458,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":239,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":417,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":9,"org.easymock.tests.MockClassControlTest.testHashCode":359,"org.easymock.tests2.EasyMockSupportTest.testVerify":105,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":139,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":511,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":335,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":415,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":292,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":1,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":209,"org.easymock.tests.UsageVarargTest.varargCharAccepted":462,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":26,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":454,"org.easymock.tests2.UsageTest.openCallCountByLastCall":157,"org.easymock.tests.DefaultClassInstantiatorTest.object":422,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":104,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":291,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":401,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":525,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":477,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":140,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":254,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":200,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":8,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":50,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":266,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":358,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":476,"org.easymock.tests.CapturesMatcherTest.test":534,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":240,"org.easymock.tests.ReplayStateInvalidCallsTest.times":272,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":306,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":273,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":513,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":148,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":357,"org.easymock.tests2.UsageTest.resumeIfFailure":162,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":283,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":56,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":385,"org.easymock.tests2.StubTest.stubWithReturnValue":6,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":531,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":85,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":232,"org.easymock.tests2.SerializationTest.testAllMockedMethod":24,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":447,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":516,"org.easymock.samples.SupportTest.voteForRemovals":492,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":243,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":11,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":482,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":453,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":116,"org.easymock.tests.UsageExpectAndThrowTest.object":480,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":373,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":82,"org.easymock.tests2.DelegateToTest.testWrongClass":35,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":270,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":348,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":349,"org.easymock.samples.ConstructorCalledMockTest.testTax":506,"org.easymock.tests.UsageStrictMockTest.range":329,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":59,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":100,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":184,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":481,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":216,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":412,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":398,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":126,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":351,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":519,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":262,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":457,"org.easymock.tests2.CaptureTest.testCaptureNone":178,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":165,"org.easymock.tests.UsageUnorderedTest.message":429,"org.easymock.tests.UsageVerifyTest.twoReturns":381,"org.easymock.tests.UsageVarargTest.varargByteAccepted":467,"org.easymock.tests2.ThreadingTest.testThreadSafe":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":143,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":367,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":495,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":404,"org.easymock.tests2.CaptureTest.testCapture_2617107":172,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":518,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":300,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":451,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":312,"org.easymock.tests2.UsageConstraintsTest.any":73,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":395,"org.easymock.tests2.StubTest.stub":5,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":308,"org.easymock.tests.UsageExpectAndThrowTest.longType":473,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":452,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":384,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":426,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":394,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":28,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":13,"org.easymock.tests2.SerializationTest.testClass":22,"org.easymock.tests.LimitationsTest.mockNativeMethod":296,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":242,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":246,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":199,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":278,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":31,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":166,"org.easymock.tests2.NameTest.nameForMocksControl":125,"org.easymock.tests2.MockedExceptionTest.testMockedException":194,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":131,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":411,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":474,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":107,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":320,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":38,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":217,"org.easymock.tests.MockingTest.testNicePartialClassMocking":318,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":43,"org.easymock.tests2.CaptureTest.testCaptureLast":177,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":197,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":299,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":191,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":70,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":277,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":83,"org.easymock.tests.MockingTest.testTwoMocks":316,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":274,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":192,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":223,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":478,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":160,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":87,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":169,"org.easymock.samples.ExampleTest.removeNonExistingDocument":503,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":392,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":204,"org.easymock.tests.UsageStrictMockTest.differentMethods":330,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":10,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":424,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":168,"org.easymock.tests2.ConstraintsToStringTest.andToString":515,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":112,"org.easymock.tests2.MockBuilderTest.testCreateMockString":222,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":354,"org.easymock.tests.UsageExpectAndThrowTest.floatType":472,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":133,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":128,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":118,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":528,"org.easymock.tests.UsageVerifyTest.twoThrows":380,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":416,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":142,"org.easymock.samples.ExampleTest.voteAgainstRemoval":500,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":455,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":442,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":51,"org.easymock.tests.LimitationsTest.privateConstructor":295,"org.easymock.tests2.UsageConstraintsTest.testNotNull":86,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":193,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":258,"org.easymock.tests2.UsageTest.defaultResetToNice":159,"org.easymock.samples.ExampleTest.voteAgainstRemovals":497,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":443,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":238,"org.easymock.tests.UsageVarargTest.differentLength":464,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":198,"org.easymock.tests2.CallbackTest.callback":7,"org.easymock.tests2.UsageConstraintsTest.equals":65,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":522,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":47,"org.easymock.tests.UsageTest.openCallCountByLastCall":410,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":61,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":311,"org.easymock.tests.UsageCallCountTest.tooFewCalls":365,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":187,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":353,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":167,"org.easymock.tests.UsageThrowableTest.throwCheckedException":255,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":521,"org.easymock.tests.MockingTest.testStrictClassMocking":314,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":190,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":282,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":186,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":203,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":397,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":189,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":120,"org.easymock.tests.ObjectMethodsTest.testHashCode":402,"org.easymock.tests2.NameTest.nameForNiceMock":124,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":114,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":276,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":271,"org.easymock.tests2.DependencyTest.testInterfaceMocking":91,"org.easymock.samples.ExampleTest.addDocument":501,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":149,"org.easymock.tests2.DelegateToTest.testStubDelegate":34,"org.easymock.tests2.AnswerTest.stubAnswer":119,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":327,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":218,"org.easymock.tests.UsageVarargTest.varargLongAccepted":466,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":331,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":440,"org.easymock.tests.UsageExpectAndReturnTest.floatType":225,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":241,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":20,"org.easymock.tests2.ConstraintsToStringTest.orToString":508,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":507,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":419,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":0,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":17,"org.easymock.tests.UsageThrowableTest.noUpperLimit":252,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":62,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":55,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":175,"org.easymock.tests2.SerializationTest.test":23,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":423,"org.easymock.tests2.UsageConstraintsTest.testSame":68,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":224,"org.easymock.samples.SupportTest.addDocument":491,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":188,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":261,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":134,"org.easymock.tests.GenericTest.testPackageScope":244,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":336,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":435,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":16,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":321,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":259,"org.easymock.tests2.NameTest.nameForMock":122,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":235,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":532,"org.easymock.tests2.UsageStrictMockTest.differentMethods":30,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":48,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":227,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":484,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":400,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":377,"org.easymock.tests2.MockedExceptionTest.testRealException":196,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":290,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":445,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":60,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":523,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":535,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":444,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":27,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":399,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":310,"org.easymock.tests2.NameTest.nameForStrictMock":123,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":213,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":106,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":42,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":58,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":538,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":425,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":81,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":211,"org.easymock.tests2.UsageStrictMockTest.range":29,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":265,"org.easymock.tests2.UsageConstraintsTest.lessThan":88,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":439,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":94,"org.easymock.tests2.CaptureTest.testCaptureRightOne":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":138,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":164,"org.easymock.tests2.UsageConstraintsTest.testOr":69,"org.easymock.tests.UsageRangeTest.combination":374,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":39,"org.easymock.tests.UsageTest.wrongArguments":409,"org.easymock.tests2.MockBuilderTest.testWithConstructor":529,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":135,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":355,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":228,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":432,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":236,"org.easymock.tests.UsageVarargTest.varargShortAccepted":465,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":427,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":368,"org.easymock.tests2.UsageConstraintsTest.cmpTo":74,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":279,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":117,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":434,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":158,"org.easymock.tests2.CaptureTest.testCaptureFromStub":181,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":389,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":212,"org.easymock.tests.UsageTest.unexpectedCallWithArray":408,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":275,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":326,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":366,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":536,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":237,"org.easymock.tests2.CaptureTest.testCapture":533,"org.easymock.tests2.UsageConstraintsTest.constraints":63,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":328,"org.easymock.samples.ExampleTest.addAndChangeDocument":504,"org.easymock.tests2.ConstraintsToStringTest.notToString":510,"org.easymock.tests.UsageStrictMockTest.testVerify":332,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":505,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":325,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":339,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":176,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":345,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":229,"org.easymock.tests.LimitationsTest.abstractClass":294,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":420,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":346,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":539,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":459,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":99}}]
