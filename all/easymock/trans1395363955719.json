[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1815","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EndsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"suffix"}},{"transplant":{"position":"org.easymock.internal.Injector:75","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[1,2,3],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[4],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:920","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"failures":[26,27,28,29,30,31],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[32,33,34,35,12,13,14,15,36,37,38,18,22,39,23,24,25],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[40,41,42,43,44,45,46,47,48,26,27,49,50,51,52,53,54,55,56,57,58,59,60,61,6,7,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,2,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,0,122,5,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,4,138,139,140,141,142,143,8,9,10,11,144,145,146,147,148,149,150,151,152,153,12,154,155,156,157,158,159,160,161,162,163,164,165,166,16,17,167,168,169,170,171,172,173,174,175,19,20,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,22],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:288","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:324","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    if (java.lang.reflect.Type == null) {\n        java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n    } \n    if (java.lang.reflect.Type != null) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } \n} ","type":"CtIfImpl"},"failures":[271],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"genericInterface":"actualTypeArgument","typeVariableMap":"typeVariableMap","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[264],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[272,273],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (this.java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:85","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object));\n} ","type":"CtIfImpl"},"failures":[41,42,43,44,45,47,48,26,26,27,27,50,54,55,274,275,56,57,276,58,59,60,277,6,278,279,7,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,280,78,79,80,81,82,83,281,282,84,85,283,86,87,88,89,90,91,284,92,285,286,93,94,95,96,97,98,99,287,100,101,102,1,104,2,288,289,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,0,122,5,123,124,125,126,127,128,290,129,130,131,132,133,134,135,136,137,4,138,139,291,140,141,142,143,144,292,293,145,146,147,148,294,295,149,151,152,296,297,298,153,12,13,154,155,299,300,156,14,15,157,301,158,159,160,161,302,303,304,305,162,163,164,166,16,17,167,168,169,170,171,306,307,308,309,173,174,310,311,312,313,314,315,18,19,316,317,20,176,318,319,320,321,322,323,324,178,179,180,181,182,183,325,326,327,328,329,330,186,190,331,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,332,333,334,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,21,233,335,336,337,338,339,234,340,341,235,236,237,238,239,240,241,342,272,242,343,243,244,254,255,256,257,258,259,260,261,262,263,264,344,345,346,266,347,348,349,350,351,267,268,269,270,352,22,39,23,353,354,24,25,355],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"hashCodeMethod","finalizeMethod":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[156],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:246","sourceCode":"final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:111","sourceCode":"final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.createTypeVariableMap(java.lang.reflect.Method.getDeclaringClass())","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[279,13,14,15,16,17,356,18,317,357,21,39,23,24,25],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[358],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[95,96,97,98,120,16,309,310,311,312,313,314,178,179,180,181,182,183,334,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,340,244],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[292,146,147,359],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:363","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[350],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[55,274],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,274,275,56,57,58,59,60,277,61,6,278,279,7,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,280,78,79,80,81,82,83,282,84,85,283,86,87,88,89,90,284,92,285,93,94,97,99,104,2,288,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,0,122,5,123,124,125,126,127,128,290,129,130,131,132,133,134,135,136,137,4,138,139,291,140,141,142,143,8,9,10,11,144,145,146,147,294,149,151,152,296,298,153,12,13,154,155,299,300,156,14,15,157,301,158,159,160,161,166,16,17,167,168,169,170,171,309,173,174,310,311,312,313,314,315,175,18,19,316,317,20,176,177,182,184,186,187,188,189,360,361,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,332,333,334,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,21,233,336,337,234,340,240,241,342,272,242,343,243,244,245,246,247,248,249,362,250,251,252,253,254,255,256,262,263,264,266,267,268,269,270,352,22,23,353,354,24,25,355],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:44","failures":[40,41,42,43,44,45,46,47,363,48,26,27,49,50,51,52,53,54,55,274,275,56,364,365,366,367,368,57,276,369,370,371,372,373,374,375,58,59,60,376,377,277,61,6,278,279,7,62,63,64,65,66,67,68,69,70,378,71,72,73,379,74,75,76,77,280,78,79,80,81,82,83,281,282,84,85,283,86,87,88,89,380,381,90,28,382,91,284,92,285,383,286,93,384,94,95,96,97,98,385,386,387,388,389,99,287,390,391,392,393,394,395,100,101,102,103,1,104,2,288,289,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,0,122,5,396,123,124,125,126,127,128,290,129,130,131,132,133,134,135,136,137,4,138,139,291,140,141,142,143,397,8,9,10,11,144,292,293,145,146,147,148,29,294,295,398,399,149,150,151,400,152,358,401,402,296,31,297,403,404,405,406,407,408,409,298,153,12,13,154,155,299,300,156,14,15,157,301,410,411,412,158,413,414,159,415,416,417,418,419,420,421,422,423,160,424,425,426,427,428,161,429,430,302,303,304,305,162,163,164,165,166,16,17,167,168,169,170,171,431,306,432,307,308,172,309,173,174,310,311,312,313,314,315,175,18,19,316,317,20,176,177,318,319,320,433,434,435,436,437,438,439,440,441,442,321,322,443,323,324,178,179,180,181,182,183,444,325,445,446,326,327,328,329,330,184,185,186,187,188,189,447,360,361,271,190,191,331,448,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,449,450,451,452,453,454,455,456,457,458,459,460,332,461,333,334,462,212,357,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,21,463,464,233,465,335,336,337,338,339,234,340,341,235,236,237,238,239,240,241,342,272,242,343,243,244,245,246,247,466,248,249,362,250,251,252,253,254,255,256,257,258,259,260,261,467,468,469,262,263,470,264,471,472,473,474,265,344,345,346,475,476,477,266,347,348,349,478,479,480,273,481,482,359,483,484,485,3,486,487,488,489,490,350,491,492,493,494,495,351,496,267,268,269,270,352,22,39,23,353,354,24,25,355],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:665","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:49","sourceCode":"java.lang.StringBuffer.append((((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\"))","type":"CtInvocationImpl"},"failures":[497,498,499,500,501,57,5],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[26,27,60,376,63,69,73,379,502,503,29,398,400,401,30,31,410,411,412,158,413,414,159,415,416,417,418,419,420,421,422,423,160,424,425,426,427,428,161,429,430],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:148","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[438,504,505],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:34","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(byte.byte, java.lang.Byte.java.lang.Byte)","type":"CtInvocationImpl"},"failures":[506],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1568","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(T))","type":"CtInvocationImpl"},"failures":[74,83,5,124,127,290,141],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:325","sourceCode":"java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[1,2,3],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:50","failures":[26,27,60,376,63,69,73,379,502,503,29,398,400,401,30,31,410,411,412,158,413,414,159,415,416,417,418,419,420,421,422,423,160,424,425,426,427,428,161,429,430],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[4],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":5,"org.easymock.tests2.UsageTest.argumentsOrdered":15,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":352,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":116,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":287,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":3,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":155,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":49,"org.easymock.tests2.DelegateToTest.testReturnException":104,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":179,"org.easymock.tests.MockingTest.testPartialClassMocking":262,"org.easymock.tests.MockClassControlTest.testToString":344,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":397,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":493,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":418,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":159,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":213,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":59,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":128,"org.easymock.tests2.UsageTest.wrongArguments":13,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":240,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":373,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":164,"org.easymock.samples.ExampleTest.answerVsDelegate":43,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":328,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":472,"org.easymock.tests2.UsageConstraintsTest.testNull":124,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":87,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":477,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":115,"org.easymock.tests2.CaptureTest.testPrimitive":77,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":242,"org.easymock.tests.UsageTest.moreThanOneArgument":22,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":232,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":86,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":259,"org.easymock.tests.UsageTest.argumentsOrdered":25,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":335,"org.easymock.tests.UsageVarargTest.varargIntAccepted":247,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":490,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":167,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":148,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":405,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":393,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":150,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":480,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":171,"org.easymock.tests.ReplayStateInvalidUsageTest.times":457,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":57,"org.easymock.tests2.DependencyTest.testClassMocking":374,"org.easymock.tests2.AnswerTest.answer":144,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":290,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":491,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":103,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":446,"org.easymock.tests2.CaptureTest.testAnd":74,"org.easymock.tests2.UsageTest.strictResetToDefault":153,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":398,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":91,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":258,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":110,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":269,"org.easymock.tests2.DelegateToTest.testDelegate":105,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":339,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":228,"org.easymock.tests.LimitationsTest.mockFinalMethod":465,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":182,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":239,"org.easymock.tests2.DependencyTest.testClassMockingSupport":375,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":307,"org.easymock.tests2.CaptureTest.testCapture1_2446744":280,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":381,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":226,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":101,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":451,"org.easymock.tests.UsageThrowableTest.throwError":309,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":327,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":444,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":394,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":261,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":502,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":430,"org.easymock.samples.PartialClassMockTest.testGetArea":50,"org.easymock.tests.MockingTest.testInterfaceMocking":470,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":452,"org.easymock.tests2.CompareToTest.testLessOrEqual":501,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":168,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":419,"org.easymock.tests2.UsageTest.niceToStrict":154,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":214,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":324,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":478,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":149,"org.easymock.tests2.MockBuilderTest.testCreateMock":402,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":426,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":370,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":32,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":222,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":111,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":445,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":349,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":184,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":162,"org.easymock.tests.UsageOverloadedMethodTest.overloading":243,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":428,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":423,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":133,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":334,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":203,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":343,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":504,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":132,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":82,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":466,"org.easymock.tests.MockClassControlTest.testEquals":476,"org.easymock.tests2.EasyMockSupportClassTest.testAll":158,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":191,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":33,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":230,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":102,"org.easymock.tests2.CaptureTest.testCaptureAll":75,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":237,"org.easymock.tests.MockNameTest.defaultName":341,"org.easymock.tests2.UsageConstraintsTest.testMatches":134,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":449,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":260,"org.easymock.samples.ExampleTest.voteForRemovals":47,"org.easymock.tests.UsageVarargTest.allKinds":254,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":166,"org.easymock.samples.BasicClassMockTest.testPrintContent":52,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":238,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":313,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":277,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":390,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":183,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":289,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":506,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":440,"org.easymock.tests2.UsageConstraintsTest.greaterThan":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":413,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":268,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":285,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":441,"org.easymock.samples.ExampleTest.voteForRemoval":44,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":55,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":383,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":329,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":406,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":380,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":266,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":298,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":401,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":483,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":108,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":411,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":178,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":1,"org.easymock.tests2.CaptureTest.testCaptureFirst":84,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":359,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":109,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":301,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":357,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":199,"org.easymock.tests2.UsageTest.moreThanOneArgument":12,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":275,"org.easymock.tests2.CaptureTest.testCapture2_2446744":282,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":492,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":296,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":253,"org.easymock.tests.GenericTest.testBridgedEquals":448,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":360,"org.easymock.tests.UsageExpectAndReturnTest.longType":195,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":106,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":235,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":231,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":291,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":302,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":229,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":257,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":319,"org.easymock.tests.UsageCallCountTest.tooManyCalls":361,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":427,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":200,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":372,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":218,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":312,"org.easymock.tests.MockingTest.testNiceClassMocking":473,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":68,"org.easymock.tests.MockingTest.testClassMocking":468,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":185,"org.easymock.tests2.UsageConstraintsTest.testContains":131,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":97,"org.easymock.tests2.UsageConstraintsTest.testFind":123,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":244,"org.easymock.tests.MockTypeTest.fromEasyMockClass":326,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":94,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":315,"org.easymock.tests.UsageExpectAndReturnTest.object":202,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":90,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":371,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":114,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":249,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":443,"org.easymock.tests.UsageTest.exactCallCountByLastCall":355,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":234,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":482,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":431,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":336,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":38,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":376,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":208,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":245,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":333,"org.easymock.tests.MockClassControlTest.testHashCode":475,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":386,"org.easymock.tests2.EasyMockSupportTest.testVerify":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":421,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":337,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":332,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":348,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":100,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":395,"org.easymock.tests.UsageVarargTest.varargCharAccepted":248,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":433,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":61,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":496,"org.easymock.tests2.UsageTest.openCallCountByLastCall":299,"org.easymock.tests.DefaultClassInstantiatorTest.object":434,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":117,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":347,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":321,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":422,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":220,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":310,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":367,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":385,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":284,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":346,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":219,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":209,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":161,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":345,"org.easymock.tests2.UsageTest.resumeIfFailure":157,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":325,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":404,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":181,"org.easymock.tests2.StubTest.stubWithReturnValue":120,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":400,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":140,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":201,"org.easymock.tests2.SerializationTest.testAllMockedMethod":65,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":350,"org.easymock.samples.SupportTest.voteForRemovals":41,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":34,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":271,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":388,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":225,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":351,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":292,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":432,"org.easymock.tests.UsageExpectAndThrowTest.object":223,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":138,"org.easymock.tests2.DelegateToTest.testWrongClass":288,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":255,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":256,"org.easymock.samples.ConstructorCalledMockTest.testTax":26,"org.easymock.tests.UsageStrictMockTest.range":317,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":408,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":113,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":67,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":224,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":151,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":459,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":410,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":24,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":163,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":36,"org.easymock.tests2.CaptureTest.testCaptureNone":81,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":305,"org.easymock.tests.UsageUnorderedTest.message":21,"org.easymock.tests.UsageVerifyTest.twoReturns":17,"org.easymock.tests.UsageVarargTest.varargByteAccepted":252,"org.easymock.tests2.ThreadingTest.testThreadSafe":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":424,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":189,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":51,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":323,"org.easymock.tests2.CaptureTest.testCapture_2617107":76,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":35,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":172,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":494,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":272,"org.easymock.tests2.UsageConstraintsTest.any":129,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":456,"org.easymock.tests2.StubTest.stub":119,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":320,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":495,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":180,"org.easymock.tests.UsageExpectAndThrowTest.longType":216,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":438,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":455,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":278,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":99,"org.easymock.tests2.SerializationTest.testClass":63,"org.easymock.tests.LimitationsTest.mockNativeMethod":233,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":211,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":331,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":366,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":62,"org.easymock.tests2.NameTest.nameForMocksControl":11,"org.easymock.tests2.MockedExceptionTest.testMockedException":96,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":414,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":354,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":384,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":217,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":264,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":85,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":152,"org.easymock.tests.MockingTest.testNicePartialClassMocking":263,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":89,"org.easymock.tests2.CompareToTest.testCompareEqual":499,"org.easymock.tests2.CaptureTest.testCaptureLast":80,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":364,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":308,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":127,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":73,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":139,"org.easymock.tests.MockingTest.testTwoMocks":469,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":379,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":192,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":221,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":14,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":142,"org.easymock.samples.ExampleTest.removeNonExistingDocument":363,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":453,"org.easymock.tests.UsageStrictMockTest.differentMethods":20,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":369,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":387,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":436,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":274,"org.easymock.tests2.MockBuilderTest.testCreateMockString":297,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":474,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":415,"org.easymock.tests.UsageExpectAndThrowTest.floatType":215,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":412,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":145,"org.easymock.tests.UsageVerifyTest.twoThrows":16,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":377,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":461,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":160,"org.easymock.samples.ExampleTest.voteAgainstRemoval":45,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":486,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":303,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":92,"org.easymock.tests.LimitationsTest.privateConstructor":464,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":503,"org.easymock.tests2.UsageConstraintsTest.testNotNull":141,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":95,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":314,"org.easymock.tests2.UsageTest.defaultResetToNice":156,"org.easymock.samples.ExampleTest.voteAgainstRemovals":42,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":487,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":207,"org.easymock.tests.UsageVarargTest.differentLength":362,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":365,"org.easymock.tests2.CallbackTest.callback":66,"org.easymock.tests2.UsageConstraintsTest.equals":396,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":28,"org.easymock.tests.UsageTest.openCallCountByLastCall":353,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":121,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":342,"org.easymock.tests.UsageCallCountTest.tooFewCalls":187,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":70,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":165,"org.easymock.tests.UsageThrowableTest.throwCheckedException":311,"org.easymock.tests.MockingTest.testStrictClassMocking":467,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":37,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":72,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":340,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":69,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":276,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":458,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":71,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":147,"org.easymock.tests2.CompareToTest.testGreateOrEqual":500,"org.easymock.tests.ObjectMethodsTest.testHashCode":322,"org.easymock.tests2.NameTest.nameForNiceMock":10,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":56,"org.easymock.tests2.DependencyTest.testInterfaceMocking":58,"org.easymock.samples.ExampleTest.addDocument":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":425,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":429,"org.easymock.tests2.DelegateToTest.testStubDelegate":2,"org.easymock.tests2.AnswerTest.stubAnswer":146,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":19,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":358,"org.easymock.tests.UsageVarargTest.varargLongAccepted":251,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":176,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":485,"org.easymock.tests.UsageExpectAndReturnTest.floatType":194,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":210,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":60,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":27,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":462,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":392,"org.easymock.tests.UsageThrowableTest.noUpperLimit":173,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":137,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":0,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":403,"org.easymock.tests2.SerializationTest.test":64,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":78,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":505,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":435,"org.easymock.tests2.UsageConstraintsTest.testSame":125,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":193,"org.easymock.samples.SupportTest.addDocument":40,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":378,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":454,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":416,"org.easymock.tests.GenericTest.testPackageScope":190,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":481,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":391,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":471,"org.easymock.tests2.NameTest.nameForMock":8,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":204,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":31,"org.easymock.tests2.UsageStrictMockTest.differentMethods":7,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":382,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":196,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":227,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":442,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":270,"org.easymock.tests2.MockedExceptionTest.testRealException":98,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":330,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":489,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":409,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":488,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":6,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":460,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":241,"org.easymock.tests2.NameTest.nameForStrictMock":9,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":399,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":93,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":88,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":407,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":437,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":4,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":294,"org.easymock.tests2.UsageStrictMockTest.range":279,"org.easymock.tests2.UsageConstraintsTest.lessThan":143,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":389,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":484,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":420,"org.easymock.tests2.CaptureTest.testCaptureRightOne":83,"org.easymock.tests2.UsageConstraintsTest.testOr":126,"org.easymock.tests.UsageRangeTest.combination":267,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":283,"org.easymock.tests.UsageTest.wrongArguments":23,"org.easymock.tests2.MockBuilderTest.testWithConstructor":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":417,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":265,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":197,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":479,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":205,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":439,"org.easymock.tests.UsageVarargTest.varargShortAccepted":250,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":447,"org.easymock.tests2.UsageConstraintsTest.cmpTo":130,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":293,"org.easymock.tests2.CompareToTest.testLessThan":497,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":273,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":300,"org.easymock.tests2.CaptureTest.testCaptureFromStub":281,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":450,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":295,"org.easymock.tests.UsageTest.unexpectedCallWithArray":39,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":18,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":188,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":30,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":206,"org.easymock.tests2.UsageConstraintsTest.constraints":122,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":316,"org.easymock.samples.ExampleTest.addAndChangeDocument":48,"org.easymock.tests.UsageStrictMockTest.testVerify":177,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":53,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":175,"org.easymock.tests2.CompareToTest.testGreateThan":498,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":236,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":79,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":169,"org.easymock.tests.LimitationsTest.abstractClass":463,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":198,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":170,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":212,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":112,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":246}}]
