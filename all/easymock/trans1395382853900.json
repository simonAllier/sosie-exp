[{"transplant":{"position":"org.easymock.EasyMock:760","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:215","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[16],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[17,18,19,20,21,22,23,24,25,26,27,28],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"arg":"arg"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arg":"mock"}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:622","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:42","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[29],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:83","failures":[4,30,31,32,33,34,7,8,35,36,10,37,38,39,14],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"failures":[40,41],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MockBuilder:205","failures":[42,43,44,45,46,47,48,49,50,51,17,52,53,18,54,55,40,56,19,57,58,59,60,61,21,62,63,22,64,41,65,66,67,68,69,70,71],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:346","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[72,73,74,75],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"method":"method"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:137","sourceCode":"return java.util.List<T>.toString()","type":"CtReturnImpl"},"failures":[76],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[77],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","name":"name","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,5,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,6,7,8,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,16,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,9,11,190,191,49,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,29,224,225,226,227,228,229,230,231,232,233,234,50,235,236,237,238,239,240,241,242,243,51,55,40,244,12,245,246,247,248,63,249,250,251,252,253,254,255,256,257,258,259,260,261,67,262,23,263,24,264,265,266,267,268,269,270,271,13,15,272],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:152","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:40","sourceCode":"if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[273],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","delegateTo":"answer"}},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,5,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,6,7,8,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,16,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,9,11,190,191,49,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,29,224,225,226,227,228,229,230,231,232,233,234,50,235,236,237,238,239,240,241,242,243,51,55,40,244,12,245,246,247,248,63,249,250,251,252,253,254,255,256,257,258,259,260,261,67,262,23,263,24,264,265,266,267,268,269,270,271,13,15,272],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[153,160,274,275,197,198,200,202,203,218,29,224,225,229,230,232,233],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:146","sourceCode":"try {\n    return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory();\n} catch (final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError) {\n    throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError);\n}","type":"CtTryImpl"},"failures":[42,276,277,43,43,44,44,45,90,91,46,278,279,280,92,281,105,282,283,284,285,286,287,288,289,290,291,116,117,118,292,293,154,294,295,296,297,298,299,47,48,300,301,302,303,49,192,193,304,305,50,236,51,52,53,54,55,40,56,57,59,60,61,62,63,22,255,77,257,258,259,41,260,65,306,261,66,67,307,308,68,309,262,23,310,263,24,311,312,313,314,315,316,69,317,318,319,320,321,322,323,324,325,70,326,327,328,329,330,71,331,332],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cached":"org.easymock.internal.MocksControl.classProxyFactory"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[203],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:105","failures":[333,334,335,336,78,79,80,81,82,83,337,84,72,338,339,73,74,85,86,87,88,89,93,94,95,96,97,98,99,100,101,102,103,104,340,341,342,4,343,344,345,346,347,348,349,350,351,352,353,354,106,107,108,109,110,355,111,112,356,357,358,359,360,5,31,32,361,362,33,34,363,113,364,365,366,367,368,114,115,369,370,371,372,373,374,375,376,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,6,7,8,144,145,146,377,147,148,378,149,150,151,152,153,155,156,157,158,159,160,274,275,161,379,380,16,381,382,383,384,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,385,182,183,386,387,388,389,390,184,35,391,392,393,185,186,187,188,394,189,36,9,395,10,11,190,191,396,397,398,399,400,401,402,403,404,405,406,273,407,408,409,410,411,75,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,49,192,193,194,195,196,197,198,442,199,200,201,202,203,204,443,205,206,207,208,209,210,211,212,213,214,215,216,444,217,218,219,220,445,446,447,448,449,450,451,452,453,454,455,456,457,221,222,458,459,223,460,461,462,463,464,465,466,467,468,469,470,471,29,224,225,226,472,227,228,229,230,231,232,473,474,233,234,475,235,476,237,238,477,478,239,240,241,242,243,479,244,12,37,245,246,480,481,247,38,39,248,482,249,483,484,250,251,252,253,485,254,256,486,264,265,266,487,267,268,269,270,488,271,13,489,14,15,272],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":198,"org.easymock.tests2.UsageTest.argumentsOrdered":39,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":360,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":437,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":452,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":413,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":246,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":333,"org.easymock.tests2.DelegateToTest.testReturnException":237,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":94,"org.easymock.tests.MockingTest.testPartialClassMocking":116,"org.easymock.tests.MockClassControlTest.testToString":294,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":487,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":357,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":422,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":320,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":162,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":69,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":0,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":475,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":204,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":159,"org.easymock.tests2.UsageTest.wrongArguments":37,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":471,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":187,"org.easymock.samples.ExampleTest.answerVsDelegate":79,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":48,"org.easymock.tests2.UsageConstraintsTest.testNull":200,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":376,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":257,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":436,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":299,"org.easymock.tests2.CaptureTest.testPrimitive":226,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":161,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":181,"org.easymock.tests.UsageTest.moreThanOneArgument":5,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":256,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":108,"org.easymock.tests.UsageTest.argumentsOrdered":34,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":72,"org.easymock.tests.UsageVarargTest.varargIntAccepted":146,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":418,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":139,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":51,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":456,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":302,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":40,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":273,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":143,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":465,"org.easymock.tests.ReplayStateInvalidUsageTest.times":351,"org.easymock.tests2.DependencyTest.testClassMocking":304,"org.easymock.tests2.AnswerTest.answer":249,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":443,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":420,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":243,"org.easymock.tests2.CaptureTest.testAnd":29,"org.easymock.tests2.UsageTest.strictResetToDefault":244,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":18,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":261,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":107,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":431,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":157,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":74,"org.easymock.tests2.DelegateToTest.testDelegate":239,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":177,"org.easymock.tests.LimitationsTest.mockFinalMethod":281,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":97,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":89,"org.easymock.tests2.DependencyTest.testClassMockingSupport":305,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":379,"org.easymock.tests2.CaptureTest.testCapture1_2446744":472,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":175,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":241,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":345,"org.easymock.tests.UsageThrowableTest.throwError":368,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":382,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":457,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":110,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":332,"org.easymock.samples.PartialClassMockTest.testGetArea":42,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":346,"org.easymock.tests.MockingTest.testInterfaceMocking":374,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":140,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":397,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":404,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":163,"org.easymock.tests2.UsageTest.niceToStrict":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":321,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":405,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":55,"org.easymock.tests2.MockBuilderTest.testCreateMock":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":328,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":468,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":171,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":432,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":367,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":99,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":185,"org.easymock.tests.UsageOverloadedMethodTest.overloading":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":330,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":389,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":209,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":130,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":355,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":208,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":231,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":377,"org.easymock.tests.MockClassControlTest.testEquals":298,"org.easymock.tests2.EasyMockSupportClassTest.testAll":314,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":91,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":179,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":87,"org.easymock.tests2.CaptureTest.testCaptureAll":224,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":242,"org.easymock.tests.MockNameTest.defaultName":359,"org.easymock.tests2.UsageConstraintsTest.testMatches":210,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":109,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":343,"org.easymock.samples.ExampleTest.voteForRemovals":83,"org.easymock.tests.UsageVarargTest.allKinds":153,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":6,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":88,"org.easymock.samples.BasicClassMockTest.testPrintContent":277,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":372,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":488,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":478,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":453,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":98,"org.easymock.tests2.UsageConstraintsTest.greaterThan":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":315,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":156,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":307,"org.easymock.samples.ExampleTest.voteForRemoval":80,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":288,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":222,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":308,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":383,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":41,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":479,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":105,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":59,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":411,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":429,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":312,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":93,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":476,"org.easymock.tests2.CaptureTest.testCaptureFirst":233,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":410,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":430,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":482,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":35,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":126,"org.easymock.tests2.CaptureTest.testCapture2_2446744":474,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":459,"org.easymock.tests2.UsageTest.moreThanOneArgument":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":421,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":61,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":152,"org.easymock.tests.GenericTest.testBridgedEquals":278,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":28,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":341,"org.easymock.tests.UsageExpectAndReturnTest.longType":122,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":427,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":85,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":180,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":444,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":385,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":178,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":392,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":106,"org.easymock.tests.UsageCallCountTest.tooManyCalls":342,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":329,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":127,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":470,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":167,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":371,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":262,"org.easymock.tests.MockingTest.testNiceClassMocking":292,"org.easymock.tests.MockingTest.testClassMocking":290,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":100,"org.easymock.tests2.UsageConstraintsTest.testContains":207,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":193,"org.easymock.tests2.UsageConstraintsTest.testFind":199,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":112,"org.easymock.tests.MockTypeTest.fromEasyMockClass":381,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":394,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":254,"org.easymock.tests.UsageExpectAndReturnTest.object":129,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":260,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":469,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":435,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":148,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":402,"org.easymock.tests.UsageTest.exactCallCountByLastCall":363,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":409,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":338,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":356,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":22,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":144,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":135,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":388,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":447,"org.easymock.tests.MockClassControlTest.testHashCode":297,"org.easymock.tests2.EasyMockSupportTest.testVerify":439,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":323,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":339,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":386,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":366,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":240,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":445,"org.easymock.tests.UsageVarargTest.varargCharAccepted":147,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":271,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":426,"org.easymock.tests2.UsageTest.openCallCountByLastCall":480,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":438,"org.easymock.tests.DefaultClassInstantiatorTest.object":282,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":365,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":400,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":30,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":324,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":369,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":463,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":446,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":66,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":296,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":168,"org.easymock.tests.CapturesMatcherTest.test":76,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":136,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":71,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":295,"org.easymock.tests2.UsageTest.resumeIfFailure":248,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":47,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":301,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":96,"org.easymock.tests2.StubTest.stubWithReturnValue":265,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":19,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":128,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":217,"org.easymock.tests2.SerializationTest.testAllMockedMethod":236,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":419,"org.easymock.samples.SupportTest.voteForRemovals":336,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":45,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":449,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":174,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":425,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":483,"org.easymock.tests.UsageExpectAndThrowTest.object":172,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":358,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":215,"org.easymock.tests2.DelegateToTest.testWrongClass":477,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":182,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":183,"org.easymock.samples.ConstructorCalledMockTest.testTax":43,"org.easymock.tests.UsageStrictMockTest.range":10,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":440,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":434,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":309,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":173,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":56,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":311,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":353,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":186,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":398,"org.easymock.tests2.CaptureTest.testCaptureNone":230,"org.easymock.tests.UsageUnorderedTest.message":4,"org.easymock.tests.UsageVerifyTest.twoReturns":8,"org.easymock.tests.UsageVarargTest.varargByteAccepted":151,"org.easymock.tests2.ThreadingTest.testThreadSafe":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":326,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":104,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":403,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":276,"org.easymock.tests2.CaptureTest.testCapture_2617107":225,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":16,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":423,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":275,"org.easymock.tests2.UsageConstraintsTest.any":205,"org.easymock.tests2.StubTest.stub":264,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":350,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":393,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":424,"org.easymock.tests.UsageExpectAndThrowTest.longType":165,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":95,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":286,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":349,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":489,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":451,"org.easymock.tests2.SerializationTest.testClass":50,"org.easymock.tests.LimitationsTest.mockNativeMethod":92,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":138,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":46,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":462,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":272,"org.easymock.tests2.NameTest.nameForMocksControl":270,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":464,"org.easymock.tests2.MockedExceptionTest.testMockedException":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":316,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":362,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":485,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":166,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":118,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":255,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":57,"org.easymock.tests.MockingTest.testNicePartialClassMocking":117,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":259,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":460,"org.easymock.tests2.CaptureTest.testCaptureLast":229,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":380,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":24,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":203,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":216,"org.easymock.tests.MockingTest.testTwoMocks":291,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":25,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":119,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":170,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":38,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":219,"org.easymock.samples.ExampleTest.removeNonExistingDocument":337,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":467,"org.easymock.tests.UsageStrictMockTest.differentMethods":11,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":347,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":448,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":284,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":458,"org.easymock.tests2.MockBuilderTest.testCreateMockString":62,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":293,"org.easymock.tests.UsageExpectAndThrowTest.floatType":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":317,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":313,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":250,"org.easymock.tests.UsageVerifyTest.twoThrows":7,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":64,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":70,"org.easymock.samples.ExampleTest.voteAgainstRemoval":81,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":414,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":396,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":67,"org.easymock.tests.LimitationsTest.privateConstructor":280,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":27,"org.easymock.tests2.UsageConstraintsTest.testNotNull":218,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":49,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":373,"org.easymock.tests2.UsageTest.defaultResetToNice":247,"org.easymock.samples.ExampleTest.voteAgainstRemovals":78,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":415,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":134,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":461,"org.easymock.tests.UsageVarargTest.differentLength":378,"org.easymock.tests2.CallbackTest.callback":266,"org.easymock.tests2.UsageConstraintsTest.equals":442,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":65,"org.easymock.tests.UsageTest.openCallCountByLastCall":361,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":195,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":274,"org.easymock.tests.UsageCallCountTest.tooFewCalls":102,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":310,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":188,"org.easymock.tests.UsageThrowableTest.throwCheckedException":370,"org.easymock.tests.MockingTest.testStrictClassMocking":289,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":263,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":364,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":466,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":23,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":352,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":486,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":252,"org.easymock.tests.ObjectMethodsTest.testHashCode":401,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":223,"org.easymock.tests2.NameTest.nameForNiceMock":269,"org.easymock.tests2.DependencyTest.testInterfaceMocking":234,"org.easymock.samples.ExampleTest.addDocument":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":327,"org.easymock.tests2.DelegateToTest.testStubDelegate":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":331,"org.easymock.tests2.AnswerTest.stubAnswer":251,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":9,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":58,"org.easymock.tests.UsageVarargTest.varargLongAccepted":150,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":190,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":412,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":137,"org.easymock.tests.UsageExpectAndReturnTest.floatType":121,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":63,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":44,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":455,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":390,"org.easymock.tests.UsageThrowableTest.noUpperLimit":114,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":213,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":196,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":300,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":227,"org.easymock.tests2.SerializationTest.test":235,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":283,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":120,"org.easymock.tests2.UsageConstraintsTest.testSame":201,"org.easymock.samples.SupportTest.addDocument":335,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":318,"org.easymock.tests.GenericTest.testPackageScope":90,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":73,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":408,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":454,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":375,"org.easymock.tests2.NameTest.nameForMock":267,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":131,"org.easymock.tests2.UsageStrictMockTest.differentMethods":15,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":21,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":306,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":123,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":176,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":399,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":158,"org.easymock.tests2.MockedExceptionTest.testRealException":194,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":384,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":441,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":417,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":416,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":13,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":160,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":354,"org.easymock.tests2.NameTest.nameForStrictMock":268,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":54,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":253,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":258,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":303,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":1,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":214,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":285,"org.easymock.tests.ErrorMessageTest.testGetters":2,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":52,"org.easymock.tests2.UsageStrictMockTest.range":14,"org.easymock.tests2.UsageConstraintsTest.lessThan":220,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":450,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":428,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":75,"org.easymock.tests2.CaptureTest.testCaptureRightOne":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":322,"org.easymock.tests2.UsageConstraintsTest.testOr":202,"org.easymock.tests.UsageRangeTest.combination":155,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":77,"org.easymock.tests.UsageTest.wrongArguments":32,"org.easymock.tests2.MockBuilderTest.testWithConstructor":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":319,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":154,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":124,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":406,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":132,"org.easymock.tests.UsageVarargTest.varargShortAccepted":149,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":287,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":340,"org.easymock.tests2.UsageConstraintsTest.cmpTo":206,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":407,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":481,"org.easymock.tests2.CaptureTest.testCaptureFromStub":473,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":344,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":53,"org.easymock.tests.UsageTest.unexpectedCallWithArray":31,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":36,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":103,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":20,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":133,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":395,"org.easymock.tests2.UsageConstraintsTest.constraints":197,"org.easymock.samples.ExampleTest.addAndChangeDocument":84,"org.easymock.tests.UsageStrictMockTest.testVerify":191,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":334,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":189,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":86,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":228,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":141,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":125,"org.easymock.tests.LimitationsTest.abstractClass":279,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":184,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":142,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":433,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":145,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":3}}]
