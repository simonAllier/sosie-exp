[{"transplant":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"this.org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:1746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:34","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"failures":[1,2,3,4],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,1,2,192,193,194,195,3,4,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[257],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"m","bridgeMethod":"m"}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[258],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[259],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:257","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andReturn(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[260,10,11,13,14,16,20,261,23,43,44,45,262,46,47,49,50,53,54,56,58,59,60,61,62,63,263,264,265,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,105,106,107,108,109,112,133,134,141,143,144,266,267,268,269,270,271,272,273,149,150,151,152,153,154,155,156,157,158,159,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,189,190,191,1,2,192,193,194,195,3,4,196,198,199,202,203,204,205,207,208,209,210,274,211,214,275,276,277,217,218,219,221,223,224,227,228,278,229,231,235,236,237,238,239,240,241,279,243,280,281,244,245,282,283,247,251,253,254,256,284,285,286],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","answer":"value"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Matches:40","sourceCode":"java.lang.StringBuffer.append(((\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[287],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"failures":[288],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"failures":[289,290],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[167,168,170,172,173,291,184,189,4,197,205],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[260,5,6,292,292,293,293,20,21,261,23,37,294,263,264,265,163,274,212,295,296,297,275,298,276,277,299,300,301,278,302,235,236,238,239,240,303,241,258,304,279,242,243,280,281,244,282,283,256,284,285,286],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"type":"searchType"}},{"position":"org.easymock.internal.RecordState:280","failures":[12,136,305,213,214,215,306,216],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[181,222,239],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:49","sourceCode":"java.lang.StringBuffer.append((((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\"))","type":"CtInvocationImpl"},"failures":[307,308,309,310,311],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:35","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Short.java.lang.Class<java.lang.Short>.getName(), java.lang.Short.java.lang.Class<java.lang.Short>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[24,25,26,27,28,29,45,46,50,55,56,58,59,60,61,62,63,90,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,137,161,162,163,164,217,224,247],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"result"}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[46,50,58,90,217,224],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"failures":[308],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:122","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.StartsWith:40","sourceCode":"java.lang.StringBuffer.append(((\"startsWith(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[312],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:322","sourceCode":"for (final java.lang.Class<?> java.lang.Class<?> : java.lang.Class<?>[]) {\n    if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n        return true;\n    } \n}","type":"CtForEachImpl"},"failures":[313,314,315,316],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"exception":"throwableClass","throwableClass":"throwableClass"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[11,12,13,14,15,16,17,317,318,319,320,321,20,21,23,24,25,26,27,28,29,322,323,30,31,32,33,36,324,37,38,39,40,41,42,44,45,46,47,325,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,263,264,265,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,101,102,326,105,327,106,107,108,109,110,111,112,328,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,329,330,331,332,333,138,139,140,141,142,143,144,145,146,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,189,190,191,334,1,2,192,193,194,195,4,196,197,198,199,200,201,202,203,204,205,206,207,208,209,274,211,212,213,214,215,216,335,336,337,338,295,275,298,300,301,217,218,219,220,221,222,223,224,339,225,226,227,228,278,229,230,231,232,233,234,235,236,237,238,239,240,241,258,279,280,281,282,283,246,247,248,340,341,342,343,249,250,251,252,253,254,255],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:62","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:878","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":168,"org.easymock.tests2.UsageTest.argumentsOrdered":226,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":46,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":158,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":27,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":222,"org.easymock.tests2.StubTest.stubWithReturnValue":247,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":73,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":7,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":188,"org.easymock.tests2.SerializationTest.testAllMockedMethod":212,"org.easymock.tests2.DelegateToTest.testReturnException":213,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":25,"org.easymock.tests.MockingTest.testPartialClassMocking":263,"org.easymock.samples.SupportTest.voteForRemovals":10,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":262,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":125,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":284,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":113,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":259,"org.easymock.tests.UsageExpectAndThrowTest.object":123,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":210,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":185,"org.easymock.tests2.DelegateToTest.testWrongClass":215,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":133,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":134,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":174,"org.easymock.tests2.UsageTest.wrongArguments":220,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":108,"org.easymock.samples.ConstructorCalledMockTest.testTax":292,"org.easymock.tests.UsageStrictMockTest.range":143,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":332,"org.easymock.samples.ExampleTest.answerVsDelegate":12,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":243,"org.easymock.tests2.UsageConstraintsTest.testNull":170,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":238,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":124,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":276,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":104,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":157,"org.easymock.tests2.CaptureTest.testPrimitive":198,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":112,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":51,"org.easymock.tests.UsageTest.moreThanOneArgument":47,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":132,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":331,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":237,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":40,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":268,"org.easymock.tests2.CaptureTest.testCaptureNone":203,"org.easymock.tests.UsageUnorderedTest.message":36,"org.easymock.tests.UsageVerifyTest.twoReturns":91,"org.easymock.tests.UsageVarargTest.varargByteAccepted":100,"org.easymock.tests2.ThreadingTest.testThreadSafe":2,"org.easymock.tests.UsageTest.argumentsOrdered":52,"org.easymock.tests.UsageVarargTest.varargIntAccepted":94,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":33,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":5,"org.easymock.tests2.CaptureTest.testCapture_2617107":197,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":84,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":271,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":111,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":298,"org.easymock.tests2.UsageConstraintsTest.any":175,"org.easymock.tests2.StubTest.stub":246,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":316,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":88,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":272,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":26,"org.easymock.tests.UsageExpectAndThrowTest.longType":116,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":252,"org.easymock.tests2.SerializationTest.testClass":274,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":1,"org.easymock.tests.LimitationsTest.mockNativeMethod":23,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":3,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":261,"org.easymock.tests2.AnswerTest.answer":229,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":83,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":291,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":338,"org.easymock.tests2.CaptureTest.testAnd":4,"org.easymock.tests2.UsageTest.strictResetToDefault":218,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":258,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":255,"org.easymock.tests2.NameTest.nameForMocksControl":343,"org.easymock.tests2.MockedExceptionTest.testMockedException":162,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":39,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":106,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":153,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":50,"org.easymock.tests2.DelegateToTest.testDelegate":216,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":265,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":117,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":235,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":277,"org.easymock.tests.MockingTest.testNicePartialClassMocking":264,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":128,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":240,"org.easymock.tests2.CompareToTest.testCompareEqual":309,"org.easymock.tests2.CaptureTest.testCaptureLast":202,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":28,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":328,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":283,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":173,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":321,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":186,"org.easymock.tests.MockingTest.testTwoMocks":294,"org.easymock.tests2.CaptureTest.testCapture1_2446744":199,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":288,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":64,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":126,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":336,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":121,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":225,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":190,"org.easymock.tests.UsageThrowableTest.throwError":56,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":324,"org.easymock.tests.UsageStrictMockTest.differentMethods":144,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":193,"org.easymock.tests2.MockBuilderTest.testCreateMockString":301,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":42,"org.easymock.tests.UsageExpectAndThrowTest.floatType":115,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":181,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":230,"org.easymock.tests.UsageVerifyTest.twoThrows":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":285,"org.easymock.samples.PartialClassMockTest.testGetArea":260,"org.easymock.tests2.CompareToTest.testLessOrEqual":311,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":85,"org.easymock.samples.ExampleTest.voteAgainstRemoval":14,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":270,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":267,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":266,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":279,"org.easymock.tests2.UsageTest.niceToStrict":221,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":114,"org.easymock.tests2.UsageConstraintsTest.testNotNull":189,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":63,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":161,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":275,"org.easymock.tests2.UsageTest.defaultResetToNice":339,"org.easymock.tests2.MockBuilderTest.testCreateMock":299,"org.easymock.samples.ExampleTest.voteAgainstRemovals":11,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":79,"org.easymock.tests.UsageVarargTest.differentLength":97,"org.easymock.tests2.CallbackTest.callback":248,"org.easymock.tests.UsageTest.openCallCountByLastCall":49,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":122,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":154,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":312,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":165,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":314,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":322,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":330,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":110,"org.easymock.tests.UsageCallCountTest.tooFewCalls":31,"org.easymock.tests.UsageOverloadedMethodTest.overloading":44,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":137,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":179,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":244,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":75,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":43,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":178,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":204,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":333,"org.easymock.tests.UsageThrowableTest.throwCheckedException":60,"org.easymock.tests2.EasyMockSupportClassTest.testAll":256,"org.easymock.tests.MockClassControlTest.testEquals":103,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":21,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":130,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":302,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":337,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":319,"org.easymock.tests2.CaptureTest.testCaptureAll":196,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":282,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":55,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":281,"org.easymock.tests2.UsageConstraintsTest.testMatches":180,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":245,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":232,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":41,"org.easymock.tests2.CompareToTest.testGreateOrEqual":310,"org.easymock.samples.ExampleTest.voteForRemovals":16,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":287,"org.easymock.tests2.NameTest.nameForNiceMock":342,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":195,"org.easymock.tests.UsageVarargTest.allKinds":102,"org.easymock.tests2.DependencyTest.testInterfaceMocking":209,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":89,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":320,"org.easymock.samples.BasicClassMockTest.testPrintContent":6,"org.easymock.samples.ExampleTest.addDocument":15,"org.easymock.tests2.DelegateToTest.testStubDelegate":214,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":62,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":249,"org.easymock.tests2.AnswerTest.stubAnswer":231,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":306,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":29,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":141,"org.easymock.tests2.UsageConstraintsTest.greaterThan":182,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":327,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":242,"org.easymock.tests.UsageVarargTest.varargLongAccepted":99,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":145,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":269,"org.easymock.samples.ExampleTest.voteForRemoval":13,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":192,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":82,"org.easymock.tests.UsageExpectAndReturnTest.floatType":66,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":303,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":278,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":293,"org.easymock.tests.UsageThrowableTest.noUpperLimit":57,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":183,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":217,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":37,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":166,"org.easymock.tests2.SerializationTest.test":211,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":200,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":0,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":151,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":58,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":65,"org.easymock.tests2.UsageConstraintsTest.testSame":171,"org.easymock.samples.SupportTest.addDocument":9,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":24,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":305,"org.easymock.tests2.CaptureTest.testCaptureFirst":208,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":152,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":228,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":71,"org.easymock.tests.GenericTest.testPackageScope":20,"org.easymock.tests2.UsageTest.moreThanOneArgument":219,"org.easymock.tests2.CaptureTest.testCapture2_2446744":207,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":194,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":300,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":101,"org.easymock.tests.GenericTest.testBridgedEquals":22,"org.easymock.tests2.NameTest.nameForMock":340,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":34,"org.easymock.tests.UsageExpectAndReturnTest.longType":67,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":317,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":149,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":76,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":131,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":187,"org.easymock.tests2.UsageStrictMockTest.differentMethods":254,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":129,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":315,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":38,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":68,"org.easymock.tests.UsageCallCountTest.tooManyCalls":35,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":127,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":147,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":107,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":30,"org.easymock.tests2.MockedExceptionTest.testRealException":164,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":72,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":251,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":118,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":61,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":109,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":280,"org.easymock.tests2.NameTest.nameForStrictMock":341,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":323,"org.easymock.tests2.UsageConstraintsTest.testContains":177,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":163,"org.easymock.tests2.UsageConstraintsTest.testFind":169,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":45,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":233,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":239,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":234,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":138,"org.easymock.tests.UsageExpectAndReturnTest.object":74,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":184,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":241,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":296,"org.easymock.tests2.UsageStrictMockTest.range":253,"org.easymock.tests2.UsageConstraintsTest.lessThan":191,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":156,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":96,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":148,"org.easymock.tests.UsageTest.exactCallCountByLastCall":53,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":257,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":54,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":150,"org.easymock.tests2.CaptureTest.testCaptureRightOne":205,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":18,"org.easymock.tests2.UsageConstraintsTest.testOr":172,"org.easymock.tests.UsageRangeTest.combination":105,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":236,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":92,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":80,"org.easymock.tests.UsageTest.wrongArguments":48,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":136,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":326,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":69,"org.easymock.tests2.EasyMockSupportTest.testVerify":160,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":77,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":19,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":313,"org.easymock.tests.UsageVarargTest.varargShortAccepted":98,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":135,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":335,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":334,"org.easymock.tests2.UsageConstraintsTest.cmpTo":176,"org.easymock.tests.UsageVarargTest.varargCharAccepted":95,"org.easymock.tests2.CompareToTest.testLessThan":307,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":250,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":273,"org.easymock.tests2.UsageTest.openCallCountByLastCall":223,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":224,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":159,"org.easymock.tests2.CaptureTest.testCaptureFromStub":206,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":297,"org.easymock.tests.UsageTest.unexpectedCallWithArray":325,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":120,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":59,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":140,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":32,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":78,"org.easymock.tests2.CaptureTest.testCapture":290,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":304,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":142,"org.easymock.tests2.UsageConstraintsTest.constraints":167,"org.easymock.samples.ExampleTest.addAndChangeDocument":17,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":119,"org.easymock.tests.CapturesMatcherTest.test":289,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":81,"org.easymock.tests.UsageStrictMockTest.testVerify":146,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":286,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":139,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":318,"org.easymock.tests2.CompareToTest.testGreateThan":308,"org.easymock.tests2.UsageTest.resumeIfFailure":227,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":201,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":86,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":70,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":329,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":87,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":93,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":155}}]
