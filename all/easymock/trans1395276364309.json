[{"position":"org.easymock.internal.LastControl:92","failures":[0,1,2,3,4,5,6,7,8],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"failures":[9,10,11,12,13],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"failures":[14,15,16],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[3,4,6,17],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[18,19,20],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:72","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = org.easymock.internal.IClassInstantiator","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:71","failures":[21,22,23,24,25,26,27],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[28,17,29,30],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[31,32,33,34],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[35,36,37,38],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:206","sourceCode":"final java.lang.NoSuchFieldException java.lang.NoSuchFieldException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[39,40],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.EndsWith:40","sourceCode":"java.lang.StringBuffer.append(((\"endsWith(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[41],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,9,60,61,62,63,64,65,66,0,67,1,68,69,70,71,72,73,2,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,3,4,95,96,97,5,6,17,98,99,100,101,29,102,103,104,105,8,106,107,108,109,110,30,12,22,13,23,24,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,35,36,37,129,130,131,132,133,134,135,136,137,138,139,140,27,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[42,43,44,45,46,47,270,52,53,271,272,54,55,56,57,58,59,9,60,61,62,63,64,65,66,0,67,1,68,273,69,70,71,72,73,2,274,275,74,75,76,77,78,276,79,80,81,82,10,83,84,277,85,278,86,279,87,88,280,89,90,281,282,91,283,284,92,285,93,94,3,4,95,96,97,5,6,17,98,99,100,101,29,102,103,104,105,8,106,107,286,108,109,110,30,12,21,22,13,23,24,287,25,26,111,112,113,288,289,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,35,36,37,129,130,290,131,132,133,134,135,136,137,138,139,140,27,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,291,291,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,292,199,293,200,294,295,201,202,204,205,206,207,208,210,211,212,213,216,217,218,219,296,297,298,299,220,221,222,300,223,224,301,302,303,304,305,306,225,307,308,309,310,311,312,313,226,227,228,229,230,231,232,233,234,235,237,239,240,241,242,243,244,245,246,314,315,247,316,317,318,319,249,250,251,252,253,254,255,256,257,258,320,259,260,261,262,263,321,264,322,265,266,267,268,269],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[323,324,325,326,327,56,328,329,57,330,331,332,333,334,335,336,337,338,58,339,340,341,342,343,59,344,345,9,60,61,78,276,80,81,82,10,83,346,347,84,277,85,278,348,11,12,349,21,350,351,22,13,23,24,352,287,25,353,26,111,354,355,35,37,134,135,136,137,139,140,27,142,143,151,151,152,152,356,357,358,156,157,158,359,360,361,212,213,362,363,364,365,222,366,367,236,368,369,370,371,372,373,374,39,375,376,377,40,378,379,380,241],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[35,36,37,38],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.EndsWith:40","sourceCode":"java.lang.StringBuffer.append(((\"endsWith(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[41],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[56,57,58,59,61,78,276,80,81,82,10,83,84,277,85,278,11,12,21,350,22,13,23,24,287,25,26,111,35,37,134,135,136,137,139,140,27,142,143,151,151,152,152,358,156,157,158,360,212,213,362,222,367,236,368,369,370,371,379,380,241],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:772","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[17],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[87],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[0,67,1,68,2,274,3,4,95,96,97,5,6,17,7,98,8,106,109,110],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"failures":[381],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[382,383,384,385,386],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:205","sourceCode":"java.lang.reflect.Constructor<?>.setAccessible(true)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:83","failures":[272,280,283,284,293,295,307,308,311,312,387,388,243,244,319,321],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:90","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[389,390,391],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"this.java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[276,84,278,11,12,21,350,23,24,287,25,26,135,136,139,140,360,367,368,369,370,371,379,380],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","toStringMethod":"hashCodeMethod","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:32","sourceCode":"new java.util.concurrent.locks.ReentrantLock()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.EqualsWithDelta:27","sourceCode":"-3018631689416120154L","type":"CtUnaryOperatorImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"failures":[323,392,393,324,394,395,42,396,397,43,44,45,46,398,47,399,48,49,50,51,270,52,53,271,272,54,55,325,326,327,56,328,329,57,330,331,332,333,334,335,336,337,338,58,339,340,341,342,343,59,344,345,9,60,61,62,63,64,65,66,400,0,67,1,68,273,69,70,71,72,73,2,274,275,74,401,402,75,76,403,404,405,406,407,408,409,410,411,412,413,77,389,414,415,416,417,418,78,276,79,80,81,82,10,419,83,346,347,84,277,85,278,348,11,420,421,422,423,424,86,390,425,426,427,428,429,279,87,88,280,89,90,281,282,91,283,284,92,285,93,94,3,4,430,95,96,97,5,6,17,7,98,99,100,101,29,102,103,104,105,8,106,107,286,108,109,110,30,12,21,350,351,22,13,23,24,431,352,287,25,26,111,354,112,432,113,288,289,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,35,36,37,433,129,130,290,434,131,132,133,134,135,136,137,435,138,139,140,381,27,141,142,143,144,145,146,147,148,149,436,150,151,152,153,154,155,437,356,357,358,156,157,438,158,439,440,359,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,292,199,293,200,294,295,201,202,203,465,466,467,468,469,360,204,205,206,207,208,31,32,209,210,211,361,212,213,362,363,470,471,472,214,215,216,217,218,219,296,297,298,299,220,221,364,365,222,366,300,223,224,301,302,303,304,305,306,225,307,308,309,310,311,312,313,226,227,228,229,473,474,475,476,477,478,14,479,230,231,232,233,234,235,367,236,368,369,370,371,372,373,237,238,239,240,374,39,375,376,377,40,378,480,481,482,15,379,483,484,485,391,380,486,487,241,488,489,490,491,492,493,494,495,496,497,498,499,242,243,244,245,246,314,315,247,316,33,317,318,34,248,319,249,250,251,252,253,254,255,256,500,257,258,320,259,260,261,262,263,321,264,322,501,16,502,265,266,267,268,269,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"failures":[361,363],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[272,280,283,284,293,295,307,308,311,312,388,243,244,319,321],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[525,526,293,307,527,528],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:251","sourceCode":"java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:201","failures":[57,58,59,9,10,346,277,85,11,12,21,350,351,22,23,24,431,352,25,26,111,354,35,27,151,151,152,152,361,362,379,380],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"failures":[111,384,529,530,531,385,386,532],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[8],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:80","failures":[10,12,349,21,350,22,13,23,24,287,25,353,26,35,27,362,379,380],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":4,"org.easymock.tests2.UsageTest.argumentsOrdered":284,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":306,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":125,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":389,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":451,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":90,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":155,"org.easymock.tests2.DelegateToTest.testReturnException":129,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":231,"org.easymock.tests.MockingTest.testPartialClassMocking":156,"org.easymock.tests.MockClassControlTest.testToString":368,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":399,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":14,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":460,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":333,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":179,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":57,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":76,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":524,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":529,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":17,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":245,"org.easymock.tests2.UsageTest.wrongArguments":280,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":429,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":228,"org.easymock.samples.ExampleTest.answerVsDelegate":145,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":380,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":440,"org.easymock.tests2.UsageConstraintsTest.testNull":96,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":80,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":124,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":373,"org.easymock.tests2.CaptureTest.testPrimitive":68,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":247,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":198,"org.easymock.tests.UsageTest.moreThanOneArgument":225,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":79,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":206,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":473,"org.easymock.tests.UsageTest.argumentsOrdered":312,"org.easymock.tests.UsageVarargTest.varargIntAccepted":256,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":456,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":249,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":386,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":12,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":417,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":393,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":443,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":253,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":508,"org.easymock.tests.ReplayStateInvalidUsageTest.times":496,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":86,"org.easymock.tests2.DependencyTest.testClassMocking":401,"org.easymock.tests2.AnswerTest.answer":42,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":458,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":66,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":484,"org.easymock.tests2.CaptureTest.testAnd":0,"org.easymock.tests2.UsageTest.strictResetToDefault":87,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":84,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":205,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":119,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":239,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":477,"org.easymock.tests2.DelegateToTest.testDelegate":131,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":507,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":194,"org.easymock.tests.LimitationsTest.mockFinalMethod":366,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":234,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":269,"org.easymock.tests2.DependencyTest.testClassMockingSupport":402,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":31,"org.easymock.tests2.CaptureTest.testCapture1_2446744":273,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":419,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":192,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":64,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":490,"org.easymock.tests.UsageThrowableTest.throwError":300,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":391,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":418,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":345,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":511,"org.easymock.samples.PartialClassMockTest.testGetArea":27,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":491,"org.easymock.tests.MockingTest.testInterfaceMocking":438,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":250,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":16,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":180,"org.easymock.tests2.UsageTest.niceToStrict":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":334,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":360,"org.easymock.tests2.ThreadingTest.testChangeDefault":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":441,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":20,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":22,"org.easymock.tests2.MockBuilderTest.testCreateMock":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":341,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":426,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":525,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":188,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":120,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":483,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":482,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":214,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":226,"org.easymock.tests.UsageOverloadedMethodTest.overloading":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":343,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":29,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":318,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":170,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":299,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":101,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":73,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":500,"org.easymock.tests2.EasyMockSupportClassTest.testAll":56,"org.easymock.tests.MockClassControlTest.testEquals":372,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":213,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":196,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":65,"org.easymock.tests2.CaptureTest.testCaptureAll":67,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":267,"org.easymock.tests.MockNameTest.defaultName":437,"org.easymock.tests2.UsageConstraintsTest.testMatches":102,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":488,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":207,"org.easymock.samples.ExampleTest.voteForRemovals":149,"org.easymock.tests.UsageVarargTest.allKinds":263,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":242,"org.easymock.samples.BasicClassMockTest.testPrintContent":143,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":268,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":304,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":270,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":434,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":414,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":235,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":532,"org.easymock.tests2.UsageConstraintsTest.greaterThan":104,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":328,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":238,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":278,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":512,"org.easymock.samples.ExampleTest.voteForRemoval":146,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":378,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":113,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":348,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":486,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":10,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":504,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":241,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":279,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":352,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":448,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":117,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":326,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":230,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":433,"org.easymock.tests2.CaptureTest.testCaptureFirst":74,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":447,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":118,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":285,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":319,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":166,"org.easymock.tests2.UsageTest.moreThanOneArgument":88,"org.easymock.tests2.CaptureTest.testCapture2_2446744":275,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":289,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":459,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":25,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":262,"org.easymock.tests.GenericTest.testBridgedEquals":363,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":297,"org.easymock.tests.UsageExpectAndReturnTest.longType":162,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":115,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":265,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":197,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":353,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":15,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":286,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":195,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":471,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":204,"org.easymock.tests.UsageCallCountTest.tooManyCalls":298,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":342,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":167,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":428,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":184,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":303,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":135,"org.easymock.tests.MockingTest.testNiceClassMocking":359,"org.easymock.tests.MockingTest.testClassMocking":357,"org.easymock.tests2.UsageConstraintsTest.testContains":100,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":215,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":349,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":61,"org.easymock.tests2.UsageConstraintsTest.testFind":95,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":221,"org.easymock.tests.MockTypeTest.fromEasyMockClass":485,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":47,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":292,"org.easymock.tests.UsageExpectAndReturnTest.object":169,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":83,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":427,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":123,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":530,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":258,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":468,"org.easymock.tests.UsageTest.exactCallCountByLastCall":313,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":264,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":446,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":478,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":474,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":354,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":175,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":254,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":317,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":410,"org.easymock.tests.MockClassControlTest.testHashCode":371,"org.easymock.tests2.EasyMockSupportTest.testVerify":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":336,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":475,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":481,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":316,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":387,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":63,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":400,"org.easymock.tests.UsageVarargTest.varargCharAccepted":257,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":52,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":464,"org.easymock.tests2.UsageTest.openCallCountByLastCall":281,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":126,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":18,"org.easymock.tests.DefaultClassInstantiatorTest.object":374,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":480,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":466,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":388,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":337,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":301,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":423,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":409,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":510,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":277,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":370,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":185,"org.easymock.tests.CapturesMatcherTest.test":291,"org.easymock.tests.ReplayStateInvalidCallsTest.times":516,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":176,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":470,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":517,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":59,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":369,"org.easymock.tests2.UsageTest.resumeIfFailure":92,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":379,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":392,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":233,"org.easymock.tests2.StubTest.stubWithReturnValue":133,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":168,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":108,"org.easymock.tests2.SerializationTest.testAllMockedMethod":37,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":457,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":383,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":526,"org.easymock.samples.SupportTest.voteForRemovals":154,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":361,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":412,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":191,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":38,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":463,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":396,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":479,"org.easymock.tests.UsageExpectAndThrowTest.object":189,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":106,"org.easymock.tests2.DelegateToTest.testWrongClass":290,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":514,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":210,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":211,"org.easymock.samples.ConstructorCalledMockTest.testTax":151,"org.easymock.tests.UsageStrictMockTest.range":295,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":394,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":122,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":134,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":190,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":23,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":498,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":325,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":227,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":527,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":506,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":502,"org.easymock.tests2.CaptureTest.testCaptureNone":72,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":404,"org.easymock.tests.UsageUnorderedTest.message":321,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":41,"org.easymock.tests.UsageVerifyTest.twoReturns":244,"org.easymock.tests.UsageVarargTest.varargByteAccepted":261,"org.easymock.tests2.ThreadingTest.testThreadSafe":112,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":339,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":219,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":469,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":142,"org.easymock.tests2.CaptureTest.testCapture_2617107":1,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":209,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":461,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":315,"org.easymock.tests2.UsageConstraintsTest.any":98,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":495,"org.easymock.tests2.StubTest.stub":132,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":472,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":462,"org.easymock.tests.UsageExpectAndThrowTest.longType":182,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":232,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":377,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":494,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":271,"org.easymock.tests2.SerializationTest.testClass":35,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":77,"org.easymock.tests.LimitationsTest.mockNativeMethod":222,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":178,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":362,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":422,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":522,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":55,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":405,"org.easymock.tests2.NameTest.nameForMocksControl":51,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":424,"org.easymock.tests2.MockedExceptionTest.testMockedException":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":329,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":310,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":398,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":183,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":158,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":78,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":24,"org.easymock.tests.MockingTest.testNicePartialClassMocking":157,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":82,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":420,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":384,"org.easymock.tests2.CaptureTest.testCaptureLast":71,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":32,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":521,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":140,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":6,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":107,"org.easymock.tests.MockingTest.testTwoMocks":358,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":518,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":381,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":159,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":187,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":283,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":110,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":408,"org.easymock.samples.ExampleTest.removeNonExistingDocument":436,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":492,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":425,"org.easymock.tests.UsageStrictMockTest.differentMethods":201,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":411,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":407,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":375,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":288,"org.easymock.tests2.MockBuilderTest.testCreateMockString":26,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":367,"org.easymock.tests.UsageExpectAndThrowTest.floatType":181,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":330,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":327,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":43,"org.easymock.tests.UsageVerifyTest.twoThrows":243,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":58,"org.easymock.samples.ExampleTest.voteAgainstRemoval":147,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":501,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":452,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":85,"org.easymock.tests.LimitationsTest.privateConstructor":365,"org.easymock.tests2.UsageConstraintsTest.testNotNull":109,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":9,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":305,"org.easymock.tests2.UsageTest.defaultResetToNice":91,"org.easymock.samples.ExampleTest.voteAgainstRemovals":144,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":453,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":174,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":421,"org.easymock.tests.UsageVarargTest.differentLength":320,"org.easymock.tests2.CallbackTest.callback":128,"org.easymock.tests2.UsageConstraintsTest.equals":430,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":346,"org.easymock.tests.UsageTest.openCallCountByLastCall":309,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":93,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":314,"org.easymock.tests.UsageCallCountTest.tooFewCalls":217,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":137,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":229,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":406,"org.easymock.tests.UsageThrowableTest.throwCheckedException":302,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":528,"org.easymock.tests.MockingTest.testStrictClassMocking":356,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":139,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":322,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":390,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":136,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":497,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":138,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":45,"org.easymock.tests.ObjectMethodsTest.testHashCode":467,"org.easymock.tests2.CompareToTest.testGreateOrEqual":28,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":385,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":520,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":114,"org.easymock.tests2.NameTest.nameForNiceMock":50,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":515,"org.easymock.tests2.DependencyTest.testInterfaceMocking":75,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":531,"org.easymock.samples.ExampleTest.addDocument":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":340,"org.easymock.tests2.DelegateToTest.testStubDelegate":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":344,"org.easymock.tests2.AnswerTest.stubAnswer":44,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":200,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":431,"org.easymock.tests.UsageVarargTest.varargLongAccepted":260,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":202,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":450,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":177,"org.easymock.tests.UsageExpectAndReturnTest.floatType":161,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":111,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":152,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":416,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":105,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":34,"org.easymock.tests.UsageThrowableTest.noUpperLimit":223,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":94,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":323,"org.easymock.tests2.SerializationTest.test":36,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":69,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":39,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":160,"org.easymock.tests2.UsageConstraintsTest.testSame":97,"org.easymock.samples.SupportTest.addDocument":153,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":435,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":505,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":493,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":331,"org.easymock.tests.GenericTest.testPackageScope":212,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":476,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":445,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":415,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":439,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":503,"org.easymock.tests2.NameTest.nameForMock":48,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":171,"org.easymock.tests2.UsageStrictMockTest.differentMethods":54,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":347,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":163,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":193,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":465,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":240,"org.easymock.tests2.MockedExceptionTest.testRealException":62,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":455,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":395,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":382,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":454,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":53,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":499,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":246,"org.easymock.tests2.NameTest.nameForStrictMock":49,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":351,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":46,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":19,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":81,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":324,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":8,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":376,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":21,"org.easymock.tests2.UsageStrictMockTest.range":272,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":509,"org.easymock.tests2.UsageConstraintsTest.lessThan":30,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":413,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":449,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":116,"org.easymock.tests2.CaptureTest.testCaptureRightOne":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":335,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":403,"org.easymock.tests2.UsageConstraintsTest.testOr":5,"org.easymock.tests.UsageRangeTest.combination":237,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":276,"org.easymock.tests.UsageTest.wrongArguments":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":332,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":236,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":164,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":442,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":172,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":40,"org.easymock.tests.UsageVarargTest.varargShortAccepted":259,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":296,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":523,"org.easymock.tests2.UsageConstraintsTest.cmpTo":99,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":397,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":513,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":444,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":282,"org.easymock.tests2.CaptureTest.testCaptureFromStub":274,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":489,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":350,"org.easymock.tests.UsageTest.unexpectedCallWithArray":307,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":519,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":293,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":218,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":173,"org.easymock.tests2.UsageConstraintsTest.constraints":3,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":294,"org.easymock.samples.ExampleTest.addAndChangeDocument":150,"org.easymock.tests.UsageStrictMockTest.testVerify":203,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":141,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":199,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":266,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":70,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":251,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":355,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":165,"org.easymock.tests.LimitationsTest.abstractClass":364,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":248,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":252,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":121,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":255}}]
