[{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[0,1,2],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[3,4,5,6],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"failures":[7,8],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.EndsWith:40","failures":[9],"status":-1,"binaryOperator":"(\"endsWith(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:122","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:57","sourceCode":"final java.lang.Object java.lang.Object = java.lang.Object[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:41","sourceCode":"org.easymock.IArgumentMatcher.appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[10],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.RecordState:318","failures":[11,12],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:94","sourceCode":"return org.easymock.internal.MockInvocationHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])","type":"CtReturnImpl"},"failures":[13,14,15,16,17,18,19,19,20,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,0,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,1,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,3,4,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,2,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,8,11,283,284,12,285,286,287,288,289,290,291,292,293,294,295,296,297,5,298,299,6,300,301],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.MocksControl:241","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[13,15,16,17,21,22,23,24,28,30,31,85,86,87,88,89,90,92,94,95,96,97,101,117,118,120,121,123,143,144,145,146,147,148,149,152,153,154,155,158,171,172,173,174,177,179,180,182,183,184,185,186,187,190,191,193,194,195,197,198,199,200,201,208,209,210,211,221,222,223,230,244,245,246,247,248,251,256,257],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:73","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:237","sourceCode":"return org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.reflect.Method.getParameterTypes())","type":"CtReturnImpl"},"failures":[302],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"failures":[30,128,134,135,1,179,214,215,303,304,237,238,241,242,8],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:327","sourceCode":"return false","type":"CtReturnImpl"},"failures":[233,234,295,296],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[41],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[305,306,307],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[156,158,308],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[41,45,48],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[150,151,309,310],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:194","sourceCode":"try {\n    java.lang.reflect.Constructor<?> = java.lang.Class<?>.getDeclaredConstructor(org.easymock.ConstructorArgs.getConstructor().getParameterTypes());\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"Fail to find constructor for param types\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"mockClass"}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[219],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:61","failures":[40,41,43,45,46,62,65,66,67,72,73,75,78,2,252,253,254],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[97,311,312,313,150,314,315,316,317,318],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[25,26,27,28,29,38,39,40,41,42,43,44,45,46,47,48,49,50,51,0,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,319,92,93,101,103,1,177,206,207,216,217,3,2,244,245,246,247,248,251,252,253,254,255,256,257,8,11],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.Capture:112","sourceCode":"if (!(org.easymock.Capture<T>.hasCaptured())) {\n    this.java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[320,66,72,73,74,77,321],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values","value":"value","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[19,19,20,20,322,323],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.internal.ReflectionUtils:106","failures":[94,95,118,324,325,326],"status":-1,"binaryOperator":"java.lang.Class<?>[] == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:88","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[27,28,29,30,31,32,37,327,40,54,86,93,96,328,104,106,108,109,111,112,116,117,329,120,121,122,123,124,125,127,128,129,130,134,135,136,137,142,330,144,145,148,149,331,332,333,334,162,176,1,177,178,179,180,181,208,213,214,215,3,4,335,336,337,338,339,340,341,342,343,344,231,345,346,347,348,349,350,351,235,236,237,238,241,242,243,352,353,8,5,6,300,301],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:197","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"failures":[354],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":41,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":235,"org.easymock.tests2.UsageTest.argumentsOrdered":135,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":113,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":330,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":205,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":308,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":130,"org.easymock.tests2.StubTest.stubWithReturnValue":164,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":312,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":61,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":191,"org.easymock.tests2.SerializationTest.testAllMockedMethod":309,"org.easymock.tests2.DelegateToTest.testReturnException":157,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":218,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":203,"org.easymock.tests.MockingTest.testPartialClassMocking":221,"org.easymock.samples.SupportTest.voteForRemovals":22,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":302,"org.easymock.tests.MockClassControlTest.testToString":349,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":212,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":328,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":275,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":310,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":263,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":219,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":153,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":80,"org.easymock.tests.UsageExpectAndThrowTest.object":273,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":58,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":24,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":314,"org.easymock.tests2.DelegateToTest.testWrongClass":159,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":256,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":257,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":47,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":251,"org.easymock.tests2.UsageTest.wrongArguments":128,"org.easymock.samples.ConstructorCalledMockTest.testTax":19,"org.easymock.tests.UsageStrictMockTest.range":179,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":167,"org.easymock.samples.ExampleTest.answerVsDelegate":14,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":110,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":341,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":143,"org.easymock.tests2.UsageConstraintsTest.testNull":43,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":274,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":88,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":112,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":120,"org.easymock.tests2.CaptureTest.testPrimitive":68,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":255,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":282,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":241,"org.easymock.tests.UsageTest.moreThanOneArgument":236,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":87,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":166,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":173,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":226,"org.easymock.tests2.CaptureTest.testCaptureNone":73,"org.easymock.tests.UsageUnorderedTest.message":8,"org.easymock.tests.UsageVerifyTest.twoReturns":215,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":9,"org.easymock.tests2.ThreadingTest.testThreadSafe":98,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":289,"org.easymock.tests.UsageTest.argumentsOrdered":242,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":336,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":244,"org.easymock.tests2.CaptureTest.testCapture_2617107":67,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":116,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":254,"org.easymock.tests2.UsageConstraintsTest.any":49,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":119,"org.easymock.tests2.StubTest.stub":163,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":248,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":234,"org.easymock.tests.UsageExpectAndThrowTest.longType":266,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":204,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":306,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":29,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":142,"org.easymock.tests2.SerializationTest.testClass":150,"org.easymock.tests.LimitationsTest.mockNativeMethod":230,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":37,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":201,"org.easymock.tests2.AnswerTest.answer":79,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":170,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":48,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":36,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":325,"org.easymock.tests2.CaptureTest.testAnd":65,"org.easymock.tests2.UsageTest.strictResetToDefault":126,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":93,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":32,"org.easymock.tests2.NameTest.nameForMocksControl":334,"org.easymock.tests2.MockedExceptionTest.testMockedException":139,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":172,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":210,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":107,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":240,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":293,"org.easymock.tests2.DelegateToTest.testDelegate":161,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":267,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":223,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":85,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":121,"org.easymock.tests.MockingTest.testNicePartialClassMocking":222,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":278,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":90,"org.easymock.tests2.CaptureTest.testCaptureLast":72,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":206,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":4,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":46,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":149,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":262,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":59,"org.easymock.tests.MockingTest.testTwoMocks":220,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":3,"org.easymock.tests2.CaptureTest.testCapture1_2446744":69,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":182,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":276,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":271,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":34,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":134,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":63,"org.easymock.tests.UsageThrowableTest.throwError":11,"org.easymock.tests.UsageStrictMockTest.differentMethods":180,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":340,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":100,"org.easymock.tests2.MockBuilderTest.testCreateMockString":124,"org.easymock.tests.UsageExpectAndThrowTest.floatType":265,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":175,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":54,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":82,"org.easymock.tests.UsageVerifyTest.twoThrows":214,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":154,"org.easymock.samples.PartialClassMockTest.testGetArea":21,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":245,"org.easymock.samples.ExampleTest.voteAgainstRemoval":16,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":225,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":224,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":95,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":337,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":264,"org.easymock.tests2.UsageTest.niceToStrict":129,"org.easymock.tests2.UsageConstraintsTest.testNotNull":62,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":288,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":138,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":118,"org.easymock.tests2.MockBuilderTest.testCreateMock":122,"org.easymock.tests2.UsageTest.defaultResetToNice":133,"org.easymock.samples.ExampleTest.voteAgainstRemovals":13,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":197,"org.easymock.tests.UsageVarargTest.differentLength":352,"org.easymock.tests2.CallbackTest.callback":162,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":322,"org.easymock.tests.UsageTest.openCallCountByLastCall":239,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":272,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":108,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":38,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":296,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":344,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":253,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":165,"org.easymock.tests.UsageCallCountTest.tooFewCalls":345,"org.easymock.tests.UsageOverloadedMethodTest.overloading":228,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":299,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":52,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":227,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":193,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":146,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":0,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":74,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":168,"org.easymock.tests.UsageThrowableTest.throwCheckedException":285,"org.easymock.tests2.EasyMockSupportClassTest.testAll":152,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":280,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":324,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":260,"org.easymock.tests2.CaptureTest.testCaptureAll":66,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":35,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":217,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":148,"org.easymock.tests.MockNameTest.defaultName":353,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":327,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":145,"org.easymock.tests2.UsageConstraintsTest.testMatches":53,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":147,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":84,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":174,"org.easymock.samples.ExampleTest.voteForRemovals":17,"org.easymock.tests2.NameTest.nameForNiceMock":333,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":102,"org.easymock.tests.UsageVarargTest.allKinds":2,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":213,"org.easymock.tests2.DependencyTest.testInterfaceMocking":23,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":316,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":261,"org.easymock.tests2.DelegateToTest.testStubDelegate":158,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":287,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":27,"org.easymock.tests2.AnswerTest.stubAnswer":83,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":207,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":160,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":177,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":318,"org.easymock.tests2.UsageConstraintsTest.greaterThan":55,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":209,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":96,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":181,"org.easymock.samples.ExampleTest.voteForRemoval":15,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":99,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":200,"org.easymock.tests.UsageExpectAndReturnTest.floatType":184,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":342,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":91,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":97,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":20,"org.easymock.tests.UsageThrowableTest.noUpperLimit":283,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":56,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":6,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":250,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":39,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":125,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":70,"org.easymock.tests2.SerializationTest.test":151,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":313,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":105,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":284,"org.easymock.tests2.UsageConstraintsTest.testSame":44,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":183,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":202,"org.easymock.tests2.CaptureTest.testCaptureFirst":78,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":156,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":106,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":137,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":301,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":189,"org.easymock.tests.GenericTest.testPackageScope":169,"org.easymock.tests2.CaptureTest.testCapture2_2446744":77,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":101,"org.easymock.tests2.UsageTest.moreThanOneArgument":127,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":292,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":123,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":347,"org.easymock.tests2.NameTest.nameForMock":331,"org.easymock.tests.UsageExpectAndReturnTest.longType":185,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":258,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":103,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":281,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":194,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":249,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":60,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":279,"org.easymock.tests2.UsageStrictMockTest.differentMethods":31,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":233,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":171,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":186,"org.easymock.tests.UsageCallCountTest.tooManyCalls":348,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":307,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":277,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":211,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":231,"org.easymock.tests2.MockedExceptionTest.testRealException":141,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":343,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":190,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":303,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":268,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":28,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":286,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":252,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":144,"org.easymock.tests2.NameTest.nameForStrictMock":332,"org.easymock.tests2.UsageConstraintsTest.testContains":51,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":140,"org.easymock.tests2.UsageConstraintsTest.testFind":42,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":229,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":25,"org.easymock.tests.MockTypeTest.fromEasyMockClass":339,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":89,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":26,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":176,"org.easymock.tests.UsageExpectAndReturnTest.object":192,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":57,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":7,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":92,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":117,"org.easymock.tests2.UsageStrictMockTest.range":30,"org.easymock.tests2.UsageConstraintsTest.lessThan":64,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":111,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":315,"org.easymock.tests.UsageTest.exactCallCountByLastCall":243,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":216,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":317,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":104,"org.easymock.tests2.CaptureTest.testCaptureRightOne":75,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":290,"org.easymock.tests2.UsageConstraintsTest.testOr":45,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":311,"org.easymock.tests.UsageRangeTest.combination":208,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":198,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":86,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":298,"org.easymock.tests.UsageTest.wrongArguments":238,"org.easymock.tests2.EasyMockSupportTest.testVerify":115,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":187,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":195,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":305,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":291,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":297,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":295,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":346,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":33,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":319,"org.easymock.tests2.UsageConstraintsTest.cmpTo":50,"org.easymock.tests2.CaptureTest.testCaptureMultiple":320,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":81,"org.easymock.tests2.UsageTest.openCallCountByLastCall":131,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":132,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":114,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":294,"org.easymock.tests2.CaptureTest.testCaptureFromStub":76,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":354,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":329,"org.easymock.tests.UsageTest.unexpectedCallWithArray":237,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":335,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":304,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":270,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":326,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":12,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":1,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":323,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":196,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":351,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":94,"org.easymock.tests2.UsageConstraintsTest.constraints":40,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":178,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":269,"org.easymock.samples.ExampleTest.addAndChangeDocument":18,"org.easymock.tests2.ConstraintsToStringTest.notToString":10,"org.easymock.tests.CapturesMatcherTest.test":321,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":199,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":232,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":155,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":259,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":71,"org.easymock.tests2.UsageTest.resumeIfFailure":136,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":246,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":338,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":188,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":300,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":247,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":109}}]
