[{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:127","sourceCode":"try {\n    java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[1],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1803","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[2,3],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"method"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:50","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Long.java.lang.Class<java.lang.Long>, java.lang.Long.java.lang.Long.valueOf(0))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[4],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[5],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:49","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>, java.lang.Integer.java.lang.Integer.valueOf(0))","type":"CtInvocationImpl"},"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:373","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[23],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[24,25],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"failures":[26,27,28,29,30,31,32],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"this.org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[33,34,35,36],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"capture"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:71","sourceCode":"if ((java.util.Set<java.lang.reflect.Method>) == null) {\n    java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>();\n} ","type":"CtIfImpl"},"failures":[37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[59,60,61],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[62,63,64,65],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,61,87,42,48,49,50,88,89,90,91,92,93,94,95,96,55,97,98,99,100,101,102,103,104,105,106,107,108],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[70,72,73,74,75,78,80,85,61,87,89,92,93,105],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[109,110,111],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"failures":[112],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[72,78,113,114,115,116],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[117,118,119,120,121,122,66,67,68,123,124,125,126,127,128,129,130,131,132,133,59,60,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,69,156,157,158,159,160,161,162,70,163,164,165,6,166,71,167,72,73,168,169,74,75,76,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,77,191,78,192,79,80,81,193,194,195,196,197,198,199,200,201,202,5,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,86,231,232,233,234,9,235,236,237,238,61,87,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,26,26,27,27,271,40,272,273,41,42,44,45,46,47,48,49,50,274,275,276,10,277,278,279,280,281,282,51,52,53,283,284,285,286,287,288,289,290,291,292,88,293,294,89,90,91,295,296,297,92,93,94,95,298,96,11,299,300,301,54,302,303,55,56,97,98,304,99,305,306,307,100,101,308,309,102,310,311,312,103,313,314,104,105,106,315,316,317,318,107,319,320,321,322,323,24,25,324,325,326,327,328,329,108,330,331,1,332,333,334,335,336,337,338,339,340,341,342,343,344,12,13,14,15,345,58,346,347,348,349,350,351,16,352,353,18,19,20,22,354,34,355,356,357,358,359,360,361,362,363,364,35,36],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.Range:83","failures":[132,149,160,70,71,167,73,168,169,74,75,76,78,192,79,80,81,238,61,87,240,243,259,286,287,288,289,290,88,294,89,295,296,92,93,95,98,314,104,105,106,321,324,108,336,341,343,19,34,355,357,358,359,360,361,36],"status":-1,"binaryOperator":"(int) == (java.lang.Integer.int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:336","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResult:37","sourceCode":"return org.easymock.internal.ExpectedInvocation","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:122","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[37,38,39,40,41,365,42,43,44,45,46,47,48,49,366,50,367,54,58],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:105","failures":[368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,23,385,386,387,388,4,389,117,118,119,120,121,122,66,67,68,37,390,391,38,392,393,123,124,125,126,127,128,129,130,131,132,133,59,60,134,135,136,62,137,138,63,139,140,394,395,396,141,142,397,143,398,399,400,401,402,144,403,145,146,147,148,149,150,151,152,153,404,154,155,69,156,157,158,159,160,405,161,162,39,406,70,163,164,165,6,166,407,408,409,71,167,72,73,168,169,74,75,76,410,411,412,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,413,414,415,190,7,416,417,418,8,419,77,191,78,192,79,80,81,193,194,195,196,420,197,198,199,421,422,64,65,0,423,424,425,426,200,201,202,5,203,204,205,206,207,208,209,210,427,428,429,430,431,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,86,231,232,233,234,9,235,236,237,238,61,87,432,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,26,26,27,27,271,40,272,273,41,42,43,433,44,45,46,47,434,48,49,50,274,275,276,10,277,278,279,280,281,435,436,437,282,438,439,51,440,441,442,443,444,445,446,447,448,52,449,450,451,452,453,53,454,455,283,456,284,285,286,457,287,288,289,290,458,459,291,292,88,293,294,89,90,91,295,296,297,92,93,94,95,298,96,11,299,300,301,54,460,302,32,461,303,55,56,97,462,57,98,304,99,305,306,307,100,101,308,309,102,310,311,312,103,313,314,104,105,106,315,463,464,465,466,316,317,318,107,319,467,320,321,322,323,24,25,468,324,325,326,327,328,329,108,330,331,1,332,333,334,335,336,337,338,339,469,470,471,472,473,474,340,475,476,477,478,479,480,341,481,482,342,343,344,12,13,14,15,483,484,485,486,487,345,488,489,490,491,492,493,58,346,347,348,349,350,351,16,352,353,17,18,19,20,21,22,354,34,355,356,357,358,359,360,361,362,363,364,35,36],"status":-1,"binaryOperator":"(java.lang.Class<T>.isInterface()) && (java.lang.reflect.Method[] != null)","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":319,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":71,"org.easymock.tests2.UsageTest.argumentsOrdered":93,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":310,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":488,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":378,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":91,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":271,"org.easymock.tests2.DelegateToTest.testReturnException":18,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":146,"org.easymock.tests.MockingTest.testPartialClassMocking":141,"org.easymock.tests.MockClassControlTest.testToString":246,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":457,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":414,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":386,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":443,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":170,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":51,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":292,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":25,"org.easymock.tests2.UsageTest.wrongArguments":89,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":239,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":480,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":125,"org.easymock.samples.ExampleTest.answerVsDelegate":261,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":38,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":399,"org.easymock.tests2.UsageConstraintsTest.testNull":321,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":299,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":102,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":251,"org.easymock.tests2.CaptureTest.testPrimitive":356,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":243,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":189,"org.easymock.tests.UsageTest.moreThanOneArgument":167,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":11,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":254,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":427,"org.easymock.tests.UsageTest.argumentsOrdered":75,"org.easymock.tests.UsageVarargTest.varargIntAccepted":153,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":383,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":234,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":41,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":492,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":45,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":370,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":237,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":111,"org.easymock.tests.ReplayStateInvalidUsageTest.times":207,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":340,"org.easymock.tests2.DependencyTest.testClassMocking":458,"org.easymock.tests2.AnswerTest.answer":341,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":468,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":23,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":281,"org.easymock.tests2.CaptureTest.testAnd":354,"org.easymock.tests2.UsageTest.strictResetToDefault":293,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":303,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":253,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":232,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":307,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":431,"org.easymock.tests2.DelegateToTest.testDelegate":22,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":185,"org.easymock.tests.LimitationsTest.mockFinalMethod":403,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":149,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":166,"org.easymock.tests2.DependencyTest.testClassMockingSupport":459,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":64,"org.easymock.tests2.CaptureTest.testCapture1_2446744":357,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":460,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":183,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":279,"org.easymock.tests.UsageThrowableTest.throwError":130,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":202,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":391,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":493,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":83,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":455,"org.easymock.samples.PartialClassMockTest.testGetArea":40,"org.easymock.tests.MockingTest.testInterfaceMocking":397,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":5,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":9,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":408,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":444,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":422,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":171,"org.easymock.tests2.UsageTest.niceToStrict":90,"org.easymock.tests2.ThreadingTest.testChangeDefault":2,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":368,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":44,"org.easymock.tests2.MockBuilderTest.testCreateMock":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":451,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":477,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":179,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":115,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":100,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":412,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":117,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":123,"org.easymock.tests.UsageOverloadedMethodTest.overloading":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":453,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":448,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":138,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":328,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":222,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":257,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":327,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":362,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":404,"org.easymock.tests.MockClassControlTest.testEquals":250,"org.easymock.tests2.EasyMockSupportClassTest.testAll":282,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":162,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":187,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":165,"org.easymock.tests2.CaptureTest.testCaptureAll":34,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":30,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":280,"org.easymock.tests.MockNameTest.defaultName":426,"org.easymock.tests2.UsageConstraintsTest.testMatches":329,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":200,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":255,"org.easymock.samples.ExampleTest.voteForRemovals":265,"org.easymock.tests.UsageVarargTest.allKinds":160,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":238,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":6,"org.easymock.samples.BasicClassMockTest.testPrintContent":273,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":134,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":103,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":489,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":150,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":21,"org.easymock.tests2.UsageConstraintsTest.greaterThan":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":438,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":231,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":97,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":419,"org.easymock.samples.ExampleTest.voteForRemoval":262,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":462,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":275,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":392,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":54,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":127,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":88,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":375,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":305,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":436,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":145,"org.easymock.tests2.CaptureTest.testCaptureFirst":36,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":17,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":374,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":306,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":95,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":140,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":218,"org.easymock.tests2.CaptureTest.testCapture2_2446744":35,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":10,"org.easymock.tests2.UsageTest.moreThanOneArgument":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":385,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":49,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":159,"org.easymock.tests.GenericTest.testBridgedEquals":406,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":67,"org.easymock.tests.UsageExpectAndReturnTest.longType":214,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":163,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":304,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":188,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":366,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":432,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":334,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":186,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":424,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":252,"org.easymock.tests.UsageCallCountTest.tooManyCalls":68,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":109,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":452,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":219,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":479,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":175,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":60,"org.easymock.tests.MockingTest.testNiceClassMocking":400,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":349,"org.easymock.tests.MockingTest.testClassMocking":395,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":118,"org.easymock.tests2.UsageConstraintsTest.testContains":326,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":365,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":14,"org.easymock.tests2.UsageConstraintsTest.testFind":320,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":259,"org.easymock.tests.MockTypeTest.fromEasyMockClass":390,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":77,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":284,"org.easymock.tests.UsageExpectAndReturnTest.object":221,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":302,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":478,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":309,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":155,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":199,"org.easymock.tests.UsageTest.exactCallCountByLastCall":76,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":128,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":373,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":428,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":413,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":469,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":151,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":227,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":137,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":484,"org.easymock.tests.MockClassControlTest.testHashCode":249,"org.easymock.tests2.EasyMockSupportTest.testVerify":312,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":446,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":110,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":429,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":411,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":136,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":84,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":278,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":316,"org.easymock.tests.UsageVarargTest.varargCharAccepted":154,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":313,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":389,"org.easymock.tests2.UsageTest.openCallCountByLastCall":295,"org.easymock.tests.DefaultClassInstantiatorTest.object":190,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":311,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":410,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":197,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":85,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":447,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":177,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":133,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":473,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":483,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":55,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":248,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":176,"org.easymock.tests.CapturesMatcherTest.test":33,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":228,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":423,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":53,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":247,"org.easymock.tests2.UsageTest.resumeIfFailure":94,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":37,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":148,"org.easymock.tests2.StubTest.stubWithReturnValue":286,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":220,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":335,"org.easymock.tests2.SerializationTest.testAllMockedMethod":347,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":384,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":116,"org.easymock.samples.SupportTest.voteForRemovals":270,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":405,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":486,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":182,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":4,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":481,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":415,"org.easymock.tests.UsageExpectAndThrowTest.object":180,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":332,"org.easymock.tests2.DelegateToTest.testWrongClass":20,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":195,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":196,"org.easymock.samples.ConstructorCalledMockTest.testTax":26,"org.easymock.tests.UsageStrictMockTest.range":80,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":465,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":308,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":348,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":181,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":435,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":74,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":209,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":124,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":113,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":409,"org.easymock.tests2.CaptureTest.testCaptureNone":361,"org.easymock.tests.UsageUnorderedTest.message":70,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":82,"org.easymock.tests.UsageVerifyTest.twoReturns":87,"org.easymock.tests.UsageVarargTest.varargByteAccepted":158,"org.easymock.tests2.ThreadingTest.testThreadSafe":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":449,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":122,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":421,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":272,"org.easymock.tests2.CaptureTest.testCapture_2617107":355,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":387,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":242,"org.easymock.tests2.UsageConstraintsTest.any":324,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":206,"org.easymock.tests2.StubTest.stub":285,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":425,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":388,"org.easymock.tests.UsageExpectAndThrowTest.longType":173,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":147,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":418,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":205,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":104,"org.easymock.tests2.SerializationTest.testClass":58,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":345,"org.easymock.tests.LimitationsTest.mockNativeMethod":144,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":39,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":230,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":472,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":315,"org.easymock.tests2.NameTest.nameForMocksControl":290,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":474,"org.easymock.tests2.MockedExceptionTest.testMockedException":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":439,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":169,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":456,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":174,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":143,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":298,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":47,"org.easymock.tests.MockingTest.testNicePartialClassMocking":142,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":301,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":470,"org.easymock.tests2.CaptureTest.testCaptureLast":360,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":65,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":24,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":353,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":333,"org.easymock.tests.MockingTest.testTwoMocks":396,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":211,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":178,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":92,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":337,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":3,"org.easymock.samples.ExampleTest.removeNonExistingDocument":266,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":476,"org.easymock.tests.UsageStrictMockTest.differentMethods":81,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":203,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":485,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":416,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":276,"org.easymock.tests2.MockBuilderTest.testCreateMockString":50,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":440,"org.easymock.tests.UsageExpectAndThrowTest.floatType":172,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":437,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":342,"org.easymock.tests.UsageVerifyTest.twoThrows":61,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":52,"org.easymock.samples.ExampleTest.voteAgainstRemoval":263,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":407,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":379,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":56,"org.easymock.tests.LimitationsTest.privateConstructor":402,"org.easymock.tests2.UsageConstraintsTest.testNotNull":336,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":135,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":12,"org.easymock.tests2.UsageTest.defaultResetToNice":297,"org.easymock.samples.ExampleTest.voteAgainstRemovals":260,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":226,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":380,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":471,"org.easymock.tests.UsageVarargTest.differentLength":69,"org.easymock.tests2.CallbackTest.callback":98,"org.easymock.tests2.UsageConstraintsTest.equals":467,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":32,"org.easymock.tests.UsageTest.openCallCountByLastCall":168,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":317,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":241,"org.easymock.tests.UsageCallCountTest.tooFewCalls":120,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":351,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":126,"org.easymock.tests.UsageThrowableTest.throwCheckedException":59,"org.easymock.tests.MockingTest.testStrictClassMocking":394,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":114,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":129,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":352,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":475,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":350,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":208,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":16,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":344,"org.easymock.tests.ObjectMethodsTest.testHashCode":198,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":277,"org.easymock.tests2.NameTest.nameForNiceMock":289,"org.easymock.tests2.DependencyTest.testInterfaceMocking":291,"org.easymock.samples.ExampleTest.addDocument":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":450,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":454,"org.easymock.tests2.DelegateToTest.testStubDelegate":19,"org.easymock.tests2.AnswerTest.stubAnswer":343,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":192,"org.easymock.tests.UsageVarargTest.varargLongAccepted":157,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":193,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":377,"org.easymock.tests.UsageExpectAndReturnTest.floatType":213,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":229,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":339,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":27,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":491,"org.easymock.tests.UsageThrowableTest.noUpperLimit":131,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":63,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":331,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":318,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":463,"org.easymock.tests2.SerializationTest.test":346,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":358,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":7,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":212,"org.easymock.tests2.UsageConstraintsTest.testSame":322,"org.easymock.samples.SupportTest.addDocument":269,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":441,"org.easymock.tests.GenericTest.testPackageScope":161,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":430,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":372,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":490,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":398,"org.easymock.tests2.NameTest.nameForMock":287,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":223,"org.easymock.tests2.UsageStrictMockTest.differentMethods":106,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":31,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":461,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":215,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":184,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":420,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":233,"org.easymock.tests2.MockedExceptionTest.testRealException":15,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":393,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":466,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":382,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":314,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":381,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":210,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":240,"org.easymock.tests2.NameTest.nameForStrictMock":288,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":433,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":283,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":300,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":464,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":417,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":1,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":42,"org.easymock.tests2.UsageStrictMockTest.range":105,"org.easymock.tests2.UsageConstraintsTest.lessThan":338,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":487,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":99,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":445,"org.easymock.tests2.CaptureTest.testCaptureRightOne":363,"org.easymock.tests2.UsageConstraintsTest.testOr":323,"org.easymock.tests.UsageRangeTest.combination":86,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":96,"org.easymock.tests.UsageTest.wrongArguments":73,"org.easymock.tests2.MockBuilderTest.testWithConstructor":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":442,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":245,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":216,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":369,"org.easymock.tests.UsageVarargTest.varargShortAccepted":156,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":8,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":66,"org.easymock.tests2.UsageConstraintsTest.cmpTo":325,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":482,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":371,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":296,"org.easymock.tests2.CaptureTest.testCaptureFromStub":364,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":201,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":43,"org.easymock.tests.UsageTest.unexpectedCallWithArray":72,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":78,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":121,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":29,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":225,"org.easymock.tests2.UsageConstraintsTest.constraints":107,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":79,"org.easymock.samples.ExampleTest.addAndChangeDocument":267,"org.easymock.tests.UsageStrictMockTest.testVerify":194,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":268,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":191,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":164,"org.easymock.tests2.CompareToTest.testGreateThan":112,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":359,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":235,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":367,"org.easymock.tests.LimitationsTest.abstractClass":401,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":217,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":139,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":236,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":152,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":101}}]
