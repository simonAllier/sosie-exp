[{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:622","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[1,2],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:128","sourceCode":"final java.lang.String java.lang.String = org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(org.easymock.EasyMock.java.lang.String)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,1,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,2,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:148","sourceCode":"for (final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.Class<T>.getDeclaredConstructors()) {\n    if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n        if (java.lang.reflect.Constructor<T> != null) {\n            throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n        } \n        java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n    } \n}","type":"CtForEachImpl"},"failures":[77,259,260,261,262,263,264,109,265,266,267,268,269,270,271,272],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"clazz","this":"this","constructor":"ret"}},{"transplant":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[130,146,152,159,160,215],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[101,102,103,104,122,163,164,165,166,167,168,176,273,274,275,276,277,219],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:36","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"failures":[269],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[4,116,118,278,119,279,280],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:78","sourceCode":"continue","type":"CtContinueImpl"},"failures":[281],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"failures":[1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"failures":[282],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[3,4,5,6,7,8,283,284,284,285,285,286,287,288,289,290,291,292,10,293,14,15,16,19,20,21,22,23,294,24,25,26,27,28,29,30,31,32,33,1,34,35,36,37,38,39,40,41,42,43,44,295,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,296,74,75,76,77,78,79,80,81,82,297,298,299,300,301,302,303,304,305,306,307,308,309,83,84,85,310,311,312,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,313,314,105,106,315,316,107,108,109,110,111,317,318,319,320,116,117,118,119,122,123,124,125,126,127,128,129,130,131,132,133,321,135,136,137,138,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,2,176,177,178,179,180,322,181,182,323,324,325,183,185,188,189,326,327,328,329,330,331,332,190,333,334,335,336,337,274,338,339,191,340,341,342,343,344,345,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,250,251,252,253,254,255,256,257,346,347,280,348,258,349],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[177,190],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[88,95,122,167,174,350,182,192,197,220,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,250,252,253,254,255,256,257,351,352,353,348],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:1506","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(double))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[14,15,16,17,18,19,20,27,40,69,70,76,354,299,303,306,89,90,91,93,97,98,101,355,356,357,358,359,360,361,362,363,364,365,109,121,135,136,137,139,140,141,142,173,174,175,366,177,367,368,369,370,371,372,373,329,193,194,195,196,198,199,201,202,206,249,250,347,280,348,374,258,349],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:40","sourceCode":"if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[356,363,136,367,369,194],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[375,80],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1789","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Matches(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"regex","key":"regex"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[9,11,12,24,37,40,48,50,56,57,62,78,79,80,90,119,120,143,149,155,159,161,376,377,182,336,193,229,235,241,245,247,249],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[263],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[378],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[379,380,381],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"failures":[74,382,383,75,384,76,354,375,385,77,259,83,386,387,388,84,85,310,311,262,312,86,87,101,102,103,314,105,106,315,107,108,109,111,389,390,391,317,392,393,318,394,395,396,397,398,399,400,401,402,319,403,404,405,406,407,320,408,409],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:75","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":27,"org.easymock.tests2.UsageTest.argumentsOrdered":98,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":192,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":307,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":93,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":288,"org.easymock.tests2.DelegateToTest.testReturnException":116,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":164,"org.easymock.tests.MockingTest.testPartialClassMocking":178,"org.easymock.tests.MockClassControlTest.testToString":340,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":397,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":229,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":318,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":293,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":266,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":33,"org.easymock.tests2.UsageTest.wrongArguments":91,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":217,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":125,"org.easymock.samples.ExampleTest.answerVsDelegate":4,"org.easymock.tests2.UsageConstraintsTest.testNull":29,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":71,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":306,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":345,"org.easymock.tests2.CaptureTest.testPrimitive":52,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":221,"org.easymock.tests.UsageTest.moreThanOneArgument":193,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":248,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":70,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":131,"org.easymock.tests.UsageTest.argumentsOrdered":199,"org.easymock.tests.UsageVarargTest.varargIntAccepted":203,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":364,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":211,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":83,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":271,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":279,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":215,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":359,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":294,"org.easymock.tests.ReplayStateInvalidUsageTest.times":336,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":0,"org.easymock.tests2.AnswerTest.answer":63,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":23,"org.easymock.tests2.CaptureTest.testAnd":49,"org.easymock.tests2.UsageTest.strictResetToDefault":89,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":75,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":130,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":171,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":301,"org.easymock.tests2.DelegateToTest.testDelegate":119,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":244,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":167,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":228,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":366,"org.easymock.tests2.CaptureTest.testCapture1_2446744":53,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":242,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":21,"org.easymock.tests.UsageThrowableTest.throwError":250,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":331,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":133,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":409,"org.easymock.samples.PartialClassMockTest.testGetArea":287,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":332,"org.easymock.tests2.CompareToTest.testLessOrEqual":282,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":398,"org.easymock.tests2.UsageTest.niceToStrict":92,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":230,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":84,"org.easymock.tests2.MockBuilderTest.testCreateMock":312,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":405,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":238,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":356,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":302,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":353,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":184,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":123,"org.easymock.tests.UsageOverloadedMethodTest.overloading":181,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":407,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":402,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":37,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":348,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":154,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":322,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":36,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":380,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":58,"org.easymock.tests2.EasyMockSupportClassTest.testAll":317,"org.easymock.tests.MockClassControlTest.testEquals":344,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":128,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":246,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":361,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":22,"org.easymock.tests2.CaptureTest.testCaptureAll":50,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":226,"org.easymock.tests2.UsageConstraintsTest.testMatches":38,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":132,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":329,"org.easymock.samples.ExampleTest.voteForRemovals":8,"org.easymock.tests.UsageVarargTest.allKinds":210,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":173,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":227,"org.easymock.samples.BasicClassMockTest.testPrintContent":292,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":256,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":13,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":168,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":278,"org.easymock.tests2.UsageConstraintsTest.greaterThan":40,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":272,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":392,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":170,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":354,"org.easymock.samples.ExampleTest.voteForRemoval":5,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":79,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":375,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":296,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":88,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":216,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":262,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":273,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":299,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":390,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":163,"org.easymock.tests2.CaptureTest.testCaptureFirst":62,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":300,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":100,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":349,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":150,"org.easymock.tests2.CaptureTest.testCapture2_2446744":61,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":81,"org.easymock.tests2.UsageTest.moreThanOneArgument":90,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":86,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":209,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":327,"org.easymock.tests.UsageExpectAndReturnTest.longType":146,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":224,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":297,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":247,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":295,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":245,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":129,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":276,"org.easymock.tests.UsageCallCountTest.tooManyCalls":328,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":368,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":406,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":151,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":234,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":255,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":105,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":185,"org.easymock.tests2.UsageConstraintsTest.testContains":35,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":103,"org.easymock.tests2.UsageConstraintsTest.testFind":28,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":182,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":134,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":12,"org.easymock.tests.UsageExpectAndReturnTest.object":153,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":74,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":305,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":205,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":267,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":325,"org.easymock.tests.UsageTest.exactCallCountByLastCall":200,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":378,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":2,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":372,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":259,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":159,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":201,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":280,"org.easymock.tests.MockClassControlTest.testHashCode":343,"org.easymock.tests2.EasyMockSupportTest.testVerify":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":400,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":358,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":346,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":352,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":20,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":67,"org.easymock.tests.UsageVarargTest.varargCharAccepted":204,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":14,"org.easymock.tests2.UsageTest.openCallCountByLastCall":94,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":308,"org.easymock.tests.DefaultClassInstantiatorTest.object":321,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":351,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":323,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":401,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":236,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":253,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":384,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":342,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":235,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":160,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":320,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":341,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":360,"org.easymock.tests2.UsageTest.resumeIfFailure":99,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":166,"org.easymock.tests2.StubTest.stubWithReturnValue":122,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":261,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":152,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":45,"org.easymock.tests2.SerializationTest.testAllMockedMethod":111,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":377,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":264,"org.easymock.samples.SupportTest.voteForRemovals":290,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":363,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":241,"org.easymock.tests.UsageExpectAndThrowTest.object":239,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":43,"org.easymock.tests2.DelegateToTest.testWrongClass":118,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":222,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":223,"org.easymock.tests.UsageStrictMockTest.range":139,"org.easymock.samples.ConstructorCalledMockTest.testTax":284,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":304,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":314,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":240,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":389,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":198,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":274,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":124,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":367,"org.easymock.tests2.CaptureTest.testCaptureNone":57,"org.easymock.tests.UsageUnorderedTest.message":249,"org.easymock.tests.UsageVerifyTest.twoReturns":175,"org.easymock.tests.UsageVarargTest.varargByteAccepted":208,"org.easymock.tests2.ThreadingTest.testThreadSafe":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":403,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":189,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":291,"org.easymock.tests2.CaptureTest.testCapture_2617107":51,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":365,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":220,"org.easymock.tests2.UsageConstraintsTest.any":1,"org.easymock.tests2.StubTest.stub":121,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":335,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":277,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":165,"org.easymock.tests.UsageExpectAndThrowTest.longType":232,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":379,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":334,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":16,"org.easymock.tests2.SerializationTest.testClass":109,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":313,"org.easymock.tests.LimitationsTest.mockNativeMethod":183,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":162,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":19,"org.easymock.tests2.NameTest.nameForMocksControl":115,"org.easymock.tests2.MockedExceptionTest.testMockedException":102,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":393,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":197,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":180,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":233,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":68,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":311,"org.easymock.tests.MockingTest.testNicePartialClassMocking":179,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":73,"org.easymock.tests2.CaptureTest.testCaptureLast":56,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":265,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":177,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":108,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":32,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":44,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":143,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":237,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":97,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":47,"org.easymock.samples.ExampleTest.removeNonExistingDocument":283,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":190,"org.easymock.tests.UsageStrictMockTest.differentMethods":140,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":80,"org.easymock.tests2.ConstraintsToStringTest.andToString":362,"org.easymock.tests2.MockBuilderTest.testCreateMockString":87,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":394,"org.easymock.tests.UsageExpectAndThrowTest.floatType":231,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":391,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":64,"org.easymock.tests.UsageVerifyTest.twoThrows":174,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":260,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":319,"org.easymock.samples.ExampleTest.voteAgainstRemoval":6,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":76,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":281,"org.easymock.tests2.UsageConstraintsTest.testNotNull":46,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":101,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":257,"org.easymock.tests2.UsageTest.defaultResetToNice":96,"org.easymock.samples.ExampleTest.voteAgainstRemovals":3,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":158,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":376,"org.easymock.tests2.CallbackTest.callback":120,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":370,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":382,"org.easymock.tests.UsageTest.openCallCountByLastCall":196,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":24,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":219,"org.easymock.tests.UsageCallCountTest.tooFewCalls":187,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":315,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":126,"org.easymock.tests.UsageThrowableTest.throwCheckedException":254,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":369,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":176,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":107,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":106,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":337,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":316,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":66,"org.easymock.tests.ObjectMethodsTest.testHashCode":324,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":270,"org.easymock.tests2.NameTest.nameForNiceMock":114,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":82,"org.easymock.tests2.DependencyTest.testInterfaceMocking":10,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":268,"org.easymock.samples.ExampleTest.addDocument":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":404,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":408,"org.easymock.tests2.DelegateToTest.testStubDelegate":117,"org.easymock.tests2.AnswerTest.stubAnswer":65,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":137,"org.easymock.tests.UsageVarargTest.varargLongAccepted":207,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":141,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":161,"org.easymock.tests.UsageExpectAndReturnTest.floatType":145,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":77,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":285,"org.easymock.tests2.ConstraintsToStringTest.orToString":355,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":41,"org.easymock.tests.UsageThrowableTest.noUpperLimit":251,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":374,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":25,"org.easymock.tests2.SerializationTest.test":110,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":54,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":381,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":144,"org.easymock.tests2.UsageConstraintsTest.testSame":30,"org.easymock.samples.SupportTest.addDocument":289,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":395,"org.easymock.tests.GenericTest.testPackageScope":127,"org.easymock.tests2.NameTest.nameForMock":112,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":155,"org.easymock.tests2.UsageStrictMockTest.differentMethods":18,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":383,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":147,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":243,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":172,"org.easymock.tests2.MockedExceptionTest.testRealException":104,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":371,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":263,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":15,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":218,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":338,"org.easymock.tests2.NameTest.nameForStrictMock":113,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":388,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":11,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":72,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":42,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":386,"org.easymock.tests2.UsageStrictMockTest.range":17,"org.easymock.tests2.UsageConstraintsTest.lessThan":48,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":269,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":399,"org.easymock.tests2.CaptureTest.testCaptureRightOne":59,"org.easymock.tests2.UsageConstraintsTest.testOr":31,"org.easymock.tests.UsageRangeTest.combination":169,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":69,"org.easymock.tests.UsageTest.wrongArguments":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":396,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":191,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":148,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":156,"org.easymock.tests.UsageVarargTest.varargShortAccepted":206,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":326,"org.easymock.tests2.UsageConstraintsTest.cmpTo":34,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":350,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":95,"org.easymock.tests2.CaptureTest.testCaptureFromStub":60,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":330,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":387,"org.easymock.tests.UsageTest.unexpectedCallWithArray":194,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":136,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":188,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":157,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":138,"org.easymock.tests2.UsageConstraintsTest.constraints":26,"org.easymock.samples.ExampleTest.addAndChangeDocument":9,"org.easymock.tests2.ConstraintsToStringTest.notToString":357,"org.easymock.tests.UsageStrictMockTest.testVerify":142,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":286,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":135,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":225,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":55,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":213,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":149,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":214,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":258,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":202,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":303}}]
