[{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,1,2,3,4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:55","sourceCode":"java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection)","type":"CtInvocationImpl"},"failures":[5,6,7,8,9,10],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[11,5,12,13,14,15,16,17,18,19,20,21,22,23,6,24,24,25,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,0,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,7,95,96,97,98,99,8,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,9,180,181,182,183,184,10,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,1,293,294,295,296,297,298,2,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,3,398,399,400,401,402,403,404,405,406,407,408,409,4,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:51","failures":[159,441,350,378,379],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[26,28,36,54,61],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[237,241],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.internal.MockBuilder:80","failures":[11,40,141,442,443,194,444,196,197,198,445,200,446,447,448,449,450,234,357],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1445","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[451,452,453],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:72","sourceCode":"java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","type":"CtAssignmentImpl"},"failures":[40,41,42,454],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:128","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[11,22,23,24,24,25,25,40,42,50,51,81,82,455,456,85,86,88,457,105,458,459,106,460,107,108,461,109,110,462,463,111,112,113,114,115,464,116,465,466,117,118,119,120,135,136,138,139,140,141,142,143,144,145,146,147,148,149,467,468,190,191,192,442,443,194,444,195,196,197,198,445,199,200,446,448,449,450,234,236,237,238,239,240,241,242,243,244,245,246,265,266,267,268,269,270,271,272,314,315,316,317,318,320,323,354,355,356,357,358,359,439],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:94","sourceCode":"return org.easymock.internal.MockInvocationHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])","type":"CtReturnImpl"},"failures":[11,12,13,14,15,17,19,21,24,24,25,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,0,49,50,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,455,456,85,86,87,88,457,89,90,91,92,93,94,99,106,108,115,118,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,138,139,140,141,142,145,146,147,148,150,151,152,153,154,155,157,158,159,160,161,162,163,164,165,166,469,167,168,470,169,471,170,171,172,175,176,177,178,179,184,190,191,192,193,442,194,196,197,198,445,200,446,449,201,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,245,258,259,260,261,262,263,264,273,274,275,276,277,293,2,300,301,302,303,304,305,306,307,308,309,310,311,312,313,316,317,318,320,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,341,343,344,345,347,348,349,350,351,352,355,357,359,360,361,362,363,364,365,366,367,370,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,407,408,409,4,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[26,27,28,29,30,31,32,33,34,35,36,37,38,39,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,142,153,157,201,203,232,258,263,332,333,334,335,336,343,344,347,348,407,408,409,4,410,431,432],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[11,12,14,15,17,21,26,27,28,29,30,33,34,35,36,38,39,40,41,45,49,50,52,53,54,55,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,455,456,85,86,87,88,457,89,93,99,106,108,115,118,121,122,123,125,127,128,129,132,133,135,136,137,138,139,140,142,146,147,148,150,151,152,153,154,157,159,160,162,163,164,165,166,469,167,168,470,169,471,170,171,172,184,192,194,196,198,445,446,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,226,227,228,229,230,231,245,287,289,297,298,299,300,301,304,305,308,317,318,320,324,325,326,327,332,333,334,335,336,341,343,344,348,350,351,355,360,361,362,377,379,385,387,388,389,407,408,410,431,432],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[55,60,63],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:920","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:42","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"failures":[472],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"failures":[473],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1471","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:190","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:59","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Byte.java.lang.Class<java.lang.Byte>, java.lang.Byte.java.lang.Byte)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[40,41,42,454],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:270","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[281,390,391,392],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[73],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[85,474,136,145,148],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[475],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[237,241],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:52","failures":[70],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:318","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    final java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    final java.lang.reflect.TypeVariable<?>[] java.lang.reflect.TypeVariable<?>[] = ((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getTypeParameters();\n    for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n        final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int];\n        final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = java.lang.reflect.TypeVariable<?>[][int];\n        if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n            final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n            java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n            if (java.lang.reflect.Type == null) {\n                java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n            } \n            if (java.lang.reflect.Type != null) {\n                java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n            } \n        } \n    }\n} ","type":"CtIfImpl"},"failures":[354],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"type","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"method":"result"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[40,41,42,454],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[26,28,36,54,55,58,60,61,63,73,78],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":55,"org.easymock.tests2.UsageTest.argumentsOrdered":131,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":300,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":171,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":288,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":126,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":5,"org.easymock.tests2.DelegateToTest.testReturnException":44,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":260,"org.easymock.tests.MockingTest.testPartialClassMocking":317,"org.easymock.tests.MockClassControlTest.testToString":267,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":174,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":341,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":467,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":462,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":411,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":108,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":163,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":62,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":407,"org.easymock.tests2.UsageTest.wrongArguments":124,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":104,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":330,"org.easymock.samples.ExampleTest.answerVsDelegate":13,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":234,"org.easymock.tests2.UsageConstraintsTest.testNull":58,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":322,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":138,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":170,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":272,"org.easymock.tests2.CaptureTest.testPrimitive":29,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":410,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":430,"org.easymock.tests.UsageTest.moreThanOneArgument":301,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":137,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":275,"org.easymock.tests.UsageTest.argumentsOrdered":307,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":363,"org.easymock.tests.UsageVarargTest.varargIntAccepted":249,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":1,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":332,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":442,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":188,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":197,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":280,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":336,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":452,"org.easymock.tests.ReplayStateInvalidUsageTest.times":403,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":99,"org.easymock.tests2.AnswerTest.answer":89,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":63,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":294,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":179,"org.easymock.tests2.CaptureTest.testAnd":26,"org.easymock.tests2.UsageTest.strictResetToDefault":122,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":145,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":274,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":167,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":326,"org.easymock.tests2.DelegateToTest.testDelegate":48,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":367,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":426,"org.easymock.tests.LimitationsTest.mockFinalMethod":246,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":263,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":313,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":393,"org.easymock.tests2.CaptureTest.testCapture1_2446744":30,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":473,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":424,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":177,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":3,"org.easymock.tests.UsageThrowableTest.throwError":224,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":189,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":277,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":120,"org.easymock.samples.PartialClassMockTest.testGetArea":11,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":398,"org.easymock.tests.MockingTest.testInterfaceMocking":319,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":333,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":463,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":439,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":412,"org.easymock.tests2.UsageTest.niceToStrict":125,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":278,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":196,"org.easymock.tests2.MockBuilderTest.testCreateMock":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":465,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":101,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":420,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":168,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":392,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":368,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":328,"org.easymock.tests.UsageOverloadedMethodTest.overloading":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":114,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":68,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":383,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":215,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":360,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":67,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":35,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":250,"org.easymock.tests2.EasyMockSupportClassTest.testAll":106,"org.easymock.tests.MockClassControlTest.testEquals":271,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":356,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":428,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":178,"org.easymock.tests2.CaptureTest.testCaptureAll":27,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":311,"org.easymock.tests.MockNameTest.defaultName":440,"org.easymock.tests2.UsageConstraintsTest.testMatches":69,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":396,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":276,"org.easymock.samples.ExampleTest.voteForRemovals":17,"org.easymock.tests.UsageVarargTest.allKinds":258,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":377,"org.easymock.samples.BasicClassMockTest.testPrintContent":23,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":312,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":230,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":155,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":185,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":47,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":264,"org.easymock.tests2.UsageConstraintsTest.greaterThan":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":460,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":325,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":148,"org.easymock.samples.ExampleTest.voteForRemoval":14,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":242,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":151,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":149,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":447,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":141,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":121,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":359,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":199,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":285,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":166,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":458,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":259,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":43,"org.easymock.tests2.CaptureTest.testCaptureFirst":39,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":284,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":469,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":133,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":386,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":211,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":153,"org.easymock.tests2.UsageTest.moreThanOneArgument":123,"org.easymock.tests2.CaptureTest.testCapture2_2446744":38,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":446,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":295,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":257,"org.easymock.tests.GenericTest.testBridgedEquals":358,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":375,"org.easymock.tests.UsageExpectAndReturnTest.longType":207,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":164,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":309,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":448,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":429,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":433,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":76,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":427,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":273,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":338,"org.easymock.tests.UsageCallCountTest.tooManyCalls":376,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":453,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":466,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":212,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":103,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":416,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":229,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":456,"org.easymock.tests.MockingTest.testNiceClassMocking":323,"org.easymock.tests.MockingTest.testClassMocking":315,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":443,"org.easymock.tests2.UsageConstraintsTest.testContains":66,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":369,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":192,"org.easymock.tests2.UsageConstraintsTest.testFind":57,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":362,"org.easymock.tests.MockTypeTest.fromEasyMockClass":233,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":203,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":345,"org.easymock.tests.UsageExpectAndReturnTest.object":214,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":142,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":102,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":471,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":252,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":437,"org.easymock.tests.UsageTest.exactCallCountByLastCall":308,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":283,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":340,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":364,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":51,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":220,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":247,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":382,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":180,"org.easymock.tests.MockClassControlTest.testHashCode":270,"org.easymock.tests2.EasyMockSupportTest.testVerify":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":112,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":451,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":365,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":391,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":380,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":176,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":134,"org.easymock.tests.UsageVarargTest.varargCharAccepted":251,"org.easymock.tests2.CaptureTest.testCaptureMultiple":475,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":156,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":299,"org.easymock.tests2.UsageTest.openCallCountByLastCall":127,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":172,"org.easymock.tests.DefaultClassInstantiatorTest.object":236,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":390,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":435,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":113,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":227,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":97,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":9,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":146,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":269,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":417,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":221,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":118,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":268,"org.easymock.tests2.UsageTest.resumeIfFailure":132,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":450,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":262,"org.easymock.tests2.StubTest.stubWithReturnValue":49,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":77,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":213,"org.easymock.tests2.SerializationTest.testAllMockedMethod":42,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":293,"org.easymock.samples.SupportTest.voteForRemovals":21,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":354,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":182,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":423,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":454,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":2,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":90,"org.easymock.tests.UsageExpectAndThrowTest.object":421,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":342,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":74,"org.easymock.tests2.DelegateToTest.testWrongClass":46,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":431,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":432,"org.easymock.samples.ConstructorCalledMockTest.testTax":24,"org.easymock.tests.UsageStrictMockTest.range":350,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":83,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":169,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":455,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":422,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":198,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":405,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":105,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":306,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":329,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":389,"org.easymock.tests2.CaptureTest.testCaptureNone":34,"org.easymock.tests.UsageUnorderedTest.message":232,"org.easymock.tests.UsageVerifyTest.twoReturns":379,"org.easymock.tests.UsageVarargTest.varargByteAccepted":256,"org.easymock.tests2.ThreadingTest.testThreadSafe":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":464,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":373,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":438,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":22,"org.easymock.tests2.CaptureTest.testCapture_2617107":28,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":395,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":4,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":297,"org.easymock.tests2.UsageConstraintsTest.any":64,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":402,"org.easymock.tests2.StubTest.stub":0,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":339,"org.easymock.tests.UsageExpectAndThrowTest.longType":414,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":261,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":298,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":240,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":401,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":158,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":184,"org.easymock.tests2.SerializationTest.testClass":40,"org.easymock.tests.LimitationsTest.mockNativeMethod":245,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":223,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":357,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":96,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":161,"org.easymock.tests2.MockedExceptionTest.testMockedException":191,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":107,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":305,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":415,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":202,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":320,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":135,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":445,"org.easymock.tests.MockingTest.testNicePartialClassMocking":318,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":140,"org.easymock.tests2.CaptureTest.testCaptureLast":33,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":7,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":394,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":457,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":61,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":75,"org.easymock.tests.MockingTest.testTwoMocks":316,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":474,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":204,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":419,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":130,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":79,"org.easymock.samples.ExampleTest.removeNonExistingDocument":18,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":399,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":100,"org.easymock.tests.UsageStrictMockTest.differentMethods":351,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":181,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":238,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":152,"org.easymock.tests2.MockBuilderTest.testCreateMockString":449,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":461,"org.easymock.tests.UsageExpectAndThrowTest.floatType":413,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":459,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":92,"org.easymock.tests.UsageVerifyTest.twoThrows":378,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":115,"org.easymock.samples.ExampleTest.voteAgainstRemoval":15,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":387,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":289,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":147,"org.easymock.tests.LimitationsTest.privateConstructor":244,"org.easymock.tests2.UsageConstraintsTest.testNotNull":78,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":190,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":231,"org.easymock.tests2.UsageTest.defaultResetToNice":129,"org.easymock.samples.ExampleTest.voteAgainstRemovals":12,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":290,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":95,"org.easymock.tests.UsageVarargTest.differentLength":253,"org.easymock.tests2.CallbackTest.callback":175,"org.easymock.tests2.UsageConstraintsTest.equals":56,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":143,"org.easymock.tests.UsageTest.openCallCountByLastCall":304,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":52,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":409,"org.easymock.tests.UsageCallCountTest.tooFewCalls":371,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":86,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":331,"org.easymock.tests.UsageThrowableTest.throwCheckedException":228,"org.easymock.tests.MockingTest.testStrictClassMocking":314,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":88,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":344,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":8,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":85,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":404,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":87,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":94,"org.easymock.tests.ObjectMethodsTest.testHashCode":436,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":154,"org.easymock.tests2.DependencyTest.testInterfaceMocking":162,"org.easymock.samples.ExampleTest.addDocument":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":119,"org.easymock.tests2.DelegateToTest.testStubDelegate":45,"org.easymock.tests2.AnswerTest.stubAnswer":93,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":348,"org.easymock.tests.UsageVarargTest.varargLongAccepted":255,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":352,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":287,"org.easymock.tests.UsageExpectAndReturnTest.floatType":206,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":222,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":50,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":25,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":384,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":187,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":72,"org.easymock.tests.UsageThrowableTest.noUpperLimit":225,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":53,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":81,"org.easymock.tests2.SerializationTest.test":41,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":31,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":237,"org.easymock.tests2.UsageConstraintsTest.testSame":59,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":205,"org.easymock.samples.SupportTest.addDocument":20,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":400,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":109,"org.easymock.tests.GenericTest.testPackageScope":355,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":366,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":282,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":186,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":321,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":216,"org.easymock.tests2.UsageStrictMockTest.differentMethods":160,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":144,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":208,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":425,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":434,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":327,"org.easymock.tests2.MockedExceptionTest.testRealException":193,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":235,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":84,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":292,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":157,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":291,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":408,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":406,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":195,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":201,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":139,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":82,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":73,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":239,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":194,"org.easymock.tests2.UsageStrictMockTest.range":159,"org.easymock.tests2.UsageConstraintsTest.lessThan":80,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":183,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":165,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":111,"org.easymock.tests2.CaptureTest.testCaptureRightOne":36,"org.easymock.tests2.UsageConstraintsTest.testOr":60,"org.easymock.tests.UsageRangeTest.combination":324,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":136,"org.easymock.tests.UsageTest.wrongArguments":303,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":110,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":266,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":209,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":217,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":279,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":241,"org.easymock.tests.UsageVarargTest.varargShortAccepted":254,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":374,"org.easymock.tests2.UsageConstraintsTest.cmpTo":65,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":281,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":128,"org.easymock.tests2.CaptureTest.testCaptureFromStub":37,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":397,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":444,"org.easymock.tests.UsageTest.unexpectedCallWithArray":302,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":347,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":372,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":218,"org.easymock.tests2.UsageConstraintsTest.constraints":54,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":349,"org.easymock.samples.ExampleTest.addAndChangeDocument":19,"org.easymock.tests2.ConstraintsToStringTest.notToString":472,"org.easymock.tests.UsageStrictMockTest.testVerify":353,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":6,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":346,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":310,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":32,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":468,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":334,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":210,"org.easymock.tests.LimitationsTest.abstractClass":243,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":385,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":335,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":470,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":441,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":248}}]
