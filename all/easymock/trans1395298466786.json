[{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:312","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[3],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1291","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.Any:36","failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:38","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"failures":[6,28],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:325","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:53","failures":[29,30,31],"status":-1,"binaryOperator":"(java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:53","failures":[32],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:137","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[33,34,35],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[36],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:127","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[37,38,39],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stream":"stream"}},{"position":"org.easymock.internal.matchers.InstanceOf:40","failures":[],"status":0,"binaryOperator":"((\"isA(\" + (java.lang.Class<?>.getName())) + \")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1149","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:583","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[40,41],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:92","failures":[42,43,44,45,40,26,46,47,36],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[8,48,0,49],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[50,51],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[52,53,54],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[55,56,57,58,59],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:210","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[60],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:98","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"result"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[36],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:104","sourceCode":"throw new java.lang.IllegalStateException(java.lang.String)","type":"CtThrowImpl"},"failures":[47],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:50","failures":[61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,37,90,91,92,93,94,95,96,97,98,99,100,101],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[102,103],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1940","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[104,105,106,107,4,108,109,110,13,111,112,113,25,114,115,116],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[55,108,117,118,119,29,120,13,112,113,114,121,31,122],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"failures":[123,124,125],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[126,127,128],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,55,4,153,108,109,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,5,6,7,8,9,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,10,11,212,213,214,215,216,12,217,218,219,220,221,110,118,119,222,223,29,120,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,28,239,0,240,241,242,243,244,245,246,13,247,248,249,250,251,111,112,113,252,14,15,16,17,18,19,20,253,254,255,256,257,258,61,61,62,62,259,260,261,262,263,264,265,266,267,268,269,270,271,42,21,43,272,273,274,275,22,23,276,44,277,278,24,279,50,280,281,282,283,284,123,51,285,286,287,49,288,289,290,291,292,293,294,25,295,114,115,296,63,297,68,71,81,87,298,299,45,40,41,300,301,26,46,302,47,27,124,303,3,304,305,32,306,307,36,308,309,310,311,312,313,314,127,315,128,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,37,38,39,340,341,116,121,342,343,344,345,346,31,122,347,348,349,350,351,352,90,353,354,355,91,356,357,358,359,360,361,362,363,364,365,366,2,367,368,102,103],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[42,43,44,45,40,300,26,46,47,36,312],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[50,369,370,289],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[302,304,314,371],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[55,108,117,118,119,29,120,372,13,112,113,114,121,31,122],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":40,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":221,"org.easymock.tests2.UsageTest.argumentsOrdered":122,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":337,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":216,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":126,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":343,"org.easymock.tests2.StubTest.stubWithReturnValue":288,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":95,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":311,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":260,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":140,"org.easymock.tests2.SerializationTest.testAllMockedMethod":39,"org.easymock.tests2.DelegateToTest.testReturnException":315,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":239,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":214,"org.easymock.tests.MockingTest.testPartialClassMocking":226,"org.easymock.samples.SupportTest.voteForRemovals":262,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":59,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":370,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":130,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":369,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":75,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":71,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":0,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":170,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":2,"org.easymock.tests.UsageExpectAndThrowTest.object":180,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":104,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":320,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":308,"org.easymock.tests2.DelegateToTest.testWrongClass":316,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":14,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":15,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":302,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":5,"org.easymock.tests2.UsageTest.wrongArguments":121,"org.easymock.samples.ConstructorCalledMockTest.testTax":61,"org.easymock.tests.UsageStrictMockTest.range":108,"org.easymock.samples.ExampleTest.answerVsDelegate":264,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":334,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":351,"org.easymock.tests2.UsageConstraintsTest.testNull":300,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":281,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":181,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":359,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":336,"org.easymock.tests2.CaptureTest.testPrimitive":272,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":65,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":29,"org.easymock.tests.UsageTest.moreThanOneArgument":110,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":189,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":280,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":249,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":56,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":192,"org.easymock.tests2.CaptureTest.testCaptureNone":23,"org.easymock.tests.UsageUnorderedTest.message":13,"org.easymock.tests.UsageVerifyTest.twoReturns":113,"org.easymock.tests.UsageVarargTest.varargByteAccepted":237,"org.easymock.tests2.ThreadingTest.testThreadSafe":321,"org.easymock.tests.UsageTest.argumentsOrdered":120,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":156,"org.easymock.tests.UsageVarargTest.varargIntAccepted":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":82,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":165,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":257,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":48,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":16,"org.easymock.tests2.CaptureTest.testCapture_2617107":43,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":356,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":8,"org.easymock.tests2.UsageConstraintsTest.any":27,"org.easymock.tests2.StubTest.stub":49,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":255,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":20,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":215,"org.easymock.tests.UsageExpectAndThrowTest.longType":173,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":33,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":295,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":326,"org.easymock.tests2.SerializationTest.testClass":37,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":297,"org.easymock.tests.LimitationsTest.mockNativeMethod":129,"org.easymock.tests2.AnswerTest.answer":366,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":195,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":150,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":47,"org.easymock.tests2.CaptureTest.testAnd":42,"org.easymock.tests2.UsageTest.strictResetToDefault":341,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":296,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":94,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":51,"org.easymock.tests2.NameTest.nameForMocksControl":292,"org.easymock.tests2.MockedExceptionTest.testMockedException":363,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":248,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":331,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":70,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":223,"org.easymock.tests2.DelegateToTest.testDelegate":318,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":160,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":228,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":174,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":279,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":360,"org.easymock.tests.MockingTest.testNicePartialClassMocking":227,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":185,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":283,"org.easymock.tests2.CaptureTest.testCaptureLast":22,"org.easymock.tests2.CompareToTest.testCompareEqual":125,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":12,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":169,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":91,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":46,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":309,"org.easymock.tests.MockingTest.testTwoMocks":225,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":168,"org.easymock.tests2.CaptureTest.testCapture1_2446744":273,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":92,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":131,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":183,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":178,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":31,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":313,"org.easymock.tests.UsageThrowableTest.throwError":204,"org.easymock.samples.ExampleTest.removeNonExistingDocument":269,"org.easymock.tests.UsageStrictMockTest.differentMethods":109,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":323,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":72,"org.easymock.tests.UsageExpectAndThrowTest.floatType":172,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":67,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":368,"org.easymock.tests.UsageVerifyTest.twoThrows":112,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":242,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":81,"org.easymock.samples.PartialClassMockTest.testGetArea":256,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":17,"org.easymock.samples.ExampleTest.voteAgainstRemoval":266,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":190,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":191,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":286,"org.easymock.tests2.UsageTest.niceToStrict":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":76,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":171,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":100,"org.easymock.tests2.UsageConstraintsTest.testNotNull":312,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":362,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":211,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":54,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":358,"org.easymock.tests2.UsageTest.defaultResetToNice":346,"org.easymock.samples.ExampleTest.voteAgainstRemovals":263,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":146,"org.easymock.tests.UsageVarargTest.differentLength":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":84,"org.easymock.tests2.CallbackTest.callback":271,"org.easymock.tests2.UsageConstraintsTest.equals":30,"org.easymock.tests.UsageTest.openCallCountByLastCall":222,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":58,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":179,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":332,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":298,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":220,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":161,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":7,"org.easymock.tests.UsageCallCountTest.tooFewCalls":163,"org.easymock.tests.UsageOverloadedMethodTest.overloading":202,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":80,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":304,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":244,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":353,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":201,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":142,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":3,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":34,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":276,"org.easymock.tests.UsageThrowableTest.throwCheckedException":208,"org.easymock.tests2.EasyMockSupportClassTest.testAll":68,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":194,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":57,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":187,"org.easymock.tests2.CaptureTest.testCaptureAll":21,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":355,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":11,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":90,"org.easymock.tests2.UsageConstraintsTest.testMatches":305,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":354,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":103,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":250,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":240,"org.easymock.tests2.CompareToTest.testGreateOrEqual":371,"org.easymock.samples.ExampleTest.voteForRemovals":268,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":325,"org.easymock.tests2.NameTest.nameForNiceMock":291,"org.easymock.tests.UsageVarargTest.allKinds":28,"org.easymock.tests2.DependencyTest.testInterfaceMocking":319,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":111,"org.easymock.samples.BasicClassMockTest.testPrintContent":258,"org.easymock.samples.ExampleTest.addDocument":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":88,"org.easymock.tests2.DelegateToTest.testStubDelegate":128,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":210,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":293,"org.easymock.tests2.AnswerTest.stubAnswer":102,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":317,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":217,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":4,"org.easymock.tests2.UsageConstraintsTest.greaterThan":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":69,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":197,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":287,"org.easymock.tests.UsageVarargTest.varargLongAccepted":236,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":154,"org.easymock.samples.ExampleTest.voteForRemoval":265,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":322,"org.easymock.tests.UsageExpectAndReturnTest.floatType":133,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":149,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":284,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":63,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":62,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":307,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":245,"org.easymock.tests.UsageThrowableTest.noUpperLimit":205,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":340,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":299,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":252,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":274,"org.easymock.tests2.SerializationTest.test":38,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":96,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":35,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":329,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":206,"org.easymock.tests2.UsageConstraintsTest.testSame":301,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":132,"org.easymock.samples.SupportTest.addDocument":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":66,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":213,"org.easymock.tests2.CaptureTest.testCaptureFirst":24,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":127,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":1,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":330,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":348,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":372,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":73,"org.easymock.tests.GenericTest.testPackageScope":193,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":324,"org.easymock.tests2.CaptureTest.testCapture2_2446744":278,"org.easymock.tests2.UsageTest.moreThanOneArgument":116,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":159,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":361,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":238,"org.easymock.tests2.NameTest.nameForMock":289,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":166,"org.easymock.tests.UsageExpectAndReturnTest.longType":134,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":327,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":143,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":188,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":310,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":212,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":98,"org.easymock.tests2.UsageStrictMockTest.differentMethods":115,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":186,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":254,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":247,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":135,"org.easymock.tests.UsageCallCountTest.tooManyCalls":167,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":184,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":199,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":162,"org.easymock.tests2.MockedExceptionTest.testRealException":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":85,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":139,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":25,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":175,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":209,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":6,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":352,"org.easymock.tests2.UsageConstraintsTest.testContains":303,"org.easymock.tests2.NameTest.nameForStrictMock":290,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":364,"org.easymock.tests2.UsageConstraintsTest.testFind":41,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":203,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":349,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":53,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":282,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":350,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":151,"org.easymock.tests.UsageExpectAndReturnTest.object":141,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":36,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":105,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":123,"org.easymock.tests.ErrorMessageTest.testGetters":106,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":357,"org.easymock.tests2.UsageStrictMockTest.range":114,"org.easymock.tests2.UsageConstraintsTest.lessThan":314,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":335,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":233,"org.easymock.tests.UsageTest.exactCallCountByLastCall":224,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":101,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":10,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":77,"org.easymock.tests2.CaptureTest.testCaptureRightOne":44,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":157,"org.easymock.tests2.UsageConstraintsTest.testOr":26,"org.easymock.tests.UsageRangeTest.combination":196,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":64,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":229,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":50,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":147,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":243,"org.easymock.tests.UsageTest.wrongArguments":119,"org.easymock.tests2.MockBuilderTest.testWithConstructor":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":74,"org.easymock.tests2.EasyMockSupportTest.testVerify":339,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":136,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":78,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":158,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":241,"org.easymock.tests.UsageVarargTest.varargShortAccepted":235,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":219,"org.easymock.tests2.UsageConstraintsTest.cmpTo":124,"org.easymock.tests.UsageVarargTest.varargCharAccepted":232,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":367,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":294,"org.easymock.tests2.UsageTest.openCallCountByLastCall":344,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":345,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":338,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":52,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":218,"org.easymock.tests2.CaptureTest.testCaptureFromStub":277,"org.easymock.tests.UsageTest.unexpectedCallWithArray":118,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":200,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":79,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":177,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":207,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":55,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":164,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":97,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":145,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":285,"org.easymock.tests2.UsageConstraintsTest.constraints":45,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":153,"org.easymock.samples.ExampleTest.addAndChangeDocument":270,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":176,"org.easymock.tests.CapturesMatcherTest.test":60,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":148,"org.easymock.tests.UsageStrictMockTest.testVerify":155,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":253,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":87,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":152,"org.easymock.tests2.UsageTest.resumeIfFailure":347,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":275,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":18,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":137,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":246,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":19,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":333,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":230,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":107}}]
