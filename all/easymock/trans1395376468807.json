[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:357","sourceCode":"java.lang.reflect.Type = java.lang.reflect.Type","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:79","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    } \n}","type":"CtForEachImpl"},"failures":[0,1,2,3,4],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[5,6,7],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[8,9,10,11,12,13,14],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:288","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:268","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[8,9,10,11,12,13,14],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:200","sourceCode":"throw new java.lang.RuntimeException(\"Fail to find constructor for param types\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[15],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:128","sourceCode":"final java.lang.String java.lang.String = org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(org.easymock.EasyMock.java.lang.String)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:125","sourceCode":"java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>()","type":"CtAssignmentImpl"},"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,5,6,7,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,1,2,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:194","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Byte.java.lang.Class<java.lang.Byte>)) {\n    return java.lang.Number.byteValue();\n} else if (java.lang.Class<?>.equals(java.lang.Short.java.lang.Class<java.lang.Short>)) {\n    return java.lang.Number.shortValue();\n} else if (java.lang.Class<?>.equals(java.lang.Integer.java.lang.Class<java.lang.Integer>)) {\n    return java.lang.Number.intValue();\n} else if (java.lang.Class<?>.equals(java.lang.Long.java.lang.Class<java.lang.Long>)) {\n    return java.lang.Number.longValue();\n} else if (java.lang.Class<?>.equals(java.lang.Float.java.lang.Class<java.lang.Float>)) {\n    return java.lang.Number.floatValue();\n} else if (java.lang.Class<?>.equals(java.lang.Double.java.lang.Class<java.lang.Double>)) {\n    return java.lang.Number.doubleValue();\n} else {\n    return java.lang.Number;\n}","type":"CtIfImpl"},"failures":[16,18,19,21,23,23,24,24,26,29,91,93,95,96,98,105,109,125,126,128,129,131,151,152,153,154,155,156,157,158,159,160,161,163,173,174,176,186,187,188,189,190,194,195,201,202,203,204,205,220,221,222,227,256,257,259,266,267],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[57,62,74,306],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[16,17,18,19,20,21,22,23,23,24,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,47,48,49,50,51,52,53,54,55,56,57,307,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,308,309,90,91,92,93,94,95,96,97,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,129,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,5,6,7,158,159,160,161,310,311,312,313,314,162,163,164,315,165,166,167,168,1,2,3,173,174,175,176,177,178,179,180,181,182,183,184,185,316,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,317,213,214,318,215,216,217,218,219,319,320,321,322,323,220,221,222,324,325,326,224,225,226,327,227,328,228,229,230,231,233,234,329,330,331,235,236,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,332,260,261,262,263,264,265,266,267,268,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,333,334,335,336,337,338,339,340,302,341,303,304,342,343,305],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[8,9,344,10,11,12,345,13,14,346],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"clazz":"parameterType"}},{"transplant":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1687","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(T[]))","type":"CtInvocationImpl"},"failures":[61,180,254],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[16,17,18,19,20,21,22,23,23,24,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,47,48,49,50,51,52,53,54,55,56,57,307,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,308,309,90,91,92,93,94,95,96,97,98,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,128,129,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,5,6,7,158,159,160,161,310,311,312,313,314,162,163,164,315,165,166,167,168,1,2,3,173,174,175,176,177,178,179,180,181,182,183,184,185,316,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,317,213,214,318,215,216,217,218,219,319,320,321,322,323,220,221,222,324,325,326,224,225,226,227,328,228,229,230,231,233,234,329,330,331,235,236,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,332,260,261,262,263,264,265,266,267,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,333,334,335,336,337,338,339,340,302,341,303,304,342,343],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[38,40,41,94,96,98,101,104,180,181,183,184,316,237],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1494","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(char))","type":"CtInvocationImpl"},"failures":[51,56,67],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[5,6,7,347],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"length":"i","clazz":"primitiveType"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[67],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:321","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Throwable.getClass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[336],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[348,349,350],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":51,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":235,"org.easymock.tests2.UsageTest.argumentsOrdered":143,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":121,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":209,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":138,"org.easymock.tests2.StubTest.stubWithReturnValue":168,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":9,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":195,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":71,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":27,"org.easymock.tests2.SerializationTest.testAllMockedMethod":7,"org.easymock.tests2.DelegateToTest.testReturnException":162,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":321,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":207,"org.easymock.tests.MockingTest.testPartialClassMocking":220,"org.easymock.samples.SupportTest.voteForRemovals":29,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":0,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":318,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":285,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":347,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":322,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":273,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":159,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":308,"org.easymock.tests.UsageExpectAndThrowTest.object":283,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":68,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":33,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":10,"org.easymock.tests2.DelegateToTest.testWrongClass":164,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":266,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":267,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":57,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":261,"org.easymock.tests2.UsageTest.wrongArguments":136,"org.easymock.samples.ConstructorCalledMockTest.testTax":23,"org.easymock.tests.UsageStrictMockTest.range":183,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":171,"org.easymock.samples.ExampleTest.answerVsDelegate":17,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":118,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":151,"org.easymock.tests2.UsageConstraintsTest.testNull":53,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":284,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":96,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":120,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":128,"org.easymock.tests2.CaptureTest.testPrimitive":78,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":265,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":292,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":241,"org.easymock.tests.UsageTest.moreThanOneArgument":236,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":95,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":170,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":175,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":326,"org.easymock.tests2.CaptureTest.testCaptureNone":83,"org.easymock.tests.UsageUnorderedTest.message":293,"org.easymock.tests.UsageVerifyTest.twoReturns":217,"org.easymock.tests.UsageVarargTest.varargByteAccepted":252,"org.easymock.tests2.ThreadingTest.testThreadSafe":106,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":333,"org.easymock.tests.UsageTest.argumentsOrdered":242,"org.easymock.tests.UsageVarargTest.varargIntAccepted":246,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":231,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":30,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":255,"org.easymock.tests2.CaptureTest.testCapture_2617107":77,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":14,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":124,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":264,"org.easymock.tests2.UsageConstraintsTest.any":58,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":127,"org.easymock.tests2.StubTest.stub":167,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":331,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":259,"org.easymock.tests.UsageExpectAndThrowTest.longType":276,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":208,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":15,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":39,"org.easymock.tests2.SerializationTest.testClass":5,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":150,"org.easymock.tests.LimitationsTest.mockNativeMethod":227,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":47,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":205,"org.easymock.tests2.AnswerTest.answer":89,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":3,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":307,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":46,"org.easymock.tests2.CaptureTest.testAnd":75,"org.easymock.tests2.UsageTest.strictResetToDefault":134,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":42,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":101,"org.easymock.tests2.NameTest.nameForMocksControl":313,"org.easymock.tests2.MockedExceptionTest.testMockedException":147,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":174,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":213,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":115,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":240,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":337,"org.easymock.tests2.DelegateToTest.testDelegate":165,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":277,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":222,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":93,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":129,"org.easymock.tests.MockingTest.testNicePartialClassMocking":221,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":288,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":98,"org.easymock.tests2.CaptureTest.testCaptureLast":82,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":210,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":320,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":56,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":157,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":272,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":69,"org.easymock.tests.MockingTest.testTwoMocks":323,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":319,"org.easymock.tests2.CaptureTest.testCapture1_2446744":79,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":186,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":286,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":281,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":44,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":142,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":73,"org.easymock.tests.UsageThrowableTest.throwError":294,"org.easymock.tests.UsageStrictMockTest.differentMethods":184,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":108,"org.easymock.tests2.MockBuilderTest.testCreateMockString":132,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":349,"org.easymock.tests.UsageExpectAndThrowTest.floatType":275,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":177,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":64,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":90,"org.easymock.tests.UsageVerifyTest.twoThrows":216,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":160,"org.easymock.samples.PartialClassMockTest.testGetArea":26,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":256,"org.easymock.samples.ExampleTest.voteAgainstRemoval":19,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":325,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":324,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":103,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":274,"org.easymock.tests2.UsageTest.niceToStrict":137,"org.easymock.tests2.UsageConstraintsTest.testNotNull":72,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":301,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":146,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":126,"org.easymock.tests2.MockBuilderTest.testCreateMock":130,"org.easymock.tests2.UsageTest.defaultResetToNice":141,"org.easymock.samples.ExampleTest.voteAgainstRemovals":16,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":201,"org.easymock.tests.UsageVarargTest.differentLength":249,"org.easymock.tests2.CallbackTest.callback":166,"org.easymock.tests.UsageTest.openCallCountByLastCall":239,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":282,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":116,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":48,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":340,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":328,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":263,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":169,"org.easymock.tests.UsageCallCountTest.tooFewCalls":229,"org.easymock.tests.UsageOverloadedMethodTest.overloading":225,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":304,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":62,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":224,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":197,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":154,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":61,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":84,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":172,"org.easymock.tests.UsageThrowableTest.throwCheckedException":298,"org.easymock.tests2.EasyMockSupportClassTest.testAll":158,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":2,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":290,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":270,"org.easymock.tests2.CaptureTest.testCaptureAll":76,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":45,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":219,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":156,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":153,"org.easymock.tests2.UsageConstraintsTest.testMatches":63,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":155,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":92,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":176,"org.easymock.tests.ObjectMethodsTest.testHashCode":348,"org.easymock.tests2.CompareToTest.testGreateOrEqual":306,"org.easymock.samples.ExampleTest.voteForRemovals":21,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":13,"org.easymock.tests2.NameTest.nameForNiceMock":312,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":110,"org.easymock.tests.UsageVarargTest.allKinds":254,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":215,"org.easymock.tests2.DependencyTest.testInterfaceMocking":32,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":12,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":271,"org.easymock.samples.BasicClassMockTest.testPrintContent":31,"org.easymock.samples.ExampleTest.addDocument":20,"org.easymock.tests2.DelegateToTest.testStubDelegate":163,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":300,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":36,"org.easymock.tests2.AnswerTest.stubAnswer":91,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":315,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":211,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":181,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":346,"org.easymock.tests2.UsageConstraintsTest.greaterThan":65,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":317,"org.easymock.tests.UsageVarargTest.varargLongAccepted":251,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":104,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":185,"org.easymock.samples.ExampleTest.voteForRemoval":18,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":107,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":204,"org.easymock.tests.UsageExpectAndReturnTest.floatType":188,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":99,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":105,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":24,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":342,"org.easymock.tests.UsageThrowableTest.noUpperLimit":295,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":66,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":260,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":49,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":133,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":80,"org.easymock.tests2.SerializationTest.test":6,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":113,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":296,"org.easymock.tests2.UsageConstraintsTest.testSame":54,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":187,"org.easymock.samples.SupportTest.addDocument":28,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":206,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":314,"org.easymock.tests2.CaptureTest.testCaptureFirst":88,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":114,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":145,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":305,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":193,"org.easymock.tests.GenericTest.testPackageScope":1,"org.easymock.tests2.CaptureTest.testCapture2_2446744":87,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":109,"org.easymock.tests2.UsageTest.moreThanOneArgument":135,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":336,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":131,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":253,"org.easymock.tests.GenericTest.testBridgedEquals":4,"org.easymock.tests2.NameTest.nameForMock":310,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":233,"org.easymock.tests.UsageExpectAndReturnTest.longType":189,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":268,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":111,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":291,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":198,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":332,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":70,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":289,"org.easymock.tests2.UsageStrictMockTest.differentMethods":41,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":330,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":173,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":190,"org.easymock.tests.UsageCallCountTest.tooManyCalls":234,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":287,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":214,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":228,"org.easymock.tests2.MockedExceptionTest.testRealException":149,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":194,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":344,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":278,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":38,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":299,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":262,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":152,"org.easymock.tests2.NameTest.nameForStrictMock":311,"org.easymock.tests2.UsageConstraintsTest.testContains":60,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":148,"org.easymock.tests2.UsageConstraintsTest.testFind":52,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":226,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":34,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":97,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":35,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":178,"org.easymock.tests.UsageExpectAndReturnTest.object":196,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":67,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":100,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":125,"org.easymock.tests2.UsageStrictMockTest.range":40,"org.easymock.tests2.UsageConstraintsTest.lessThan":74,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":119,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":248,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":11,"org.easymock.tests.UsageTest.exactCallCountByLastCall":243,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":218,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":345,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":112,"org.easymock.tests2.CaptureTest.testCaptureRightOne":85,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":334,"org.easymock.tests2.UsageConstraintsTest.testOr":55,"org.easymock.tests.UsageRangeTest.combination":212,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":8,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":244,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":202,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":94,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":303,"org.easymock.tests.UsageTest.wrongArguments":238,"org.easymock.tests.MockClassControlTest.testHashCode":350,"org.easymock.tests2.EasyMockSupportTest.testVerify":123,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":191,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":199,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":335,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":339,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":302,"org.easymock.tests.UsageVarargTest.varargShortAccepted":250,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":232,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":43,"org.easymock.tests2.UsageConstraintsTest.cmpTo":59,"org.easymock.tests.UsageVarargTest.varargCharAccepted":247,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":309,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":37,"org.easymock.tests2.UsageTest.openCallCountByLastCall":139,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":140,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":122,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":338,"org.easymock.tests2.CaptureTest.testCaptureFromStub":86,"org.easymock.tests.UsageTest.unexpectedCallWithArray":237,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":327,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":280,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":297,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":180,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":230,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":200,"org.easymock.tests2.UsageConstraintsTest.constraints":50,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":102,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":182,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":279,"org.easymock.samples.ExampleTest.addAndChangeDocument":22,"org.easymock.tests.CapturesMatcherTest.test":223,"org.easymock.tests.UsageStrictMockTest.testVerify":316,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":203,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":329,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":161,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":179,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":269,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":81,"org.easymock.tests2.UsageTest.resumeIfFailure":144,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":257,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":192,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":343,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":258,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":245,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":117}}]
