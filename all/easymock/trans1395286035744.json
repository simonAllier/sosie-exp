[{"position":"org.easymock.EasyMock:2000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:173","failures":[3],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:146","sourceCode":"try {\n    return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory();\n} catch (final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError) {\n    throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:43","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.And:49","sourceCode":"java.util.Iterator<org.easymock.IArgumentMatcher>.next().appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[4,5],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:152","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,6,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,7,8,9,10,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,3,109,110,111,112,113,4,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,11,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,12,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,13,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,14,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,15,16,17,18,19,20,467,468,469,470,471,472,473,474,475,21,22,23,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[24,25,26,27,28,29,31,32,33,34,35,36,37,38,38,39,39,40,46,48,49,50,51,52,53,54,55,56,57,58,59,60,62,6,66,69,79,85,7,8,9,10,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,3,109,110,111,112,113,4,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,176,182,189,190,191,192,194,195,196,199,202,204,205,209,213,214,221,222,223,224,225,226,229,232,233,234,235,243,250,252,253,254,255,256,259,261,266,273,274,275,298,299,301,302,303,304,305,306,307,308,11,309,310,311,314,315,316,318,322,323,325,326,327,329,330,347,353,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,386,387,388,389,390,391,392,393,394,395,396,397,398,399,14,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,429,430,431,432,433,434,435,436,437,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,457,458,459,15,16,17,18,19,20,467,468,469,470,471,472,473,474,475,21,22,23,476,477,478,479,480,481,482,483,484,485,486,487,489,490,491,492,493,494,495,496,498],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[511,512,300,513,514,443],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:573","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[139,515],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:959","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:296","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[332,336,337,345,350,375,479],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[516,517,518],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1647","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[120],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[253],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"failures":[515],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"shouldBeUsedInOneThread"}},{"position":"org.easymock.EasyMock:1373","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[24,26,27,29,33,37,46,48,49,50,52,54,55,56,59,60,6,66,69,79,85,9,91,92,94,95,96,97,98,99,100,101,102,103,104,105,3,112,113,4,114,116,117,118,119,120,121,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,142,144,145,152,156,158,159,160,161,162,165,166,167,168,170,171,172,182,189,190,191,192,194,195,196,199,202,204,205,209,213,214,221,222,223,224,225,226,229,233,234,235,243,250,252,253,254,255,259,266,273,274,275,298,299,302,303,306,307,308,310,311,315,316,318,322,323,325,340,342,351,352,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,386,388,389,390,391,392,393,399,14,444,446,447,455,457,459,467,468,469,470,471,472,473,474,475,476,477,478],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[108,109,152,450,452],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[24,25,26,27,29,33,37,46,48,49,50,51,52,53,54,55,57,58,60,6,69,79,85,9,88,90,91,92,94,96,97,98,99,102,104,105,108,3,109,111,112,113,4,114,116,117,118,119,120,121,123,124,125,126,127,128,129,130,131,132,133,134,136,137,138,139,140,142,143,144,145,146,152,155,156,157,158,159,160,161,162,163,164,167,168,176,182,189,190,191,192,194,195,196,202,204,205,209,213,214,221,223,224,226,243,250,253,254,255,259,274,275,298,299,301,302,303,304,305,306,307,308,309,310,311,315,316,318,322,323,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,386,388,389,390,391,392,393,399,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,441,443,444,445,446,447,448,455,457,458,459,467,468,469,470,471,472,474,475,481,482],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[45,228,251],"status":-1,"binaryOperator":"java.lang.String == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[62,346,353],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MockBuilder:229","failures":[69,199,209,233,237],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:38","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[126],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"expected"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[24,25,26,27,29,33,37,46,48,49,50,52,54,55,56,59,60,6,66,69,79,85,9,91,92,94,95,96,97,98,99,100,101,102,103,104,105,108,3,109,111,112,113,4,114,116,117,118,119,120,121,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,142,144,145,152,156,157,158,159,160,161,162,165,166,167,168,170,171,172,176,182,189,190,191,192,194,195,196,199,202,204,205,209,213,214,221,222,223,224,225,226,229,233,234,235,243,250,252,253,254,255,259,273,274,275,298,299,302,303,306,307,308,310,311,315,316,318,322,323,325,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,386,388,389,390,391,392,393,399,14,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,444,446,447,450,452,453,455,457,458,459,19,467,468,469,470,471,472,473,474,475],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,38,39,39,40,46,48,49,50,51,52,53,54,55,56,57,58,59,60,62,6,66,69,79,85,7,8,9,10,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,3,109,111,112,113,4,114,116,117,118,119,120,121,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,148,149,150,151,152,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,182,189,190,191,192,194,195,196,198,199,202,203,204,205,208,209,210,213,214,221,222,223,224,225,226,227,229,232,233,234,235,243,250,252,253,254,255,256,259,261,262,263,264,268,269,270,271,272,273,274,275,298,299,300,301,302,303,304,305,306,307,308,11,309,310,311,315,316,318,322,323,325,326,330,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,13,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,14,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,455,456,457,458,459,460,15,16,17,18,19,20,467,468,469,470,471,472,473,474,475,485,486,487,489,490,491,492,493,494,495,496,498,499,500,503,504,505,506,507,508,509,510],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":114,"org.easymock.tests2.UsageTest.argumentsOrdered":58,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":298,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":104,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":183,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":341,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":53,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":34,"org.easymock.tests2.DelegateToTest.testReturnException":108,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":16,"org.easymock.tests.MockingTest.testPartialClassMocking":315,"org.easymock.tests.MockClassControlTest.testToString":505,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":147,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":266,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":237,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":73,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":401,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":69,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":214,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":297,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":121,"org.easymock.tests2.UsageTest.wrongArguments":51,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":307,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":249,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":263,"org.easymock.samples.ExampleTest.answerVsDelegate":25,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":426,"org.easymock.tests2.UsageConstraintsTest.testNull":117,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":320,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":224,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":510,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":103,"org.easymock.tests2.CaptureTest.testPrimitive":161,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":310,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":420,"org.easymock.tests.UsageTest.moreThanOneArgument":299,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":223,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":396,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":480,"org.easymock.tests.UsageTest.argumentsOrdered":305,"org.easymock.tests.UsageVarargTest.varargIntAccepted":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":346,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":467,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":198,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":187,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":217,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":203,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":334,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":471,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":281,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":1,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":243,"org.easymock.tests.ReplayStateInvalidUsageTest.times":383,"org.easymock.tests2.DependencyTest.testClassMocking":211,"org.easymock.tests2.AnswerTest.answer":152,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":122,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":348,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":175,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":423,"org.easymock.tests2.CaptureTest.testAnd":158,"org.easymock.tests2.UsageTest.strictResetToDefault":49,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":232,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":395,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":474,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":98,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":484,"org.easymock.tests2.DelegateToTest.testDelegate":111,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":280,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":416,"org.easymock.tests.LimitationsTest.mockFinalMethod":260,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":19,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":272,"org.easymock.tests2.DependencyTest.testClassMockingSupport":212,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":329,"org.easymock.tests2.CaptureTest.testCapture1_2446744":162,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":228,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":414,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":173,"org.easymock.tests.UsageThrowableTest.throwError":386,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":377,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":425,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":188,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":398,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":87,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":284,"org.easymock.samples.PartialClassMockTest.testGetArea":37,"org.easymock.tests.MockingTest.testInterfaceMocking":317,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":378,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":468,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":477,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":502,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":402,"org.easymock.tests2.UsageTest.niceToStrict":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":74,"org.easymock.tests2.ThreadingTest.testChangeDefault":251,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":518,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":332,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":202,"org.easymock.tests2.MockBuilderTest.testCreateMock":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":82,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":246,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":511,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":410,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":99,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":422,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":431,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":432,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":261,"org.easymock.tests.UsageOverloadedMethodTest.overloading":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":84,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":453,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":127,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":273,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":366,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":126,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":167,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":488,"org.easymock.tests.MockClassControlTest.testEquals":509,"org.easymock.tests2.EasyMockSupportClassTest.testAll":66,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":326,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":418,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":174,"org.easymock.tests2.CaptureTest.testCaptureAll":159,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":270,"org.easymock.tests.MockNameTest.defaultName":400,"org.easymock.tests2.UsageConstraintsTest.testMatches":128,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":397,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":375,"org.easymock.samples.ExampleTest.voteForRemovals":29,"org.easymock.tests.UsageVarargTest.allKinds":496,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":457,"org.easymock.samples.BasicClassMockTest.testPrintContent":36,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":271,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":392,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":140,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":184,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":110,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":20,"org.easymock.tests2.UsageConstraintsTest.greaterThan":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":67,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":473,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":235,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":285,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":466,"org.easymock.samples.ExampleTest.voteForRemoval":26,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":236,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":252,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":427,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":227,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":277,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":48,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":256,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":207,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":12,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":96,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":64,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":15,"org.easymock.tests2.CaptureTest.testCaptureFirst":171,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":107,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":338,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":97,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":60,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":456,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":362,"org.easymock.tests2.CaptureTest.testCapture2_2446744":170,"org.easymock.tests2.UsageTest.moreThanOneArgument":50,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":254,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":209,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":349,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":495,"org.easymock.tests.GenericTest.testBridgedEquals":328,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":439,"org.easymock.tests.UsageExpectAndReturnTest.longType":358,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":94,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":268,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":419,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":479,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":135,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":417,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":394,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":22,"org.easymock.tests.UsageCallCountTest.tooManyCalls":440,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":2,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":434,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":83,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":363,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":248,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":406,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":391,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":190,"org.easymock.tests.MockingTest.testNiceClassMocking":321,"org.easymock.tests.MockingTest.testClassMocking":313,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":433,"org.easymock.tests2.UsageConstraintsTest.testContains":125,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":9,"org.easymock.tests2.UsageConstraintsTest.testFind":116,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":275,"org.easymock.tests.MockTypeTest.fromEasyMockClass":424,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":441,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":90,"org.easymock.tests.UsageExpectAndReturnTest.object":365,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":229,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":247,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":102,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":490,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":500,"org.easymock.tests.UsageTest.exactCallCountByLastCall":306,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":337,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":481,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":265,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":47,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":485,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":371,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":452,"org.easymock.tests.MockClassControlTest.testHashCode":508,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":178,"org.easymock.tests2.EasyMockSupportTest.testVerify":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":76,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":0,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":482,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":450,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":430,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":172,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":61,"org.easymock.tests.UsageVarargTest.varargCharAccepted":489,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":141,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":354,"org.easymock.tests2.UsageTest.openCallCountByLastCall":54,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":516,"org.easymock.tests.DefaultClassInstantiatorTest.object":460,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":105,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":429,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":498,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":408,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":77,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":389,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":241,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":177,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":507,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":233,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":283,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":407,"org.easymock.tests.ReplayStateInvalidCallsTest.times":289,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":372,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":21,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":290,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":506,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":85,"org.easymock.tests2.UsageTest.resumeIfFailure":59,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":421,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":216,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":18,"org.easymock.tests2.StubTest.stubWithReturnValue":6,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":136,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":364,"org.easymock.tests2.SerializationTest.testAllMockedMethod":93,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":347,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":512,"org.easymock.samples.SupportTest.voteForRemovals":33,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":324,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":180,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":413,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":353,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":153,"org.easymock.tests.UsageExpectAndThrowTest.object":411,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":267,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":133,"org.easymock.tests2.DelegateToTest.testWrongClass":109,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":287,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":322,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":323,"org.easymock.tests.UsageStrictMockTest.range":446,"org.easymock.samples.ConstructorCalledMockTest.testTax":38,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":219,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":101,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":189,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":412,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":204,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":63,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":304,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":262,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":513,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":279,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":478,"org.easymock.tests2.CaptureTest.testCaptureNone":166,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":42,"org.easymock.tests.UsageUnorderedTest.message":311,"org.easymock.tests.UsageVerifyTest.twoReturns":459,"org.easymock.tests.UsageVarargTest.varargByteAccepted":494,"org.easymock.tests2.ThreadingTest.testThreadSafe":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":80,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":437,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":501,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":35,"org.easymock.tests2.CaptureTest.testCapture_2617107":160,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":331,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":309,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":351,"org.easymock.tests2.UsageConstraintsTest.any":123,"org.easymock.tests2.StubTest.stub":62,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":382,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":23,"org.easymock.tests.UsageExpectAndThrowTest.longType":404,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":17,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":352,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":464,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":381,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":143,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":182,"org.easymock.tests2.SerializationTest.testClass":91,"org.easymock.tests.LimitationsTest.mockNativeMethod":259,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":327,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":374,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":240,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":295,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":146,"org.easymock.tests2.NameTest.nameForMocksControl":151,"org.easymock.tests2.MockedExceptionTest.testMockedException":8,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":68,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":303,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":405,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":89,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":318,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":221,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":205,"org.easymock.tests.MockingTest.testNicePartialClassMocking":316,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":226,"org.easymock.tests2.CaptureTest.testCaptureLast":165,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":238,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":330,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":120,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":196,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":294,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":134,"org.easymock.tests.MockingTest.testTwoMocks":314,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":291,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":197,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":355,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":409,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":57,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":138,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":45,"org.easymock.samples.ExampleTest.removeNonExistingDocument":30,"org.easymock.tests.UsageStrictMockTest.differentMethods":447,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":245,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":379,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":179,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":462,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":44,"org.easymock.tests2.ConstraintsToStringTest.andToString":5,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":253,"org.easymock.tests2.MockBuilderTest.testCreateMockString":210,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":503,"org.easymock.tests.UsageExpectAndThrowTest.floatType":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":70,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":65,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":155,"org.easymock.tests.UsageVerifyTest.twoThrows":458,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":451,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":79,"org.easymock.samples.ExampleTest.voteAgainstRemoval":27,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":476,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":342,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":234,"org.easymock.tests.LimitationsTest.privateConstructor":258,"org.easymock.tests2.UsageConstraintsTest.testNotNull":137,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":393,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":7,"org.easymock.tests2.UsageTest.defaultResetToNice":56,"org.easymock.samples.ExampleTest.voteAgainstRemovals":24,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":343,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":370,"org.easymock.tests.UsageVarargTest.differentLength":491,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":239,"org.easymock.tests2.CallbackTest.callback":176,"org.easymock.tests2.UsageConstraintsTest.equals":115,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":230,"org.easymock.tests.UsageTest.openCallCountByLastCall":302,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":112,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":11,"org.easymock.tests.UsageCallCountTest.tooFewCalls":435,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":192,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":264,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":43,"org.easymock.tests.UsageThrowableTest.throwCheckedException":390,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":514,"org.easymock.tests.MockingTest.testStrictClassMocking":312,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":14,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":195,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":191,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":244,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":384,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":194,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":157,"org.easymock.tests.ObjectMethodsTest.testHashCode":499,"org.easymock.tests2.NameTest.nameForNiceMock":150,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":255,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":293,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":288,"org.easymock.tests2.DependencyTest.testInterfaceMocking":213,"org.easymock.samples.ExampleTest.addDocument":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":81,"org.easymock.tests2.DelegateToTest.testStubDelegate":3,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":86,"org.easymock.tests2.AnswerTest.stubAnswer":156,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":444,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":206,"org.easymock.tests.UsageVarargTest.varargLongAccepted":493,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":448,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":340,"org.easymock.tests.UsageExpectAndReturnTest.floatType":357,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":373,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":46,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":39,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":454,"org.easymock.tests.UsageThrowableTest.noUpperLimit":387,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":186,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":131,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":113,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":215,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":163,"org.easymock.tests2.SerializationTest.test":92,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":461,"org.easymock.tests2.UsageConstraintsTest.testSame":118,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":356,"org.easymock.samples.SupportTest.addDocument":32,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":193,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":278,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":71,"org.easymock.tests.GenericTest.testPackageScope":325,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":483,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":336,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":185,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":319,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":276,"org.easymock.tests2.NameTest.nameForMock":148,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":367,"org.easymock.tests2.UsageStrictMockTest.differentMethods":145,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":231,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":359,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":415,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":497,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":475,"org.easymock.tests2.MockedExceptionTest.testRealException":10,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":428,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":220,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":345,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":142,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":344,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":385,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":308,"org.easymock.tests2.NameTest.nameForStrictMock":149,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":201,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":517,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":88,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":225,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":218,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":463,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":132,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":199,"org.easymock.tests2.UsageStrictMockTest.range":144,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":282,"org.easymock.tests2.UsageConstraintsTest.lessThan":139,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":181,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":95,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":339,"org.easymock.tests2.CaptureTest.testCaptureRightOne":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":75,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":41,"org.easymock.tests2.UsageConstraintsTest.testOr":119,"org.easymock.tests.UsageRangeTest.combination":472,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":222,"org.easymock.tests.UsageTest.wrongArguments":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":72,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":504,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":360,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":333,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":368,"org.easymock.tests.UsageVarargTest.varargShortAccepted":492,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":465,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":438,"org.easymock.tests2.UsageConstraintsTest.cmpTo":124,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":296,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":154,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":286,"org.easymock.tests2.CompareToTest.testLessThan":515,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":335,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":55,"org.easymock.tests2.CaptureTest.testCaptureFromStub":169,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":376,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":200,"org.easymock.tests.UsageTest.unexpectedCallWithArray":300,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":292,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":443,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":436,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":369,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":445,"org.easymock.tests2.UsageConstraintsTest.constraints":4,"org.easymock.samples.ExampleTest.addAndChangeDocument":31,"org.easymock.tests.UsageStrictMockTest.testVerify":449,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":40,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":442,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":269,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":164,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":469,"org.easymock.tests.LimitationsTest.abstractClass":257,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":361,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":470,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":455,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":486,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":100}}]
