[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"type":"type"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:52","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Double.java.lang.Class<java.lang.Double>, java.lang.Double.java.lang.Double.valueOf(0))","type":"CtInvocationImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[15,16,17],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:58","sourceCode":"java.lang.String[][int] = java.lang.Class<?>[][int].getName()","type":"CtAssignmentImpl"},"failures":[18,19,20,21],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[22],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"value","this":"this"}},{"position":"org.easymock.Capture:82","failures":[23,24,25,26,27,28,29,30,31,32,33,34],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:243","failures":[35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,7,8,75,76,77,78,9,79,80,81,82,10,83,84,85,86,87,88,89,90,91,92,11,22,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,14,109,110,111,112,113],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[35,36,37,38,39,40,41,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,42,43,44,45,46,23,141,24,25,26,29,142,30,32,143,34,47,48,49,50,51,52,53,54,55,56,144,145,146,57,147,148,149,150,151,152,153,154,155,156,157,158,58,59,159,60,160,61,62,63,64,65,66,67,161,162,163,164,165,166,167,168,169,170,171,172,68,69,70,71,173,174,72,73,74,18,19,7,8,75,76,77,78,175,176,9,79,177,80,81,82,178,10,83,84,85,86,87,88,89,179,93,94,95,96,180,181,182,183,184,185,186,187,188,189,190,191,192,193,97,99,194,195,100,101,196,197,198,102,103,104,105,106,199,200,108,14,201,109,110,111],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))","type":"CtThrowImpl"},"failures":[202],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[203,204,205,206,207,208],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cls":"parameterType","type":"parameterType"}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:70","sourceCode":"java.lang.Class<?>[][int] = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[18,19,21],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:304","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[209,210,211,212,213],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:44","sourceCode":"throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()","type":"CtThrowImpl"},"failures":[116,130,42,214,46,215,48,54,56,146,150,216,153,217,218,219,157,158,220,162,166,167,170,221,222,73,74,93,180,223,224,225,226,184,227,228,229,200,230,231,232,201,233,234,110,111],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[216,218,219,73,235,236,223,224,225,226,227,229,200,233,110],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:181","failures":[203,204,237,205,206,207,238,239,208,18],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[35,240,240,241,241,242,243,41,203,244,245,42,246,247,43,248,44,45,249,214,46,250,215,47,48,50,51,52,251,53,252,253,254,54,55,56,255,256,257,258,148,259,260,61,62,63,64,66,67,261,262,263,264,68,265,266,69,267,268,269,270,271,272,273,274,275,70,276,277,278,279,280,71,281,282,18,20,283,284,285,87,88,89,286,287,288,289,290,291,292,293,294,295,296,0,97,297,98,1,15,298,299,300,301,16,302,303,304,305,100,306,307],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[308,309,310,311,312],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"this","value":"delegateTo","this":"lastResult"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:94","sourceCode":"return org.easymock.internal.MockInvocationHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[216,218,219,73,235,236,223,224,225,226,227,229,200,233,110],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:142","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:229","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.get(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[35,240,240,241,241,36,37,38,39,40,41,114,115,117,118,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,137,139,140,313,314,2,315,244,42,43,248,44,45,46,23,141,25,26,29,142,30,32,33,143,34,47,49,50,52,251,254,144,145,146,57,147,257,258,148,316,149,150,151,153,154,155,156,157,158,220,159,317,309,60,310,318,311,160,61,62,63,64,65,66,67,161,162,163,164,165,166,167,168,169,170,171,172,68,69,70,71,319,3,4,320,321,322,5,323,6,324,325,326,327,209,210,211,7,8,75,76,77,9,79,10,83,84,85,86,285,87,88,89,90,91,11,328,329,312,330,331,179,332,333,22,180,182,183,184,334,335,336,337,338,291,295,339,340,341,185,186,187,188,189,190,191,192,193,97,98,99,194,195,100,197,198,342,12,343,102,103,104,105,106,107,344,345,346,13,199,229,200,108,14,112,113],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[48],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"position":"org.easymock.internal.LastControl:48","failures":[35,240,240,241,241,36,308,37,38,39,347,40,41,348,349,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,137,138,139,140,42,43,44,45,46,23,141,25,26,29,142,30,32,33,143,34,47,48,49,50,51,52,53,54,55,56,144,145,146,57,147,257,258,148,316,149,150,151,152,153,154,155,156,157,158,58,59,220,159,317,309,60,310,318,311,350,160,61,62,63,64,65,66,67,161,162,163,164,165,166,167,168,169,170,171,172,68,69,70,71,173,351,352,353,174,319,72,73,74,18,19,3,4,320,321,322,354,355,356,5,323,357,358,359,360,361,6,324,325,326,327,209,210,211,7,8,75,76,77,78,175,176,9,79,177,80,81,82,178,10,83,84,85,86,87,88,89,90,91,92,11,362,328,312,330,179,333,22,93,94,95,96,180,181,182,183,184,289,363,364,365,366,367,227,339,340,341,185,186,187,368,188,189,190,191,192,193,97,98,99,194,195,369,370,100,101,196,371,372,197,102,103,104,105,106,107,344,345,373,374,346,13,199,229,200,375,108,14,109,110,111,376,112,113],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[133],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[290,291,292,293,295,296],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[127],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[160,371,346],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:124","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1964","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[291,295],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[116,117,119,121,122,377,133,138,23,24,32],"status":-1,"binaryOperator":"int < int","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[203,204,205,206,207,238,239],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[291,295],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[35,36,37,38,39,40,41,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,137,138,139,140,42,43,44,45,46,23,141,25,26,29,142,30,32,143,34,47,48,49,50,51,52,53,54,55,56,144,145,146,57,147,148,149,150,151,152,153,154,155,156,157,158,58,59,159,60,160,61,62,63,64,65,66,67,161,162,163,164,165,166,167,168,169,170,171,172,68,69,70,71,174,72,73,74,18,19,7,8,75,76,77,78,175,176,9,79,177,80,81,82,178,10,83,84,85,86,87,88,89,179,93,94,95,96,180,181,182,183,184,185,187,188,189,190,191,192,193,97,98,99,194,195,378,379,380,381,382,100,101,196,197,102,103,104,105,106,107,199,200,108,14,109,110,111,112,113],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:839","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[137],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:41","sourceCode":"try {\n    return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n}","type":"CtTryImpl"},"failures":[294,383,384],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[351,174,319,385],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[386,387,388],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:104","sourceCode":"throw new java.lang.IllegalStateException(java.lang.String)","type":"CtThrowImpl"},"failures":[377],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[35,240,241,36,308,37,38,389,39,390,347,391,242,243,392,393,40,41,203,394,395,396,397,398,348,399,349,114,115,116,117,400,118,119,120,121,122,123,377,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,313,314,2,315,244,42,246,247,43,248,44,45,401,249,214,46,215,23,141,24,25,26,27,28,29,142,30,32,33,143,34,402,47,48,49,50,51,52,251,403,53,252,253,254,54,55,56,255,256,144,404,145,146,57,147,257,258,148,316,405,406,407,408,409,149,410,411,412,413,414,415,150,151,152,216,153,217,154,155,156,218,219,157,158,416,417,58,59,220,418,419,420,421,422,423,159,424,425,426,427,428,429,317,309,60,310,318,311,259,430,431,260,432,433,350,160,61,62,63,64,434,65,66,67,435,161,162,163,164,165,166,167,168,169,170,171,172,436,262,263,264,68,265,266,69,267,268,269,270,271,272,273,274,275,70,276,277,278,279,280,71,281,282,173,351,352,353,174,319,221,437,72,222,73,74,438,18,19,20,3,4,320,321,322,354,355,356,5,323,357,358,359,360,361,6,324,325,326,327,209,210,211,7,8,75,76,77,78,175,176,9,79,177,80,81,82,178,10,83,84,85,86,283,284,285,87,88,439,89,440,441,286,442,443,444,445,446,447,448,449,450,451,212,452,90,91,92,11,362,287,453,454,455,456,288,457,458,328,329,312,330,331,179,235,332,333,459,22,93,94,95,96,180,181,223,224,182,183,225,226,184,289,363,364,365,366,367,334,335,336,337,338,290,291,292,293,294,295,296,227,339,340,341,185,186,460,187,368,188,189,190,191,192,193,0,97,297,98,1,99,194,195,461,462,463,464,465,466,385,213,467,378,468,379,469,470,471,472,369,473,474,475,380,381,370,382,476,477,478,479,480,481,228,482,483,484,485,486,15,298,299,300,301,16,302,303,304,305,100,306,101,196,371,372,197,198,342,12,343,102,103,104,105,106,487,107,488,489,490,17,491,492,307,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,344,345,373,374,346,13,199,229,200,515,516,375,517,518,519,230,231,232,108,14,201,520,233,109,234,110,111,521,522,376,112,113],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[209,210,211],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:572","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[124],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[133],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:288","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:324","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    if (java.lang.reflect.Type == null) {\n        java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n    } \n    if (java.lang.reflect.Type != null) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } \n} ","type":"CtIfImpl"},"failures":[0],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"genericInterface":"actualTypeArgument","typeVariableMap":"typeVariableMap","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":117,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":180,"org.easymock.tests2.UsageTest.argumentsOrdered":219,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":171,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":468,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":217,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":391,"org.easymock.tests2.DelegateToTest.testReturnException":309,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":345,"org.easymock.tests.MockingTest.testPartialClassMocking":87,"org.easymock.tests.MockClassControlTest.testToString":299,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":394,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":107,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":475,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":270,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":3,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":69,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":59,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":514,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":205,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":123,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":101,"org.easymock.tests2.UsageTest.wrongArguments":216,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":429,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":12,"org.easymock.samples.ExampleTest.answerVsDelegate":308,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":288,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":441,"org.easymock.tests2.UsageConstraintsTest.testNull":119,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":50,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":170,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":303,"org.easymock.tests2.CaptureTest.testPrimitive":25,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":197,"org.easymock.tests.UsageTest.moreThanOneArgument":181,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":327,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":49,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":92,"org.easymock.tests.UsageTest.argumentsOrdered":226,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":363,"org.easymock.tests.UsageVarargTest.varargIntAccepted":478,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":472,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":102,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":239,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":244,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":431,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":414,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":248,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":463,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":106,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":498,"org.easymock.tests.ReplayStateInvalidUsageTest.times":450,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":159,"org.easymock.tests2.DependencyTest.testClassMocking":416,"org.easymock.tests2.AnswerTest.answer":173,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":377,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":473,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":315,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":454,"org.easymock.tests2.CaptureTest.testAnd":23,"org.easymock.tests2.UsageTest.strictResetToDefault":151,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":254,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":91,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":165,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":95,"org.easymock.tests2.DelegateToTest.testDelegate":311,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":367,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":497,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":6,"org.easymock.tests.LimitationsTest.mockFinalMethod":306,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":346,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":338,"org.easymock.tests2.DependencyTest.testClassMockingSupport":417,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":332,"org.easymock.tests2.CaptureTest.testCapture1_2446744":26,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":403,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":360,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":314,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":444,"org.easymock.tests.UsageThrowableTest.throwError":187,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":456,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":415,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":282,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":501,"org.easymock.samples.PartialClassMockTest.testGetArea":35,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":445,"org.easymock.tests.MockingTest.testInterfaceMocking":439,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":103,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":112,"org.easymock.tests2.UsageTest.niceToStrict":153,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":271,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":307,"org.easymock.tests2.ThreadingTest.testChangeDefault":404,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":461,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":388,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":43,"org.easymock.tests2.MockBuilderTest.testCreateMock":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":278,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":426,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":323,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":166,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":453,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":341,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":515,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":198,"org.easymock.tests.UsageOverloadedMethodTest.overloading":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":280,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":128,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":330,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":99,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":80,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":127,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":383,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":30,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":479,"org.easymock.tests2.EasyMockSupportClassTest.testAll":68,"org.easymock.tests.MockClassControlTest.testEquals":302,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":297,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":325,"org.easymock.tests2.CaptureTest.testCaptureAll":141,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":2,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":336,"org.easymock.tests.MockNameTest.defaultName":460,"org.easymock.tests2.UsageConstraintsTest.testMatches":129,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":442,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":11,"org.easymock.samples.ExampleTest.voteForRemovals":39,"org.easymock.tests.UsageVarargTest.allKinds":486,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":199,"org.easymock.samples.BasicClassMockTest.testPrintContent":243,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":337,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":192,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":221,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":411,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":13,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":318,"org.easymock.tests2.UsageConstraintsTest.greaterThan":131,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":265,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":94,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":56,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":502,"org.easymock.samples.ExampleTest.voteForRemoval":37,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":296,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":145,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":255,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":457,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":251,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":494,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":150,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":289,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":249,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":213,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":163,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":263,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":344,"org.easymock.tests2.CaptureTest.testCaptureFirst":34,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":317,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":385,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":164,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":158,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":235,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":176,"org.easymock.tests2.UsageTest.moreThanOneArgument":152,"org.easymock.tests2.CaptureTest.testCapture2_2446744":143,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":57,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":474,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":46,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":485,"org.easymock.tests.GenericTest.testBridgedEquals":1,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":231,"org.easymock.tests.UsageExpectAndReturnTest.longType":76,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":161,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":334,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":250,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":326,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":136,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":22,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":324,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":90,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":210,"org.easymock.tests.UsageCallCountTest.tooManyCalls":232,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":279,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":9,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":428,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":354,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":191,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":62,"org.easymock.tests.MockingTest.testNiceClassMocking":286,"org.easymock.tests.MockingTest.testClassMocking":284,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":516,"org.easymock.tests2.UsageConstraintsTest.testContains":126,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":245,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":148,"org.easymock.tests2.UsageConstraintsTest.testFind":118,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":195,"org.easymock.tests.MockTypeTest.fromEasyMockClass":455,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":201,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":349,"org.easymock.tests.UsageExpectAndReturnTest.object":177,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":53,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":427,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":169,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":481,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":206,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":491,"org.easymock.tests.UsageTest.exactCallCountByLastCall":184,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":185,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":466,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":487,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":364,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":203,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":476,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":83,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":312,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":406,"org.easymock.tests.MockClassControlTest.testHashCode":16,"org.easymock.tests2.EasyMockSupportTest.testVerify":436,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":273,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":365,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":328,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":340,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":313,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":418,"org.easymock.tests.UsageVarargTest.varargCharAccepted":480,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":437,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":382,"org.easymock.tests2.UsageTest.openCallCountByLastCall":154,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":386,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":172,"org.easymock.tests.DefaultClassInstantiatorTest.object":290,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":339,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":490,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":274,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":356,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":189,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":422,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":405,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":500,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":54,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":301,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":355,"org.easymock.tests.ReplayStateInvalidCallsTest.times":506,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":84,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":209,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":507,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":71,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":300,"org.easymock.tests2.UsageTest.resumeIfFailure":157,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":287,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":430,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":374,"org.easymock.tests2.StubTest.stubWithReturnValue":160,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":204,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":137,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":79,"org.easymock.tests2.SerializationTest.testAllMockedMethod":20,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":369,"org.easymock.samples.SupportTest.voteForRemovals":40,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":0,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":408,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":359,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":21,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":370,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":351,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":488,"org.easymock.tests.UsageExpectAndThrowTest.object":357,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":134,"org.easymock.tests2.DelegateToTest.testWrongClass":310,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":504,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":108,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":14,"org.easymock.tests.UsageStrictMockTest.range":110,"org.easymock.samples.ConstructorCalledMockTest.testTax":240,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":432,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":168,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":61,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":358,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":44,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":212,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":262,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":342,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":496,"org.easymock.tests2.CaptureTest.testCaptureNone":142,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":113,"org.easymock.tests.UsageUnorderedTest.message":227,"org.easymock.tests.UsageVerifyTest.twoReturns":200,"org.easymock.tests.UsageVarargTest.varargByteAccepted":484,"org.easymock.tests2.ThreadingTest.testThreadSafe":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":276,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":519,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":492,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":242,"org.easymock.tests2.CaptureTest.testCapture_2617107":24,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":459,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":380,"org.easymock.tests2.UsageConstraintsTest.any":124,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":449,"org.easymock.tests2.StubTest.stub":350,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":211,"org.easymock.tests.UsageExpectAndThrowTest.longType":321,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":373,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":381,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":294,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":448,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":222,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":149,"org.easymock.tests2.SerializationTest.testClass":18,"org.easymock.tests.LimitationsTest.mockNativeMethod":100,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":98,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":86,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":421,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":512,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":438,"org.easymock.tests2.NameTest.nameForMocksControl":398,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":202,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":423,"org.easymock.tests2.MockedExceptionTest.testMockedException":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":266,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":183,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":399,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":89,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":322,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":47,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":45,"org.easymock.tests.MockingTest.testNicePartialClassMocking":88,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":52,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":419,"org.easymock.tests2.CaptureTest.testCaptureLast":29,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":237,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":333,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":511,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":122,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":67,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":135,"org.easymock.tests.MockingTest.testTwoMocks":285,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":508,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":435,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":7,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":5,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":218,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":139,"org.easymock.samples.ExampleTest.removeNonExistingDocument":390,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":446,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":425,"org.easymock.tests.UsageStrictMockTest.differentMethods":111,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":407,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":402,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":292,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":146,"org.easymock.tests2.MockBuilderTest.testCreateMockString":215,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":267,"org.easymock.tests.UsageExpectAndThrowTest.floatType":320,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":264,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":353,"org.easymock.tests.UsageVerifyTest.twoThrows":229,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":70,"org.easymock.samples.ExampleTest.voteAgainstRemoval":38,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":379,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":55,"org.easymock.tests.LimitationsTest.privateConstructor":305,"org.easymock.tests2.UsageConstraintsTest.testNotNull":138,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":193,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":257,"org.easymock.tests2.UsageTest.defaultResetToNice":156,"org.easymock.samples.ExampleTest.voteAgainstRemovals":36,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":469,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":10,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":420,"org.easymock.tests.UsageVarargTest.differentLength":228,"org.easymock.tests2.CallbackTest.callback":220,"org.easymock.tests2.UsageConstraintsTest.equals":400,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":252,"org.easymock.tests.UsageTest.openCallCountByLastCall":182,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":114,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":371,"org.easymock.tests.UsageCallCountTest.tooFewCalls":517,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":64,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":343,"org.easymock.tests.UsageThrowableTest.throwCheckedException":190,"org.easymock.tests.MockingTest.testStrictClassMocking":283,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":186,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":66,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":424,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":63,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":451,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":65,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":319,"org.easymock.tests.ObjectMethodsTest.testHashCode":17,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":238,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":510,"org.easymock.tests2.NameTest.nameForNiceMock":397,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":147,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":505,"org.easymock.tests2.DependencyTest.testInterfaceMocking":58,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":207,"org.easymock.samples.ExampleTest.addDocument":389,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":277,"org.easymock.tests2.DelegateToTest.testStubDelegate":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":281,"org.easymock.tests2.AnswerTest.stubAnswer":174,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":109,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":401,"org.easymock.tests.UsageVarargTest.varargLongAccepted":483,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":521,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":378,"org.easymock.tests.UsageExpectAndReturnTest.floatType":75,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":85,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":41,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":241,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":413,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":132,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":331,"org.easymock.tests.UsageThrowableTest.noUpperLimit":368,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":115,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":259,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":27,"org.easymock.tests2.SerializationTest.test":19,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":384,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":291,"org.easymock.tests2.UsageConstraintsTest.testSame":120,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":8,"org.easymock.samples.SupportTest.addDocument":393,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":434,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":495,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":447,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":268,"org.easymock.tests.GenericTest.testPackageScope":97,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":366,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":465,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":412,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":440,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":493,"org.easymock.tests2.NameTest.nameForMock":395,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":81,"org.easymock.tests2.UsageStrictMockTest.differentMethods":74,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":253,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":77,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":361,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":489,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":96,"org.easymock.tests2.MockedExceptionTest.testRealException":316,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":458,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":471,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":433,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":470,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":72,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":452,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":196,"org.easymock.tests2.NameTest.nameForStrictMock":396,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":247,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":387,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":348,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":51,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":260,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":133,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":293,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":42,"org.easymock.tests2.UsageStrictMockTest.range":73,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":499,"org.easymock.tests2.UsageConstraintsTest.lessThan":140,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":409,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":467,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":162,"org.easymock.tests2.CaptureTest.testCaptureRightOne":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":272,"org.easymock.tests2.UsageConstraintsTest.testOr":121,"org.easymock.tests.UsageRangeTest.combination":93,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":48,"org.easymock.tests.UsageTest.wrongArguments":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":269,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":298,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":78,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":462,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":82,"org.easymock.tests.UsageVarargTest.varargShortAccepted":482,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":295,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":230,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":513,"org.easymock.tests2.UsageConstraintsTest.cmpTo":125,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":352,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":503,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":464,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":155,"org.easymock.tests2.CaptureTest.testCaptureFromStub":33,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":443,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":246,"org.easymock.tests.UsageTest.unexpectedCallWithArray":223,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":509,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":233,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":518,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":178,"org.easymock.tests2.CaptureTest.testCapture":31,"org.easymock.tests2.UsageConstraintsTest.constraints":116,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":234,"org.easymock.samples.ExampleTest.addAndChangeDocument":347,"org.easymock.tests.UsageStrictMockTest.testVerify":522,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":392,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":520,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":335,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":28,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":104,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":261,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":175,"org.easymock.tests.LimitationsTest.abstractClass":304,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":179,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":105,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":477,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":167}}]
