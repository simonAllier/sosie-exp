[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"parameterType","type":"parameterType"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:63","sourceCode":"java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[0,1,2,3],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:127","sourceCode":"try {\n    java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:135","sourceCode":"java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader()","type":"CtAssignmentImpl"},"failures":[1],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:354","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:126","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[4,5,6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[0,7],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:243","failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:148","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[94,95,96],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[11,97,98,99,100,101,55,102,103,104,105,106,107,108,109],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:180","sourceCode":"if ((java.lang.Class<?>[].int) != (java.lang.Object[].int)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:184","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; ++int) {\n    java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n    } \n    if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n        return false;\n    } \n}","type":"CtForImpl"},"failures":[110,111,112,113,114,115,116],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:174","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[35],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1277","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[117],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1928","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (this.int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[11,12,55,56],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"minimum":"minimum"}},{"position":"org.easymock.EasyMock:643","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[10,11,12,24,26,28,118,32,101,54,55,56,119,105],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[110,111,112,113,114,115,116],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[120,121,122,123,124,125,126,127,128,129,130],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:148","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[94,95,96],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"failures":[131],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[132],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[8,9,133,134,135,136,137,138,139,140,10,141,11,12,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,132,13,159,14,160,161,162,4,5,6,163,164,15,16,17,18,19,20,21,120,165,121,166,167,168,169,170,171,172,122,173,174,175,176,177,178,97,179,180,181,182,183,98,99,184,185,186,187,22,188,189,190,191,192,123,124,193,125,194,126,127,195,128,196,197,198,199,200,201,202,203,204,129,205,206,207,208,130,209,210,211,212,213,214,23,24,25,26,27,28,215,29,118,30,31,32,33,34,35,36,37,216,217,218,219,220,38,39,40,41,221,222,223,42,224,43,44,225,45,226,227,227,228,228,229,46,230,47,100,231,232,233,234,48,49,50,51,235,236,237,238,52,239,53,240,241,101,54,242,55,56,243,119,244,57,58,245,246,247,248,249,250,251,252,253,59,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,60,283,61,62,63,284,285,286,287,288,289,290,291,64,65,66,67,68,69,292,293,70,71,294,72,73,74,295,75,76,77,78,79,296,297,80,81,82,83,84,85,298,299,300,301,302,303,304,305,306,307,308,86,87,88,89,309,103,104,90,91,310,311,312,313,105,106,314,315,107,108,316,317,318,92,93,319,320,321,322,323,324,325,326,327,328,329,330,331],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:665","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:189","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, new net.sf.cglib.proxy.Callback[]{ org.easymock.internal.ClassProxyFactory.MockMethodInterceptor })","type":"CtInvocationImpl"},"failures":[14,160,4,6,15,16,17,18,20,21,332,120,23,24,25,26,27,28,215,29,333,118,30,31,32,334,335,336,33,337,338,34,339,35,36,340,37,341,216,217,218,219,38,39,40,41,221,222,223,42,227,227,228,228,229,47,342,100,52,239,53,343,344,345,346,347,348,349,350,240,60,351,352,283,61,62,63,353,284,354,355,92,325],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Matches:40","failures":[356],"status":-1,"binaryOperator":"((\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:78","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"m"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[110,111,112,113,114,115,116],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[4,5,6,357],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1319","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:322","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1687","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(T[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[358,120,165,121,166,167,168,169,170,171,172,359,122,173,174,175,176,360,258],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:208","sourceCode":"final java.lang.SecurityException java.lang.SecurityException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"failures":[186,189],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[129],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:60","failures":[110,361,362,17,21,363,364,365,116,366,367],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[368,369,101,370,371,105],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[10,12,142,178,54,56,243,309,103,104,313,372,324],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[373],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[186],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[110,361,362,374,17,21,363,364,365,116,366,367],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":124,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":312,"org.easymock.tests2.UsageTest.argumentsOrdered":99,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":154,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":329,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":180,"org.easymock.tests2.StubTest.stubWithReturnValue":164,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":116,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":230,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":208,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":71,"org.easymock.tests2.SerializationTest.testAllMockedMethod":6,"org.easymock.tests2.DelegateToTest.testReturnException":187,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":327,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":252,"org.easymock.tests.MockingTest.testPartialClassMocking":61,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":369,"org.easymock.samples.SupportTest.voteForRemovals":46,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":373,"org.easymock.tests.MockClassControlTest.testToString":345,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":80,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":335,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":275,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":357,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":263,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":253,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":39,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":134,"org.easymock.tests.UsageExpectAndThrowTest.object":273,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":205,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":9,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":111,"org.easymock.tests2.DelegateToTest.testWrongClass":188,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":92,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":93,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":195,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":59,"org.easymock.tests2.UsageTest.wrongArguments":97,"org.easymock.samples.ConstructorCalledMockTest.testTax":227,"org.easymock.tests.UsageStrictMockTest.range":55,"org.easymock.samples.ExampleTest.answerVsDelegate":224,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":151,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":355,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":15,"org.easymock.tests2.UsageConstraintsTest.testNull":125,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":274,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":26,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":350,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":35,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":153,"org.easymock.tests2.CaptureTest.testPrimitive":166,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":257,"org.easymock.tests.UsageTest.moreThanOneArgument":313,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":282,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":107,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":25,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":370,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":50,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":58,"org.easymock.tests2.CaptureTest.testCaptureNone":171,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":1,"org.easymock.tests.UsageUnorderedTest.message":100,"org.easymock.tests.UsageVerifyTest.twoReturns":104,"org.easymock.tests.UsageVarargTest.varargByteAccepted":306,"org.easymock.tests2.ThreadingTest.testThreadSafe":157,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":258,"org.easymock.tests.UsageTest.argumentsOrdered":108,"org.easymock.tests.UsageVarargTest.varargIntAccepted":300,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":249,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":222,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":81,"org.easymock.tests2.CaptureTest.testCapture_2617107":121,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":336,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":115,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":372,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":256,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":339,"org.easymock.tests2.UsageConstraintsTest.any":196,"org.easymock.tests2.StubTest.stub":163,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":238,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":85,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":328,"org.easymock.tests.UsageExpectAndThrowTest.longType":266,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":94,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":141,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":216,"org.easymock.tests2.SerializationTest.testClass":4,"org.easymock.tests.LimitationsTest.mockNativeMethod":60,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":143,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":131,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":79,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":53,"org.easymock.tests2.AnswerTest.answer":133,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":128,"org.easymock.tests2.CaptureTest.testAnd":120,"org.easymock.tests2.UsageTest.strictResetToDefault":177,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":365,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":118,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":142,"org.easymock.tests2.NameTest.nameForMocksControl":214,"org.easymock.tests2.MockedExceptionTest.testMockedException":218,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":49,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":88,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":148,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":315,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":262,"org.easymock.tests2.DelegateToTest.testDelegate":190,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":267,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":63,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":23,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":36,"org.easymock.tests.MockingTest.testNicePartialClassMocking":62,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":278,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":28,"org.easymock.tests2.CaptureTest.testCaptureLast":170,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":330,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":318,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":21,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":127,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":206,"org.easymock.tests.MockingTest.testTwoMocks":283,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":317,"org.easymock.tests2.CaptureTest.testCapture1_2446744":167,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":363,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":64,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":276,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":271,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":98,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":209,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":3,"org.easymock.tests.UsageThrowableTest.throwError":284,"org.easymock.tests.UsageStrictMockTest.differentMethods":56,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":7,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":132,"org.easymock.tests2.MockBuilderTest.testCreateMockString":341,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":343,"org.easymock.tests.UsageExpectAndThrowTest.floatType":265,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":235,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":202,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":136,"org.easymock.tests.UsageVerifyTest.twoThrows":103,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":320,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":40,"org.easymock.samples.PartialClassMockTest.testGetArea":47,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":82,"org.easymock.samples.ExampleTest.voteAgainstRemoval":44,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":244,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":57,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":31,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":264,"org.easymock.tests2.UsageTest.niceToStrict":179,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":362,"org.easymock.tests2.UsageConstraintsTest.testNotNull":130,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":291,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":217,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":117,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":34,"org.easymock.tests2.MockBuilderTest.testCreateMock":340,"org.easymock.tests2.UsageTest.defaultResetToNice":183,"org.easymock.samples.ExampleTest.voteAgainstRemovals":42,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":75,"org.easymock.tests.UsageVarargTest.differentLength":303,"org.easymock.tests2.CallbackTest.callback":160,"org.easymock.tests.UsageTest.openCallCountByLastCall":314,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":368,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":272,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":149,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":191,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":234,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":245,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":255,"org.easymock.tests.UsageCallCountTest.tooFewCalls":247,"org.easymock.tests.UsageOverloadedMethodTest.overloading":310,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":322,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":200,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":91,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":72,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":18,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":199,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":95,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":172,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":2,"org.easymock.tests.UsageThrowableTest.throwCheckedException":288,"org.easymock.tests.MockClassControlTest.testEquals":349,"org.easymock.tests2.EasyMockSupportClassTest.testAll":38,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":239,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":371,"org.easymock.tests.MockingTest.testStrictClassMocking":351,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":280,"org.easymock.tests2.CaptureTest.testCaptureAll":165,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":297,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":20,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":17,"org.easymock.tests2.UsageConstraintsTest.testMatches":201,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":19,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":138,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":231,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":51,"org.easymock.samples.ExampleTest.voteForRemovals":45,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":356,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":114,"org.easymock.tests2.NameTest.nameForNiceMock":213,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":159,"org.easymock.tests.UsageVarargTest.allKinds":308,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":309,"org.easymock.tests2.DependencyTest.testInterfaceMocking":8,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":113,"org.easymock.samples.BasicClassMockTest.testPrintContent":223,"org.easymock.samples.ExampleTest.addDocument":225,"org.easymock.tests2.DelegateToTest.testStubDelegate":22,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":290,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":139,"org.easymock.tests2.AnswerTest.stubAnswer":137,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":331,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":189,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":54,"org.easymock.tests2.UsageConstraintsTest.greaterThan":203,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":87,"org.easymock.tests.UsageVarargTest.varargLongAccepted":305,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":32,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":243,"org.easymock.samples.ExampleTest.voteForRemoval":43,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":334,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":158,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":78,"org.easymock.tests.UsageExpectAndReturnTest.floatType":66,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":215,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":14,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":228,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":323,"org.easymock.tests.UsageThrowableTest.noUpperLimit":285,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":204,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":325,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":192,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":176,"org.easymock.tests2.SerializationTest.test":5,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":168,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":96,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":146,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":286,"org.easymock.tests2.UsageConstraintsTest.testSame":194,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":65,"org.easymock.samples.SupportTest.addDocument":229,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":326,"org.easymock.tests2.CaptureTest.testCaptureFirst":175,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":186,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":147,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":185,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":109,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":293,"org.easymock.tests.GenericTest.testPackageScope":52,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":13,"org.easymock.tests2.CaptureTest.testCapture2_2446744":174,"org.easymock.tests2.UsageTest.moreThanOneArgument":178,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":261,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":37,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":307,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":374,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":250,"org.easymock.tests2.NameTest.nameForMock":211,"org.easymock.tests.UsageExpectAndReturnTest.longType":67,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":144,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":281,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":73,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":207,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":90,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":367,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":279,"org.easymock.tests2.UsageStrictMockTest.differentMethods":12,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":237,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":48,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":333,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":68,"org.easymock.tests.UsageCallCountTest.tooManyCalls":251,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":277,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":89,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":246,"org.easymock.tests2.MockedExceptionTest.testRealException":220,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":70,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":268,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":10,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":289,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":254,"org.easymock.tests.MockingTest.testNiceClassMocking":353,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":16,"org.easymock.tests.MockingTest.testClassMocking":352,"org.easymock.tests2.NameTest.nameForStrictMock":212,"org.easymock.tests2.UsageConstraintsTest.testContains":198,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":219,"org.easymock.tests2.UsageConstraintsTest.testFind":193,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":311,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":338,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":161,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":27,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":240,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":162,"org.easymock.tests.UsageExpectAndReturnTest.object":294,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":332,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":129,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":29,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":33,"org.easymock.tests2.UsageStrictMockTest.range":11,"org.easymock.tests2.UsageConstraintsTest.lessThan":210,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":152,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":302,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":112,"org.easymock.tests.UsageTest.exactCallCountByLastCall":316,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":296,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":145,"org.easymock.tests2.CaptureTest.testCaptureRightOne":122,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":259,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":0,"org.easymock.tests2.UsageConstraintsTest.testOr":126,"org.easymock.tests.UsageRangeTest.combination":86,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":110,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":298,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":76,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":24,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":321,"org.easymock.tests.UsageTest.wrongArguments":106,"org.easymock.tests2.MockBuilderTest.testWithConstructor":364,"org.easymock.tests.MockClassControlTest.testHashCode":348,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":344,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":69,"org.easymock.tests2.EasyMockSupportTest.testVerify":156,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":74,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":260,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":319,"org.easymock.tests.UsageVarargTest.varargShortAccepted":304,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":233,"org.easymock.tests2.UsageConstraintsTest.cmpTo":197,"org.easymock.tests.UsageVarargTest.varargCharAccepted":301,"org.easymock.tests2.CaptureTest.testCaptureMultiple":358,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":135,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":140,"org.easymock.tests2.UsageTest.openCallCountByLastCall":181,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":182,"org.easymock.tests.DefaultClassInstantiatorTest.object":342,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":155,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":232,"org.easymock.tests2.CaptureTest.testCaptureFromStub":173,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":337,"org.easymock.tests.UsageTest.unexpectedCallWithArray":105,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":102,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":270,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":287,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":101,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":248,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":366,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":295,"org.easymock.tests2.CaptureTest.testCapture":359,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":347,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":242,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":30,"org.easymock.tests2.UsageConstraintsTest.constraints":123,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":269,"org.easymock.samples.ExampleTest.addAndChangeDocument":226,"org.easymock.tests.CapturesMatcherTest.test":360,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":77,"org.easymock.tests.UsageStrictMockTest.testVerify":119,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":236,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":221,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":346,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":41,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":169,"org.easymock.tests2.UsageTest.resumeIfFailure":184,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":83,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":354,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":292,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":324,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":84,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":299,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":150}}]
