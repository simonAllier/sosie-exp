[{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[0,1],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[0,2,1,3,4,5,6,7,8,9,10,11,12,13,14],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[4],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:75","sourceCode":"return \"expected: \" + org.easymock.internal.Range.(toString())","type":"CtReturnImpl"},"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"control":"control","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"failures":[38],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[39],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1659","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(long[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[40,40,41,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,24,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,35],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[74,75,76],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"result"}},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[77,78,79,80,40,40,41,41,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,39,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,15,125,126,127,128,129,130,131,132,133,134,135,136,137,42,43,44,45,46,138,139,140,141,142,143,144,145,16,146,17,147,148,18,19,149,47,150,74,75,76,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,48,49,50,51,52,20,21,22,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,53,54,220,221,55,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,56,57,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,23,24,268,25,26,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,58,59,325,326,327,60,61,62,63,328,329,330,331,332,64,333,65,66,334,67,68,335,336,337,338,339,69,70,71,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,72,381,382,383,384,0,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,1,405,406,407,408,409,27,28,410,411,412,413,414,29,30,415,416,5,6,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,73,450,31,32,33,34,451,452,35,453,36,37,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479],"status":-1,"binaryOperator":"(java.lang.String != null) && (!org.easymock.internal.Invocation.(org.easymock.internal.Invocation.isJavaIdentifier(java.lang.String)))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:185","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:195","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"parameterTypes":"candidateParameters","i":"i"}},{"transplant":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[334,411,430],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:218","failures":[77,40,41,461,471],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:42","sourceCode":"throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()","type":"CtThrowImpl"},"failures":[222],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[61,330,335,69],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:51","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Float.java.lang.Class<java.lang.Float>, java.lang.Float.java.lang.Float.valueOf(0))","type":"CtInvocationImpl"},"failures":[110,42,178,180,194,195,233,235,249,250,56,263,394],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:189","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, new net.sf.cglib.proxy.Callback[]{ org.easymock.internal.ClassProxyFactory.MockMethodInterceptor })","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"mockClass"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[0,5,9,10,14],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"ret":"ret","clazz":"clazz"}},{"transplant":{"position":"org.easymock.EasyMock:760","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[480,481,482,483,15,16,20,21,22,24,25,26,27,35,36,37],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[328],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[84,85,86,87,88,89,91,97,98,99,100,101,103,104,108,110,111,112,113,114,115,116,117,118,119,120,121,137,42,43,44,45,46,139,140,16,47,152,153,169,170,172,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,48,49,50,51,52,20,21,22,196,197,198,200,201,203,204,205,206,207,209,216,217,218,219,53,54,55,224,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,56,57,257,262,263,264,265,267,24,26,269,270,321,322,323,324,58,59,325,326,60,61,62,63,328,329,331,332,64,333,65,66,334,67,68,335,336,337,339,69,70,71,353,354,357,370,371,372,373,375,376,377,378,379,380,382,383,0,385,386,388,389,392,393,394,395,396,397,401,402,409,27,410,411,414,415,5,417,420,421,422,423,425,426,428,429,430,431,433,436,438,443,444,447,448,449,73,450,31,32,33,34,452,35,37,454],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:303","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":326,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":145,"org.easymock.tests2.UsageTest.argumentsOrdered":30,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":314,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":347,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":290,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":411,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":80,"org.easymock.tests2.DelegateToTest.testReturnException":388,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":111,"org.easymock.tests.MockingTest.testPartialClassMocking":169,"org.easymock.tests.MockClassControlTest.testToString":210,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":142,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":441,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":465,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":461,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":231,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":480,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":384,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":8,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":329,"org.easymock.tests2.UsageTest.wrongArguments":28,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":53,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":369,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":264,"org.easymock.samples.ExampleTest.answerVsDelegate":85,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":228,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":174,"org.easymock.tests2.UsageConstraintsTest.testNull":61,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":429,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":215,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":313,"org.easymock.tests2.CaptureTest.testPrimitive":373,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":55,"org.easymock.tests.UsageTest.moreThanOneArgument":16,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":250,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":428,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":44,"org.easymock.tests.UsageTest.argumentsOrdered":19,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":92,"org.easymock.tests.UsageVarargTest.varargIntAccepted":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":295,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":48,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":397,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":13,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":351,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":402,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":282,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":52,"org.easymock.tests.ReplayStateInvalidUsageTest.times":133,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":363,"org.easymock.tests2.AnswerTest.answer":417,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":330,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":297,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":396,"org.easymock.tests2.CaptureTest.testAnd":370,"org.easymock.tests2.UsageTest.strictResetToDefault":409,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":436,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":43,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":218,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":308,"org.easymock.tests2.DelegateToTest.testDelegate":392,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":96,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":246,"org.easymock.tests.LimitationsTest.mockFinalMethod":109,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":114,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":101,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":222,"org.easymock.tests2.CaptureTest.testCapture1_2446744":374,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":244,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":394,"org.easymock.tests.UsageThrowableTest.throwError":151,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":127,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":227,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":352,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":479,"org.easymock.samples.PartialClassMockTest.testGetArea":77,"org.easymock.tests.MockingTest.testInterfaceMocking":171,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":128,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":49,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":272,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":466,"org.easymock.tests2.UsageTest.niceToStrict":410,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":232,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":280,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":401,"org.easymock.tests2.MockBuilderTest.testCreateMock":405,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":474,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":366,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":240,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":309,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":76,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":116,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":262,"org.easymock.tests.UsageOverloadedMethodTest.overloading":139,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":476,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":470,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":65,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":255,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":187,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":138,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":333,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":379,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":199,"org.easymock.tests2.EasyMockSupportClassTest.testAll":458,"org.easymock.tests.MockClassControlTest.testEquals":214,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":104,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":248,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":395,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":99,"org.easymock.tests2.CaptureTest.testCaptureAll":371,"org.easymock.tests.MockNameTest.defaultName":144,"org.easymock.tests2.UsageConstraintsTest.testMatches":66,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":125,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":45,"org.easymock.samples.ExampleTest.voteForRemovals":89,"org.easymock.tests.UsageVarargTest.allKinds":207,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":20,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":100,"org.easymock.samples.BasicClassMockTest.testPrintContent":79,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":157,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":451,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":391,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":115,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":348,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":14,"org.easymock.tests2.UsageConstraintsTest.greaterThan":67,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":459,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":217,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":439,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":165,"org.easymock.samples.ExampleTest.voteForRemoval":86,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":440,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":354,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":229,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":432,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":408,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":137,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":287,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":306,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":456,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":110,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":387,"org.easymock.tests2.CaptureTest.testCaptureFirst":382,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":286,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":307,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":416,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":258,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":183,"org.easymock.tests2.UsageTest.moreThanOneArgument":27,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":356,"org.easymock.tests2.CaptureTest.testCapture2_2446744":381,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":406,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":298,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":206,"org.easymock.tests.GenericTest.testBridgedEquals":105,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":123,"org.easymock.tests.UsageExpectAndReturnTest.longType":179,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":97,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":304,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":249,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":251,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":338,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":247,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":42,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":260,"org.easymock.tests.UsageCallCountTest.tooManyCalls":124,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":475,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":184,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":368,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":236,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":156,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":443,"org.easymock.tests.MockingTest.testNiceClassMocking":175,"org.easymock.tests.MockingTest.testClassMocking":167,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":117,"org.easymock.tests2.UsageConstraintsTest.testContains":64,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":323,"org.easymock.tests2.UsageConstraintsTest.testFind":60,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":140,"org.easymock.tests.MockTypeTest.fromEasyMockClass":226,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":425,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":266,"org.easymock.tests.UsageExpectAndReturnTest.object":186,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":433,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":367,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":312,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":9,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":201,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":277,"org.easymock.tests.UsageTest.exactCallCountByLastCall":149,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":47,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":285,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":141,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":93,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":6,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":192,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":196,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":254,"org.easymock.tests.MockClassControlTest.testHashCode":213,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":342,"org.easymock.tests2.EasyMockSupportTest.testVerify":316,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":468,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":94,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":75,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":252,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":393,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":340,"org.easymock.tests.UsageVarargTest.varargCharAccepted":200,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":452,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":303,"org.easymock.tests2.UsageTest.openCallCountByLastCall":412,"org.easymock.tests.DefaultClassInstantiatorTest.object":159,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":315,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":74,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":469,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":238,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":154,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":361,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":341,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":437,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":212,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":237,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":193,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":477,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":211,"org.easymock.tests2.UsageTest.resumeIfFailure":415,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":225,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":113,"org.easymock.tests2.StubTest.stubWithReturnValue":73,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":2,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":185,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":339,"org.easymock.tests2.SerializationTest.testAllMockedMethod":386,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":296,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":4,"org.easymock.samples.SupportTest.voteForRemovals":83,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":102,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":344,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":243,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":302,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":418,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":143,"org.easymock.tests.UsageExpectAndThrowTest.object":241,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":336,"org.easymock.tests2.DelegateToTest.testWrongClass":390,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":56,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":57,"org.easymock.samples.ConstructorCalledMockTest.testTax":40,"org.easymock.tests.UsageStrictMockTest.range":25,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":319,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":311,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":442,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":242,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":455,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":135,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":18,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":263,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":273,"org.easymock.tests2.CaptureTest.testCaptureNone":378,"org.easymock.tests.UsageUnorderedTest.message":15,"org.easymock.tests.UsageVerifyTest.twoReturns":22,"org.easymock.tests.UsageVarargTest.varargByteAccepted":205,"org.easymock.tests2.ThreadingTest.testThreadSafe":353,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":472,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":121,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":78,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":278,"org.easymock.tests2.CaptureTest.testCapture_2617107":372,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":224,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":221,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":300,"org.easymock.tests2.UsageConstraintsTest.any":331,"org.easymock.tests2.StubTest.stub":449,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":132,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":261,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":112,"org.easymock.tests.UsageExpectAndThrowTest.longType":234,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":301,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":163,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":131,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":453,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":346,"org.easymock.tests.LimitationsTest.mockNativeMethod":108,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":39,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":195,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":360,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":454,"org.easymock.tests2.NameTest.nameForMocksControl":34,"org.easymock.tests2.MockedExceptionTest.testMockedException":322,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":460,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":148,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":424,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":172,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":235,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":426,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":404,"org.easymock.tests.MockingTest.testNicePartialClassMocking":170,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":431,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":7,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":358,"org.easymock.tests2.CaptureTest.testCaptureLast":377,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":223,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":448,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":328,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":337,"org.easymock.tests.MockingTest.testTwoMocks":168,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":38,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":176,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":239,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":29,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":70,"org.easymock.samples.ExampleTest.removeNonExistingDocument":90,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":129,"org.easymock.tests.UsageStrictMockTest.differentMethods":26,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":365,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":343,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":161,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":355,"org.easymock.tests2.MockBuilderTest.testCreateMockString":407,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":462,"org.easymock.tests.UsageExpectAndThrowTest.floatType":233,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":457,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":420,"org.easymock.tests.UsageVerifyTest.twoThrows":21,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":471,"org.easymock.samples.ExampleTest.voteAgainstRemoval":87,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":271,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":291,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":438,"org.easymock.tests.LimitationsTest.privateConstructor":107,"org.easymock.tests2.UsageConstraintsTest.testNotNull":69,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":158,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":321,"org.easymock.tests2.UsageTest.defaultResetToNice":414,"org.easymock.samples.ExampleTest.voteAgainstRemovals":84,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":191,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":292,"org.easymock.tests.UsageVarargTest.differentLength":202,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":359,"org.easymock.tests2.CallbackTest.callback":450,"org.easymock.tests2.UsageConstraintsTest.equals":327,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":434,"org.easymock.tests.UsageTest.openCallCountByLastCall":147,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":58,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":220,"org.easymock.tests.UsageCallCountTest.tooFewCalls":119,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":445,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":265,"org.easymock.tests.UsageThrowableTest.throwCheckedException":155,"org.easymock.tests.MockingTest.testStrictClassMocking":166,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":447,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":150,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":444,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":364,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":134,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":446,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":422,"org.easymock.tests.ObjectMethodsTest.testHashCode":276,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":12,"org.easymock.tests2.NameTest.nameForNiceMock":33,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":357,"org.easymock.tests2.DependencyTest.testInterfaceMocking":383,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":10,"org.easymock.samples.ExampleTest.addDocument":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":473,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":478,"org.easymock.tests2.DelegateToTest.testStubDelegate":389,"org.easymock.tests2.AnswerTest.stubAnswer":421,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":24,"org.easymock.tests.UsageVarargTest.varargLongAccepted":204,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":289,"org.easymock.tests.UsageExpectAndReturnTest.floatType":178,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":194,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":5,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":41,"org.easymock.tests.UsageThrowableTest.noUpperLimit":152,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":68,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":256,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":350,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":59,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":317,"org.easymock.tests2.SerializationTest.test":385,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":375,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":160,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":177,"org.easymock.tests2.UsageConstraintsTest.testSame":62,"org.easymock.samples.SupportTest.addDocument":82,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":463,"org.easymock.tests.GenericTest.testPackageScope":103,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":95,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":284,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":349,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":173,"org.easymock.tests2.NameTest.nameForMock":31,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":188,"org.easymock.tests2.UsageStrictMockTest.differentMethods":37,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":435,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":180,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":245,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":274,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":219,"org.easymock.tests2.MockedExceptionTest.testRealException":324,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":230,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":294,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":320,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":3,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":35,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":293,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":136,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":54,"org.easymock.tests2.NameTest.nameForStrictMock":32,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":400,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":423,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":430,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":318,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":481,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":162,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":335,"org.easymock.tests.ErrorMessageTest.testGetters":482,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":398,"org.easymock.tests2.UsageStrictMockTest.range":36,"org.easymock.tests2.UsageConstraintsTest.lessThan":71,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":345,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":288,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":467,"org.easymock.tests2.CaptureTest.testCaptureRightOne":380,"org.easymock.tests2.UsageConstraintsTest.testOr":63,"org.easymock.tests.UsageRangeTest.combination":216,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":427,"org.easymock.tests.UsageTest.wrongArguments":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":464,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":209,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":181,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":281,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":164,"org.easymock.tests.UsageVarargTest.varargShortAccepted":203,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":122,"org.easymock.tests2.UsageConstraintsTest.cmpTo":332,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":419,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":283,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":413,"org.easymock.tests2.CaptureTest.testCaptureFromStub":72,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":126,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":399,"org.easymock.tests.UsageTest.unexpectedCallWithArray":146,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":23,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":120,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":190,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":268,"org.easymock.tests2.UsageConstraintsTest.constraints":325,"org.easymock.samples.ExampleTest.addAndChangeDocument":91,"org.easymock.tests.UsageStrictMockTest.testVerify":270,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":81,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":267,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":98,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":376,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":50,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":182,"org.easymock.tests.LimitationsTest.abstractClass":106,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":51,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":257,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":483,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":197,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":310}}]
