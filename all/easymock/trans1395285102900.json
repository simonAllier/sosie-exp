[{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5,6,7,8,9,10],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:71","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[11],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:217","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:50","failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[54,55,56,57],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:223","failures":[58,59,60,61,62,34],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:50","sourceCode":"if ((java.lang.Object[].int) != (java.lang.Class<?>[].int)) {\n    throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\");\n} ","type":"CtIfImpl"},"failures":[18],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[78,79,80,81,82,83],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[84,85,86,87,74],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:190","failures":[55,88,0,1,89,2,90,3,4,91,92,93,94,95,96,97,98,56,99,6,100,101,57,7,102,103,104,8,105,106,107,108,109,110,10,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,66,153,53,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,86,87,180,181,182,183,184,185,186,187,188,189,75,190,77,191,192,193],"status":-1,"binaryOperator":"(java.lang.Object instanceof java.lang.Number)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"failures":[194,195,196],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Invocation:54","sourceCode":"return java.lang.Object[] == null ? java.lang.Object[] : java.lang.Object[]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:130","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.Invocation.NO_ARGS":"methodArgs","args":"methodArgs"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"failures":[12,13,14,15,19,20,21,22,23,24,197,198,199,200,53],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:160","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"failures":[201,202,203],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5,6,7,8,9,10],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MocksControl:189","failures":[0,204,205,126,63,206,64,65,134,207,208,66,153,171,69,70,71,72,175,73,74,75,209,76,210,77,191],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[211,103],"status":-1,"binaryOperator":"int < 0","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[2,6,7],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[212,213,214],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[53,154,215,216],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[217,12,12,13,13,218,78,219,220,221,222,223,224,225,226,227,228,229,14,230,231,232,233,234,235,55,88,0,1,89,2,90,3,4,91,5,92,93,94,95,96,97,98,56,99,6,100,101,236,57,7,102,103,237,238,239,240,58,241,104,59,242,243,244,204,205,8,105,9,106,107,245,246,108,109,110,10,111,112,113,247,114,248,249,115,250,60,116,251,117,118,119,120,121,122,252,123,62,253,124,254,125,126,127,128,63,129,206,130,131,132,64,65,133,134,135,136,255,137,256,79,257,80,81,82,258,138,259,260,25,261,262,263,26,139,140,141,142,143,144,145,146,147,148,149,150,264,31,34,44,50,151,265,266,267,268,269,207,270,152,208,66,153,271,53,154,215,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,84,293,294,295,296,297,298,155,156,157,299,300,158,159,160,161,162,301,302,303,304,305,306,307,308,309,310,311,163,312,164,313,314,83,315,316,165,67,317,318,166,167,168,169,170,171,172,69,70,173,174,71,72,175,319,320,321,322,323,324,325,326,327,328,329,73,330,85,331,176,332,177,333,178,179,86,87,180,181,334,335,336,337,182,183,11,338,339,340,341,342,343,344,345,346,347,348,349,350,184,185,351,352,186,353,354,355,356,357,358,359,187,360,188,361,362,363,364,365,366,189,74,75,367,368,369,370,371,372,373,374,375,376,209,377,76,190,210,77,191,378,379,380,192,193],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:642","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:203","sourceCode":"return java.io.ObjectInputStream.readObject()","type":"CtReturnImpl"},"failures":[73],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[177,179],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[53,154,215,216],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[78,79,80,81,82,83,381],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.LastControl:61","failures":[234,235,55,88,0,1,89,2,90,3,4,91,5,92,93,94,95,96,97,98,56,99,6,100,101,236,57,7,102,103,8,105,9,106,107,245,246,108,109,110,10,111,112,113,116,252,382,152,73,176,332,349,184,185,351,352,186,357,358,359,187,360,365,375,376,76,190],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"delegateTo"}},{"position":"org.easymock.internal.RecordState:233","failures":[217,12,12,13,13,218,78,219,220,221,222,223,224,225,226,227,228,229,14,230,231,232,233,234,235,55,88,0,1,89,2,90,3,4,91,5,92,93,94,95,96,97,98,56,99,6,100,101,236,57,7,102,103,241,104,242,243,204,8,105,9,106,107,245,246,108,109,110,10,111,112,113,247,114,248,249,115,250,116,117,118,119,120,121,122,252,123,62,253,124,254,125,126,127,128,63,129,206,130,131,132,64,65,133,134,135,136,255,137,256,79,257,80,81,82,258,138,259,260,25,261,262,263,26,139,140,141,142,143,144,145,146,147,148,149,150,264,31,34,44,50,151,265,266,267,268,269,207,270,152,208,66,153,271,53,154,215,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,84,293,294,295,296,297,298,155,156,157,299,300,158,159,160,161,162,301,302,303,304,305,307,308,309,310,311,163,312,164,313,83,315,165,166,167,168,169,170,171,172,70,173,174,71,72,175,319,321,322,73,330,85,331,176,332,177,333,178,179,86,87,180,181,334,335,336,337,182,183,383,384,381,385,386,387,388,389,390,391,392,393,394,395,396,397,11,398,399,400,401,402,338,403,339,340,341,342,343,344,345,346,347,348,349,404,350,184,185,351,352,186,357,358,359,187,360,188,361,362,363,364,365,366,189,74,75,367,368,369,370,371,373,374,375,376,209,377,76,190,210,77,191,378,379,380,192,193],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[126,131,171,174,178,74],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5,6,7,8,9,10],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[125,128,63,64,65,137,405,152,66,153,406,407,317,318,172,69,70,71,72,73,408,409,410,189,74,75,76,190,77,191],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:210","failures":[12,12,13,13,14,15,411,22,200,53],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"failures":[92],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[412],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":1,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":171,"org.easymock.tests2.UsageTest.argumentsOrdered":65,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":149,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":392,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":206,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":224,"org.easymock.tests2.DelegateToTest.testReturnException":79,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":362,"org.easymock.tests.MockingTest.testPartialClassMocking":307,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":188,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":400,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":38,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":34,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":272,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":136,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":91,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":184,"org.easymock.tests2.UsageTest.wrongArguments":63,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":355,"org.easymock.samples.ExampleTest.answerVsDelegate":78,"org.easymock.tests2.UsageConstraintsTest.testNull":2,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":249,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":148,"org.easymock.tests2.CaptureTest.testPrimitive":106,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":186,"org.easymock.tests.UsageTest.moreThanOneArgument":172,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":291,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":248,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":163,"org.easymock.tests.UsageTest.argumentsOrdered":72,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":320,"org.easymock.tests.UsageVarargTest.varargIntAccepted":341,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":397,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":357,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":58,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":202,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":59,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":381,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":360,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":137,"org.easymock.tests2.AnswerTest.answer":151,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":398,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":240,"org.easymock.tests2.CaptureTest.testAnd":8,"org.easymock.tests2.UsageTest.strictResetToDefault":127,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":20,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":251,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":311,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":169,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":143,"org.easymock.tests2.DelegateToTest.testDelegate":82,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":324,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":287,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":365,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":329,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":317,"org.easymock.tests2.CaptureTest.testCapture1_2446744":107,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":285,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":238,"org.easymock.tests.UsageThrowableTest.throwError":177,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":164,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":197,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":52,"org.easymock.samples.PartialClassMockTest.testGetArea":217,"org.easymock.tests2.CompareToTest.testLessOrEqual":54,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":358,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":192,"org.easymock.tests2.UsageTest.niceToStrict":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":39,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":273,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":214,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":383,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":104,"org.easymock.tests2.MockBuilderTest.testCreateMock":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":47,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":281,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":144,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":331,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":367,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":353,"org.easymock.tests.UsageOverloadedMethodTest.overloading":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":49,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":96,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":315,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":159,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":337,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":95,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":195,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":110,"org.easymock.tests2.EasyMockSupportClassTest.testAll":31,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":335,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":289,"org.easymock.tests2.CaptureTest.testCaptureAll":105,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":239,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":327,"org.easymock.tests.MockNameTest.defaultName":408,"org.easymock.tests2.UsageConstraintsTest.testMatches":97,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":312,"org.easymock.samples.ExampleTest.voteForRemovals":222,"org.easymock.tests.UsageVarargTest.allKinds":349,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":189,"org.easymock.samples.BasicClassMockTest.testPrintContent":226,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":328,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":180,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":207,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":81,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":366,"org.easymock.tests2.UsageConstraintsTest.greaterThan":56,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":32,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":168,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":119,"org.easymock.samples.ExampleTest.voteForRemoval":219,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":121,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":203,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":60,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":126,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":319,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":22,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":389,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":141,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":29,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":361,"org.easymock.tests2.CaptureTest.testCaptureFirst":113,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":256,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":388,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":142,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":134,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":67,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":157,"org.easymock.tests2.UsageTest.moreThanOneArgument":128,"org.easymock.tests2.CaptureTest.testCapture2_2446744":112,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":252,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":399,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":204,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":348,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":373,"org.easymock.tests.UsageExpectAndReturnTest.longType":297,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":139,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":325,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":290,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":166,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":236,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":288,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":84,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":310,"org.easymock.tests.UsageCallCountTest.tooManyCalls":374,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":48,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":299,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":277,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":87,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":260,"org.easymock.tests2.UsageConstraintsTest.testContains":94,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":124,"org.easymock.tests2.UsageConstraintsTest.testFind":89,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":183,"org.easymock.tests.MockTypeTest.fromEasyMockClass":406,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":209,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":235,"org.easymock.tests.UsageExpectAndReturnTest.object":158,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":116,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":147,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":343,"org.easymock.tests.UsageTest.exactCallCountByLastCall":175,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":18,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":176,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":387,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":321,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":15,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":302,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":339,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":83,"org.easymock.tests2.EasyMockSupportTest.testVerify":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":41,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":322,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":85,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":313,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":237,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":382,"org.easymock.tests.UsageVarargTest.varargCharAccepted":342,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":270,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":403,"org.easymock.tests2.UsageTest.openCallCountByLastCall":130,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":150,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":212,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":330,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":409,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":42,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":279,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":179,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":117,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":278,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":303,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":292,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":50,"org.easymock.tests2.UsageTest.resumeIfFailure":133,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":201,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":364,"org.easymock.tests2.StubTest.stubWithReturnValue":138,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":21,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":57,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":300,"org.easymock.tests2.SerializationTest.testAllMockedMethod":215,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":11,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":199,"org.easymock.samples.SupportTest.voteForRemovals":229,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":284,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":216,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":338,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":265,"org.easymock.tests.UsageExpectAndThrowTest.object":282,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":100,"org.easymock.tests2.DelegateToTest.testWrongClass":80,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":375,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":376,"org.easymock.samples.ConstructorCalledMockTest.testTax":12,"org.easymock.tests.UsageStrictMockTest.range":77,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":405,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":146,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":259,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":283,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":28,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":71,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":354,"org.easymock.tests2.CaptureTest.testCaptureNone":109,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":193,"org.easymock.tests.UsageUnorderedTest.message":73,"org.easymock.tests.UsageVerifyTest.twoReturns":75,"org.easymock.tests.UsageVarargTest.varargByteAccepted":347,"org.easymock.tests2.ThreadingTest.testThreadSafe":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":45,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":371,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":410,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":225,"org.easymock.tests2.CaptureTest.testCapture_2617107":9,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":401,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":352,"org.easymock.tests2.UsageConstraintsTest.any":92,"org.easymock.tests2.StubTest.stub":258,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":293,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":402,"org.easymock.tests.UsageExpectAndThrowTest.longType":275,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":363,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":194,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":208,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":125,"org.easymock.tests2.SerializationTest.testClass":53,"org.easymock.tests.LimitationsTest.mockNativeMethod":350,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":305,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":336,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":271,"org.easymock.tests2.NameTest.nameForMocksControl":233,"org.easymock.tests2.MockedExceptionTest.testMockedException":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":33,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":174,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":412,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":276,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":309,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":247,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":243,"org.easymock.tests.MockingTest.testNicePartialClassMocking":308,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":250,"org.easymock.tests2.CaptureTest.testCaptureLast":108,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":318,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":26,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":4,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":101,"org.easymock.tests.MockingTest.testTwoMocks":306,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":27,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":294,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":280,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":64,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":102,"org.easymock.tests.UsageStrictMockTest.differentMethods":191,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":122,"org.easymock.tests2.MockBuilderTest.testCreateMockString":205,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":404,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":35,"org.easymock.tests.UsageExpectAndThrowTest.floatType":274,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":30,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":267,"org.easymock.tests.UsageVerifyTest.twoThrows":74,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":44,"org.easymock.samples.ExampleTest.voteAgainstRemoval":220,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":393,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":380,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":118,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":17,"org.easymock.tests2.UsageConstraintsTest.testNotNull":7,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":181,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":62,"org.easymock.tests2.UsageTest.defaultResetToNice":132,"org.easymock.samples.ExampleTest.voteAgainstRemovals":218,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":394,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":301,"org.easymock.tests.UsageVarargTest.differentLength":344,"org.easymock.tests2.CallbackTest.callback":255,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":200,"org.easymock.tests.UsageTest.openCallCountByLastCall":173,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":55,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":351,"org.easymock.tests.UsageCallCountTest.tooFewCalls":369,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":261,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":356,"org.easymock.tests.UsageThrowableTest.throwCheckedException":86,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":263,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":332,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":25,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":262,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":269,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":123,"org.easymock.tests2.NameTest.nameForNiceMock":232,"org.easymock.tests2.DependencyTest.testInterfaceMocking":135,"org.easymock.samples.ExampleTest.addDocument":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":51,"org.easymock.tests2.DelegateToTest.testStubDelegate":257,"org.easymock.tests2.AnswerTest.stubAnswer":268,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":190,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":411,"org.easymock.tests.UsageVarargTest.varargLongAccepted":346,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":378,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":391,"org.easymock.tests.UsageExpectAndReturnTest.floatType":296,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":304,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":14,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":13,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":99,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":316,"org.easymock.tests.UsageThrowableTest.noUpperLimit":333,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":88,"org.easymock.tests2.SerializationTest.test":154,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":245,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":196,"org.easymock.tests2.UsageConstraintsTest.testSame":90,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":295,"org.easymock.samples.SupportTest.addDocument":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":36,"org.easymock.tests.GenericTest.testPackageScope":334,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":323,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":386,"org.easymock.tests2.NameTest.nameForMock":230,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":160,"org.easymock.tests2.UsageStrictMockTest.differentMethods":153,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":24,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":298,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":286,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":170,"org.easymock.tests2.MockedExceptionTest.testRealException":254,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":407,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":396,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":395,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":152,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":185,"org.easymock.tests2.NameTest.nameForStrictMock":231,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":213,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":234,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":115,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":6,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":241,"org.easymock.tests2.UsageStrictMockTest.range":66,"org.easymock.tests2.UsageConstraintsTest.lessThan":103,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":390,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":40,"org.easymock.tests2.CaptureTest.testCaptureRightOne":10,"org.easymock.tests2.UsageConstraintsTest.testOr":3,"org.easymock.tests.UsageRangeTest.combination":167,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":114,"org.easymock.tests.UsageTest.wrongArguments":70,"org.easymock.tests2.MockBuilderTest.testWithConstructor":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":37,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":155,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":384,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":161,"org.easymock.tests.UsageVarargTest.varargShortAccepted":345,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":372,"org.easymock.tests2.UsageConstraintsTest.cmpTo":93,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":266,"org.easymock.tests2.CompareToTest.testLessThan":211,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":385,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":131,"org.easymock.tests2.CaptureTest.testCaptureFromStub":111,"org.easymock.tests.UsageTest.unexpectedCallWithArray":69,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":76,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":370,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":23,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":162,"org.easymock.tests2.UsageConstraintsTest.constraints":0,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":210,"org.easymock.samples.ExampleTest.addAndChangeDocument":223,"org.easymock.tests.UsageStrictMockTest.testVerify":379,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":227,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":377,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":326,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":246,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":359,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":156,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":187,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":165,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":145,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":340}}]
