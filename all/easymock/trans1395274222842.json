[{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:721","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[26,27,28,29],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[26,27,28],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,24,76],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[77,78],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:311","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[79,80,81,82,83],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[84,85],"status":-1,"binaryOperator":"int < 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:85","failures":[0,1,2,3,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,84,125,126,127,128,129,130,131,132,133,26,27,28,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,77,78,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,30,31,32,33,34,175,176,177,4,178,5,6,179,180,181,182,183,184,35,185,7,8,186,187,188,36,189,9,10,79,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,208,209,209,210,211,212,213,214,215,216,217,218,219,220,221,222,37,223,38,39,40,41,42,43,224,225,226,227,228,229,230,44,231,232,233,234,235,236,237,238,239,240,241,242,243,244,80,245,81,246,45,247,248,46,47,249,250,251,252,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,82,279,280,281,282,283,11,284,285,286,287,288,289,290,12,13,291,14,15,292,293,294,68,19,295,20,296,69,21,22,297,70,71,72,73,74,75,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,23,24,25,323,324,325,326,327,328,329,330,331,332,76,333,334],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:43","sourceCode":"final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:71","sourceCode":"java.util.List<java.lang.reflect.Field>.add(java.lang.reflect.Field)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:192","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:175","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Constructor<?>.getModifiers())) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[335],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:122","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:35","sourceCode":"final java.lang.Object java.lang.Object = org.easymock.internal.matchers.Equals.getExpected()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[336,337,338,339,340,341,342,343,344,345],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"parameterType"}},{"transplant":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[346,347,175,208,209],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"arg":"arg","this":"this","paramType":"paramType"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"failures":[348,349,350],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,19,20,21,22,23,24,25,333],"status":-1,"binaryOperator":"((org.easymock.internal.ExpectedInvocation.toString()) + \": \")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[101,102,104,106,107,351,118,123,157,159,167],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ExpectedInvocation:85","failures":[88,95,108,109,112,115,117,118,119,120,122,132,244,246],"status":-1,"binaryOperator":"((this.org.easymock.internal.Invocation.getMock().equals(org.easymock.internal.Invocation.getMock())) && (this.org.easymock.internal.Invocation.getMethod().equals(org.easymock.internal.Invocation.getMethod())))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[275],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"failures":[352,353,354,355,208,209],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:34","failures":[115,356,357,358,359,360,361,362,363,364,365,366,4,5,6,7,8,9,10,367,368,369,370,371,372,373,11,12,13,14,15,19,295,20,21,22,374,375,23,24,25,376,377,333,334],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:324","failures":[40,41,24],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:255","failures":[378],"status":-1,"binaryOperator":"java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:185","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:195","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"parameterTypes":"candidateParameters","i":"i"}},{"position":"org.easymock.internal.InjectionPlan:51","failures":[379,380,381,382,383,184,384,385,386,387,388,389,390,391,392,393,394,195,395,396,397,398,399,400,210,212],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[357,362,364,366,7,8,9,10,367,369,372,12,19,295,20,21,22],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:122","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocation:117","sourceCode":"return org.easymock.internal.Invocation.getMethod()","type":"CtReturnImpl"},"failures":[0,1,2,3,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,351,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,84,126,127,129,130,132,26,27,28,134,135,136,137,138,139,141,143,144,145,150,77,78,151,152,154,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,30,33,175,176,177,4,178,5,6,179,180,181,182,183,184,35,185,7,8,186,187,188,36,189,9,10,79,190,191,193,195,199,200,201,202,203,204,205,206,207,208,208,209,209,210,211,212,213,214,215,217,218,219,220,222,37,223,38,39,40,41,42,43,224,225,226,227,228,401,402,229,230,44,231,232,233,234,235,236,237,238,239,240,241,242,243,403,244,80,245,81,246,247,248,46,47,249,261,263,264,265,266,268,269,270,271,404,405,283,406,407,408,335,409,410,411,11,289,290,12,13,291,14,15,292,293,294,68,19,20,296,69,21,22,297,412,413,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,374,375,23,24,25,323,324,325,326,327,328,329,330,376,377,333],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return this.java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"failures":[105],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"actual"}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:95","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.util.Stack<org.easymock.IArgumentMatcher>.pop();\n}","type":"CtForImpl"},"failures":[101,102,106,107,157,159,167],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:43","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"equals\", new java.lang.Class[]{ java.lang.Object.java.lang.Object })","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,1,2,3,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,122,123,124,84,125,127,128,129,130,132,133,26,27,28,134,135,136,137,138,139,141,142,144,146,147,148,149,150,77,78,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,30,31,32,33,34,175,176,177,4,178,5,6,179,180,181,182,183,184,35,185,7,8,186,187,188,36,189,9,10,79,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,208,209,209,210,211,212,213,214,215,216,217,218,219,220,222,37,223,38,39,40,41,42,43,224,225,226,227,228,230,44,231,232,233,234,235,237,238,239,240,241,242,243,244,80,245,81,246,45,247,248,46,47,249,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,254,261,262,263,264,265,266,270,271,273,275,276,278,280,282,283,11,284,285,286,287,288,289,290,12,13,291,14,15,292,293,294,68,19,295,20,296,69,21,22,297,70,71,72,73,74,75,298,299,300,301,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,375,23,24,25,323,324,325,326,327,328,329,330,333],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:253","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:411","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","type":"CtLocalVariableImpl"},"failures":[414],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cls":"clazz"}},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[349],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"position":"org.easymock.internal.RecordState:274","failures":[191,192,193,194,196,197,198,216,331],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":102,"org.easymock.tests2.UsageTest.argumentsOrdered":10,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":68,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":96,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":395,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":187,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":210,"org.easymock.tests2.DelegateToTest.testReturnException":153,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":71,"org.easymock.tests.MockingTest.testPartialClassMocking":328,"org.easymock.tests.MockClassControlTest.testToString":255,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":401,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":181,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":48,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":16,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":173,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":338,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":108,"org.easymock.tests2.UsageTest.wrongArguments":8,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":247,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":389,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":300,"org.easymock.samples.ExampleTest.answerVsDelegate":216,"org.easymock.tests2.UsageConstraintsTest.testNull":104,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":137,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":95,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":260,"org.easymock.tests2.CaptureTest.testPrimitive":160,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":249,"org.easymock.tests.UsageTest.moreThanOneArgument":19,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":67,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":136,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":325,"org.easymock.tests.UsageTest.argumentsOrdered":22,"org.easymock.tests.UsageVarargTest.varargIntAccepted":233,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":365,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":224,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":125,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":343,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":399,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":128,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":228,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":360,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":184,"org.easymock.tests.ReplayStateInvalidUsageTest.times":279,"org.easymock.tests2.AnswerTest.answer":191,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":351,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":83,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":149,"org.easymock.tests2.CaptureTest.testAnd":157,"org.easymock.tests2.UsageTest.strictResetToDefault":185,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":142,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":324,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":90,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":245,"org.easymock.tests2.DelegateToTest.testDelegate":156,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":63,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":74,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":288,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":374,"org.easymock.tests2.CaptureTest.testCapture1_2446744":161,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":61,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":147,"org.easymock.tests.UsageThrowableTest.throwError":37,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":274,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":400,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":327,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":346,"org.easymock.samples.PartialClassMockTest.testGetArea":211,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":275,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":225,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":407,"org.easymock.tests2.UsageTest.niceToStrict":186,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":49,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":127,"org.easymock.tests2.MockBuilderTest.testCreateMock":131,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":386,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":57,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":357,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":91,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":411,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":261,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":298,"org.easymock.tests.UsageOverloadedMethodTest.overloading":230,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":113,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":76,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":229,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":314,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":112,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":349,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":166,"org.easymock.tests2.EasyMockSupportClassTest.testAll":180,"org.easymock.tests.MockClassControlTest.testEquals":259,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":243,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":65,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":362,"org.easymock.tests2.CaptureTest.testCaptureAll":158,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":148,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":286,"org.easymock.tests2.UsageConstraintsTest.testMatches":114,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":272,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":326,"org.easymock.samples.ExampleTest.voteForRemovals":220,"org.easymock.tests.UsageVarargTest.allKinds":241,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":23,"org.easymock.samples.BasicClassMockTest.testPrintContent":207,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":287,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":42,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":176,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":396,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":75,"org.easymock.tests2.UsageConstraintsTest.greaterThan":116,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":344,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":80,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":145,"org.easymock.samples.ExampleTest.voteForRemoval":217,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":77,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":140,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":35,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":294,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":88,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":38,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":70,"org.easymock.tests2.CaptureTest.testCaptureFirst":170,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":89,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":190,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":334,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":310,"org.easymock.tests2.CaptureTest.testCapture2_2446744":169,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":151,"org.easymock.tests2.UsageTest.moreThanOneArgument":7,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":132,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":240,"org.easymock.tests.GenericTest.testBridgedEquals":378,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":268,"org.easymock.tests.UsageExpectAndReturnTest.longType":306,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":86,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":284,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":66,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":402,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":121,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":64,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":412,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":323,"org.easymock.tests.UsageCallCountTest.tooManyCalls":269,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":368,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":263,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":311,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":388,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":53,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":41,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":200,"org.easymock.tests2.UsageConstraintsTest.testContains":111,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":262,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":33,"org.easymock.tests2.UsageConstraintsTest.testFind":103,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":44,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":197,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":289,"org.easymock.tests.UsageExpectAndReturnTest.object":313,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":141,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":387,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":94,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":235,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":339,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":252,"org.easymock.tests.UsageTest.exactCallCountByLastCall":297,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":246,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":404,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":372,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":345,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":231,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":319,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":332,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":391,"org.easymock.tests.MockClassControlTest.testHashCode":258,"org.easymock.tests2.EasyMockSupportTest.testVerify":98,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":359,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":405,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":410,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":331,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":146,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":171,"org.easymock.tests.UsageVarargTest.varargCharAccepted":234,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":177,"org.easymock.tests2.UsageTest.openCallCountByLastCall":188,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":97,"org.easymock.tests.DefaultClassInstantiatorTest.object":302,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":250,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":373,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":55,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":39,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":382,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":390,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":143,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":257,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":54,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":320,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":183,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":256,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":361,"org.easymock.tests2.UsageTest.resumeIfFailure":79,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":73,"org.easymock.tests2.StubTest.stubWithReturnValue":30,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":336,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":122,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":312,"org.easymock.tests2.SerializationTest.testAllMockedMethod":28,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":335,"org.easymock.samples.SupportTest.voteForRemovals":214,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":364,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":414,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":393,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":60,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":29,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":409,"org.easymock.tests.UsageExpectAndThrowTest.object":58,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":119,"org.easymock.tests2.DelegateToTest.testWrongClass":155,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":270,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":271,"org.easymock.tests.UsageStrictMockTest.range":14,"org.easymock.samples.ConstructorCalledMockTest.testTax":208,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":93,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":199,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":59,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":129,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":21,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":281,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":299,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":367,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":408,"org.easymock.tests2.CaptureTest.testCaptureNone":165,"org.easymock.tests.UsageUnorderedTest.message":11,"org.easymock.tests.UsageVerifyTest.twoReturns":25,"org.easymock.tests.UsageVarargTest.varargByteAccepted":239,"org.easymock.tests2.ThreadingTest.testThreadSafe":150,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":266,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":206,"org.easymock.tests2.CaptureTest.testCapture_2617107":159,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":366,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":47,"org.easymock.tests2.UsageConstraintsTest.any":109,"org.easymock.tests2.StubTest.stub":174,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":82,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":413,"org.easymock.tests.UsageExpectAndThrowTest.longType":51,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":72,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":348,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":278,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":178,"org.easymock.tests2.SerializationTest.testClass":26,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":195,"org.easymock.tests.LimitationsTest.mockNativeMethod":283,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":403,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":322,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":381,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":179,"org.easymock.tests2.NameTest.nameForMocksControl":3,"org.easymock.tests2.MockedExceptionTest.testMockedException":32,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":383,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":69,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":52,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":330,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":134,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":130,"org.easymock.tests.MockingTest.testNicePartialClassMocking":329,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":139,"org.easymock.tests2.CaptureTest.testCaptureLast":164,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":379,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":375,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":107,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":205,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":120,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":303,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":56,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":9,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":124,"org.easymock.samples.ExampleTest.removeNonExistingDocument":221,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":385,"org.easymock.tests.UsageStrictMockTest.differentMethods":15,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":276,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":392,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":78,"org.easymock.tests2.ConstraintsToStringTest.andToString":363,"org.easymock.tests2.MockBuilderTest.testCreateMockString":133,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":253,"org.easymock.tests.UsageExpectAndThrowTest.floatType":50,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":115,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":192,"org.easymock.tests.UsageVerifyTest.twoThrows":24,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":182,"org.easymock.samples.ExampleTest.voteAgainstRemoval":218,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":406,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":144,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":347,"org.easymock.tests2.UsageConstraintsTest.testNotNull":123,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":43,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":31,"org.easymock.tests2.UsageTest.defaultResetToNice":189,"org.easymock.samples.ExampleTest.voteAgainstRemovals":215,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":318,"org.easymock.tests.UsageVarargTest.differentLength":236,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":380,"org.easymock.tests2.CallbackTest.callback":198,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":355,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":370,"org.easymock.tests.UsageTest.openCallCountByLastCall":296,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":99,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":46,"org.easymock.tests.UsageCallCountTest.tooFewCalls":264,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":202,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":301,"org.easymock.tests.UsageThrowableTest.throwCheckedException":40,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":369,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":45,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":204,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":384,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":201,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":280,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":203,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":194,"org.easymock.tests.ObjectMethodsTest.testHashCode":251,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":342,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":152,"org.easymock.tests2.NameTest.nameForNiceMock":2,"org.easymock.tests2.DependencyTest.testInterfaceMocking":172,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":340,"org.easymock.samples.ExampleTest.addDocument":219,"org.easymock.tests2.DelegateToTest.testStubDelegate":154,"org.easymock.tests2.AnswerTest.stubAnswer":193,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":13,"org.easymock.tests.UsageVarargTest.varargLongAccepted":238,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":292,"org.easymock.tests.UsageExpectAndReturnTest.floatType":305,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":321,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":175,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":209,"org.easymock.tests2.ConstraintsToStringTest.orToString":356,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":398,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":117,"org.easymock.tests.UsageThrowableTest.noUpperLimit":223,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":377,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":100,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":162,"org.easymock.tests2.SerializationTest.test":27,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":350,"org.easymock.tests2.UsageConstraintsTest.testSame":105,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":304,"org.easymock.samples.SupportTest.addDocument":213,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":277,"org.easymock.tests.GenericTest.testPackageScope":242,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":397,"org.easymock.tests2.NameTest.nameForMock":0,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":315,"org.easymock.tests2.UsageStrictMockTest.differentMethods":6,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":354,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":307,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":62,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":81,"org.easymock.tests2.MockedExceptionTest.testRealException":34,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":371,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":337,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":4,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":248,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":282,"org.easymock.tests2.NameTest.nameForStrictMock":1,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":196,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":138,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":118,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":17,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":126,"org.easymock.tests2.UsageStrictMockTest.range":5,"org.easymock.tests2.UsageConstraintsTest.lessThan":84,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":394,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":87,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":341,"org.easymock.tests2.CaptureTest.testCaptureRightOne":167,"org.easymock.tests2.UsageConstraintsTest.testOr":106,"org.easymock.tests.UsageRangeTest.combination":244,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":135,"org.easymock.tests.UsageTest.wrongArguments":20,"org.easymock.tests2.MockBuilderTest.testWithConstructor":352,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":254,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":308,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":316,"org.easymock.tests.UsageVarargTest.varargShortAccepted":237,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":267,"org.easymock.tests2.UsageConstraintsTest.cmpTo":110,"org.easymock.tests2.CompareToTest.testLessThan":85,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":36,"org.easymock.tests2.CaptureTest.testCaptureFromStub":168,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":273,"org.easymock.tests.UsageTest.unexpectedCallWithArray":295,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":12,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":265,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":353,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":317,"org.easymock.tests2.UsageConstraintsTest.constraints":101,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":291,"org.easymock.samples.ExampleTest.addAndChangeDocument":222,"org.easymock.tests2.ConstraintsToStringTest.notToString":358,"org.easymock.tests.UsageStrictMockTest.testVerify":293,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":212,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":290,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":285,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":163,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":226,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":309,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":227,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":333,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":18,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":92,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":232}}]
