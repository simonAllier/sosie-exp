[{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"type"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[0,1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"type":"leafClass"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[3,4,5,6,7,8,9,10],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[11,12],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.Capture:120","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[13,14,15,16,17,18,19,20,21,22],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[21],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"position":"org.easymock.internal.LastControl:61","failures":[62,63,64,65,66,26,67,68,69,70,71,72,73,74,75,76,37,77,78,79,80,81,82,83,13,84,14,15,16,17,18,19,85,20,22,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[118,119,120,121],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1607","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(char[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[69,70,122,123,124,125,126,127,128,129,130,131,132,133],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:137","sourceCode":"return java.util.List<T>.toString()","type":"CtReturnImpl"},"failures":[134],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[24,135],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[62,63,23,24,25,136,137,138,139,140,141,142,143,144,145,0,146,1,2,147,64,65,66,26,67,68,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,69,70,166,167,168,169,170,27,171,28,29,30,31,32,33,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,118,196,34,197,124,125,126,127,128,129,130,198,199,200,35,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,135,222,223,71,72,73,74,75,224,225,226,227,228,229,230,231,36,232,233,234,235,236,237,238,239,240,241,242,243,244,245,76,119,120,121,246,247,248,249,250,251,252,253,254,255,11,256,257,258,259,260,261,262,263,264,265,37,266,267,268,269,270,271,272,273,274,275,276,277,278,279,77,78,280,281,282,283,284,285,286,287,288,289,290,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,291,292,293,294,295,59,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,3,4,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,79,348,349,350,351,352,60,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,61,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,80,388,389,390,391,392,133,393,394,395,396,397,398,399,400,401,402,403,404,405,406,5,407,408,409,7,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,12,437,438,439,440,441,442,81,10,443,444,445,446,447,448,449,450,451,452,453,454,455,82,456,83,457,458,459,460,461,462,13,84,14,15,16,17,18,19,85,20,22,86,87,88,463,464,465,466,467,468,469,470,471,472,473,474,475,89,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,90,91,92,93,492,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,493,494,495,496],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MocksControl:105","failures":[62,63,23,24,25,136,137,138,139,140,141,142,143,144,64,65,66,26,67,68,148,149,150,151,152,153,154,155,156,157,158,159,164,165,69,70,166,167,168,169,170,27,171,28,29,30,31,32,33,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,118,196,34,197,124,125,126,127,128,129,130,198,199,200,35,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,135,222,71,72,73,74,75,224,225,226,227,228,229,230,231,36,232,233,234,235,236,237,238,239,240,241,242,243,244,245,76,119,120,121,246,247,248,249,250,251,252,257,259,260,262,263,264,265,37,266,267,268,269,270,271,275,276,278,279,77,78,280,289,290,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,291,292,293,294,295,59,296,297,298,299,300,310,311,312,313,314,315,316,317,318,319,320,321,322,324,325,328,329,330,331,332,333,334,335,336,337,338,339,340,341,344,345,346,347,79,348,349,350,351,352,60,358,359,365,368,61,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,80,388,392,133,393,394,395,437,450,451,452,453,454,455,82,456,83,457,458,459,460,461,462,13,84,14,15,16,17,18,19,85,20,22,86,87,88,463,464,465,466,467,468,469,470,471,472,473,474,475,89,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,90,91,92,93,492,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,494,496],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:180","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[272,406],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1038","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[89,105,112,117],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:112","sourceCode":"if (!(org.easymock.Capture<T>.hasCaptured())) {\n    this.java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[134,497,84,19,85,20,87],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values","value":"value","this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[498],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[62,63,23,24,25,136,137,138,139,140,141,142,143,144,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,145,0,146,1,2,64,65,66,26,67,68,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,69,70,166,167,168,169,170,27,171,28,29,30,31,32,33,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,118,196,34,197,124,125,126,127,128,129,130,198,199,200,35,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,135,222,223,71,72,73,74,75,224,225,226,227,228,229,230,231,36,232,233,234,235,236,237,238,239,240,241,242,243,244,245,76,119,120,121,246,247,248,249,250,251,252,253,254,255,11,256,257,258,259,260,261,262,263,264,265,37,266,267,268,269,270,271,272,273,274,275,276,277,278,279,77,78,280,281,282,283,284,285,286,287,288,289,290,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,291,292,293,294,295,59,296,297,298,299,300,302,303,304,305,306,307,309,310,311,312,313,314,315,316,317,318,319,320,321,322,3,4,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,79,348,349,350,351,352,60,353,354,355,357,358,359,360,361,362,363,364,365,366,367,368,61,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,521,386,387,80,388,389,390,392,133,393,394,395,396,398,399,401,402,403,404,406,5,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,12,437,438,439,440,441,442,81,10,443,444,445,446,447,448,449,450,451,452,453,454,455,82,456,83,522,523,524,525,526,527,457,458,459,460,461,462,13,84,14,15,16,17,18,19,85,20,22,86,87,88,463,464,465,466,467,468,469,470,471,472,473,474,475,89,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,90,91,92,93,492,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,493,494,495,496],"status":-1,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:439","failures":[0,1,2],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:243","sourceCode":"if (java.lang.Object == null) {\n    final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType();\n    if (java.lang.Class<?>.isPrimitive()) {\n        throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n    } \n    return ;\n} ","type":"CtIfImpl"},"failures":[0,1,121,289],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1848","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[62,64,65,67,148,70,198,201,202,211,216,71,72,73,74,75,252,77,78,310,311,312,313,314,3,3,4,4,79,60,86,90,91,94,95,96,97,103,105,106,108,109,110,115,116,117],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"failures":[528],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[522,523,525,527],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:310","sourceCode":"return java.lang.Class<?>.equals(java.lang.Void.java.lang.Class<java.lang.Void>)","type":"CtReturnImpl"},"failures":[62,0,1,64,65,67,162,70,167,168,27,28,29,30,31,32,33,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,118,34,197,126,127,130,213,219,71,72,73,74,75,233,120,121,252,11,256,258,77,78,289,290,38,291,292,293,294,295,296,310,311,312,313,314,315,317,318,320,3,3,4,4,323,329,335,344,345,79,349,350,60,360,361,362,363,365,366,367,61,369,370,372,374,375,376,379,380,383,385,386,387,80,388,389,398,402,404,406,409,414,417,427,433,436,12,437,438,439,440,81,445,446,447,450,454,459,13,84,15,16,19,85,20,22,86,87,88,463,464,465,466,467,468,469,470,471,472,473,474,481,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,117,493,494],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[24,25,135,222],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[136,138,139,142,143,144,68,164,69,70,166,167,168,169,192,193,34,197,124,125,128,129,130,230,232,233,234,241,247,250,251,272,275,276,277,278,279,280,283,284,285,291,295,59,296,335,336,346,79,348,349,350,351,361,362,366,367,61,370,371,372,373,377,378,379,380,133,393,394,395,396,398,399,404,406,408,409,410,12,444,447,449,464,466,468,469,471,472,481,482,92,107,496],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[529],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[68,172,178,184,188,190,197,209,213,38,39,45,51,55,57,322,370,385,386,82,83,462,84,19,85,88,90,105,108,117,496],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[65,67,70,167,168,28,172,173,176,178,179,180,181,183,184,185,186,188,189,190,191,34,197,126,127,130,206,208,217,218,220,233,38,291,292,293,294,295,296,79,349,350,60,61,370,374,375,379,380,385,386,387,409,450,454,459,84,16,19,85,87,88,90,91,92,94,95,96,97,101,103,105,106,107,108,109,115,116,117],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","failures":[68,69,70,167,168,197,125,128,129,233,295,59,296,79,349,350,370,371,377,378,133,393,394,395],"status":-1,"binaryOperator":"((org.easymock.internal.ExpectedInvocation.toString()) + \": \")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Same:43","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"failures":[68,69,70,167,168,197,125,128,129,530,531,532,295,59,296,79,349,350,370,371,377,378,133,393,394,395],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:573","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.Range:52","failures":[139,141,144,68,69,70,167,168,28,34,197,125,126,127,128,129,130,235,76,119,268,269,38,295,59,296,316,79,349,350,61,370,371,374,375,377,378,380,133,393,394,395,450,462,95,96,101,102,115,116],"status":-1,"binaryOperator":"(int) == (int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[533,534,535],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[137,142,148,149,150,151,152,153,154,155,156,157,158,159,170,124,224,225,226,227,228,234,247,248,249,281,282,283,284,285,286,287,288,297,298,299,300,302,321,335,376,381,382,396,403,408,410,441,444,463,470,475,481,488,489,490,491],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:95","failures":[13,14,22,92,93,95,97,98,100,110,115],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[62,63,23,24,25,136,137,138,139,140,141,142,143,144,145,0,146,1,2,64,65,66,26,67,68,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,69,70,166,167,168,169,170,27,171,28,29,30,31,32,33,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,118,196,34,197,124,125,126,127,128,129,130,198,199,200,35,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,135,222,223,71,72,73,74,75,224,225,226,227,228,229,230,231,36,232,233,234,235,236,237,238,239,240,241,242,243,244,245,76,119,120,121,246,247,248,249,250,251,252,253,254,255,11,256,257,258,259,260,261,262,263,264,265,37,266,267,268,269,270,271,275,277,279,77,78,280,281,282,283,284,285,286,287,288,289,290,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,291,292,293,294,295,59,296,297,298,299,300,302,303,304,305,306,307,309,310,311,312,313,314,315,316,317,318,319,320,321,322,3,3,4,4,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,344,345,346,347,79,348,349,350,351,352,60,353,357,358,359,362,363,365,366,61,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,80,388,389,390,392,398,401,402,403,404,407,408,411,414,416,417,419,420,423,424,425,426,427,429,432,433,434,435,436,12,437,438,439,440,441,81,10,443,444,445,446,447,448,450,451,452,453,454,455,82,456,83,457,458,459,460,461,462,13,84,14,15,16,17,18,19,85,20,22,86,87,88,463,464,465,467,468,470,472,473,474,475,89,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,90,91,92,93,492,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,493,494,495,496],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[528,105,112,117],"status":-1,"binaryOperator":"int < 0","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":93,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":34,"org.easymock.tests2.UsageTest.argumentsOrdered":378,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":473,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":336,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":207,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":373,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":324,"org.easymock.tests2.DelegateToTest.testReturnException":458,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":263,"org.easymock.tests.MockingTest.testPartialClassMocking":11,"org.easymock.tests.MockClassControlTest.testToString":283,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":392,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":118,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":449,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":421,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":417,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":39,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":530,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":345,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":520,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":99,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":64,"org.easymock.tests2.UsageTest.wrongArguments":371,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":487,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":299,"org.easymock.samples.ExampleTest.answerVsDelegate":316,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":277,"org.easymock.tests2.UsageConstraintsTest.testNull":95,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":260,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":438,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":472,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":288,"org.easymock.tests2.CaptureTest.testPrimitive":15,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":67,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":58,"org.easymock.tests.UsageTest.moreThanOneArgument":197,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":437,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":312,"org.easymock.tests.UsageTest.argumentsOrdered":129,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":267,"org.easymock.tests.UsageVarargTest.varargIntAccepted":237,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":212,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":71,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":396,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":340,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":355,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":403,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":200,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":75,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":504,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":535,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":481,"org.easymock.tests.ReplayStateInvalidUsageTest.times":156,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":9,"org.easymock.tests2.DependencyTest.testClassMocking":342,"org.easymock.tests2.AnswerTest.answer":450,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":100,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":214,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":491,"org.easymock.tests2.CaptureTest.testAnd":13,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":274,"org.easymock.tests2.UsageTest.strictResetToDefault":369,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":444,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":400,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":311,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":467,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":293,"org.easymock.tests2.DelegateToTest.testDelegate":462,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":271,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":503,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":54,"org.easymock.tests.LimitationsTest.mockFinalMethod":163,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":37,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":228,"org.easymock.tests2.DependencyTest.testClassMockingSupport":343,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":192,"org.easymock.tests2.CaptureTest.testCapture1_2446744":16,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":442,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":52,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":489,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":150,"org.easymock.tests.UsageThrowableTest.throwError":27,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":276,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":147,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":341,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":314,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":435,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":507,"org.easymock.samples.PartialClassMockTest.testGetArea":323,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":151,"org.easymock.tests.MockingTest.testInterfaceMocking":257,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":72,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":422,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":40,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":251,"org.easymock.tests2.UsageTest.niceToStrict":372,"org.easymock.tests2.ThreadingTest.testChangeDefault":521,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":198,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":402,"org.easymock.tests2.MockBuilderTest.testCreateMock":408,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":430,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":484,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":131,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":48,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":468,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":273,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":25,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":136,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":297,"org.easymock.tests.UsageOverloadedMethodTest.overloading":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":432,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":426,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":105,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":36,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":183,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":289,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":498,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":104,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":20,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":238,"org.easymock.tests2.EasyMockSupportClassTest.testAll":414,"org.easymock.tests.MockClassControlTest.testEquals":287,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":146,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":56,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":490,"org.easymock.tests2.CaptureTest.testCaptureAll":84,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":226,"org.easymock.tests.MockNameTest.defaultName":280,"org.easymock.tests2.UsageConstraintsTest.testMatches":106,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":148,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":313,"org.easymock.samples.ExampleTest.voteForRemovals":320,"org.easymock.tests.UsageVarargTest.allKinds":76,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":295,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":227,"org.easymock.samples.BasicClassMockTest.testPrintContent":327,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":32,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":346,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":461,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":266,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":337,"org.easymock.tests2.UsageConstraintsTest.greaterThan":108,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":415,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":292,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":447,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":508,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":309,"org.easymock.samples.ExampleTest.voteForRemoval":317,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":448,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":386,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":278,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":356,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":441,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":500,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":61,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":223,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":407,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":204,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":465,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":412,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":262,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":457,"org.easymock.tests2.CaptureTest.testCaptureFirst":88,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":203,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":466,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":380,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":234,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":179,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":80,"org.easymock.tests2.CaptureTest.testCapture2_2446744":87,"org.easymock.tests2.UsageTest.moreThanOneArgument":370,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":409,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":215,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":245,"org.easymock.tests.GenericTest.testBridgedEquals":2,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":143,"org.easymock.tests.UsageExpectAndReturnTest.longType":175,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":463,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":224,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":57,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":113,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":252,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":55,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":135,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":310,"org.easymock.tests.UsageCallCountTest.tooManyCalls":144,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":533,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":431,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":180,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":486,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":44,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":31,"org.easymock.tests.MockingTest.testNiceClassMocking":261,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":361,"org.easymock.tests.MockingTest.testClassMocking":254,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":137,"org.easymock.tests2.UsageConstraintsTest.testContains":103,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":383,"org.easymock.tests2.UsageConstraintsTest.testFind":94,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":38,"org.easymock.tests.MockTypeTest.fromEasyMockClass":275,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":164,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":83,"org.easymock.tests.UsageExpectAndReturnTest.object":182,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":81,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":485,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":471,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":240,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":249,"org.easymock.tests.UsageTest.exactCallCountByLastCall":130,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":62,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":202,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":195,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":268,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":390,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":188,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":235,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":231,"org.easymock.tests.MockClassControlTest.testHashCode":286,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":331,"org.easymock.tests2.EasyMockSupportTest.testVerify":475,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":424,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":534,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":269,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":24,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":229,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":488,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":89,"org.easymock.tests.UsageVarargTest.varargCharAccepted":239,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":301,"org.easymock.tests2.CaptureTest.testCaptureMultiple":497,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":347,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":220,"org.easymock.tests2.UsageTest.openCallCountByLastCall":374,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":474,"org.easymock.tests.DefaultClassInstantiatorTest.object":302,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":23,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":425,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":46,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":29,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":479,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":330,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":506,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":445,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":285,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":45,"org.easymock.tests.CapturesMatcherTest.test":134,"org.easymock.tests.ReplayStateInvalidCallsTest.times":512,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":189,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":221,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":513,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":433,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":284,"org.easymock.tests2.UsageTest.resumeIfFailure":379,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":272,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":354,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":265,"org.easymock.tests2.StubTest.stubWithReturnValue":60,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":405,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":181,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":114,"org.easymock.tests2.SerializationTest.testAllMockedMethod":495,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":213,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":132,"org.easymock.samples.SupportTest.voteForRemovals":329,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":145,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":333,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":51,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":219,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":451,"org.easymock.tests.UsageExpectAndThrowTest.object":49,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":196,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":111,"org.easymock.tests2.DelegateToTest.testWrongClass":460,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":510,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":77,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":78,"org.easymock.tests.UsageStrictMockTest.range":167,"org.easymock.samples.ConstructorCalledMockTest.testTax":3,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":358,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":470,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":360,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":50,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":404,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":411,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":158,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":128,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":298,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":122,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":502,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":121,"org.easymock.tests2.CaptureTest.testCaptureNone":85,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":523,"org.easymock.tests.UsageUnorderedTest.message":68,"org.easymock.tests.UsageVerifyTest.twoReturns":296,"org.easymock.tests.UsageVarargTest.varargByteAccepted":244,"org.easymock.tests2.ThreadingTest.testThreadSafe":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":428,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":141,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":250,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":326,"org.easymock.tests2.CaptureTest.testCapture_2617107":14,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":194,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":26,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":217,"org.easymock.tests2.UsageConstraintsTest.any":101,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":155,"org.easymock.tests2.StubTest.stub":352,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":222,"org.easymock.tests.UsageExpectAndThrowTest.longType":42,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":218,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":264,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":306,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":154,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":348,"org.easymock.tests2.SerializationTest.testClass":493,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":335,"org.easymock.tests.LimitationsTest.mockNativeMethod":162,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":191,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":1,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":478,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":518,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":351,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":524,"org.easymock.tests2.NameTest.nameForMocksControl":395,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":480,"org.easymock.tests2.MockedExceptionTest.testMockedException":382,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":416,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":127,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":456,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":43,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":258,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":436,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":406,"org.easymock.tests.MockingTest.testNicePartialClassMocking":256,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":440,"org.easymock.tests2.CompareToTest.testNotComparable":529,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":476,"org.easymock.tests2.CaptureTest.testCaptureLast":19,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":193,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":517,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":98,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":367,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":112,"org.easymock.tests.MockingTest.testTwoMocks":255,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":514,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":368,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":172,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":47,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":377,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":116,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":527,"org.easymock.samples.ExampleTest.removeNonExistingDocument":321,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":483,"org.easymock.tests.UsageStrictMockTest.differentMethods":168,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":152,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":332,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":526,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":304,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":387,"org.easymock.tests2.MockBuilderTest.testCreateMockString":410,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":281,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":418,"org.easymock.tests.UsageExpectAndThrowTest.floatType":41,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":413,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":453,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":391,"org.easymock.tests.UsageVerifyTest.twoThrows":59,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":427,"org.easymock.samples.ExampleTest.voteAgainstRemoval":318,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":119,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":208,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":446,"org.easymock.tests.LimitationsTest.privateConstructor":161,"org.easymock.tests2.UsageConstraintsTest.testNotNull":115,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":33,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":381,"org.easymock.tests2.UsageTest.defaultResetToNice":376,"org.easymock.samples.ExampleTest.voteAgainstRemovals":315,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":187,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":209,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":477,"org.easymock.tests.UsageVarargTest.differentLength":241,"org.easymock.tests2.CallbackTest.callback":496,"org.easymock.tests2.UsageConstraintsTest.equals":492,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":10,"org.easymock.tests.UsageTest.openCallCountByLastCall":126,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":90,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":66,"org.easymock.tests.UsageCallCountTest.tooFewCalls":139,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":363,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":300,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":525,"org.easymock.tests.UsageThrowableTest.throwCheckedException":30,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":123,"org.easymock.tests.MockingTest.testStrictClassMocking":253,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":63,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":366,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":482,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":362,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":157,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":365,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":455,"org.easymock.tests.ObjectMethodsTest.testHashCode":248,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":516,"org.easymock.tests2.NameTest.nameForNiceMock":394,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":388,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":511,"org.easymock.tests2.DependencyTest.testInterfaceMocking":344,"org.easymock.samples.ExampleTest.addDocument":319,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":429,"org.easymock.tests2.DelegateToTest.testStubDelegate":459,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":434,"org.easymock.tests2.AnswerTest.stubAnswer":454,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":70,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":5,"org.easymock.tests.UsageVarargTest.varargLongAccepted":243,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":169,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":206,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":190,"org.easymock.tests.UsageExpectAndReturnTest.floatType":174,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":389,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":4,"org.easymock.tests.UsageThrowableTest.noUpperLimit":171,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":109,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":232,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":339,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":91,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":353,"org.easymock.tests2.SerializationTest.test":494,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":17,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":303,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":173,"org.easymock.tests2.UsageConstraintsTest.testSame":96,"org.easymock.samples.SupportTest.addDocument":328,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":364,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":501,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":419,"org.easymock.tests.GenericTest.testPackageScope":0,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":270,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":201,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":338,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":259,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":499,"org.easymock.tests2.NameTest.nameForMock":133,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":184,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":7,"org.easymock.tests2.UsageStrictMockTest.differentMethods":350,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":443,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":176,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":53,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":246,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":294,"org.easymock.tests2.MockedExceptionTest.testRealException":384,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":211,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":359,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":79,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":210,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":159,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":65,"org.easymock.tests2.NameTest.nameForStrictMock":393,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":401,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":82,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":439,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":357,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":531,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":110,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":305,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":398,"org.easymock.tests2.UsageStrictMockTest.range":349,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":505,"org.easymock.tests2.UsageConstraintsTest.lessThan":117,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":334,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":464,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":423,"org.easymock.tests2.CaptureTest.testCaptureRightOne":22,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":522,"org.easymock.tests2.UsageConstraintsTest.testOr":97,"org.easymock.tests.UsageRangeTest.combination":291,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":12,"org.easymock.tests.UsageTest.wrongArguments":125,"org.easymock.tests2.MockBuilderTest.testWithConstructor":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":420,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":282,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":177,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":185,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":199,"org.easymock.tests.UsageVarargTest.varargShortAccepted":242,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":307,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":142,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":519,"org.easymock.tests2.UsageConstraintsTest.cmpTo":102,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":452,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":509,"org.easymock.tests2.CompareToTest.testLessThan":528,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":35,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":375,"org.easymock.tests2.CaptureTest.testCaptureFromStub":86,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":149,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":399,"org.easymock.tests.UsageTest.unexpectedCallWithArray":124,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":515,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":69,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":140,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":6,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":186,"org.easymock.tests2.CaptureTest.testCapture":21,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":166,"org.easymock.tests2.UsageConstraintsTest.constraints":92,"org.easymock.samples.ExampleTest.addAndChangeDocument":322,"org.easymock.tests.UsageStrictMockTest.testVerify":170,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":325,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":165,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":225,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":18,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":73,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":178,"org.easymock.tests.LimitationsTest.abstractClass":160,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":74,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":233,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":532,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":469,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":236}}]
