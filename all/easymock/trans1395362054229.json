[{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"this.org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"answer"}},{"transplant":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:48","sourceCode":"if (org.easymock.internal.MocksControl != null) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\n} else {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\n}","type":"CtIfImpl"},"failures":[8,1,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,2,230,3,4,5,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,6,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,7,474,475,476,477],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"control"}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Injector:110","sourceCode":"continue","type":"CtContinueImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:98","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String)","type":"CtInvocationImpl"},"failures":[18,149,151,152,478],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[154,479,196],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[158,165,233,288,298,343,394,399,426,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,456,458,459,460,461,462,463,474],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"failures":[39,161,167,168,257,260,298,299,480,481,396,397,400,401,455],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[61],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[482,483,484,485,486,487],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"in":"in"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[1,2,3,5,7],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplant":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[126,488,489,490,491,0,492,493,494,495,496,497,498,189,194,195],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnValue":"arg","returnedType":"paramType"}},{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[109],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[499],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"this.org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[15,16,37,58,59,63,64,65,66,72,74,75,77,78,84,85,86,98,233,243,244,245,246,247,258,300,305,308,309,318,323,371,415,416,417,418,419,420,423,424,427,428,429],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","delegateTo":"value"}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:183","sourceCode":"throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" seems to have vanished\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if (org.easymock.ConstructorArgs == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:189","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, new net.sf.cglib.proxy.Callback[]{ org.easymock.internal.ClassProxyFactory.MockMethodInterceptor })","type":"CtInvocationImpl"},"failures":[15,15,16,16,18,22,23,29,108,109,111,112,113,114,116,118,119,122,123,124,125,127,145,146,147,148,149,150,151,152,155,156,157,171,172,173,187,188,189,190,193,194,196,198,202,205,215,221,239,240,241,248,328,329,330,331,332,334,337,350,355,360,383,384,385,386,387,388,389,390,422],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[79],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"failures":[102,103],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:108","failures":[233,288,298,343,426,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,456,459,460,461,462,463,474],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:573","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[61],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[8,1,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,500,501,502,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,503,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,489,146,147,490,148,149,150,151,491,152,153,154,155,156,492,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,2,230,3,4,5,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,504,248,249,250,251,252,253,505,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,6,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,506,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,7,474,475,476,477],"status":-1,"binaryOperator":"(int >= 1)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1507","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1026","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":61,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":394,"org.easymock.tests2.UsageTest.argumentsOrdered":168,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":142,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":181,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":314,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":163,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":19,"org.easymock.tests2.DelegateToTest.testReturnException":2,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":285,"org.easymock.tests.MockingTest.testPartialClassMocking":331,"org.easymock.tests.MockClassControlTest.testToString":385,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":224,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":295,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":124,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":209,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":435,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":205,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":27,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":68,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":423,"org.easymock.tests2.UsageTest.wrongArguments":161,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":57,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":236,"org.easymock.samples.ExampleTest.answerVsDelegate":1,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":355,"org.easymock.tests2.UsageConstraintsTest.testNull":64,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":336,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":111,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":390,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":141,"org.easymock.tests2.CaptureTest.testPrimitive":90,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":427,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":454,"org.easymock.tests.UsageTest.moreThanOneArgument":395,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":110,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":245,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":464,"org.easymock.tests.UsageTest.argumentsOrdered":401,"org.easymock.tests.UsageVarargTest.varargIntAccepted":405,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":319,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":415,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":145,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":501,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":185,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":150,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":6,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":419,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":51,"org.easymock.tests.ReplayStateInvalidUsageTest.times":379,"org.easymock.tests2.DependencyTest.testClassMocking":24,"org.easymock.tests2.AnswerTest.answer":101,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":69,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":321,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":45,"org.easymock.tests2.CaptureTest.testAnd":87,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":352,"org.easymock.tests2.UsageTest.strictResetToDefault":159,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":490,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":119,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":244,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":136,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":292,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":468,"org.easymock.tests2.DelegateToTest.testDelegate":5,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":450,"org.easymock.tests.LimitationsTest.mockFinalMethod":361,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":288,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":434,"org.easymock.tests2.DependencyTest.testClassMockingSupport":25,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":302,"org.easymock.tests2.CaptureTest.testCapture1_2446744":91,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":115,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":448,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":43,"org.easymock.tests.UsageThrowableTest.throwError":456,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":373,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":354,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":506,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":186,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":247,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":493,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":223,"org.easymock.samples.PartialClassMockTest.testGetArea":18,"org.easymock.tests.MockingTest.testInterfaceMocking":333,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":374,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":416,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":339,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":436,"org.easymock.tests2.UsageTest.niceToStrict":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":210,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":349,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":305,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":149,"org.easymock.tests2.MockBuilderTest.testCreateMock":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":218,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":54,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":444,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":137,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":351,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":471,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":362,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":234,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":496,"org.easymock.tests.UsageOverloadedMethodTest.overloading":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":220,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":474,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":74,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":275,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":341,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":73,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":96,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":406,"org.easymock.tests.MockClassControlTest.testEquals":389,"org.easymock.tests2.EasyMockSupportClassTest.testAll":202,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":240,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":452,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":432,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":44,"org.easymock.tests2.CaptureTest.testCaptureAll":88,"org.easymock.tests.MockNameTest.defaultName":421,"org.easymock.tests2.UsageConstraintsTest.testMatches":75,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":246,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":371,"org.easymock.samples.ExampleTest.voteForRemovals":12,"org.easymock.tests.UsageVarargTest.allKinds":414,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":297,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":433,"org.easymock.samples.BasicClassMockTest.testPrintContent":23,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":462,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":35,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":182,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":4,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":289,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":505,"org.easymock.tests2.UsageConstraintsTest.greaterThan":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":203,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":291,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":122,"org.easymock.samples.ExampleTest.voteForRemoval":9,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":254,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":128,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":123,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":499,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":356,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":502,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":114,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":422,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":158,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":154,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":311,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":134,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":458,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":200,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":284,"org.easymock.tests2.CaptureTest.testCaptureFirst":100,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":229,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":310,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":135,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":170,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":477,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":271,"org.easymock.tests2.UsageTest.moreThanOneArgument":160,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":130,"org.easymock.tests2.CaptureTest.testCapture2_2446744":99,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":156,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":322,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":413,"org.easymock.tests.GenericTest.testBridgedEquals":242,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":497,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":369,"org.easymock.tests.UsageExpectAndReturnTest.longType":267,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":430,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":132,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":478,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":453,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":420,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":82,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":451,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":392,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":243,"org.easymock.tests.UsageCallCountTest.tooManyCalls":370,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":219,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":272,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":56,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":440,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":461,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":188,"org.easymock.tests.MockingTest.testNiceClassMocking":337,"org.easymock.tests.MockingTest.testClassMocking":329,"org.easymock.tests2.UsageConstraintsTest.testContains":72,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":363,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":173,"org.easymock.tests2.UsageConstraintsTest.testFind":63,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":343,"org.easymock.tests.MockTypeTest.fromEasyMockClass":353,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":34,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":255,"org.easymock.tests.UsageExpectAndReturnTest.object":274,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":116,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":55,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":140,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":408,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":347,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":498,"org.easymock.tests.UsageTest.exactCallCountByLastCall":402,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":300,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":309,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":465,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":294,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":126,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":403,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":280,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":7,"org.easymock.tests.MockClassControlTest.testHashCode":388,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":176,"org.easymock.tests2.EasyMockSupportTest.testVerify":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":212,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":466,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":472,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":470,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":42,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":107,"org.easymock.tests.UsageVarargTest.varargCharAccepted":407,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":504,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":36,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":327,"org.easymock.tests2.UsageTest.openCallCountByLastCall":164,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":143,"org.easymock.tests.DefaultClassInstantiatorTest.object":248,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":469,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":345,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":481,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":442,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":213,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":459,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":49,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":175,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":387,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":120,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":441,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":281,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":391,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":386,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":221,"org.easymock.tests2.UsageTest.resumeIfFailure":169,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":350,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":500,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":287,"org.easymock.tests2.StubTest.stubWithReturnValue":233,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":491,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":83,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":273,"org.easymock.tests2.SerializationTest.testAllMockedMethod":198,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":320,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":479,"org.easymock.samples.SupportTest.voteForRemovals":21,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":238,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":178,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":447,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":326,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":102,"org.easymock.tests.UsageExpectAndThrowTest.object":445,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":296,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":80,"org.easymock.tests2.DelegateToTest.testWrongClass":3,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":428,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":429,"org.easymock.samples.ConstructorCalledMockTest.testTax":15,"org.easymock.tests.UsageStrictMockTest.range":260,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":30,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":139,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":187,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":495,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":446,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":151,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":400,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":199,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":381,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":235,"org.easymock.tests2.CaptureTest.testCaptureNone":95,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":340,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":483,"org.easymock.tests.UsageUnorderedTest.message":455,"org.easymock.tests.UsageVerifyTest.twoReturns":299,"org.easymock.tests.UsageVarargTest.varargByteAccepted":412,"org.easymock.tests2.ThreadingTest.testThreadSafe":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":216,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":367,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":22,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":348,"org.easymock.tests2.CaptureTest.testCapture_2617107":89,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":304,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":426,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":324,"org.easymock.tests2.UsageConstraintsTest.any":70,"org.easymock.tests2.StubTest.stub":232,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":378,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":393,"org.easymock.tests.UsageExpectAndThrowTest.longType":438,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":325,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":252,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":377,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":38,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":180,"org.easymock.tests2.SerializationTest.testClass":196,"org.easymock.tests.LimitationsTest.mockNativeMethod":360,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":241,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":283,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":48,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":41,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":484,"org.easymock.tests2.NameTest.nameForMocksControl":228,"org.easymock.tests2.MockedExceptionTest.testMockedException":172,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":204,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":399,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":439,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":33,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":334,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":108,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":152,"org.easymock.tests.MockingTest.testNicePartialClassMocking":332,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":113,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":46,"org.easymock.tests2.CaptureTest.testCaptureLast":94,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":303,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":67,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":194,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":81,"org.easymock.tests.MockingTest.testTwoMocks":330,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":195,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":264,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":443,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":167,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":85,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":487,"org.easymock.samples.ExampleTest.removeNonExistingDocument":13,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":53,"org.easymock.tests.UsageStrictMockTest.differentMethods":261,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":375,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":177,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":486,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":250,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":129,"org.easymock.tests2.MockBuilderTest.testCreateMockString":157,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":383,"org.easymock.tests.UsageExpectAndThrowTest.floatType":437,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":206,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":201,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":104,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":503,"org.easymock.tests.UsageVerifyTest.twoThrows":298,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":473,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":215,"org.easymock.samples.ExampleTest.voteAgainstRemoval":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":315,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":338,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":121,"org.easymock.tests.LimitationsTest.privateConstructor":359,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":494,"org.easymock.tests2.UsageConstraintsTest.testNotNull":84,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":463,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":171,"org.easymock.tests2.UsageTest.defaultResetToNice":166,"org.easymock.samples.ExampleTest.voteAgainstRemovals":8,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":316,"org.easymock.tests.UsageVarargTest.differentLength":409,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":47,"org.easymock.tests2.CallbackTest.callback":231,"org.easymock.tests2.UsageConstraintsTest.equals":62,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":117,"org.easymock.tests.UsageTest.openCallCountByLastCall":398,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":58,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":425,"org.easymock.tests.UsageCallCountTest.tooFewCalls":365,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":190,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":237,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":485,"org.easymock.tests.UsageThrowableTest.throwCheckedException":460,"org.easymock.tests.MockingTest.testStrictClassMocking":328,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":193,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":301,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":189,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":52,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":380,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":192,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":106,"org.easymock.tests.ObjectMethodsTest.testHashCode":346,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":131,"org.easymock.tests2.NameTest.nameForNiceMock":227,"org.easymock.tests2.DependencyTest.testInterfaceMocking":26,"org.easymock.samples.ExampleTest.addDocument":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":222,"org.easymock.tests2.DelegateToTest.testStubDelegate":230,"org.easymock.tests2.AnswerTest.stubAnswer":105,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":258,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":153,"org.easymock.tests.UsageVarargTest.varargLongAccepted":411,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":262,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":313,"org.easymock.tests.UsageExpectAndReturnTest.floatType":266,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":282,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":125,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":16,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":475,"org.easymock.tests.UsageThrowableTest.noUpperLimit":457,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":184,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":78,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":59,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":28,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":92,"org.easymock.tests2.SerializationTest.test":197,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":249,"org.easymock.tests2.UsageConstraintsTest.testSame":65,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":265,"org.easymock.samples.SupportTest.addDocument":20,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":191,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":207,"org.easymock.tests.GenericTest.testPackageScope":239,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":467,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":308,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":183,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":335,"org.easymock.tests2.NameTest.nameForMock":225,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":276,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":492,"org.easymock.tests2.UsageStrictMockTest.differentMethods":40,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":118,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":268,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":449,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":344,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":293,"org.easymock.tests2.MockedExceptionTest.testRealException":174,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":357,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":31,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":318,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":480,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":37,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":317,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":424,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":382,"org.easymock.tests2.NameTest.nameForStrictMock":226,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":148,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":488,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":32,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":112,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":29,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":79,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":251,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":146,"org.easymock.tests2.UsageStrictMockTest.range":39,"org.easymock.tests2.UsageConstraintsTest.lessThan":86,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":179,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":133,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":312,"org.easymock.tests2.CaptureTest.testCaptureRightOne":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":211,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":482,"org.easymock.tests2.UsageConstraintsTest.testOr":66,"org.easymock.tests.UsageRangeTest.combination":290,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":109,"org.easymock.tests.UsageTest.wrongArguments":397,"org.easymock.tests2.MockBuilderTest.testWithConstructor":489,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":208,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":384,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":269,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":306,"org.easymock.tests.UsageVarargTest.varargShortAccepted":410,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":253,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":368,"org.easymock.tests2.UsageConstraintsTest.cmpTo":71,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":103,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":307,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":165,"org.easymock.tests2.CaptureTest.testCaptureFromStub":98,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":372,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":147,"org.easymock.tests.UsageTest.unexpectedCallWithArray":396,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":257,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":366,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":0,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":278,"org.easymock.tests2.UsageConstraintsTest.constraints":60,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":259,"org.easymock.samples.ExampleTest.addAndChangeDocument":14,"org.easymock.tests.UsageStrictMockTest.testVerify":263,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":17,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":256,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":431,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":93,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":417,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":270,"org.easymock.tests.LimitationsTest.abstractClass":358,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":476,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":418,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":404,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":138}}]
