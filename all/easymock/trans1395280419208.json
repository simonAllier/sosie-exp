[{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5,6,7,8,9,10],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[11,12,13],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:38","sourceCode":"new java.util.HashSet<java.lang.String>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:125","sourceCode":"java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[31,32],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[33,34],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[35,36],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:91","sourceCode":"java.lang.StringBuilder.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[17,19,20,21,37,38,39,40,22,41,42,43,23,24,25,26,44,45,46,47,48,49,50],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"buffer"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[51,52,53],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[54,55,56,57,58],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[59,60],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:35","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:84","sourceCode":"java.lang.Object[] = new java.lang.Object[0]","type":"CtAssignmentImpl"},"failures":[61],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,31,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,17,18,19,136,137,20,21,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,59,160,161,162,60,163,54,164,165,166,167,168,169,55,170,171,172,56,173,174,175,176,57,58,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,35,248,249,250,251,252,253,254,255,256,36,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,38,39,40,279,280,281,282,283,284,285,22,41,286,42,43,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,0,1,362,363,2,364,3,4,365,5,366,367,368,369,370,371,372,373,374,6,375,376,377,378,7,379,33,11,12,13,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,23,24,399,400,401,402,403,25,26,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,44,45,46,47,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,32,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,8,485,9,486,487,488,489,490,491,492,10,493,494,495,496,497,498,48,499,49,50,500],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[90,136,137,54,257,38,280,281,42,43,361,0,363,364,3,368,371,374,379,401,402,49,50],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:117","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:115","sourceCode":"java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int])","type":"CtAssignmentImpl"},"failures":[240,244],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[252,310,372,400],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[369],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:213","sourceCode":"return org.easymock.internal.RecordState.createNumberObject(java.lang.Object, java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"expected":"o"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[67,68,69,70,72,73,88,89,90,98,99,100,101,102,103,104,105,114,116,118,31,120,122,123,125,126,127,128,129,135,17,19,136,137,20,21,138,139,140,141,143,144,146,147,148,149,150,156,158,160,161,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,225,226,228,232,233,234,235,236,237,257,259,260,278,38,39,40,280,281,285,22,41,286,42,43,287,289,290,291,292,293,294,295,297,300,301,302,303,304,305,306,307,308,309,310,311,314,319,326,329,339,345,348,349,350,351,353,354,355,357,359,360,361,0,1,363,2,364,3,4,365,366,367,368,369,370,371,372,373,374,6,375,376,377,378,7,379,33,11,12,13,386,388,390,397,398,23,24,399,400,401,402,25,26,404,405,413,416,417,428,435,436,437,438,439,440,441,443,444,445,446,447,454,461,466,467,468,469,470,471,472,473,474,477,478,480,481,482,484,8,485,9,486,487,488,489,490,491,492,10,494,495,498,48,499,49,50,500],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.LastControl:95","failures":[0,1,2,3,4,5,6,7,8,9,10],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[65,66,67,68,69,70,89,90,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,120,122,123,125,126,127,128,129,130,131,132,133,134,135,17,18,19,136,137,20,21,138,139,140,141,143,144,146,147,148,149,150,156,158,159,160,161,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,225,226,228,232,233,234,235,236,237,250,257,258,259,260,261,262,263,264,265,268,271,278,38,39,40,284,285,22,41,286,42,43,287,288,290,291,292,293,294,295,297,306,307,308,309,310,311,314,317,319,349,350,354,355,357,359,360,361,0,1,363,2,364,3,4,365,366,367,368,369,370,371,372,373,374,6,375,376,378,7,379,33,11,12,13,380,386,387,394,396,397,398,23,24,399,400,401,402,403,25,26,404,405,413,416,417,418,419,420,421,422,44,45,46,47,461,464,465,466,32,467,468,469,470,471,472,473,474,477,480,481,482,484,8,485,9,486,487,488,489,490,491,492,10,493,494,495,496,497,498,48,499,49,50,500],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[357,359,377,7],"status":-1,"binaryOperator":"java.lang.Object != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[87],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[6],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:707","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[365],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:36","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.InjectionPlan:51","failures":[300,301,423,424,425,426,427,428,429,430,431,432,433,434,449,450,451,452,453,454,455,456,457,458,459,460],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[59,60],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:241","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:933","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:157","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[320],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:95","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.util.Stack<org.easymock.IArgumentMatcher>.pop();\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"count":"count","stack":"stack"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[4,365],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[135,183,189,195,199,201,203,209,215,219,221,232,487,494],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.RecordState:163","failures":[417,418],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:38","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:45","sourceCode":"return org.easymock.internal.matchers.CompareTo<T>.matchResult(((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Comparable<T>))","type":"CtReturnImpl"},"failures":[314,360,0,365,367,370,373,375,376,378,33,34,501,502,503,504],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[389,462,505,506,507,508,509],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arg":"mock"}},{"transplant":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[389,462,505,506,507,508,509],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"argType":"parameterType","paramType":"parameterType"}},{"position":"org.easymock.internal.matchers.Equals:37","failures":[88,89,90,98,99,100,101,102,103,104,105,110,111,112,113,114,115,116,118,31,122,123,125,126,127,128,129,135,17,136,137,138,139,140,141,143,144,146,147,148,149,150,158,161,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,232,233,234,235,236,237,261,262,263,264,265,38,39,40,285,41,286,42,43,287,290,291,292,293,294,295,297,300,301,302,303,304,305,307,310,319,1,2,3,4,7,11,12,386,388,390,397,398,23,399,400,401,402,404,405,413,416,417,428,435,436,437,438,439,440,441,443,444,445,446,454,467,468,469,470,472,473,474,477,478,480,481,482,484,8,485,490,491,10,495,498,48,499,49,50,500],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[42,43,49,50],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:231","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[318,322,329,382,394],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[510],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ErrorMessage:51","failures":[511,39,40,42,49],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"position":"org.easymock.EasyMock:1065","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1235","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"failures":[372],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":1,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":135,"org.easymock.tests2.UsageTest.argumentsOrdered":26,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":445,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":429,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":171,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":400,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":300,"org.easymock.tests2.DelegateToTest.testReturnException":480,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":111,"org.easymock.tests.MockingTest.testPartialClassMocking":225,"org.easymock.tests.MockClassControlTest.testToString":272,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":448,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":152,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":177,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":333,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":182,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":329,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":37,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":478,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":505,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":365,"org.easymock.tests2.UsageTest.wrongArguments":24,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":233,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":460,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":108,"org.easymock.samples.ExampleTest.answerVsDelegate":291,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":82,"org.easymock.tests2.UsageConstraintsTest.testNull":2,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":230,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":309,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":444,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":277,"org.easymock.tests2.CaptureTest.testPrimitive":486,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":237,"org.easymock.tests.UsageTest.moreThanOneArgument":17,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":201,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":308,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":263,"org.easymock.tests.UsageTest.argumentsOrdered":21,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":279,"org.easymock.tests.UsageVarargTest.varargIntAccepted":141,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":175,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":125,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":509,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":380,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":433,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":408,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":387,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":164,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":129,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":454,"org.easymock.tests.ReplayStateInvalidUsageTest.times":254,"org.easymock.tests2.DependencyTest.testClassMocking":475,"org.easymock.tests2.AnswerTest.answer":413,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":57,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":422,"org.easymock.tests2.CaptureTest.testAnd":8,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":79,"org.easymock.tests2.UsageTest.strictResetToDefault":398,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":384,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":317,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":262,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":439,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":259,"org.easymock.tests2.DelegateToTest.testDelegate":484,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":283,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":197,"org.easymock.tests.LimitationsTest.mockFinalMethod":157,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":114,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":134,"org.easymock.tests2.DependencyTest.testClassMockingSupport":476,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":267,"org.easymock.tests2.CaptureTest.testCapture1_2446744":487,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":313,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":195,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":420,"org.easymock.tests.UsageThrowableTest.throwError":98,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":248,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":81,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":434,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":124,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":347,"org.easymock.samples.PartialClassMockTest.testGetArea":289,"org.easymock.tests.MockingTest.testInterfaceMocking":227,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":249,"org.easymock.tests2.CompareToTest.testLessOrEqual":504,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":126,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":86,"org.easymock.tests2.UsageTest.niceToStrict":399,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":183,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":334,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":163,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":51,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":386,"org.easymock.tests2.MockBuilderTest.testCreateMock":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":342,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":457,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":191,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":27,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":440,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":78,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":64,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":65,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":106,"org.easymock.tests.UsageOverloadedMethodTest.overloading":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":344,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":31,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":370,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":88,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":213,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":369,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":492,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":142,"org.easymock.tests.MockClassControlTest.testEquals":276,"org.easymock.tests2.EasyMockSupportClassTest.testAll":326,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":161,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":28,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":199,"org.easymock.tests2.CaptureTest.testCaptureAll":485,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":421,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":132,"org.easymock.tests.MockNameTest.defaultName":97,"org.easymock.tests2.UsageConstraintsTest.testMatches":371,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":247,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":264,"org.easymock.samples.ExampleTest.voteForRemovals":295,"org.easymock.tests.UsageVarargTest.allKinds":150,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":38,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":133,"org.easymock.samples.BasicClassMockTest.testPrintContent":305,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":104,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":497,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":483,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":430,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":115,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":245,"org.easymock.tests2.UsageConstraintsTest.greaterThan":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":327,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":258,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":320,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":246,"org.easymock.samples.ExampleTest.voteForRemoval":292,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":469,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":321,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":83,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":409,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":312,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":397,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":278,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":392,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":169,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":437,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":324,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":110,"org.easymock.tests2.CaptureTest.testCaptureFirst":495,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":479,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":168,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":438,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":405,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":121,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":209,"org.easymock.tests2.CaptureTest.testCapture2_2446744":494,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":471,"org.easymock.tests2.UsageTest.moreThanOneArgument":23,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":58,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":149,"org.easymock.tests.GenericTest.testBridgedEquals":60,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":72,"org.easymock.tests.UsageExpectAndReturnTest.longType":205,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":435,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":130,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":200,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":266,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":377,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":198,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":75,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":261,"org.easymock.tests.UsageCallCountTest.tooManyCalls":73,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":67,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":343,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":210,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":459,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":187,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":103,"org.easymock.tests.MockingTest.testNiceClassMocking":231,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":349,"org.easymock.tests.MockingTest.testClassMocking":223,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":66,"org.easymock.tests2.UsageConstraintsTest.testContains":368,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":466,"org.easymock.tests2.UsageConstraintsTest.testFind":363,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":90,"org.easymock.tests.MockTypeTest.fromEasyMockClass":80,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":284,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":359,"org.easymock.tests.UsageExpectAndReturnTest.object":212,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":314,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":458,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":443,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":506,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":144,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":94,"org.easymock.tests.UsageTest.exactCallCountByLastCall":138,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":158,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":167,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":151,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":280,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":16,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":462,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":139,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":218,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":118,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":424,"org.easymock.tests.MockClassControlTest.testHashCode":275,"org.easymock.tests2.EasyMockSupportTest.testVerify":447,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":336,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":281,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":116,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":63,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":419,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":61,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":496,"org.easymock.tests.UsageVarargTest.varargCharAccepted":143,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":238,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":498,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":181,"org.easymock.tests2.UsageTest.openCallCountByLastCall":401,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":446,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":52,"org.easymock.tests.DefaultClassInstantiatorTest.object":239,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":62,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":92,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":337,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":101,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":452,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":423,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":274,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":318,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":188,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":219,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":74,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":273,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":345,"org.easymock.tests2.UsageTest.resumeIfFailure":404,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":77,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":407,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":113,"org.easymock.tests2.StubTest.stubWithReturnValue":474,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":389,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":211,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":378,"org.easymock.tests2.SerializationTest.testAllMockedMethod":13,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":176,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":29,"org.easymock.samples.SupportTest.voteForRemovals":303,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":59,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":426,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":194,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":180,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":414,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":153,"org.easymock.tests.UsageExpectAndThrowTest.object":192,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":375,"org.easymock.tests2.DelegateToTest.testWrongClass":482,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":122,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":123,"org.easymock.tests.UsageStrictMockTest.range":42,"org.easymock.samples.ConstructorCalledMockTest.testTax":298,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":411,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":442,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":348,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":193,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":388,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":20,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":323,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":107,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":14,"org.easymock.tests2.CaptureTest.testCaptureNone":491,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":87,"org.easymock.tests.UsageUnorderedTest.message":232,"org.easymock.tests.UsageVerifyTest.twoReturns":40,"org.easymock.tests.UsageVarargTest.varargByteAccepted":148,"org.easymock.tests2.ThreadingTest.testThreadSafe":468,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":340,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":70,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":95,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":304,"org.easymock.tests2.CaptureTest.testCapture_2617107":9,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":30,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":178,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":236,"org.easymock.tests2.UsageConstraintsTest.any":366,"org.easymock.tests2.StubTest.stub":473,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":253,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":76,"org.easymock.tests.UsageExpectAndThrowTest.longType":185,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":179,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":112,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":243,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":252,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":499,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":428,"org.easymock.tests2.SerializationTest.testClass":11,"org.easymock.tests.LimitationsTest.mockNativeMethod":156,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":162,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":221,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":451,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":500,"org.easymock.tests2.NameTest.nameForMocksControl":47,"org.easymock.tests2.MockedExceptionTest.testMockedException":465,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":453,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":328,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":137,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":186,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":228,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":358,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":306,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":390,"org.easymock.tests.MockingTest.testNicePartialClassMocking":226,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":311,"org.easymock.tests2.CompareToTest.testCompareEqual":502,"org.easymock.tests2.CaptureTest.testCaptureLast":490,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":449,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":268,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":4,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":355,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":376,"org.easymock.tests.MockingTest.testTwoMocks":224,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":356,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":202,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":190,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":25,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":379,"org.easymock.samples.ExampleTest.removeNonExistingDocument":296,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":456,"org.easymock.tests.UsageStrictMockTest.differentMethods":43,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":250,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":425,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":241,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":470,"org.easymock.tests2.MockBuilderTest.testCreateMockString":396,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":270,"org.easymock.tests.UsageExpectAndThrowTest.floatType":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":330,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":372,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":325,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":416,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":463,"org.easymock.tests.UsageVerifyTest.twoThrows":39,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":339,"org.easymock.samples.ExampleTest.voteAgainstRemoval":293,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":172,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":85,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":319,"org.easymock.tests.LimitationsTest.privateConstructor":155,"org.easymock.tests2.UsageConstraintsTest.testNotNull":7,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":464,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":105,"org.easymock.tests2.UsageTest.defaultResetToNice":403,"org.easymock.samples.ExampleTest.voteAgainstRemovals":290,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":56,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":217,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":450,"org.easymock.tests.UsageVarargTest.differentLength":145,"org.easymock.tests2.CallbackTest.callback":467,"org.easymock.tests2.UsageConstraintsTest.equals":362,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":315,"org.easymock.tests.UsageTest.openCallCountByLastCall":136,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":360,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":235,"org.easymock.tests.UsageCallCountTest.tooFewCalls":68,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":351,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":109,"org.easymock.tests.UsageThrowableTest.throwCheckedException":102,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":15,"org.easymock.tests.MockingTest.testStrictClassMocking":222,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":159,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":354,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":455,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":350,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":255,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":353,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":418,"org.easymock.tests2.CompareToTest.testGreateOrEqual":503,"org.easymock.tests.ObjectMethodsTest.testHashCode":93,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":508,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":472,"org.easymock.tests2.NameTest.nameForNiceMock":46,"org.easymock.tests2.DependencyTest.testInterfaceMocking":477,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":507,"org.easymock.samples.ExampleTest.addDocument":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":341,"org.easymock.tests2.DelegateToTest.testStubDelegate":481,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":346,"org.easymock.tests2.AnswerTest.stubAnswer":417,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":41,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":391,"org.easymock.tests.UsageVarargTest.varargLongAccepted":147,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":287,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":170,"org.easymock.tests.UsageExpectAndReturnTest.floatType":204,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":220,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":461,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":299,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":432,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":119,"org.easymock.tests.UsageThrowableTest.noUpperLimit":99,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":374,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":361,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":406,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":488,"org.easymock.tests2.SerializationTest.test":12,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":240,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":203,"org.easymock.tests2.UsageConstraintsTest.testSame":364,"org.easymock.samples.SupportTest.addDocument":302,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":352,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":331,"org.easymock.tests.GenericTest.testPackageScope":160,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":282,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":166,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":431,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":229,"org.easymock.tests2.NameTest.nameForMock":44,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":214,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":395,"org.easymock.tests2.UsageStrictMockTest.differentMethods":50,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":316,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":206,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":196,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":91,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":260,"org.easymock.tests2.MockedExceptionTest.testRealException":32,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":84,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":412,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":174,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":510,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":173,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":48,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":36,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":234,"org.easymock.tests2.NameTest.nameForStrictMock":45,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":385,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":53,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":357,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":310,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":410,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":6,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":242,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":382,"org.easymock.tests2.UsageStrictMockTest.range":49,"org.easymock.tests2.UsageConstraintsTest.lessThan":33,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":427,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":55,"org.easymock.tests2.CaptureTest.testCaptureRightOne":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":335,"org.easymock.tests2.UsageConstraintsTest.testOr":3,"org.easymock.tests.UsageRangeTest.combination":257,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":307,"org.easymock.tests.UsageTest.wrongArguments":19,"org.easymock.tests2.MockBuilderTest.testWithConstructor":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":332,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":271,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":207,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":54,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":215,"org.easymock.tests.UsageVarargTest.varargShortAccepted":146,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":244,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":71,"org.easymock.tests2.UsageConstraintsTest.cmpTo":367,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":415,"org.easymock.tests2.CompareToTest.testLessThan":34,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":165,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":402,"org.easymock.tests2.CaptureTest.testCaptureFromStub":493,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":35,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":383,"org.easymock.tests.UsageTest.unexpectedCallWithArray":18,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":22,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":69,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":216,"org.easymock.tests2.UsageConstraintsTest.constraints":0,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":286,"org.easymock.samples.ExampleTest.addAndChangeDocument":297,"org.easymock.tests.UsageStrictMockTest.testVerify":288,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":301,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":285,"org.easymock.tests2.CompareToTest.testGreateThan":501,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":131,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":489,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":127,"org.easymock.tests.LimitationsTest.abstractClass":154,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":208,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":128,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":120,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":511,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":441,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":140}}]
