[{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:237","sourceCode":"return org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.reflect.Method.getParameterTypes())","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:643","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[1,2,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[4,5],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[6,7,8,9],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:840","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:149","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[1,2,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[33,33,34,34,35,36],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[37,38,39],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[40,41],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[42],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:53","sourceCode":"final java.lang.Object[] java.lang.Object[] = org.easymock.internal.DefaultClassInstantiator.getArgsForTypes(java.lang.reflect.Constructor<?>.getParameterTypes())","type":"CtLocalVariableImpl"},"failures":[43,44],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[45,46,47,48],"status":-1,"binaryOperator":"int < 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[49,50,51,52,53,54,55,56,57,58,59,60,61],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[62],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[63,64],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[65,66],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[67],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[20,21,27,28],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"expected"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"this.org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"failures":[68,69,70,71],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:337","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[72,67],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1052","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[73,74],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:75","sourceCode":"return \"expected: \" + org.easymock.internal.Range.(toString())","type":"CtReturnImpl"},"failures":[11,12,13,14,15,16,17,18,19,20,21,75,22,23,24,25,26,27,28,29,30,31,32],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[76,77,78],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[79,33,33,34,34,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,11,12,13,103,14,104,15,105,106,16,17,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,18,19,133,20,21,134,135,136,49,137,138,50,139,140,141,142,143,144,145,146,147,148,149,150,151,152,51,52,53,54,55,56,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,75,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,57,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,22,23,235,236,237,238,239,24,25,240,241,242,243,26,244,27,28,245,246,29,30,31,32,247,248,4,5,249,250,251,252,76,77,78,253,254,255,256,257,258,259,260,261,69,262,263,264,265,266,267,268,269,270,271,73,272,273,274,275,276,62,277,278,279,280,6,281,282,283,284,285,45,286,287,40,288,63,64,46,289,290,291,47,292,293,294,295,296,297,298,299,300,301,7,302,8,303,304,305,306,307,308,309,9,310,311,312,313,314,315,316,317,58,59,60,61],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:852","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[274,276,40,289],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"failures":[246,318,76,319,320,321,322,323,324,325],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":62,"org.easymock.tests2.UsageTest.argumentsOrdered":25,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":103,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":227,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":54,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":236,"org.easymock.tests2.StubTest.stubWithReturnValue":57,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":319,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":289,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":83,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":120,"org.easymock.tests2.SerializationTest.testAllMockedMethod":78,"org.easymock.tests2.DelegateToTest.testReturnException":314,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":67,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":52,"org.easymock.tests.MockingTest.testPartialClassMocking":108,"org.easymock.samples.SupportTest.voteForRemovals":81,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":0,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":71,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":185,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":254,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":173,"org.easymock.tests.UsageExpectAndThrowTest.object":183,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":10,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":231,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":64,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":321,"org.easymock.tests2.DelegateToTest.testWrongClass":316,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":194,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":195,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":281,"org.easymock.tests2.UsageTest.wrongArguments":23,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":137,"org.easymock.tests.UsageStrictMockTest.range":20,"org.easymock.samples.ConstructorCalledMockTest.testTax":33,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":149,"org.easymock.samples.ExampleTest.answerVsDelegate":85,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":224,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":263,"org.easymock.tests2.UsageConstraintsTest.testNull":278,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":295,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":184,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":260,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":226,"org.easymock.tests2.CaptureTest.testPrimitive":303,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":140,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":192,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":16,"org.easymock.tests.UsageTest.moreThanOneArgument":14,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":294,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":148,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":207,"org.easymock.tests2.CaptureTest.testCaptureNone":308,"org.easymock.tests.UsageUnorderedTest.message":75,"org.easymock.tests.UsageVerifyTest.twoReturns":13,"org.easymock.tests.UsageVarargTest.varargByteAccepted":100,"org.easymock.tests2.ThreadingTest.testThreadSafe":270,"org.easymock.tests.UsageTest.argumentsOrdered":17,"org.easymock.tests.UsageVarargTest.varargIntAccepted":95,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":168,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":91,"org.easymock.tests2.CaptureTest.testCapture_2617107":8,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":153,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":257,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":139,"org.easymock.tests2.UsageConstraintsTest.any":282,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":259,"org.easymock.tests2.StubTest.stub":216,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":157,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":53,"org.easymock.tests.UsageExpectAndThrowTest.longType":176,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":1,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":39,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":144,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":244,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":301,"org.easymock.tests2.SerializationTest.testClass":76,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":313,"org.easymock.tests.LimitationsTest.mockNativeMethod":193,"org.easymock.tests2.AnswerTest.answer":247,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":130,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":252,"org.easymock.tests2.CaptureTest.testAnd":7,"org.easymock.tests2.UsageTest.strictResetToDefault":234,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":299,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":245,"org.easymock.tests2.NameTest.nameForMocksControl":32,"org.easymock.tests2.MockedExceptionTest.testMockedException":59,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":206,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":221,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":212,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":106,"org.easymock.tests2.DelegateToTest.testDelegate":317,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":42,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":110,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":177,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":292,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":261,"org.easymock.tests.MockingTest.testNicePartialClassMocking":109,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":188,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":297,"org.easymock.tests2.CaptureTest.testCaptureLast":307,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":55,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":269,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":6,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":46,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":162,"org.easymock.tests2.CaptureTest.testCapture1_2446744":304,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":111,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":186,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":250,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":181,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":24,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":291,"org.easymock.tests.UsageThrowableTest.throwError":197,"org.easymock.tests.UsageStrictMockTest.differentMethods":21,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":143,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":73,"org.easymock.tests2.MockBuilderTest.testCreateMockString":262,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":209,"org.easymock.tests.UsageExpectAndThrowTest.floatType":175,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":287,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":248,"org.easymock.tests.UsageVerifyTest.twoThrows":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":255,"org.easymock.samples.PartialClassMockTest.testGetArea":82,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":142,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":154,"org.easymock.samples.ExampleTest.voteAgainstRemoval":87,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":300,"org.easymock.tests2.UsageTest.niceToStrict":235,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":174,"org.easymock.tests2.UsageConstraintsTest.testNotNull":290,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":204,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":58,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":258,"org.easymock.tests2.UsageTest.defaultResetToNice":239,"org.easymock.samples.ExampleTest.voteAgainstRemovals":84,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":72,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":126,"org.easymock.tests2.CallbackTest.callback":232,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":36,"org.easymock.tests.UsageTest.openCallCountByLastCall":105,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":182,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":222,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":274,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":163,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":50,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":147,"org.easymock.tests.UsageCallCountTest.tooFewCalls":166,"org.easymock.tests.UsageOverloadedMethodTest.overloading":171,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":45,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":266,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":122,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":285,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":2,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":309,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":150,"org.easymock.tests.UsageThrowableTest.throwCheckedException":201,"org.easymock.tests2.EasyMockSupportClassTest.testAll":253,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":170,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":190,"org.easymock.tests2.CaptureTest.testCaptureAll":302,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":251,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":160,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":268,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":49,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":265,"org.easymock.tests2.UsageConstraintsTest.testMatches":286,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":145,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":267,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":5,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":208,"org.easymock.samples.ExampleTest.voteForRemovals":89,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":273,"org.easymock.tests2.NameTest.nameForNiceMock":31,"org.easymock.tests.UsageVarargTest.allKinds":102,"org.easymock.tests2.DependencyTest.testInterfaceMocking":230,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":11,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":323,"org.easymock.samples.BasicClassMockTest.testPrintContent":92,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":161,"org.easymock.samples.ExampleTest.addDocument":88,"org.easymock.tests2.DelegateToTest.testStubDelegate":315,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":203,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":242,"org.easymock.tests2.AnswerTest.stubAnswer":4,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":56,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":19,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":325,"org.easymock.tests2.UsageConstraintsTest.greaterThan":40,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":211,"org.easymock.tests.UsageVarargTest.varargLongAccepted":99,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":134,"org.easymock.samples.ExampleTest.voteForRemoval":86,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":271,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":74,"org.easymock.tests.UsageExpectAndReturnTest.floatType":113,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":129,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":246,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":34,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":288,"org.easymock.tests.UsageThrowableTest.noUpperLimit":198,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":275,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":233,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":152,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":305,"org.easymock.tests2.SerializationTest.test":77,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":320,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":3,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":219,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":65,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":199,"org.easymock.tests2.UsageConstraintsTest.testSame":279,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":112,"org.easymock.samples.SupportTest.addDocument":80,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":51,"org.easymock.tests2.CaptureTest.testCaptureFirst":312,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":220,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":241,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":118,"org.easymock.tests.GenericTest.testPackageScope":169,"org.easymock.tests2.CaptureTest.testCapture2_2446744":311,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":272,"org.easymock.tests2.UsageTest.moreThanOneArgument":22,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":69,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":101,"org.easymock.tests2.NameTest.nameForMock":29,"org.easymock.tests.UsageExpectAndReturnTest.longType":114,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":217,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":158,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":123,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":191,"org.easymock.tests2.UsageStrictMockTest.differentMethods":28,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":189,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":205,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":115,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":37,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":187,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":213,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":165,"org.easymock.tests2.MockedExceptionTest.testRealException":61,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":119,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":26,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":178,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":202,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":138,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":146,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":264,"org.easymock.tests2.UsageConstraintsTest.testContains":284,"org.easymock.tests2.NameTest.nameForStrictMock":30,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":164,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":60,"org.easymock.tests2.UsageConstraintsTest.testFind":277,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":172,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":214,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":296,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":215,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":131,"org.easymock.tests.UsageExpectAndReturnTest.object":121,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":63,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":298,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":68,"org.easymock.tests2.UsageStrictMockTest.range":27,"org.easymock.tests2.UsageConstraintsTest.lessThan":47,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":225,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":322,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":97,"org.easymock.tests.UsageTest.exactCallCountByLastCall":107,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":136,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":324,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":218,"org.easymock.tests2.CaptureTest.testCaptureRightOne":9,"org.easymock.tests2.UsageConstraintsTest.testOr":280,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":318,"org.easymock.tests.UsageRangeTest.combination":210,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":293,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":93,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":127,"org.easymock.tests.UsageTest.wrongArguments":15,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":196,"org.easymock.tests2.EasyMockSupportTest.testVerify":229,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":116,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":124,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":38,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":66,"org.easymock.tests.UsageVarargTest.varargShortAccepted":98,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":249,"org.easymock.tests2.UsageConstraintsTest.cmpTo":283,"org.easymock.tests.UsageVarargTest.varargCharAccepted":96,"org.easymock.tests2.CompareToTest.testLessThan":48,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":243,"org.easymock.tests2.UsageTest.openCallCountByLastCall":237,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":238,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":228,"org.easymock.tests.DefaultClassInstantiatorTest.object":43,"org.easymock.tests2.CaptureTest.testCaptureFromStub":310,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":141,"org.easymock.tests.UsageTest.unexpectedCallWithArray":104,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":44,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":180,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":200,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":18,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":167,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":35,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":125,"org.easymock.tests2.UsageConstraintsTest.constraints":276,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":70,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":133,"org.easymock.samples.ExampleTest.addAndChangeDocument":90,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":179,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":128,"org.easymock.tests.UsageStrictMockTest.testVerify":135,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":256,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":132,"org.easymock.tests2.CompareToTest.testGreateThan":41,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":159,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":306,"org.easymock.tests2.UsageTest.resumeIfFailure":240,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":155,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":117,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":151,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":156,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":223,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":94}}]
