[{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:108","sourceCode":"try {\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[0,1,2],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:312","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[3,4],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[5,6,7,8,9,10],"status":-1,"binaryOperator":"int > 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1848","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.EqualsWithDelta:40","failures":[11],"status":-1,"binaryOperator":"(((java.lang.Number.doubleValue()) - (java.lang.Number.doubleValue())) <= (java.lang.Number.doubleValue())) && ((java.lang.Number.doubleValue()) <= ((java.lang.Number.doubleValue()) + (java.lang.Number.doubleValue())))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[5,6,7,8,9,10],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","shouldBeUsedInOneThread":"shouldBeUsedInOneThread"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1039","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[43,44],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[43,44],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1939","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Integer>(org.easymock.Capture<java.lang.Integer>))","type":"CtInvocationImpl"},"failures":[18,45,19,20,46,21],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:159","sourceCode":"final java.lang.ClassCastException java.lang.ClassCastException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[47,48,49,50,51],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[52,53,25,27],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[54],"status":-1,"binaryOperator":"((((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number)) + \")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:612","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"failures":[55],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:235","failures":[56,57,0,58,59,60,61,62,63,64,65,66,67,68,69],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:933","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[70,71,72,23,73,74],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1373","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:113","sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.reflect.Method>.size()) ; int++) {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(int);\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod","typeParameterMap":"typeParameterMap","candidateMethod":"bridgeMethod","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[75],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:205","sourceCode":"java.lang.reflect.Constructor<?>.setAccessible(true)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:74","sourceCode":"java.util.Set<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[0,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:40","failures":[95,96,97,98,99,100,101,102,103,3,104,105,106,107,108,109,110,111,47,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,12,13,14,139,140,56,57,141,15,16,142,17,0,1,2,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,18,162,45,163,164,165,19,20,46,166,167,168,21,169,170,22,171,172,173,174,175,176,177,178,179,180,181,70,182,71,72,23,183,24,184,185,186,187,188,189,190,191,192,53,193,194,195,196,197,25,55,198,26,11,199,200,201,202,203,204,205,27,206,207,208,209,210,211,212,213,214,215,216,76,217,218,58,219,220,77,78,221,222,79,80,59,81,82,60,223,83,224,84,61,85,225,62,226,86,64,87,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,88,249,250,251,252,253,254,255,256,257,89,258,259,260,261,262,90,263,264,265,266,267,268,73,269,270,271,272,273,28,68,69,274,275,276,91,277,278,279,280,281,282,283,284,43,285,286,287,44,288,289,29,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,92,316,317,318,319,320,321,322,323,324,325,326,7,327,328,48,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,4,350,351,352,353,354,355,356,357,358,30,359,360,361,362,363,75,364,365,366,367,368,369,370,371,372,373,374,31,375,376,377,378,379,32,380,381,382,383,384,33,385,386,387,34,388,35,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,36,414,415,416,417,418,37,419,420,421,422,423,38,424,425,426,39,427,40,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,50,51,461,462,463,41,464,42,10,465,466,467,468,469,470,471,472,473,474,475,476,477,93,478,479,480,481,94,482,483,484,485,486,487,74,488,489,490,491,492,493,494,495,496,497,498],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:268","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[313],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:249","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"cls"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[313,316],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"type":"type"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":186,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":464,"org.easymock.tests2.UsageTest.argumentsOrdered":178,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":136,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":233,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":353,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":173,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":276,"org.easymock.tests2.DelegateToTest.testReturnException":70,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":494,"org.easymock.tests.MockingTest.testPartialClassMocking":399,"org.easymock.tests.MockClassControlTest.testToString":319,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":206,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":432,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":79,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":252,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":31,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":88,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":102,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":53,"org.easymock.tests2.UsageTest.wrongArguments":171,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":365,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":125,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":473,"org.easymock.samples.ExampleTest.answerVsDelegate":73,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":94,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":404,"org.easymock.tests2.UsageConstraintsTest.testNull":189,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":214,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":135,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":324,"org.easymock.tests2.CaptureTest.testPrimitive":45,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":369,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":389,"org.easymock.tests.UsageTest.moreThanOneArgument":42,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":213,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":307,"org.easymock.tests.UsageTest.argumentsOrdered":469,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":370,"org.easymock.tests.UsageVarargTest.varargIntAccepted":446,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":358,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":439,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":80,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":156,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":237,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":346,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":443,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":119,"org.easymock.tests.ReplayStateInvalidUsageTest.times":298,"org.easymock.tests2.DependencyTest.testClassMocking":99,"org.easymock.tests2.AnswerTest.answer":103,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":193,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":359,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":98,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":479,"org.easymock.tests2.CaptureTest.testAnd":161,"org.easymock.tests2.UsageTest.strictResetToDefault":170,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":60,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":220,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":306,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":458,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":130,"org.easymock.tests2.DelegateToTest.testDelegate":23,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":374,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":387,"org.easymock.tests.LimitationsTest.mockFinalMethod":393,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":497,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":438,"org.easymock.tests2.DependencyTest.testClassMockingSupport":100,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":475,"org.easymock.tests2.CaptureTest.testCapture1_2446744":163,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":217,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":385,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":96,"org.easymock.tests.UsageThrowableTest.throwError":406,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":292,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":481,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":394,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":238,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":309,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":264,"org.easymock.samples.PartialClassMockTest.testGetArea":91,"org.easymock.tests.MockingTest.testInterfaceMocking":401,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":293,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":440,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":333,"org.easymock.tests2.UsageTest.niceToStrict":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":253,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":282,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":375,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":344,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":83,"org.easymock.tests2.MockBuilderTest.testCreateMock":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":260,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":122,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":5,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":382,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":131,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":478,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":304,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":335,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":471,"org.easymock.tests.UsageOverloadedMethodTest.overloading":463,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":262,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":488,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":25,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":462,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":423,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":197,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":46,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":447,"org.easymock.tests2.EasyMockSupportClassTest.testAll":246,"org.easymock.tests.MockClassControlTest.testEquals":323,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":315,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":388,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":436,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":97,"org.easymock.tests2.CaptureTest.testCaptureAll":18,"org.easymock.tests.MockNameTest.defaultName":395,"org.easymock.tests2.UsageConstraintsTest.testMatches":55,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":290,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":308,"org.easymock.samples.ExampleTest.voteForRemovals":272,"org.easymock.tests.UsageVarargTest.allKinds":455,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":460,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":437,"org.easymock.samples.BasicClassMockTest.testPrintContent":267,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":412,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":108,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":498,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":72,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":234,"org.easymock.tests2.UsageConstraintsTest.greaterThan":26,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":288,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":247,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":457,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":221,"org.easymock.samples.ExampleTest.voteForRemoval":269,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":289,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":13,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":222,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":482,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":157,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":76,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":492,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":169,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":62,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":350,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":128,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":408,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":244,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":493,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":181,"org.easymock.tests2.CaptureTest.testCaptureFirst":21,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":4,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":129,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":180,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":491,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":419,"org.easymock.tests2.CaptureTest.testCapture2_2446744":168,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":139,"org.easymock.tests2.UsageTest.moreThanOneArgument":22,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":360,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":454,"org.easymock.tests.GenericTest.testBridgedEquals":316,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":342,"org.easymock.tests.UsageExpectAndReturnTest.longType":416,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":434,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":126,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":35,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":461,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":202,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":34,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":305,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":311,"org.easymock.tests.UsageCallCountTest.tooManyCalls":343,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":261,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":420,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":124,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":379,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":411,"org.easymock.tests.MockingTest.testNiceClassMocking":405,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":146,"org.easymock.tests.MockingTest.testClassMocking":397,"org.easymock.tests2.UsageConstraintsTest.testContains":196,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":336,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":241,"org.easymock.tests2.UsageConstraintsTest.testFind":188,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":41,"org.easymock.tests.MockTypeTest.fromEasyMockClass":480,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":17,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":325,"org.easymock.tests.UsageExpectAndReturnTest.object":422,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":218,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":123,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":54,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":134,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":449,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":280,"org.easymock.tests.UsageTest.exactCallCountByLastCall":470,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":429,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":349,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":431,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":371,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":57,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":444,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":39,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":74,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":228,"org.easymock.tests.MockClassControlTest.testHashCode":322,"org.easymock.tests2.EasyMockSupportTest.testVerify":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":255,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":372,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":486,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":303,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":95,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":183,"org.easymock.tests.UsageVarargTest.varargCharAccepted":448,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":283,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":109,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":364,"org.easymock.tests2.UsageTest.openCallCountByLastCall":174,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":137,"org.easymock.tests.DefaultClassInstantiatorTest.object":284,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":302,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":278,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":256,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":380,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":409,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":117,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":227,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":77,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":321,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":32,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":427,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":90,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":320,"org.easymock.tests2.UsageTest.resumeIfFailure":179,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":93,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":155,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":496,"org.easymock.tests2.StubTest.stubWithReturnValue":144,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":61,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":421,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":203,"org.easymock.tests2.SerializationTest.testAllMockedMethod":2,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":30,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":67,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":6,"org.easymock.samples.SupportTest.voteForRemovals":275,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":313,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":230,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":33,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":75,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":3,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":433,"org.easymock.tests.UsageExpectAndThrowTest.object":383,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":200,"org.easymock.tests2.DelegateToTest.testWrongClass":71,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":484,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":485,"org.easymock.tests.UsageStrictMockTest.range":48,"org.easymock.samples.ConstructorCalledMockTest.testTax":68,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":159,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":133,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":145,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":384,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":84,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":468,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":243,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":300,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":472,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":8,"org.easymock.tests2.CaptureTest.testCaptureNone":20,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":334,"org.easymock.tests.UsageUnorderedTest.message":29,"org.easymock.tests.UsageVerifyTest.twoReturns":51,"org.easymock.tests.UsageVarargTest.varargByteAccepted":453,"org.easymock.tests2.ThreadingTest.testThreadSafe":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":258,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":340,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":266,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":281,"org.easymock.tests2.CaptureTest.testCapture_2617107":162,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":477,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":362,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":368,"org.easymock.tests2.UsageConstraintsTest.any":194,"org.easymock.tests2.StubTest.stub":143,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":297,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":312,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":495,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":363,"org.easymock.tests.UsageExpectAndThrowTest.longType":377,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":287,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":296,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":111,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":232,"org.easymock.tests.LimitationsTest.mockNativeMethod":392,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":428,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":92,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":116,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":113,"org.easymock.tests2.NameTest.nameForMocksControl":210,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":118,"org.easymock.tests2.MockedExceptionTest.testMockedException":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":248,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":467,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":402,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":142,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":378,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":211,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":85,"org.easymock.tests.MockingTest.testNicePartialClassMocking":400,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":216,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":114,"org.easymock.tests2.CaptureTest.testCaptureLast":19,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":476,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":152,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":192,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":201,"org.easymock.tests.MockingTest.testTwoMocks":398,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":153,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":36,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":381,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":177,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":205,"org.easymock.samples.ExampleTest.removeNonExistingDocument":273,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":121,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":294,"org.easymock.tests.UsageStrictMockTest.differentMethods":329,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":229,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":285,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":14,"org.easymock.tests2.MockBuilderTest.testCreateMockString":87,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":249,"org.easymock.tests.UsageExpectAndThrowTest.floatType":376,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":245,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":105,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":141,"org.easymock.tests.UsageVerifyTest.twoThrows":50,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":487,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":89,"org.easymock.samples.ExampleTest.voteAgainstRemoval":270,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":332,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":354,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":78,"org.easymock.tests.LimitationsTest.privateConstructor":391,"org.easymock.tests2.UsageConstraintsTest.testNotNull":204,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":413,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":239,"org.easymock.tests2.UsageTest.defaultResetToNice":176,"org.easymock.samples.ExampleTest.voteAgainstRemovals":268,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":426,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":355,"org.easymock.tests.UsageVarargTest.differentLength":450,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":115,"org.easymock.tests2.CallbackTest.callback":15,"org.easymock.tests2.UsageConstraintsTest.equals":187,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":58,"org.easymock.tests.UsageTest.openCallCountByLastCall":466,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":24,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":367,"org.easymock.tests.UsageCallCountTest.tooFewCalls":338,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":148,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":474,"org.easymock.tests.UsageThrowableTest.throwCheckedException":410,"org.easymock.tests.MockingTest.testStrictClassMocking":396,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":9,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":430,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":151,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":147,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":120,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":299,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":150,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":107,"org.easymock.tests2.CompareToTest.testGreateOrEqual":52,"org.easymock.tests.ObjectMethodsTest.testHashCode":279,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":140,"org.easymock.tests2.NameTest.nameForNiceMock":209,"org.easymock.tests2.DependencyTest.testInterfaceMocking":101,"org.easymock.samples.ExampleTest.addDocument":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":259,"org.easymock.tests2.DelegateToTest.testStubDelegate":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":263,"org.easymock.tests2.AnswerTest.stubAnswer":106,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":327,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":225,"org.easymock.tests.UsageVarargTest.varargLongAccepted":452,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":330,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":352,"org.easymock.tests.UsageExpectAndReturnTest.floatType":415,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":40,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":56,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":69,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":489,"org.easymock.tests.UsageThrowableTest.noUpperLimit":407,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":11,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":236,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":184,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":154,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":164,"org.easymock.tests2.SerializationTest.test":1,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":43,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":414,"org.easymock.tests2.UsageConstraintsTest.testSame":190,"org.easymock.samples.SupportTest.addDocument":274,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":149,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":250,"org.easymock.tests.GenericTest.testPackageScope":314,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":373,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":348,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":235,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":403,"org.easymock.tests2.NameTest.nameForMock":207,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":38,"org.easymock.tests2.UsageStrictMockTest.differentMethods":112,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":64,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":219,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":417,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":386,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":277,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":459,"org.easymock.tests2.MockedExceptionTest.testRealException":242,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":483,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":160,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":357,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":66,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":110,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":356,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":301,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":366,"org.easymock.tests2.NameTest.nameForStrictMock":208,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":223,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":16,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":215,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":158,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":199,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":286,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":81,"org.easymock.tests2.UsageStrictMockTest.range":47,"org.easymock.tests2.UsageConstraintsTest.lessThan":27,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":231,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":127,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":351,"org.easymock.tests2.CaptureTest.testCaptureRightOne":166,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":254,"org.easymock.tests2.UsageConstraintsTest.testOr":191,"org.easymock.tests.UsageRangeTest.combination":456,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":212,"org.easymock.tests.UsageTest.wrongArguments":465,"org.easymock.tests2.MockBuilderTest.testWithConstructor":59,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":251,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":318,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":418,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":424,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":345,"org.easymock.tests.UsageVarargTest.varargShortAccepted":451,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":44,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":341,"org.easymock.tests2.UsageConstraintsTest.cmpTo":195,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":104,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":347,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":175,"org.easymock.tests2.CaptureTest.testCaptureFromStub":167,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":291,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":82,"org.easymock.tests.UsageTest.unexpectedCallWithArray":10,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":7,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":339,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":63,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":425,"org.easymock.tests2.UsageConstraintsTest.constraints":185,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":328,"org.easymock.samples.ExampleTest.addAndChangeDocument":28,"org.easymock.tests.UsageStrictMockTest.testVerify":331,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":265,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":326,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":435,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":165,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":441,"org.easymock.tests.LimitationsTest.abstractClass":390,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":37,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":490,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":442,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":445,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":132,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":49}}]
