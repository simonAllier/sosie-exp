[{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[0],"status":-1,"binaryOperator":"(((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[1],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:270","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[2,3,4,5],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:52","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:57","sourceCode":"try {\n    final org.easymock.internal.Result org.easymock.internal.Result = org.easymock.internal.IMocksBehavior.addActual(org.easymock.internal.Invocation);\n    try {\n        return org.easymock.internal.Result.answer();\n    } catch (final java.lang.Throwable java.lang.Throwable) {\n        if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n            throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n        } \n        throw java.lang.Throwable;\n    }\n} finally {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation();\n}","type":"CtTryImpl"},"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,1,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:682","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:72","sourceCode":"java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>()","type":"CtAssignmentImpl"},"failures":[15,26,103,104,105,106,107,300,108,110,111,113,114,157,159,160,301,302,303,304],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[305,1,301],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"failures":[306,252],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[307,61,63,64,65,66,67,68,70,308,71,72,74],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[26,27,28,309],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[26,27,28,309],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"failures":[6,7,8,9,10,11,310,12,22,23,24,25,26,27,28,29,311,312,313,314,315,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,316,106,107,300,317,108,109,112,113,114,116,117,118,119,318,319,305,320,121,122,125,126,127,128,129,130,131,132,133,134,135,136,137,151,152,153,154,155,156,157,158,321,1,159,160,161,322,162,323,163,164,324,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,325,326,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,327,328,329,330,331,332,333,334,335,226,227,228,229,230,231,232,233,234,235,336,337,338,339,340,341,342,343,344,345,346,347,348,303,349,350,304,351,352,236,237,238,239,240,241,242,243,244,353,354,245,246,247,248,249,250,251,252,355,356,357,253,254,255,256,358,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,359,360,295,296,361,297,362,363,364,298,299],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"failures":[365,366],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,19,20,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,101,102,103,104,105,316,106,108,109,110,111,113,114,115,116,117,118,119,318,319,305,320,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,1,160,324,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,325,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,221,222,223,224,225,328,226,227,228,229,230,231,232,233,234,235,336,338,340,341,343,346,348,236,237,238,239,240,241,242,243,244,353,354,245,246,247,248,252,254,255,256,358,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:128","sourceCode":"final java.lang.String java.lang.String = org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(org.easymock.EasyMock.java.lang.String)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[307],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:814","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[45,51,57,58,165,367,230,233,238,239,242,243,252,286,287],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"failures":[368,2],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1646","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(int[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[369,370,61,371,372,189,230,231,238,239,240,241,242,243,244,353],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[325],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:45","sourceCode":"java.lang.StringBuffer.append(\"[\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[369,230],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:55","sourceCode":"try {\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object);\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)));\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[13,14,15,19,19,20,20,26,28,102,103,104,105,106,107,300,108,109,110,111,112,113,114,118,120,121,122,123,125,126,131,151,152,154,155,156,157,158,1,159,160,161,301,188,327,328,329,330,331,332,333,334,226,227,302,373,303,304,374,284,375,295,296,297],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[376,84,89,101],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1568","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(T))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[369,370,61,371,372,189,230,231,238,239,240,241,242,243,244,353],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[179,180,286],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1964","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:161","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    return java.lang.reflect.Constructor<T>;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:162","sourceCode":"return java.lang.reflect.Constructor<T>","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"ret":"ret"}},{"position":"org.easymock.internal.RecordState:126","failures":[7,22,24,25,163],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[377,378,379,380,381,382,383,384,385,386],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"parameterType"}},{"position":"org.easymock.EasyMock:959","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[377,378,379,381,382,384,386],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:583","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1065","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[387,23],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[45,51,57,58,165,367,230,233,238,239,242,243,252,286,287],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[388],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:56","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[78],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:89","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object)","type":"CtReturnImpl"},"failures":[31,389,41,43,44,45,46,47,48,50,51,52,53,57,58,59,60,77,91,106,107,300,110,111,112,113,114,115,390,318,319,305,320,121,122,125,126,132,139,141,143,144,146,147,152,1,161,301,323,391,324,165,392,325,393,220,329,330,331,228,230,231,232,233,234,235,303,349,350,304,351,352,236,237,238,239,242,243,244,353,245,246,249,250,251,252,355,394,374,256,285,286,287],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[395],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":78,"org.easymock.tests2.UsageTest.argumentsOrdered":58,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":236,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":148,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":390,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":53,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":21,"org.easymock.tests2.DelegateToTest.testReturnException":22,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":190,"org.easymock.tests.MockingTest.testPartialClassMocking":295,"org.easymock.tests.MockClassControlTest.testToString":329,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":301,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":103,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":195,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":30,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":377,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":84,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":166,"org.easymock.tests2.UsageTest.wrongArguments":51,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":173,"org.easymock.samples.ExampleTest.answerVsDelegate":7,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":304,"org.easymock.tests2.UsageConstraintsTest.testNull":80,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":363,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":154,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":147,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":334,"org.easymock.tests2.CaptureTest.testPrimitive":64,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":170,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":214,"org.easymock.tests.UsageTest.moreThanOneArgument":237,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":153,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":185,"org.easymock.tests.UsageTest.argumentsOrdered":243,"org.easymock.tests.UsageVarargTest.varargIntAccepted":217,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":279,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":106,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":382,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":312,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":109,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":283,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":31,"org.easymock.tests.ReplayStateInvalidUsageTest.times":345,"org.easymock.tests2.AnswerTest.answer":127,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":40,"org.easymock.tests2.CaptureTest.testAnd":61,"org.easymock.tests2.UsageTest.strictResetToDefault":49,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":1,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":184,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":142,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":257,"org.easymock.tests2.DelegateToTest.testDelegate":25,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":210,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":193,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":292,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":392,"org.easymock.tests2.CaptureTest.testCapture1_2446744":65,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":208,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":38,"org.easymock.tests.UsageThrowableTest.throwError":175,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":339,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":350,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":187,"org.easymock.samples.PartialClassMockTest.testGetArea":15,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":340,"org.easymock.tests.MockingTest.testInterfaceMocking":361,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":280,"org.easymock.tests2.UsageTest.niceToStrict":52,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":196,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":374,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":108,"org.easymock.tests2.MockBuilderTest.testCreateMock":112,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":204,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":369,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":143,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":4,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":353,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":171,"org.easymock.tests.UsageOverloadedMethodTest.overloading":254,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":164,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":89,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":253,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":270,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":88,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":70,"org.easymock.tests2.EasyMockSupportClassTest.testAll":102,"org.easymock.tests.MockClassControlTest.testEquals":333,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":227,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":212,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":39,"org.easymock.tests2.CaptureTest.testCaptureAll":62,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":290,"org.easymock.tests.MockNameTest.defaultName":393,"org.easymock.tests2.UsageConstraintsTest.testMatches":90,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":186,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":337,"org.easymock.samples.ExampleTest.voteForRemovals":11,"org.easymock.tests.UsageVarargTest.allKinds":225,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":285,"org.easymock.samples.BasicClassMockTest.testPrintContent":14,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":291,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":181,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":41,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":194,"org.easymock.tests2.UsageConstraintsTest.greaterThan":92,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":383,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":358,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":161,"org.easymock.samples.ExampleTest.voteForRemoval":8,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":134,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":322,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":351,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":313,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":157,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":188,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":48,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":140,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":177,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":189,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":387,"org.easymock.tests2.CaptureTest.testCaptureFirst":74,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":388,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":141,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":60,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":165,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":266,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":136,"org.easymock.tests2.UsageTest.moreThanOneArgument":50,"org.easymock.tests2.CaptureTest.testCapture2_2446744":73,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":113,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":224,"org.easymock.tests.GenericTest.testBridgedEquals":373,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":250,"org.easymock.tests.UsageExpectAndReturnTest.longType":262,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":138,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":288,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":213,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":97,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":211,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":183,"org.easymock.tests.UsageCallCountTest.tooManyCalls":251,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":245,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":267,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":200,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":180,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":121,"org.easymock.tests.MockingTest.testNiceClassMocking":364,"org.easymock.tests.MockingTest.testClassMocking":360,"org.easymock.tests2.UsageConstraintsTest.testContains":87,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":354,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":118,"org.easymock.tests2.UsageConstraintsTest.testFind":79,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":255,"org.easymock.tests.MockTypeTest.fromEasyMockClass":349,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":36,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":228,"org.easymock.tests.UsageExpectAndReturnTest.object":269,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":158,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":0,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":146,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":219,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":378,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":357,"org.easymock.tests.UsageTest.exactCallCountByLastCall":244,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":293,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":386,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":215,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":275,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":163,"org.easymock.tests.MockClassControlTest.testHashCode":332,"org.easymock.tests2.EasyMockSupportTest.testVerify":150,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":162,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":3,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":37,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":316,"org.easymock.tests.UsageVarargTest.varargCharAccepted":218,"org.easymock.tests2.CaptureTest.testCaptureMultiple":307,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":42,"org.easymock.tests2.UsageTest.openCallCountByLastCall":54,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":149,"org.easymock.tests.DefaultClassInstantiatorTest.object":335,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":2,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":355,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":367,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":202,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":178,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":159,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":331,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":201,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":276,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":105,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":330,"org.easymock.tests2.UsageTest.resumeIfFailure":59,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":303,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":311,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":192,"org.easymock.tests2.StubTest.stubWithReturnValue":33,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":384,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":98,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":268,"org.easymock.tests2.SerializationTest.testAllMockedMethod":28,"org.easymock.samples.SupportTest.voteForRemovals":17,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":370,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":207,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":309,"org.easymock.tests.UsageExpectAndThrowTest.object":205,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":95,"org.easymock.tests2.DelegateToTest.testWrongClass":24,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":298,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":299,"org.easymock.samples.ConstructorCalledMockTest.testTax":19,"org.easymock.tests.UsageStrictMockTest.range":233,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":145,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":120,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":206,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":110,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":242,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":347,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":172,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":371,"org.easymock.tests2.CaptureTest.testCaptureNone":69,"org.easymock.tests.UsageUnorderedTest.message":252,"org.easymock.tests.UsageVerifyTest.twoReturns":287,"org.easymock.tests.UsageVarargTest.varargByteAccepted":223,"org.easymock.tests2.ThreadingTest.testThreadSafe":133,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":248,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":394,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":13,"org.easymock.tests2.CaptureTest.testCapture_2617107":63,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":326,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":169,"org.easymock.tests2.UsageConstraintsTest.any":85,"org.easymock.tests2.StubTest.stub":32,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":344,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":191,"org.easymock.tests.UsageExpectAndThrowTest.longType":198,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":365,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":343,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":44,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":115,"org.easymock.tests2.SerializationTest.testClass":26,"org.easymock.tests.LimitationsTest.mockNativeMethod":284,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":278,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":302,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":47,"org.easymock.tests2.NameTest.nameForMocksControl":320,"org.easymock.tests2.MockedExceptionTest.testMockedException":117,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":241,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":35,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":199,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":297,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":151,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":111,"org.easymock.tests.MockingTest.testNicePartialClassMocking":296,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":156,"org.easymock.tests2.CaptureTest.testCaptureLast":68,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":325,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":126,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":83,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":96,"org.easymock.tests.MockingTest.testTwoMocks":375,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":259,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":203,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":57,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":100,"org.easymock.samples.ExampleTest.removeNonExistingDocument":310,"org.easymock.tests.UsageStrictMockTest.differentMethods":234,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":341,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":135,"org.easymock.tests2.MockBuilderTest.testCreateMockString":114,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":327,"org.easymock.tests.UsageExpectAndThrowTest.floatType":197,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":91,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":128,"org.easymock.tests.UsageVerifyTest.twoThrows":286,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":104,"org.easymock.samples.ExampleTest.voteAgainstRemoval":9,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":395,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":160,"org.easymock.tests2.UsageConstraintsTest.testNotNull":99,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":182,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":116,"org.easymock.tests2.UsageTest.defaultResetToNice":56,"org.easymock.samples.ExampleTest.voteAgainstRemovals":6,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":274,"org.easymock.tests.UsageVarargTest.differentLength":220,"org.easymock.tests2.CallbackTest.callback":132,"org.easymock.tests.UsageTest.openCallCountByLastCall":240,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":75,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":168,"org.easymock.tests.UsageCallCountTest.tooFewCalls":246,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":123,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":174,"org.easymock.tests.UsageThrowableTest.throwCheckedException":179,"org.easymock.tests.MockingTest.testStrictClassMocking":359,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":372,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":125,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":294,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":389,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":122,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":346,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":124,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":130,"org.easymock.tests.ObjectMethodsTest.testHashCode":356,"org.easymock.tests2.CompareToTest.testGreateOrEqual":376,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":381,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":137,"org.easymock.tests2.NameTest.nameForNiceMock":305,"org.easymock.tests2.DependencyTest.testInterfaceMocking":29,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":379,"org.easymock.samples.ExampleTest.addDocument":10,"org.easymock.tests2.DelegateToTest.testStubDelegate":23,"org.easymock.tests2.AnswerTest.stubAnswer":129,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":231,"org.easymock.tests.UsageVarargTest.varargLongAccepted":222,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":235,"org.easymock.tests.UsageExpectAndReturnTest.floatType":261,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":277,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":131,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":20,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":391,"org.easymock.tests.UsageThrowableTest.noUpperLimit":176,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":93,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":76,"org.easymock.tests2.SerializationTest.test":27,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":66,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":366,"org.easymock.tests2.UsageConstraintsTest.testSame":81,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":260,"org.easymock.samples.SupportTest.addDocument":16,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":342,"org.easymock.tests.GenericTest.testPackageScope":226,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":362,"org.easymock.tests2.NameTest.nameForMock":318,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":271,"org.easymock.tests2.UsageStrictMockTest.differentMethods":46,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":321,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":263,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":209,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":258,"org.easymock.tests2.MockedExceptionTest.testRealException":119,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":352,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":315,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":385,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":43,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":167,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":348,"org.easymock.tests2.NameTest.nameForStrictMock":319,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":317,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":34,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":155,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":314,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":94,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":306,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":107,"org.easymock.tests2.UsageStrictMockTest.range":45,"org.easymock.tests2.UsageConstraintsTest.lessThan":101,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":139,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":380,"org.easymock.tests2.CaptureTest.testCaptureRightOne":71,"org.easymock.tests2.UsageConstraintsTest.testOr":82,"org.easymock.tests.UsageRangeTest.combination":256,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":152,"org.easymock.tests.UsageTest.wrongArguments":239,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":328,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":264,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":272,"org.easymock.tests.UsageVarargTest.varargShortAccepted":221,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":249,"org.easymock.tests2.UsageConstraintsTest.cmpTo":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":5,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":55,"org.easymock.tests2.CaptureTest.testCaptureFromStub":72,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":338,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":300,"org.easymock.tests.UsageTest.unexpectedCallWithArray":238,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":230,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":247,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":273,"org.easymock.tests2.CaptureTest.testCapture":308,"org.easymock.tests2.UsageConstraintsTest.constraints":77,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":232,"org.easymock.samples.ExampleTest.addAndChangeDocument":12,"org.easymock.tests.UsageStrictMockTest.testVerify":336,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":18,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":229,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":289,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":67,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":281,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":265,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":282,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":324,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":144,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":216}}]
