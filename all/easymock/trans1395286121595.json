[{"transplant":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"failures":[25,26,27,28],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:52","failures":[29],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:353","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][0]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:322","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bounds":"actualTypeArguments"}},{"transplant":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:153","sourceCode":"org.easymock.internal.Injector.org.easymock.internal.Injector.injectByType(java.lang.Object, java.util.List<java.lang.reflect.Field>, org.easymock.internal.InjectionPlan.getUnqualifiedInjections())","type":"CtInvocationImpl"},"failures":[30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1107","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.StartsWith:40","failures":[52],"status":-1,"binaryOperator":"(\"startsWith(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:42","sourceCode":"if (org.easymock.internal.IMocksBehavior.isThreadSafe()) {\n    java.util.concurrent.locks.ReentrantLock.lock();\n    try {\n        return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n    } finally {\n        java.util.concurrent.locks.ReentrantLock.unlock();\n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[53,53,54,54,2,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[96,97],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[98,6,99,100],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.ConstructorArgs:54","failures":[53,54,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:152","sourceCode":"boolean boolean = true","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[66],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:174","sourceCode":"try {\n    java.lang.Class<?> = net.sf.cglib.proxy.Enhancer.createClass();\n} catch (final net.sf.cglib.core.CodeGenerationException net.sf.cglib.core.CodeGenerationException) {\n    net.sf.cglib.proxy.Enhancer.setClassLoader(java.lang.Object.getClass().getClassLoader());\n    java.lang.Class<?> = net.sf.cglib.proxy.Enhancer.createClass();\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1470","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(boolean))","type":"CtInvocationImpl"},"failures":[140,141,66],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:229","failures":[109,142,143,144,145],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[146],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[147],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"actual","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[148],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:210","failures":[53,53,54,54,101,102,130,137,149],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[150,151,152,153,154,155],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[2,156,157,158,159,160,24,161],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[102,162,163,164,165,166,136],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"argType":"parameterType","paramType":"parameterType"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[167],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[168,169,170,171,172,173,174,175,176,177,30,178,179,180,53,54,31,101,102,181,0,182,183,184,146,185,186,1,187,188,189,190,191,192,98,2,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,193,194,195,196,197,198,199,130,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,55,56,221,140,222,57,58,59,60,141,223,224,225,226,61,147,62,63,29,64,65,66,227,228,229,230,67,68,69,231,232,70,233,234,235,236,237,238,239,240,241,242,243,148,244,245,246,247,248,249,250,251,252,253,254,255,256,257,71,258,259,260,261,262,263,264,32,33,34,265,35,266,36,37,38,39,40,41,267,268,131,269,270,271,272,132,133,273,134,142,274,135,275,276,277,278,136,279,280,137,281,143,139,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,149,303,304,144,305,306,307,145,42,43,44,308,45,309,46,47,48,49,50,51,310,311,312,25,313,314,315,316,317,318,319,320,321,322,26,323,27,324,325,326,327,328,329,330,3,4,331,152,332,333,5,334,335,336,72,73,337,6,74,338,339,340,341,342,343,344,345,346,347,348,75,76,167,349,350,351,352,353,354,355,77,356,357,7,78,79,358,156,359,360,361,362,363,364,80,99,365,366,367,81,368,369,100,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,82,391,392,393,394,28,395,396,397,398,399,400,401,402,403,404,405,406,407,408,83,84,85,86,87,88,409,410,8,9,411,412,10,413,11,12,13,14,414,15,16,17,18,415,19,20,21,22,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,155,89,438,439,440,441,442,443,444,445,446,447,448,449,450,23,451,452,453,96,454,455,456,97,457,458,157,158,159,160,24,161,90,91,92,93,94,459,460,461,462,463,464,465,466,467,468,95,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500],"status":-1,"binaryOperator":"(int >= 1)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:246","sourceCode":"final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"failures":[150,151,153,154,155],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[130,200,201,501],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:124","failures":[168,169,170,171,172,173,175,176,177,30,178,179,180,53,54,31,101,0,182,183,184,146,185,186,1,187,188,189,190,191,98,2,106,109,119,125,193,194,195,196,197,199,130,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,216,217,218,220,55,56,221,140,57,58,59,60,141,223,225,226,61,147,62,63,29,64,65,66,227,228,229,230,67,68,69,231,232,70,233,234,235,236,242,244,245,246,247,248,249,250,251,252,253,254,255,256,257,71,258,259,260,261,262,263,264,266,267,268,131,269,271,272,132,273,142,276,277,278,279,281,143,282,285,286,294,295,296,297,298,299,300,302,304,144,305,306,309,310,311,312,25,313,314,317,319,320,321,322,324,325,326,327,328,329,330,3,4,331,152,332,333,5,334,335,336,72,73,337,6,74,338,342,343,345,75,76,349,350,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,401,402,403,404,405,406,407,408,83,84,85,86,87,88,409,8,9,411,412,10,413,11,12,13,14,414,15,16,17,18,415,19,20,21,22,429,430,431,432,433,434,435,436,437,155,89,438,439,440,441,443,445,446,449,450,23,451,157,158,159,160,24,161,90,91,92,93,94,459,461,462,474,475,476,478,479,480,481,482,483,484,485,502,502],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:262","failures":[0,1,2,193,194,195,196,3,4,5,337,6,401,403,404,405,406,407,408,409,8,9,411,412,10,413,11,12,13,14,414,15,16,17,18,415,19,20,21,22,424,425,426,446,23,157,158,159,160,24,161,463,464,465],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:373","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[366,396],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[182,303],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[167],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[168,169,170,171,172,173,175,176,177,30,178,179,180,53,53,54,54,31,101,0,182,183,184,146,185,186,1,187,188,189,190,191,192,98,2,106,109,119,125,193,194,195,196,197,199,130,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,216,217,218,220,55,56,221,140,57,58,59,60,141,223,225,226,61,147,62,63,29,64,65,66,227,228,230,67,68,69,231,232,70,233,234,235,236,238,239,240,241,242,244,245,246,247,248,249,250,251,252,253,254,255,256,257,71,258,259,260,261,262,263,264,266,267,268,131,269,271,272,132,273,276,277,278,279,143,282,285,286,294,295,296,297,298,299,302,304,305,309,310,311,312,25,313,314,317,319,320,321,322,324,325,326,327,328,330,3,4,331,152,332,333,5,334,335,336,72,73,337,6,74,338,342,343,345,75,76,349,350,354,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,393,394,395,398,400,401,402,403,404,405,406,407,408,83,84,85,86,87,88,409,8,9,411,412,10,413,11,12,13,14,414,15,16,17,18,415,19,20,21,22,427,428,429,430,431,432,436,437,155,89,438,439,440,441,442,448,450,23,451,157,158,159,160,24,161,90,91,92,93,94,459,460,461,462,474,475,476,478,479,481,482,483,484,485,493],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[503,165,166,504,505],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[221,140,60,141,224,66,247,249,257],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:210","failures":[53,53,54,54,101,102,130,280,137,149],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[221,140,58,60,141,224,66,67,247,249,257],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[168,169,170,171,172,173,174,175,176,177,30,178,179,180,53,54,31,101,102,181,0,182,183,184,146,185,186,1,187,188,189,190,191,192,98,2,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,193,194,195,196,197,198,199,130,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,55,56,221,140,222,57,58,59,60,141,223,224,225,226,61,147,62,63,29,64,65,66,227,228,229,230,67,68,69,231,232,70,233,234,235,236,237,238,239,240,241,242,243,148,244,245,246,247,248,249,250,251,252,253,254,255,256,257,71,258,259,260,261,262,263,264,32,33,34,265,35,266,36,37,38,39,40,41,267,268,131,269,270,271,272,132,133,273,134,142,274,135,275,276,277,278,136,279,280,137,281,143,139,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,149,303,304,144,305,306,307,145,42,43,44,308,45,309,46,47,48,49,50,51,310,311,312,25,313,314,315,316,317,318,319,320,321,322,26,323,27,324,325,326,327,328,329,330,3,4,331,152,332,333,5,334,335,336,72,73,337,6,74,338,339,340,341,342,343,344,345,346,347,348,75,76,167,349,350,351,352,353,354,355,77,356,357,7,78,79,358,156,359,360,361,362,363,364,80,99,365,366,367,81,368,369,100,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,82,391,392,393,394,28,395,396,397,398,399,400,401,402,403,404,405,406,407,408,83,84,85,86,87,88,409,410,8,9,411,412,10,413,11,12,13,14,414,15,16,17,18,415,19,20,21,22,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,155,89,438,439,440,441,442,443,444,445,446,447,448,449,450,23,451,452,453,96,454,455,456,97,457,458,157,158,159,160,24,161,90,91,92,93,94,459,460,461,462,463,464,465,466,467,468,95,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"failures":[183,184,188,189,70,235,238,239,240,241,331,332,334,335,338,155,89,440,23,451],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":140,"org.easymock.tests2.UsageTest.argumentsOrdered":189,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":4,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":212,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":36,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":361,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":185,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":30,"org.easymock.tests2.DelegateToTest.testReturnException":216,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":158,"org.easymock.tests.MockingTest.testPartialClassMocking":342,"org.easymock.tests.MockClassControlTest.testToString":494,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":237,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":323,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":145,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":113,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":109,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":8,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":286,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":162,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":223,"org.easymock.tests2.UsageTest.wrongArguments":184,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":72,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":51,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":321,"org.easymock.samples.ExampleTest.answerVsDelegate":169,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":421,"org.easymock.tests2.UsageConstraintsTest.testNull":58,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":347,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":297,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":499,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":211,"org.easymock.tests2.CaptureTest.testPrimitive":250,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":74,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":22,"org.easymock.tests.UsageTest.moreThanOneArgument":331,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":296,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":85,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":469,"org.easymock.tests.UsageTest.argumentsOrdered":335,"org.easymock.tests.UsageVarargTest.varargIntAccepted":476,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":99,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":90,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":166,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":273,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":40,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":289,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":357,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":94,"org.easymock.tests.ReplayStateInvalidUsageTest.times":397,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":309,"org.easymock.tests2.DependencyTest.testClassMocking":283,"org.easymock.tests2.AnswerTest.answer":242,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":366,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":263,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":418,"org.easymock.tests2.CaptureTest.testAnd":247,"org.easymock.tests2.UsageTest.strictResetToDefault":182,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":135,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":304,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":84,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":461,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":206,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":473,"org.easymock.tests2.DelegateToTest.testDelegate":220,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":415,"org.easymock.tests.LimitationsTest.mockFinalMethod":318,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":24,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":328,"org.easymock.tests2.DependencyTest.testClassMockingSupport":284,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":353,"org.easymock.tests2.CaptureTest.testCapture1_2446744":251,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":301,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":17,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":261,"org.easymock.tests.UsageThrowableTest.throwError":401,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":392,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":420,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":500,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":41,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":87,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":127,"org.easymock.samples.PartialClassMockTest.testGetArea":180,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":393,"org.easymock.tests.MockingTest.testInterfaceMocking":344,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":91,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":467,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":491,"org.easymock.tests2.UsageTest.niceToStrict":146,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":114,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":9,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":77,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":276,"org.easymock.tests2.MockBuilderTest.testCreateMock":281,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":122,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":48,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":150,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":14,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":207,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":417,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":426,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":427,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":319,"org.easymock.tests.UsageOverloadedMethodTest.overloading":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":118,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":446,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":62,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":329,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":382,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":147,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":256,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":477,"org.easymock.tests.MockClassControlTest.testEquals":498,"org.easymock.tests2.EasyMockSupportClassTest.testAll":106,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":350,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":20,"org.easymock.tests2.CaptureTest.testCaptureAll":248,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":262,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":326,"org.easymock.tests.MockNameTest.defaultName":410,"org.easymock.tests2.UsageConstraintsTest.testMatches":63,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":82,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":86,"org.easymock.samples.ExampleTest.voteForRemovals":173,"org.easymock.tests.UsageVarargTest.allKinds":485,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":450,"org.easymock.samples.BasicClassMockTest.testPrintContent":179,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":327,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":407,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":231,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":161,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":37,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":219,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":457,"org.easymock.tests2.UsageConstraintsTest.greaterThan":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":107,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":460,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":306,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":458,"org.easymock.samples.ExampleTest.voteForRemoval":170,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":307,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":311,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":422,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":290,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":300,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":0,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":314,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":137,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":156,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":204,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":104,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":157,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":215,"org.easymock.tests2.CaptureTest.testCaptureFirst":259,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":358,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":205,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":191,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":449,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":378,"org.easymock.tests2.UsageTest.moreThanOneArgument":183,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":25,"org.easymock.tests2.CaptureTest.testCapture2_2446744":258,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":143,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":367,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":484,"org.easymock.tests.GenericTest.testBridgedEquals":352,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":434,"org.easymock.tests.UsageExpectAndReturnTest.longType":374,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":202,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":324,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":21,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":95,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":229,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":19,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":464,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":83,"org.easymock.tests.UsageCallCountTest.tooManyCalls":435,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":429,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":123,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":379,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":50,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":413,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":406,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":268,"org.easymock.tests.MockingTest.testNiceClassMocking":348,"org.easymock.tests.MockingTest.testClassMocking":340,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":428,"org.easymock.tests2.UsageConstraintsTest.testContains":61,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":195,"org.easymock.tests2.UsageConstraintsTest.testFind":57,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":3,"org.easymock.tests.MockTypeTest.fromEasyMockClass":419,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":436,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":199,"org.easymock.tests.UsageExpectAndReturnTest.object":381,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":302,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":49,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":210,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":479,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":163,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":489,"org.easymock.tests.UsageTest.exactCallCountByLastCall":336,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":88,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":79,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":470,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":26,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":102,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":474,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":387,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":445,"org.easymock.tests.MockClassControlTest.testHashCode":497,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":33,"org.easymock.tests2.EasyMockSupportTest.testVerify":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":116,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":471,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":443,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":425,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":260,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":192,"org.easymock.tests.UsageVarargTest.varargCharAccepted":478,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":452,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":232,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":370,"org.easymock.tests2.UsageTest.openCallCountByLastCall":186,"org.easymock.tests.DefaultClassInstantiatorTest.object":453,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":213,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":424,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":487,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":117,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":12,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":404,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":308,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":32,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":496,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":144,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":11,"org.easymock.tests.CapturesMatcherTest.test":502,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":388,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":463,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":495,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":125,"org.easymock.tests2.UsageTest.resumeIfFailure":190,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":416,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":288,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":160,"org.easymock.tests2.StubTest.stubWithReturnValue":2,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":136,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":230,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":380,"org.easymock.tests2.SerializationTest.testAllMockedMethod":201,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":365,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":505,"org.easymock.samples.SupportTest.voteForRemovals":177,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":151,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":167,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":265,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":16,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":501,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":100,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":243,"org.easymock.tests.UsageExpectAndThrowTest.object":414,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":27,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":227,"org.easymock.tests2.DelegateToTest.testWrongClass":218,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":75,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":76,"org.easymock.tests.UsageStrictMockTest.range":439,"org.easymock.samples.ConstructorCalledMockTest.testTax":53,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":292,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":209,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":267,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":15,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":278,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":103,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":334,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":320,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":153,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":468,"org.easymock.tests2.CaptureTest.testCaptureNone":255,"org.easymock.tests.UsageUnorderedTest.message":338,"org.easymock.tests.UsageVerifyTest.twoReturns":451,"org.easymock.tests.UsageVarargTest.varargByteAccepted":483,"org.easymock.tests2.ThreadingTest.testThreadSafe":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":120,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":432,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":490,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":178,"org.easymock.tests2.CaptureTest.testCapture_2617107":249,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":355,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":368,"org.easymock.tests2.UsageConstraintsTest.any":225,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":396,"org.easymock.tests2.StubTest.stub":98,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":465,"org.easymock.tests.UsageExpectAndThrowTest.longType":412,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":159,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":369,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":456,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":395,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":233,"org.easymock.tests2.SerializationTest.testClass":130,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":266,"org.easymock.tests.LimitationsTest.mockNativeMethod":317,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":390,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":351,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":44,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":236,"org.easymock.tests2.NameTest.nameForMocksControl":241,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":45,"org.easymock.tests2.MockedExceptionTest.testMockedException":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":108,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":5,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":10,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":198,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":345,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":294,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":279,"org.easymock.tests.MockingTest.testNicePartialClassMocking":343,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":299,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":503,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":42,"org.easymock.tests2.CaptureTest.testCaptureLast":254,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":354,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":141,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":132,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":228,"org.easymock.tests.MockingTest.testTwoMocks":341,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":133,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":371,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":13,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":188,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":68,"org.easymock.samples.ExampleTest.removeNonExistingDocument":174,"org.easymock.tests.UsageStrictMockTest.differentMethods":440,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":394,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":47,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":34,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":454,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":312,"org.easymock.tests2.MockBuilderTest.testCreateMockString":282,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":492,"org.easymock.tests.UsageExpectAndThrowTest.floatType":411,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":110,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":105,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":244,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":181,"org.easymock.tests.UsageVerifyTest.twoThrows":23,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":444,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":119,"org.easymock.samples.ExampleTest.voteAgainstRemoval":171,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":466,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":362,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":305,"org.easymock.tests.LimitationsTest.privateConstructor":316,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":129,"org.easymock.tests2.UsageConstraintsTest.testNotNull":67,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":408,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":193,"org.easymock.tests2.UsageTest.defaultResetToNice":187,"org.easymock.samples.ExampleTest.voteAgainstRemovals":168,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":386,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":363,"org.easymock.tests.UsageVarargTest.differentLength":480,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":43,"org.easymock.tests2.CallbackTest.callback":264,"org.easymock.tests2.UsageConstraintsTest.equals":222,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":149,"org.easymock.tests.UsageTest.openCallCountByLastCall":333,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":52,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":55,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":337,"org.easymock.tests.UsageCallCountTest.tooFewCalls":430,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":269,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":322,"org.easymock.tests.UsageThrowableTest.throwCheckedException":405,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":154,"org.easymock.tests.MockingTest.testStrictClassMocking":339,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":409,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":272,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":131,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":46,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":398,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":271,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":246,"org.easymock.tests.ObjectMethodsTest.testHashCode":488,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":165,"org.easymock.tests2.NameTest.nameForNiceMock":240,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":313,"org.easymock.tests2.DependencyTest.testInterfaceMocking":285,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":164,"org.easymock.samples.ExampleTest.addDocument":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":126,"org.easymock.tests2.DelegateToTest.testStubDelegate":217,"org.easymock.tests2.AnswerTest.stubAnswer":245,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":89,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":280,"org.easymock.tests.UsageVarargTest.varargLongAccepted":482,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":441,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":360,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":389,"org.easymock.tests.UsageExpectAndReturnTest.floatType":373,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":101,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":54,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":447,"org.easymock.tests.UsageThrowableTest.noUpperLimit":402,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":39,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":65,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":56,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":287,"org.easymock.tests2.SerializationTest.test":200,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":252,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":96,"org.easymock.tests2.UsageConstraintsTest.testSame":59,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":372,"org.easymock.samples.SupportTest.addDocument":176,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":270,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":111,"org.easymock.tests.GenericTest.testPackageScope":349,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":472,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":78,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":38,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":346,"org.easymock.tests2.NameTest.nameForMock":238,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":383,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":139,"org.easymock.tests2.UsageStrictMockTest.differentMethods":235,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":303,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":375,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":18,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":486,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":462,"org.easymock.tests2.MockedExceptionTest.testRealException":196,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":80,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":293,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":504,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":70,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":364,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":400,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":73,"org.easymock.tests2.NameTest.nameForStrictMock":239,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":275,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":197,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":298,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":291,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":455,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":66,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":142,"org.easymock.tests2.UsageStrictMockTest.range":234,"org.easymock.tests2.UsageConstraintsTest.lessThan":69,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":35,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":203,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":115,"org.easymock.tests2.CaptureTest.testCaptureRightOne":257,"org.easymock.tests2.UsageConstraintsTest.testOr":60,"org.easymock.tests.UsageRangeTest.combination":459,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":295,"org.easymock.tests.UsageTest.wrongArguments":332,"org.easymock.tests2.MockBuilderTest.testWithConstructor":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":112,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":493,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":376,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":384,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":356,"org.easymock.tests.UsageVarargTest.varargShortAccepted":481,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":97,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":433,"org.easymock.tests2.UsageConstraintsTest.cmpTo":226,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":148,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":7,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":1,"org.easymock.tests2.CaptureTest.testCaptureFromStub":71,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":391,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":274,"org.easymock.tests.UsageTest.unexpectedCallWithArray":152,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":155,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":431,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":138,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":385,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":438,"org.easymock.tests2.UsageConstraintsTest.constraints":221,"org.easymock.samples.ExampleTest.addAndChangeDocument":175,"org.easymock.tests.UsageStrictMockTest.testVerify":442,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":31,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":437,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":325,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":253,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":92,"org.easymock.tests.LimitationsTest.abstractClass":315,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":377,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":448,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":93,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":475,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":208}}]
