[{"transplant":{"position":"org.easymock.internal.RecordState:340","sourceCode":"this.org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","shouldBeUsedInOneThread":"value"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:720","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:159","failures":[19,20,21,22,23,24],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1916","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[25],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:138","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[26,27,28,29],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[30],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:218","failures":[31,19,20,32,21,33,34,26,27,35,36,37,38,39,40,41,42,43],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"(((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[44,45],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1832","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:45","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>, java.lang.Boolean.java.lang.Boolean)","type":"CtInvocationImpl"},"failures":[46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[73,74],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:382","sourceCode":"for (int int = 0 ; int < (java.lang.Class<?>.getInterfaces().int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getInterfaces()[int];\n    if (!(java.util.List<java.lang.Class<?>>.contains(java.lang.Class<?>))) {\n        java.util.List<java.lang.Class<?>>.add(java.lang.Class<?>);\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[75,76,77,78,79,80,4,81,5,82,6,7,83,84,8,9,85,86,87,88,89,90,49,91,50,51,92,93,94,95,96,97,98,99,100,101,102,13,15,16,17,103,104,63,105,64,65,106,107,30],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[42],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:176","failures":[26,108,109,110,111,112,113,114],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1915","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<T>(org.easymock.Capture<T>))","type":"CtInvocationImpl"},"failures":[115,116,117,118,119,120,121,122,123],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[7,8,9,50,96,97,124,101,125,14,15,16,17,18,64],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:172","failures":[126,127],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:57","sourceCode":"java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:827","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[73,74],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:210","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[128,82,129,130,96,131,102,132,133,134,135,136,137,138,139,140,141,70,71,72,142,143,144,145,146],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:241","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:36","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Character.java.lang.Class<java.lang.Character>.getName(), java.lang.Character.java.lang.Class<java.lang.Character>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:315","failures":[147,148,149,150,128,82,129,151,152,56,153,130,154,155,156,131,102,132,133,157,158,159,135,136,160,161,137,69,138,139,140,141,162,70,71,72,142,163,143,144,145,146,164],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[2,4,10,11,14,18],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1079","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.InstanceOf(java.lang.Class<T>))","type":"CtInvocationImpl"},"failures":[165,166,167,116],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1373","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.ConstructorArgs:77","failures":[168,169],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":44,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":164,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":102,"org.easymock.tests2.UsageTest.argumentsOrdered":9,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":153,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":84,"org.easymock.tests2.StubTest.stubWithReturnValue":128,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":28,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":112,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":152,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":67,"org.easymock.tests2.DependencyTest.testInterfaceMocking":47,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":95,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":111,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":4,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":42,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":158,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":34,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":71,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":90,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":154,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":135,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":35,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":68,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":63,"org.easymock.tests.UsageExpectAndThrowTest.object":162,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":114,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":38,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":48,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":53,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":76,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":109,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":106,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":0,"org.easymock.tests2.UsageTest.wrongArguments":7,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":62,"org.easymock.samples.ConstructorCalledMockTest.testTax":19,"org.easymock.tests.UsageStrictMockTest.range":64,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":26,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":20,"org.easymock.tests2.ConstraintsToStringTest.orToString":77,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":127,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":99,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":82,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":118,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":70,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":126,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":39,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":89,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":73,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":157,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":146,"org.easymock.tests.UsageTest.moreThanOneArgument":13,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":16,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":10,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":66,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":151,"org.easymock.tests.UsageUnorderedTest.message":101,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":85,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":124,"org.easymock.tests2.CaptureTest.testCapture2_2446744":123,"org.easymock.tests2.UsageTest.moreThanOneArgument":6,"org.easymock.tests.UsageVerifyTest.twoReturns":97,"org.easymock.tests.UsageTest.argumentsOrdered":17,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":81,"org.easymock.tests2.CaptureTest.testCapture_2617107":116,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":5,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":113,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":145,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":60,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":131,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":143,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":24,"org.easymock.tests2.UsageStrictMockTest.differentMethods":51,"org.easymock.tests.UsageExpectAndThrowTest.longType":161,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":56,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":79,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":142,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":91,"org.easymock.tests2.SerializationTest.testClass":32,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":43,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":55,"org.easymock.tests2.MockedExceptionTest.testRealException":150,"org.easymock.tests2.CaptureTest.testAnd":115,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":25,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":92,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":29,"org.easymock.tests2.MockedExceptionTest.testMockedException":148,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":49,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":69,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":54,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":132,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":137,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":149,"org.easymock.tests.MockingTest.testNicePartialClassMocking":1,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":163,"org.easymock.tests2.UsageConstraintsTest.testFind":45,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":133,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":108,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":130,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":104,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":30,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":167,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":166,"org.easymock.tests2.UsageStrictMockTest.range":50,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":107,"org.easymock.tests2.CaptureTest.testCapture1_2446744":117,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":110,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":72,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":140,"org.easymock.tests.UsageTest.exactCallCountByLastCall":103,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":8,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":86,"org.easymock.tests2.CaptureTest.testCaptureRightOne":121,"org.easymock.tests.UsageStrictMockTest.differentMethods":65,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":12,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":27,"org.easymock.tests.UsageRangeTest.combination":52,"org.easymock.tests.UsageTest.wrongArguments":15,"org.easymock.tests2.ConstraintsToStringTest.andToString":80,"org.easymock.tests2.MockBuilderTest.testCreateMockString":41,"org.easymock.tests2.MockBuilderTest.testWithConstructor":22,"org.easymock.tests.UsageExpectAndThrowTest.floatType":160,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":58,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":61,"org.easymock.tests.UsageVerifyTest.twoThrows":96,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":74,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":98,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":36,"org.easymock.samples.PartialClassMockTest.testGetArea":31,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":33,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":136,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":134,"org.easymock.tests2.UsageTest.niceToStrict":83,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":168,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":159,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":147,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":129,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":169,"org.easymock.tests2.CaptureTest.testCaptureFromStub":122,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":37,"org.easymock.tests2.MockBuilderTest.testCreateMock":40,"org.easymock.tests.UsageVarargTest.differentLength":94,"org.easymock.tests2.CallbackTest.callback":93,"org.easymock.tests.UsageTest.unexpectedCallWithArray":14,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":125,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":21,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":141,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":139,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":2,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":18,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":87,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":23,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":156,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":57,"org.easymock.tests2.UsageConstraintsTest.constraints":165,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":105,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":75,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":138,"org.easymock.tests2.ConstraintsToStringTest.notToString":78,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":155,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":59,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":120,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":119,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":144,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":100,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":11,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":3,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":88}}]
