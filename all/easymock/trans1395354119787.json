[{"transplant":{"position":"org.easymock.internal.MocksControl:116","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:60","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1191","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,115,116,116,117],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"name":"name","method":"result","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"returnedType","type":"returnedType"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[118,119],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.UnorderedBehavior:44","sourceCode":"final org.easymock.internal.Results org.easymock.internal.Results = new org.easymock.internal.Results()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[120,121,122,123,124],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[125,126,127,128,129,130,131,132,133,134,135],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1747","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:158","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl()","type":"CtReturnImpl"},"failures":[136,137,125,126,138,127,139,128,129,140,141,142,143,144,145,146,147,148,149,131,150,151,152,153,132,154,155,2,156,157,158,159,118,119,160,161,162,163,120,121,164,165,166,28,29,30,167,168,169,170,171,172,32,34,35,36,37,38,42,43,46,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,47,190,48,49,133,191,134,192,193,194,195,196,197,198,135,199,200,201,202,203,51,52,53,55,56,204,205,206,207,208,209,63,64,210,65,66,67,68,69,71,72,73,74,75,76,211,212,213,214,215,216,217,79,80,81,82,83,84,85,86,89,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,91,247,248,249,250,251,122,123,252,253,124,254,255,92,93,95,96,256,97,257,258,98,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,99,300,301,100,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,101,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,109,110,373,374,375,376,377,378,379,380],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[120,121,176,182,183,381,382,249,122,123,254,255,383,384,275,276,279,280,320],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[111],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:45","sourceCode":"java.lang.StringBuffer.append(\"[\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.And:49","sourceCode":"java.util.Iterator<org.easymock.IArgumentMatcher>.next().appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[125,385],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[131],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[136,137,125,126,386,138,127,139,128,129,140,130,141,142,143,144,145,146,147,148,149,131,150,151,152,153,132,154,155,1,387,388,2,389,156,390,391,157,392,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,158,393,394,159,118,119,160,161,162,163,120,121,164,165,166,395,396,397,398,399,400,401,402,403,404,405,406,28,29,30,167,407,408,409,410,411,412,413,414,415,416,417,418,419,168,420,169,170,171,172,32,34,35,36,37,38,39,40,0,41,42,43,46,173,174,175,176,177,178,179,180,181,182,183,184,185,421,186,187,188,422,189,47,190,48,49,50,133,191,134,192,193,194,195,196,197,198,135,199,200,201,202,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,203,51,52,53,54,440,441,55,56,442,204,205,206,207,208,443,209,63,64,210,65,66,67,68,444,69,70,71,72,73,74,75,76,77,445,211,212,213,214,446,215,216,217,447,78,79,80,81,82,83,84,85,86,87,88,89,90,218,219,220,221,222,223,224,225,226,227,228,229,448,230,231,232,233,234,235,236,237,238,449,239,240,241,242,243,244,245,246,91,247,248,249,250,251,122,123,252,253,124,254,255,450,451,452,453,454,455,92,93,94,95,96,256,97,257,258,98,456,457,458,259,260,261,262,263,264,265,266,267,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,505,99,506,507,300,301,100,302,303,304,305,306,508,307,308,309,310,311,312,313,314,315,316,317,318,319,320,101,102,103,104,105,106,107,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,509,343,344,510,511,512,513,514,515,516,517,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,108,109,110,111,112,518,373,374,375,376,377,378,379,380,519,520,113,114,521,115,116,117],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[522],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:180","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[40,99],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:573","sourceCode":"return false","type":"CtReturnImpl"},"failures":[141,142,230,231],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:196","sourceCode":"java.lang.reflect.Method.setAccessible(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:279","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[394,472],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[118,119],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:840","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[47,190,48],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":126,"org.easymock.tests2.UsageTest.argumentsOrdered":183,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":273,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":417,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":401,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":469,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":178,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":521,"org.easymock.tests2.DelegateToTest.testReturnException":186,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":242,"org.easymock.tests.MockingTest.testPartialClassMocking":95,"org.easymock.tests.MockClassControlTest.testToString":81,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":445,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":457,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":478,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":13,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":9,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":345,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":392,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":504,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":140,"org.easymock.tests2.UsageTest.wrongArguments":176,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":259,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":434,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":284,"org.easymock.samples.ExampleTest.answerVsDelegate":374,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":100,"org.easymock.tests2.UsageConstraintsTest.testNull":127,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":258,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":65,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":416,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":86,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":57,"org.easymock.tests2.CaptureTest.testPrimitive":192,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":263,"org.easymock.tests.UsageTest.moreThanOneArgument":274,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":364,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":210,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":288,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":513,"org.easymock.tests.UsageTest.argumentsOrdered":280,"org.easymock.tests.UsageVarargTest.varargIntAccepted":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":474,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":315,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":32,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":405,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":388,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":38,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":461,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":319,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":488,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":428,"org.easymock.tests.ReplayStateInvalidUsageTest.times":226,"org.easymock.tests2.DependencyTest.testClassMocking":390,"org.easymock.tests2.AnswerTest.answer":158,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":130,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":476,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":207,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":507,"org.easymock.tests2.CaptureTest.testAnd":133,"org.easymock.tests2.UsageTest.strictResetToDefault":174,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":72,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":287,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":411,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":266,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":517,"org.easymock.tests2.DelegateToTest.testDelegate":189,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":487,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":360,"org.easymock.tests.LimitationsTest.mockFinalMethod":90,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":245,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":272,"org.easymock.tests2.DependencyTest.testClassMockingSupport":391,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":509,"org.easymock.tests2.CaptureTest.testCapture1_2446744":193,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":444,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":358,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":205,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":220,"org.easymock.tests.UsageThrowableTest.throwError":365,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":301,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":406,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":384,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":27,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":491,"org.easymock.samples.PartialClassMockTest.testGetArea":117,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":221,"org.easymock.tests.MockingTest.testInterfaceMocking":256,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":316,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":451,"org.easymock.tests2.UsageTest.niceToStrict":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":14,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":78,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":346,"org.easymock.tests2.ThreadingTest.testChangeDefault":420,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":459,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":37,"org.easymock.tests2.MockBuilderTest.testCreateMock":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":22,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":431,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":354,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":412,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":506,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":455,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":291,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":282,"org.easymock.tests.UsageOverloadedMethodTest.overloading":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":24,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":18,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":145,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":238,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":232,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":332,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":144,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":198,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":508,"org.easymock.tests2.EasyMockSupportClassTest.testAll":6,"org.easymock.tests.MockClassControlTest.testEquals":85,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":110,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":362,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":58,"org.easymock.tests2.CaptureTest.testCaptureAll":191,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":206,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":270,"org.easymock.tests.MockNameTest.defaultName":448,"org.easymock.tests2.UsageConstraintsTest.testMatches":146,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":218,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":289,"org.easymock.samples.ExampleTest.voteForRemovals":378,"org.easymock.tests.UsageVarargTest.allKinds":314,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":124,"org.easymock.samples.BasicClassMockTest.testPrintContent":114,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":271,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":371,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":160,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":422,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":402,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":246,"org.easymock.tests2.UsageConstraintsTest.greaterThan":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":7,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":265,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":75,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":492,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":107,"org.easymock.samples.ExampleTest.voteForRemoval":375,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":169,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":76,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":44,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":302,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":68,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":484,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":173,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":91,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":41,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":466,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":409,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":4,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":241,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":421,"org.easymock.tests2.CaptureTest.testCaptureFirst":201,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":465,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":410,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":185,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":240,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":328,"org.easymock.tests2.UsageTest.moreThanOneArgument":175,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":171,"org.easymock.tests2.CaptureTest.testCapture2_2446744":200,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":477,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":43,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":313,"org.easymock.tests.GenericTest.testBridgedEquals":112,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":298,"org.easymock.tests.UsageExpectAndReturnTest.longType":324,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":407,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":268,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":45,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":363,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":505,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":152,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":361,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":511,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":286,"org.easymock.tests.UsageCallCountTest.tooManyCalls":299,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":23,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":329,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":433,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":350,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":370,"org.easymock.tests.MockingTest.testNiceClassMocking":98,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":52,"org.easymock.tests.MockingTest.testClassMocking":93,"org.easymock.tests2.UsageConstraintsTest.testContains":143,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":33,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":292,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":30,"org.easymock.tests2.UsageConstraintsTest.testFind":138,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":234,"org.easymock.tests.MockTypeTest.fromEasyMockClass":300,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":209,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":247,"org.easymock.tests.UsageExpectAndReturnTest.object":331,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":69,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":432,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":415,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":308,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":217,"org.easymock.tests.UsageTest.exactCallCountByLastCall":281,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":230,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":464,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":514,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":456,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":50,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":304,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":337,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":237,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":396,"org.easymock.tests.MockClassControlTest.testHashCode":84,"org.easymock.tests2.EasyMockSupportTest.testVerify":419,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":16,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":515,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":454,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":235,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":204,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":381,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":203,"org.easymock.tests.UsageVarargTest.varargCharAccepted":307,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":161,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":482,"org.easymock.tests2.UsageTest.openCallCountByLastCall":179,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":418,"org.easymock.tests.DefaultClassInstantiatorTest.object":101,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":453,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":215,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":382,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":17,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":352,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":62,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":368,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":426,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":395,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":490,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":73,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":83,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":351,"org.easymock.tests.CapturesMatcherTest.test":522,"org.easymock.tests.ReplayStateInvalidCallsTest.times":496,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":338,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":510,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":497,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":25,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":82,"org.easymock.tests2.UsageTest.resumeIfFailure":184,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":99,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":387,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":244,"org.easymock.tests2.StubTest.stubWithReturnValue":166,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":153,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":330,"org.easymock.tests2.SerializationTest.testAllMockedMethod":48,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":475,"org.easymock.samples.SupportTest.voteForRemovals":520,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":108,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":398,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":357,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":481,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":393,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":458,"org.easymock.tests.UsageExpectAndThrowTest.object":355,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":150,"org.easymock.tests2.DelegateToTest.testWrongClass":188,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":494,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":341,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":342,"org.easymock.tests.UsageStrictMockTest.range":122,"org.easymock.samples.ConstructorCalledMockTest.testTax":115,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":389,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":414,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":51,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":356,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":3,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":228,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":279,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":283,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":486,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":452,"org.easymock.tests2.CaptureTest.testCaptureNone":197,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":436,"org.easymock.tests.UsageUnorderedTest.message":320,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":383,"org.easymock.tests.UsageVerifyTest.twoReturns":255,"org.easymock.tests.UsageVarargTest.varargByteAccepted":312,"org.easymock.tests2.ThreadingTest.testThreadSafe":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":20,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":296,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":447,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":113,"org.easymock.tests2.CaptureTest.testCapture_2617107":134,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":479,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":262,"org.easymock.tests2.UsageConstraintsTest.any":141,"org.easymock.tests2.StubTest.stub":165,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":225,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":512,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":480,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":243,"org.easymock.tests.UsageExpectAndThrowTest.longType":348,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":105,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":224,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":163,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":400,"org.easymock.tests2.SerializationTest.testClass":47,"org.easymock.tests.LimitationsTest.mockNativeMethod":89,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":111,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":340,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":425,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":61,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":502,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":164,"org.easymock.tests2.NameTest.nameForMocksControl":214,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":427,"org.easymock.tests2.MockedExceptionTest.testMockedException":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":8,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":278,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":443,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":97,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":349,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":63,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":40,"org.easymock.tests.MockingTest.testNicePartialClassMocking":96,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":67,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":423,"org.easymock.tests2.CaptureTest.testCaptureLast":196,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":343,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":501,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":129,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":56,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":151,"org.easymock.tests.MockingTest.testTwoMocks":94,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":498,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":442,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":321,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":353,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":182,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":154,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":439,"org.easymock.samples.ExampleTest.removeNonExistingDocument":379,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":430,"org.easymock.tests.UsageStrictMockTest.differentMethods":123,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":222,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":397,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":438,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":103,"org.easymock.tests2.ConstraintsToStringTest.andToString":385,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":170,"org.easymock.tests2.MockBuilderTest.testCreateMockString":46,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":10,"org.easymock.tests.UsageExpectAndThrowTest.floatType":347,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":5,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":159,"org.easymock.tests.UsageVerifyTest.twoThrows":254,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":19,"org.easymock.samples.ExampleTest.voteAgainstRemoval":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":470,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":450,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":74,"org.easymock.tests.LimitationsTest.privateConstructor":88,"org.easymock.tests2.UsageConstraintsTest.testNotNull":132,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":28,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":372,"org.easymock.tests2.UsageTest.defaultResetToNice":181,"org.easymock.samples.ExampleTest.voteAgainstRemovals":373,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":471,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":336,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":424,"org.easymock.tests.UsageVarargTest.differentLength":309,"org.easymock.tests2.CallbackTest.callback":202,"org.easymock.tests2.UsageConstraintsTest.equals":386,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":70,"org.easymock.tests.UsageTest.openCallCountByLastCall":277,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":136,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":261,"org.easymock.tests.UsageCallCountTest.tooFewCalls":294,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":54,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":285,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":437,"org.easymock.tests.UsageThrowableTest.throwCheckedException":369,"org.easymock.tests.MockingTest.testStrictClassMocking":92,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":55,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":231,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":429,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":53,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":227,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":441,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":119,"org.easymock.tests.ObjectMethodsTest.testHashCode":216,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":500,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":172,"org.easymock.tests2.NameTest.nameForNiceMock":213,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":495,"org.easymock.tests2.DependencyTest.testInterfaceMocking":157,"org.easymock.samples.ExampleTest.addDocument":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":21,"org.easymock.tests2.DelegateToTest.testStubDelegate":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":26,"org.easymock.tests2.AnswerTest.stubAnswer":118,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":250,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":0,"org.easymock.tests.UsageVarargTest.varargLongAccepted":311,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":252,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":468,"org.easymock.tests.UsageExpectAndReturnTest.floatType":323,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":339,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":49,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":116,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":449,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":404,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":149,"org.easymock.tests.UsageThrowableTest.noUpperLimit":366,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":137,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":1,"org.easymock.tests2.SerializationTest.test":190,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":194,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":102,"org.easymock.tests2.UsageConstraintsTest.testSame":139,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":322,"org.easymock.samples.SupportTest.addDocument":519,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":440,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":485,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":11,"org.easymock.tests.GenericTest.testPackageScope":109,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":516,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":463,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":403,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":257,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":483,"org.easymock.tests2.NameTest.nameForMock":211,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":333,"org.easymock.tests2.UsageStrictMockTest.differentMethods":121,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":71,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":325,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":359,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":446,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":267,"org.easymock.tests2.MockedExceptionTest.testRealException":167,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":303,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":473,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":156,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":472,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":162,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":229,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":260,"org.easymock.tests2.NameTest.nameForStrictMock":212,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":36,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":208,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":66,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":2,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":131,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":104,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":34,"org.easymock.tests2.UsageStrictMockTest.range":120,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":489,"org.easymock.tests2.UsageConstraintsTest.lessThan":155,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":59,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":399,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":31,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":467,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":408,"org.easymock.tests2.CaptureTest.testCaptureRightOne":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":15,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":435,"org.easymock.tests2.UsageConstraintsTest.testOr":128,"org.easymock.tests.UsageRangeTest.combination":264,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":64,"org.easymock.tests.UsageTest.wrongArguments":276,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":12,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":80,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":326,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":460,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":334,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":106,"org.easymock.tests.UsageVarargTest.varargShortAccepted":310,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":297,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":503,"org.easymock.tests2.UsageConstraintsTest.cmpTo":142,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":394,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":493,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":462,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":180,"org.easymock.tests2.CaptureTest.testCaptureFromStub":199,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":219,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":35,"org.easymock.tests.UsageTest.unexpectedCallWithArray":275,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":499,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":249,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":295,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":335,"org.easymock.tests2.UsageConstraintsTest.constraints":125,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":251,"org.easymock.samples.ExampleTest.addAndChangeDocument":380,"org.easymock.tests.UsageStrictMockTest.testVerify":253,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":518,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":248,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":269,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":195,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":60,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":317,"org.easymock.tests.LimitationsTest.abstractClass":87,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":327,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":239,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":318,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":413,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":305}}]
