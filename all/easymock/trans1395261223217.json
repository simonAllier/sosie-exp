[{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:209","sourceCode":"if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[0,1,2,3,3,4,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"searchType"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[73,74,75,76],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","failures":[3,4,23,77,78,79,80,81,82,83,43,84,85,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,86,87,88],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1999","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Character>(org.easymock.Capture<java.lang.Character>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:643","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:83","failures":[89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:623","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1802","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.StartsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"prefix","key":"prefix"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:160","sourceCode":"if (boolean) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:217","sourceCode":"if ((boolean) && ((org.easymock.internal.Result) == null)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[105,92,93,106,107,108,109,110,111],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MocksControl:128","sourceCode":"final java.lang.String java.lang.String = org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(org.easymock.EasyMock.java.lang.String)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:95","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.util.Stack<org.easymock.IArgumentMatcher>.pop();\n}","type":"CtForImpl"},"failures":[112,113,114,115,116,117,118,119,120,121,122],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,92,144,145,146,147,148,149,107,150,151,152,153,154,110,155,156],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[157,158,159],"status":-1,"binaryOperator":"java.lang.String == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[160],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"this.java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[5,6,161,162,163,164,165,166,167,22,29,30,31,35,36,37,38,40,168,86,169,87],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","hashCodeMethod":"toStringMethod","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[170],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:75","sourceCode":"return \"expected: \" + (org.easymock.internal.Range.toString())","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:65","sourceCode":"if (org.easymock.internal.Range.hasFixedCount()) {\n    return \"\" + (int);\n} else if (org.easymock.internal.Range.hasOpenCount()) {\n    return \"at least \" + (int);\n} else {\n    return ((\"between \" + (int)) + \" and \") + (int);\n}","type":"CtIfImpl"},"failures":[171,89,105,172,90,173,174,91,175,92,93,144,176,95,96,97,106,177,178,179,180,181,182,183,19,167,184,108,185,101,186,187,110,188,102,189,190,103,104,111,30,38,191,192,193,194,112,195,196,197,198,199,200],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"failures":[201,202,203,204,205,79,43],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[206],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[89,94,207,208,209,210],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[211,212,213,159],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:222","failures":[73,74,75,76],"status":-1,"binaryOperator":"(\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:196","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:189","sourceCode":"org.easymock.internal.IMocksBehavior = new org.easymock.internal.MocksBehavior(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtAssignmentImpl"},"failures":[214,0,215,216,217,218,219,220,221,222,223,1,2,224,225,3,4,73,74,226,227,228,229,230,231,232,170,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,5,258,259,260,261,6,262,263,264,265,266,171,267,89,105,172,90,173,174,268,269,270,271,272,273,161,274,275,276,277,123,278,279,280,281,282,7,8,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,9,283,284,285,91,175,92,93,286,287,144,176,94,95,288,145,96,97,106,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,146,306,307,308,147,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,177,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,178,355,356,357,358,359,162,163,164,360,361,362,363,364,365,366,367,10,368,369,370,11,371,372,373,374,375,376,179,377,180,181,378,379,380,182,183,381,382,383,384,385,386,75,387,148,76,388,100,389,390,391,392,393,394,395,396,149,397,107,150,151,152,153,154,398,399,400,401,12,165,402,13,14,15,16,157,17,403,18,166,19,20,167,21,22,404,405,406,184,407,108,185,101,186,187,23,408,24,409,410,411,412,413,414,415,416,417,418,419,420,109,206,421,422,423,424,425,426,427,428,429,110,430,188,102,189,190,431,155,432,103,104,433,111,434,435,436,437,438,29,30,31,32,33,34,35,36,439,80,37,38,40,41,42,440,441,83,43,442,191,443,444,445,192,193,446,447,194,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,44,45,464,465,466,467,468,469,160,470,471,112,113,472,473,114,474,115,116,475,117,476,477,478,479,480,481,195,482,483,118,484,485,486,487,119,488,489,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,196,120,490,121,491,492,493,494,495,496,497,122,498,499,500,71,168,86,72,501,502,169,87,88,503,156,504,197,198,199,200],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:175","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Constructor<?>.getModifiers())) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[205],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[217,386,109,424,196],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[214,0,215,216,217,218,219,220,221,223,1,2,224,225,3,3,4,4,228,230,231,170,235,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,171,267,89,105,172,90,173,174,268,274,275,276,277,123,278,279,281,282,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,284,91,175,92,93,286,287,144,176,94,95,288,145,96,97,106,292,293,295,299,300,301,302,303,305,146,306,307,308,147,309,311,312,313,314,315,316,317,318,319,320,321,322,324,325,326,327,328,329,330,178,355,356,357,359,364,365,179,377,180,181,378,379,381,382,383,384,385,388,149,397,107,150,151,152,153,154,398,399,400,401,12,165,402,13,14,15,17,166,20,404,406,184,407,108,185,101,186,187,23,408,24,414,109,422,423,424,427,428,110,430,188,102,189,190,431,155,432,103,104,433,111,434,435,436,437,438,29,33,34,35,36,38,40,83,442,191,443,444,445,192,193,446,447,194,448,449,450,456,463,44,45,464,466,467,468,160,470,471,112,113,473,114,474,115,116,475,476,477,478,479,480,481,195,482,483,118,484,485,487,119,488,489,49,52,62,68,196,120,490,121,491,492,493,494,495,496,497,122,498,499,500,71,168,86,72,502,169,87,503,156,197,198,199,200],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[89,105,90,173,268,13,15,108,101,186],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[109],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[165],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[201,202,203,204,205,79,43],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[0,1,2,3,3,4,4,5,6,161,279,281,282,7,8,284,291,292,293,295,358,359,162,163,164,360,361,362,12,165,13,14,15,16,17,166,19,20,167,22,23,24,29,30,31,33,34,35,36,37,38,40,83,45,49,52,62,68,71,168,86,72,169,87],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"equalsMethod","equalsMethod":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:289","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[280],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:176","failures":[505,201,202,203,204,205,506,83],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:270","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[334,374,375,376],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[120,121,491,492,493,494,495,497,507,122,498,500],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[0,216,218,219,221,225,238,239,240,241,242,243,246,247,249,250,251,253,254,255,256,257,105,90,173,284,292,293,295,306,315,316,317,318,319,178,355,356,357,364,365,381,382,383,384,12,165,402,13,14,15,17,19,20,167,108,101,186,427,428,437,30,33,35,36,38,83,467,49,52,62,68,71,168,86,72,502,169,87],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","failures":[112,113,114,115,116,117,118,119,120,121,122],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[120,121,491,492,493,494,495,497,507,122,498,500],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":113,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":144,"org.easymock.tests2.UsageTest.argumentsOrdered":104,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":448,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":341,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":190,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":214,"org.easymock.tests2.DelegateToTest.testReturnException":466,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":275,"org.easymock.tests.MockingTest.testPartialClassMocking":292,"org.easymock.tests.MockClassControlTest.testToString":162,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":504,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":265,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":22,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":56,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":124,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":52,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":428,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":201,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":475,"org.easymock.tests2.UsageTest.wrongArguments":102,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":306,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":462,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":313,"org.easymock.samples.ExampleTest.answerVsDelegate":217,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":6,"org.easymock.tests2.UsageConstraintsTest.testNull":114,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":297,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":13,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":194,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":362,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":25,"org.easymock.tests2.CaptureTest.testPrimitive":491,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":309,"org.easymock.tests.UsageTest.moreThanOneArgument":176,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":143,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":402,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":383,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":392,"org.easymock.tests.UsageTest.argumentsOrdered":97,"org.easymock.tests.UsageVarargTest.varargIntAccepted":322,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":346,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":315,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":29,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":205,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":419,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":34,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":333,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":319,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":456,"org.easymock.tests.ReplayStateInvalidUsageTest.times":234,"org.easymock.tests2.DependencyTest.testClassMocking":425,"org.easymock.tests2.AnswerTest.answer":109,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":117,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":348,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":401,"org.easymock.tests2.CaptureTest.testAnd":120,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":259,"org.easymock.tests2.UsageTest.strictResetToDefault":430,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":166,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":78,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":382,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":445,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":356,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":396,"org.easymock.tests2.DelegateToTest.testDelegate":160,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":139,"org.easymock.tests.LimitationsTest.mockFinalMethod":285,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":123,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":303,"org.easymock.tests2.DependencyTest.testClassMockingSupport":426,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":73,"org.easymock.tests2.CaptureTest.testCapture1_2446744":492,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":157,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":137,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":399,"org.easymock.tests.UsageThrowableTest.throwError":149,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":229,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":261,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":420,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":385,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":84,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":70,"org.easymock.samples.PartialClassMockTest.testGetArea":0,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":230,"org.easymock.tests.MockingTest.testInterfaceMocking":294,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":316,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":372,"org.easymock.tests2.UsageTest.niceToStrict":189,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":161,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":57,"org.easymock.tests2.ThreadingTest.testChangeDefault":158,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":331,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":33,"org.easymock.tests2.MockBuilderTest.testCreateMock":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":65,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":459,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":133,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":209,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":192,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":258,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":376,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":179,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":311,"org.easymock.tests.UsageOverloadedMethodTest.overloading":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":67,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":480,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":148,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":249,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":304,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":479,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":497,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":323,"org.easymock.tests2.EasyMockSupportClassTest.testAll":49,"org.easymock.tests.MockClassControlTest.testEquals":361,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":282,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":141,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":26,"org.easymock.tests2.CaptureTest.testCaptureAll":490,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":400,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":301,"org.easymock.tests.MockNameTest.defaultName":363,"org.easymock.tests2.UsageConstraintsTest.testMatches":481,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":384,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":227,"org.easymock.samples.ExampleTest.voteForRemovals":221,"org.easymock.tests.UsageVarargTest.allKinds":330,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":175,"org.easymock.samples.BasicClassMockTest.testPrintContent":2,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":302,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":153,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":184,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":469,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":416,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":278,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":506,"org.easymock.tests2.UsageConstraintsTest.greaterThan":482,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":50,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":355,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":167,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":11,"org.easymock.samples.ExampleTest.voteForRemoval":218,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":435,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":21,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":39,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":262,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":16,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":110,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":279,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":80,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":338,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":443,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":47,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":274,"org.easymock.tests2.CaptureTest.testCaptureFirst":500,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":465,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":337,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":444,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":111,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":100,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":245,"org.easymock.tests2.CaptureTest.testCapture2_2446744":499,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":437,"org.easymock.tests2.UsageTest.moreThanOneArgument":188,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":38,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":349,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":329,"org.easymock.tests.GenericTest.testBridgedEquals":8,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":182,"org.easymock.tests.UsageExpectAndReturnTest.longType":241,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":442,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":299,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":142,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":486,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":310,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":140,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":390,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":381,"org.easymock.tests.UsageCallCountTest.tooManyCalls":183,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":66,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":246,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":461,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":129,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":152,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":168,"org.easymock.tests.MockingTest.testNiceClassMocking":298,"org.easymock.tests.MockingTest.testClassMocking":290,"org.easymock.tests2.UsageConstraintsTest.testContains":478,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":377,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":45,"org.easymock.tests2.UsageConstraintsTest.testFind":473,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":146,"org.easymock.tests.MockTypeTest.fromEasyMockClass":260,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":406,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":171,"org.easymock.tests.UsageExpectAndReturnTest.object":248,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":17,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":460,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":447,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":202,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":325,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":272,"org.easymock.tests.UsageTest.exactCallCountByLastCall":106,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":336,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":393,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":264,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":43,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":254,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":320,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":387,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":410,"org.easymock.tests.MockClassControlTest.testHashCode":360,"org.easymock.tests2.EasyMockSupportTest.testVerify":450,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":59,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":394,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":386,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":375,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":398,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":98,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":429,"org.easymock.tests.UsageVarargTest.varargCharAccepted":324,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":407,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":354,"org.easymock.tests2.UsageTest.openCallCountByLastCall":431,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":449,"org.easymock.tests.DefaultClassInstantiatorTest.object":366,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":374,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":270,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":99,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":60,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":150,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":27,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":454,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":409,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":164,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":19,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":130,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":255,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":389,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":68,"org.easymock.tests2.UsageTest.resumeIfFailure":433,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":5,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":277,"org.easymock.tests2.StubTest.stubWithReturnValue":156,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":79,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":487,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":247,"org.easymock.tests2.SerializationTest.testAllMockedMethod":24,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":347,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":210,"org.easymock.samples.SupportTest.voteForRemovals":225,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":280,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":412,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":136,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":353,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":206,"org.easymock.tests.UsageExpectAndThrowTest.object":134,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":266,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":484,"org.easymock.tests2.DelegateToTest.testWrongClass":468,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":364,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":365,"org.easymock.samples.ConstructorCalledMockTest.testTax":3,"org.easymock.tests.UsageStrictMockTest.range":90,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":440,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":446,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":71,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":135,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":35,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":46,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":236,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":312,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":207,"org.easymock.tests2.CaptureTest.testCaptureNone":496,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":373,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":212,"org.easymock.tests.UsageUnorderedTest.message":91,"org.easymock.tests.UsageVerifyTest.twoReturns":93,"org.easymock.tests.UsageVarargTest.varargByteAccepted":328,"org.easymock.tests2.ThreadingTest.testThreadSafe":434,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":63,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":379,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":1,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":273,"org.easymock.tests2.CaptureTest.testCapture_2617107":121,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":226,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":351,"org.easymock.tests2.UsageConstraintsTest.any":476,"org.easymock.tests2.StubTest.stub":503,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":233,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":391,"org.easymock.tests.UsageExpectAndThrowTest.longType":127,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":276,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":352,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":369,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":170,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":185,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":414,"org.easymock.tests2.SerializationTest.testClass":23,"org.easymock.tests.LimitationsTest.mockNativeMethod":284,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":7,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":257,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":453,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":187,"org.easymock.tests2.NameTest.nameForMocksControl":200,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":455,"org.easymock.tests2.MockedExceptionTest.testMockedException":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":51,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":145,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":405,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":128,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":295,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":12,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":36,"org.easymock.tests.MockingTest.testNicePartialClassMocking":293,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":15,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":505,"org.easymock.tests2.CaptureTest.testCaptureLast":495,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":451,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":74,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":116,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":87,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":485,"org.easymock.tests.MockingTest.testTwoMocks":291,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":88,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":238,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":132,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":103,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":488,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":159,"org.easymock.samples.ExampleTest.removeNonExistingDocument":222,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":458,"org.easymock.tests.UsageStrictMockTest.differentMethods":173,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":231,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":411,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":10,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":436,"org.easymock.tests2.MockBuilderTest.testCreateMockString":40,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":358,"org.easymock.tests.UsageExpectAndThrowTest.floatType":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":53,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":48,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":422,"org.easymock.tests.UsageVerifyTest.twoThrows":92,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":62,"org.easymock.samples.ExampleTest.voteAgainstRemoval":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":342,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":371,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":20,"org.easymock.tests.LimitationsTest.privateConstructor":283,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":85,"org.easymock.tests2.UsageConstraintsTest.testNotNull":119,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":463,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":154,"org.easymock.tests2.UsageTest.defaultResetToNice":432,"org.easymock.samples.ExampleTest.voteAgainstRemovals":216,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":343,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":452,"org.easymock.tests.UsageVarargTest.differentLength":177,"org.easymock.tests2.CallbackTest.callback":196,"org.easymock.tests2.UsageConstraintsTest.equals":472,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":403,"org.easymock.tests.UsageTest.openCallCountByLastCall":288,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":470,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":308,"org.easymock.tests.UsageCallCountTest.tooFewCalls":181,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":72,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":314,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":213,"org.easymock.tests.UsageThrowableTest.throwCheckedException":151,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":208,"org.easymock.tests.MockingTest.testStrictClassMocking":289,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":169,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":287,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":457,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":86,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":235,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":502,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":424,"org.easymock.tests.ObjectMethodsTest.testHashCode":271,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":204,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":438,"org.easymock.tests2.NameTest.nameForNiceMock":199,"org.easymock.tests2.DependencyTest.testInterfaceMocking":427,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":203,"org.easymock.samples.ExampleTest.addDocument":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":64,"org.easymock.tests2.DelegateToTest.testStubDelegate":467,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":69,"org.easymock.tests2.AnswerTest.stubAnswer":423,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":105,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":439,"org.easymock.tests.UsageVarargTest.varargLongAccepted":327,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":174,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":340,"org.easymock.tests.UsageExpectAndReturnTest.floatType":240,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":256,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":83,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":4,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":483,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":418,"org.easymock.tests.UsageThrowableTest.noUpperLimit":397,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":76,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":471,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":41,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":493,"org.easymock.tests2.SerializationTest.test":408,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":367,"org.easymock.tests2.UsageConstraintsTest.testSame":474,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":239,"org.easymock.samples.SupportTest.addDocument":224,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":501,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":54,"org.easymock.tests.GenericTest.testPackageScope":281,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":395,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":335,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":417,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":296,"org.easymock.tests2.NameTest.nameForMock":197,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":250,"org.easymock.tests2.UsageStrictMockTest.differentMethods":186,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":82,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":18,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":242,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":138,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":269,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":357,"org.easymock.tests2.MockedExceptionTest.testRealException":464,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":263,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":441,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":345,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":108,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":344,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":237,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":307,"org.easymock.tests2.NameTest.nameForStrictMock":198,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":32,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":404,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":14,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":42,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":118,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":368,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":30,"org.easymock.tests2.UsageStrictMockTest.range":101,"org.easymock.tests2.UsageConstraintsTest.lessThan":489,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":413,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":28,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":191,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":339,"org.easymock.tests2.CaptureTest.testCaptureRightOne":122,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":58,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":211,"org.easymock.tests2.UsageConstraintsTest.testOr":115,"org.easymock.tests.UsageRangeTest.combination":178,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":165,"org.easymock.tests.UsageTest.wrongArguments":95,"org.easymock.tests2.MockBuilderTest.testWithConstructor":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":55,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":359,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":243,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":332,"org.easymock.tests.UsageVarargTest.varargShortAccepted":326,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":370,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":380,"org.easymock.tests2.UsageConstraintsTest.cmpTo":477,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":421,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":334,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":155,"org.easymock.tests2.CaptureTest.testCaptureFromStub":498,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":228,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":31,"org.easymock.tests.UsageTest.unexpectedCallWithArray":94,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":89,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":378,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":81,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":252,"org.easymock.tests2.CaptureTest.testCapture":507,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":172,"org.easymock.tests2.UsageConstraintsTest.constraints":112,"org.easymock.samples.ExampleTest.addAndChangeDocument":223,"org.easymock.tests.UsageStrictMockTest.testVerify":268,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":215,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":267,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":300,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":494,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":317,"org.easymock.tests.LimitationsTest.abstractClass":9,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":244,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":388,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":318,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":193,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":321}}]
