[{"position":"org.easymock.internal.Range:40","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[438,440],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:39","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.vm.vendor\")","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[488,489],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[438],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:36","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[18,213,276,432],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[490,468,469,470],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:164","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:142","sourceCode":"return true","type":"CtReturnImpl"},"failures":[243],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[11,16,34,35,41,42,43,44,45,46,58,153,177,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,228,232,233,266,273,397,398,399,400,427],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:152","failures":[],"status":0,"binaryOperator":"(\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[491,471,473,474,475,476,477,478,480,492,481,482,484],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:48","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"failures":[493,494,210,495,496],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[488,319,489],"status":-1,"binaryOperator":"java.lang.String == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:176","sourceCode":"final net.sf.cglib.core.CodeGenerationException net.sf.cglib.core.CodeGenerationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:103","sourceCode":"continue","type":"CtContinueImpl"},"failures":[242],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"failures":[447],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"failures":[497,435,454,457],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:157","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[295,498,499,500,501,502,390],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[8,9,12,14,17,18,140,141,142,143,211,213,214,268,269,275,276,503,504,505,506,496,507,508,430,432,433],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[8,9,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,127,133,135,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,156,157,158,160,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,218,226,227,228,229,230,231,232,233,234,235,236,237,238,240,241,242,245,246,247,248,249,250,251,251,252,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,286,288,292,293,294,296,299,300,302,303,304,305,306,308,309,310,312,313,314,315,316,317,318,320,323,324,325,326,334,344,347,357,363,371,378,379,380,381,382,383,384,385,386,387,389,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,440,441,442,443,444,445,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,487],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[446,447],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[13,493,494,210,495,496],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:92","failures":[437,438,443,444,446,456,471,473,481],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:128","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"paramType"}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[509],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:161","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    return java.lang.reflect.Constructor<T>;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:162","sourceCode":"return java.lang.reflect.Constructor<T>","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"ret":"ret"}},{"transplant":{"position":"org.easymock.internal.ReplayState:52","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:57","sourceCode":"try {\n    final org.easymock.internal.Result org.easymock.internal.Result = org.easymock.internal.IMocksBehavior.addActual(org.easymock.internal.Invocation);\n    try {\n        return org.easymock.internal.Result.answer();\n    } catch (final java.lang.Throwable java.lang.Throwable) {\n        if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n            throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n        } \n        throw java.lang.Throwable;\n    }\n} finally {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation();\n}","type":"CtTryImpl"},"failures":[11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,55,57,58,61,68,69,70,71,72,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,105,106,107,108,109,110,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,157,158,160,176,177,178,179,180,181,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,226,227,228,229,230,231,232,233,234,235,236,237,238,240,241,248,249,250,251,252,253,254,255,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,286,288,292,293,294,296,299,300,302,303,304,305,306,308,309,310,312,313,314,315,316,317,318,320,323,324,325,326,334,344,347,357,363,371,378,379,380,381,382,385,386,387,389,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,421,422,423,425,426,427,428,429,430,431,432,433,434,435,436,437,438,440,441,442,443,444,445,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:49","sourceCode":"java.lang.StringBuffer.append((((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\"))","type":"CtInvocationImpl"},"failures":[510,497,511,512,513],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[13,14,17,18,37,61,108,109,110,514,515,141,142,143,210,213,214,516,244,269,275,276,277,288,299,300,302,410,432,433],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:36","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Character.java.lang.Class<java.lang.Character>.getName(), java.lang.Character.java.lang.Class<java.lang.Character>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[274],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[8,9,14,17,18,20,21,22,24,25,27,28,29,30,31,34,105,106,107,109,110,143,209,210,212,213,214,215,227,241,248,249,250,253,255,256,257,258,260,261,262,264,265,269,271,275,276,292,404,410,411,412,413,429,431,432,433,434,459,470,472,473,476,477,478,479,484],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[9,11,12,15,16,19,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,55,57,58,60,62,63,64,66,73,74,75,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,127,133,135,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,157,158,160,176,177,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,211,213,214,226,227,228,229,230,231,232,233,234,235,236,237,238,240,242,245,246,247,248,250,251,251,252,252,253,254,255,256,258,260,263,266,267,268,270,272,273,274,277,278,288,292,294,296,300,303,304,305,306,308,309,310,312,313,314,315,316,317,320,324,325,326,334,344,347,357,363,371,382,383,384,385,386,387,389,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,414,420,421,422,423,424,425,426,427,430,432,433,435,436,437,438,440,441,442,443,444,445,447,448,449,450,451,452,453,454,455,456,457,458,460,461,462,463,466,467,468,469,471,472,474,475,478,479,480,481,482,483,484,485,487],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastControl":"control","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":438,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":11,"org.easymock.tests2.UsageTest.argumentsOrdered":276,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":411,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":121,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":271,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":265,"org.easymock.tests2.DelegateToTest.testReturnException":421,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":42,"org.easymock.tests.MockingTest.testPartialClassMocking":157,"org.easymock.tests.MockClassControlTest.testToString":49,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":415,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":66,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":130,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":351,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":188,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":347,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":467,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":498,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":445,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":32,"org.easymock.tests2.UsageTest.wrongArguments":269,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":340,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":180,"org.easymock.samples.ExampleTest.answerVsDelegate":254,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":5,"org.easymock.tests2.UsageConstraintsTest.testNull":441,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":162,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":315,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":410,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":54,"org.easymock.tests2.CaptureTest.testPrimitive":474,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":36,"org.easymock.tests.UsageTest.moreThanOneArgument":12,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":207,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":314,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":148,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":183,"org.easymock.tests.UsageTest.argumentsOrdered":18,"org.easymock.tests.UsageVarargTest.varargIntAccepted":22,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":507,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":126,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":234,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":502,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":286,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":281,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":376,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":293,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":113,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":238,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":505,"org.easymock.tests.ReplayStateInvalidUsageTest.times":172,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":334,"org.easymock.tests2.DependencyTest.testClassMocking":464,"org.easymock.tests2.AnswerTest.answer":382,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":446,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":128,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":381,"org.easymock.tests2.CaptureTest.testAnd":471,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":2,"org.easymock.tests2.UsageTest.strictResetToDefault":267,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":290,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":323,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":147,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":405,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":39,"org.easymock.tests2.DelegateToTest.testDelegate":425,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":187,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":203,"org.easymock.tests.LimitationsTest.mockFinalMethod":139,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":45,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":72,"org.easymock.tests2.DependencyTest.testClassMockingSupport":465,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":8,"org.easymock.tests2.CaptureTest.testCapture1_2446744":475,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":319,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":201,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":379,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":166,"org.easymock.tests.UsageThrowableTest.throwError":226,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":4,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":244,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":377,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":365,"org.easymock.samples.PartialClassMockTest.testGetArea":263,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":167,"org.easymock.tests.MockingTest.testInterfaceMocking":159,"org.easymock.tests2.CompareToTest.testLessOrEqual":513,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":235,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":246,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":189,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":81,"org.easymock.tests2.UsageTest.niceToStrict":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":352,"org.easymock.tests2.ThreadingTest.testChangeDefault":489,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":111,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":292,"org.easymock.tests2.MockBuilderTest.testCreateMock":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":360,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":337,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":495,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":197,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":406,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":1,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":75,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":102,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":178,"org.easymock.tests.UsageOverloadedMethodTest.overloading":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":362,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":451,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":58,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":151,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":93,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":450,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":480,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":23,"org.easymock.tests.MockClassControlTest.testEquals":53,"org.easymock.tests2.EasyMockSupportClassTest.testAll":344,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":241,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":205,"org.easymock.tests2.CaptureTest.testCaptureAll":472,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":70,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":380,"org.easymock.tests.MockNameTest.defaultName":182,"org.easymock.tests2.UsageConstraintsTest.testMatches":452,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":164,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":149,"org.easymock.samples.ExampleTest.voteForRemovals":258,"org.easymock.tests.UsageVarargTest.allKinds":31,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":140,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":71,"org.easymock.samples.BasicClassMockTest.testPrintContent":262,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":232,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":428,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":424,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":46,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":373,"org.easymock.tests2.UsageConstraintsTest.greaterThan":454,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":345,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":38,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":326,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":225,"org.easymock.samples.ExampleTest.voteForRemoval":255,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":393,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":327,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":6,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":282,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":318,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":248,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":266,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":298,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":118,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":403,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":342,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":41,"org.easymock.tests2.CaptureTest.testCaptureFirst":484,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":420,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":117,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":404,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":278,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":61,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":89,"org.easymock.tests2.CaptureTest.testCapture2_2446744":483,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":395,"org.easymock.tests2.UsageTest.moreThanOneArgument":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":129,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":300,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":30,"org.easymock.tests.GenericTest.testBridgedEquals":243,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":109,"org.easymock.tests.UsageExpectAndReturnTest.longType":85,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":401,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":68,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":206,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":459,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":135,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":204,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":146,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":63,"org.easymock.tests.UsageCallCountTest.tooManyCalls":110,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":104,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":361,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":90,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":339,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":193,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":231,"org.easymock.tests.MockingTest.testNiceClassMocking":163,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":304,"org.easymock.tests.MockingTest.testClassMocking":155,"org.easymock.tests2.UsageConstraintsTest.testContains":449,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":103,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":399,"org.easymock.tests2.UsageConstraintsTest.testFind":440,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":153,"org.easymock.tests.MockTypeTest.fromEasyMockClass":3,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":487,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":208,"org.easymock.tests.UsageExpectAndReturnTest.object":92,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":320,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":338,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":409,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":499,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":25,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":79,"org.easymock.tests.UsageTest.exactCallCountByLastCall":19,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":176,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":116,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":184,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":65,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":390,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":98,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":20,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":57,"org.easymock.tests.MockClassControlTest.testHashCode":52,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":367,"org.easymock.tests2.EasyMockSupportTest.testVerify":413,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":354,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":185,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":55,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":74,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":514,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":378,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":388,"org.easymock.tests.UsageVarargTest.varargCharAccepted":24,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":217,"org.easymock.tests2.CaptureTest.testCaptureMultiple":491,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":429,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":134,"org.easymock.tests2.UsageTest.openCallCountByLastCall":272,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":412,"org.easymock.tests.DefaultClassInstantiatorTest.object":218,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":73,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":77,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":515,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":355,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":229,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":332,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":366,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":51,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":324,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":194,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":99,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":62,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":363,"org.easymock.tests2.UsageTest.resumeIfFailure":277,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":0,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":280,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":44,"org.easymock.tests2.StubTest.stubWithReturnValue":427,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":295,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":460,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":91,"org.easymock.tests2.SerializationTest.testAllMockedMethod":470,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":127,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":509,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":496,"org.easymock.samples.SupportTest.voteForRemovals":250,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":239,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":369,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":200,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":490,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":133,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":383,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":67,"org.easymock.tests.UsageExpectAndThrowTest.object":198,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":457,"org.easymock.tests2.DelegateToTest.testWrongClass":423,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":144,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":145,"org.easymock.tests.UsageStrictMockTest.range":213,"org.easymock.samples.ConstructorCalledMockTest.testTax":251,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":284,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":408,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":303,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":199,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":294,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":174,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":341,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":179,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":493,"org.easymock.tests2.CaptureTest.testCaptureNone":479,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":247,"org.easymock.tests.UsageUnorderedTest.message":143,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":516,"org.easymock.tests.UsageVerifyTest.twoReturns":142,"org.easymock.tests.UsageVarargTest.varargByteAccepted":29,"org.easymock.tests2.ThreadingTest.testThreadSafe":392,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":358,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":107,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":80,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":261,"org.easymock.tests2.CaptureTest.testCapture_2617107":473,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":508,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":131,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":35,"org.easymock.tests2.UsageConstraintsTest.any":447,"org.easymock.tests2.StubTest.stub":426,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":171,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":64,"org.easymock.tests.UsageExpectAndThrowTest.longType":191,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":132,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":43,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":222,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":170,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":431,"org.easymock.tests2.SerializationTest.testClass":468,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":371,"org.easymock.tests.LimitationsTest.mockNativeMethod":138,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":101,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":242,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":331,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":434,"org.easymock.tests2.NameTest.nameForMocksControl":419,"org.easymock.tests2.MockedExceptionTest.testMockedException":398,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":346,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":16,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":486,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":160,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":192,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":312,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":296,"org.easymock.tests.MockingTest.testNicePartialClassMocking":158,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":317,"org.easymock.tests2.CompareToTest.testCompareEqual":511,"org.easymock.tests2.CaptureTest.testCaptureLast":478,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":329,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":9,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":444,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":310,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":458,"org.easymock.tests.MockingTest.testTwoMocks":156,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":311,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":82,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":196,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":275,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":462,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":488,"org.easymock.samples.ExampleTest.removeNonExistingDocument":259,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":168,"org.easymock.tests.UsageStrictMockTest.differentMethods":214,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":336,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":368,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":220,"org.easymock.tests2.ConstraintsToStringTest.andToString":506,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":394,"org.easymock.tests2.MockBuilderTest.testCreateMockString":302,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":47,"org.easymock.tests.UsageExpectAndThrowTest.floatType":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":348,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":453,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":343,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":385,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":391,"org.easymock.tests.UsageVerifyTest.twoThrows":141,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":56,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":357,"org.easymock.samples.ExampleTest.voteAgainstRemoval":256,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":122,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":245,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":325,"org.easymock.tests.LimitationsTest.privateConstructor":137,"org.easymock.tests2.UsageConstraintsTest.testNotNull":461,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":397,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":233,"org.easymock.tests2.UsageTest.defaultResetToNice":274,"org.easymock.samples.ExampleTest.voteAgainstRemovals":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":123,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":97,"org.easymock.tests.UsageVarargTest.differentLength":26,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":330,"org.easymock.tests2.CallbackTest.callback":414,"org.easymock.tests2.UsageConstraintsTest.equals":439,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":321,"org.easymock.tests.UsageTest.openCallCountByLastCall":15,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":435,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":34,"org.easymock.tests.UsageCallCountTest.tooFewCalls":105,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":306,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":181,"org.easymock.tests.UsageThrowableTest.throwCheckedException":230,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":494,"org.easymock.tests.MockingTest.testStrictClassMocking":154,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":177,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":309,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":305,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":335,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":173,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":308,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":387,"org.easymock.tests2.CompareToTest.testGreateOrEqual":512,"org.easymock.tests.ObjectMethodsTest.testHashCode":78,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":501,"org.easymock.tests2.NameTest.nameForNiceMock":418,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":396,"org.easymock.tests2.DependencyTest.testInterfaceMocking":466,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":500,"org.easymock.samples.ExampleTest.addDocument":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":359,"org.easymock.tests2.DelegateToTest.testStubDelegate":422,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":364,"org.easymock.tests2.AnswerTest.stubAnswer":386,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":211,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":297,"org.easymock.tests.UsageVarargTest.varargLongAccepted":28,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":215,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":120,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":100,"org.easymock.tests.UsageExpectAndReturnTest.floatType":84,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":389,"org.easymock.tests2.ConstraintsToStringTest.orToString":503,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":252,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":455,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":59,"org.easymock.tests.UsageThrowableTest.noUpperLimit":227,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":375,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":436,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":279,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":476,"org.easymock.tests2.SerializationTest.test":469,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":219,"org.easymock.tests2.UsageConstraintsTest.testSame":442,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":83,"org.easymock.samples.SupportTest.addDocument":249,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":307,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":349,"org.easymock.tests.GenericTest.testPackageScope":240,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":186,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":115,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":374,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":161,"org.easymock.tests2.NameTest.nameForMock":416,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":94,"org.easymock.tests2.UsageStrictMockTest.differentMethods":433,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":301,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":322,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":86,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":202,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":76,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":40,"org.easymock.tests2.MockedExceptionTest.testRealException":400,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":125,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":285,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":430,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":124,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":175,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":33,"org.easymock.tests2.NameTest.nameForStrictMock":417,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":291,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":485,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":316,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":283,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":456,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":221,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":288,"org.easymock.tests2.UsageStrictMockTest.range":432,"org.easymock.tests2.UsageConstraintsTest.lessThan":463,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":370,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":402,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":119,"org.easymock.tests2.CaptureTest.testCaptureRightOne":481,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":353,"org.easymock.tests2.UsageConstraintsTest.testOr":443,"org.easymock.tests.UsageRangeTest.combination":37,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":313,"org.easymock.tests.UsageTest.wrongArguments":14,"org.easymock.tests2.MockBuilderTest.testWithConstructor":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":350,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":48,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":87,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":112,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":95,"org.easymock.tests.UsageVarargTest.varargShortAccepted":27,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":223,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":108,"org.easymock.tests2.UsageConstraintsTest.cmpTo":448,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":384,"org.easymock.tests2.CompareToTest.testLessThan":510,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":114,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":273,"org.easymock.tests2.CaptureTest.testCaptureFromStub":482,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":165,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":289,"org.easymock.tests.UsageTest.unexpectedCallWithArray":13,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":210,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":106,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":96,"org.easymock.tests2.CaptureTest.testCapture":492,"org.easymock.tests2.UsageConstraintsTest.constraints":437,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":212,"org.easymock.samples.ExampleTest.addAndChangeDocument":260,"org.easymock.tests2.ConstraintsToStringTest.notToString":504,"org.easymock.tests.UsageStrictMockTest.testVerify":216,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":264,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":209,"org.easymock.tests2.CompareToTest.testGreateThan":497,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":69,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":477,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":236,"org.easymock.tests.LimitationsTest.abstractClass":136,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":88,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":60,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":237,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":407,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":21}}]
