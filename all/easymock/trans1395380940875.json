[{"transplantationPoint":{"position":"org.easymock.EasyMock:1594","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(byte[]))","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,42,43,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[58],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","delegateTo":"answer"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"failures":[59],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:229","sourceCode":"org.easymock.internal.Injection org.easymock.internal.Injection = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[60,61,22,62,63,64,65,66,67,68,69,70,71],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:364","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[72,73],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[1,2,74,4,75,76,77,6,78,79,7,80,81,82,83,84,85,86,87,88,8,89,90,91,92,93,9,94,95,10,11,12,13,96,14,15,16,17,97,18,19,20,21,60,61,22,98,99,23,100,24,25,26,27,28,29,30,31,32,33,34,35,36,101,102,37,38,39,40,103,104,41,42,42,43,43,44,45,46,105,106,107,108,109,110,111,112,113,47,114,48,49,115,50,51,52,116,117,118,119,53,54,55,56,120,121,57,122,123,124,125,126,127],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"result"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[48],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[128,129,130,131,132,133,134,100,26,29,135],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"paramType"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"failures":[136,137],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:149","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[109,138,139],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[128,23,42,43],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg","this":"this","paramType":"paramType"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[140],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[141,142,143],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[144,145,146,147,148,149,150,151,152],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:207","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"failures":[6,153,154,102],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:357","sourceCode":"java.lang.reflect.Type = java.lang.reflect.Type","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"failures":[144,155,145,146,156,147,157,158,159,160,161,162,163,1,164,2,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,75,76,77,6,78,79,7,80,81,82,83,84,85,86,87,88,8,89,90,91,92,93,9,94,95,148,183,149,150,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,0,204,205,206,207,208,209,210,211,212,213,214,215,216,10,12,13,96,14,15,16,17,97,18,19,21,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,153,248,249,250,251,252,253,254,136,255,256,257,137,258,60,61,22,62,259,260,261,262,263,264,98,265,266,99,267,268,269,270,271,272,273,274,275,276,154,277,278,279,280,281,282,283,284,23,100,24,25,26,27,285,286,28,29,135,287,63,30,31,288,32,33,34,35,289,36,101,102,37,38,39,40,103,104,290,291,292,293,41,294,42,43,295,296,297,298,151,299,300,301,302,303,304,44,45,59,305,306,307,308,64,65,66,67,68,69,309,310,311,312,72,58,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,46,348,349,350,351,352,141,142,143,105,106,107,108,109,110,111,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,112,113,47,114,152,368,369,370,371,372,373,374,375,376,48,377,378,379,380,49,381,382,383,384,385,386,387,70,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,115,50,51,52,116,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,117,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,73,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,71,118,119,53,54,55,510,56,511,512,120,513,514,515,516,517,518,519,520,521,121,57,122,123,124,125,126,127],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","failures":[159,161,162,185,186,187,188,275,276,281,282,336,337,339,340,372,390,391,392,440,484,486,489,490],"status":-1,"binaryOperator":"((org.easymock.internal.ExpectedInvocation.toString()) + \": \")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[1,2,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,42,43,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","shouldBeUsedInOneThread":"shouldBeUsedInOneThread"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:40","sourceCode":"if (org.easymock.internal.DefaultClassInstantiator.isSerializable(java.lang.Class<?>)) {\n    try {\n        return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n    } catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n    }\n} ","type":"CtIfImpl"},"failures":[109,138,139],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:57","sourceCode":"java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:51","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[144,155,145,146,156,147,157,158,159,160,161,162,163,164,170,171,177,179,180,181,182,6,148,149,150,185,186,187,188,189,190,191,192,194,195,196,197,198,199,200,201,202,203,0,204,205,206,207,208,209,210,211,212,213,214,215,216,10,217,218,219,220,221,222,223,224,225,226,227,228,229,230,236,237,243,244,245,246,247,153,248,249,250,251,252,253,254,60,61,22,62,259,260,261,262,263,264,269,270,271,272,273,274,275,276,154,277,278,279,280,281,282,283,284,286,287,63,288,292,293,294,295,296,297,298,151,299,300,301,302,304,59,305,306,307,308,64,65,66,67,68,69,309,310,311,326,332,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,141,142,143,365,366,367,152,368,369,370,371,372,373,375,379,380,381,382,383,384,385,386,387,70,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,407,408,409,410,411,412,413,414,416,417,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,483,484,485,486,487,488,489,490,491,492,73,493,494,495,496,497,499,500,501,502,503,504,505,506,507,508,509,71,53,513,515,516,517,518,519,520,521],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[356],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ErrorMessage:51","failures":[161,522,339,391,392],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":192,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":483,"org.easymock.tests2.UsageTest.argumentsOrdered":282,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":252,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":237,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":320,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":277,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":294,"org.easymock.tests2.DelegateToTest.testReturnException":260,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":65,"org.easymock.tests.MockingTest.testPartialClassMocking":54,"org.easymock.tests.MockClassControlTest.testToString":122,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":184,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":375,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":104,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":83,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":441,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":7,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":293,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":482,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":199,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":386,"org.easymock.tests2.UsageTest.wrongArguments":276,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":176,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":345,"org.easymock.samples.ExampleTest.answerVsDelegate":151,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":49,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":512,"org.easymock.tests2.UsageConstraintsTest.testNull":195,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":32,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":127,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":251,"org.easymock.tests2.CaptureTest.testPrimitive":220,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":389,"org.easymock.tests.UsageTest.moreThanOneArgument":484,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":460,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":288,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":395,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":492,"org.easymock.tests.UsageTest.argumentsOrdered":490,"org.easymock.tests.UsageVarargTest.varargIntAccepted":405,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":325,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":59,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":10,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":241,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":266,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":58,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":308,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":466,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":170,"org.easymock.tests.ReplayStateInvalidUsageTest.times":361,"org.easymock.tests2.DependencyTest.testClassMocking":290,"org.easymock.tests2.AnswerTest.answer":144,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":200,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":327,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":272,"org.easymock.tests2.CaptureTest.testAnd":217,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":378,"org.easymock.tests2.UsageTest.strictResetToDefault":274,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":131,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":37,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":394,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":247,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":351,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":495,"org.easymock.tests2.DelegateToTest.testDelegate":264,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":465,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":456,"org.easymock.tests.LimitationsTest.mockFinalMethod":114,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":68,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":402,"org.easymock.tests2.DependencyTest.testClassMockingSupport":291,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":496,"org.easymock.tests2.CaptureTest.testCapture1_2446744":221,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":289,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":454,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":270,"org.easymock.tests.UsageThrowableTest.throwError":501,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":355,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":380,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":242,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":397,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":95,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":469,"org.easymock.samples.PartialClassMockTest.testGetArea":41,"org.easymock.tests.MockingTest.testInterfaceMocking":510,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":356,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":305,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":384,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":442,"org.easymock.tests2.UsageTest.niceToStrict":154,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":84,"org.easymock.tests2.ThreadingTest.testChangeDefault":178,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":312,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":14,"org.easymock.tests2.MockBuilderTest.testCreateMock":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":91,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":173,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":450,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":153,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":377,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":143,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":513,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":343,"org.easymock.tests.UsageOverloadedMethodTest.overloading":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":93,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":204,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":370,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":431,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":309,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":138,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":0,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":226,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":406,"org.easymock.tests.MockClassControlTest.testEquals":126,"org.easymock.tests2.EasyMockSupportClassTest.testAll":6,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":51,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":458,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":3,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":400,"org.easymock.tests2.CaptureTest.testCaptureAll":218,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":271,"org.easymock.tests.MockNameTest.defaultName":347,"org.easymock.tests2.UsageConstraintsTest.testMatches":205,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":396,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":353,"org.easymock.samples.ExampleTest.voteForRemovals":302,"org.easymock.tests.UsageVarargTest.allKinds":414,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":390,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":401,"org.easymock.samples.BasicClassMockTest.testPrintContent":45,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":507,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":157,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":69,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":238,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":263,"org.easymock.tests2.UsageConstraintsTest.greaterThan":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":78,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":350,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":40,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":470,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":111,"org.easymock.samples.ExampleTest.voteForRemoval":299,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":179,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":103,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":381,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":35,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":462,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":46,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":273,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":97,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":317,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":245,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":503,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":76,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":64,"org.easymock.tests2.CaptureTest.testCaptureFirst":230,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":259,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":316,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":246,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":284,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":373,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":427,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":181,"org.easymock.tests2.CaptureTest.testCapture2_2446744":229,"org.easymock.tests2.UsageTest.moreThanOneArgument":275,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":19,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":328,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":413,"org.easymock.tests.GenericTest.testBridgedEquals":116,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":520,"org.easymock.tests.UsageExpectAndReturnTest.longType":423,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":398,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":243,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":459,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":20,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":212,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":348,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":457,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":393,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":366,"org.easymock.tests.UsageCallCountTest.tooManyCalls":521,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":515,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":92,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":428,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":175,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":446,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":506,"org.easymock.tests.MockingTest.testNiceClassMocking":120,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":25,"org.easymock.tests.MockingTest.testClassMocking":119,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":514,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":11,"org.easymock.tests2.UsageConstraintsTest.testContains":203,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":22,"org.easymock.tests2.UsageConstraintsTest.testFind":194,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":311,"org.easymock.tests.MockTypeTest.fromEasyMockClass":379,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":149,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":334,"org.easymock.tests.UsageExpectAndReturnTest.object":430,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":36,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":174,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":250,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":408,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":418,"org.easymock.tests.UsageTest.exactCallCountByLastCall":491,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":509,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":315,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":73,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":374,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":100,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":436,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":403,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":369,"org.easymock.tests.MockClassControlTest.testHashCode":125,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":232,"org.easymock.tests2.EasyMockSupportTest.testVerify":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":86,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":493,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":152,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":142,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":269,"org.easymock.tests.UsageVarargTest.varargCharAccepted":407,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":158,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":333,"org.easymock.tests2.UsageTest.openCallCountByLastCall":278,"org.easymock.tests.DefaultClassInstantiatorTest.object":105,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":253,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":141,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":416,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":448,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":87,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":504,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":168,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":231,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":468,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":124,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":38,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":447,"org.easymock.tests.CapturesMatcherTest.test":140,"org.easymock.tests.ReplayStateInvalidCallsTest.times":474,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":437,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":365,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":475,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":9,"org.easymock.tests2.UsageTest.resumeIfFailure":283,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":48,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":265,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":67,"org.easymock.tests2.StubTest.stubWithReturnValue":63,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":132,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":429,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":213,"org.easymock.tests2.SerializationTest.testAllMockedMethod":2,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":326,"org.easymock.samples.SupportTest.voteForRemovals":296,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":115,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":234,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":453,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":332,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":155,"org.easymock.tests.UsageExpectAndThrowTest.object":451,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":376,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":210,"org.easymock.tests2.DelegateToTest.testWrongClass":262,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":499,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":472,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":500,"org.easymock.samples.ConstructorCalledMockTest.testTax":42,"org.easymock.tests.UsageStrictMockTest.range":339,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":267,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":249,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":24,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":452,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":16,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":489,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":75,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":363,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":344,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":464,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":385,"org.easymock.tests2.CaptureTest.testCaptureNone":225,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":255,"org.easymock.tests.UsageUnorderedTest.message":440,"org.easymock.tests.UsageVerifyTest.twoReturns":392,"org.easymock.tests.UsageVarargTest.varargByteAccepted":412,"org.easymock.tests2.ThreadingTest.testThreadSafe":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":89,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":518,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":419,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":44,"org.easymock.tests2.CaptureTest.testCapture_2617107":219,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":498,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":388,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":330,"org.easymock.tests2.UsageConstraintsTest.any":201,"org.easymock.tests2.StubTest.stub":287,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":360,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":367,"org.easymock.tests.UsageExpectAndThrowTest.longType":444,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":66,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":331,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":109,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":359,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":160,"org.easymock.tests2.SerializationTest.testClass":1,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":236,"org.easymock.tests.LimitationsTest.mockNativeMethod":47,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":439,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":52,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":167,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":5,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":480,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":163,"org.easymock.tests2.NameTest.nameForMocksControl":188,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":256,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":169,"org.easymock.tests2.MockedExceptionTest.testMockedException":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":79,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":488,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":445,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":183,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":56,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":30,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":17,"org.easymock.tests.MockingTest.testNicePartialClassMocking":55,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":34,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":165,"org.easymock.tests2.CaptureTest.testCaptureLast":224,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":497,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":479,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":29,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":198,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":211,"org.easymock.tests.MockingTest.testTwoMocks":53,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":476,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":135,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":420,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":449,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":281,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":215,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":258,"org.easymock.samples.ExampleTest.removeNonExistingDocument":303,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":172,"org.easymock.tests.UsageStrictMockTest.differentMethods":340,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":357,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":233,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":137,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":107,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":180,"org.easymock.tests2.MockBuilderTest.testCreateMockString":21,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":121,"org.easymock.tests.UsageExpectAndThrowTest.floatType":443,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":80,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":77,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":146,"org.easymock.tests.UsageVerifyTest.twoThrows":391,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":8,"org.easymock.samples.ExampleTest.voteAgainstRemoval":300,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":321,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":383,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":39,"org.easymock.tests.LimitationsTest.privateConstructor":113,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":129,"org.easymock.tests2.UsageConstraintsTest.testNotNull":214,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":508,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":60,"org.easymock.tests2.UsageTest.defaultResetToNice":280,"org.easymock.samples.ExampleTest.voteAgainstRemovals":298,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":435,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":322,"org.easymock.tests.UsageVarargTest.differentLength":409,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":166,"org.easymock.tests2.CallbackTest.callback":150,"org.easymock.tests2.UsageConstraintsTest.equals":193,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":101,"org.easymock.tests.UsageTest.openCallCountByLastCall":487,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":189,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":70,"org.easymock.tests.UsageCallCountTest.tooFewCalls":516,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":27,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":346,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":257,"org.easymock.tests.UsageThrowableTest.throwCheckedException":505,"org.easymock.tests.MockingTest.testStrictClassMocking":118,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":28,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":71,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":171,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":26,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":362,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":286,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":147,"org.easymock.tests.ObjectMethodsTest.testHashCode":417,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":478,"org.easymock.tests2.NameTest.nameForNiceMock":187,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":182,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":473,"org.easymock.tests2.DependencyTest.testInterfaceMocking":292,"org.easymock.samples.ExampleTest.addDocument":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":94,"org.easymock.tests2.DelegateToTest.testStubDelegate":261,"org.easymock.tests2.AnswerTest.stubAnswer":156,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":337,"org.easymock.tests.UsageVarargTest.varargLongAccepted":411,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":341,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":319,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":438,"org.easymock.tests.UsageExpectAndReturnTest.floatType":422,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":23,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":43,"org.easymock.tests.UsageThrowableTest.noUpperLimit":502,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":208,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":240,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":371,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":190,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":98,"org.easymock.tests2.SerializationTest.test":164,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":222,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":139,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":106,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":421,"org.easymock.tests2.UsageConstraintsTest.testSame":196,"org.easymock.samples.SupportTest.addDocument":295,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":285,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":463,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":81,"org.easymock.tests.GenericTest.testPackageScope":50,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":494,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":314,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":239,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":511,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":461,"org.easymock.tests2.NameTest.nameForMock":185,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":432,"org.easymock.tests2.UsageStrictMockTest.differentMethods":162,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":134,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":102,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":424,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":455,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":415,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":352,"org.easymock.tests2.MockedExceptionTest.testRealException":62,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":382,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":324,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":159,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":323,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":387,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":364,"org.easymock.tests2.NameTest.nameForStrictMock":186,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":96,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":148,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":33,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":99,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":108,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":209,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":12,"org.easymock.tests2.UsageStrictMockTest.range":161,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":467,"org.easymock.tests2.UsageConstraintsTest.lessThan":216,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":74,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":235,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":85,"org.easymock.tests2.CaptureTest.testCaptureRightOne":227,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":136,"org.easymock.tests2.UsageConstraintsTest.testOr":197,"org.easymock.tests.UsageRangeTest.combination":349,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":31,"org.easymock.tests.UsageTest.wrongArguments":486,"org.easymock.tests2.MockBuilderTest.testWithConstructor":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":82,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":57,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":425,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":433,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":72,"org.easymock.tests.UsageVarargTest.varargShortAccepted":410,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":110,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":519,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":481,"org.easymock.tests2.UsageConstraintsTest.cmpTo":202,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":145,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":471,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":313,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":279,"org.easymock.tests2.CaptureTest.testCaptureFromStub":228,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":354,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":13,"org.easymock.tests.UsageTest.unexpectedCallWithArray":485,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":477,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":336,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":517,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":133,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":434,"org.easymock.tests2.UsageConstraintsTest.constraints":191,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":338,"org.easymock.samples.ExampleTest.addAndChangeDocument":304,"org.easymock.tests.UsageStrictMockTest.testVerify":342,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":297,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":335,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":399,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":223,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":4,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":306,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":426,"org.easymock.tests.LimitationsTest.abstractClass":112,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":307,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":372,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":522,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":404,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":248}}]
