[{"position":"org.easymock.EasyMock:827","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:623","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[2,3,0,4,5,6,7,8,9,10,11,12,13,14,15],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[16,17,18,19,20,21,22,23,24,25],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1471","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[26,27],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[28,29,30,31,32,33],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[34],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:920","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[4,35,36,12,37],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[38,39,40,41,42,43,44,45,46,47,48],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:288","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:268","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[49,50,51,52,53,54],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:233","failures":[55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,2,3,77,78,79,80,81,82,0,83,84,4,35,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,5,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,28,134,135,26,136,137,138,29,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,30,162,31,163,164,165,166,167,168,169,170,171,172,173,174,175,32,33,176,177,9,178,179,10,11,180,181,27,182,183,184,185,186,187,187,188,188,189,190,191,192,193,194,195,196,197,198,199,38,200,39,201,202,203,204,205,206,207,40,208,209,34,210,211,212,213,214,215,216,217,218,219,220,221,222,49,50,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,12,37,244,16,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,41,42,268,43,269,44,45,270,46,271,272,273,274,275,276,277,278,279,47,280,281,282,283,48,284,285,286,287,52,288,289,290,291,292,293,294,295,296,297,298,299,300,301,13,302,303,304,305,306,14,15,307,308,309,310,19,311,312,313,314,315,316],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[159],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:305","failures":[317,318,74],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:826","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[283],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:183","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[58,59,60,61,62,63,64,67,68,69,70,71,72,73,319,320,321,322,323,76,2,3,77,79,80,82,83,35,85,86,87,88,89,90,91,92,324,95,96,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,28,134,137,29,139,140,141,142,143,325,144,145,146,147,153,154,155,156,160,161,30,162,31,163,164,165,166,167,168,169,170,171,172,173,174,175,32,33,177,326,327,328,329,191,192,193,194,195,196,197,38,200,39,201,203,204,205,206,207,40,34,210,211,212,213,214,215,216,218,219,220,221,222,36,50,224,225,226,227,228,229,232,234,235,238,239,330,331,332,333,241,242,37,244,16,245,246,261,262,265,266,267,41,42,268,43,269,44,45,270,271,272,273,274,275,276,277,278,279,47,280,281,283,48,284,285,334,52,335,296,298,300,301,302,303,306,307,309,310,19,311,314,315,316],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[220,277,303],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","shouldBeUsedInOneThread":"state","this":"this"}},{"position":"org.easymock.EasyMock:557","failures":[336,55,337,338,56,57,339,340,58,59,60,61,62,318,63,64,65,66,67,68,69,70,71,72,73,74,75,76,2,3,77,78,79,80,83,4,35,87,88,89,90,91,93,341,94,95,96,97,98,99,100,101,5,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,28,134,135,26,136,137,138,29,139,140,141,142,144,150,151,152,153,154,155,156,157,158,159,160,161,30,162,31,163,164,165,166,167,168,169,170,171,172,173,174,175,32,33,176,177,178,179,180,181,27,182,183,187,187,188,188,189,191,192,193,194,196,197,199,38,200,201,202,205,206,207,40,208,209,34,210,211,212,213,214,215,216,217,218,219,220,221,222,49,50,223,228,229,230,231,232,233,234,235,236,237,238,239,242,12,37,16,245,247,248,249,250,251,252,253,254,255,256,257,258,260,261,262,263,264,265,266,267,41,42,268,43,269,44,45,270,271,272,273,274,275,276,277,278,279,47,280,281,283,48,284,285,286,287,52,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,304,305,306,307,308,309,310,19,311,312,313,314,315,316],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:227","sourceCode":"try {\n    return java.lang.Class<?>.getDeclaredMethod(java.lang.String, java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[342,343,344,345,346,55,338,56,57,339,340,58,59,60,61,62,317,318,63,64,65,66,67,68,69,70,71,72,73,347,348,349,350,74,75,319,320,321,322,323,76,2,3,78,79,80,81,82,0,83,84,4,35,85,86,87,88,89,90,94,95,96,97,98,99,100,101,5,351,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,28,134,135,26,136,137,138,29,139,140,141,142,143,325,144,145,146,147,352,148,149,150,353,151,152,354,153,6,157,158,159,160,161,30,162,31,163,164,165,166,167,168,169,170,171,172,173,174,175,32,33,176,177,8,9,178,179,10,11,180,326,327,328,329,181,27,182,183,184,190,191,192,193,194,195,196,197,198,199,38,200,39,201,202,203,204,205,206,207,40,208,209,34,210,211,212,213,214,215,218,224,225,226,227,228,229,230,231,232,233,237,330,331,332,333,240,241,242,243,12,37,244,245,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,41,42,268,43,269,44,45,270,46,271,272,273,274,275,276,277,278,279,47,280,281,282,283,48,284,285,286,355,334,291,356,296,297,298,299,300,301,13,302,303,304,305,306,14,15,307,308,309,310,19,357,358,311,312,313,314,315,316],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[2,3,0,4,5,7,8,9,10,11,12,13,14,15],"status":-1,"binaryOperator":"int > 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[359],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:336","sourceCode":"this.org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","threadSafe":"shouldBeUsedInOneThread"}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[34],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"failures":[24],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"(\"Invalid key (\" + java.lang.String)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1291","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:183","failures":[65,77,82,84,4,35,85,92,95,5,123,124,125,126,127,129,130,131,132,133,144,145,146,147,148,149,184,185,186,190,191,193,194,195,196,197,198,199,200,39,203,204,205,206,34,214,241,243,12,37,244,246,250,256,257,258,259,282,52,303],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[2,3,0,4,5,6,7,8,9,10,11,12,13,14,15],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:137","sourceCode":"if (int > 1) {\n    java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\");\n} else {\n    java.lang.StringBuilder.append(\":\");\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[360,361,362,76,2,3,0,83,4,35,5,177,9,10,11,224,225,226,227,242,12,37,301,13,14,15],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"buffer","matches":"matches"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[38,39,40,45],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:138","sourceCode":"java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[360,76,2,3,0,83,4,35,177,9,10,11,224,225,226,227,242,12,37,301,13,14,15],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"transplant":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[42,46],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:273","sourceCode":"if ((java.lang.Class<?>.getSigners()) != null) {\n    net.sf.cglib.proxy.Enhancer.setNamingPolicy(org.easymock.internal.ClassProxyFactory.net.sf.cglib.core.NamingPolicy);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","failures":[76,2,3,0,83,4,35,5,153,177,9,10,11,224,225,226,227,242,12,37,301,13,14,15],"status":-1,"binaryOperator":"((org.easymock.internal.ExpectedInvocation.toString()) + \": \")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,319,320,321,322,323,76,2,3,77,79,80,81,82,0,83,84,4,35,85,86,87,88,89,90,91,92,324,363,364,365,366,367,368,94,95,96,97,98,99,100,101,5,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,28,134,137,138,29,139,140,141,142,143,325,144,145,146,147,153,154,155,156,160,161,30,162,31,163,164,165,166,167,168,169,170,171,172,173,174,175,32,33,176,177,8,9,178,179,10,11,180,326,327,328,329,184,185,186,187,187,188,188,189,190,191,192,193,194,195,196,197,198,199,38,200,39,201,202,203,204,205,206,207,40,208,209,34,210,211,212,213,214,215,216,217,218,219,220,221,222,36,50,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,330,331,332,333,240,241,242,243,12,37,244,16,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,261,262,263,265,266,267,41,42,268,43,269,44,45,270,271,272,273,274,275,276,277,278,279,47,280,281,283,48,284,285,286,334,52,335,288,289,290,369,291,292,293,294,295,296,297,298,299,300,301,13,302,303,304,305,306,14,15,307,308,309,310,19,311,314,315,316],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":42,"org.easymock.tests2.UsageTest.argumentsOrdered":15,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":176,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":257,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":355,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":71,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":303,"org.easymock.tests2.StubTest.stubWithReturnValue":215,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":17,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":283,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":167,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":190,"org.easymock.tests2.SerializationTest.testAllMockedMethod":246,"org.easymock.tests2.DelegateToTest.testReturnException":261,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":74,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":69,"org.easymock.tests.MockingTest.testPartialClassMocking":154,"org.easymock.samples.SupportTest.voteForRemovals":199,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":359,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":55,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":115,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":293,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":75,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":103,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":312,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":337,"org.easymock.tests.UsageExpectAndThrowTest.object":113,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":360,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":297,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":280,"org.easymock.tests2.DelegateToTest.testWrongClass":263,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":21,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":28,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":134,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":270,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":63,"org.easymock.tests2.UsageTest.wrongArguments":13,"org.easymock.tests.UsageStrictMockTest.range":4,"org.easymock.samples.ConstructorCalledMockTest.testTax":187,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":328,"org.easymock.samples.ExampleTest.answerVsDelegate":192,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":254,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":233,"org.easymock.tests2.UsageConstraintsTest.testNull":43,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":219,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":114,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":288,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":256,"org.easymock.tests2.CaptureTest.testPrimitive":201,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":67,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":10,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":122,"org.easymock.tests.UsageTest.moreThanOneArgument":177,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":327,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":218,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":140,"org.easymock.tests2.CaptureTest.testCaptureNone":206,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":159,"org.easymock.tests.UsageUnorderedTest.message":5,"org.easymock.tests.UsageVerifyTest.twoReturns":3,"org.easymock.tests.UsageVarargTest.varargByteAccepted":131,"org.easymock.tests2.ThreadingTest.testThreadSafe":228,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":338,"org.easymock.tests.UsageTest.argumentsOrdered":11,"org.easymock.tests.UsageVarargTest.varargIntAccepted":125,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":147,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":358,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":346,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":185,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":58,"org.easymock.tests2.CaptureTest.testCapture_2617107":39,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":334,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":66,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":335,"org.easymock.tests2.UsageConstraintsTest.any":271,"org.easymock.tests2.StubTest.stub":214,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":62,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":136,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":70,"org.easymock.tests.UsageExpectAndThrowTest.longType":106,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":366,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":243,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":286,"org.easymock.tests2.SerializationTest.testClass":16,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":291,"org.easymock.tests.LimitationsTest.mockNativeMethod":102,"org.easymock.tests2.AnswerTest.answer":311,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":93,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":33,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":46,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":333,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":54,"org.easymock.tests2.CaptureTest.testAnd":38,"org.easymock.tests2.UsageTest.strictResetToDefault":300,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":244,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":36,"org.easymock.tests2.NameTest.nameForMocksControl":227,"org.easymock.tests2.MockedExceptionTest.testMockedException":211,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":139,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":251,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":89,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":179,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":340,"org.easymock.tests2.DelegateToTest.testDelegate":265,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":107,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":156,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":216,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":289,"org.easymock.tests.MockingTest.testNicePartialClassMocking":155,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":118,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":221,"org.easymock.tests2.CaptureTest.testCaptureLast":205,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":72,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":318,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":239,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":45,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":323,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":281,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":317,"org.easymock.tests2.CaptureTest.testCapture1_2446744":202,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":160,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":116,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":331,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":111,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":14,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":284,"org.easymock.tests.UsageThrowableTest.throwError":94,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":365,"org.easymock.tests.UsageStrictMockTest.differentMethods":35,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":348,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":230,"org.easymock.tests2.MockBuilderTest.testCreateMockString":369,"org.easymock.tests.UsageExpectAndThrowTest.floatType":105,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":142,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":277,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":314,"org.easymock.tests.UsageVerifyTest.twoThrows":2,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":353,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":294,"org.easymock.samples.PartialClassMockTest.testGetArea":189,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":364,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":59,"org.easymock.samples.ExampleTest.voteAgainstRemoval":194,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":157,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":158,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":50,"org.easymock.tests2.UsageTest.niceToStrict":302,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":104,"org.easymock.tests2.UsageConstraintsTest.testNotNull":48,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":210,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":101,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":52,"org.easymock.tests2.UsageTest.defaultResetToNice":306,"org.easymock.samples.ExampleTest.voteAgainstRemovals":191,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":173,"org.easymock.tests.UsageVarargTest.differentLength":128,"org.easymock.tests2.CallbackTest.callback":298,"org.easymock.tests.UsageTest.openCallCountByLastCall":178,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":1,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":112,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":252,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":266,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":182,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":143,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":326,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":65,"org.easymock.tests.UsageCallCountTest.tooFewCalls":145,"org.easymock.tests.UsageOverloadedMethodTest.overloading":79,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":275,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":152,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":236,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":78,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":169,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":274,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":207,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":329,"org.easymock.tests.UsageThrowableTest.throwCheckedException":98,"org.easymock.tests2.EasyMockSupportClassTest.testAll":292,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":92,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":120,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":53,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":332,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":321,"org.easymock.tests2.CaptureTest.testCaptureAll":200,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":238,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":138,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":356,"org.easymock.tests.MockNameTest.defaultName":351,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":235,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":367,"org.easymock.tests2.UsageConstraintsTest.testMatches":276,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":237,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":316,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":141,"org.easymock.tests.ObjectMethodsTest.testHashCode":344,"org.easymock.samples.ExampleTest.voteForRemovals":196,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":232,"org.easymock.tests2.NameTest.nameForNiceMock":226,"org.easymock.tests.UsageVarargTest.allKinds":133,"org.easymock.tests2.DependencyTest.testInterfaceMocking":296,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":76,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":23,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":322,"org.easymock.samples.BasicClassMockTest.testPrintContent":186,"org.easymock.samples.ExampleTest.addDocument":195,"org.easymock.tests2.DelegateToTest.testStubDelegate":262,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":100,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":240,"org.easymock.tests2.AnswerTest.stubAnswer":315,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":264,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":73,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":83,"org.easymock.tests2.UsageConstraintsTest.greaterThan":278,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":25,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":88,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":223,"org.easymock.tests.UsageVarargTest.varargLongAccepted":130,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":85,"org.easymock.samples.ExampleTest.voteForRemoval":193,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":229,"org.easymock.tests.UsageExpectAndReturnTest.floatType":30,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":32,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":349,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":19,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":188,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":354,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":279,"org.easymock.tests.UsageThrowableTest.noUpperLimit":95,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":299,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":267,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":77,"org.easymock.tests2.SerializationTest.test":245,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":203,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":18,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":249,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":96,"org.easymock.tests2.UsageConstraintsTest.testSame":269,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":161,"org.easymock.samples.SupportTest.addDocument":198,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":68,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":260,"org.easymock.tests2.CaptureTest.testCaptureFirst":34,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":250,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":308,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":341,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":6,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":165,"org.easymock.tests.GenericTest.testPackageScope":91,"org.easymock.tests2.UsageTest.moreThanOneArgument":301,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":231,"org.easymock.tests2.CaptureTest.testCapture2_2446744":209,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":339,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":290,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":132,"org.easymock.tests2.NameTest.nameForMock":224,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":148,"org.easymock.tests.UsageExpectAndReturnTest.longType":162,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":319,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":247,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":121,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":170,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":282,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":183,"org.easymock.tests2.UsageStrictMockTest.differentMethods":37,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":119,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":26,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":29,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":31,"org.easymock.tests.UsageCallCountTest.tooManyCalls":149,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":117,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":342,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":90,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":144,"org.easymock.tests2.MockedExceptionTest.testRealException":213,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":350,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":166,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":242,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":108,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":368,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":64,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":99,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":234,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":325,"org.easymock.tests2.UsageConstraintsTest.testContains":273,"org.easymock.tests2.NameTest.nameForStrictMock":225,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":51,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":212,"org.easymock.tests2.UsageConstraintsTest.testFind":268,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":80,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":309,"org.easymock.tests.MockTypeTest.fromEasyMockClass":347,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":220,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":310,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":81,"org.easymock.tests.UsageExpectAndReturnTest.object":168,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":361,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":47,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":222,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":287,"org.easymock.tests2.UsageStrictMockTest.range":12,"org.easymock.tests2.UsageConstraintsTest.lessThan":285,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":255,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":22,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":127,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":345,"org.easymock.tests.UsageTest.exactCallCountByLastCall":180,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":137,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":248,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":24,"org.easymock.tests2.CaptureTest.testCaptureRightOne":40,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":336,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":56,"org.easymock.tests2.UsageConstraintsTest.testOr":44,"org.easymock.tests.UsageRangeTest.combination":87,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":20,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":217,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":123,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":174,"org.easymock.tests.UsageTest.wrongArguments":9,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":151,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":324,"org.easymock.tests2.EasyMockSupportTest.testVerify":259,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":163,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":171,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":57,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":27,"org.easymock.tests.UsageVarargTest.varargShortAccepted":129,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":150,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":352,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":330,"org.easymock.tests2.UsageConstraintsTest.cmpTo":272,"org.easymock.tests.UsageVarargTest.varargCharAccepted":126,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_Found":357,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":313,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":241,"org.easymock.tests2.UsageTest.openCallCountByLastCall":304,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":305,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":258,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":181,"org.easymock.tests2.CaptureTest.testCaptureFromStub":208,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":363,"org.easymock.tests.UsageTest.unexpectedCallWithArray":8,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":343,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":7,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":110,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":0,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":97,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":146,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":172,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":84,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":49,"org.easymock.tests2.UsageConstraintsTest.constraints":41,"org.easymock.samples.ExampleTest.addAndChangeDocument":197,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":109,"org.easymock.tests.UsageStrictMockTest.testVerify":86,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":175,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":135,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":295,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":82,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":320,"org.easymock.tests2.UsageTest.resumeIfFailure":307,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":204,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":60,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":164,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":61,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":153,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":362,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":253,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":124}}]
