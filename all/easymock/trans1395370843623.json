[{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:144","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findGenericDeclaration(java.lang.reflect.Method)","type":"CtLocalVariableImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:93","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.LinkedList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:36","sourceCode":"try {\n    if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n        org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n    } \n    return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]));\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace();\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace();\n} catch (final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper) {\n    throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace();\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[44,45,46,47,48,49],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:132","sourceCode":"java.lang.reflect.Method.getParameterTypes()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:113","sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.reflect.Method>.size()) ; int++) {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(int);\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForImpl"},"failures":[0,50],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[51,52,53,54,1,2,5,6,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,55,56,34,57,58,59,35,36,37,38,39],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:91","sourceCode":"java.lang.StringBuilder.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[60,61,54,62,63,64,65,66,47,67,68,69,70,71,72,73,74,75,76,77,78,79,80],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"buffer"}},{"position":"org.easymock.internal.matchers.Equals:37","failures":[81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,61,54,62,1,63,104,2,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,67,127,68,69,128,129,130,131,4,5,132,133,134,6,7,8,9,10,11,12,135,136,137,138,139,140,141,142,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,143,144,145,56,146,34,57,58,59,35,36,147,148,149,150,151,152,37,153,154,155,156,157,158,159,160,161,162,163,164,165,166,38,167,70,168,169,170,39,171,172,173,74,174,75,76,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:665","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[129,3,131,132,11,208],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[209,210],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:840","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[61,54,62,63,211,67,69,128,212,18,22,23,25,28,70,74,76,175],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[213],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:62","sourceCode":"final org.easymock.internal.InjectionPlan org.easymock.internal.InjectionPlan = new org.easymock.internal.InjectionPlan()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:602","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1135","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:43","sourceCode":"org.easymock.Capture<T>.this(org.easymock.CaptureType.org.easymock.CaptureType)","type":"CtInvocationImpl"},"failures":[197,214,215,216,217,218,219,220,201],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1915","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<T>(org.easymock.Capture<T>))","type":"CtInvocationImpl"},"failures":[197,214,216,217,218,219,201,221,222],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:61","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:642","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[223,223,224,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,56,244,77,179,245,246,247,248,249,250,251,181,252,182,183,253,254,255,256,257,258,259,260,261,262,193,263,194,264,265,266,267,195,196,197,40,41,42],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[268],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:233","failures":[81,223,223,224,224,82,83,225,84,85,86,87,88,89,90,91,92,93,51,52,53,94,95,96,97,98,269,99,100,101,102,103,270,61,54,62,1,63,64,104,2,65,66,105,227,228,229,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,271,126,47,67,127,68,69,128,272,273,274,275,276,129,3,130,131,4,5,132,133,134,6,212,230,7,8,9,10,11,12,135,136,137,138,139,277,278,279,280,281,282,283,284,285,286,231,140,232,141,142,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,233,143,144,145,287,288,56,146,34,57,58,59,35,36,289,290,147,148,149,150,151,291,292,293,294,295,296,152,37,153,154,155,156,157,158,159,297,160,161,162,163,298,164,165,166,38,167,70,71,168,169,170,39,299,72,73,171,172,300,173,74,174,75,76,175,244,77,78,79,80,176,301,302,177,178,303,179,180,245,246,247,248,249,251,181,182,183,254,256,257,258,259,304,260,261,184,185,186,305,187,306,307,308,188,309,189,310,190,191,311,312,208,313,314,315,316,317,318,209,319,320,321,322,323,324,192,325,326,262,193,327,263,194,264,266,328,195,213,196,197,198,214,215,216,217,218,199,200,219,201,221,222,202,203,329,204,205,206,330,207,40,41,42,43],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:117","failures":[86,133,295,296,166,176,177,303],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:124","failures":[81,223,224,82,83,225,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,269,99,100,101,102,103,61,54,62,1,63,46,64,104,2,65,66,105,227,228,229,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,271,126,47,67,127,68,69,128,129,3,130,131,4,5,132,331,332,333,334,133,134,6,335,230,7,8,9,10,11,12,135,136,137,138,139,336,337,338,339,340,281,282,283,284,341,285,286,231,140,141,142,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,342,342,233,143,144,145,56,146,34,57,58,59,35,36,147,148,149,150,151,291,293,294,295,296,152,37,153,154,155,156,157,158,159,297,160,161,162,163,298,164,165,166,38,167,70,71,168,169,170,39,299,72,73,171,172,300,173,74,174,75,76,175,244,176,177,178,303,343,344,345,346,179,180,245,246,247,248,249,250,251,181,252,182,183,253,254,255,256,257,258,259,304,260,261,184,185,186,305,187,306,307,308,188,309,189,310,190,191,311,208,313,314,315,316,317,318,209,319,320,321,322,323,324,192,325,326,262,193,327,263,194,264,265,266,267,328,195,213,196,197,198,214,215,216,217,218,199,200,219,201,221,222,202,203,204,205,206,207,40,41,42,43],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:110","sourceCode":"break","type":"CtBreakImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[213],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":188,"org.easymock.tests2.UsageTest.argumentsOrdered":73,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":1,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":162,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":10,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":169,"org.easymock.tests2.StubTest.stubWithReturnValue":37,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":324,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":84,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":115,"org.easymock.tests2.SerializationTest.testAllMockedMethod":245,"org.easymock.tests2.DelegateToTest.testReturnException":204,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":287,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":8,"org.easymock.tests.MockingTest.testPartialClassMocking":227,"org.easymock.samples.SupportTest.voteForRemovals":83,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":49,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":0,"org.easymock.tests.MockClassControlTest.testToString":236,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":276,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":26,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":288,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":247,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":14,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":301,"org.easymock.tests.UsageExpectAndThrowTest.object":24,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":60,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":321,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":165,"org.easymock.tests2.DelegateToTest.testWrongClass":206,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":143,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":144,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":311,"org.easymock.tests2.UsageTest.wrongArguments":71,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":130,"org.easymock.samples.ConstructorCalledMockTest.testTax":223,"org.easymock.tests.UsageStrictMockTest.range":68,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":333,"org.easymock.samples.ExampleTest.answerVsDelegate":86,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":297,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":256,"org.easymock.tests2.UsageConstraintsTest.testNull":189,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":263,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":25,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":241,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":161,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":182,"org.easymock.tests2.CaptureTest.testPrimitive":215,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":132,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":65,"org.easymock.tests.UsageTest.moreThanOneArgument":63,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":33,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":332,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":327,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":44,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":149,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":275,"org.easymock.tests2.CaptureTest.testCaptureNone":200,"org.easymock.tests.UsageUnorderedTest.message":145,"org.easymock.tests.UsageVerifyTest.twoReturns":62,"org.easymock.tests.UsageVarargTest.varargByteAccepted":101,"org.easymock.tests2.ThreadingTest.testThreadSafe":184,"org.easymock.tests.UsageTest.argumentsOrdered":66,"org.easymock.tests.UsageVarargTest.varargIntAccepted":96,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":284,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":92,"org.easymock.tests2.CaptureTest.testCapture_2617107":214,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":135,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":250,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":211,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":5,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":252,"org.easymock.tests2.UsageConstraintsTest.any":208,"org.easymock.tests2.StubTest.stub":152,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":279,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":139,"org.easymock.tests.UsageExpectAndThrowTest.longType":17,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":9,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":174,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":196,"org.easymock.tests2.SerializationTest.testClass":179,"org.easymock.tests.LimitationsTest.mockNativeMethod":233,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":203,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":232,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":125,"org.easymock.tests2.AnswerTest.answer":176,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":312,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":346,"org.easymock.tests2.CaptureTest.testAnd":197,"org.easymock.tests2.UsageTest.strictResetToDefault":167,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":267,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":175,"org.easymock.tests2.NameTest.nameForMocksControl":80,"org.easymock.tests2.MockedExceptionTest.testMockedException":41,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":148,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":293,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":157,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":2,"org.easymock.tests2.DelegateToTest.testDelegate":207,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":229,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":18,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":262,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":183,"org.easymock.tests.MockingTest.testNicePartialClassMocking":228,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":29,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":264,"org.easymock.tests2.CaptureTest.testCaptureLast":199,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":11,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":261,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":191,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":340,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":322,"org.easymock.tests.MockingTest.testTwoMocks":226,"org.easymock.tests2.CaptureTest.testCapture1_2446744":216,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":106,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":27,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":344,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":22,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":72,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":325,"org.easymock.tests.UsageThrowableTest.throwError":56,"org.easymock.tests.UsageStrictMockTest.differentMethods":69,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":186,"org.easymock.tests2.MockBuilderTest.testCreateMockString":255,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":234,"org.easymock.tests.UsageExpectAndThrowTest.floatType":16,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":151,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":318,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":177,"org.easymock.tests.UsageVerifyTest.twoThrows":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":248,"org.easymock.samples.PartialClassMockTest.testGetArea":225,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":268,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":136,"org.easymock.samples.ExampleTest.voteAgainstRemoval":88,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":274,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":273,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":195,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":15,"org.easymock.tests2.UsageTest.niceToStrict":168,"org.easymock.tests2.UsageConstraintsTest.testNotNull":192,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":36,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":40,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":181,"org.easymock.tests2.UsageTest.defaultResetToNice":299,"org.easymock.tests2.MockBuilderTest.testCreateMock":253,"org.easymock.samples.ExampleTest.voteAgainstRemovals":85,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":121,"org.easymock.tests.UsageVarargTest.differentLength":269,"org.easymock.tests2.CallbackTest.callback":166,"org.easymock.tests.UsageTest.openCallCountByLastCall":104,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":48,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":23,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":158,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":306,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":53,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":280,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":331,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":4,"org.easymock.tests.UsageCallCountTest.tooFewCalls":282,"org.easymock.tests.UsageOverloadedMethodTest.overloading":142,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":316,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":6,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":259,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":117,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":141,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":315,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":219,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":334,"org.easymock.tests.UsageThrowableTest.throwCheckedException":58,"org.easymock.tests2.EasyMockSupportClassTest.testAll":246,"org.easymock.tests.MockClassControlTest.testEquals":240,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":140,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":31,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":45,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":345,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":338,"org.easymock.tests2.CaptureTest.testCaptureAll":198,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":260,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":3,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":258,"org.easymock.tests2.UsageConstraintsTest.testMatches":317,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":304,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":303,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":150,"org.easymock.samples.ExampleTest.voteForRemovals":90,"org.easymock.tests2.NameTest.nameForNiceMock":79,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":187,"org.easymock.tests.UsageVarargTest.allKinds":103,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":61,"org.easymock.tests2.DependencyTest.testInterfaceMocking":164,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":339,"org.easymock.samples.BasicClassMockTest.testPrintContent":93,"org.easymock.samples.ExampleTest.addDocument":89,"org.easymock.tests2.DelegateToTest.testStubDelegate":205,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":35,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":300,"org.easymock.tests2.AnswerTest.stubAnswer":178,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":330,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":12,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":67,"org.easymock.tests2.UsageConstraintsTest.greaterThan":209,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":292,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":213,"org.easymock.tests.UsageVarargTest.varargLongAccepted":100,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":128,"org.easymock.samples.ExampleTest.voteForRemoval":87,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":185,"org.easymock.tests.UsageExpectAndReturnTest.floatType":108,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":124,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":265,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":244,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":224,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":319,"org.easymock.tests.UsageThrowableTest.noUpperLimit":146,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":307,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":230,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":38,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":217,"org.easymock.tests2.SerializationTest.test":180,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":155,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":34,"org.easymock.tests2.UsageConstraintsTest.testSame":310,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":107,"org.easymock.samples.SupportTest.addDocument":82,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":7,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":329,"org.easymock.tests2.CaptureTest.testCaptureFirst":202,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":156,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":172,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":335,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":113,"org.easymock.tests.GenericTest.testPackageScope":231,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":305,"org.easymock.tests2.CaptureTest.testCapture2_2446744":222,"org.easymock.tests2.UsageTest.moreThanOneArgument":70,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":254,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":102,"org.easymock.tests.GenericTest.testBridgedEquals":50,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":285,"org.easymock.tests2.NameTest.nameForMock":77,"org.easymock.tests.UsageExpectAndReturnTest.longType":109,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":336,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":153,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":32,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":118,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":323,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":270,"org.easymock.tests2.UsageStrictMockTest.differentMethods":76,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":30,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":278,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":147,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":110,"org.easymock.tests.UsageCallCountTest.tooManyCalls":286,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":28,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":294,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":281,"org.easymock.tests2.MockedExceptionTest.testRealException":43,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":114,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":74,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":19,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":59,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":131,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":257,"org.easymock.tests2.UsageConstraintsTest.testContains":314,"org.easymock.tests2.NameTest.nameForStrictMock":78,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":42,"org.easymock.tests2.UsageConstraintsTest.testFind":309,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":13,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":295,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":194,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":296,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":271,"org.easymock.tests.UsageExpectAndReturnTest.object":116,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":320,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":266,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":251,"org.easymock.tests2.UsageStrictMockTest.range":75,"org.easymock.tests2.UsageConstraintsTest.lessThan":326,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":160,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":98,"org.easymock.tests.UsageTest.exactCallCountByLastCall":105,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":129,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":154,"org.easymock.tests2.CaptureTest.testCaptureRightOne":201,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":289,"org.easymock.tests2.UsageConstraintsTest.testOr":190,"org.easymock.tests.UsageRangeTest.combination":291,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":193,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":94,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":122,"org.easymock.tests.UsageTest.wrongArguments":64,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":134,"org.easymock.tests.MockClassControlTest.testHashCode":239,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":235,"org.easymock.tests2.EasyMockSupportTest.testVerify":298,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":111,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":119,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":290,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":52,"org.easymock.tests.UsageVarargTest.varargShortAccepted":99,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":133,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":343,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":341,"org.easymock.tests2.UsageConstraintsTest.cmpTo":313,"org.easymock.tests.UsageVarargTest.varargCharAccepted":97,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":302,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":55,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":173,"org.easymock.tests2.UsageTest.openCallCountByLastCall":170,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":39,"org.easymock.tests.DefaultClassInstantiatorTest.object":242,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":163,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":51,"org.easymock.tests2.CaptureTest.testCaptureFromStub":221,"org.easymock.tests.UsageTest.unexpectedCallWithArray":46,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":243,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":21,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":57,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":47,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":283,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":120,"org.easymock.tests2.CaptureTest.testCapture":220,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":328,"org.easymock.tests2.UsageConstraintsTest.constraints":308,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":238,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":127,"org.easymock.samples.ExampleTest.addAndChangeDocument":91,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":20,"org.easymock.tests.CapturesMatcherTest.test":342,"org.easymock.tests.UsageStrictMockTest.testVerify":272,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":123,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":277,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":249,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":237,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":126,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":337,"org.easymock.tests2.CompareToTest.testGreateThan":210,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":218,"org.easymock.tests2.UsageTest.resumeIfFailure":171,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":137,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":112,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":212,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":138,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":95,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":159}}]
