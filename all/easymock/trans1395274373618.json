[{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[22,24,25,42,43,44,45,46,47,26,27,48],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[49,50,51,52,53,54,55,56,57,58,59,60,61,62,63],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1291","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:153","failures":[64,65,66,67,68,69,70,71,72,73,74,75],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:175","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Constructor<?>.getModifiers())) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[76],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"type","type":"type"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if (java.lang.reflect.Constructor<T> == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[77,78,79,80,81,82,76,83,84,85,86,87,88,89,90],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplant":{"position":"org.easymock.EasyMock:1659","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(long[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[91,92,93,94,95,96,97,51,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,59,155,156,157,158,159,160,161,162,163,164,60,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,74,183,184,185,186,187,84,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,22,23,25,42,45,210,46,26,211,48,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,28,29,30,31,32,33,34,35,37,227,228,229,230,231,232,233,234,38,39,235,236,40,41,237,90,238],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:194","sourceCode":"try {\n    java.lang.reflect.Constructor<?> = java.lang.Class<?>.getDeclaredConstructor(org.easymock.ConstructorArgs.getConstructor().getParameterTypes());\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"Fail to find constructor for param types\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"mockClass"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:252","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[239],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:972","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.InjectionPlan:51","failures":[240,241,242,243,244,245,246,161,247,248,249,250,251,252,253,254,255,256,257,224,258,259,260,261,262,263],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[92,264,265,96,266,267,142,143,144,268,269,239,270,270,271,271,159,272,273,274,167,168,169,170,172,173,74,84,275,276,188,277,189,278,190,191,279,192,280,281,193,194,195,196,197,198,200,201,202,282,203,283,204,205,206,90,284],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"failures":[276,280],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:174","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[269],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:77","failures":[285,286],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[65,287],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[91,92,265,93,94,95,96,97,51,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,288,289,290,291,292,132,133,134,135,136,137,139,140,142,143,144,145,146,147,148,149,150,151,152,153,154,59,155,156,157,158,159,160,161,162,163,164,60,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,74,183,184,185,186,187,84,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,22,23,25,42,45,210,46,26,211,48,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,28,29,30,31,32,33,34,35,37,227,228,229,230,231,232,233,234,38,39,235,236,40,41,237,90,238],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[91,64,293,294,295,296,297,298,299,300,301,302,303,304,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,305,92,264,265,306,93,94,65,307,95,49,308,309,310,311,312,313,314,315,316,317,318,319,320,321,96,322,323,324,50,97,325,51,98,326,327,99,328,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,329,330,331,332,126,333,127,128,53,54,129,130,55,56,131,334,335,336,337,338,339,340,287,341,288,342,289,343,344,345,346,347,348,349,350,290,291,351,292,352,353,354,266,132,133,134,135,136,355,356,357,358,359,360,361,362,363,364,137,57,365,366,367,368,369,370,371,372,373,374,375,376,138,139,140,377,141,378,379,380,381,382,383,384,267,142,143,385,144,386,387,388,66,67,68,69,70,71,389,390,391,392,393,268,394,395,396,397,269,398,399,145,146,400,401,239,402,403,404,405,406,407,147,148,149,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,150,151,152,153,154,58,59,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,155,444,156,157,445,158,446,447,270,271,159,240,241,272,273,448,160,242,243,244,245,246,161,247,248,249,250,251,252,449,450,162,163,451,452,164,453,60,165,454,455,166,456,457,458,459,460,461,167,168,169,170,462,171,172,173,463,174,175,176,61,177,464,178,179,180,62,63,181,182,72,73,74,75,183,465,184,185,186,187,84,85,466,467,468,469,470,275,188,277,471,189,278,190,191,472,87,279,192,281,473,474,475,193,476,477,194,478,479,480,481,482,483,484,485,486,195,487,488,489,490,491,196,492,493,197,198,199,200,201,202,282,494,203,495,496,283,204,205,206,497,498,207,499,500,501,208,502,503,504,505,506,507,508,509,510,511,512,209,513,514,515,22,23,24,25,42,43,44,45,210,46,26,27,211,48,212,213,214,215,216,217,218,219,220,221,222,223,516,517,253,254,255,256,257,224,258,259,260,261,262,263,518,519,520,521,225,226,28,29,522,30,31,32,33,34,35,36,37,227,228,229,230,231,232,233,234,38,39,235,523,236,40,41,237,90,238,284,524],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:126","sourceCode":"if (java.lang.Object != java.lang.Object) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"otherArgument":"actual","myArgument":"actual"}},{"position":"org.easymock.Capture:134","failures":[525,47],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:50","failures":[49,526],"status":-1,"binaryOperator":"int == 1","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[527,90,238,284],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1163","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[22,24,25,42,43,44,45,46,47,26,27,48],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[528],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:39","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.vm.vendor\")","type":"CtReturnImpl"},"failures":[529],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[22,24,26,28,29,31,33,34,36,38,40],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[29,36],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[229],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"expected","this":"this"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:36","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[344,360,444,207,500,501,502,503,505,524],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:130","sourceCode":"if (java.lang.Boolean.java.lang.Boolean.valueOf(java.lang.String)) {\n    throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"));\n} ","type":"CtIfImpl"},"failures":[494],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[29,33,36],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[293,294,295,99,101,102,103,104,105,337,363,70,149,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,58,166],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:262","failures":[64,293,294,295,65,307,99,100,101,102,103,104,105,127,130,352,353,354,363,66,67,68,69,70,71,149,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,58,166,174,179,72,73,74,75],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:305","failures":[91,64,92,93,94,95,49,96,97,51,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,329,330,127,128,129,130,131,347,132,133,134,135,136,355,360,362,363,137,142,143,144,70,145,146,401,147,148,149,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,150,151,152,153,154,58,59,155,444,156,157,158,159,160,161,162,163,164,60,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,74,183,184,185,186,187,84,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,502,512,209,513,515,22,23,24,25,42,45,210,46,26,211,48,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,28,29,30,31,32,33,34,35,37,227,228,229,230,231,232,233,234,38,39,235,523,236,40,41,237,90,238,524],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[78,79,80,82,76,85,86],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[432,433,437],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1291","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[29],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1065","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":29,"org.easymock.tests.ClassInstantiatorFactoryTest.getJVM":529,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":127,"org.easymock.tests2.UsageTest.argumentsOrdered":63,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":222,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":247,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":342,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":464,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":240,"org.easymock.tests2.DelegateToTest.testReturnException":512,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":67,"org.easymock.tests.MockingTest.testPartialClassMocking":142,"org.easymock.tests.MockClassControlTest.testToString":402,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":466,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":126,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":498,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":481,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":408,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":194,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":163,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":21,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":78,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":35,"org.easymock.tests2.UsageTest.wrongArguments":61,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":93,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":263,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":430,"org.easymock.samples.ExampleTest.answerVsDelegate":444,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":269,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":387,"org.easymock.tests2.UsageConstraintsTest.testNull":31,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":200,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":407,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":221,"org.easymock.tests2.CaptureTest.testPrimitive":25,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":95,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":427,"org.easymock.tests.UsageTest.moreThanOneArgument":128,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":199,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":441,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":389,"org.easymock.tests.UsageTest.argumentsOrdered":56,"org.easymock.tests.UsageVarargTest.varargIntAccepted":367,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":346,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":132,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":76,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":275,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":458,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":251,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":278,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":336,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":136,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":5,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":224,"org.easymock.tests.ReplayStateInvalidUsageTest.times":316,"org.easymock.tests2.DependencyTest.testClassMocking":449,"org.easymock.tests2.AnswerTest.answer":207,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":36,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":348,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":521,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":395,"org.easymock.tests2.CaptureTest.testAnd":22,"org.easymock.tests2.UsageTest.strictResetToDefault":175,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":283,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":440,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":152,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":216,"org.easymock.tests2.DelegateToTest.testDelegate":515,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":393,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":4,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":423,"org.easymock.tests.LimitationsTest.mockFinalMethod":322,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":70,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":359,"org.easymock.tests2.DependencyTest.testClassMockingSupport":450,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":329,"org.easymock.tests2.CaptureTest.testCapture1_2446744":42,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":494,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":421,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":519,"org.easymock.tests.UsageThrowableTest.throwError":99,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":310,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":397,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":252,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":443,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":493,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":8,"org.easymock.samples.PartialClassMockTest.testGetArea":159,"org.easymock.tests.MockingTest.testInterfaceMocking":385,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":311,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":133,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":139,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":482,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":409,"org.easymock.tests2.UsageTest.niceToStrict":177,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":381,"org.easymock.tests2.ThreadingTest.testChangeDefault":465,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":334,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":189,"org.easymock.tests2.MockBuilderTest.testCreateMock":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":489,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":260,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":417,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":217,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":394,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":295,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":296,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":428,"org.easymock.tests.UsageOverloadedMethodTest.overloading":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":491,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":486,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":230,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":363,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":147,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":117,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":229,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":46,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":368,"org.easymock.tests.MockClassControlTest.testEquals":406,"org.easymock.tests2.EasyMockSupportClassTest.testAll":193,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":264,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":425,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":520,"org.easymock.tests2.CaptureTest.testCaptureAll":23,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":357,"org.easymock.tests.MockNameTest.defaultName":400,"org.easymock.tests2.UsageConstraintsTest.testMatches":231,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":442,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":308,"org.easymock.samples.ExampleTest.voteForRemovals":158,"org.easymock.tests.UsageVarargTest.allKinds":376,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":154,"org.easymock.samples.BasicClassMockTest.testPrintContent":273,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":358,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":104,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":451,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":514,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":71,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":248,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":83,"org.easymock.tests2.UsageConstraintsTest.greaterThan":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":476,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":151,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":206,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":9,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":438,"org.easymock.samples.ExampleTest.voteForRemoval":156,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":497,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":184,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":398,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":282,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":1,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":174,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":266,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":87,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":287,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":214,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":474,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":66,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":511,"org.easymock.tests2.CaptureTest.testCaptureFirst":48,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":340,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":215,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":182,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":57,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":113,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":186,"org.easymock.tests2.UsageTest.moreThanOneArgument":176,"org.easymock.tests2.CaptureTest.testCapture2_2446744":211,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":192,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":349,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":375,"org.easymock.tests.GenericTest.testBridgedEquals":306,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":303,"org.easymock.tests.UsageExpectAndReturnTest.longType":109,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":212,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":355,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":426,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":280,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":523,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":382,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":424,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":439,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":353,"org.easymock.tests.UsageCallCountTest.tooManyCalls":304,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":490,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":114,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":262,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":413,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":103,"org.easymock.tests.MockingTest.testNiceClassMocking":388,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":168,"org.easymock.tests.MockingTest.testClassMocking":384,"org.easymock.tests2.UsageConstraintsTest.testContains":228,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":276,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":297,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":74,"org.easymock.tests2.UsageConstraintsTest.testFind":30,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":149,"org.easymock.tests.MockTypeTest.fromEasyMockClass":396,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":505,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":323,"org.easymock.tests.UsageExpectAndReturnTest.object":116,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":203,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":261,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":220,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":79,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":370,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":379,"org.easymock.tests.UsageTest.exactCallCountByLastCall":131,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":339,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":390,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":332,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":85,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":122,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":365,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":362,"org.easymock.tests.MockClassControlTest.testHashCode":405,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":243,"org.easymock.tests2.EasyMockSupportTest.testVerify":516,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":484,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":391,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":294,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":360,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":518,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":517,"org.easymock.tests.UsageVarargTest.varargCharAccepted":369,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":452,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":292,"org.easymock.tests2.UsageTest.openCallCountByLastCall":178,"org.easymock.tests.DefaultClassInstantiatorTest.object":432,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":223,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":293,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":141,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":485,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":415,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":101,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":256,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":242,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":404,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":7,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":204,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":414,"org.easymock.tests.CapturesMatcherTest.test":525,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":123,"org.easymock.tests.ReplayStateInvalidCallsTest.times":13,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":352,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":14,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":196,"org.easymock.tests2.UsageTest.resumeIfFailure":181,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":268,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":457,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":69,"org.easymock.tests2.StubTest.stubWithReturnValue":166,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":86,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":115,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":236,"org.easymock.tests2.SerializationTest.testAllMockedMethod":284,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":347,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":89,"org.easymock.samples.SupportTest.voteForRemovals":160,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":305,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":245,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":420,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":527,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":351,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":499,"org.easymock.tests.UsageExpectAndThrowTest.object":418,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":333,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":39,"org.easymock.tests2.DelegateToTest.testWrongClass":513,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":145,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":11,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":146,"org.easymock.tests.UsageStrictMockTest.range":51,"org.easymock.samples.ConstructorCalledMockTest.testTax":270,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":460,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":219,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":167,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":419,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":473,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":55,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":318,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":429,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":3,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":140,"org.easymock.tests2.CaptureTest.testCaptureNone":210,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":507,"org.easymock.tests.UsageUnorderedTest.message":49,"org.easymock.tests.UsageVerifyTest.twoReturns":59,"org.easymock.tests.UsageVarargTest.varargByteAccepted":374,"org.easymock.tests2.ThreadingTest.testThreadSafe":183,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":487,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":301,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":272,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":380,"org.easymock.tests2.CaptureTest.testCapture_2617107":24,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":331,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":290,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":307,"org.easymock.tests2.UsageConstraintsTest.any":37,"org.easymock.tests2.StubTest.stub":455,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":315,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":354,"org.easymock.tests.UsageExpectAndThrowTest.longType":411,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":68,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":291,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":436,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":314,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":453,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":161,"org.easymock.tests2.SerializationTest.testClass":90,"org.easymock.tests.LimitationsTest.mockNativeMethod":96,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":125,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":265,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":255,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":19,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":454,"org.easymock.tests2.NameTest.nameForMocksControl":470,"org.easymock.tests2.MockedExceptionTest.testMockedException":73,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":477,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":130,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":504,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":412,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":144,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":197,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":191,"org.easymock.tests.MockingTest.testNicePartialClassMocking":143,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":202,"org.easymock.tests2.CaptureTest.testCaptureLast":45,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":77,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":253,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":330,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":173,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":34,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":18,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":235,"org.easymock.tests.MockingTest.testTwoMocks":267,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":15,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":463,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":106,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":416,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":62,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":41,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":510,"org.easymock.samples.ExampleTest.removeNonExistingDocument":446,"org.easymock.tests.UsageStrictMockTest.differentMethods":98,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":259,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":312,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":244,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":509,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":434,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":185,"org.easymock.tests2.MockBuilderTest.testCreateMockString":281,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":478,"org.easymock.tests.UsageExpectAndThrowTest.floatType":410,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":475,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":501,"org.easymock.tests.UsageVerifyTest.twoThrows":58,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":195,"org.easymock.samples.ExampleTest.voteAgainstRemoval":157,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":138,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":289,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":205,"org.easymock.tests.LimitationsTest.privateConstructor":321,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":285,"org.easymock.tests2.UsageConstraintsTest.testNotNull":40,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":105,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":72,"org.easymock.tests2.UsageTest.defaultResetToNice":180,"org.easymock.samples.ExampleTest.voteAgainstRemovals":155,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":121,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":343,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":254,"org.easymock.tests.UsageVarargTest.differentLength":371,"org.easymock.tests2.CallbackTest.callback":524,"org.easymock.tests2.UsageConstraintsTest.equals":522,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":495,"org.easymock.tests.UsageTest.openCallCountByLastCall":129,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":225,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":65,"org.easymock.tests.UsageCallCountTest.tooFewCalls":299,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":170,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":431,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":508,"org.easymock.tests.UsageThrowableTest.throwCheckedException":102,"org.easymock.tests.MockingTest.testStrictClassMocking":383,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":172,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":64,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":169,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":258,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":317,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":171,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":502,"org.easymock.tests.ObjectMethodsTest.testHashCode":378,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":82,"org.easymock.tests2.NameTest.nameForNiceMock":469,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":187,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":17,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":12,"org.easymock.tests2.DependencyTest.testInterfaceMocking":162,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":80,"org.easymock.samples.ExampleTest.addDocument":445,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":488,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":492,"org.easymock.tests2.DelegateToTest.testStubDelegate":209,"org.easymock.tests2.AnswerTest.stubAnswer":208,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":97,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":472,"org.easymock.tests.UsageVarargTest.varargLongAccepted":373,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":326,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":288,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":124,"org.easymock.tests.UsageExpectAndReturnTest.floatType":108,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":84,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":271,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":234,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":250,"org.easymock.tests.UsageThrowableTest.noUpperLimit":328,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":364,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":226,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":456,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":43,"org.easymock.tests2.SerializationTest.test":238,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":433,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":107,"org.easymock.tests2.UsageConstraintsTest.testSame":32,"org.easymock.samples.SupportTest.addDocument":448,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":462,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":2,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":479,"org.easymock.tests.GenericTest.testPackageScope":92,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":392,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":338,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":249,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":386,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":0,"org.easymock.tests2.NameTest.nameForMock":467,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":118,"org.easymock.tests2.UsageStrictMockTest.differentMethods":165,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":496,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":110,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":422,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":377,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":153,"org.easymock.tests2.MockedExceptionTest.testRealException":75,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":399,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":461,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":345,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":88,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":164,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":344,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":94,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":319,"org.easymock.tests2.NameTest.nameForStrictMock":468,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":471,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":503,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":201,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":459,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":526,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":435,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":38,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":188,"org.easymock.tests2.UsageStrictMockTest.range":60,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":6,"org.easymock.tests2.UsageConstraintsTest.lessThan":237,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":246,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":528,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":81,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":213,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":483,"org.easymock.tests2.CaptureTest.testCaptureRightOne":26,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":506,"org.easymock.tests2.UsageConstraintsTest.testOr":33,"org.easymock.tests.UsageRangeTest.combination":150,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":198,"org.easymock.tests.UsageTest.wrongArguments":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":480,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":239,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":111,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":119,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":335,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":437,"org.easymock.tests.UsageVarargTest.varargShortAccepted":372,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":302,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":20,"org.easymock.tests2.UsageConstraintsTest.cmpTo":227,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":500,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":337,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":179,"org.easymock.tests2.CaptureTest.testCaptureFromStub":27,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":309,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":277,"org.easymock.tests.UsageTest.unexpectedCallWithArray":53,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":16,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":50,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":300,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":120,"org.easymock.tests2.CaptureTest.testCapture":47,"org.easymock.tests2.UsageConstraintsTest.constraints":28,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":325,"org.easymock.samples.ExampleTest.addAndChangeDocument":447,"org.easymock.tests.UsageStrictMockTest.testVerify":327,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":241,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":324,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":356,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":44,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":134,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":274,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":112,"org.easymock.tests.LimitationsTest.abstractClass":320,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":137,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":135,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":218,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":366}}]
