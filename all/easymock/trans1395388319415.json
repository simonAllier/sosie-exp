[{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[2,3],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.Capture:121","sourceCode":"break","type":"CtBreakImpl"},"failures":[4,5,6,7,8,9,10,11,12,13],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,13,39,40,41,42,43,44,45,46,47,48],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[49],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[50],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:45","sourceCode":"java.lang.StringBuffer.append(\"[\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[51,52,53],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[54,55,56,57,58,59,60,61,62,63,64,49,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,26,92,93,29,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,48,123,124,125,126,127,128],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.RecordState.primitiveToWrapperType":"org.easymock.internal.RecordState.primitiveToWrapperType","returnedType":"returnedType"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[129,130,131,15,16,17,25,132,133,94,39,42,43,123],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:147","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory()","type":"CtReturnImpl"},"failures":[54,134,135,136,136,137,137,138,139,140,141,142,143,144,60,145,146,147,148,149,150,151,152,153,154,155,156,49,65,66,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,100,180,181,101,182,102,103,183,184,104,185,105,186,106,107,109,110,111,187,112,188,189,190,113,114,115,191,192,116,117,118,119,121,122,193,194,195,125,196,197,126,198,199,200,201,202,203,204,205,206,127,207,208,209,210,211,128,212,213],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cached":"org.easymock.internal.MocksControl.classProxyFactory"}},{"transplant":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[129,214,215,131,15,16,17,216,25,132,217,218,219,220,133,29,94,95,221,222,223,224,225,226,39,42,43,48,123,124],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"proxy":"proxy"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[141],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[129,130,131,15,16,17,25,132,227,133,94,39,42,43,123],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[54,134,135,228,136,136,137,137,229,230,55,56,231,57,58,232,59,233,234,235,236,237,238,139,140,141,60,239,240,241,242,243,244,245,246,247,248,249,250,251,129,252,146,61,62,63,64,253,254,14,255,256,257,215,15,258,259,16,17,260,261,262,263,264,265,18,19,266,20,21,22,23,24,147,156,49,65,66,67,68,69,70,71,72,267,268,73,74,269,75,76,77,270,78,79,80,81,82,83,84,85,86,87,216,25,132,271,272,273,274,275,276,277,278,279,280,281,158,88,89,90,91,26,282,283,27,284,217,218,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,92,93,306,307,308,309,310,311,227,312,313,314,28,315,133,29,316,94,95,317,318,319,320,321,322,323,324,30,31,325,32,33,34,326,35,36,327,328,329,172,173,174,330,331,332,333,334,335,336,337,37,338,339,2,3,340,341,342,343,344,345,346,347,38,348,349,350,351,352,353,354,224,355,356,1,96,357,225,4,358,5,6,7,8,9,10,359,11,13,360,361,362,97,98,177,363,178,364,365,99,366,367,368,369,100,101,102,103,104,370,371,226,39,40,41,372,373,374,42,43,375,376,105,377,378,379,380,44,381,382,383,106,107,108,109,110,111,187,112,190,113,114,115,116,117,118,119,120,121,122,384,45,46,385,386,387,388,47,389,48,390,123,124,391,125,126,127,128],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1901","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Compare<T>(T , java.util.Comparator<? super T> , org.easymock.LogicalOperator))","type":"CtInvocationImpl"},"failures":[345],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[239,240,241,242,243,244,255,262,18,20,21,22,23,24,25,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,309,172,173,174,330,45],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:217","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(org.easymock.internal.EasyMockProperties.java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"org.easymock.internal.EasyMockProperties.PREFIX"}},{"transplant":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:209","sourceCode":"if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"exception":"candidateParameter","throwableClass":"candidateParameter"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"failures":[392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,252,414,415,416,417,418,419,420,0,421,422],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:80","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[138,139,140,141,142],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"bridgeMethod"}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:58","sourceCode":"java.lang.String[][int] = java.lang.Class<?>[][int].getName()","type":"CtAssignmentImpl"},"failures":[423,177,363,178],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[129,424,51,425,426,427,428,130,215,131,15,16,17,216,25,132,217,218,307,310,311,227,133,29,94,95,429,430,431,52,53,432,433,434,435,436,437,226,39,42,43,48,123,124],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:138","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[438,439,105,186],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:136","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[151,440,441],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:53","sourceCode":"java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection)","type":"CtInvocationImpl"},"failures":[442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":334,"org.easymock.tests2.UsageTest.argumentsOrdered":43,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":257,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":327,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":41,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":228,"org.easymock.tests2.DelegateToTest.testReturnException":365,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":240,"org.easymock.tests.MockingTest.testPartialClassMocking":49,"org.easymock.tests.MockClassControlTest.testToString":160,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":256,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":201,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":126,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":285,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":98,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":413,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":339,"org.easymock.tests2.UsageTest.wrongArguments":39,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":26,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":457,"org.easymock.samples.ExampleTest.answerVsDelegate":231,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":167,"org.easymock.tests2.UsageConstraintsTest.testNull":336,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":109,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":165,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":36,"org.easymock.tests2.CaptureTest.testPrimitive":6,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":284,"org.easymock.tests.UsageTest.moreThanOneArgument":215,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":304,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":108,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":63,"org.easymock.tests.UsageTest.argumentsOrdered":17,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":234,"org.easymock.tests.UsageVarargTest.varargIntAccepted":273,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":436,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":83,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":179,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":448,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":170,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":182,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":87,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":397,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":53,"org.easymock.tests.ReplayStateInvalidUsageTest.times":420,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":225,"org.easymock.tests2.DependencyTest.testClassMocking":175,"org.easymock.tests2.AnswerTest.answer":377,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":2,"org.easymock.tests2.CaptureTest.testAnd":4,"org.easymock.tests2.UsageTest.strictResetToDefault":371,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":190,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":62,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":32,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":90,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":238,"org.easymock.tests2.DelegateToTest.testDelegate":368,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":396,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":300,"org.easymock.tests.LimitationsTest.mockFinalMethod":145,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":243,"org.easymock.tests2.DependencyTest.testClassMockingSupport":176,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":217,"org.easymock.tests2.CaptureTest.testCapture1_2446744":7,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":298,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":415,"org.easymock.tests.UsageThrowableTest.throwError":18,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":449,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":213,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":400,"org.easymock.samples.PartialClassMockTest.testGetArea":54,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":416,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":84,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":320,"org.easymock.tests2.UsageTest.niceToStrict":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":202,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":286,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":101,"org.easymock.tests2.MockBuilderTest.testCreateMock":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":209,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":454,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":430,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":294,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":33,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":265,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":245,"org.easymock.tests.UsageOverloadedMethodTest.overloading":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":211,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":309,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":343,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":75,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":254,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":440,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":342,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":11,"org.easymock.tests.MockClassControlTest.testEquals":164,"org.easymock.tests2.EasyMockSupportClassTest.testAll":125,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":140,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":433,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":302,"org.easymock.tests2.CaptureTest.testCaptureAll":358,"org.easymock.tests.MockNameTest.defaultName":214,"org.easymock.tests2.UsageConstraintsTest.testMatches":344,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":64,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":252,"org.easymock.samples.ExampleTest.voteForRemovals":59,"org.easymock.tests.UsageVarargTest.allKinds":281,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":216,"org.easymock.samples.BasicClassMockTest.testPrintContent":135,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":23,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":47,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":445,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":244,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":367,"org.easymock.tests2.UsageConstraintsTest.greaterThan":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":196,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":89,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":115,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":401,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":153,"org.easymock.samples.ExampleTest.voteForRemoval":57,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":191,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":356,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":187,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":393,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":146,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":370,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":183,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":31,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":194,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":239,"org.easymock.tests2.CaptureTest.testCaptureFirst":362,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":364,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":325,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":376,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":227,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":268,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":96,"org.easymock.tests2.UsageTest.moreThanOneArgument":226,"org.easymock.tests2.CaptureTest.testCapture2_2446744":361,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":104,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":280,"org.easymock.tests.GenericTest.testBridgedEquals":142,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":250,"org.easymock.tests.UsageExpectAndReturnTest.longType":70,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":324,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":303,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":305,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":350,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":301,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":61,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":313,"org.easymock.tests.UsageCallCountTest.tooManyCalls":251,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":51,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":210,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":73,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":456,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":290,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":22,"org.easymock.tests.MockingTest.testNiceClassMocking":157,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":117,"org.easymock.tests.MockingTest.testClassMocking":155,"org.easymock.tests2.UsageConstraintsTest.testContains":341,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":174,"org.easymock.tests2.UsageConstraintsTest.testFind":335,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":255,"org.easymock.tests.MockTypeTest.fromEasyMockClass":219,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":28,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":383,"org.easymock.tests.UsageExpectAndReturnTest.object":269,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":112,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":455,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":35,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":275,"org.easymock.tests.UsageTest.exactCallCountByLastCall":260,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":261,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":235,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":428,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":186,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":79,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":271,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":308,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":442,"org.easymock.tests.MockClassControlTest.testHashCode":163,"org.easymock.tests2.EasyMockSupportTest.testVerify":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":204,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":52,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":236,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":264,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":306,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":369,"org.easymock.tests.UsageVarargTest.varargCharAccepted":274,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":389,"org.easymock.tests2.UsageTest.openCallCountByLastCall":372,"org.easymock.tests.DefaultClassInstantiatorTest.object":147,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":328,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":263,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":221,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":205,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":292,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":20,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":399,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":162,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":113,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":291,"org.easymock.tests.ReplayStateInvalidCallsTest.times":405,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":80,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":312,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":406,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":432,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":128,"org.easymock.tests2.UsageTest.resumeIfFailure":375,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":166,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":169,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":242,"org.easymock.tests2.StubTest.stubWithReturnValue":45,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":438,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":74,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":351,"org.easymock.tests2.SerializationTest.testAllMockedMethod":178,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":322,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":435,"org.easymock.samples.SupportTest.voteForRemovals":55,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":138,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":297,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":423,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":323,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":378,"org.easymock.tests.UsageExpectAndThrowTest.object":295,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":348,"org.easymock.tests2.DelegateToTest.testWrongClass":366,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":403,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":92,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":93,"org.easymock.samples.ConstructorCalledMockTest.testTax":136,"org.easymock.tests.UsageStrictMockTest.range":94,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":223,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":326,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":116,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":50,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":296,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":102,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":421,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":193,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":424,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":395,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":321,"org.easymock.tests2.CaptureTest.testCaptureNone":359,"org.easymock.tests.UsageUnorderedTest.message":129,"org.easymock.tests.UsageVerifyTest.twoReturns":132,"org.easymock.tests.UsageVarargTest.varargByteAccepted":279,"org.easymock.tests2.ThreadingTest.testThreadSafe":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":207,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":249,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":134,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":222,"org.easymock.tests2.CaptureTest.testCapture_2617107":5,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":437,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":27,"org.easymock.tests2.UsageConstraintsTest.any":3,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":419,"org.easymock.tests2.StubTest.stub":384,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":314,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":241,"org.easymock.tests.UsageExpectAndThrowTest.longType":288,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":151,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":418,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":390,"org.easymock.tests2.SerializationTest.testClass":177,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":224,"org.easymock.tests.LimitationsTest.mockNativeMethod":60,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":141,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":82,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":451,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":411,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":391,"org.easymock.tests2.NameTest.nameForMocksControl":388,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":452,"org.easymock.tests2.MockedExceptionTest.testMockedException":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":197,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":259,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":66,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":289,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":106,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":103,"org.easymock.tests.MockingTest.testNicePartialClassMocking":65,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":111,"org.easymock.tests2.CaptureTest.testCaptureLast":10,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":218,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":410,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":122,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":338,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":349,"org.easymock.tests.MockingTest.testTwoMocks":156,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":407,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":67,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":293,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":42,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":353,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":453,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":417,"org.easymock.tests.UsageStrictMockTest.differentMethods":95,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":443,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":149,"org.easymock.tests2.ConstraintsToStringTest.andToString":434,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":1,"org.easymock.tests2.MockBuilderTest.testCreateMockString":185,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":198,"org.easymock.tests.UsageExpectAndThrowTest.floatType":287,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":195,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":380,"org.easymock.tests.UsageVerifyTest.twoThrows":25,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":127,"org.easymock.samples.ExampleTest.voteAgainstRemoval":58,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":319,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":114,"org.easymock.tests.LimitationsTest.privateConstructor":144,"org.easymock.tests2.UsageConstraintsTest.testNotNull":352,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":172,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":24,"org.easymock.tests2.UsageTest.defaultResetToNice":374,"org.easymock.samples.ExampleTest.voteAgainstRemovals":56,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":78,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":450,"org.easymock.tests.UsageVarargTest.differentLength":276,"org.easymock.tests2.CallbackTest.callback":46,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":426,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":188,"org.easymock.tests.UsageTest.openCallCountByLastCall":258,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":331,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":283,"org.easymock.tests.UsageCallCountTest.tooFewCalls":247,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":119,"org.easymock.tests.UsageThrowableTest.throwCheckedException":21,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":425,"org.easymock.tests.MockingTest.testStrictClassMocking":154,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":121,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":262,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":118,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":0,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":120,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":381,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":409,"org.easymock.tests2.NameTest.nameForNiceMock":387,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":357,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":404,"org.easymock.tests2.DependencyTest.testInterfaceMocking":97,"org.easymock.samples.ExampleTest.addDocument":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":208,"org.easymock.tests2.DelegateToTest.testStubDelegate":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":212,"org.easymock.tests2.AnswerTest.stubAnswer":44,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":29,"org.easymock.tests.UsageVarargTest.varargLongAccepted":278,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":317,"org.easymock.tests.UsageExpectAndReturnTest.floatType":69,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":81,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":105,"org.easymock.tests2.ConstraintsToStringTest.orToString":429,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":137,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":447,"org.easymock.tests.UsageThrowableTest.noUpperLimit":19,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":310,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":347,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":332,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":168,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":8,"org.easymock.tests2.SerializationTest.test":363,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":441,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":148,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":68,"org.easymock.tests2.UsageConstraintsTest.testSame":337,"org.easymock.samples.SupportTest.addDocument":230,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":199,"org.easymock.tests.GenericTest.testPackageScope":139,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":237,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":446,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":392,"org.easymock.tests2.NameTest.nameForMock":385,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":76,"org.easymock.tests2.UsageStrictMockTest.differentMethods":124,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":189,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":71,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":299,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":91,"org.easymock.tests2.MockedExceptionTest.testRealException":330,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":220,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":427,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":439,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":48,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":422,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":282,"org.easymock.tests2.NameTest.nameForStrictMock":386,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":181,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":382,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":110,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":171,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":150,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":38,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":100,"org.easymock.tests2.UsageStrictMockTest.range":123,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":398,"org.easymock.tests2.UsageConstraintsTest.lessThan":354,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":444,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":30,"org.easymock.tests2.CaptureTest.testCaptureRightOne":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":203,"org.easymock.tests2.UsageConstraintsTest.testOr":37,"org.easymock.tests.UsageRangeTest.combination":88,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":107,"org.easymock.tests.UsageTest.wrongArguments":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":200,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":159,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":72,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":77,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":152,"org.easymock.tests.UsageVarargTest.varargShortAccepted":277,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":412,"org.easymock.tests2.UsageConstraintsTest.cmpTo":340,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":379,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":402,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":373,"org.easymock.tests2.CaptureTest.testCaptureFromStub":360,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":414,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":180,"org.easymock.tests.UsageTest.unexpectedCallWithArray":131,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":408,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":133,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":248,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":270,"org.easymock.tests2.CaptureTest.testCapture":12,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":316,"org.easymock.tests2.UsageConstraintsTest.constraints":333,"org.easymock.samples.ExampleTest.addAndChangeDocument":233,"org.easymock.tests2.ConstraintsToStringTest.notToString":431,"org.easymock.tests.UsageStrictMockTest.testVerify":318,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":229,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":315,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":9,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":85,"org.easymock.tests.LimitationsTest.abstractClass":143,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":267,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":86,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":311,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":34,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":272}}]
