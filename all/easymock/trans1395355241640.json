[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:252","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.And:49","sourceCode":"java.util.Iterator<org.easymock.IArgumentMatcher>.next().appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"failures":[38,39,40,41,42,43,44,45],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,45,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,2,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,3,4,0,150,151,5,6,7,8,152,153,154,155,156,9,157,10,11,158,12,13,159,160,161,162,163,14,15,16,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,17,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,18,244,245,246,247,248,19,20,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,21,273,22,23,24,25,26,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,27,28,29,30,31,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,32,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,33,34,430,431,35,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,36,37,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:25","sourceCode":"new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:139","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[87,97,100,232,238],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.JavaProxyFactory:34","sourceCode":"return java.lang.reflect.Proxy.java.lang.reflect.Proxy.getInvocationHandler(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:165","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory().getInvocationHandler(java.lang.Object)","type":"CtReturnImpl"},"failures":[352],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"failures":[243,310,317,362,431],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:288","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[121,297],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:58","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.IllegalArgumentException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:261","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[304,306,315,316,318,413,414,415,458],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[488],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:34","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"result"}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"failures":[198],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[83,84,85,496],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:91","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:44","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Void.java.lang.Class<java.lang.Void>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.UnorderedBehavior:29","sourceCode":"new java.util.ArrayList<org.easymock.internal.ExpectedInvocationAndResults>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1815","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EndsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[4],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[2,127,128,138,245,246,247,248,264,266,267,32,380,381,417,472,473,474],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"failures":[388,497,498],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[243,431],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"toStringMethod","equalsMethod":"toStringMethod"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:249","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"cls"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[159],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[121],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String)","type":"CtInvocationImpl"},"failures":[2,126,127,138,139,145,146,245,246,247,248,499,500,501,377,32,379,380,417,419,422,423,425,472,473,474],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:231","sourceCode":"if (org.easymock.internal.InjectionTarget.accepts(org.easymock.internal.Injection)) {\n    if (org.easymock.internal.Injection != null) {\n        throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks can be assigned to \\'%s\\': %s and %s\", org.easymock.internal.InjectionTarget.getTargetField(), org.easymock.internal.Injection.getMock(), org.easymock.internal.Injection.getMock()));\n    } \n    org.easymock.internal.Injection = org.easymock.internal.Injection;\n} ","type":"CtIfImpl"},"failures":[105,111,218,224,249,251],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[502,503,377,418,504,505],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[152,153],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:26","sourceCode":"java.lang.Class.java.lang.Class.forName(\"dalvik.system.PathClassLoader\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:63","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class.java.lang.Class.forName(java.lang.String, true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","type":"CtLocalVariableImpl"},"failures":[83,84,85,496],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[136,143,18,285,298,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,344,345,346,347,348,349,416,421,431,446,471,473],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:612","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:127","sourceCode":"java.lang.Object[][int] = java.lang.Object","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:93","sourceCode":"while (java.lang.Class<?> != null) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    java.lang.reflect.Method java.lang.reflect.Method = null;\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if (java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n            continue;\n        } \n        if (java.lang.reflect.Method.isBridge()) {\n            continue;\n        } \n        if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n            if (java.lang.Class<?>[] == null) {\n                if (java.lang.reflect.Method != null) {\n                    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n                } \n                java.lang.reflect.Method = java.lang.reflect.Method;\n            } else if (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n                return java.lang.reflect.Method;\n            } \n        } \n    }\n    if (java.lang.reflect.Method != null) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:412","sourceCode":"while ((!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) && (java.lang.Class<?> != null)) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.isInterface() ? java.lang.Class<?>.getMethods() : java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n            return java.lang.reflect.Method;\n        } \n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"name":"name","searchType":"searchType","paramTypes":"paramTypes","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":150,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":416,"org.easymock.tests2.UsageTest.argumentsOrdered":146,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":80,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":111,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":305,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":141,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":249,"org.easymock.tests2.DelegateToTest.testReturnException":118,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":443,"org.easymock.tests.MockingTest.testPartialClassMocking":353,"org.easymock.tests.MockClassControlTest.testToString":276,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":244,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":458,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":102,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":177,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":173,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":322,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":499,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":195,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":39,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":153,"org.easymock.tests2.UsageTest.wrongArguments":139,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":33,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":229,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":462,"org.easymock.samples.ExampleTest.answerVsDelegate":255,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":493,"org.easymock.tests2.UsageConstraintsTest.testNull":6,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":358,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":89,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":79,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":281,"org.easymock.tests2.CaptureTest.testPrimitive":204,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":35,"org.easymock.tests.UsageTest.moreThanOneArgument":417,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":341,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":88,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":24,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":436,"org.easymock.tests.UsageTest.argumentsOrdered":423,"org.easymock.tests.UsageVarargTest.varargIntAccepted":478,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":310,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":27,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":43,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":53,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":131,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":115,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":60,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":297,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":31,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":223,"org.easymock.tests.ReplayStateInvalidUsageTest.times":368,"org.easymock.tests2.DependencyTest.testClassMocking":192,"org.easymock.tests2.AnswerTest.answer":46,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":154,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":312,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":217,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":490,"org.easymock.tests2.CaptureTest.testAnd":201,"org.easymock.tests2.UsageTest.strictResetToDefault":137,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":97,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":57,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":23,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":428,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":74,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":440,"org.easymock.tests2.DelegateToTest.testDelegate":122,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":337,"org.easymock.tests.LimitationsTest.mockFinalMethod":435,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":446,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":468,"org.easymock.tests2.DependencyTest.testClassMockingSupport":193,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":372,"org.easymock.tests2.CaptureTest.testCapture1_2446744":205,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":93,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":335,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":215,"org.easymock.tests.UsageThrowableTest.throwError":342,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":362,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":492,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":441,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":116,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":191,"org.easymock.samples.PartialClassMockTest.testGetArea":250,"org.easymock.tests.MockingTest.testInterfaceMocking":355,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":363,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":28,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":414,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":456,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":178,"org.easymock.tests2.UsageTest.niceToStrict":140,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":323,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":295,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":59,"org.easymock.tests2.MockBuilderTest.testCreateMock":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":186,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":226,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":502,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":331,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":75,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":489,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":321,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":264,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":460,"org.easymock.tests.UsageOverloadedMethodTest.overloading":470,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":182,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":10,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":285,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":469,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":403,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":497,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":157,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":210,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":479,"org.easymock.tests2.EasyMockSupportClassTest.testAll":170,"org.easymock.tests.MockClassControlTest.testEquals":280,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":292,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":339,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":466,"org.easymock.tests2.CaptureTest.testCaptureAll":202,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":216,"org.easymock.tests.MockNameTest.defaultName":412,"org.easymock.tests2.UsageConstraintsTest.testMatches":11,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":25,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":360,"org.easymock.samples.ExampleTest.voteForRemovals":259,"org.easymock.tests.UsageVarargTest.allKinds":487,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":472,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":467,"org.easymock.samples.BasicClassMockTest.testPrintContent":263,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":348,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":123,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":447,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":121,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":112,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":390,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":44,"org.easymock.tests2.UsageConstraintsTest.greaterThan":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":171,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":427,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":100,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":391,"org.easymock.samples.ExampleTest.voteForRemoval":256,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":101,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":197,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":494,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":132,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":92,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":136,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":289,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":65,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":302,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":72,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":168,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":442,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":117,"org.easymock.tests2.CaptureTest.testCaptureFirst":213,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":301,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":73,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":148,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":288,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":399,"org.easymock.tests2.UsageTest.moreThanOneArgument":138,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":199,"org.easymock.tests2.CaptureTest.testCapture2_2446744":212,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":67,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":313,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":486,"org.easymock.tests.GenericTest.testBridgedEquals":294,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":271,"org.easymock.tests.UsageExpectAndReturnTest.longType":395,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":464,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":70,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":340,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":475,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":162,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":338,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":449,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":22,"org.easymock.tests.UsageCallCountTest.tooManyCalls":272,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":187,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":400,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":228,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":327,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":347,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":231,"org.easymock.tests.MockingTest.testNiceClassMocking":359,"org.easymock.tests.MockingTest.testClassMocking":351,"org.easymock.tests2.UsageConstraintsTest.testContains":9,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":265,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":241,"org.easymock.tests2.UsageConstraintsTest.testFind":5,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":471,"org.easymock.tests.MockTypeTest.fromEasyMockClass":491,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":166,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":375,"org.easymock.tests.UsageExpectAndReturnTest.object":402,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":94,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":227,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":78,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":481,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":40,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":454,"org.easymock.tests.UsageTest.exactCallCountByLastCall":424,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":21,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":300,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":457,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":437,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":103,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":476,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":408,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":284,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":106,"org.easymock.tests.MockClassControlTest.testHashCode":279,"org.easymock.tests2.EasyMockSupportTest.testVerify":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":180,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":438,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":282,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":320,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":214,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":149,"org.easymock.tests.UsageVarargTest.varargCharAccepted":480,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":383,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":124,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":318,"org.easymock.tests2.UsageTest.openCallCountByLastCall":142,"org.easymock.tests.DefaultClassInstantiatorTest.object":384,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":81,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":319,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":452,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":181,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":329,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":345,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":221,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":105,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":98,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":278,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":328,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":409,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":448,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":189,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":277,"org.easymock.tests2.UsageTest.resumeIfFailure":147,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":488,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":130,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":445,"org.easymock.tests2.StubTest.stubWithReturnValue":18,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":62,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":401,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":163,"org.easymock.tests2.SerializationTest.testAllMockedMethod":85,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":311,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":503,"org.easymock.samples.SupportTest.voteForRemovals":253,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":290,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":108,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":334,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":496,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":317,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":47,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":459,"org.easymock.tests.UsageExpectAndThrowTest.object":332,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":160,"org.easymock.tests2.DelegateToTest.testWrongClass":120,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":36,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":37,"org.easymock.samples.ConstructorCalledMockTest.testTax":19,"org.easymock.tests.UsageStrictMockTest.range":379,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":134,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":77,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":230,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":333,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":61,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":422,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":167,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":370,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":461,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":504,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":415,"org.easymock.tests2.CaptureTest.testCaptureNone":209,"org.easymock.tests.UsageUnorderedTest.message":425,"org.easymock.tests.UsageVerifyTest.twoReturns":474,"org.easymock.tests.UsageVarargTest.varargByteAccepted":485,"org.easymock.tests2.ThreadingTest.testThreadSafe":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":184,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":269,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":455,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":262,"org.easymock.tests2.CaptureTest.testCapture_2617107":203,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":374,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":431,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":315,"org.easymock.tests2.UsageConstraintsTest.any":155,"org.easymock.tests2.StubTest.stub":243,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":367,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":450,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":444,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":316,"org.easymock.tests.UsageExpectAndThrowTest.longType":325,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":388,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":366,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":125,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":110,"org.easymock.tests2.SerializationTest.testClass":83,"org.easymock.tests.LimitationsTest.mockNativeMethod":434,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":411,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":293,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":220,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":128,"org.easymock.tests2.NameTest.nameForMocksControl":248,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":222,"org.easymock.tests2.MockedExceptionTest.testMockedException":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":172,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":421,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":165,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":326,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":356,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":86,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":63,"org.easymock.tests.MockingTest.testNicePartialClassMocking":354,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":91,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":38,"org.easymock.tests2.CaptureTest.testCaptureLast":208,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":218,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":373,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":152,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":237,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":161,"org.easymock.tests.MockingTest.testTwoMocks":352,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":238,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":392,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":330,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":145,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":15,"org.easymock.samples.ExampleTest.removeNonExistingDocument":260,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":225,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":364,"org.easymock.tests.UsageStrictMockTest.differentMethods":380,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":107,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":386,"org.easymock.tests2.ConstraintsToStringTest.andToString":1,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":198,"org.easymock.tests2.MockBuilderTest.testCreateMockString":69,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":174,"org.easymock.tests.UsageExpectAndThrowTest.floatType":324,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":169,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":49,"org.easymock.tests.UsageVerifyTest.twoThrows":473,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":104,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":183,"org.easymock.samples.ExampleTest.voteAgainstRemoval":257,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":413,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":306,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":99,"org.easymock.tests.LimitationsTest.privateConstructor":433,"org.easymock.tests2.UsageConstraintsTest.testNotNull":14,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":239,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":349,"org.easymock.tests2.UsageTest.defaultResetToNice":144,"org.easymock.samples.ExampleTest.voteAgainstRemovals":254,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":407,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":307,"org.easymock.tests.UsageVarargTest.differentLength":482,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":219,"org.easymock.tests2.CallbackTest.callback":52,"org.easymock.tests2.UsageConstraintsTest.equals":151,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":95,"org.easymock.tests.UsageTest.openCallCountByLastCall":420,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":3,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":430,"org.easymock.tests.UsageCallCountTest.tooFewCalls":267,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":233,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":463,"org.easymock.tests.UsageThrowableTest.throwCheckedException":346,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":505,"org.easymock.tests.MockingTest.testStrictClassMocking":350,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":236,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":273,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":224,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":232,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":369,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":235,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":51,"org.easymock.tests.ObjectMethodsTest.testHashCode":453,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":42,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":200,"org.easymock.tests2.NameTest.nameForNiceMock":247,"org.easymock.tests2.DependencyTest.testInterfaceMocking":194,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":41,"org.easymock.samples.ExampleTest.addDocument":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":190,"org.easymock.tests2.DelegateToTest.testStubDelegate":119,"org.easymock.tests2.AnswerTest.stubAnswer":50,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":32,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":64,"org.easymock.tests.UsageVarargTest.varargLongAccepted":484,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":381,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":304,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":410,"org.easymock.tests.UsageExpectAndReturnTest.floatType":394,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":45,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":20,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":114,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":13,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":286,"org.easymock.tests.UsageThrowableTest.noUpperLimit":343,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":4,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":129,"org.easymock.tests2.SerializationTest.test":84,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":206,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":498,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":385,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":393,"org.easymock.tests2.UsageConstraintsTest.testSame":7,"org.easymock.samples.SupportTest.addDocument":252,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":234,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":175,"org.easymock.tests.GenericTest.testPackageScope":291,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":439,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":299,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":113,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":357,"org.easymock.tests2.NameTest.nameForMock":245,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":404,"org.easymock.tests2.UsageStrictMockTest.differentMethods":127,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":68,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":96,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":396,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":336,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":451,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":429,"org.easymock.tests2.MockedExceptionTest.testRealException":242,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":495,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":135,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":309,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":2,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":308,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":34,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":371,"org.easymock.tests2.NameTest.nameForStrictMock":246,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":58,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":164,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":90,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":133,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":500,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":387,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":159,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":55,"org.easymock.tests2.UsageStrictMockTest.range":126,"org.easymock.tests2.UsageConstraintsTest.lessThan":16,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":109,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":71,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":303,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":179,"org.easymock.tests2.CaptureTest.testCaptureRightOne":211,"org.easymock.tests2.UsageConstraintsTest.testOr":8,"org.easymock.tests.UsageRangeTest.combination":426,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":87,"org.easymock.tests.UsageTest.wrongArguments":419,"org.easymock.tests2.MockBuilderTest.testWithConstructor":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":176,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":275,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":397,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":405,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":296,"org.easymock.tests.UsageVarargTest.varargShortAccepted":483,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":389,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":270,"org.easymock.tests2.UsageConstraintsTest.cmpTo":156,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":48,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":298,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":143,"org.easymock.tests2.CaptureTest.testCaptureFromStub":17,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":361,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":56,"org.easymock.tests.UsageTest.unexpectedCallWithArray":418,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":377,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":268,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":406,"org.easymock.tests2.UsageConstraintsTest.constraints":0,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":378,"org.easymock.samples.ExampleTest.addAndChangeDocument":261,"org.easymock.tests.UsageStrictMockTest.testVerify":382,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":251,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":376,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":465,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":207,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":29,"org.easymock.tests.LimitationsTest.abstractClass":432,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":398,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":30,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":287,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":501,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":477,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":76}}]
