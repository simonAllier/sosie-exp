[{"position":"org.easymock.internal.MockBuilder:235","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[15,16],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:346","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[17,18,19,20],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[21],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[22],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[23],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"this.java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[24,25,26,27,28,29,30,31,32,21,33,34,35,36,37,38,39,40,41,42,43,44,45,46],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","toStringMethod":"hashCodeMethod","this":"this"}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"failures":[47,48,49,50],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[51,52,53],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:45","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>, java.lang.Boolean.java.lang.Boolean)","type":"CtInvocationImpl"},"failures":[54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[24,81,82,34],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[83],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:105","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"failures":[24,84,25,26,85,81,27,28,29,30,86,31,9,82,87,88,34,89,90,91,92,93,45,46],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2170","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[94,95,96],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[9,97,98,99],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[47,48,49,50],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"control":"lastControl","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[100,101,102,103,104,105],"status":-1,"binaryOperator":"int < (java.lang.reflect.Array.getLength(java.lang.Object))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:44","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n        if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n            org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n        } \n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[100,101,102,103,104,105],"status":-1,"binaryOperator":"int < (java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[106,107,108,22,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,85,30,31,9,97,131,132,133,134,135,136,47,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,55,155,11,156,57,157,58,59,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,35,36,37,38,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,60,194,195,64,196,197,198,199,200,201,202,203,204,65,205,206,207,208,209,66,67,68,210,211,212,213,214,215,216,217,218,219,220,221,104,71,222,72,73,223,224,225,105,226,227,228,229,230,231,232,233,74,234,235,236,237,238,239,240,76,241,242,243,244,245,77,78,79,246,247,248,249,250,251,252,253,254,255,256,257,80,258,259,83,260,261,262],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[218,252],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.Capture:82","failures":[263,142,144,145,146,147,148,149,150,264,151,152,154],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[131,133,265,134,266,267,268,269,270],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[271,272,273,274,106,107,108,22,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,24,85,81,9,97,98,131,132,133,265,134,266,21,88,54,275,276,277,135,278,137,138,139,141,142,143,144,145,147,148,149,279,150,151,154,55,280,155,281,282,283,284,11,285,57,59,158,160,161,163,164,23,286,170,171,172,173,174,175,176,35,36,37,38,287,177,178,288,289,179,290,291,181,187,188,189,190,191,192,193,292,293,294,295,296,297,298,299,300,301,302,303,60,61,62,63,194,64,196,199,200,201,202,203,204,65,205,206,207,208,209,66,67,68,210,211,212,213,214,215,304,305,306,307,308,309,310,216,217,219,311,312,313,314,315,316,71,73,223,317,318,225,232,233,74,234,319,235,75,320,321,322,236,237,238,239,240,76,241,242,243,244,245,77,78,79,246,247,248,249,250,251,253,254,255,256,257,80,258,259,83,260,261,262],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[121,265,164],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"position":"org.easymock.internal.LastControl:61","failures":[108,22,110,112,113,128,142,143,144,149,279,151,154,301,196,197,198],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:234","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)))","type":"CtThrowImpl"},"failures":[323,324,325,326,327,328,329,330,20,331,332,333,334,335,336,337,338,339,340,341,342,343],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:85","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object));\n} ","type":"CtIfImpl"},"failures":[344],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"hashCodeMethod","finalizeMethod":"method"}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[345,346,0,1,2,4,5,12,36,38,347],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"arg":"arg"}},{"position":"org.easymock.internal.LastControl:95","failures":[108,22,110,112,113,348,124,128,142,144,151],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[141],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[155,281,282,283,284,159,166,180,181,182,183,184,185,186,193,195,197,198,200,201,202,203,204,65,205,206,207,208,209,66,67,68,210,211,212,213,214,215,224,228,232,233,74,234,319,235,254,349],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[114,119,130,350],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[24,84,25,26,351,85,81,27,28,3,29,30,86,31,9,98,131,32,133,265,134,82,266,10,352,21,87,88,33,353,34,354,355,356,281,282,283,11,12,357,358,359,360,361,362,89,363,364,365,366,367,368,369,370,371,90,372,373,374,375,376,91,377,378,267,35,36,268,37,38,379,380,13,13,14,14,92,381,302,303,93,269,39,40,304,41,42,43,44,382,270,45,46,383,384,219,385,318,386,15,387,388,389,16,390,391,392,393,83,260,261,394],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[395,139,332],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[100,101,102,103,104,105],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:273","sourceCode":"if ((java.lang.Class<?>.getSigners()) != null) {\n    net.sf.cglib.proxy.Enhancer.setNamingPolicy(org.easymock.internal.ClassProxyFactory.net.sf.cglib.core.NamingPolicy);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"enhancer":"enhancer","toMock":"toMock"}},{"transplant":{"position":"org.easymock.internal.LastControl:95","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.util.Stack<org.easymock.IArgumentMatcher>.pop();\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[108,22,110,112,113,348,124,128,142,144,151],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"count":"count","stack":"stack"}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MockBuilder:218","failures":[85,396,3,29,31,9,10,88,34,11,12,89,90,13,14,92,381,93],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[9,97,98,99],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[397,398,399],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":22,"org.easymock.tests2.UsageTest.argumentsOrdered":168,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":332,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":164,"org.easymock.tests2.DelegateToTest.testReturnException":138,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":233,"org.easymock.tests.MockingTest.testPartialClassMocking":83,"org.easymock.tests.MockClassControlTest.testToString":41,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":34,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":340,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":366,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":89,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":200,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":56,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":114,"org.easymock.tests2.UsageTest.wrongArguments":162,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":64,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":321,"org.easymock.samples.ExampleTest.answerVsDelegate":177,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":46,"org.easymock.tests2.UsageConstraintsTest.testNull":110,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":133,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":270,"org.easymock.tests2.CaptureTest.testPrimitive":145,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":199,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":215,"org.easymock.tests.UsageTest.moreThanOneArgument":225,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":132,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":80,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":17,"org.easymock.tests.UsageTest.argumentsOrdered":230,"org.easymock.tests.UsageVarargTest.varargIntAccepted":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":337,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":187,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":24,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":81,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":325,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":191,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":398,"org.easymock.tests2.AnswerTest.answer":170,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":348,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":338,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":277,"org.easymock.tests2.CaptureTest.testAnd":142,"org.easymock.tests2.UsageTest.strictResetToDefault":160,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":1,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":21,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":257,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":62,"org.easymock.tests2.DelegateToTest.testDelegate":141,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":19,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":211,"org.easymock.tests.LimitationsTest.mockFinalMethod":385,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":319,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":315,"org.easymock.tests2.CaptureTest.testCapture1_2446744":146,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":68,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":275,"org.easymock.tests.UsageThrowableTest.throwError":180,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":259,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":6,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":378,"org.easymock.samples.PartialClassMockTest.testGetArea":92,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":188,"org.easymock.tests2.UsageTest.niceToStrict":163,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":39,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":367,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":323,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":85,"org.easymock.tests2.MockBuilderTest.testCreateMock":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":374,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":100,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":208,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":305,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":75,"org.easymock.tests.UsageOverloadedMethodTest.overloading":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":371,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":376,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":119,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":349,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":77,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":118,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":150,"org.easymock.tests2.EasyMockSupportClassTest.testAll":360,"org.easymock.tests.MockClassControlTest.testEquals":382,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":303,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":213,"org.easymock.tests2.CaptureTest.testCaptureAll":143,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":276,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":313,"org.easymock.tests2.UsageConstraintsTest.testMatches":120,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":258,"org.easymock.samples.ExampleTest.voteForRemovals":179,"org.easymock.tests.UsageVarargTest.allKinds":301,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":253,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":314,"org.easymock.samples.BasicClassMockTest.testPrintContent":380,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":185,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":156,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":235,"org.easymock.tests2.UsageConstraintsTest.greaterThan":122,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":361,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":61,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":33,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":390,"org.easymock.samples.ExampleTest.voteForRemoval":178,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":278,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":353,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":82,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":159,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":318,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":3,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":330,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":181,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":358,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":232,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":395,"org.easymock.tests2.CaptureTest.testCaptureFirst":154,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":329,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":169,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":242,"org.easymock.tests2.UsageTest.moreThanOneArgument":161,"org.easymock.tests2.CaptureTest.testCapture2_2446744":153,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":47,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":30,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":339,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":300,"org.easymock.tests.GenericTest.testBridgedEquals":269,"org.easymock.tests.UsageExpectAndReturnTest.longType":239,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":311,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":86,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":214,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":212,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":52,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":256,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":399,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":375,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":243,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":65,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":184,"org.easymock.tests.MockingTest.testNiceClassMocking":394,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":35,"org.easymock.tests.MockingTest.testClassMocking":392,"org.easymock.tests2.UsageConstraintsTest.testContains":117,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":84,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":306,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":283,"org.easymock.tests2.UsageConstraintsTest.testFind":109,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":193,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":175,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":221,"org.easymock.tests.UsageExpectAndReturnTest.object":245,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":266,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":296,"org.easymock.tests.UsageTest.exactCallCountByLastCall":231,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":194,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":328,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":48,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":12,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":248,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":292,"org.easymock.tests.MockClassControlTest.testHashCode":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":369,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":397,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":54,"org.easymock.tests.UsageVarargTest.varargCharAccepted":295,"org.easymock.tests2.CaptureTest.testCaptureMultiple":263,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":285,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":343,"org.easymock.tests2.UsageTest.openCallCountByLastCall":165,"org.easymock.tests.DefaultClassInstantiatorTest.object":386,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":370,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":182,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":43,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":87,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":205,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":249,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":51,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":91,"org.easymock.tests2.UsageTest.resumeIfFailure":286,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":45,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":234,"org.easymock.tests2.StubTest.stubWithReturnValue":155,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":2,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":127,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":244,"org.easymock.tests2.SerializationTest.testAllMockedMethod":98,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":69,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":8,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":101,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":381,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":67,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":99,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":70,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":49,"org.easymock.tests.UsageExpectAndThrowTest.object":209,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":125,"org.easymock.tests2.DelegateToTest.testWrongClass":140,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":216,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":217,"org.easymock.samples.ConstructorCalledMockTest.testTax":13,"org.easymock.tests.UsageStrictMockTest.range":72,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":267,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":66,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":27,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":357,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":320,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":102,"org.easymock.tests2.CaptureTest.testCaptureNone":279,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":94,"org.easymock.tests.UsageUnorderedTest.message":220,"org.easymock.tests.UsageVerifyTest.twoReturns":255,"org.easymock.tests.UsageVarargTest.varargByteAccepted":299,"org.easymock.tests2.ThreadingTest.testThreadSafe":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":372,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":310,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":379,"org.easymock.tests2.CaptureTest.testCapture_2617107":144,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":341,"org.easymock.tests2.UsageConstraintsTest.any":115,"org.easymock.tests2.StubTest.stub":280,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":53,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":74,"org.easymock.tests.UsageExpectAndThrowTest.longType":203,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":342,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":389,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":157,"org.easymock.tests2.SerializationTest.testClass":9,"org.easymock.tests.LimitationsTest.mockNativeMethod":219,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":93,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":251,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":158,"org.easymock.tests2.NameTest.nameForMocksControl":274,"org.easymock.tests2.MockedExceptionTest.testMockedException":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":362,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":228,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":204,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":261,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":131,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":28,"org.easymock.tests.MockingTest.testNicePartialClassMocking":260,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":134,"org.easymock.tests2.CaptureTest.testCaptureLast":149,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":252,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":113,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":38,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":126,"org.easymock.tests.MockingTest.testTwoMocks":393,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":347,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":236,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":207,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":167,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":129,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":96,"org.easymock.tests.UsageStrictMockTest.differentMethods":73,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":218,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":387,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":95,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":136,"org.easymock.tests2.MockBuilderTest.testCreateMockString":31,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":40,"org.easymock.tests.UsageExpectAndThrowTest.floatType":202,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":363,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":359,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":171,"org.easymock.tests.UsageVerifyTest.twoThrows":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":90,"org.easymock.samples.ExampleTest.voteAgainstRemoval":288,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":333,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":88,"org.easymock.tests.LimitationsTest.privateConstructor":384,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":346,"org.easymock.tests2.UsageConstraintsTest.testNotNull":128,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":186,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":281,"org.easymock.tests2.UsageTest.defaultResetToNice":23,"org.easymock.samples.ExampleTest.voteAgainstRemovals":287,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":247,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":334,"org.easymock.tests2.CallbackTest.callback":176,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":10,"org.easymock.tests.UsageTest.openCallCountByLastCall":227,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":106,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":197,"org.easymock.tests.UsageCallCountTest.tooFewCalls":308,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":268,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":322,"org.easymock.tests.UsageThrowableTest.throwCheckedException":183,"org.easymock.tests.MockingTest.testStrictClassMocking":391,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":103,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":37,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":195,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":36,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":173,"org.easymock.tests.ObjectMethodsTest.testHashCode":344,"org.easymock.tests2.CompareToTest.testGreateOrEqual":350,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":137,"org.easymock.tests2.NameTest.nameForNiceMock":273,"org.easymock.tests2.DependencyTest.testInterfaceMocking":55,"org.easymock.samples.ExampleTest.addDocument":289,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":373,"org.easymock.tests2.DelegateToTest.testStubDelegate":139,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":377,"org.easymock.tests2.AnswerTest.stubAnswer":172,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":71,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":396,"org.easymock.tests.UsageVarargTest.varargLongAccepted":298,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":331,"org.easymock.tests.UsageExpectAndReturnTest.floatType":238,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":250,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":11,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":14,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":123,"org.easymock.tests.UsageThrowableTest.noUpperLimit":291,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":107,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":354,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":147,"org.easymock.tests2.SerializationTest.test":97,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":15,"org.easymock.tests2.UsageConstraintsTest.testSame":111,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":237,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":364,"org.easymock.tests.GenericTest.testPackageScope":302,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":327,"org.easymock.tests2.NameTest.nameForMock":271,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":78,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":5,"org.easymock.tests2.UsageStrictMockTest.differentMethods":59,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":352,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":240,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":210,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":63,"org.easymock.tests2.MockedExceptionTest.testRealException":284,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":336,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":7,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":57,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":335,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":196,"org.easymock.tests2.NameTest.nameForStrictMock":272,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":351,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":174,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":265,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":355,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":388,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":124,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":25,"org.easymock.tests2.UsageStrictMockTest.range":58,"org.easymock.tests2.UsageConstraintsTest.lessThan":130,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":20,"org.easymock.tests2.CaptureTest.testCaptureRightOne":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":368,"org.easymock.tests2.UsageConstraintsTest.testOr":112,"org.easymock.tests.UsageRangeTest.combination":60,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":32,"org.easymock.tests.UsageTest.wrongArguments":226,"org.easymock.tests2.MockBuilderTest.testWithConstructor":0,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":365,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":304,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":76,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":79,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":324,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":16,"org.easymock.tests.UsageVarargTest.varargShortAccepted":297,"org.easymock.tests2.UsageConstraintsTest.cmpTo":116,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":326,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":166,"org.easymock.tests2.CaptureTest.testCaptureFromStub":152,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":26,"org.easymock.tests.UsageTest.unexpectedCallWithArray":105,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":104,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":309,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":4,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":246,"org.easymock.tests2.CaptureTest.testCapture":264,"org.easymock.tests2.UsageConstraintsTest.constraints":108,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":222,"org.easymock.samples.ExampleTest.addAndChangeDocument":290,"org.easymock.tests.UsageStrictMockTest.testVerify":317,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":316,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":312,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":148,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":189,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":356,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":241,"org.easymock.tests.LimitationsTest.abstractClass":383,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":190,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":262,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":293}}]
