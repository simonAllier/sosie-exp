[{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[0],"status":-1,"binaryOperator":"(\"eq(\" + (java.lang.Number))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:173","failures":[1],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[2],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:213","failures":[3,4],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[5,6,7,8,9],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[56,57,58],"status":-1,"binaryOperator":"int == 0","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[59,60,61,62,63,64],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:183","failures":[65,66,11,67,68,69,70,71,72,73,74,12,75,76,13,77,78,79,14,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,42,132,43,44,45,46,47,48,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,51,178,179,180,181,182,183,184,185,53,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,57,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,54,219,220,221,222,223,55,224,225,226,227,1,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:180","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[250,218],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,129,130,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[167,169,176,192,193,195,197,198,251,208,213],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[3,4],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if (org.easymock.ConstructorArgs != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[252,253,254,255,256,257,159,163,258,259,260,261,262,263,264],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[65,10,66,11,67,265,266,267,268,269,68,270,69,59,70,71,72,73,74,12,75,60,271,76,13,272,273,77,78,274,79,14,275,276,277,278,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,279,105,106,107,108,109,110,111,112,113,114,115,280,281,282,283,284,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,116,117,118,119,120,121,122,123,124,285,125,126,127,128,129,130,131,286,287,41,288,42,132,43,44,45,46,47,48,289,133,134,135,136,137,138,139,140,141,142,290,291,143,144,145,146,147,148,149,150,151,152,153,292,154,155,293,156,294,56,295,296,297,298,157,158,159,160,161,162,163,299,164,165,166,167,168,169,170,300,171,172,173,174,175,176,301,302,177,49,50,51,52,178,303,179,180,181,182,183,184,185,53,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,57,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,304,305,216,306,217,218,307,308,309,54,219,220,310,221,222,223,55,311,312,313,314,224,225,226,227,1,228,229,230,315,232,233,234,235,236,237,316,238,239,240,241,317,318,242,243,244,245,246,247,248,249,319,320,321,322],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1789","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Matches(java.lang.String))","type":"CtInvocationImpl"},"failures":[204],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:138","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[261,323,226,263],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","sourceCode":"return ((org.easymock.internal.ExpectedInvocation.toString()) + \": \") + (org.easymock.internal.Results.toString())","type":"CtReturnImpl"},"failures":[66,11,67,59,70,72,73,75,271,272,273,324,136,180,182,183,220,310,312,313,325,326,327,328],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[329,330,1],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:44","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n        if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n            org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n        } \n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:47","sourceCode":"this.T = T","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"potentialValue":"potentialValue"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[208,209],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[331],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1319","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[193],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1135","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[202],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:246","sourceCode":"final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:111","sourceCode":"final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.createTypeVariableMap(java.lang.reflect.Method.getDeclaringClass())","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[332,247,248,249],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:55","sourceCode":"try {\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object);\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)));\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[68,78,333,334,335,336,337,338,339,340,341,113,114,115,342,289,133,343,4,250,344,137,138,139,290,290,291,291,153,292,155,293,156,294,56,295,296,297,298,345,157,158,159,160,162,163,299,164,165,166,51,304,305,346,216,306,217,218,307,308,309,226,247,249],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[286,145,178,186,187,189,235,236],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:84","sourceCode":"java.lang.Object[] = new java.lang.Object[0]","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:89","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]));\n}","type":"CtForImpl"},"failures":[11,67,59,72,60,271,272,273,347,288,136,182,310,312,313],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arguments":"arguments"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:113","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[293,205,222],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1191","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:813","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1976","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[348,349,350,351,352,353],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:58","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>, java.lang.Boolean.java.lang.Boolean)","type":"CtInvocationImpl"},"failures":[267,70,72,73,85,91,92,93,110,354,111,112,127,151,152,292,293,56,296,297,298,180,182,183,216],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Invocation:126","sourceCode":"if (java.lang.Object != java.lang.Object) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"otherArgument":"actual","myArgument":"actual"}},{"transplant":{"position":"org.easymock.internal.LastControl:51","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[65,10,355,356,357,66,11,67,265,266,267,268,269,358,68,359,360,70,72,73,361,362,363,364,365,366,12,75,76,13,77,78,274,79,14,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,110,354,111,112,113,114,115,367,368,369,370,371,372,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,116,117,118,119,120,121,373,127,128,129,130,131,286,287,41,324,42,132,43,44,45,46,47,48,289,343,134,135,136,139,142,290,290,291,291,144,145,146,147,149,150,151,152,153,292,154,155,293,156,56,296,297,298,157,158,159,160,161,162,163,299,164,165,166,167,168,170,300,173,174,175,176,301,302,177,49,50,51,52,178,180,182,183,185,53,186,374,375,187,188,189,190,191,192,193,194,195,196,197,198,199,200,57,201,202,203,204,205,206,207,208,209,210,212,213,214,215,305,216,217,218,308,54,219,220,221,223,55,311,314,224,225,226,330,227,1,228,376,229,230,315,231,232,233,234,235,236,237,316,238,239,240,241,317,318,242,243,244,245,247,248],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Matches:40","failures":[377],"status":-1,"binaryOperator":"((\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":193,"org.easymock.tests2.UsageTest.argumentsOrdered":313,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":12,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":244,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":38,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":329,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":222,"org.easymock.tests2.StubTest.stubWithReturnValue":53,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":261,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":212,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":89,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":143,"org.easymock.tests2.SerializationTest.testAllMockedMethod":249,"org.easymock.tests2.DelegateToTest.testReturnException":227,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":359,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":36,"org.easymock.tests.MockingTest.testPartialClassMocking":113,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":64,"org.easymock.samples.SupportTest.voteForRemovals":142,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":3,"org.easymock.tests.MockClassControlTest.testToString":335,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":358,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":345,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":27,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":332,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":360,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":15,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":164,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":374,"org.easymock.tests.UsageExpectAndThrowTest.object":25,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":209,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":152,"org.easymock.tests2.DelegateToTest.testWrongClass":228,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":134,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":135,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":199,"org.easymock.tests2.UsageTest.wrongArguments":310,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":127,"org.easymock.samples.ConstructorCalledMockTest.testTax":290,"org.easymock.tests.UsageStrictMockTest.range":72,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":277,"org.easymock.samples.ExampleTest.answerVsDelegate":145,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":318,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":344,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":157,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":254,"org.easymock.tests2.UsageConstraintsTest.testNull":195,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":26,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":155,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":340,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":243,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":217,"org.easymock.tests2.CaptureTest.testPrimitive":170,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":131,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":272,"org.easymock.tests.UsageTest.moreThanOneArgument":75,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":34,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":276,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":154,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":267,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":61,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":357,"org.easymock.tests2.CaptureTest.testCaptureNone":174,"org.easymock.tests.UsageUnorderedTest.message":136,"org.easymock.tests.UsageVerifyTest.twoReturns":67,"org.easymock.tests.UsageVarargTest.varargByteAccepted":107,"org.easymock.tests2.ThreadingTest.testThreadSafe":230,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":361,"org.easymock.tests.UsageTest.argumentsOrdered":273,"org.easymock.tests.UsageVarargTest.varargIntAccepted":102,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":124,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":137,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":116,"org.easymock.tests2.CaptureTest.testCapture_2617107":169,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":304,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":331,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":7,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":130,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":306,"org.easymock.tests2.UsageConstraintsTest.any":200,"org.easymock.tests2.StubTest.stub":185,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":369,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":120,"org.easymock.tests.UsageExpectAndThrowTest.longType":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":8,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":37,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":181,"org.easymock.tests2.SerializationTest.testClass":247,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":234,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":225,"org.easymock.tests.LimitationsTest.mockNativeMethod":68,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":343,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":99,"org.easymock.tests2.AnswerTest.answer":186,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":251,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":322,"org.easymock.tests2.CaptureTest.testAnd":167,"org.easymock.tests2.UsageTest.strictResetToDefault":219,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":295,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":260,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":184,"org.easymock.tests2.NameTest.nameForMocksControl":328,"org.easymock.tests2.MockedExceptionTest.testMockedException":50,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":266,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":240,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":111,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":13,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":365,"org.easymock.tests2.DelegateToTest.testDelegate":229,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":19,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":115,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":153,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":218,"org.easymock.tests.MockingTest.testNicePartialClassMocking":114,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":30,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":156,"org.easymock.tests2.CompareToTest.testCompareEqual":58,"org.easymock.tests2.CaptureTest.testCaptureLast":173,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":39,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":366,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":198,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":163,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":284,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":210,"org.easymock.tests.MockingTest.testTwoMocks":341,"org.easymock.tests2.CaptureTest.testCapture1_2446744":300,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":258,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":80,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":28,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":320,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":23,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":312,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":214,"org.easymock.tests.UsageThrowableTest.throwError":42,"org.easymock.tests.UsageStrictMockTest.differentMethods":73,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":350,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":231,"org.easymock.tests2.MockBuilderTest.testCreateMockString":309,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":333,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":269,"org.easymock.tests.UsageExpectAndThrowTest.floatType":17,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":205,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":187,"org.easymock.tests.UsageVerifyTest.twoThrows":11,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":2,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":165,"org.easymock.samples.PartialClassMockTest.testGetArea":139,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":117,"org.easymock.samples.ExampleTest.voteAgainstRemoval":147,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":356,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":355,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":6,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":297,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":342,"org.easymock.tests2.UsageTest.niceToStrict":221,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":16,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":253,"org.easymock.tests2.UsageConstraintsTest.testNotNull":213,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":49,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":48,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":216,"org.easymock.tests2.UsageTest.defaultResetToNice":311,"org.easymock.tests2.MockBuilderTest.testCreateMock":307,"org.easymock.samples.ExampleTest.voteAgainstRemovals":144,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":95,"org.easymock.tests.UsageVarargTest.differentLength":279,"org.easymock.tests2.CallbackTest.callback":178,"org.easymock.tests.UsageTest.openCallCountByLastCall":76,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":63,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":24,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":241,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":190,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":372,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":275,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":129,"org.easymock.tests.UsageCallCountTest.tooFewCalls":122,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":255,"org.easymock.tests.UsageOverloadedMethodTest.overloading":79,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":203,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":41,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":274,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":91,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":160,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":202,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":175,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":278,"org.easymock.tests.UsageThrowableTest.throwCheckedException":45,"org.easymock.tests.MockClassControlTest.testEquals":339,"org.easymock.tests2.EasyMockSupportClassTest.testAll":299,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":133,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":62,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":32,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":321,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":282,"org.easymock.tests2.CaptureTest.testCaptureAll":168,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":10,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":162,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":159,"org.easymock.tests2.UsageConstraintsTest.testMatches":204,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":161,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":189,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":268,"org.easymock.samples.ExampleTest.voteForRemovals":149,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":377,"org.easymock.tests2.NameTest.nameForNiceMock":327,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":233,"org.easymock.tests.UsageVarargTest.allKinds":109,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":66,"org.easymock.tests2.DependencyTest.testInterfaceMocking":151,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":283,"org.easymock.samples.BasicClassMockTest.testPrintContent":138,"org.easymock.samples.ExampleTest.addDocument":148,"org.easymock.tests2.DelegateToTest.testStubDelegate":1,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":47,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":303,"org.easymock.tests2.AnswerTest.stubAnswer":188,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":376,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":40,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":70,"org.easymock.tests2.UsageConstraintsTest.greaterThan":206,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":354,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":298,"org.easymock.tests.UsageVarargTest.varargLongAccepted":106,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":74,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":353,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":5,"org.easymock.samples.ExampleTest.voteForRemoval":146,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":315,"org.easymock.tests.UsageExpectAndReturnTest.floatType":82,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":98,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":294,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":226,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":291,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":207,"org.easymock.tests.UsageThrowableTest.noUpperLimit":132,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":78,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":54,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":191,"org.easymock.tests2.SerializationTest.test":248,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":171,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":349,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":238,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":43,"org.easymock.tests2.UsageConstraintsTest.testSame":196,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":81,"org.easymock.samples.SupportTest.addDocument":141,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":35,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":330,"org.easymock.tests2.CaptureTest.testCaptureFirst":177,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":239,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":224,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":288,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":87,"org.easymock.tests.GenericTest.testPackageScope":289,"org.easymock.tests2.CaptureTest.testCapture2_2446744":302,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":232,"org.easymock.tests2.UsageTest.moreThanOneArgument":220,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":364,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":308,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":108,"org.easymock.tests.GenericTest.testBridgedEquals":4,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":256,"org.easymock.tests2.NameTest.nameForMock":325,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":125,"org.easymock.tests.UsageExpectAndReturnTest.longType":83,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":280,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":237,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":92,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":33,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":373,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":211,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":262,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":31,"org.easymock.tests2.UsageStrictMockTest.differentMethods":183,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":368,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":265,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":84,"org.easymock.tests.UsageCallCountTest.tooManyCalls":126,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":29,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":112,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":121,"org.easymock.tests2.MockedExceptionTest.testRealException":52,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":88,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":323,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":20,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":180,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":46,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":128,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":158,"org.easymock.tests2.NameTest.nameForStrictMock":326,"org.easymock.tests2.UsageConstraintsTest.testContains":201,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":51,"org.easymock.tests2.UsageConstraintsTest.testFind":194,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":14,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":264,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":235,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":293,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":270,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":236,"org.easymock.tests.UsageExpectAndReturnTest.object":90,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":351,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":208,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":56,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":305,"org.easymock.tests2.UsageStrictMockTest.range":182,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":0,"org.easymock.tests2.UsageConstraintsTest.lessThan":215,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":242,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":104,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":257,"org.easymock.tests.UsageTest.exactCallCountByLastCall":77,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":65,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":316,"org.easymock.tests2.CaptureTest.testCaptureRightOne":176,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":362,"org.easymock.tests2.UsageConstraintsTest.testOr":197,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":263,"org.easymock.tests.UsageRangeTest.combination":110,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":292,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":96,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":100,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":287,"org.easymock.tests.UsageTest.wrongArguments":271,"org.easymock.tests2.MockBuilderTest.testWithConstructor":259,"org.easymock.tests.MockClassControlTest.testHashCode":338,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":334,"org.easymock.tests2.EasyMockSupportTest.testVerify":246,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":85,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":93,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":363,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":371,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":352,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":286,"org.easymock.tests.UsageVarargTest.varargShortAccepted":105,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":319,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":285,"org.easymock.tests2.UsageConstraintsTest.cmpTo":57,"org.easymock.tests.UsageVarargTest.varargCharAccepted":103,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":375,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":179,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":9,"org.easymock.tests2.UsageTest.openCallCountByLastCall":223,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":55,"org.easymock.tests.DefaultClassInstantiatorTest.object":348,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":245,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":370,"org.easymock.tests2.CaptureTest.testCaptureFromStub":301,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":346,"org.easymock.tests.UsageTest.unexpectedCallWithArray":60,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":347,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":22,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":59,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":44,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":123,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":94,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":337,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":296,"org.easymock.tests2.UsageConstraintsTest.constraints":192,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":71,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":21,"org.easymock.samples.ExampleTest.addAndChangeDocument":150,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":97,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":367,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":140,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":336,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":166,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":281,"org.easymock.tests2.UsageTest.resumeIfFailure":314,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":172,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":118,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":250,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":86,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":324,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":119,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":317,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":101}}]
