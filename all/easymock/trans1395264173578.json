[{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"paramType"}},{"position":"org.easymock.EasyMock:1319","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:182","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"failures":[12,13,14],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1013","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:32","sourceCode":"new java.util.ArrayList<java.lang.reflect.Field>(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:45","sourceCode":"java.lang.StringBuffer.append(\"[\")","type":"CtInvocationImpl"},"failures":[15,16,17,18,19,20],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[21],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[22,23,24],"status":-1,"binaryOperator":"java.lang.String == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[25],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:327","sourceCode":"return false","type":"CtReturnImpl"},"failures":[26,27,28,29],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1672","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(short[]))","type":"CtInvocationImpl"},"failures":[30],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:972","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:315","failures":[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:36","sourceCode":"try {\n    if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n        org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n    } \n    return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]));\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace();\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace();\n} catch (final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper) {\n    throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace();\n}","type":"CtTryImpl"},"failures":[74,31,75,26,27,76,77,78,79,80,32,33,81,82,83,84,15,85,86,87,88,89,90,91,34,92,93,94,35,36,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,37,118,18,119,120,38,121,122,123,124,125,126,28,29,127,128,129,130,131,132,133,134,135,136,137,138,139,39,140,141,142,143,144,145,146,147,148,40,41,42,43,44,45,149,150,151,152,153,154,155,156,157,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,179,180,180,181,182,183,184,185,186,187,188,189,190,191,192,67,193,194,0,195,196,197,1,68,198,199,200,21,201,202,69,203,204,205,206,207,70,71,72,73,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,25,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,30,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"method","finalizeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:42","sourceCode":"return false","type":"CtReturnImpl"},"failures":[307],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[308,309,125],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[310],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"m"}},{"position":"org.easymock.internal.BridgeMethodResolver:94","failures":[],"status":0,"binaryOperator":"(\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[311,303],"status":-1,"binaryOperator":"int < 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.InjectionPlan:51","failures":[312,313,314,315,316,317,318,183,319,320,321,322,323,324,325,326,327,328,329,273,330,331,332,333,334,335],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[336,138,174,234,236,237,239,240,241,306],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[337,304,305,338],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:87","sourceCode":"if ((java.util.List<java.lang.reflect.Method>.size()) == 1) {\n    java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0);\n} else {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[74,79,80,81,339,85,128,129,130,131,132,145,154,155,168,169,170,171,172,179,179,180,180,187,258,277,278,281,282,283,284,290,291,292,294,295,301,302,303],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.EasyMock:1543","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[74,76,340,341,342,343,344,77,345,79,80,32,33,81,82,83,346,15,85,86,87,88,89,90,91,34,92,93,94,35,36,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,37,118,119,120,38,121,122,123,127,128,129,130,131,132,138,139,39,140,347,348,349,350,351,352,353,354,355,141,146,147,148,44,150,151,154,155,156,157,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,158,160,161,162,163,164,173,174,175,176,356,177,178,181,312,313,357,358,359,182,183,184,185,360,187,188,189,190,191,192,67,193,194,0,195,196,197,1,68,198,199,200,21,201,202,69,204,205,206,207,72,208,209,210,211,212,213,215,216,217,220,221,222,223,224,225,226,227,228,229,230,232,234,237,238,240,241,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,259,260,261,262,263,264,265,266,267,269,270,271,272,361,273,277,278,279,280,281,282,283,284,285,286,288,289,290,30,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,338,306],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:622","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"failures":[0,1,213,362,214,215,363,219,224,364,261],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:159","failures":[179,180,4,7,365,8,366],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[367],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[77,345,368,369,370,83,371,127,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,12,388,389,357,358,390,391,193,195,71,72,392,220,393,394,395,396,397,398,399,400,224,225,227,228,229,230,401,364,233,402,403,338],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[311,303],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:814","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:747","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1026","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[301],"status":-1,"binaryOperator":"java.lang.Object != null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[280],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.Find:41","failures":[404],"status":-1,"binaryOperator":"((\"find(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1964","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[242],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[247,249,257,279,280,282,284,285,287,296,301],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":280,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":37,"org.easymock.tests2.UsageTest.argumentsOrdered":205,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":271,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":319,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":201,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":312,"org.easymock.tests2.DelegateToTest.testReturnException":243,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":41,"org.easymock.tests.MockingTest.testPartialClassMocking":146,"org.easymock.tests.MockClassControlTest.testToString":378,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":117,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":403,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":47,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":221,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":185,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":286,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":79,"org.easymock.tests2.UsageTest.wrongArguments":200,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":335,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":167,"org.easymock.samples.ExampleTest.answerVsDelegate":174,"org.easymock.tests2.UsageConstraintsTest.testNull":282,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":227,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":270,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":383,"org.easymock.tests2.CaptureTest.testPrimitive":250,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":81,"org.easymock.tests.UsageTest.moreThanOneArgument":118,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":66,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":226,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":170,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":149,"org.easymock.tests.UsageTest.argumentsOrdered":122,"org.easymock.tests.UsageVarargTest.varargIntAccepted":349,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":309,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":128,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":323,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":132,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":273,"org.easymock.tests2.AnswerTest.answer":234,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":287,"org.easymock.tests2.CaptureTest.testAnd":247,"org.easymock.tests2.UsageTest.strictResetToDefault":198,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":5,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":364,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":169,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":160,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":265,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":153,"org.easymock.tests2.DelegateToTest.testDelegate":246,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":62,"org.easymock.tests.LimitationsTest.mockFinalMethod":371,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":44,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":137,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":115,"org.easymock.tests2.CaptureTest.testCapture1_2446744":251,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":23,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":60,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":275,"org.easymock.tests.UsageThrowableTest.throwError":90,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":308,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":324,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":172,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":367,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":9,"org.easymock.samples.PartialClassMockTest.testGetArea":181,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":129,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":396,"org.easymock.tests2.UsageTest.niceToStrict":21,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":48,"org.easymock.tests2.ThreadingTest.testChangeDefault":22,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":215,"org.easymock.tests2.MockBuilderTest.testCreateMock":363,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":332,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":19,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":56,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":266,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":27,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":165,"org.easymock.tests.UsageOverloadedMethodTest.overloading":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":400,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":39,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":291,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":156,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":106,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":30,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":13,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":256,"org.easymock.tests2.EasyMockSupportClassTest.testAll":220,"org.easymock.tests.MockClassControlTest.testEquals":382,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":345,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":64,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":135,"org.easymock.tests2.CaptureTest.testCaptureAll":248,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":276,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":365,"org.easymock.tests2.UsageConstraintsTest.testMatches":292,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":171,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":339,"org.easymock.samples.ExampleTest.voteForRemovals":177,"org.easymock.tests.UsageVarargTest.allKinds":141,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":162,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":136,"org.easymock.samples.BasicClassMockTest.testPrintContent":358,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":35,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":186,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":45,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":25,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":320,"org.easymock.tests2.UsageConstraintsTest.greaterThan":294,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":159,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":233,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":389,"org.easymock.samples.ExampleTest.voteForRemoval":175,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":402,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":209,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":310,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":127,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":68,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":263,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":34,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":40,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":242,"org.easymock.tests2.CaptureTest.testCaptureFirst":260,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":264,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":207,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":102,"org.easymock.tests2.UsageTest.moreThanOneArgument":199,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":211,"org.easymock.tests2.CaptureTest.testCapture2_2446744":259,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":218,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":355,"org.easymock.tests.GenericTest.testBridgedEquals":368,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":11,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":343,"org.easymock.tests.UsageExpectAndReturnTest.longType":98,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":133,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":261,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":65,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":145,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":299,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":63,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":168,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":28,"org.easymock.tests.UsageCallCountTest.tooManyCalls":344,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":76,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":103,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":334,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":52,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":94,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":194,"org.easymock.tests.MockingTest.testNiceClassMocking":375,"org.easymock.tests.MockingTest.testClassMocking":373,"org.easymock.tests2.UsageConstraintsTest.testContains":290,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":72,"org.easymock.tests2.UsageConstraintsTest.testFind":281,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":46,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":84,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":241,"org.easymock.tests.UsageExpectAndReturnTest.object":105,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":230,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":333,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":269,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":351,"org.easymock.tests.UsageTest.exactCallCountByLastCall":123,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":74,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":150,"org.easymock.tests2.ConstraintsToStringTest.findToString":404,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":3,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":111,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":347,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":139,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":315,"org.easymock.tests.MockClassControlTest.testHashCode":381,"org.easymock.tests2.EasyMockSupportTest.testVerify":361,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":151,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":138,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":26,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":274,"org.easymock.tests.UsageVarargTest.varargCharAccepted":350,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":360,"org.easymock.tests2.UsageTest.openCallCountByLastCall":202,"org.easymock.tests.DefaultClassInstantiatorTest.object":384,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":272,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":397,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":54,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":92,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":328,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":314,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":231,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":380,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":53,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":112,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":223,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":379,"org.easymock.tests2.UsageTest.resumeIfFailure":206,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":43,"org.easymock.tests2.StubTest.stubWithReturnValue":67,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":6,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":104,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":300,"org.easymock.tests2.SerializationTest.testAllMockedMethod":338,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":124,"org.easymock.samples.SupportTest.voteForRemovals":182,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":20,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":317,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":59,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":337,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":125,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":235,"org.easymock.tests.UsageExpectAndThrowTest.object":57,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":297,"org.easymock.tests2.DelegateToTest.testWrongClass":245,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":154,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":155,"org.easymock.samples.ConstructorCalledMockTest.testTax":179,"org.easymock.tests.UsageStrictMockTest.range":87,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":268,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":193,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":58,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":392,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":121,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":166,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":16,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":144,"org.easymock.tests2.CaptureTest.testCaptureNone":255,"org.easymock.tests.UsageUnorderedTest.message":82,"org.easymock.tests.UsageVerifyTest.twoReturns":164,"org.easymock.tests.UsageVarargTest.varargByteAccepted":354,"org.easymock.tests2.ThreadingTest.testThreadSafe":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":398,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":342,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":357,"org.easymock.tests2.CaptureTest.testCapture_2617107":249,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":33,"org.easymock.tests2.UsageConstraintsTest.any":288,"org.easymock.tests2.StubTest.stub":192,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":29,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":42,"org.easymock.tests.UsageExpectAndThrowTest.longType":50,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":12,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":188,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":183,"org.easymock.tests2.SerializationTest.testClass":304,"org.easymock.tests.LimitationsTest.mockNativeMethod":83,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":114,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":78,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":327,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":191,"org.easymock.tests2.MockedExceptionTest.testMockedException":71,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":393,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":38,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":148,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":51,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":224,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":217,"org.easymock.tests.MockingTest.testNicePartialClassMocking":147,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":229,"org.easymock.tests2.CompareToTest.testNotComparable":307,"org.easymock.tests2.CaptureTest.testCaptureLast":254,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":325,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":116,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":1,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":285,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":298,"org.easymock.tests.MockingTest.testTwoMocks":374,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":2,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":95,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":55,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":204,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":302,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":24,"org.easymock.tests.UsageStrictMockTest.differentMethods":88,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":331,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":316,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":386,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":210,"org.easymock.tests2.MockBuilderTest.testCreateMockString":219,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":394,"org.easymock.tests.UsageExpectAndThrowTest.floatType":49,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":293,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":237,"org.easymock.tests.UsageVerifyTest.twoThrows":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":222,"org.easymock.samples.ExampleTest.voteAgainstRemoval":176,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":142,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":232,"org.easymock.tests.LimitationsTest.privateConstructor":370,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":10,"org.easymock.tests2.UsageConstraintsTest.testNotNull":301,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":36,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":70,"org.easymock.tests2.UsageTest.defaultResetToNice":203,"org.easymock.samples.ExampleTest.voteAgainstRemovals":173,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":110,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":326,"org.easymock.tests2.CallbackTest.callback":306,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":366,"org.easymock.tests.UsageTest.openCallCountByLastCall":120,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":277,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":32,"org.easymock.tests.UsageCallCountTest.tooFewCalls":340,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":195,"org.easymock.tests.UsageThrowableTest.throwCheckedException":93,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":17,"org.easymock.tests.MockingTest.testStrictClassMocking":372,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":31,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":197,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":0,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":330,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":196,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":239,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":212,"org.easymock.tests2.DependencyTest.testInterfaceMocking":184,"org.easymock.samples.ExampleTest.addDocument":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":399,"org.easymock.tests2.DelegateToTest.testStubDelegate":244,"org.easymock.tests2.AnswerTest.stubAnswer":238,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":85,"org.easymock.tests.UsageVarargTest.varargLongAccepted":353,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":89,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":113,"org.easymock.tests.UsageExpectAndReturnTest.floatType":97,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":213,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":180,"org.easymock.tests.UsageThrowableTest.noUpperLimit":91,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":295,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":322,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":278,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":390,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":252,"org.easymock.tests2.SerializationTest.test":305,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":14,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":385,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":96,"org.easymock.tests2.UsageConstraintsTest.testSame":283,"org.easymock.samples.SupportTest.addDocument":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":395,"org.easymock.tests.GenericTest.testPackageScope":77,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":152,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":321,"org.easymock.tests2.NameTest.nameForMock":362,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":107,"org.easymock.tests2.UsageStrictMockTest.differentMethods":190,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":8,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":401,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":99,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":61,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":161,"org.easymock.tests2.MockedExceptionTest.testRealException":73,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":187,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":336,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":80,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":240,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":228,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":391,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":387,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":296,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":214,"org.easymock.tests2.UsageStrictMockTest.range":189,"org.easymock.tests2.UsageConstraintsTest.lessThan":303,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":318,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":262,"org.easymock.tests2.CaptureTest.testCaptureRightOne":257,"org.easymock.tests2.UsageConstraintsTest.testOr":284,"org.easymock.tests.UsageRangeTest.combination":158,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":225,"org.easymock.tests.UsageTest.wrongArguments":119,"org.easymock.tests2.MockBuilderTest.testWithConstructor":4,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":377,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":100,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":108,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":388,"org.easymock.tests.UsageVarargTest.varargShortAccepted":352,"org.easymock.tests2.UsageConstraintsTest.cmpTo":289,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":236,"org.easymock.tests2.CompareToTest.testLessThan":311,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":69,"org.easymock.tests2.CaptureTest.testCaptureFromStub":258,"org.easymock.tests.UsageTest.unexpectedCallWithArray":18,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":15,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":341,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":7,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":109,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":86,"org.easymock.tests2.UsageConstraintsTest.constraints":279,"org.easymock.samples.ExampleTest.addAndChangeDocument":178,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":313,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":346,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":134,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":253,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":130,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":101,"org.easymock.tests.LimitationsTest.abstractClass":369,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":140,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":131,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":267,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":348}}]
