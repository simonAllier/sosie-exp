[{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[2,3,4,5,6,7,8,9,10,10,11,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,1,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[10,10,11,11,13,17,18,330,331,81,82,84,85,86,87,88,332,333,89,90,91,92,334,335,93,336,112,337,113,338,339,114,115,116,117,340,118,119,341,120,134,135,136,139,140,141,142,144,145,146,148,342,343,344,149,345,346,150,347,348,349,350,351,352,353,354,355,151,356,357,358,359,360,152,361,362,363,364,168,169,365,366,175,367,368,369,370,371,372,373,374,375,220,221,222,376,377,378,379,380,381,229,382,251,252,253,254,255,256,257,258,284],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:320","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[383,384],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1725","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:114","sourceCode":"return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs)","type":"CtReturnImpl"},"failures":[2,3,4,5,6,7,8,9,10,10,11,11,12,13,14,15,16,17,18,19,20,21,22,24,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,385,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,386,387,77,78,79,81,82,83,84,85,86,87,88,89,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,365,170,171,172,173,174,175,176,177,180,183,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,388,389,390,391,375,220,221,222,392,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,1,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,393,394,395,396,397,325,398,326,327,399,328,329],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:46","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Byte.java.lang.Class<java.lang.Byte>, java.lang.Byte.java.lang.Byte.valueOf(((byte)(0))))","type":"CtInvocationImpl"},"failures":[2,4,5,7,16,281,291],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:92","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:41","sourceCode":"try {\n    return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n}","type":"CtTryImpl"},"failures":[370,400,401],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[62,63,64,65,66,67,68,69,70,71,72,73,74,75,402,402],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:355","sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[366],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:41","sourceCode":"new java.util.Properties()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[403],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:237","sourceCode":"org.easymock.internal.Injection = org.easymock.internal.Injection","type":"CtAssignmentImpl"},"failures":[12,14,404,405,406,407],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:78","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[10,10,11,11,13,17,18,81,82,84,85,86,87,88,89,90,91,92,335,93,112,113,338,114,115,116,117,118,119,120,136,139,140,141,142,144,145,146,148,149,150,151,152,168,169,365,366,375,220,221,222,377,378,379,229,251,252,253,254,255,256,257,258,284],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1789","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Matches(java.lang.String))","type":"CtInvocationImpl"},"failures":[50],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"regex"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[386,78,79,408],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:102","sourceCode":"if (!boolean) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove();\n    throw new java.lang.IllegalStateException(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[37,38,40,42,43,385,54,59,62,64,72],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:25","sourceCode":"new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:60","sourceCode":"if (!(java.util.Set<java.lang.String>.add(java.lang.String))) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String));\n} ","type":"CtIfImpl"},"failures":[409,410],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[95,96],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.EasyMock:556","sourceCode":"final org.easymock.internal.MocksControl org.easymock.internal.MocksControl = org.easymock.internal.LastControl.org.easymock.internal.LastControl.lastControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:227","sourceCode":"try {\n    return java.lang.Class<?>.getDeclaredMethod(java.lang.String, java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[10,10,11,11,25,35,36,39,40,41,42,47,49,50,52,53,59,60,61,73,163,170,171,172,173,174,179,218,411,412,413,414,415,279,280,281,282,283,416,285,286,288,289,290],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:411","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:253","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"cls"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[158],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:320","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[383,384],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"failures":[417],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[401],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[121,128,163,209,216,0,225,259,264,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,317,319,320,321,322,323,324,418,419,420,327],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[75],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1333","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:380","sourceCode":"final java.util.List<java.lang.Class<?>> java.util.List<java.lang.Class<?>> = new java.util.ArrayList<java.lang.Class<?>>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:119","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[336,421,422,423,424,425,426,427,141,145,428],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":38,"org.easymock.tests2.UsageTest.argumentsOrdered":131,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":259,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":109,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":407,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":384,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":126,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":14,"org.easymock.tests2.DelegateToTest.testReturnException":157,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":206,"org.easymock.tests.MockingTest.testPartialClassMocking":220,"org.easymock.tests.MockClassControlTest.testToString":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":415,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":335,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":350,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":150,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":296,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":20,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":44,"org.easymock.tests2.UsageTest.wrongArguments":124,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":285,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":166,"org.easymock.samples.ExampleTest.answerVsDelegate":3,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":379,"org.easymock.tests2.UsageConstraintsTest.testNull":40,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":84,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":108,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":258,"org.easymock.tests2.CaptureTest.testPrimitive":65,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":288,"org.easymock.tests.UsageTest.moreThanOneArgument":260,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":315,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":83,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":172,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":393,"org.easymock.tests.UsageTest.argumentsOrdered":266,"org.easymock.tests.UsageVarargTest.varargIntAccepted":270,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":403,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":279,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":112,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":115,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":283,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":34,"org.easymock.tests.ReplayStateInvalidUsageTest.times":247,"org.easymock.tests2.AnswerTest.answer":76,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":385,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":33,"org.easymock.tests2.CaptureTest.testAnd":62,"org.easymock.tests2.UsageTest.strictResetToDefault":122,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":422,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":89,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":171,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":103,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":213,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":397,"org.easymock.tests2.DelegateToTest.testDelegate":160,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":311,"org.easymock.tests.LimitationsTest.mockFinalMethod":382,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":209,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":295,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":388,"org.easymock.tests2.CaptureTest.testCapture1_2446744":66,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":309,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":31,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":241,"org.easymock.tests.UsageThrowableTest.throwError":317,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":174,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":426,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":362,"org.easymock.samples.PartialClassMockTest.testGetArea":13,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":242,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":280,"org.easymock.tests2.UsageTest.niceToStrict":125,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":351,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":377,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":411,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":114,"org.easymock.tests2.MockBuilderTest.testCreateMock":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":358,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":305,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":104,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":420,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":230,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":164,"org.easymock.tests.UsageOverloadedMethodTest.overloading":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":360,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":49,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":327,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":196,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":223,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":400,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":48,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":71,"org.easymock.tests2.EasyMockSupportClassTest.testAll":149,"org.easymock.tests.MockClassControlTest.testEquals":257,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":169,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":313,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":32,"org.easymock.tests2.CaptureTest.testCaptureAll":63,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":293,"org.easymock.tests2.UsageConstraintsTest.testMatches":50,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":173,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":239,"org.easymock.samples.ExampleTest.voteForRemovals":7,"org.easymock.tests.UsageVarargTest.allKinds":278,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":215,"org.easymock.samples.BasicClassMockTest.testPrintContent":18,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":294,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":323,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":23,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":210,"org.easymock.tests2.UsageConstraintsTest.greaterThan":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":345,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":212,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":92,"org.easymock.samples.ExampleTest.voteForRemoval":4,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":372,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":95,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":334,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":87,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":121,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":284,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":340,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":101,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":319,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":343,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":205,"org.easymock.tests2.CaptureTest.testCaptureFirst":75,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":383,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":408,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":102,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":133,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":329,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":192,"org.easymock.tests2.UsageTest.moreThanOneArgument":123,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":97,"org.easymock.tests2.CaptureTest.testCapture2_2446744":74,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":119,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":277,"org.easymock.tests.GenericTest.testBridgedEquals":366,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":237,"org.easymock.tests.UsageExpectAndReturnTest.longType":188,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":99,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":291,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":314,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":341,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":416,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":57,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":312,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":170,"org.easymock.tests.UsageCallCountTest.tooManyCalls":238,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":359,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":193,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":301,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":322,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":140,"org.easymock.tests.MockingTest.testNiceClassMocking":376,"org.easymock.tests.MockingTest.testClassMocking":374,"org.easymock.tests2.UsageConstraintsTest.testContains":47,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":231,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":337,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":136,"org.easymock.tests2.UsageConstraintsTest.testFind":39,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":225,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":176,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":22,"org.easymock.tests.UsageExpectAndReturnTest.object":195,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":88,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":107,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":272,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":228,"org.easymock.tests.UsageTest.exactCallCountByLastCall":267,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":218,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":413,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":394,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":336,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":201,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":268,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":326,"org.easymock.tests.MockClassControlTest.testHashCode":256,"org.easymock.tests2.EasyMockSupportTest.testVerify":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":353,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":395,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":419,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":325,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":30,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":80,"org.easymock.tests.UsageVarargTest.varargCharAccepted":271,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":24,"org.easymock.tests2.UsageTest.openCallCountByLastCall":127,"org.easymock.tests.DefaultClassInstantiatorTest.object":175,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":110,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":418,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":226,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":303,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":354,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":320,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":409,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":406,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":90,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":255,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":302,"org.easymock.tests.CapturesMatcherTest.test":402,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":202,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":152,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":254,"org.easymock.tests2.UsageTest.resumeIfFailure":132,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":378,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":208,"org.easymock.tests2.StubTest.stubWithReturnValue":163,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":423,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":58,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":194,"org.easymock.tests2.SerializationTest.testAllMockedMethod":148,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":390,"org.easymock.samples.SupportTest.voteForRemovals":16,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":364,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":410,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":308,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":391,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":386,"org.easymock.tests.UsageExpectAndThrowTest.object":306,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":55,"org.easymock.tests2.DelegateToTest.testWrongClass":159,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":289,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":290,"org.easymock.tests.UsageStrictMockTest.range":181,"org.easymock.samples.ConstructorCalledMockTest.testTax":10,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":106,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":139,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":307,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":116,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":249,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":342,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":165,"org.easymock.tests2.CaptureTest.testCaptureNone":70,"org.easymock.tests.UsageUnorderedTest.message":316,"org.easymock.tests.UsageVerifyTest.twoReturns":217,"org.easymock.tests.UsageVarargTest.varargByteAccepted":276,"org.easymock.tests2.ThreadingTest.testThreadSafe":94,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":356,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":235,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":17,"org.easymock.tests2.CaptureTest.testCapture_2617107":64,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":1,"org.easymock.tests2.UsageConstraintsTest.any":45,"org.easymock.tests2.StubTest.stub":162,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":246,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":207,"org.easymock.tests.UsageExpectAndThrowTest.longType":299,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":370,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":245,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":26,"org.easymock.tests2.SerializationTest.testClass":146,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":138,"org.easymock.tests.LimitationsTest.mockNativeMethod":229,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":204,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":365,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":29,"org.easymock.tests2.NameTest.nameForMocksControl":156,"org.easymock.tests2.MockedExceptionTest.testMockedException":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":346,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":264,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":222,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":300,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":81,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":117,"org.easymock.tests.MockingTest.testNicePartialClassMocking":221,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":86,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":404,"org.easymock.tests2.CaptureTest.testCaptureLast":69,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":389,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":145,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":43,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":56,"org.easymock.tests.MockingTest.testTwoMocks":375,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":428,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":185,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":304,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":130,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":60,"org.easymock.samples.ExampleTest.removeNonExistingDocument":8,"org.easymock.tests.UsageStrictMockTest.differentMethods":182,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":243,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":368,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":96,"org.easymock.tests2.MockBuilderTest.testCreateMockString":120,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":251,"org.easymock.tests.UsageExpectAndThrowTest.floatType":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":347,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":51,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":344,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":77,"org.easymock.tests.UsageVerifyTest.twoThrows":216,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":398,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":151,"org.easymock.samples.ExampleTest.voteAgainstRemoval":5,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":392,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":91,"org.easymock.tests.LimitationsTest.privateConstructor":381,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":427,"org.easymock.tests2.UsageConstraintsTest.testNotNull":59,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":134,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":324,"org.easymock.tests2.UsageTest.defaultResetToNice":129,"org.easymock.samples.ExampleTest.voteAgainstRemovals":2,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":200,"org.easymock.tests.UsageVarargTest.differentLength":273,"org.easymock.tests2.CallbackTest.callback":161,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":332,"org.easymock.tests.UsageTest.openCallCountByLastCall":263,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":35,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":287,"org.easymock.tests.UsageCallCountTest.tooFewCalls":233,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":142,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":167,"org.easymock.tests.UsageThrowableTest.throwCheckedException":321,"org.easymock.tests.MockingTest.testStrictClassMocking":373,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":144,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":219,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":405,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":141,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":248,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":143,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":79,"org.easymock.tests.ObjectMethodsTest.testHashCode":227,"org.easymock.tests2.NameTest.nameForNiceMock":155,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":98,"org.easymock.tests2.DependencyTest.testInterfaceMocking":19,"org.easymock.samples.ExampleTest.addDocument":6,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":357,"org.easymock.tests2.DelegateToTest.testStubDelegate":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":361,"org.easymock.tests2.AnswerTest.stubAnswer":78,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":179,"org.easymock.tests.UsageVarargTest.varargLongAccepted":275,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":183,"org.easymock.tests.UsageExpectAndReturnTest.floatType":187,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":203,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":93,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":11,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":399,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":53,"org.easymock.tests.UsageThrowableTest.noUpperLimit":318,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":36,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":330,"org.easymock.tests2.SerializationTest.test":147,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":67,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":401,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":367,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":186,"org.easymock.tests2.UsageConstraintsTest.testSame":41,"org.easymock.samples.SupportTest.addDocument":15,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":348,"org.easymock.tests.GenericTest.testPackageScope":168,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":396,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":412,"org.easymock.tests2.NameTest.nameForMock":153,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":197,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":425,"org.easymock.tests2.UsageStrictMockTest.differentMethods":28,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":333,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":189,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":310,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":214,"org.easymock.tests2.MockedExceptionTest.testRealException":137,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":414,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":25,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":250,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":286,"org.easymock.tests2.NameTest.nameForStrictMock":154,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":339,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":21,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":85,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":331,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":54,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":369,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":113,"org.easymock.tests2.UsageStrictMockTest.range":27,"org.easymock.tests2.UsageConstraintsTest.lessThan":61,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":100,"org.easymock.tests2.CaptureTest.testCaptureRightOne":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":352,"org.easymock.tests2.UsageConstraintsTest.testOr":42,"org.easymock.tests.UsageRangeTest.combination":211,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":82,"org.easymock.tests.UsageTest.wrongArguments":262,"org.easymock.tests2.MockBuilderTest.testWithConstructor":421,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":349,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":252,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":190,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":198,"org.easymock.tests.UsageVarargTest.varargShortAccepted":274,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":371,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":236,"org.easymock.tests2.UsageConstraintsTest.cmpTo":46,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":387,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":0,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":128,"org.easymock.tests2.CaptureTest.testCaptureFromStub":73,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":240,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":338,"org.easymock.tests.UsageTest.unexpectedCallWithArray":261,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":178,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":234,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":424,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":199,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":180,"org.easymock.tests2.UsageConstraintsTest.constraints":37,"org.easymock.samples.ExampleTest.addAndChangeDocument":9,"org.easymock.tests.UsageStrictMockTest.testVerify":184,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":12,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":177,"org.easymock.tests2.CompareToTest.testGreateThan":417,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":292,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":68,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":281,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":363,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":191,"org.easymock.tests.LimitationsTest.abstractClass":380,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":282,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":328,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":105,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":269}}]
