[{"transplant":{"position":"org.easymock.internal.RecordState:310","sourceCode":"return java.lang.Class<?>.equals(java.lang.Void.java.lang.Class<java.lang.Void>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:71","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:247","sourceCode":"return ((T)(net.sf.cglib.proxy.Factory))","type":"CtReturnImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:190","failures":[91,92,93,94,95,96,97,98,99,13,100,16,25,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[130,91,131,132,92,133,96,134,135,136,100],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1163","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[137,138,103,113,139,140,141,142,116,117,126,143,144,128],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Captures:53","failures":[135,145,136,146,147,148,149,150,151,152,100,153,154,155,156],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.EasyMock:1373","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[27,157,158],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[159],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[76,80],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ErrorMessage:51","failures":[113,160,126,143,128],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[161,93,162,163],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[164,165,166,167,168,169,170,171,172,173,174,175,137,138,103,176,113,114,177,178,179,180,181,182,183,184,185,186,187,188,139,189,140,141,142,116,117,190,126,143,144,191,128,129],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1952","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"failures":[118,120],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:56","sourceCode":"if (int > (this.int)) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:52","sourceCode":"return (int) == (int)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"currentPosition":"maximum","callCount":"maximum"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[91],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[192,193,58,194],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[195,196,197],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1080","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[23,63],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:36","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Character.java.lang.Class<java.lang.Character>.getName(), java.lang.Character.java.lang.Class<java.lang.Character>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[92],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[198,199],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"failures":[200,201,202,97],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[195,196,203,204,205,206,207,197,208,39,40,209,41,210,42,43,44,45,46,211,47,48,49,50,212,51,52,53,54,55,56,57,213,214,192],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:180","sourceCode":"try {\n    java.lang.Object.getClass().getDeclaredMethod(\"toString\", ((java.lang.Class[])(null))).getModifiers();\n    return true;\n} catch (final java.lang.SecurityException java.lang.SecurityException) {\n    return false;\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    return false;\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Null:35","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"failures":[131,215,216,217],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"o":"actual"}},{"position":"org.easymock.EasyMock:2000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"failures":[1,218,219,220,221,222,223,224,225,226,227,228,2,3,229,230,231,232,233,234,235,236,237,238,239,240,241,201,242,130,91,243,244,131,245,132,92,93,133,94,246,247,95,162,248,249,202,250,96,97,98,215,99,134,251,163,252,253,254,255,4,5,6,7,8,9,10,11,256,208,12,13,14,135,145,136,146,147,148,149,150,151,152,100,153,154,155,257,258,259,260,261,262,15,16,263,17,18,19,20,264,21,265,22,23,24,25,26,27,28,29,266,267,157,216,268,30,31,32,269,270,271,272,273,274,275,276,277,278,279,280,281,282,159,175,137,101,102,283,284,285,138,103,286,287,288,289,290,291,104,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,33,311,312,34,313,314,315,316,35,36,317,37,318,319,38,320,321,322,105,323,106,324,107,108,325,326,109,110,111,327,39,40,209,41,210,42,43,44,45,46,211,47,48,49,50,212,51,52,53,54,55,56,57,213,214,328,329,330,331,198,199,112,332,176,333,113,114,334,192,193,58,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,59,60,61,62,63,378,64,379,380,65,381,382,383,158,384,385,386,387,388,389,390,391,392,393,394,395,396,66,397,398,399,400,67,401,402,403,177,404,405,178,179,180,181,182,406,407,115,408,409,410,411,189,140,141,412,413,142,116,414,68,415,416,417,418,419,420,421,422,423,424,69,70,71,72,73,74,75,117,425,426,427,428,429,430,118,119,431,120,121,122,123,124,76,77,78,79,80,432,125,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,217,81,82,83,84,85,86,87,88,89,469,90,470,471,472,473,474,475,476,477,478,479,0,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,190,126,143,521,522,523,524,525,526,527,528,529,530,531,127,532,144,191,533,128,129,534,535,536,537,538],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:136","failures":[218,218,219,219,201,242,244,131,245,132,247,162,248,202,250,134,251,163,153,176,392,393,394,395,396,428,471,472,475,0,480,481,482,483,530,531,191],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[1,220,222,223,225,231,232,5,8,10,11,13,15,16,263,17,18,19,21,24,25,26,216,290,291,307,35,36,317,37,319,38,320,41,43,51,57,176,113,114,358,359,360,361,362,363,366,367,369,370,371,373,374,375,376,377,62,63,64,392,393,394,395,115,408,409,410,90,471,0,480,481,482,483,530,531,191,128,129],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":91,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":411,"org.easymock.tests2.UsageTest.argumentsOrdered":103,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":110,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":276,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":444,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":102,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":228,"org.easymock.tests2.DelegateToTest.testReturnException":306,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":516,"org.easymock.tests.MockingTest.testPartialClassMocking":62,"org.easymock.tests.MockClassControlTest.testToString":83,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":234,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":485,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":453,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":211,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":43,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":335,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":291,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":514,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":93,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":471,"org.easymock.tests2.UsageTest.wrongArguments":137,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":304,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":478,"org.easymock.samples.ExampleTest.answerVsDelegate":221,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":67,"org.easymock.tests2.UsageConstraintsTest.testNull":131,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":380,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":17,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":109,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":88,"org.easymock.tests2.CaptureTest.testPrimitive":146,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":475,"org.easymock.tests.UsageTest.moreThanOneArgument":189,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":354,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":263,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":394,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":415,"org.easymock.tests.UsageTest.argumentsOrdered":116,"org.easymock.tests.UsageVarargTest.varargIntAccepted":460,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":449,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":173,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":0,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":4,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":280,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":312,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":9,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":436,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":483,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":498,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":168,"org.easymock.tests.ReplayStateInvalidUsageTest.times":388,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":298,"org.easymock.tests2.DependencyTest.testClassMocking":288,"org.easymock.tests2.AnswerTest.answer":328,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":133,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":451,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":255,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":398,"org.easymock.tests2.CaptureTest.testAnd":135,"org.easymock.tests2.UsageTest.strictResetToDefault":159,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":23,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":393,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":409,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":324,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":419,"org.easymock.tests2.DelegateToTest.testDelegate":310,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":497,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":350,"org.easymock.tests.LimitationsTest.mockFinalMethod":470,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":519,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":424,"org.easymock.tests2.DependencyTest.testClassMockingSupport":289,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":181,"org.easymock.tests2.CaptureTest.testCapture1_2446744":147,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":264,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":348,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":253,"org.easymock.tests.UsageThrowableTest.throwError":118,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":383,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":400,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":281,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":214,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":501,"org.easymock.samples.PartialClassMockTest.testGetArea":1,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":158,"org.easymock.tests.MockingTest.testInterfaceMocking":378,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":480,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":537,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":492,"org.easymock.tests2.UsageTest.niceToStrict":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":47,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":336,"org.easymock.tests2.ThreadingTest.testChangeDefault":266,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":434,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":197,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":8,"org.easymock.tests2.MockBuilderTest.testCreateMock":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":54,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":301,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":165,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":344,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":107,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":397,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":427,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":521,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":476,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":205,"org.easymock.tests.UsageOverloadedMethodTest.overloading":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":56,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":212,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":405,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":162,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":432,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":369,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":95,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":152,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":461,"org.easymock.tests2.EasyMockSupportClassTest.testAll":41,"org.easymock.tests.MockClassControlTest.testEquals":87,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":78,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":170,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":352,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":422,"org.easymock.tests2.CaptureTest.testCaptureAll":145,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":254,"org.easymock.tests.MockNameTest.defaultName":430,"org.easymock.tests2.UsageConstraintsTest.testMatches":248,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":395,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":381,"org.easymock.samples.ExampleTest.voteForRemovals":225,"org.easymock.tests.UsageVarargTest.allKinds":217,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":190,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":423,"org.easymock.samples.BasicClassMockTest.testPrintContent":3,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":123,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":112,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":520,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":277,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":309,"org.easymock.tests2.UsageConstraintsTest.greaterThan":202,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":210,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":408,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":26,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":502,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":75,"org.easymock.samples.ExampleTest.voteForRemoval":222,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":27,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":267,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":401,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":20,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":494,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":68,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":282,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":208,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":441,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":323,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":431,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":40,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":515,"org.easymock.tests2.CaptureTest.testCaptureFirst":155,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":305,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":440,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":106,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":287,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":180,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":365,"org.easymock.tests2.UsageTest.moreThanOneArgument":175,"org.easymock.tests2.CaptureTest.testCapture2_2446744":154,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":216,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":452,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":13,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":468,"org.easymock.tests.GenericTest.testBridgedEquals":80,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":206,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":528,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":203,"org.easymock.tests.UsageExpectAndReturnTest.longType":361,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":420,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":322,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":353,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":407,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":215,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":351,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":392,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":356,"org.easymock.tests.UsageCallCountTest.tooManyCalls":529,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":184,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":523,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":55,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":366,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":303,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":340,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":122,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":36,"org.easymock.tests.MockingTest.testNiceClassMocking":65,"org.easymock.tests.MockingTest.testClassMocking":60,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":522,"org.easymock.tests2.UsageConstraintsTest.testContains":247,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":32,"org.easymock.tests2.UsageConstraintsTest.testFind":244,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":433,"org.easymock.tests.MockTypeTest.fromEasyMockClass":399,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":127,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":241,"org.easymock.tests.UsageExpectAndReturnTest.object":368,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":21,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":302,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":326,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":463,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":490,"org.easymock.tests.UsageTest.exactCallCountByLastCall":414,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":207,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":428,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":439,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":484,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":416,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":188,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":233,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":458,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":374,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":404,"org.easymock.tests.MockClassControlTest.testHashCode":86,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":271,"org.easymock.tests2.EasyMockSupportTest.testVerify":327,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":49,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":167,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":417,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":426,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":403,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":252,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":292,"org.easymock.tests.UsageVarargTest.varargCharAccepted":462,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":332,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":457,"org.easymock.tests2.UsageTest.openCallCountByLastCall":283,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":111,"org.easymock.tests.DefaultClassInstantiatorTest.object":69,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":195,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":425,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":488,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":139,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":50,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":342,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":120,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":296,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":270,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":500,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":24,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":85,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":341,"org.easymock.tests.CapturesMatcherTest.test":156,"org.easymock.tests.ReplayStateInvalidCallsTest.times":506,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":375,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":355,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":507,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":57,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":84,"org.easymock.tests2.UsageTest.resumeIfFailure":286,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":66,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":311,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":518,"org.easymock.tests2.StubTest.stubWithReturnValue":316,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":99,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":367,"org.easymock.tests2.SerializationTest.testAllMockedMethod":58,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":450,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":172,"org.easymock.samples.SupportTest.voteForRemovals":231,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":76,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":273,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":347,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":194,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":456,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":329,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":486,"org.easymock.tests.UsageExpectAndThrowTest.object":345,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":97,"org.easymock.tests2.DelegateToTest.testWrongClass":308,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":530,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":504,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":531,"org.easymock.tests.UsageStrictMockTest.range":128,"org.easymock.samples.ConstructorCalledMockTest.testTax":218,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":313,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":325,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":35,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":204,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":346,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":10,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":390,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":39,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":477,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":183,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":496,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":538,"org.easymock.tests2.CaptureTest.testCaptureNone":151,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":258,"org.easymock.tests.UsageUnorderedTest.message":117,"org.easymock.tests.UsageVerifyTest.twoReturns":143,"org.easymock.tests.UsageVarargTest.varargByteAccepted":467,"org.easymock.tests2.ThreadingTest.testThreadSafe":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":52,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":526,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":491,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":2,"org.easymock.tests2.CaptureTest.testCapture_2617107":136,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":174,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":406,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":454,"org.easymock.tests2.UsageConstraintsTest.any":94,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":387,"org.easymock.tests2.StubTest.stub":315,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":357,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":517,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":455,"org.easymock.tests.UsageExpectAndThrowTest.longType":338,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":73,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":386,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":333,"org.easymock.tests2.SerializationTest.testClass":192,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":275,"org.easymock.tests.LimitationsTest.mockNativeMethod":90,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":79,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":377,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":295,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":512,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":334,"org.easymock.tests2.NameTest.nameForMocksControl":238,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":259,"org.easymock.tests2.MockedExceptionTest.testMockedException":31,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":42,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":413,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":64,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":240,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":339,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":15,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":11,"org.easymock.tests.MockingTest.testNicePartialClassMocking":63,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":19,"org.easymock.tests2.CaptureTest.testCaptureLast":150,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":293,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":182,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":511,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":92,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":320,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":98,"org.easymock.tests.MockingTest.testTwoMocks":61,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":508,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":321,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":358,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":343,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":138,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":251,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":262,"org.easymock.samples.ExampleTest.removeNonExistingDocument":226,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":384,"org.easymock.tests.UsageStrictMockTest.differentMethods":129,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":300,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":272,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":71,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":261,"org.easymock.tests2.ConstraintsToStringTest.andToString":171,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":157,"org.easymock.tests2.MockBuilderTest.testCreateMockString":14,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":44,"org.easymock.tests.UsageExpectAndThrowTest.floatType":337,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":209,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":331,"org.easymock.tests.UsageVerifyTest.twoThrows":126,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":51,"org.easymock.samples.ExampleTest.voteAgainstRemoval":223,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":536,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":445,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":25,"org.easymock.tests.LimitationsTest.privateConstructor":469,"org.easymock.tests2.UsageConstraintsTest.testNotNull":134,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":124,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":30,"org.easymock.tests2.UsageTest.defaultResetToNice":285,"org.easymock.samples.ExampleTest.voteAgainstRemovals":220,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":446,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":373,"org.easymock.tests.UsageVarargTest.differentLength":464,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":294,"org.easymock.tests2.CallbackTest.callback":104,"org.easymock.tests2.UsageConstraintsTest.equals":243,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":186,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":265,"org.easymock.tests.UsageTest.openCallCountByLastCall":412,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":201,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":473,"org.easymock.tests.UsageCallCountTest.tooFewCalls":524,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":37,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":479,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":260,"org.easymock.tests.UsageThrowableTest.throwCheckedException":121,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":185,"org.easymock.tests.MockingTest.testStrictClassMocking":59,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":429,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":38,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":299,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":317,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":389,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":319,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":199,"org.easymock.tests.ObjectMethodsTest.testHashCode":489,"org.easymock.tests2.CompareToTest.testGreateOrEqual":161,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":510,"org.easymock.tests2.NameTest.nameForNiceMock":237,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":268,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":505,"org.easymock.tests2.DependencyTest.testInterfaceMocking":290,"org.easymock.samples.ExampleTest.addDocument":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":213,"org.easymock.tests2.DelegateToTest.testStubDelegate":307,"org.easymock.tests2.AnswerTest.stubAnswer":198,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":191,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":256,"org.easymock.tests.UsageVarargTest.varargLongAccepted":466,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":534,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":443,"org.easymock.tests.UsageExpectAndReturnTest.floatType":360,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":376,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":232,"org.easymock.tests2.ConstraintsToStringTest.orToString":164,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":219,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":178,"org.easymock.tests.UsageThrowableTest.noUpperLimit":119,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":250,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":279,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":242,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":33,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":148,"org.easymock.tests2.SerializationTest.test":193,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":70,"org.easymock.tests2.UsageConstraintsTest.testSame":245,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":359,"org.easymock.samples.SupportTest.addDocument":230,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":318,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":495,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":45,"org.easymock.tests.GenericTest.testPackageScope":77,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":418,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":438,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":278,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":379,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":493,"org.easymock.tests2.NameTest.nameForMock":235,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":370,"org.easymock.tests2.UsageStrictMockTest.differentMethods":114,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":22,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":362,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":349,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":487,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":410,"org.easymock.tests2.MockedExceptionTest.testRealException":269,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":402,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":448,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":314,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":187,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":447,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":176,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":472,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":391,"org.easymock.tests2.NameTest.nameForStrictMock":236,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":7,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":196,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":239,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":18,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":34,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":96,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":72,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":5,"org.easymock.tests2.UsageStrictMockTest.range":113,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":499,"org.easymock.tests2.UsageConstraintsTest.lessThan":163,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":274,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":442,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":105,"org.easymock.tests2.CaptureTest.testCaptureRightOne":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":48,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":257,"org.easymock.tests2.UsageConstraintsTest.testOr":132,"org.easymock.tests.UsageRangeTest.combination":115,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":16,"org.easymock.tests.UsageTest.wrongArguments":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":46,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":82,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":363,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":435,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":371,"org.easymock.tests.UsageVarargTest.varargShortAccepted":465,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":74,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":527,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":513,"org.easymock.tests2.UsageConstraintsTest.cmpTo":246,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":330,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":503,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":437,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":284,"org.easymock.tests2.CaptureTest.testCaptureFromStub":153,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":382,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":6,"org.easymock.tests.UsageTest.unexpectedCallWithArray":140,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":509,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":144,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":525,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":372,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":533,"org.easymock.tests2.UsageConstraintsTest.constraints":130,"org.easymock.samples.ExampleTest.addAndChangeDocument":227,"org.easymock.tests2.ConstraintsToStringTest.notToString":166,"org.easymock.tests.UsageStrictMockTest.testVerify":535,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":229,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":532,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":421,"org.easymock.tests2.CompareToTest.testGreateThan":200,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":149,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":481,"org.easymock.tests.LimitationsTest.abstractClass":89,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":364,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":482,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":179,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":459,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":160,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":108}}]
