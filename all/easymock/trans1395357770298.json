[{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:51","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,125,126,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[135],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[254],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"m","bridgeMethod":"m"}},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:30","sourceCode":"new java.util.HashMap<java.lang.String, java.lang.Class<?>>(10)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1988","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[251],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[255,1,2,3,256,4,5,257,258,6,259,260,261,262,263,264,265,266,267,268,269,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,270,22,271,23,24,272,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,273,53,274,275,276,277,278,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,279,72,73,74,280,75,76,281,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,282,283,284,102,285,103,104,286,287,105,106,107,108,109,110,111,112,113,114,115,116,117,118,288,119,120,121,122,123,289,124,125,125,126,126,127,128,129,130,290,131,132,291,292,133,293,294,134,135,136,295,137,296,138,139,140,297,298,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,299,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,300,199,301,302,303,304,200,201,202,203,204,205,206,207,305,306,208,307,209,210,308,211,212,213,214,215,216,217,218,219,220,309,221,222,223,224,225,226,227,228,229,230,231,232,310,233,234,235,236,237,238,239,240,311,241,242,312,243,244,313,314,245,246,247,248,249,250,251,252,253],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[252,315],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1445","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:34","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Byte.java.lang.Class<java.lang.Byte>.getName(), java.lang.Byte.java.lang.Class<java.lang.Byte>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:70","sourceCode":"java.lang.Class<?>[][int] = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"failures":[316,317,318,319,320,321,322],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1803","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[323,324,325],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:161","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    return java.lang.reflect.Constructor<T>;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[326],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:144","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findGenericDeclaration(java.lang.reflect.Method)","type":"CtLocalVariableImpl"},"failures":[327],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[119],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"method","bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[328,320,321],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"failures":[329],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[137],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:61","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Character.java.lang.Class<java.lang.Character>, java.lang.Character.java.lang.Character)","type":"CtInvocationImpl"},"failures":[116],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2170","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[323],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"key","this":"this","key":"key"}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"failures":[329],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:205","sourceCode":"java.lang.reflect.Constructor<?>.setAccessible(true)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:183","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[171],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[330,331,332],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:210","sourceCode":"try {\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[239,240,311],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String).append(\", actual: \")","type":"CtInvocationImpl"},"failures":[3,256,257,258,58,59,60,61,284,102,103,104,333,334,335,136,295,297,298,301,302,303,304,208,209,210],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[336],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:36","sourceCode":"return true","type":"CtReturnImpl"},"failures":[7,8,9,10,11,20,61,62,63,75,76,102,113,114,115,116,117,208,218,221,242,245,246,251],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":214,"org.easymock.tests2.UsageTest.argumentsOrdered":298,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":2,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":197,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":19,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":296,"org.easymock.tests2.StubTest.stubWithReturnValue":207,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":316,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":294,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":233,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":42,"org.easymock.tests2.SerializationTest.testAllMockedMethod":311,"org.easymock.tests2.DelegateToTest.testReturnException":201,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":54,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":17,"org.easymock.tests.MockingTest.testPartialClassMocking":72,"org.easymock.samples.SupportTest.voteForRemovals":124,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":327,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":29,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":94,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":82,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":55,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":167,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":172,"org.easymock.tests.UsageExpectAndThrowTest.object":92,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":333,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":238,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":231,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":317,"org.easymock.tests2.DelegateToTest.testWrongClass":203,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":62,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":63,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":220,"org.easymock.tests2.UsageTest.wrongArguments":295,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":7,"org.easymock.tests.UsageStrictMockTest.range":103,"org.easymock.samples.ConstructorCalledMockTest.testTax":125,"org.easymock.samples.ExampleTest.answerVsDelegate":128,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":194,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":148,"org.easymock.tests2.UsageConstraintsTest.testNull":216,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":93,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":158,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":196,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":145,"org.easymock.tests2.CaptureTest.testPrimitive":243,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":11,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":257,"org.easymock.tests.UsageTest.moreThanOneArgument":3,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":101,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":157,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":66,"org.easymock.tests2.CaptureTest.testCaptureNone":246,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":122,"org.easymock.tests.UsageUnorderedTest.message":61,"org.easymock.tests.UsageVerifyTest.twoReturns":60,"org.easymock.tests.UsageVarargTest.varargByteAccepted":267,"org.easymock.tests2.ThreadingTest.testThreadSafe":178,"org.easymock.tests.UsageTest.argumentsOrdered":258,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":77,"org.easymock.tests.UsageVarargTest.varargIntAccepted":261,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":276,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":291,"org.easymock.tests2.CaptureTest.testCapture_2617107":312,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":113,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":321,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":336,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":10,"org.easymock.tests2.UsageConstraintsTest.any":221,"org.easymock.tests2.StubTest.stub":206,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":28,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":117,"org.easymock.tests.UsageExpectAndThrowTest.longType":85,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":18,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":307,"org.easymock.tests2.SerializationTest.testClass":239,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":170,"org.easymock.tests.LimitationsTest.mockNativeMethod":57,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":165,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":52,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":119,"org.easymock.tests2.AnswerTest.answer":171,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":309,"org.easymock.tests2.CaptureTest.testAnd":241,"org.easymock.tests2.UsageTest.strictResetToDefault":135,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":308,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":299,"org.easymock.tests2.NameTest.nameForMocksControl":304,"org.easymock.tests2.MockedExceptionTest.testMockedException":184,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":65,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":14,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":191,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":5,"org.easymock.tests2.DelegateToTest.testDelegate":205,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":81,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":315,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":86,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":74,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":155,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":146,"org.easymock.tests.MockingTest.testNicePartialClassMocking":73,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":97,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":160,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":328,"org.easymock.tests2.CaptureTest.testCaptureLast":245,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":20,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":1,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":219,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":154,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":232,"org.easymock.tests.MockingTest.testTwoMocks":279,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":255,"org.easymock.tests2.CaptureTest.testCapture1_2446744":244,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":324,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":33,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":95,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":90,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":297,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":235,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":323,"org.easymock.tests.UsageThrowableTest.throwError":105,"org.easymock.tests.UsageStrictMockTest.differentMethods":104,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":180,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":270,"org.easymock.tests.UsageExpectAndThrowTest.floatType":84,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":68,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":227,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":174,"org.easymock.tests.UsageVerifyTest.twoThrows":59,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":168,"org.easymock.samples.PartialClassMockTest.testGetArea":133,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":114,"org.easymock.samples.ExampleTest.voteAgainstRemoval":130,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":120,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":121,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":163,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":83,"org.easymock.tests2.UsageTest.niceToStrict":137,"org.easymock.tests2.ThreadingTest.testChangeDefault":325,"org.easymock.tests2.UsageConstraintsTest.testNotNull":234,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":112,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":183,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":330,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":144,"org.easymock.tests2.UsageTest.defaultResetToNice":140,"org.easymock.samples.ExampleTest.voteAgainstRemovals":127,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":48,"org.easymock.tests.UsageVarargTest.differentLength":264,"org.easymock.tests2.CallbackTest.callback":199,"org.easymock.tests.UsageTest.openCallCountByLastCall":4,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":91,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":192,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":211,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":32,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":273,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":281,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":9,"org.easymock.tests.UsageCallCountTest.tooFewCalls":274,"org.easymock.tests.UsageOverloadedMethodTest.overloading":70,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":225,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":24,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":69,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":44,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":151,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":224,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":247,"org.easymock.tests.UsageThrowableTest.throwCheckedException":109,"org.easymock.tests2.EasyMockSupportClassTest.testAll":166,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":288,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":99,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":329,"org.easymock.tests2.CaptureTest.testCaptureAll":242,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":76,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":153,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":150,"org.easymock.tests2.UsageConstraintsTest.testMatches":226,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":0,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":152,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":176,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":280,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":67,"org.easymock.samples.ExampleTest.voteForRemovals":131,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":320,"org.easymock.tests2.NameTest.nameForNiceMock":303,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":182,"org.easymock.tests.UsageVarargTest.allKinds":269,"org.easymock.tests2.DependencyTest.testInterfaceMocking":237,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":58,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":319,"org.easymock.samples.BasicClassMockTest.testPrintContent":292,"org.easymock.samples.ExampleTest.addDocument":290,"org.easymock.tests2.DelegateToTest.testStubDelegate":202,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":111,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":305,"org.easymock.tests2.AnswerTest.stubAnswer":175,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":204,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":21,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":102,"org.easymock.tests2.UsageConstraintsTest.greaterThan":228,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":13,"org.easymock.tests.UsageVarargTest.varargLongAccepted":266,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":164,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":286,"org.easymock.samples.ExampleTest.voteForRemoval":129,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":179,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":51,"org.easymock.tests.UsageExpectAndReturnTest.floatType":35,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":177,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":126,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":272,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":229,"org.easymock.tests.UsageThrowableTest.noUpperLimit":106,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":212,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":123,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":134,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":313,"org.easymock.tests2.SerializationTest.test":240,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":189,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":107,"org.easymock.tests2.UsageConstraintsTest.testSame":217,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":34,"org.easymock.samples.SupportTest.addDocument":289,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":16,"org.easymock.tests2.CaptureTest.testCaptureFirst":251,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":200,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":190,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":142,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":40,"org.easymock.tests.GenericTest.testPackageScope":118,"org.easymock.tests2.CaptureTest.testCapture2_2446744":250,"org.easymock.tests2.UsageTest.moreThanOneArgument":136,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":181,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":80,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":147,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":268,"org.easymock.tests2.NameTest.nameForMock":301,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":277,"org.easymock.tests.UsageExpectAndReturnTest.longType":36,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":187,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":45,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":100,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":310,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":56,"org.easymock.tests2.UsageStrictMockTest.differentMethods":210,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":98,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":64,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":27,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":37,"org.easymock.tests.UsageCallCountTest.tooManyCalls":278,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":96,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":15,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":53,"org.easymock.tests2.MockedExceptionTest.testRealException":186,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":41,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":208,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":87,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":8,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":110,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":149,"org.easymock.tests2.NameTest.nameForStrictMock":302,"org.easymock.tests2.UsageConstraintsTest.testContains":223,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":185,"org.easymock.tests2.UsageConstraintsTest.testFind":215,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":71,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":332,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":252,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":159,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":282,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":253,"org.easymock.tests.UsageExpectAndReturnTest.object":43,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":334,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":230,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":161,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":143,"org.easymock.tests2.UsageStrictMockTest.range":209,"org.easymock.tests2.UsageConstraintsTest.lessThan":236,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":195,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":318,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":263,"org.easymock.tests.UsageTest.exactCallCountByLastCall":6,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":254,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":75,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":326,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":188,"org.easymock.tests2.CaptureTest.testCaptureRightOne":248,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":78,"org.easymock.tests2.UsageConstraintsTest.testOr":218,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":322,"org.easymock.tests.UsageRangeTest.combination":12,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":259,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":49,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":156,"org.easymock.tests.UsageTest.wrongArguments":256,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":23,"org.easymock.tests2.EasyMockSupportTest.testVerify":300,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":38,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":46,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":79,"org.easymock.tests.UsageVarargTest.varargShortAccepted":265,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":22,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":31,"org.easymock.tests2.UsageConstraintsTest.cmpTo":222,"org.easymock.tests.UsageVarargTest.varargCharAccepted":262,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":173,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":306,"org.easymock.tests2.UsageTest.openCallCountByLastCall":138,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":139,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":331,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":198,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":30,"org.easymock.tests2.CaptureTest.testCaptureFromStub":249,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":89,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":284,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":108,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":275,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":47,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":285,"org.easymock.tests2.UsageConstraintsTest.constraints":213,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":162,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":88,"org.easymock.samples.ExampleTest.addAndChangeDocument":132,"org.easymock.tests.UsageStrictMockTest.testVerify":287,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":50,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":26,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":293,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":169,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":314,"org.easymock.tests2.UsageTest.resumeIfFailure":141,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":115,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":39,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":25,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":116,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":335,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":260,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":193}}]
