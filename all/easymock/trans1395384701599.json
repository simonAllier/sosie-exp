[{"transplant":{"position":"org.easymock.internal.Injector:206","sourceCode":"final java.lang.NoSuchFieldException java.lang.NoSuchFieldException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMockSupport:530","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.createNiceControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl() : org.easymock.EasyMockSupport.createControl()","type":"CtLocalVariableImpl"},"failures":[248,249,3,175,176,250],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[251,24,25,26,28,252,29,32,33,253,254,255,256,59,60,62,63,116,257,258,151,152,157,158,162,164,165,228,259,242],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"proxy":"proxy"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[248,248,249,249,3,12,13,260,261,262,35,36,37,75,88,89,263,113,264,265,266,267,268,167,171,173,174,175,176,177,269,270,271,178,272,179,180,273,274,250,181,182,183,184,186,187,220,221,223,224,225,275,226,276,277,227,278,279,247],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"toStringMethod","equalsMethod":"toStringMethod"}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[280],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:40","sourceCode":"if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < (java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[281,282,283,284,285,286,287,24,25,26,28,252,29,32,33,253,254,59,60,62,63,116,151,152,157,158,162,164,165,288,289,290,291,292,293,294,295,296,297,298,209],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,299,19,20,21,22,23,300,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,301,58,59,60,61,62,63,64,302,65,303,66,67,68,69,70,304,71,72,73,74,75,76,77,78,79,80,81,305,306,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,307,128,129,130,131,132,133,134,135,136,137,138,139,140,308,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,309,157,158,159,160,310,161,162,163,164,165,166,167,311,312,313,314,168,169,170,315,171,172,173,174,175,176,177,270,178,179,180,274,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,316,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,277,227,278,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[28,38,44,50,54,56,92,93,99,105,109,111,116,317,130,131,148,151,188,189,190,193,207,210,219,230,236,237,241,246],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:1763","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"failures":[270,250],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[318,319,170,315],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:205","sourceCode":"java.lang.reflect.Constructor<?>.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:207","sourceCode":"T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cstr":"cstr"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[281,283,252,59,289,296],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1543","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:275","sourceCode":"return java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>","type":"CtReturnImpl"},"failures":[320,321],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[322,323,324,325],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[212],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:44","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Void.java.lang.Class<java.lang.Void>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[201],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[248,248,249,249,300,60,65,66,67,70,77,78,79,80,81,114,115,326,327,328,329,330,331,332,333,334,335,162,193,194,197,198,199,200,205,207,208,210,211,217,218,219,336],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:193","sourceCode":"if (!(this.boolean)) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:217","sourceCode":"if ((boolean) && ((org.easymock.internal.Result) == null)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[0,248,248,249,249,1,2,3,4,5,6,7,8,9,10,337,11,12,13,338,339,340,14,15,16,17,18,299,19,20,21,22,23,300,24,25,26,27,28,252,29,30,31,32,33,34,253,254,262,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,301,58,59,60,61,62,63,64,302,341,342,343,344,65,303,66,67,68,69,70,304,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,71,360,72,73,361,74,362,75,363,364,365,366,76,367,77,78,79,80,81,305,368,369,370,371,372,373,374,306,375,82,83,84,85,376,86,87,88,89,263,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,377,264,265,266,267,378,379,380,381,382,383,257,384,385,117,118,119,120,121,122,123,124,386,125,126,387,388,331,332,333,334,335,127,307,128,129,130,131,132,133,134,135,136,137,138,139,140,308,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,309,157,158,159,160,310,161,162,163,164,165,166,167,311,312,313,314,168,319,389,169,170,315,390,391,392,393,171,172,173,174,175,176,177,269,270,178,272,179,180,273,274,250,394,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,316,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,275,226,276,277,227,278,228,229,230,231,232,233,234,235,236,237,238,239,336,240,241,242,395,243,244,245,396,246,397,398,247,399],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"shouldBeUsedInOneThread":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,337,12,13,14,15,16,17,18,19,20,21,22,23,25,26,252,29,32,33,34,254,35,36,37,40,41,43,48,53,58,59,61,64,302,69,304,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,71,72,73,74,362,75,305,368,369,370,371,375,84,85,376,86,87,88,89,90,91,95,96,98,103,108,113,377,264,265,266,267,378,379,380,383,257,384,385,117,118,119,120,121,122,123,124,134,135,136,137,138,139,140,308,141,142,143,144,145,146,147,149,150,152,153,154,309,157,158,160,161,163,166,167,168,169,390,391,392,393,171,172,173,174,175,176,177,269,178,272,179,180,273,250,181,182,183,184,185,186,187,191,192,196,201,202,203,204,206,209,212,213,214,215,216,220,221,222,223,224,225,275,226,276,227,228,229,230,231,232,234,235,236,237,238,239,241,242,243,245,397,398,247],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:44","sourceCode":"throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()","type":"CtThrowImpl"},"failures":[299,25,26,27,252,29,32,33,34,301,59,61,62,63,376,86,87,116,127,135,139,140,142,148,149,152,153,154,157,158,159,160,310,163,164,165,270,273,274,250,190,195,209,221,277,278],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:380","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[134,135,400],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[401,402,403],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[11,28,38,44,50,54,56,92,93,99,105,109,111,116,317,381,130,131,148,151,188,189,193,207,210,219,230,236,237,241,246],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:43","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"failures":[291,293,294],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"failures":[25,29,32,33,301,60,66,69,91,117,118,120,121,122,123,124,133,135,136,138,139,140,141,142,148,152,153,154,157,158,310,162,170,200,212,239],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1952","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:52","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"failures":[190],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:54","failures":[404],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.EasyMock:1373","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[6,72,405,243,245,396,246],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[196],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":196,"org.easymock.tests2.UsageTest.argumentsOrdered":158,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":27,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":143,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":154,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":4,"org.easymock.tests2.DelegateToTest.testReturnException":243,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":364,"org.easymock.tests.MockingTest.testPartialClassMocking":35,"org.easymock.tests.MockClassControlTest.testToString":265,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":344,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":330,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":175,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":93,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":147,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":202,"org.easymock.tests2.UsageTest.wrongArguments":152,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":66,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":358,"org.easymock.samples.ExampleTest.answerVsDelegate":6,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":261,"org.easymock.tests2.UsageConstraintsTest.testNull":198,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":223,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":142,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":380,"org.easymock.tests2.CaptureTest.testPrimitive":232,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":70,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":112,"org.easymock.tests.UsageTest.moreThanOneArgument":28,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":222,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":333,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":386,"org.easymock.tests.UsageTest.argumentsOrdered":33,"org.easymock.tests.UsageVarargTest.varargIntAccepted":16,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":297,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":77,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":269,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":272,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":405,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":81,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":292,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":242,"org.easymock.tests.ReplayStateInvalidUsageTest.times":352,"org.easymock.tests2.AnswerTest.answer":168,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":316,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":393,"org.easymock.tests2.CaptureTest.testAnd":229,"org.easymock.tests2.UsageTest.strictResetToDefault":150,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":276,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":332,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":138,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":128,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":388,"org.easymock.tests2.DelegateToTest.testDelegate":246,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":108,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":76,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":371,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":253,"org.easymock.tests2.CaptureTest.testCapture1_2446744":233,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":106,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":391,"org.easymock.tests.UsageThrowableTest.throwError":117,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":346,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":335,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":280,"org.easymock.samples.PartialClassMockTest.testGetArea":3,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":347,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":78,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":342,"org.easymock.tests2.UsageTest.niceToStrict":153,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":94,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":326,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":178,"org.easymock.tests2.MockBuilderTest.testCreateMock":273,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":102,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":289,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":139,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":340,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":306,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":356,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":323,"org.easymock.tests.UsageOverloadedMethodTest.overloading":91,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":73,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":207,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":49,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":90,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":402,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":206,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":238,"org.easymock.tests2.EasyMockSupportClassTest.testAll":174,"org.easymock.tests.MockClassControlTest.testEquals":379,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":89,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":110,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":294,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":392,"org.easymock.tests2.CaptureTest.testCaptureAll":230,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":369,"org.easymock.tests.MockNameTest.defaultName":251,"org.easymock.tests2.UsageConstraintsTest.testMatches":208,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":304,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":334,"org.easymock.samples.ExampleTest.voteForRemovals":10,"org.easymock.tests.UsageVarargTest.allKinds":23,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":24,"org.easymock.samples.BasicClassMockTest.testPrintContent":13,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":370,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":123,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":310,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":396,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":367,"org.easymock.tests2.UsageConstraintsTest.greaterThan":210,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":307,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":278,"org.easymock.samples.ExampleTest.voteForRemoval":7,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":189,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":275,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":149,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":75,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":136,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":119,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":363,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":395,"org.easymock.tests2.CaptureTest.testCaptureFirst":241,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":318,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":137,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":160,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":362,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":45,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":191,"org.easymock.tests2.UsageTest.moreThanOneArgument":151,"org.easymock.tests2.CaptureTest.testCapture2_2446744":240,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":274,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":22,"org.easymock.tests.GenericTest.testBridgedEquals":321,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":324,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":86,"org.easymock.tests.UsageExpectAndReturnTest.longType":41,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":134,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":305,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":111,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":215,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":300,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":109,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":331,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":373,"org.easymock.tests.UsageCallCountTest.tooManyCalls":87,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":282,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":82,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":46,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":98,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":122,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":182,"org.easymock.tests2.UsageConstraintsTest.testContains":205,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":375,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":247,"org.easymock.tests2.UsageConstraintsTest.testFind":197,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":92,"org.easymock.tests.MockTypeTest.fromEasyMockClass":255,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":131,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":301,"org.easymock.tests.UsageExpectAndReturnTest.object":48,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":226,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":141,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":18,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":385,"org.easymock.tests.UsageTest.exactCallCountByLastCall":34,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":325,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":65,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":328,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":125,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":286,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":14,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":54,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":72,"org.easymock.tests.MockClassControlTest.testHashCode":378,"org.easymock.tests2.EasyMockSupportTest.testVerify":145,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":291,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":126,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":71,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":339,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":390,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":394,"org.easymock.tests.UsageVarargTest.varargCharAccepted":17,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":161,"org.easymock.tests2.UsageTest.openCallCountByLastCall":155,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":144,"org.easymock.tests.DefaultClassInstantiatorTest.object":383,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":338,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":257,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":287,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":100,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":120,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":267,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":277,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":99,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":55,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":372,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":177,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":266,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":293,"org.easymock.tests2.UsageTest.resumeIfFailure":159,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":260,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":366,"org.easymock.tests2.StubTest.stubWithReturnValue":133,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":47,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":216,"org.easymock.tests2.SerializationTest.testAllMockedMethod":173,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":381,"org.easymock.samples.SupportTest.voteForRemovals":2,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":296,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":320,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":105,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":382,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":319,"org.easymock.tests.UsageExpectAndThrowTest.object":103,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":213,"org.easymock.tests2.DelegateToTest.testWrongClass":245,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":114,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":115,"org.easymock.tests.UsageStrictMockTest.range":62,"org.easymock.samples.ConstructorCalledMockTest.testTax":248,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":259,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":308,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":181,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":104,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":179,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":32,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":354,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":357,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":281,"org.easymock.tests2.CaptureTest.testCaptureNone":237,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":343,"org.easymock.tests.UsageUnorderedTest.message":116,"org.easymock.tests.UsageVerifyTest.twoReturns":26,"org.easymock.tests.UsageVarargTest.varargByteAccepted":21,"org.easymock.tests2.ThreadingTest.testThreadSafe":188,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":85,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":12,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":258,"org.easymock.tests2.CaptureTest.testCapture_2617107":231,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":298,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":69,"org.easymock.tests2.UsageConstraintsTest.any":203,"org.easymock.tests2.StubTest.stub":132,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":351,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":374,"org.easymock.tests.UsageExpectAndThrowTest.longType":96,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":365,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":401,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":350,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":163,"org.easymock.tests2.SerializationTest.testClass":171,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":228,"org.easymock.tests.LimitationsTest.mockNativeMethod":113,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":57,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":263,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":166,"org.easymock.tests2.NameTest.nameForMocksControl":314,"org.easymock.tests2.MockedExceptionTest.testMockedException":398,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":31,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":97,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":37,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":220,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":180,"org.easymock.tests.MockingTest.testNicePartialClassMocking":36,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":225,"org.easymock.tests2.CaptureTest.testCaptureLast":236,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":254,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":187,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":201,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":214,"org.easymock.tests.MockingTest.testTwoMocks":262,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":38,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":101,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":157,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":218,"org.easymock.samples.ExampleTest.removeNonExistingDocument":337,"org.easymock.tests.UsageStrictMockTest.differentMethods":63,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":348,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":190,"org.easymock.tests2.ConstraintsToStringTest.andToString":295,"org.easymock.tests2.MockBuilderTest.testCreateMockString":250,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":377,"org.easymock.tests.UsageExpectAndThrowTest.floatType":95,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":209,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":169,"org.easymock.tests.UsageVerifyTest.twoThrows":25,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":176,"org.easymock.samples.ExampleTest.voteAgainstRemoval":8,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":341,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":227,"org.easymock.tests2.UsageConstraintsTest.testNotNull":217,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":397,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":124,"org.easymock.tests2.UsageTest.defaultResetToNice":309,"org.easymock.samples.ExampleTest.voteAgainstRemovals":5,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":53,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":317,"org.easymock.tests.UsageVarargTest.differentLength":299,"org.easymock.tests2.CallbackTest.callback":148,"org.easymock.tests2.UsageConstraintsTest.equals":404,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":284,"org.easymock.tests.UsageTest.openCallCountByLastCall":30,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":193,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":68,"org.easymock.tests.UsageCallCountTest.tooFewCalls":83,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":184,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":359,"org.easymock.tests.UsageThrowableTest.throwCheckedException":121,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":283,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":186,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":303,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":183,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":353,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":185,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":315,"org.easymock.tests.ObjectMethodsTest.testHashCode":384,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":192,"org.easymock.tests2.NameTest.nameForNiceMock":313,"org.easymock.tests2.DependencyTest.testInterfaceMocking":146,"org.easymock.samples.ExampleTest.addDocument":9,"org.easymock.tests2.DelegateToTest.testStubDelegate":244,"org.easymock.tests2.AnswerTest.stubAnswer":170,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":60,"org.easymock.tests.UsageVarargTest.varargLongAccepted":20,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":64,"org.easymock.tests.UsageExpectAndReturnTest.floatType":40,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":56,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":167,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":249,"org.easymock.tests2.ConstraintsToStringTest.orToString":288,"org.easymock.tests.UsageThrowableTest.noUpperLimit":118,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":211,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":361,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":194,"org.easymock.tests2.SerializationTest.test":172,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":234,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":403,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":39,"org.easymock.tests2.UsageConstraintsTest.testSame":199,"org.easymock.samples.SupportTest.addDocument":1,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":400,"org.easymock.tests.GenericTest.testPackageScope":88,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":387,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":327,"org.easymock.tests2.NameTest.nameForMock":311,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":50,"org.easymock.tests2.UsageStrictMockTest.differentMethods":165,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":42,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":107,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":129,"org.easymock.tests2.MockedExceptionTest.testRealException":399,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":256,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":329,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":285,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":162,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":67,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":355,"org.easymock.tests2.NameTest.nameForStrictMock":312,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":130,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":322,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":224,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":212,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":270,"org.easymock.tests2.UsageStrictMockTest.range":164,"org.easymock.tests2.UsageConstraintsTest.lessThan":219,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":135,"org.easymock.tests2.CaptureTest.testCaptureRightOne":239,"org.easymock.tests2.UsageConstraintsTest.testOr":200,"org.easymock.tests.UsageRangeTest.combination":127,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":221,"org.easymock.tests.UsageTest.wrongArguments":29,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":264,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":43,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":51,"org.easymock.tests.UsageVarargTest.varargShortAccepted":19,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":376,"org.easymock.tests2.UsageConstraintsTest.cmpTo":204,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":389,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":156,"org.easymock.tests2.CaptureTest.testCaptureFromStub":336,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":345,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":271,"org.easymock.tests.UsageTest.unexpectedCallWithArray":252,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":59,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":84,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":52,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":61,"org.easymock.tests2.UsageConstraintsTest.constraints":195,"org.easymock.samples.ExampleTest.addAndChangeDocument":11,"org.easymock.tests2.ConstraintsToStringTest.notToString":290,"org.easymock.tests.UsageStrictMockTest.testVerify":302,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":0,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":58,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":368,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":235,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":79,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":44,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":74,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":80,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":140,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":15}}]
