[{"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:49","sourceCode":"java.lang.StringBuffer.append((((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\"))","type":"CtInvocationImpl"},"failures":[0,1,2,3,4],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:38","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"failures":[5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"expected"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"method":"candidateMethod"}},{"position":"org.easymock.internal.RecordState:217","failures":[6,7,8,9,10,10,11,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,5,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[238,239],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[16,183,318,321,323,324,325,347],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[363],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[6,7,8,9,12,13,14,15,16,17,18,19,20,22,24,25,33,34,36,41,45,46,47,48,50,51,52,65,71,72,73,75,76,78,79,80,81,82,83,84,89,90,91,92,93,94,95,96,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,136,137,138,139,140,149,151,152,153,154,155,156,157,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,181,182,183,185,186,188,198,199,200,201,202,203,204,214,215,216,217,218,219,220,222,223,224,225,226,229,231,232,233,234,235,236,5,237,238,239,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,278,279,280,281,282,283,284,286,287,288,290,297,299,300,304,305,306,307,308,309,310,311,313,314,315,316,317,318,321,322,324,325,326,327,328,329,330,331,333,336,338,339,340,341,342,343,344,345,346,347,353,354,355,356,357,358,359,360,361,362],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.Range:36","failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,364,33,34,35,365,366,367,36,368,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,369,65,66,67,68,69,70,71,72,73,370,74,371,372,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,373,97,374,375,376,377,378,379,380,381,382,98,99,100,383,101,384,385,386,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,387,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,388,389,390,391,392,393,394,395,396,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,397,209,210,211,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,212,416,417,418,419,420,213,421,214,215,216,217,218,219,220,221,222,223,224,225,226,422,423,424,425,426,427,428,227,228,229,230,231,232,233,234,429,235,236,5,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,430,431,432,433,434,259,435,436,437,438,439,440,260,261,262,263,264,441,442,443,444,445,265,446,447,448,449,450,451,266,267,268,269,270,271,272,273,274,275,276,277,278,279,452,453,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,454,296,455,363,456,297,298,299,457,300,458,459,301,302,460,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,461,462,318,319,320,321,322,323,324,463,325,326,327,328,329,330,331,332,464,333,465,466,334,335,336,337,467,468,338,339,340,341,469,342,343,344,470,345,346,347,471,348,349,350,351,352,353,354,355,356,357,358,472,473,474,359,475,476,360,477,478,479,480,481,482,483,484,485,361,486,487,488,489,490,362,491,492],"status":-1,"binaryOperator":"(int <= int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"type"}},{"transplant":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"failures":[41,52,84,85,122,123,124,125,126,140,153,154,155,156,157,181,182,199,200,231,232,233,234,235,236,5,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,266,267,268,269,270,271,272,273,274,275,276,277,278,279,324,325,333,354],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:95","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.util.Stack<org.easymock.IArgumentMatcher>.pop();\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[233,234,236,237,238,240,250,255,266,268,276],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1107","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1672","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(short[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[493,494,65,77,78,79,80,81,82,83,84,199,200,495,496,266],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[10,11,317,497,498],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:105","sourceCode":"if ((java.lang.Class<T>.isInterface()) && (java.lang.reflect.Method[] != null)) {\n    throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\");\n} ","type":"CtIfImpl"},"failures":[470],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[199,495],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:209","sourceCode":"if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"exception":"candidateParameter","throwableClass":"candidateParameter"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[16,183,413,318,320,321,323,324,325,347],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:139","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:78","sourceCode":"continue","type":"CtContinueImpl"},"failures":[499],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":234,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":75,"org.easymock.tests2.UsageTest.argumentsOrdered":314,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":224,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":435,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":410,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":309,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":9,"org.easymock.tests2.DelegateToTest.testReturnException":286,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":38,"org.easymock.tests.MockingTest.testPartialClassMocking":99,"org.easymock.tests.MockClassControlTest.testToString":143,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":471,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":74,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":468,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":480,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":160,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":360,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":281,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":239,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":153,"org.easymock.tests2.UsageTest.wrongArguments":307,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":451,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":195,"org.easymock.samples.ExampleTest.answerVsDelegate":16,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":394,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":385,"org.easymock.tests2.UsageConstraintsTest.testNull":236,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":329,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":148,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":223,"org.easymock.tests2.CaptureTest.testPrimitive":269,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":157,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":179,"org.easymock.tests.UsageTest.moreThanOneArgument":76,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":328,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":68,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":23,"org.easymock.tests.UsageTest.argumentsOrdered":82,"org.easymock.tests.UsageVarargTest.varargIntAccepted":132,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":415,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":122,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":295,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":439,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":424,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":298,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":402,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":126,"org.easymock.tests.ReplayStateInvalidUsageTest.times":61,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":265,"org.easymock.tests2.DependencyTest.testClassMocking":452,"org.easymock.tests2.AnswerTest.answer":318,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":240,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":416,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":294,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":391,"org.easymock.tests2.CaptureTest.testAnd":266,"org.easymock.tests2.UsageTest.strictResetToDefault":305,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":334,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":363,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":67,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":151,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":218,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":27,"org.easymock.tests2.DelegateToTest.testDelegate":290,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":175,"org.easymock.tests.LimitationsTest.mockFinalMethod":368,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":41,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":32,"org.easymock.tests2.DependencyTest.testClassMockingSupport":453,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":158,"org.easymock.tests2.CaptureTest.testCapture1_2446744":270,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":464,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":173,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":292,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":55,"org.easymock.tests.UsageThrowableTest.throwError":89,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":393,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":440,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":369,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":70,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":497,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":492,"org.easymock.samples.PartialClassMockTest.testGetArea":6,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":56,"org.easymock.tests.MockingTest.testInterfaceMocking":383,"org.easymock.tests2.CompareToTest.testLessOrEqual":4,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":123,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":481,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":399,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":161,"org.easymock.tests2.UsageTest.niceToStrict":308,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":498,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":400,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":297,"org.easymock.tests2.MockBuilderTest.testCreateMock":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":488,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":448,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":495,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":169,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":219,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":390,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":88,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":43,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":193,"org.easymock.tests.UsageOverloadedMethodTest.overloading":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":490,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":485,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":186,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":245,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":113,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":71,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":244,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":275,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":387,"org.easymock.tests.MockClassControlTest.testEquals":147,"org.easymock.tests2.EasyMockSupportClassTest.testAll":359,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":34,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":177,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":30,"org.easymock.tests2.CaptureTest.testCaptureAll":267,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":293,"org.easymock.tests.MockNameTest.defaultName":372,"org.easymock.tests2.UsageConstraintsTest.testMatches":246,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":53,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":69,"org.easymock.samples.ExampleTest.voteForRemovals":20,"org.easymock.tests.UsageVarargTest.allKinds":140,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":127,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":31,"org.easymock.samples.BasicClassMockTest.testPrintContent":8,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":95,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":352,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":436,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":42,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":289,"org.easymock.tests2.UsageConstraintsTest.greaterThan":248,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":379,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":475,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":150,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":337,"org.easymock.samples.ExampleTest.voteForRemoval":17,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":380,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":467,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":261,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":395,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":425,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":332,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":65,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":304,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":459,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":407,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":216,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":473,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":37,"org.easymock.tests2.CaptureTest.testCaptureFirst":279,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":285,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":406,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":217,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":316,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":189,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":109,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":263,"org.easymock.tests2.CaptureTest.testCapture2_2446744":278,"org.easymock.tests2.UsageTest.moreThanOneArgument":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":417,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":302,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":139,"org.easymock.tests.GenericTest.testBridgedEquals":365,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":50,"org.easymock.tests.UsageExpectAndReturnTest.longType":105,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":28,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":214,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":178,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":180,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":253,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":176,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":191,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":66,"org.easymock.tests.UsageCallCountTest.tooManyCalls":51,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":45,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":489,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":110,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":450,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":165,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":94,"org.easymock.tests.MockingTest.testNiceClassMocking":386,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":339,"org.easymock.tests.MockingTest.testClassMocking":382,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":44,"org.easymock.tests2.UsageConstraintsTest.testContains":243,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":229,"org.easymock.tests2.UsageConstraintsTest.testFind":235,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":73,"org.easymock.tests.MockTypeTest.fromEasyMockClass":392,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":197,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":325,"org.easymock.tests.UsageExpectAndReturnTest.object":112,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":333,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":449,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":222,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":134,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":211,"org.easymock.tests.UsageTest.exactCallCountByLastCall":83,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":84,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":405,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":24,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":370,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":461,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":130,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":118,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":185,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":431,"org.easymock.tests.MockClassControlTest.testHashCode":146,"org.easymock.tests2.EasyMockSupportTest.testVerify":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":483,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":25,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":183,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":87,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":291,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":258,"org.easymock.tests.UsageVarargTest.varargCharAccepted":133,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":373,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":353,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":421,"org.easymock.tests2.UsageTest.openCallCountByLastCall":310,"org.easymock.tests.DefaultClassInstantiatorTest.object":97,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":225,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":86,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":484,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":167,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":92,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":444,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":430,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":145,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":335,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":166,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":119,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":190,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":362,"org.easymock.tests2.UsageTest.resumeIfFailure":315,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":389,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":423,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":40,"org.easymock.tests2.StubTest.stubWithReturnValue":346,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":457,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":111,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":254,"org.easymock.tests2.SerializationTest.testAllMockedMethod":284,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":212,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":496,"org.easymock.samples.SupportTest.voteForRemovals":14,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":364,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":433,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":172,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":213,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":319,"org.easymock.tests.UsageExpectAndThrowTest.object":170,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":371,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":251,"org.easymock.tests2.DelegateToTest.testWrongClass":288,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":181,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":182,"org.easymock.samples.ConstructorCalledMockTest.testTax":10,"org.easymock.tests.UsageStrictMockTest.range":202,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":427,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":221,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":338,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":171,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":472,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":63,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":81,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":194,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":493,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":208,"org.easymock.tests2.CaptureTest.testCaptureNone":274,"org.easymock.tests.UsageUnorderedTest.message":52,"org.easymock.tests.UsageVerifyTest.twoReturns":129,"org.easymock.tests.UsageVarargTest.varargByteAccepted":138,"org.easymock.tests2.ThreadingTest.testThreadSafe":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":486,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":48,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":398,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":7,"org.easymock.tests2.CaptureTest.testCapture_2617107":268,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":388,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":419,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":156,"org.easymock.tests2.UsageConstraintsTest.any":241,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":60,"org.easymock.tests2.StubTest.stub":345,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":192,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":420,"org.easymock.tests.UsageExpectAndThrowTest.longType":163,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":39,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":377,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":59,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":355,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":259,"org.easymock.tests2.SerializationTest.testClass":282,"org.easymock.tests.LimitationsTest.mockNativeMethod":36,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":121,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":35,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":443,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":358,"org.easymock.tests2.NameTest.nameForMocksControl":351,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":445,"org.easymock.tests2.MockedExceptionTest.testMockedException":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":476,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":80,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":463,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":164,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":101,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":326,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":300,"org.easymock.tests.MockingTest.testNicePartialClassMocking":100,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":331,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":441,"org.easymock.tests2.CompareToTest.testCompareEqual":2,"org.easymock.tests2.CaptureTest.testCaptureLast":273,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":159,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":238,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":344,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":252,"org.easymock.tests.MockingTest.testTwoMocks":98,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":470,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":102,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":168,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":313,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":256,"org.easymock.samples.ExampleTest.removeNonExistingDocument":21,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":447,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":57,"org.easymock.tests.UsageStrictMockTest.differentMethods":203,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":432,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":375,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":262,"org.easymock.tests2.MockBuilderTest.testCreateMockString":303,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":477,"org.easymock.tests.UsageExpectAndThrowTest.floatType":162,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":474,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":321,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":462,"org.easymock.tests.UsageVerifyTest.twoThrows":128,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":361,"org.easymock.samples.ExampleTest.voteAgainstRemoval":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":411,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":206,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":336,"org.easymock.tests.LimitationsTest.privateConstructor":367,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":499,"org.easymock.tests2.UsageConstraintsTest.testNotNull":255,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":96,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":227,"org.easymock.tests2.UsageTest.defaultResetToNice":312,"org.easymock.samples.ExampleTest.voteAgainstRemovals":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":412,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":117,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":442,"org.easymock.tests.UsageVarargTest.differentLength":135,"org.easymock.tests2.CallbackTest.callback":347,"org.easymock.tests2.UsageConstraintsTest.equals":429,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":465,"org.easymock.tests.UsageTest.openCallCountByLastCall":79,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":231,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":155,"org.easymock.tests.UsageCallCountTest.tooFewCalls":46,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":341,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":196,"org.easymock.tests.UsageThrowableTest.throwCheckedException":93,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":494,"org.easymock.tests.MockingTest.testStrictClassMocking":381,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":85,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":343,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":446,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":340,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":62,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":342,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":323,"org.easymock.tests2.CompareToTest.testGreateOrEqual":3,"org.easymock.tests.ObjectMethodsTest.testHashCode":210,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":264,"org.easymock.tests2.NameTest.nameForNiceMock":350,"org.easymock.tests2.DependencyTest.testInterfaceMocking":280,"org.easymock.samples.ExampleTest.addDocument":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":487,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":491,"org.easymock.tests2.DelegateToTest.testStubDelegate":287,"org.easymock.tests2.AnswerTest.stubAnswer":322,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":200,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":458,"org.easymock.tests.UsageVarargTest.varargLongAccepted":137,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":204,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":409,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":120,"org.easymock.tests.UsageExpectAndReturnTest.floatType":104,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":317,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":11,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":438,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":187,"org.easymock.tests.UsageThrowableTest.noUpperLimit":90,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":249,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":232,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":422,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":271,"org.easymock.tests2.SerializationTest.test":283,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":374,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":103,"org.easymock.tests2.UsageConstraintsTest.testSame":5,"org.easymock.samples.SupportTest.addDocument":13,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":469,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":58,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":478,"org.easymock.tests.GenericTest.testPackageScope":33,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":26,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":404,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":437,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":384,"org.easymock.tests2.NameTest.nameForMock":348,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":114,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":460,"org.easymock.tests2.UsageStrictMockTest.differentMethods":357,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":466,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":106,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":174,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":397,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":152,"org.easymock.tests2.MockedExceptionTest.testRealException":230,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":396,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":428,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":414,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":413,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":354,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":154,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":64,"org.easymock.tests2.NameTest.nameForStrictMock":349,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":456,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":324,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":330,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":426,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":250,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":376,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":296,"org.easymock.tests2.UsageStrictMockTest.range":356,"org.easymock.tests2.UsageConstraintsTest.lessThan":257,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":408,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":482,"org.easymock.tests2.CaptureTest.testCaptureRightOne":276,"org.easymock.tests2.UsageConstraintsTest.testOr":237,"org.easymock.tests.UsageRangeTest.combination":149,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":327,"org.easymock.tests.UsageTest.wrongArguments":78,"org.easymock.tests2.MockBuilderTest.testWithConstructor":454,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":479,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":142,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":107,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":401,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":115,"org.easymock.tests.UsageVarargTest.varargShortAccepted":136,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":378,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":49,"org.easymock.tests2.UsageConstraintsTest.cmpTo":242,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":320,"org.easymock.tests2.CompareToTest.testLessThan":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":403,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":311,"org.easymock.tests2.CaptureTest.testCaptureFromStub":277,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":54,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":455,"org.easymock.tests.UsageTest.unexpectedCallWithArray":77,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":199,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":47,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":116,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":201,"org.easymock.tests2.UsageConstraintsTest.constraints":233,"org.easymock.samples.ExampleTest.addAndChangeDocument":22,"org.easymock.tests.UsageStrictMockTest.testVerify":205,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":12,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":198,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":29,"org.easymock.tests2.CompareToTest.testGreateThan":1,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":272,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":124,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":108,"org.easymock.tests.LimitationsTest.abstractClass":366,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":188,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":125,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":131,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":220}}]
