[{"transplant":{"position":"org.easymock.internal.MocksBehavior:157","sourceCode":"break","type":"CtBreakImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[47,48],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[49,50,51,52,53],"status":-1,"binaryOperator":"int >= 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.EqualsWithDelta:40","failures":[54],"status":-1,"binaryOperator":"(((java.lang.Number.doubleValue()) - (java.lang.Number.doubleValue())) <= (java.lang.Number.doubleValue())) && ((java.lang.Number.doubleValue()) <= ((java.lang.Number.doubleValue()) + (java.lang.Number.doubleValue())))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"failures":[55,56],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[3,57,58,59,60,55,5,7,61,62,63,64,45,65,66],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[2,11,67,12,68,69,6,42,70,43,71,72,65],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"transplant":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:127","sourceCode":"java.lang.Object[][int] = java.lang.Object","type":"CtAssignmentImpl"},"failures":[73],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidClassProxyFactory:43","sourceCode":"com.google.dexmaker.stock.ProxyBuilder<T>.constructorArgTypes(org.easymock.ConstructorArgs.getConstructor().getParameterTypes()).constructorArgValues(org.easymock.ConstructorArgs.getInitArgs())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[50,51,52,53],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:233","sourceCode":"if ((org.easymock.internal.ExpectedInvocation) == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg"}},{"position":"org.easymock.ConstructorArgs:54","failures":[96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:70","failures":[137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,49,156,157,158,159,160,161,50,162,163,164,165,166,51,167,168,47,54,169,170,171,172,173,174,175,52,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,2,195,196,197,198,199,200,201,202,203,204,205,206,207,21,208,209,210,55,5,6,44],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[195,211],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[52,212],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[16,17,45],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:229","failures":[213,214,215,216,113],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[217,218,219,220,5,61],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1506","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(double))","type":"CtInvocationImpl"},"failures":[156,161,169],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:231","sourceCode":"if (org.easymock.internal.InjectionTarget.accepts(org.easymock.internal.Injection)) {\n    if (org.easymock.internal.Injection != null) {\n        throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks can be assigned to \\'%s\\': %s and %s\", org.easymock.internal.InjectionTarget.getTargetField(), org.easymock.internal.Injection.getMock(), org.easymock.internal.Injection.getMock()));\n    } \n    org.easymock.internal.Injection = org.easymock.internal.Injection;\n} ","type":"CtIfImpl"},"failures":[221,222,223,224,225,226],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[104,227,228,229],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"failures":[230],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[3,57,58,59,60,55,5,7,61,62,63,64,45,65,66],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[178,179,180,181,182,183,184,185,186,187,188,189,190,191,231,231],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:865","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[173],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,49,156,157,158,159,160,161,50,163,164,165,166,51,167,168,47,54,169,170,171,172,173,174,175,52,232,213,233,234,235,236,237,214,238,104,227,228,239,240,241,0,242,1,243,176,244,215,245,246,247,248,249,250,251,252,253,254,177,255,256,257,258,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,194,259,10,260,261,262,263,105,264,265,2,266,3,4,267,110,113,123,129,268,11,269,270,57,271,272,67,12,273,58,59,274,68,69,275,276,277,278,195,196,279,280,281,132,282,283,284,133,285,286,135,136,225,287,226,288,289,290,291,292,293,294,295,296,13,297,14,15,16,17,18,19,197,198,199,200,201,298,299,20,300,301,302,303,304,305,306,307,308,309,202,310,311,312,313,314,203,204,205,206,207,21,208,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,315,316,317,318,319,320,321,209,210,322,55,323,324,325,326,327,328,329,5,6,330,7,8,331,332,42,333,61,62,70,43,63,64,71,334,335,336,337,44,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,72,45,65,363,364,365,366,367,368,369,370,371,372,46,66],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:152","sourceCode":"boolean boolean = true","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:185","sourceCode":"final boolean boolean = java.lang.reflect.Method.isAccessible()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"failures":[373],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[374,375,376],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[166],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"actual","this":"this"}},{"position":"org.easymock.ConstructorArgs:54","failures":[377,378,379,380,381,374,101,104,375,376,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"return java.lang.reflect.Field.getType().isAssignableFrom(org.easymock.internal.Injection.getMock().getClass())","type":"CtReturnImpl"},"failures":[221,382,223,383],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":156,"org.easymock.tests2.UsageTest.argumentsOrdered":59,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":42,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":151,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":337,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":84,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":272,"org.easymock.tests2.StubTest.stubWithReturnValue":10,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":100,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":352,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":225,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":173,"org.easymock.tests2.SerializationTest.testAllMockedMethod":228,"org.easymock.tests2.DelegateToTest.testReturnException":255,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":335,"org.easymock.tests.MockingTest.testPartialClassMocking":368,"org.easymock.samples.SupportTest.voteForRemovals":289,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":218,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":216,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":92,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":117,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":229,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":22,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":113,"org.easymock.tests.UsageExpectAndThrowTest.object":32,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":194,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":170,"org.easymock.tests2.DelegateToTest.testWrongClass":257,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":209,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":210,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":50,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":205,"org.easymock.tests2.UsageTest.wrongArguments":57,"org.easymock.tests.UsageStrictMockTest.range":7,"org.easymock.samples.ConstructorCalledMockTest.testTax":135,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":341,"org.easymock.samples.ExampleTest.answerVsDelegate":291,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":148,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":280,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":378,"org.easymock.tests2.UsageConstraintsTest.testNull":158,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":0,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":33,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":235,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":150,"org.easymock.tests2.CaptureTest.testPrimitive":181,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":208,"org.easymock.tests.UsageTest.moreThanOneArgument":333,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":63,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":107,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":340,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":241,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":365,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":219,"org.easymock.tests2.CaptureTest.testCaptureNone":186,"org.easymock.tests.UsageUnorderedTest.message":55,"org.easymock.tests.UsageVerifyTest.twoReturns":65,"org.easymock.tests.UsageVarargTest.varargByteAccepted":308,"org.easymock.tests2.ThreadingTest.testThreadSafe":251,"org.easymock.tests.UsageTest.argumentsOrdered":64,"org.easymock.tests.UsageVarargTest.varargIntAccepted":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":124,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":318,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":285,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":89,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":197,"org.easymock.tests2.CaptureTest.testCapture_2617107":180,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":232,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":93,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":21,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":234,"org.easymock.tests2.UsageConstraintsTest.any":163,"org.easymock.tests2.StubTest.stub":259,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":76,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":201,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":336,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":94,"org.easymock.tests.UsageExpectAndThrowTest.longType":25,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":266,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":278,"org.easymock.tests2.SerializationTest.testClass":104,"org.easymock.tests.LimitationsTest.mockNativeMethod":322,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":268,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":362,"org.easymock.tests2.AnswerTest.answer":69,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":162,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":90,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":250,"org.easymock.tests2.CaptureTest.testAnd":178,"org.easymock.tests2.UsageTest.strictResetToDefault":269,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":267,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":244,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":99,"org.easymock.tests2.NameTest.nameForMocksControl":140,"org.easymock.tests2.MockedExceptionTest.testMockedException":261,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":364,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":112,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":145,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":43,"org.easymock.tests2.DelegateToTest.testDelegate":258,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":370,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":211,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":26,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":239,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":236,"org.easymock.tests.MockingTest.testNicePartialClassMocking":369,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":37,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":1,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":221,"org.easymock.tests2.CaptureTest.testCaptureLast":185,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":44,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":133,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":161,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":327,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":171,"org.easymock.tests2.CaptureTest.testCapture1_2446744":182,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":134,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":343,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":35,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":248,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":30,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":58,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":175,"org.easymock.tests.UsageThrowableTest.throwError":13,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":382,"org.easymock.tests.UsageStrictMockTest.differentMethods":8,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":253,"org.easymock.tests2.MockBuilderTest.testCreateMockString":238,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":367,"org.easymock.tests.UsageExpectAndThrowTest.floatType":24,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":114,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":109,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":275,"org.easymock.tests.UsageVerifyTest.twoThrows":45,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":123,"org.easymock.samples.PartialClassMockTest.testGetArea":287,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":198,"org.easymock.samples.ExampleTest.voteAgainstRemoval":293,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":85,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":245,"org.easymock.tests2.UsageTest.niceToStrict":271,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":118,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":97,"org.easymock.tests2.UsageConstraintsTest.testNotNull":174,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":260,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":19,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":374,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":74,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":233,"org.easymock.tests2.UsageTest.defaultResetToNice":273,"org.easymock.tests2.MockBuilderTest.testCreateMock":237,"org.easymock.samples.ExampleTest.voteAgainstRemovals":290,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":358,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":86,"org.easymock.tests.UsageVarargTest.differentLength":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":126,"org.easymock.tests2.CallbackTest.callback":279,"org.easymock.tests2.UsageConstraintsTest.equals":373,"org.easymock.tests.UsageTest.openCallCountByLastCall":70,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":217,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":31,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":146,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":154,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":339,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":207,"org.easymock.tests.UsageCallCountTest.tooFewCalls":316,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":379,"org.easymock.tests.UsageOverloadedMethodTest.overloading":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":122,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":128,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":51,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":46,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":354,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":298,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":282,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":166,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":187,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":342,"org.easymock.tests.UsageThrowableTest.throwCheckedException":16,"org.easymock.tests2.EasyMockSupportClassTest.testAll":110,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":311,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":220,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":39,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":325,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":249,"org.easymock.tests2.CaptureTest.testCaptureAll":179,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":284,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":204,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":222,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":132,"org.easymock.tests2.UsageConstraintsTest.testMatches":167,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":283,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":277,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":366,"org.easymock.tests2.CompareToTest.testGreateOrEqual":53,"org.easymock.samples.ExampleTest.voteForRemovals":295,"org.easymock.tests2.NameTest.nameForNiceMock":139,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":177,"org.easymock.tests.UsageVarargTest.allKinds":202,"org.easymock.tests2.DependencyTest.testInterfaceMocking":193,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":72,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":326,"org.easymock.samples.BasicClassMockTest.testPrintContent":286,"org.easymock.samples.ExampleTest.addDocument":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":125,"org.easymock.tests2.DelegateToTest.testStubDelegate":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":130,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":18,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":264,"org.easymock.tests2.AnswerTest.stubAnswer":276,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":383,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":338,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":6,"org.easymock.tests2.UsageConstraintsTest.greaterThan":47,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":111,"org.easymock.tests.UsageVarargTest.varargLongAccepted":307,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":246,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":331,"org.easymock.samples.ExampleTest.voteForRemoval":292,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":83,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":252,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":361,"org.easymock.tests.UsageExpectAndReturnTest.floatType":345,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":243,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":105,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":136,"org.easymock.tests.UsageThrowableTest.noUpperLimit":297,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":54,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":332,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":11,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":155,"org.easymock.tests2.SerializationTest.test":227,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":183,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":101,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":81,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":143,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":14,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":344,"org.easymock.tests2.UsageConstraintsTest.testSame":159,"org.easymock.samples.SupportTest.addDocument":288,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":108,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":334,"org.easymock.tests2.CaptureTest.testCaptureFirst":191,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":80,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":144,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":68,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":66,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":115,"org.easymock.tests.GenericTest.testPackageScope":310,"org.easymock.tests2.UsageTest.moreThanOneArgument":270,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":254,"org.easymock.tests2.CaptureTest.testCapture2_2446744":190,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":214,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":78,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":309,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":380,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":377,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":320,"org.easymock.tests2.NameTest.nameForMock":137,"org.easymock.tests.UsageExpectAndReturnTest.longType":346,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":323,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":141,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":355,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":40,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":172,"org.easymock.tests2.UsageStrictMockTest.differentMethods":4,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":38,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":103,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":363,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":347,"org.easymock.tests.UsageCallCountTest.tooManyCalls":321,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":36,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":314,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":315,"org.easymock.tests2.MockedExceptionTest.testRealException":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":127,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":351,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":88,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":87,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":2,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":27,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":206,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":17,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":281,"org.easymock.tests2.NameTest.nameForStrictMock":138,"org.easymock.tests2.UsageConstraintsTest.testContains":165,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":262,"org.easymock.tests2.UsageConstraintsTest.testFind":157,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":20,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":376,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":195,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":242,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":328,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":196,"org.easymock.tests.UsageExpectAndReturnTest.object":353,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":56,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":169,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":176,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":213,"org.easymock.tests2.UsageStrictMockTest.range":3,"org.easymock.tests2.UsageConstraintsTest.lessThan":52,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":230,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":149,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":304,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":381,"org.easymock.tests.UsageTest.exactCallCountByLastCall":71,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":203,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":79,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":82,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":119,"org.easymock.tests2.CaptureTest.testCaptureRightOne":188,"org.easymock.tests2.UsageConstraintsTest.testOr":160,"org.easymock.tests.UsageRangeTest.combination":312,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":106,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":359,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":300,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":240,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":372,"org.easymock.tests.UsageTest.wrongArguments":62,"org.easymock.tests2.MockBuilderTest.testWithConstructor":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":116,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":348,"org.easymock.tests2.EasyMockSupportTest.testVerify":153,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":356,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":120,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":371,"org.easymock.tests.UsageVarargTest.varargShortAccepted":306,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":319,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":247,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":192,"org.easymock.tests2.UsageConstraintsTest.cmpTo":164,"org.easymock.tests.UsageVarargTest.varargCharAccepted":303,"org.easymock.tests2.CompareToTest.testLessThan":212,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":265,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":77,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":95,"org.easymock.tests2.UsageTest.openCallCountByLastCall":67,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":12,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":375,"org.easymock.tests.DefaultClassInstantiatorTest.object":73,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":152,"org.easymock.tests2.CaptureTest.testCaptureFromStub":189,"org.easymock.tests.UsageTest.unexpectedCallWithArray":61,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":60,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":121,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":15,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":5,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":317,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":102,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":223,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":357,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":330,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":215,"org.easymock.tests2.UsageConstraintsTest.constraints":49,"org.easymock.samples.ExampleTest.addAndChangeDocument":296,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":28,"org.easymock.tests.CapturesMatcherTest.test":231,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":360,"org.easymock.tests.UsageStrictMockTest.testVerify":9,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":226,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":129,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":324,"org.easymock.tests2.CompareToTest.testGreateThan":48,"org.easymock.tests2.UsageTest.resumeIfFailure":274,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":184,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":199,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":349,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":200,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":301,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":147}}]
