[{"transplant":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"proxy":"proxy"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[10,11,12],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"o"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:48","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"toString\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:156","sourceCode":"final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[13,14,15,16,17,18],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:37","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"failures":[19],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[20,21,22,23],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method","bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.Invocation:154","sourceCode":"return (java.lang.String + \".\") + java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[24,25],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mockName":"this","methodName":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[13,26,14,27,28,29,11,30,15,16,31,17,32,18,33,12,34],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[35,36,37,38,39,40,41,42,43,44,45,46],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"injection":"injection"}},{"transplant":{"position":"org.easymock.internal.ReplayState:61","sourceCode":"final java.lang.Throwable java.lang.Throwable","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[47,48,49,50,51,52],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1687","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(T[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[53,54,47,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,20,21,22,76,77,0,78,79,1,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,2,151,152,153,154,155,156,28,157,158,159,160,161,11,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,32,18,236,237,238],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(this.java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if ((this.java.lang.Object) == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"failures":[219,239],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"o":"actual","this":"expected"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1506","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(double))","type":"CtInvocationImpl"},"failures":[124,129,140],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:63","sourceCode":"java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"failures":[240],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Captures:53","failures":[81,82,83,84,85,241,242,86,87,88,89,243,90,91,25],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[96,137,158],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[244,245,246,247,248],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[249,249,250,250,60,61,251,70,20,22,76,77,0,78,1,80,252,253,254,92,93,95,96,97,255,98,99,100,101,102,104,256,257,149,258,150,259,2,151,152,153,260,154,164,165,166,167,261,6,189,190,262,214,263,227,228,229,264,265],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[249,250,266,267,268,269],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1361","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[249,249,250,250,71,243,120,121,122,125,126,127,128,133,135,136,138,139,144,145,146,270,171,172,173,174,175,184,216,218,219,220,225,226,271,272,273,274,275,276,277,278,279,280],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:622","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"failures":[67,99,133],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[91],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":124,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":235,"org.easymock.tests2.UsageTest.argumentsOrdered":30,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":117,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":158,"org.easymock.tests2.StubTest.stubWithReturnValue":120,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":200,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":35,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":143,"org.easymock.tests2.SerializationTest.testAllMockedMethod":22,"org.easymock.tests2.DelegateToTest.testReturnException":48,"org.easymock.tests.MockingTest.testPartialClassMocking":227,"org.easymock.samples.SupportTest.voteForRemovals":53,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":14,"org.easymock.tests.MockClassControlTest.testToString":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":280,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":23,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":248,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":165,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":69,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":141,"org.easymock.tests2.DelegateToTest.testWrongClass":49,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":225,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":226,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":130,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":218,"org.easymock.tests2.UsageTest.wrongArguments":29,"org.easymock.samples.ConstructorCalledMockTest.testTax":249,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":41,"org.easymock.tests.UsageStrictMockTest.range":186,"org.easymock.samples.ExampleTest.answerVsDelegate":47,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":114,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":76,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":6,"org.easymock.tests2.UsageConstraintsTest.testNull":126,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":95,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":2,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":116,"org.easymock.tests2.CaptureTest.testPrimitive":84,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":220,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":12,"org.easymock.tests.UsageTest.moreThanOneArgument":32,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":94,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":273,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":15,"org.easymock.tests2.CaptureTest.testCaptureNone":87,"org.easymock.tests.UsageVerifyTest.twoReturns":170,"org.easymock.tests2.ThreadingTest.testThreadSafe":62,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":215,"org.easymock.tests.UsageTest.argumentsOrdered":34,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":61,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":247,"org.easymock.tests2.CaptureTest.testCapture_2617107":83,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":171,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":27,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":256,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":246,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":259,"org.easymock.tests2.UsageConstraintsTest.any":131,"org.easymock.tests2.StubTest.stub":244,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":175,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":72,"org.easymock.tests2.SerializationTest.testClass":20,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":105,"org.easymock.tests.LimitationsTest.mockNativeMethod":214,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":67,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":262,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":210,"org.easymock.tests2.AnswerTest.answer":147,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":254,"org.easymock.tests2.CaptureTest.testAnd":81,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":39,"org.easymock.tests2.UsageTest.strictResetToDefault":156,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":75,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":99,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":272,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":233,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":111,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":237,"org.easymock.tests2.DelegateToTest.testDelegate":51,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":19,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":229,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":92,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":151,"org.easymock.tests.MockingTest.testNicePartialClassMocking":228,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":97,"org.easymock.tests2.CaptureTest.testCaptureLast":86,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":37,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":80,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":129,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":142,"org.easymock.tests.MockingTest.testTwoMocks":263,"org.easymock.tests2.CaptureTest.testCapture1_2446744":85,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":191,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":11,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":145,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":245,"org.easymock.tests.UsageThrowableTest.throwError":176,"org.easymock.samples.ExampleTest.removeNonExistingDocument":59,"org.easymock.tests.UsageStrictMockTest.differentMethods":187,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":44,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":64,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":5,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":46,"org.easymock.tests2.MockBuilderTest.testCreateMockString":154,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":230,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":275,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":137,"org.easymock.tests.UsageVerifyTest.twoThrows":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":166,"org.easymock.samples.PartialClassMockTest.testGetArea":60,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":172,"org.easymock.samples.ExampleTest.voteAgainstRemoval":56,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":101,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":4,"org.easymock.tests2.UsageTest.niceToStrict":157,"org.easymock.tests2.UsageConstraintsTest.testNotNull":144,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":183,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":276,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":150,"org.easymock.tests2.MockBuilderTest.testCreateMock":152,"org.easymock.tests2.UsageTest.defaultResetToNice":161,"org.easymock.samples.ExampleTest.voteAgainstRemovals":54,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":206,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":38,"org.easymock.tests2.UsageConstraintsTest.equals":10,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":266,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":40,"org.easymock.tests.UsageTest.openCallCountByLastCall":236,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":13,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":112,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":121,"org.easymock.tests.UsageOverloadedMethodTest.overloading":222,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":135,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":221,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":202,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":78,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":134,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":88,"org.easymock.tests.UsageThrowableTest.throwCheckedException":180,"org.easymock.tests2.EasyMockSupportClassTest.testAll":164,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":190,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":16,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":26,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":252,"org.easymock.tests2.CaptureTest.testCaptureAll":82,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":217,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":1,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":0,"org.easymock.tests2.UsageConstraintsTest.testMatches":136,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":79,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":274,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":211,"org.easymock.samples.ExampleTest.voteForRemovals":58,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":66,"org.easymock.tests.UsageVarargTest.allKinds":239,"org.easymock.tests2.DependencyTest.testInterfaceMocking":68,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":168,"org.easymock.samples.BasicClassMockTest.testPrintContent":251,"org.easymock.samples.ExampleTest.addDocument":57,"org.easymock.tests2.DelegateToTest.testStubDelegate":106,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":182,"org.easymock.tests2.AnswerTest.stubAnswer":148,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":50,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":184,"org.easymock.tests2.UsageConstraintsTest.greaterThan":138,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":232,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":102,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":188,"org.easymock.samples.ExampleTest.voteForRemoval":55,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":63,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":209,"org.easymock.tests.UsageExpectAndReturnTest.floatType":193,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":255,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":70,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":250,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":139,"org.easymock.tests.UsageThrowableTest.noUpperLimit":177,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":265,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":122,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":155,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":3,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":241,"org.easymock.tests2.SerializationTest.test":21,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":109,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":178,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":192,"org.easymock.tests2.UsageConstraintsTest.testSame":127,"org.easymock.tests2.CaptureTest.testCaptureFirst":91,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":110,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":163,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":213,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":198,"org.easymock.tests.GenericTest.testPackageScope":189,"org.easymock.tests2.CaptureTest.testCapture2_2446744":90,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":65,"org.easymock.tests2.UsageTest.moreThanOneArgument":28,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":153,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":277,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":45,"org.easymock.tests.UsageExpectAndReturnTest.longType":194,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":107,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":260,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":203,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":270,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":269,"org.easymock.tests2.UsageStrictMockTest.differentMethods":74,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":271,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":195,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":234,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":199,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":279,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":71,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":219,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":181,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":77,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":257,"org.easymock.tests2.UsageConstraintsTest.testContains":133,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":104,"org.easymock.tests2.UsageConstraintsTest.testFind":125,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":223,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":103,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":96,"org.easymock.tests.UsageExpectAndReturnTest.object":201,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":140,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":98,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":149,"org.easymock.tests2.UsageStrictMockTest.range":73,"org.easymock.tests2.UsageConstraintsTest.lessThan":146,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":115,"org.easymock.tests.UsageTest.exactCallCountByLastCall":238,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":216,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":278,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":108,"org.easymock.tests2.CaptureTest.testCaptureRightOne":89,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":240,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":31,"org.easymock.tests2.UsageConstraintsTest.testOr":128,"org.easymock.tests.UsageRangeTest.combination":231,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":224,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":207,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":93,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":52,"org.easymock.tests.UsageTest.wrongArguments":33,"org.easymock.tests2.MockBuilderTest.testWithConstructor":267,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":43,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":264,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":196,"org.easymock.tests2.EasyMockSupportTest.testVerify":119,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":204,"org.easymock.tests2.UsageConstraintsTest.cmpTo":132,"org.easymock.tests2.UsageTest.openCallCountByLastCall":159,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":160,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":118,"org.easymock.tests2.CaptureTest.testCaptureFromStub":243,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":258,"org.easymock.tests.UsageTest.unexpectedCallWithArray":18,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":17,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":179,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":268,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":42,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":205,"org.easymock.tests2.CaptureTest.testCapture":24,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":9,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":100,"org.easymock.tests2.UsageConstraintsTest.constraints":123,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":185,"org.easymock.tests.CapturesMatcherTest.test":25,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":208,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":36,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":167,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":242,"org.easymock.tests2.UsageTest.resumeIfFailure":162,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":253,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":173,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":261,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":197,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":212,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":174,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":113}}]
