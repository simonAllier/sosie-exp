[{"position":"org.easymock.internal.MockBuilder:235","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1249","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[0,15,16,17],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"length":"i","clazz":"primitiveType"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\")","type":"CtInvocationImpl"},"failures":[18],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:90","sourceCode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:93","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]))","type":"CtInvocationImpl"},"failures":[19],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"result","i":"i"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"failures":[20,21,22,23],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1633","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(float[]))","type":"CtInvocationImpl"},"failures":[24],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[25,26,27,28],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:152","sourceCode":"boolean boolean = true","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:813","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[29],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:63","sourceCode":"java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"in":"in"}},{"transplantationPoint":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"failures":[30],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:30","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"failures":[48],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"this.org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[49],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[0,15,16,17],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:53","failures":[50,51,52],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"failures":[53,54,55],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Same:43","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[56,57],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[58,59,60,61,62,63,64,65,66,67,25,26,68,0,15,16,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,21,86,87,88,89,90,91,92,93,94,95,96,97,24,98,99,100,22,101,29,102,103,104,23,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,31,32,33,34,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,51,164,165,166,10,167,168,169,170,171,172,173,174,35,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,13,13,14,14,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,36,37,38,39,40,41,208,209,210,211,212,213,214,57,215,216,27,28,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,43,44,45,232,233,234,235,236,237,238,239,240,241,242,243,244,245,46,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,52,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,47,342,343,344,345,346,347,348,349,350,351,352,353],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[29],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:509","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType.org.easymock.MockType)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:519","sourceCode":"return org.easymock.EasyMockSupport.createControl(org.easymock.MockType.org.easymock.MockType)","type":"CtReturnImpl"},"failures":[76,77,78,135,142,143,188,189,13,14,192],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[0,4],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs","constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[354],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:104","sourceCode":"throw new java.lang.IllegalStateException(java.lang.String)","type":"CtThrowImpl"},"failures":[355],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:40","sourceCode":"return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:36","sourceCode":"try {\n    if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n        org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n    } \n    return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]));\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace();\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace();\n} catch (final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper) {\n    throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace();\n}","type":"CtTryImpl"},"failures":[58,59,60,61,62,63,64,66,67,25,26,0,15,69,70,71,72,73,74,75,76,77,78,79,80,81,21,86,87,88,89,90,91,92,93,94,95,96,97,24,98,99,100,22,101,29,102,103,23,105,106,107,109,110,112,113,114,115,116,117,118,120,121,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,31,32,33,34,145,146,147,148,149,150,155,156,157,158,159,160,161,162,163,51,164,165,166,10,167,168,169,170,171,172,173,174,35,175,176,177,178,179,180,182,184,185,186,187,188,189,13,13,14,14,192,194,195,196,197,199,200,203,204,205,206,207,36,37,38,39,40,41,208,209,210,211,212,213,57,215,216,27,28,223,224,225,226,227,228,229,230,231,43,44,45,232,233,235,236,238,240,241,242,243,244,245,46,246,247,248,249,250,251,252,253,254,255,261,263,269,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,52,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,47,343,344,345,347,351,352,353],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:40","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Double.java.lang.Class<java.lang.Double>.getName(), java.lang.Double.java.lang.Class<java.lang.Double>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:40","sourceCode":"if (org.easymock.internal.DefaultClassInstantiator.isSerializable(java.lang.Class<?>)) {\n    try {\n        return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n    } catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n    }\n} ","type":"CtIfImpl"},"failures":[53,54,55],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":88,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":316,"org.easymock.tests2.UsageTest.argumentsOrdered":164,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":142,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":39,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":160,"org.easymock.tests2.StubTest.stubWithReturnValue":35,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":3,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":284,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":23,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":190,"org.easymock.tests2.SerializationTest.testAllMockedMethod":16,"org.easymock.tests2.DelegateToTest.testReturnException":146,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":211,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":37,"org.easymock.tests.MockingTest.testPartialClassMocking":343,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":9,"org.easymock.samples.SupportTest.voteForRemovals":192,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":240,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":308,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":17,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":296,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":212,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":76,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":59,"org.easymock.tests.UsageExpectAndThrowTest.object":306,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":102,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":188,"org.easymock.tests2.DelegateToTest.testWrongClass":148,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":331,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":332,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":94,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":244,"org.easymock.tests2.UsageTest.wrongArguments":158,"org.easymock.samples.ConstructorCalledMockTest.testTax":13,"org.easymock.tests.UsageStrictMockTest.range":27,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":221,"org.easymock.samples.ExampleTest.answerVsDelegate":195,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":139,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":167,"org.easymock.tests2.UsageConstraintsTest.testNull":90,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":307,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":178,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":112,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":141,"org.easymock.tests2.CaptureTest.testPrimitive":120,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":247,"org.easymock.tests.UsageTest.moreThanOneArgument":317,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":315,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":52,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":220,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":177,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":253,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":243,"org.easymock.tests2.CaptureTest.testCaptureNone":125,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":48,"org.easymock.tests.UsageUnorderedTest.message":295,"org.easymock.tests.UsageVerifyTest.twoReturns":250,"org.easymock.tests.UsageVarargTest.varargByteAccepted":272,"org.easymock.tests2.ThreadingTest.testThreadSafe":70,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":324,"org.easymock.tests.UsageTest.argumentsOrdered":322,"org.easymock.tests.UsageVarargTest.varargIntAccepted":266,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":350,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":201,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":203,"org.easymock.tests2.CaptureTest.testCapture_2617107":119,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":108,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":246,"org.easymock.tests2.UsageConstraintsTest.any":95,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":111,"org.easymock.tests2.StubTest.stub":174,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":207,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":45,"org.easymock.tests.UsageExpectAndThrowTest.longType":299,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":38,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":53,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":67,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":131,"org.easymock.tests.LimitationsTest.mockNativeMethod":232,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":69,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":294,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":263,"org.easymock.tests2.AnswerTest.answer":58,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":355,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":154,"org.easymock.tests2.CaptureTest.testAnd":117,"org.easymock.tests2.UsageTest.strictResetToDefault":156,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":68,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":2,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":183,"org.easymock.tests2.NameTest.nameForMocksControl":85,"org.easymock.tests2.MockedExceptionTest.testMockedException":32,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":252,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":227,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":136,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":321,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":328,"org.easymock.tests2.DelegateToTest.testDelegate":150,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":345,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":300,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":175,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":113,"org.easymock.tests.MockingTest.testNicePartialClassMocking":344,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":311,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":180,"org.easymock.tests2.CaptureTest.testCaptureLast":124,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":40,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":330,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":93,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":173,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":260,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":103,"org.easymock.tests.MockingTest.testTwoMocks":342,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":329,"org.easymock.tests2.CaptureTest.testCapture1_2446744":121,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":275,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":309,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":304,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":152,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":51,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":106,"org.easymock.tests.UsageThrowableTest.throwError":333,"org.easymock.tests.UsageStrictMockTest.differentMethods":28,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":72,"org.easymock.tests2.MockBuilderTest.testCreateMockString":116,"org.easymock.tests.UsageExpectAndThrowTest.floatType":298,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":255,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":100,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":61,"org.easymock.tests.UsageVerifyTest.twoThrows":249,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":234,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":77,"org.easymock.samples.PartialClassMockTest.testGetArea":189,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":354,"org.easymock.tests2.CompareToTest.testLessOrEqual":20,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":204,"org.easymock.samples.ExampleTest.voteAgainstRemoval":197,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":242,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":241,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":185,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":297,"org.easymock.tests2.UsageTest.niceToStrict":159,"org.easymock.tests2.UsageConstraintsTest.testNotNull":105,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":340,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":31,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":110,"org.easymock.tests2.MockBuilderTest.testCreateMock":114,"org.easymock.tests2.UsageTest.defaultResetToNice":163,"org.easymock.samples.ExampleTest.voteAgainstRemovals":194,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":290,"org.easymock.tests.UsageVarargTest.differentLength":269,"org.easymock.tests2.CallbackTest.callback":81,"org.easymock.tests2.UsageConstraintsTest.equals":50,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":12,"org.easymock.tests.UsageTest.openCallCountByLastCall":320,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":305,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":56,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":137,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":21,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":231,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":346,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":219,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":46,"org.easymock.tests.UsageCallCountTest.tooFewCalls":348,"org.easymock.tests.UsageOverloadedMethodTest.overloading":209,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":236,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":98,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":286,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":208,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":170,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":54,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":24,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":126,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":222,"org.easymock.tests.UsageThrowableTest.throwCheckedException":337,"org.easymock.tests2.EasyMockSupportClassTest.testAll":75,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":262,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":313,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":258,"org.easymock.tests2.CaptureTest.testCaptureAll":118,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":153,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":47,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":172,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":169,"org.easymock.tests2.UsageConstraintsTest.testMatches":99,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":171,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":63,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":254,"org.easymock.samples.ExampleTest.voteForRemovals":199,"org.easymock.tests2.NameTest.nameForNiceMock":84,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":74,"org.easymock.tests.UsageVarargTest.allKinds":274,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":248,"org.easymock.tests2.DependencyTest.testInterfaceMocking":187,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":259,"org.easymock.samples.BasicClassMockTest.testPrintContent":202,"org.easymock.samples.ExampleTest.addDocument":198,"org.easymock.tests2.DelegateToTest.testStubDelegate":147,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":339,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":64,"org.easymock.tests2.AnswerTest.stubAnswer":62,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":41,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":149,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":215,"org.easymock.tests2.UsageConstraintsTest.greaterThan":22,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":226,"org.easymock.tests.UsageVarargTest.varargLongAccepted":271,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":186,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":217,"org.easymock.samples.ExampleTest.voteForRemoval":196,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":71,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":293,"org.easymock.tests.UsageExpectAndReturnTest.floatType":277,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":10,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":181,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":14,"org.easymock.tests.UsageThrowableTest.noUpperLimit":334,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":237,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":101,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":223,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":86,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":155,"org.easymock.tests2.SerializationTest.test":15,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":122,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":4,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":55,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":42,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":134,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":335,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":276,"org.easymock.tests2.UsageConstraintsTest.testSame":91,"org.easymock.samples.SupportTest.addDocument":191,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":36,"org.easymock.tests2.CaptureTest.testCaptureFirst":130,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":145,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":49,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":135,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":166,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":239,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":282,"org.easymock.tests.GenericTest.testPackageScope":261,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":73,"org.easymock.tests2.CaptureTest.testCapture2_2446744":129,"org.easymock.tests2.UsageTest.moreThanOneArgument":157,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":327,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":115,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":273,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":352,"org.easymock.tests2.NameTest.nameForMock":82,"org.easymock.tests.UsageExpectAndReturnTest.longType":278,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":256,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":132,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":314,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":287,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":224,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":104,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":312,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":6,"org.easymock.tests2.UsageStrictMockTest.differentMethods":26,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":251,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":44,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":279,"org.easymock.tests.UsageCallCountTest.tooManyCalls":353,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":310,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":228,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":347,"org.easymock.tests2.MockedExceptionTest.testRealException":34,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":283,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":8,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":301,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":66,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":338,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":245,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":168,"org.easymock.tests2.NameTest.nameForStrictMock":83,"org.easymock.tests2.UsageConstraintsTest.testContains":97,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":33,"org.easymock.tests2.UsageConstraintsTest.testFind":89,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":210,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":79,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":179,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":213,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":80,"org.easymock.tests.UsageExpectAndReturnTest.object":285,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":29,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":182,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":109,"org.easymock.tests2.UsageStrictMockTest.range":25,"org.easymock.tests2.UsageConstraintsTest.lessThan":107,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":140,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":268,"org.easymock.tests.UsageTest.exactCallCountByLastCall":323,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":341,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":133,"org.easymock.tests2.CaptureTest.testCaptureRightOne":127,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":325,"org.easymock.tests2.UsageConstraintsTest.testOr":92,"org.easymock.tests.UsageRangeTest.combination":225,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":11,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":291,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":264,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":176,"org.easymock.tests.UsageTest.wrongArguments":319,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":235,"org.easymock.tests2.MockBuilderTest.testWithConstructor":1,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":280,"org.easymock.tests2.EasyMockSupportTest.testVerify":144,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":288,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":326,"org.easymock.tests.UsageVarargTest.varargShortAccepted":270,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":233,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":230,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":351,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":151,"org.easymock.tests2.UsageConstraintsTest.cmpTo":96,"org.easymock.tests.UsageVarargTest.varargCharAccepted":267,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":60,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":65,"org.easymock.tests2.UsageTest.openCallCountByLastCall":161,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":162,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":143,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":229,"org.easymock.tests2.CaptureTest.testCaptureFromStub":128,"org.easymock.tests.UsageTest.unexpectedCallWithArray":318,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":19,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":303,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":336,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":57,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":349,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":5,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":289,"org.easymock.tests2.CaptureTest.testCapture":30,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":216,"org.easymock.tests2.UsageConstraintsTest.constraints":87,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":184,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":302,"org.easymock.samples.ExampleTest.addAndChangeDocument":200,"org.easymock.tests.CapturesMatcherTest.test":18,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":292,"org.easymock.tests.UsageStrictMockTest.testVerify":218,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":43,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":193,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":78,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":257,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":123,"org.easymock.tests2.UsageTest.resumeIfFailure":165,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":205,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":281,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":238,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":206,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":265,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":138}}]
