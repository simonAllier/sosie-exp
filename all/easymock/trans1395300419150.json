[{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:62","sourceCode":"if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n    throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n} ","type":"CtIfImpl"},"failures":[0,1],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:157","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[2],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:46","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:81","sourceCode":"while (java.lang.Class<?> != (java.lang.Object.java.lang.Object)) {\n    org.easymock.internal.Injector.org.easymock.internal.Injector.injectMocksOnClass(java.lang.Class<?>, java.lang.Object, org.easymock.internal.InjectionPlan);\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"failures":[21,22],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[23,24,25],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:613","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:222","failures":[26,27,28,29],"status":-1,"binaryOperator":"(\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:786","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[30,31,32,33,34,35],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1847","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EqualsWithDelta(float , float))","type":"CtInvocationImpl"},"failures":[36],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:108","sourceCode":"try {\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[37,38,39],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:643","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[73,32,74],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"expected","this":"this"}},{"position":"org.easymock.internal.matchers.Equals:53","failures":[75,76,77],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[78,79],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[80,81,82,83],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[37,38,39,84],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[2,85,86,87],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:354","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.lang.reflect.Type = java.lang.reflect.Type;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","this":"this","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:65","sourceCode":"if (org.easymock.internal.Range.hasFixedCount()) {\n    return \"\" + (int);\n} else if (org.easymock.internal.Range.hasOpenCount()) {\n    return \"at least \" + (int);\n} else {\n    return ((\"between \" + (int)) + \" and \") + (int);\n}","type":"CtIfImpl"},"failures":[88,89,90,50,91,75,92,93,94,95,96,57,32,97,98,99,100,101,102,72,103,77,104],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[73],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1361","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[49],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[105,106,107,108,109,110,111,112,113,114,115],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:643","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[116,117,118,119,120,121,122,81,82,123,124,88,125,89,90,126,40,41,42,127,128,129,43,44,45,37,38,39,130,131,132,108,133,109,134,46,135,136,137,138,139,47,48,140,141,142,143,49,144,145,50,91,146,147,148,149,150,75,92,151,152,153,154,155,51,156,52,157,158,2,85,159,160,86,87,161,162,163,164,73,53,165,166,54,36,167,168,169,170,171,172,55,93,94,95,96,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,0,190,191,192,193,194,195,56,57,196,197,198,199,200,201,202,203,204,205,206,32,97,207,98,99,208,209,210,211,212,213,214,215,216,217,218,219,220,61,221,222,223,224,225,62,226,227,228,229,230,63,231,232,233,64,234,65,235,236,237,238,239,240,241,242,243,244,245,246,247,66,248,249,250,251,252,67,253,254,255,256,257,68,258,259,260,69,261,70,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,74,284,285,286,287,100,101,102,288,71,289,72,35,103,290,291,77,104,292,293,294,295,296,27,297,298,299,300,301,302,303,304,305,306],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:721","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:160","sourceCode":"if (boolean) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:217","sourceCode":"if ((boolean) && ((org.easymock.internal.Result) == null)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[121,88,144,152,97,242,101,102,292],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[89,91,75,92,57,32,98,307,101,102,35,103,77,104],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:90","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[7,15,308],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[129,37,39,309,132,108,310,133,109,173,174,176,177,178,311,179,180,312,181,313,182,314,183,184,315,316,317,185,186,189,318,319,320,321,322,323,324,324,325,325,326,202,203,327,204,236,328,237,238,239,300],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"position":"org.easymock.EasyMock:1177","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[180],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":2,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":289,"org.easymock.tests2.UsageTest.argumentsOrdered":92,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":304,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":15,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":147,"org.easymock.tests2.StubTest.stubWithReturnValue":131,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":113,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":255,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":20,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":170,"org.easymock.tests2.SerializationTest.testAllMockedMethod":39,"org.easymock.tests2.DelegateToTest.testReturnException":153,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":302,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":60,"org.easymock.tests.MockingTest.testPartialClassMocking":237,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":31,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":22,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":63,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":84,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":319,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":61,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":80,"org.easymock.tests.UsageExpectAndThrowTest.object":229,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":168,"org.easymock.tests2.DelegateToTest.testWrongClass":155,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":297,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":298,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":161,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":216,"org.easymock.tests2.UsageTest.wrongArguments":91,"org.easymock.samples.ConstructorCalledMockTest.testTax":324,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":10,"org.easymock.tests.UsageStrictMockTest.range":98,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":295,"org.easymock.samples.ExampleTest.answerVsDelegate":191,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":309,"org.easymock.tests2.UsageConstraintsTest.testNull":159,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":230,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":176,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":315,"org.easymock.tests2.CaptureTest.testPrimitive":136,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":220,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":235,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":77,"org.easymock.tests.UsageTest.moreThanOneArgument":72,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":294,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":175,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":199,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":33,"org.easymock.tests2.CaptureTest.testCaptureNone":48,"org.easymock.tests.UsageUnorderedTest.message":57,"org.easymock.tests.UsageVerifyTest.twoReturns":102,"org.easymock.tests.UsageVarargTest.varargByteAccepted":282,"org.easymock.tests2.ThreadingTest.testThreadSafe":40,"org.easymock.tests.UsageTest.argumentsOrdered":104,"org.easymock.tests.UsageVarargTest.varargIntAccepted":277,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":215,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":322,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":270,"org.easymock.tests2.CaptureTest.testCapture_2617107":135,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":182,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":219,"org.easymock.tests2.UsageConstraintsTest.any":162,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":184,"org.easymock.tests2.StubTest.stub":130,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":274,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":303,"org.easymock.tests.UsageExpectAndThrowTest.longType":223,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":125,"org.easymock.tests2.SerializationTest.testClass":37,"org.easymock.tests.LimitationsTest.mockNativeMethod":236,"org.easymock.tests.ReplayStateInvalidUsageTest.times":58,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":327,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":262,"org.easymock.tests2.AnswerTest.answer":121,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":119,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":5,"org.easymock.tests2.CaptureTest.testAnd":134,"org.easymock.tests2.UsageTest.strictResetToDefault":145,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":112,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":126,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":180,"org.easymock.tests2.NameTest.nameForMocksControl":96,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":6,"org.easymock.tests2.MockedExceptionTest.testMockedException":188,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":198,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":286,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":291,"org.easymock.tests2.DelegateToTest.testDelegate":51,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":239,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":224,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":173,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":316,"org.easymock.tests.MockingTest.testNicePartialClassMocking":238,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":233,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":178,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":3,"org.easymock.tests2.CaptureTest.testCaptureLast":47,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":305,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":27,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":87,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":109,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":269,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":169,"org.easymock.tests.MockingTest.testTwoMocks":328,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":26,"org.easymock.tests2.CaptureTest.testCapture1_2446744":137,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":110,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":66,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":231,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":227,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":117,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":75,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":172,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":78,"org.easymock.tests.UsageThrowableTest.throwError":240,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":196,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":8,"org.easymock.tests.UsageStrictMockTest.differentMethods":99,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":308,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":13,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":42,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":18,"org.easymock.tests2.MockBuilderTest.testCreateMockString":186,"org.easymock.tests.UsageExpectAndThrowTest.floatType":222,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":201,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":166,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":122,"org.easymock.tests.UsageVerifyTest.twoThrows":101,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":28,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":320,"org.easymock.samples.PartialClassMockTest.testGetArea":326,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":271,"org.easymock.samples.ExampleTest.voteAgainstRemoval":193,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":181,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":221,"org.easymock.tests2.UsageTest.niceToStrict":146,"org.easymock.tests2.ThreadingTest.testChangeDefault":79,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":107,"org.easymock.tests2.UsageConstraintsTest.testNotNull":171,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":247,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":187,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":25,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":183,"org.easymock.tests2.MockBuilderTest.testCreateMock":317,"org.easymock.tests2.UsageTest.defaultResetToNice":150,"org.easymock.samples.ExampleTest.voteAgainstRemovals":190,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":260,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":59,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":4,"org.easymock.tests2.CallbackTest.callback":43,"org.easymock.tests2.UsageConstraintsTest.equals":76,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":9,"org.easymock.tests.UsageTest.openCallCountByLastCall":290,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":228,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":30,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":52,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":210,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":293,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":218,"org.easymock.tests.UsageCallCountTest.tooFewCalls":213,"org.easymock.tests.UsageOverloadedMethodTest.overloading":288,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":53,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":1,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":310,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":257,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":73,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":140,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":296,"org.easymock.tests.UsageThrowableTest.throwCheckedException":244,"org.easymock.tests2.EasyMockSupportClassTest.testAll":318,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":203,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":234,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":34,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":267,"org.easymock.tests2.CaptureTest.testCaptureAll":46,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":118,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":264,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":133,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":7,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":108,"org.easymock.tests2.UsageConstraintsTest.testMatches":165,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":82,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":200,"org.easymock.samples.ExampleTest.voteForRemovals":195,"org.easymock.tests2.NameTest.nameForNiceMock":95,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":128,"org.easymock.tests.UsageVarargTest.allKinds":74,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":100,"org.easymock.tests2.DependencyTest.testInterfaceMocking":120,"org.easymock.samples.BasicClassMockTest.testPrintContent":323,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":268,"org.easymock.samples.ExampleTest.addDocument":194,"org.easymock.tests2.DelegateToTest.testStubDelegate":154,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":246,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":123,"org.easymock.tests2.AnswerTest.stubAnswer":81,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":306,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":16,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":97,"org.easymock.tests2.UsageConstraintsTest.greaterThan":54,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":285,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":313,"org.easymock.tests.UsageVarargTest.varargLongAccepted":281,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":208,"org.easymock.samples.ExampleTest.voteForRemoval":192,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":41,"org.easymock.tests.UsageExpectAndReturnTest.floatType":249,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":70,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":311,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":129,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":325,"org.easymock.tests.UsageThrowableTest.noUpperLimit":241,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":29,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":36,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":300,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":144,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":157,"org.easymock.tests2.SerializationTest.test":38,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":138,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":242,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":248,"org.easymock.tests2.UsageConstraintsTest.testSame":160,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":301,"org.easymock.tests2.CaptureTest.testCaptureFirst":49,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":83,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":152,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":253,"org.easymock.tests.GenericTest.testPackageScope":202,"org.easymock.tests2.UsageTest.moreThanOneArgument":50,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":127,"org.easymock.tests2.CaptureTest.testCapture2_2446744":143,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":185,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":17,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":283,"org.easymock.tests2.NameTest.nameForMock":93,"org.easymock.tests.UsageExpectAndReturnTest.longType":250,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":265,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":68,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":65,"org.easymock.tests2.UsageStrictMockTest.differentMethods":90,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":64,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":115,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":197,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":251,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":232,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":287,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":212,"org.easymock.tests2.MockedExceptionTest.testRealException":0,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":254,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":225,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":88,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":245,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":217,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":132,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":211,"org.easymock.tests2.NameTest.nameForStrictMock":94,"org.easymock.tests2.UsageConstraintsTest.testContains":164,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":189,"org.easymock.tests2.UsageConstraintsTest.testFind":85,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":71,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":24,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":44,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":177,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":205,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":45,"org.easymock.tests.UsageExpectAndReturnTest.object":256,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":167,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":179,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":314,"org.easymock.tests2.UsageStrictMockTest.range":89,"org.easymock.tests2.UsageConstraintsTest.lessThan":55,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":279,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":14,"org.easymock.tests.UsageTest.exactCallCountByLastCall":292,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":263,"org.easymock.tests2.CaptureTest.testCaptureRightOne":141,"org.easymock.tests2.UsageConstraintsTest.testOr":86,"org.easymock.tests.UsageRangeTest.combination":284,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":105,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":275,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":69,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":174,"org.easymock.tests.UsageTest.wrongArguments":103,"org.easymock.tests2.MockBuilderTest.testWithConstructor":111,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":12,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":204,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":252,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":258,"org.easymock.tests.UsageVarargTest.varargShortAccepted":280,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":116,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":156,"org.easymock.tests2.UsageConstraintsTest.cmpTo":163,"org.easymock.tests.UsageVarargTest.varargCharAccepted":278,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":124,"org.easymock.tests2.UsageTest.openCallCountByLastCall":148,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":149,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":23,"org.easymock.tests2.CaptureTest.testCaptureFromStub":142,"org.easymock.tests.UsageTest.unexpectedCallWithArray":35,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":307,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":226,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":243,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":32,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":214,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":21,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":114,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":11,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":259,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":312,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":207,"org.easymock.tests2.UsageConstraintsTest.constraints":158,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":62,"org.easymock.samples.ExampleTest.addAndChangeDocument":56,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":261,"org.easymock.tests.UsageStrictMockTest.testVerify":209,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":321,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":206,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":266,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":139,"org.easymock.tests2.UsageTest.resumeIfFailure":151,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":272,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":67,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":299,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":273,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":276}}]
