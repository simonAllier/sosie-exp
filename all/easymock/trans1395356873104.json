[{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:136","sourceCode":"if (java.lang.reflect.Method.isVarArgs()) {\n    int = java.lang.Math.java.lang.Math.min(int, ((java.lang.Class<?>[].int) - 1));\n} ","type":"CtIfImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,0,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:140","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:69","sourceCode":"final java.util.Stack<org.easymock.IArgumentMatcher> java.util.Stack<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.get()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:237","sourceCode":"return org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.reflect.Method.getParameterTypes())","type":"CtReturnImpl"},"failures":[82],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:212","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:182","sourceCode":"if (java.lang.reflect.Proxy.java.lang.reflect.Proxy.isProxyClass(V.getClass())) {\n    return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:52","sourceCode":"return int == int","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:193","sourceCode":"if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[83,84,85,86,87,88,89],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"minimum":"i","maximum":"i"}},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[119,8,9,120,121,13,14,18,21,28,122,50,51,57],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[123],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"failures":[124,125],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"this.org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[126,127,19,128,129,25,130,131,132,94,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,38,55,148,149,150,61,151,152,153,154,155,156,157,65,158,159,160],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"value"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"matched"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[161,162],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[163,164,165,166,1,2,167,168,169,3,170,171,172,5,173,174,175,176,177,178,179,180,181,6,7,8,9,10,182,121,11,12,13,14,15,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,16,17,18,19,20,21,22,23,24,128,203,129,25,204,205,130,206,207,208,209,210,211,212,213,214,215,132,94,133,134,135,216,217,218,219,220,221,222,223,224,225,26,27,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,95,136,137,28,246,247,248,249,250,29,30,31,32,33,34,35,36,251,252,143,144,145,146,147,253,254,255,256,257,37,38,39,40,258,259,260,41,42,261,43,262,263,264,265,266,44,45,46,267,122,47,0,48,49,50,51,268,52,53,54,55,56,57,58,59,60,269,270,271,272,273,97,106,109,110,274,275,161,113,276,148,149,277,278,150,61,151,152,279,280,62,281,153,282,154,155,63,156,157,283,284,285,64,286,65,158,159,114,66,115,116,67,117,287,70,288,289,71,72,290,73,74,75,76,77,291,78,160,79,80,292,293,118,294,81,295,296,297,298],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"failures":[299],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"failures":[148,277,156,286,300],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":278,"org.easymock.tests2.UsageTest.argumentsOrdered":51,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":10,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":262,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":213,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":0,"org.easymock.tests2.StubTest.stubWithReturnValue":38,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":84,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":286,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":192,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":166,"org.easymock.tests2.SerializationTest.testAllMockedMethod":273,"org.easymock.tests2.DelegateToTest.testReturnException":293,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":211,"org.easymock.tests.MockingTest.testPartialClassMocking":91,"org.easymock.samples.SupportTest.voteForRemovals":165,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":82,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":238,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":142,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":226,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":98,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":124,"org.easymock.tests.UsageExpectAndThrowTest.object":236,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":284,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":266,"org.easymock.tests2.DelegateToTest.testWrongClass":294,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":85,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":136,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":137,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":280,"org.easymock.tests2.UsageTest.wrongArguments":122,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":129,"org.easymock.tests.UsageStrictMockTest.range":21,"org.easymock.samples.ConstructorCalledMockTest.testTax":126,"org.easymock.samples.ExampleTest.answerVsDelegate":2,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":106,"org.easymock.tests2.UsageConstraintsTest.testNull":61,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":237,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":116,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":248,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":43,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":103,"org.easymock.tests2.CaptureTest.testPrimitive":290,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":130,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":245,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":13,"org.easymock.tests.UsageTest.moreThanOneArgument":182,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":115,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":145,"org.easymock.tests2.CaptureTest.testCaptureNone":77,"org.easymock.tests.UsageUnorderedTest.message":28,"org.easymock.tests.UsageVerifyTest.twoReturns":9,"org.easymock.tests.UsageVarargTest.varargByteAccepted":180,"org.easymock.tests2.ThreadingTest.testThreadSafe":274,"org.easymock.tests.UsageTest.argumentsOrdered":14,"org.easymock.tests.UsageVarargTest.varargIntAccepted":174,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":219,"org.easymock.tests.InvocationTest.testEquals":4,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":171,"org.easymock.tests2.CaptureTest.testCapture_2617107":72,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":132,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":89,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":205,"org.easymock.tests2.UsageConstraintsTest.any":62,"org.easymock.tests2.StubTest.stub":37,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":135,"org.easymock.tests.UsageExpectAndThrowTest.longType":229,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":212,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":56,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":288,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":292,"org.easymock.tests.LimitationsTest.mockNativeMethod":95,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":202,"org.easymock.tests2.AnswerTest.answer":60,"org.easymock.tests2.CaptureTest.testAnd":289,"org.easymock.tests2.UsageTest.strictResetToDefault":46,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":59,"org.easymock.tests2.MockedExceptionTest.testMockedException":296,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":144,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":260,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":254,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":12,"org.easymock.tests2.DelegateToTest.testDelegate":81,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":230,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":93,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":114,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":104,"org.easymock.tests.MockingTest.testNicePartialClassMocking":92,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":241,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":117,"org.easymock.tests2.CaptureTest.testCaptureLast":76,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":214,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":279,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":112,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":285,"org.easymock.tests2.CaptureTest.testCapture1_2446744":73,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":183,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":239,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":234,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":50,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":158,"org.easymock.tests.UsageThrowableTest.throwError":29,"org.easymock.tests.UsageStrictMockTest.differentMethods":22,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":161,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":246,"org.easymock.tests.UsageExpectAndThrowTest.floatType":228,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":147,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":63,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":269,"org.easymock.tests.UsageVerifyTest.twoThrows":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":99,"org.easymock.samples.PartialClassMockTest.testGetArea":90,"org.easymock.tests2.CompareToTest.testLessOrEqual":300,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":94,"org.easymock.samples.ExampleTest.voteAgainstRemoval":168,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":299,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":69,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":227,"org.easymock.tests2.UsageTest.niceToStrict":47,"org.easymock.tests2.UsageConstraintsTest.testNotNull":65,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":295,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":36,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":138,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":102,"org.easymock.samples.ExampleTest.voteAgainstRemovals":1,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":198,"org.easymock.tests.UsageVarargTest.differentLength":177,"org.easymock.tests2.CallbackTest.callback":44,"org.easymock.tests.UsageTest.openCallCountByLastCall":11,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":235,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":41,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":148,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":204,"org.easymock.tests.UsageCallCountTest.tooFewCalls":217,"org.easymock.tests.UsageOverloadedMethodTest.overloading":26,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":208,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":154,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":225,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":194,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":109,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":282,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":123,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":291,"org.easymock.tests.UsageThrowableTest.throwCheckedException":33,"org.easymock.tests.MockClassControlTest.testEquals":247,"org.easymock.tests2.EasyMockSupportClassTest.testAll":97,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":223,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":243,"org.easymock.tests2.CaptureTest.testCaptureAll":71,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":203,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":111,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":108,"org.easymock.tests2.UsageConstraintsTest.testMatches":155,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":110,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":271,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":131,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":146,"org.easymock.samples.ExampleTest.voteForRemovals":3,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":88,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":276,"org.easymock.tests.UsageVarargTest.allKinds":6,"org.easymock.tests2.DependencyTest.testInterfaceMocking":265,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":7,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":87,"org.easymock.samples.BasicClassMockTest.testPrintContent":172,"org.easymock.samples.ExampleTest.addDocument":169,"org.easymock.tests2.DelegateToTest.testStubDelegate":118,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":35,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":53,"org.easymock.tests2.AnswerTest.stubAnswer":270,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":215,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":19,"org.easymock.tests2.UsageConstraintsTest.greaterThan":156,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":70,"org.easymock.tests.UsageVarargTest.varargLongAccepted":179,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":23,"org.easymock.samples.ExampleTest.voteForRemoval":167,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":275,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":162,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":201,"org.easymock.tests.UsageExpectAndReturnTest.floatType":185,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":96,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":127,"org.easymock.tests.UsageThrowableTest.noUpperLimit":30,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":157,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":209,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":45,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":149,"org.easymock.tests2.SerializationTest.test":272,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":74,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":258,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":31,"org.easymock.tests2.UsageConstraintsTest.testSame":151,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":184,"org.easymock.samples.SupportTest.addDocument":164,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":210,"org.easymock.tests2.CaptureTest.testCaptureFirst":80,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":259,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":52,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":190,"org.easymock.tests.GenericTest.testPackageScope":222,"org.easymock.tests2.UsageTest.moreThanOneArgument":267,"org.easymock.tests2.CaptureTest.testCapture2_2446744":79,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":113,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":105,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":139,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":181,"org.easymock.tests.GenericTest.testBridgedEquals":224,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":220,"org.easymock.tests.UsageExpectAndReturnTest.longType":186,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":39,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":244,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":195,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":64,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":242,"org.easymock.tests2.UsageStrictMockTest.differentMethods":58,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":143,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":187,"org.easymock.tests.UsageCallCountTest.tooManyCalls":221,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":240,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":249,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":255,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":216,"org.easymock.tests2.MockedExceptionTest.testRealException":298,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":191,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":141,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":231,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":55,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":25,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":34,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":107,"org.easymock.tests2.UsageConstraintsTest.testContains":153,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":297,"org.easymock.tests2.UsageConstraintsTest.testFind":150,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":27,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":256,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":67,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":257,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":16,"org.easymock.tests.UsageExpectAndReturnTest.object":193,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":283,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":287,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":101,"org.easymock.tests2.UsageStrictMockTest.range":57,"org.easymock.tests2.UsageConstraintsTest.lessThan":159,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":261,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":86,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":176,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":250,"org.easymock.tests.UsageTest.exactCallCountByLastCall":15,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":128,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":140,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":40,"org.easymock.tests2.CaptureTest.testCaptureRightOne":78,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":251,"org.easymock.tests2.UsageConstraintsTest.testOr":152,"org.easymock.tests.UsageRangeTest.combination":253,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":83,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":199,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":66,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":5,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":207,"org.easymock.tests.UsageTest.wrongArguments":121,"org.easymock.tests2.EasyMockSupportTest.testVerify":264,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":188,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":196,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":252,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":206,"org.easymock.tests.UsageVarargTest.varargShortAccepted":178,"org.easymock.tests2.UsageConstraintsTest.cmpTo":281,"org.easymock.tests.UsageVarargTest.varargCharAccepted":175,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":125,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":54,"org.easymock.tests2.UsageTest.openCallCountByLastCall":48,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":49,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":263,"org.easymock.tests2.CaptureTest.testCaptureFromStub":160,"org.easymock.tests.UsageTest.unexpectedCallWithArray":120,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":119,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":233,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":18,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":32,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":218,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":197,"org.easymock.tests2.UsageConstraintsTest.constraints":277,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":68,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":20,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":232,"org.easymock.samples.ExampleTest.addAndChangeDocument":170,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":200,"org.easymock.tests.UsageStrictMockTest.testVerify":24,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":163,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":100,"org.easymock.tests2.UsageTest.resumeIfFailure":268,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":75,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":133,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":189,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":134,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":42,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":173}}]
