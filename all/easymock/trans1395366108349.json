[{"transplant":{"position":"org.easymock.internal.EasyMockProperties:41","sourceCode":"new java.util.Properties()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:172","failures":[14,15],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[16,16,17,17,18,19,20,21,14,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,15,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"toMock"}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:67","sourceCode":"return org.easymock.Mock.java.lang.String()","type":"CtReturnImpl"},"failures":[116,117,118,119,120,121,122,123,124,125,126,127],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[128,52,129,53],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[130,131,132,133],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[134,135],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[136,137,138,139,140,141,142,146,147,148,149],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[136,137,138,139,154,140,141,142,155,146,147,148,149],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:115","sourceCode":"java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int])","type":"CtAssignmentImpl"},"failures":[43,47],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[156,157,158,159,160,161,141,162,163,164,165,166,167,168,169,170,171,148],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:75","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"m"}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[172],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:123","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:228","sourceCode":"return java.lang.Class<?>.getDeclaredMethod(java.lang.String, java.lang.Class<?>[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"failures":[173],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:75","sourceCode":"return \"expected: \" + org.easymock.internal.Range.(toString())","type":"CtReturnImpl"},"failures":[136,137,138,139,174,175,176,177,140,161,141,178,146,179,180,181,147,171,148,150,151,152,153],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[137,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,162,197,198,199,163,164,200,165,201,202,166,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,113,114,115,218],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[219],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[220,221],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[222,223],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:261","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[172,224,225,226,227,228,229,230,231],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:148","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[46,232,233],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[234,235,236,237,238,239,240],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:117","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:115","sourceCode":"java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int])","type":"CtAssignmentImpl"},"failures":[43,47],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[241,139,242,243,244,245,246,192,193,198,201,204,206,178,247,248,249,237,146,250,251,252,253,254,222,255,2,8,256,13,257],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"failures":[219,224,226],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(this.java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"value":"key","properties":"properties","key":"key"}},{"transplant":{"position":"org.easymock.internal.matchers.Same:43","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:41","sourceCode":"org.easymock.IArgumentMatcher.appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[258],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[50,51],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"failureDictionary":{"org.easymock.tests2.UsageTest.argumentsOrdered":181,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":182,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":189,"org.easymock.tests2.StubTest.stubWithReturnValue":215,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":158,"org.easymock.tests2.SerializationTest.testAllMockedMethod":53,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":247,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":187,"org.easymock.tests.MockingTest.testPartialClassMocking":23,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":27,"org.easymock.tests.MockClassControlTest.testToString":37,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":226,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":201,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":64,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":128,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":193,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":60,"org.easymock.tests.UsageExpectAndThrowTest.object":200,"org.easymock.tests2.UsageTest.wrongArguments":179,"org.easymock.samples.ConstructorCalledMockTest.testTax":16,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":127,"org.easymock.tests.UsageStrictMockTest.range":161,"org.easymock.samples.ExampleTest.answerVsDelegate":234,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":90,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":14,"org.easymock.tests2.UsageConstraintsTest.testNull":130,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":98,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":165,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":15,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":40,"org.easymock.tests2.CaptureTest.testPrimitive":4,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":54,"org.easymock.tests.UsageTest.moreThanOneArgument":139,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":175,"org.easymock.tests2.CaptureTest.testCaptureNone":256,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":225,"org.easymock.tests.UsageUnorderedTest.message":178,"org.easymock.tests.UsageVerifyTest.twoReturns":138,"org.easymock.tests2.ThreadingTest.testThreadSafe":250,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":168,"org.easymock.tests.UsageTest.argumentsOrdered":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":71,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":19,"org.easymock.tests2.CaptureTest.testCapture_2617107":3,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":79,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":154,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":229,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":84,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":230,"org.easymock.tests.UsageExpectAndThrowTest.longType":196,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":188,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":46,"org.easymock.tests2.SerializationTest.testClass":52,"org.easymock.tests.LimitationsTest.mockNativeMethod":33,"org.easymock.tests2.AnswerTest.answer":238,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":30,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":131,"org.easymock.tests2.CaptureTest.testAnd":1,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":123,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":105,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":149,"org.easymock.tests2.NameTest.nameForMocksControl":153,"org.easymock.tests2.MockedExceptionTest.testMockedException":114,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":59,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":183,"org.easymock.tests2.DelegateToTest.testDelegate":257,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":170,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":25,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":162,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":96,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":85,"org.easymock.tests.MockingTest.testNicePartialClassMocking":24,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":203,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":100,"org.easymock.tests.LimitationsTest.mockFinalMethod":34,"org.easymock.tests2.CaptureTest.testCaptureLast":8,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":190,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":95,"org.easymock.tests.MockingTest.testTwoMocks":22,"org.easymock.tests2.CaptureTest.testCapture1_2446744":5,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":242,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":173,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":202,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":163,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":180,"org.easymock.tests.UsageThrowableTest.throwError":208,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":125,"org.easymock.tests.UsageStrictMockTest.differentMethods":141,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":117,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":44,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":252,"org.easymock.tests2.MockBuilderTest.testCreateMockString":89,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":121,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":35,"org.easymock.tests.UsageExpectAndThrowTest.floatType":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":56,"org.easymock.tests.UsageVerifyTest.twoThrows":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":70,"org.easymock.samples.PartialClassMockTest.testGetArea":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":228,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":224,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":172,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":107,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":65,"org.easymock.tests2.UsageConstraintsTest.testNotNull":133,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":214,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":113,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":83,"org.easymock.tests2.MockBuilderTest.testCreateMock":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":73,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":122,"org.easymock.tests2.CallbackTest.callback":237,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":103,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":126,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":164,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":253,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":143,"org.easymock.tests.UsageCallCountTest.tooFewCalls":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":69,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":254,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":185,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":93,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":159,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":232,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":9,"org.easymock.tests.UsageThrowableTest.throwCheckedException":211,"org.easymock.tests2.EasyMockSupportClassTest.testAll":57,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":29,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":205,"org.easymock.tests2.CaptureTest.testCaptureAll":2,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":94,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":184,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":92,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":240,"org.easymock.tests2.NameTest.nameForNiceMock":152,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":136,"org.easymock.samples.BasicClassMockTest.testPrintContent":20,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":77,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":213,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":119,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":191,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":140,"org.easymock.tests2.UsageConstraintsTest.greaterThan":222,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":58,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":108,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":142,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":227,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":49,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":251,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":109,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":246,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":50,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":101,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":17,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":216,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":26,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":111,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":6,"org.easymock.tests2.SerializationTest.test":129,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":86,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":233,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":43,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":55,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":186,"org.easymock.tests2.CaptureTest.testCaptureFirst":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":62,"org.easymock.tests.GenericTest.testPackageScope":28,"org.easymock.tests2.CaptureTest.testCapture2_2446744":12,"org.easymock.tests2.UsageTest.moreThanOneArgument":146,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":169,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":88,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":120,"org.easymock.tests.GenericTest.testBridgedEquals":31,"org.easymock.tests2.NameTest.nameForMock":150,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":244,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":206,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":219,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":204,"org.easymock.tests2.UsageStrictMockTest.differentMethods":148,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":221,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":104,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":156,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":166,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":144,"org.easymock.tests2.MockedExceptionTest.testRealException":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":74,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":157,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":236,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":197,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":147,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":212,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":91,"org.easymock.tests2.NameTest.nameForStrictMock":151,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":115,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":192,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":82,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":248,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":99,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":249,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":112,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":45,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":132,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":102,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":80,"org.easymock.tests2.UsageStrictMockTest.range":171,"org.easymock.tests2.UsageConstraintsTest.lessThan":255,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":118,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":66,"org.easymock.tests2.CaptureTest.testCaptureRightOne":10,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":51,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":245,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":97,"org.easymock.tests.UsageTest.wrongArguments":174,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":63,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":36,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":67,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":235,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":220,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":47,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":41,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":239,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":231,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":217,"org.easymock.tests.DefaultClassInstantiatorTest.object":42,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":134,"org.easymock.tests2.CaptureTest.testCaptureFromStub":11,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":81,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":68,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":210,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":177,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":160,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":39,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":106,"org.easymock.samples.ExampleTest.addAndChangeDocument":241,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":198,"org.easymock.tests2.ConstraintsToStringTest.notToString":258,"org.easymock.tests.CapturesMatcherTest.test":0,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":76,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":38,"org.easymock.tests2.CompareToTest.testGreateThan":223,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":7,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":243,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":21,"org.easymock.tests.LimitationsTest.abstractClass":32,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":155}}]
