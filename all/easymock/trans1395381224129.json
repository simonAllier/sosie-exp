[{"transplant":{"position":"org.easymock.EasyMock:1594","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(byte[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[0,1],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ErrorMessage:50","failures":[2,3,4,5,6,7,8],"status":-1,"binaryOperator":"int == 1","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,2,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,0,1,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,5,6,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,7,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,8,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[260],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Captures:47","sourceCode":"this.T = T","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>).append(\")\")","type":"CtInvocationImpl"},"failures":[261],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[34,35,262,263,264,265,266,267,268,269],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:72","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1291","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:63","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class.java.lang.Class.forName(java.lang.String, true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[60,61,62,63,154,155,156,157,158,159,212,220],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:129","sourceCode":"final java.lang.Throwable java.lang.Throwable","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[270,89,96,100],"status":-1,"binaryOperator":"int < 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[94,95],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[136,171,177,184,185,238],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[10,69,71,72,271],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:249","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[272],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[260,273],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[0],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:89","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object)","type":"CtReturnImpl"},"failures":[274,275,23,25,26,2,27,28,32,33,34,35,36,50,56,276,277,278,279,280,281,282,283,284,285,77,91,101,102,103,104,109,286,287,262,288,289,112,113,114,116,117,118,119,123,124,125,126,131,5,6,290,137,146,148,149,150,7,151,152,291,292,264,293,294,295,266,296,297,160,162,163,298,299,300,301,302,189,303,8,304,305,267,268,269,247,251,252,253,254,257,258,259],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[118],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:126","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[306,307,308,309,116,117,123,124,310,311,312,148,252,253,254,257,258],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[313,314,9,10,11,12,13,14,15,315,315,316,316,317,318,319,320,321,16,17,18,19,20,274,21,322,22,23,24,25,26,2,27,28,29,30,31,32,323,33,34,324,325,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,0,1,50,51,52,53,54,326,55,56,327,57,276,58,59,60,61,62,63,278,328,69,70,71,329,72,330,280,331,281,332,282,283,333,284,285,334,335,336,73,74,75,76,77,78,79,80,81,82,83,84,337,85,86,87,88,89,90,91,92,93,94,95,96,338,97,98,99,100,101,102,103,104,105,339,340,106,107,108,109,286,110,262,288,112,114,115,116,117,118,119,120,121,122,123,124,125,126,341,342,343,344,345,346,347,348,131,5,6,132,133,134,135,136,349,290,137,138,139,140,141,142,143,144,145,146,147,148,149,150,7,151,152,153,350,351,352,154,155,156,157,158,159,160,162,163,164,165,299,300,166,167,353,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,354,301,271,355,302,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,8,210,356,357,358,359,360,211,212,213,218,219,220,221,222,361,223,224,225,226,227,228,229,305,230,231,232,233,234,235,236,237,238,239,240,241,362,242,243,244,363,246,364,365,366,367,368,247,248,249,250,251,252,254,255,256,257,258,259],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[53,91,119],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[53,91,119],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:356","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.lang.reflect.Type = java.lang.reflect.Type;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","this":"this","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"failures":[360],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"failures":[260,273],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericType":"genericType"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"failures":[369],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":78,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":251,"org.easymock.tests2.UsageTest.argumentsOrdered":124,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":334,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":279,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":157,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":119,"org.easymock.tests2.StubTest.stubWithReturnValue":74,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":317,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":97,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":177,"org.easymock.tests2.SerializationTest.testAllMockedMethod":31,"org.easymock.tests2.DelegateToTest.testReturnException":69,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":367,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":155,"org.easymock.tests.MockingTest.testPartialClassMocking":242,"org.easymock.samples.SupportTest.voteForRemovals":314,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":308,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":260,"org.easymock.tests.MockClassControlTest.testToString":267,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":349,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":277,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":202,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":368,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":342,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":190,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":339,"org.easymock.tests.UsageExpectAndThrowTest.object":200,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":322,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":95,"org.easymock.tests2.DelegateToTest.testWrongClass":71,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":235,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":236,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":84,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":218,"org.easymock.tests2.UsageTest.wrongArguments":117,"org.easymock.samples.ConstructorCalledMockTest.testTax":315,"org.easymock.tests.UsageStrictMockTest.range":7,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":129,"org.easymock.samples.ExampleTest.answerVsDelegate":10,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":333,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":323,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":266,"org.easymock.tests2.UsageConstraintsTest.testNull":80,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":201,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":52,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":285,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":262,"org.easymock.tests2.CaptureTest.testPrimitive":40,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":222,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":257,"org.easymock.tests.UsageTest.moreThanOneArgument":252,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":209,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":51,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":128,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":310,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":239,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":348,"org.easymock.tests2.CaptureTest.testCaptureNone":45,"org.easymock.tests.UsageUnorderedTest.message":8,"org.easymock.tests.UsageVerifyTest.twoReturns":6,"org.easymock.tests.UsageVarargTest.varargByteAccepted":232,"org.easymock.tests2.ThreadingTest.testThreadSafe":16,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":356,"org.easymock.tests.UsageTest.argumentsOrdered":258,"org.easymock.tests.UsageVarargTest.varargIntAccepted":227,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":165,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":319,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":292,"org.easymock.tests2.CaptureTest.testCapture_2617107":39,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":132,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":309,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":109,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":221,"org.easymock.tests2.UsageConstraintsTest.any":85,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":111,"org.easymock.tests2.StubTest.stub":73,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":352,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":136,"org.easymock.tests.UsageExpectAndThrowTest.longType":193,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":156,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":26,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":278,"org.easymock.tests2.SerializationTest.testClass":29,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":274,"org.easymock.tests.LimitationsTest.mockNativeMethod":210,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":353,"org.easymock.tests2.AnswerTest.answer":105,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":187,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":337,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":68,"org.easymock.tests2.CaptureTest.testAnd":37,"org.easymock.tests2.UsageTest.strictResetToDefault":115,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":56,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":28,"org.easymock.tests2.NameTest.nameForMocksControl":104,"org.easymock.tests2.MockedExceptionTest.testMockedException":61,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":238,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":332,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":249,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":256,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":360,"org.easymock.tests2.DelegateToTest.testDelegate":72,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":244,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":194,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":1,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":288,"org.easymock.tests.MockingTest.testNicePartialClassMocking":243,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":205,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":54,"org.easymock.tests2.CaptureTest.testCaptureLast":44,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":158,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":137,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":83,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":36,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":217,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":96,"org.easymock.tests.MockingTest.testTwoMocks":362,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":290,"org.easymock.tests2.CaptureTest.testCapture1_2446744":41,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":168,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":203,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":198,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":66,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":123,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":99,"org.easymock.tests.UsageThrowableTest.throwError":138,"org.easymock.tests.UsageStrictMockTest.differentMethods":151,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":188,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":295,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":18,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":265,"org.easymock.tests2.MockBuilderTest.testCreateMockString":113,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":363,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":241,"org.easymock.tests.UsageExpectAndThrowTest.floatType":192,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":91,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":106,"org.easymock.tests.UsageVerifyTest.twoThrows":5,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":343,"org.easymock.samples.PartialClassMockTest.testGetArea":318,"org.easymock.tests2.CompareToTest.testLessOrEqual":369,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":133,"org.easymock.samples.ExampleTest.voteAgainstRemoval":12,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":347,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":346,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":57,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":264,"org.easymock.tests2.UsageTest.niceToStrict":118,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":191,"org.easymock.tests2.UsageConstraintsTest.testNotNull":98,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":60,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":145,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":110,"org.easymock.tests2.MockBuilderTest.testCreateMock":289,"org.easymock.tests2.UsageTest.defaultResetToNice":122,"org.easymock.samples.ExampleTest.voteAgainstRemovals":9,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":183,"org.easymock.tests.UsageVarargTest.differentLength":305,"org.easymock.tests2.CallbackTest.callback":32,"org.easymock.tests.UsageTest.openCallCountByLastCall":255,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":306,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":199,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":282,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":75,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":366,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":160,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":220,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":127,"org.easymock.tests.UsageCallCountTest.tooFewCalls":163,"org.easymock.tests.UsageOverloadedMethodTest.overloading":223,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":355,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":89,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":361,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":324,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":179,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":88,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":46,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":130,"org.easymock.tests.UsageThrowableTest.throwCheckedException":142,"org.easymock.tests2.EasyMockSupportClassTest.testAll":341,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":167,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":311,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":307,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":207,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":215,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":67,"org.easymock.tests2.CaptureTest.testCaptureAll":38,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":212,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":35,"org.easymock.tests.MockNameTest.defaultName":304,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":275,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":34,"org.easymock.tests2.UsageConstraintsTest.testMatches":90,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":325,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":108,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":240,"org.easymock.samples.ExampleTest.voteForRemovals":14,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":20,"org.easymock.tests2.NameTest.nameForNiceMock":103,"org.easymock.tests.UsageVarargTest.allKinds":234,"org.easymock.tests2.DependencyTest.testInterfaceMocking":21,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":131,"org.easymock.samples.BasicClassMockTest.testPrintContent":320,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":216,"org.easymock.samples.ExampleTest.addDocument":13,"org.easymock.tests2.DelegateToTest.testStubDelegate":70,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":144,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":23,"org.easymock.tests2.AnswerTest.stubAnswer":107,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":329,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":159,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":149,"org.easymock.tests2.UsageConstraintsTest.greaterThan":92,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":272,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":248,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":276,"org.easymock.tests.UsageVarargTest.varargLongAccepted":231,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":152,"org.easymock.samples.ExampleTest.voteForRemoval":11,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":17,"org.easymock.tests.UsageExpectAndReturnTest.floatType":170,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":186,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":296,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":326,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":22,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":316,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":302,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":93,"org.easymock.tests.UsageThrowableTest.noUpperLimit":139,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":246,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":76,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":114,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":263,"org.easymock.tests2.SerializationTest.test":30,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":42,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":331,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":140,"org.easymock.tests2.UsageConstraintsTest.testSame":81,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":169,"org.easymock.samples.SupportTest.addDocument":313,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":154,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":328,"org.easymock.tests2.CaptureTest.testCaptureFirst":0,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":281,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":126,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":303,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":175,"org.easymock.tests.GenericTest.testPackageScope":166,"org.easymock.tests2.CaptureTest.testCapture2_2446744":49,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":19,"org.easymock.tests2.UsageTest.moreThanOneArgument":116,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":359,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":112,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":233,"org.easymock.tests.GenericTest.testBridgedEquals":273,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":299,"org.easymock.tests2.NameTest.nameForMock":101,"org.easymock.tests.UsageExpectAndReturnTest.longType":171,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":330,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":213,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":208,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":180,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":345,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":338,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":206,"org.easymock.tests2.UsageStrictMockTest.differentMethods":27,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":351,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":237,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":172,"org.easymock.tests.UsageCallCountTest.tooManyCalls":300,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":204,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":250,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":162,"org.easymock.tests2.MockedExceptionTest.testRealException":63,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":297,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":176,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":195,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":25,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":219,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":143,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":33,"org.easymock.tests2.UsageConstraintsTest.testContains":87,"org.easymock.tests2.NameTest.nameForStrictMock":102,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":161,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":62,"org.easymock.tests2.UsageConstraintsTest.testFind":79,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":224,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":58,"org.easymock.tests.MockTypeTest.fromEasyMockClass":294,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":53,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":59,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":146,"org.easymock.tests.UsageExpectAndReturnTest.object":178,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":94,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":3,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":55,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":286,"org.easymock.tests2.UsageStrictMockTest.range":2,"org.easymock.tests2.UsageConstraintsTest.lessThan":100,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":284,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":229,"org.easymock.tests.UsageTest.exactCallCountByLastCall":259,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":211,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":280,"org.easymock.tests2.CaptureTest.testCaptureRightOne":47,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":357,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":312,"org.easymock.tests2.UsageConstraintsTest.testOr":82,"org.easymock.tests.UsageRangeTest.combination":247,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":225,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":50,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":184,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":271,"org.easymock.tests.UsageTest.wrongArguments":254,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":245,"org.easymock.tests2.EasyMockSupportTest.testVerify":336,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":173,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":181,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":358,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":365,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":354,"org.easymock.tests.UsageVarargTest.varargShortAccepted":230,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":298,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":65,"org.easymock.tests2.UsageConstraintsTest.cmpTo":86,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":64,"org.easymock.tests.UsageVarargTest.varargCharAccepted":228,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":340,"org.easymock.tests2.CompareToTest.testLessThan":270,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":24,"org.easymock.tests2.UsageTest.openCallCountByLastCall":120,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":121,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":335,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":364,"org.easymock.tests2.CaptureTest.testCaptureFromStub":48,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":287,"org.easymock.tests.UsageTest.unexpectedCallWithArray":253,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":291,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":197,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":141,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":148,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":164,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":182,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":327,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":269,"org.easymock.tests2.UsageConstraintsTest.constraints":77,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":150,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":196,"org.easymock.samples.ExampleTest.addAndChangeDocument":15,"org.easymock.tests.CapturesMatcherTest.test":261,"org.easymock.tests.UsageStrictMockTest.testVerify":153,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":185,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":350,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":344,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":268,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":147,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":214,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":43,"org.easymock.tests2.UsageTest.resumeIfFailure":125,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":134,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":293,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":174,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":135,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":189,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":283,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":226,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":4}}]
