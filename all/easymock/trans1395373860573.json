[{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[0,1,2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[4],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[5,6,7,8,9],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[10,11,12,13,14,15,16,17,18,19,20,4,21,21,22,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,1,3,58,59,60,61,62,63],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:55","sourceCode":"return org.easymock.LogicalOperator.matchResult(java.util.Comparator<? super T>.compare(((T)(java.lang.Object)), T))","type":"CtReturnImpl"},"failures":[64],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[65,66,67,68,69,70,71,72,73,74,75,12,76,77,78,79,80,81,82,83,84,85,86,87,88,89,14,15,16,17,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,18,19,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,21,22,206,23,24,25,26,28,30,31,32,33,34,35,37,207,208,209,210,211,212,213,214,215,41,42,43,44,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,45,46,235,47,48,49,50,51,52,53,54,55,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,5,259,260,261,262,263,6,264,265,266,267,268,269,270,64,271,272,273,274,275,276,277,278,279,280,56,281,282,283,284,285,286,287,57,288,289,1,2,3,58,59,60,61,290,62,63,291,292,293,294,7,295,8,296,297,298,299,300,301,302,9,303,304,305],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Contains:40","sourceCode":"java.lang.StringBuffer.append(((\"contains(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[306],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:52","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:57","sourceCode":"try {\n    final org.easymock.internal.Result org.easymock.internal.Result = org.easymock.internal.IMocksBehavior.addActual(org.easymock.internal.Invocation);\n    try {\n        return org.easymock.internal.Result.answer();\n    } catch (final java.lang.Throwable java.lang.Throwable) {\n        if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n            throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n        } \n        throw java.lang.Throwable;\n    }\n} finally {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation();\n}","type":"CtTryImpl"},"failures":[65,66,67,68,69,70,71,72,73,74,75,12,76,77,78,79,80,81,82,83,84,85,86,87,88,89,14,15,16,17,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,18,19,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,21,22,206,23,24,25,26,28,30,31,32,33,34,35,37,207,208,209,210,211,212,213,214,215,41,42,43,44,216,307,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,45,46,235,47,48,49,50,51,52,53,54,55,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,5,259,260,261,262,263,6,264,265,266,267,268,269,270,64,271,272,273,274,275,276,277,278,279,280,56,281,282,283,284,285,286,287,57,288,289,1,2,3,58,59,60,61,290,62,63,291,292,293,294,7,295,8,296,297,298,299,300,301,302,9,303,304,305],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"failures":[308,309,310,311],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:40","sourceCode":"return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]))","type":"CtReturnImpl"},"failures":[312,313,65,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,314,87,88,315,316,89,13,14,15,16,17,90,91,92,93,94,95,106,18,20,107,108,109,110,111,112,317,318,319,113,114,115,116,117,118,119,120,121,320,321,322,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,323,142,144,145,146,147,148,149,150,151,324,325,326,327,328,329,330,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,331,173,174,175,176,177,178,179,180,181,182,332,183,184,185,186,187,333,188,189,190,191,192,193,194,195,196,197,198,199,201,202,205,21,21,22,22,23,26,28,30,31,32,33,34,35,37,207,208,209,210,211,212,213,214,215,41,42,43,44,216,217,218,219,334,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,45,46,235,47,48,49,50,51,52,53,54,55,236,237,238,239,240,241,242,243,244,245,246,247,248,250,252,253,254,255,256,257,258,5,259,260,261,262,263,6,264,335,265,266,267,268,269,270,64,271,272,273,274,275,276,277,278,279,280,56,281,282,336,337,283,284,285,286,287,57,288,289,1,2,3,58,59,60,61,290,62,63,338,291,292,293,339,294,7,295,8,296,297,298,299,300,301,302,9,303,304,305],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:107","sourceCode":"java.io.ObjectInputStream.defaultReadObject()","type":"CtInvocationImpl"},"failures":[1,2,3],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"control":"control","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[340,52,341],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1672","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(short[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[115,116,117,118,119,120,121,144,145,342,343,344,345,346,250],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:38","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"failures":[262],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"actual"}},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,312,363,364,365,366,367,313,368,369,370,65,66,67,68,69,70,71,10,371,372,373,374,11,375,376,72,73,74,75,12,76,77,78,79,80,81,82,83,84,85,86,314,87,88,315,316,89,377,378,13,14,15,379,16,380,381,382,383,384,17,385,90,91,92,93,94,95,96,97,98,386,99,100,101,102,103,104,105,106,387,18,19,20,388,107,108,109,110,111,112,317,318,319,113,114,115,116,117,118,119,120,121,320,321,322,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,389,323,390,391,392,393,394,395,396,397,142,143,144,145,146,147,148,149,398,150,151,399,400,401,402,403,404,324,325,405,326,327,328,406,407,408,409,410,411,412,413,414,415,416,417,418,344,329,330,419,420,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,331,173,174,175,176,177,178,179,180,181,182,332,183,184,185,186,187,333,4,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,188,189,190,191,192,193,194,195,196,197,198,199,200,201,449,202,203,204,205,21,22,206,23,24,25,26,28,29,450,30,31,32,33,451,452,34,35,37,207,453,208,209,210,211,212,213,214,215,454,455,456,41,457,458,42,459,460,461,462,463,464,465,466,467,43,468,469,470,471,472,44,473,474,216,307,217,218,219,475,334,476,340,477,478,479,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,45,46,235,47,48,49,50,480,51,481,482,52,53,54,55,483,341,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,484,485,486,487,488,489,490,491,257,258,5,259,492,260,261,262,263,6,264,335,265,266,267,268,269,270,64,271,272,273,274,275,276,277,278,279,280,56,493,494,495,496,497,498,281,499,500,501,502,503,504,282,336,337,283,284,285,286,287,57,288,505,506,507,508,509,289,510,511,512,513,514,515,1,2,3,58,59,60,61,516,290,62,63,517,338,291,292,293,339,294,7,295,8,296,297,298,299,300,301,302,9,303,304,305],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:36","sourceCode":"try {\n    if ((this.org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n        org.easymock.internal.LastControl.reportLastControl(this.org.easymock.internal.MocksControl);\n    } \n    return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]));\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace();\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace();\n} catch (final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper) {\n    throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace();\n}","type":"CtTryImpl"},"failures":[312,313,369,65,66,67,68,69,70,71,73,74,75,12,76,77,78,79,80,81,82,83,84,85,86,314,87,88,315,316,89,13,14,15,16,17,90,91,92,93,94,95,106,18,20,107,108,109,110,111,112,317,318,319,113,114,115,116,117,118,119,120,121,320,321,322,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,323,142,144,145,146,147,148,149,150,151,324,325,326,327,328,344,329,330,419,420,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,331,173,174,175,176,177,178,179,180,181,182,332,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,201,202,205,21,21,22,22,23,26,28,30,31,32,33,34,35,37,207,208,209,210,211,212,213,214,215,41,42,43,44,216,217,218,219,334,476,340,477,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,45,46,235,47,48,49,50,51,53,54,55,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,252,253,254,255,256,257,258,5,259,260,261,262,263,6,264,335,265,266,267,268,269,270,64,271,272,273,274,275,276,277,278,279,280,56,281,282,336,337,283,284,285,286,287,57,288,289,1,2,3,58,59,60,61,290,62,63,338,291,292,293,339,294,7,295,8,296,297,298,299,300,301,302,9,303,304,305],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:194","sourceCode":"try {\n    java.lang.reflect.Constructor<?> = java.lang.Class<?>.getDeclaredConstructor(org.easymock.ConstructorArgs.getConstructor().getParameterTypes());\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"Fail to find constructor for param types\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:196","sourceCode":"java.lang.reflect.Constructor<?> = java.lang.Class<?>.getDeclaredConstructor(org.easymock.ConstructorArgs.getConstructor().getParameterTypes())","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"args":"args","mockClass":"mockClass","cstr":"cstr"}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:183","sourceCode":"final java.lang.SecurityException java.lang.SecurityException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[142,147,148,172,35,226,236,238,242,243,246,250,254,255],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[405],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"failures":[387,388],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[107,115,116,119,120,144,147,148,518,519,520,521,181,182,225,231,232,254,255],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[362,313,186,218],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:160","sourceCode":"return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:158","sourceCode":"if (((java.lang.reflect.Field.getModifiers()) & int) == int) {\n    java.lang.reflect.Field.setAccessible(true);\n    return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null));\n} ","type":"CtIfImpl"},"failures":[522,523],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":259,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":113,"org.easymock.tests2.UsageTest.argumentsOrdered":232,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":247,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":510,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":357,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":227,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":206,"org.easymock.tests2.DelegateToTest.testReturnException":291,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":91,"org.easymock.tests.MockingTest.testPartialClassMocking":14,"org.easymock.tests.MockClassControlTest.testToString":421,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":475,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":323,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":341,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":365,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":462,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":122,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":42,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":221,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":448,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":264,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":183,"org.easymock.tests2.UsageTest.wrongArguments":225,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":504,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":74,"org.easymock.samples.ExampleTest.answerVsDelegate":197,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":11,"org.easymock.tests2.UsageConstraintsTest.testNull":261,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":381,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":47,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":426,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":246,"org.easymock.tests2.CaptureTest.testPrimitive":296,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":187,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":141,"org.easymock.tests.UsageTest.moreThanOneArgument":114,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":235,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":190,"org.easymock.tests.UsageTest.argumentsOrdered":120,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":344,"org.easymock.tests.UsageVarargTest.varargIntAccepted":98,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":362,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":175,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":26,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":514,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":486,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":31,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":349,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":179,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":432,"org.easymock.tests.ReplayStateInvalidUsageTest.times":415,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":281,"org.easymock.tests2.DependencyTest.testClassMocking":478,"org.easymock.tests2.AnswerTest.answer":282,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":335,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":363,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":215,"org.easymock.tests2.CaptureTest.testAnd":7,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":372,"org.easymock.tests2.UsageTest.strictResetToDefault":223,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":52,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":189,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":173,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":241,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":420,"org.easymock.tests2.DelegateToTest.testDelegate":294,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":431,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":137,"org.easymock.tests.LimitationsTest.mockFinalMethod":385,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":94,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":112,"org.easymock.tests2.DependencyTest.testClassMockingSupport":479,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":324,"org.easymock.tests2.CaptureTest.testCapture1_2446744":297,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":480,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":135,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":213,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":409,"org.easymock.tests.UsageThrowableTest.throwError":78,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":374,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":519,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":515,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":474,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":435,"org.easymock.samples.PartialClassMockTest.testGetArea":23,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":410,"org.easymock.tests.MockingTest.testInterfaceMocking":379,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":176,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":463,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":404,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":123,"org.easymock.tests2.UsageTest.niceToStrict":226,"org.easymock.tests2.ThreadingTest.testChangeDefault":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":347,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":30,"org.easymock.tests2.MockBuilderTest.testCreateMock":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":470,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":501,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":131,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":345,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":242,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":371,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":322,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":369,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":72,"org.easymock.tests.UsageOverloadedMethodTest.overloading":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":472,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":467,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":88,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":269,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":163,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":193,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":522,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":268,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":302,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":386,"org.easymock.tests.MockClassControlTest.testEquals":425,"org.easymock.tests2.EasyMockSupportClassTest.testAll":41,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":19,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":139,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":38,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":110,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":214,"org.easymock.tests2.CaptureTest.testCaptureAll":295,"org.easymock.tests.MockNameTest.defaultName":406,"org.easymock.tests2.UsageConstraintsTest.testMatches":270,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":407,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":191,"org.easymock.samples.ExampleTest.voteForRemovals":201,"org.easymock.tests.UsageVarargTest.allKinds":106,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":180,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":111,"org.easymock.samples.BasicClassMockTest.testPrintContent":25,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":84,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":250,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":511,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":95,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":339,"org.easymock.tests2.UsageConstraintsTest.greaterThan":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":457,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":331,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":55,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":436,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":397,"org.easymock.samples.ExampleTest.voteForRemoval":198,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":483,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":208,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":375,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":50,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":428,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":12,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":222,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":452,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":354,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":239,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":455,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":90,"org.easymock.tests2.CaptureTest.testCaptureFirst":305,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":353,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":240,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":234,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":89,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":159,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":210,"org.easymock.tests2.UsageTest.moreThanOneArgument":224,"org.easymock.tests2.CaptureTest.testCapture2_2446744":304,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":35,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":364,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":105,"org.easymock.tests.GenericTest.testBridgedEquals":388,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":70,"org.easymock.tests.UsageExpectAndReturnTest.longType":155,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":108,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":237,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":140,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":36,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":276,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":332,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":138,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":188,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":327,"org.easymock.tests.UsageCallCountTest.tooManyCalls":71,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":471,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":160,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":503,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":127,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":83,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":59,"org.easymock.tests.MockingTest.testNiceClassMocking":382,"org.easymock.tests.MockingTest.testClassMocking":378,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":27,"org.easymock.tests2.UsageConstraintsTest.testContains":267,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":370,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":57,"org.easymock.tests2.UsageConstraintsTest.testFind":260,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":195,"org.easymock.tests.MockTypeTest.fromEasyMockClass":373,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":142,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":217,"org.easymock.tests.UsageExpectAndReturnTest.object":162,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":51,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":502,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":245,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":100,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":402,"org.easymock.tests.UsageTest.exactCallCountByLastCall":121,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":352,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":389,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":329,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":493,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":168,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":96,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":87,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":506,"org.easymock.tests.MockClassControlTest.testHashCode":424,"org.easymock.tests2.EasyMockSupportTest.testVerify":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":465,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":330,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":86,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":321,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":520,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":212,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":491,"org.easymock.tests.UsageVarargTest.varargCharAccepted":99,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":368,"org.easymock.tests2.UsageTest.openCallCountByLastCall":228,"org.easymock.tests.DefaultClassInstantiatorTest.object":391,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":248,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":320,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":400,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":521,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":466,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":129,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":81,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":497,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":505,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":434,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":423,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":53,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":128,"org.easymock.tests.ReplayStateInvalidCallsTest.times":440,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":169,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":326,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":441,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":422,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":44,"org.easymock.tests2.UsageTest.resumeIfFailure":233,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":10,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":485,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":93,"org.easymock.tests2.StubTest.stubWithReturnValue":219,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":161,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":277,"org.easymock.tests2.SerializationTest.testAllMockedMethod":3,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":312,"org.easymock.samples.SupportTest.voteForRemovals":205,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":346,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":387,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":508,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":134,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":0,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":313,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":336,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":390,"org.easymock.tests.UsageExpectAndThrowTest.object":132,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":274,"org.easymock.tests2.DelegateToTest.testWrongClass":293,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":438,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":150,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":151,"org.easymock.tests.UsageStrictMockTest.range":147,"org.easymock.samples.ConstructorCalledMockTest.testTax":21,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":488,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":244,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":58,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":133,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":454,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":417,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":119,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":73,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":342,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":430,"org.easymock.tests2.CaptureTest.testCaptureNone":301,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":319,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":309,"org.easymock.tests.UsageUnorderedTest.message":107,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":518,"org.easymock.tests.UsageVerifyTest.twoReturns":182,"org.easymock.tests.UsageVarargTest.varargByteAccepted":104,"org.easymock.tests2.ThreadingTest.testThreadSafe":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":468,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":68,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":403,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":24,"org.easymock.tests2.CaptureTest.testCapture_2617107":8,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":405,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":186,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":366,"org.easymock.tests2.UsageConstraintsTest.any":265,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":414,"org.easymock.tests2.StubTest.stub":218,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":328,"org.easymock.tests.UsageExpectAndThrowTest.longType":125,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":92,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":367,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":395,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":413,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":253,"org.easymock.tests2.SerializationTest.testClass":1,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":289,"org.easymock.tests.LimitationsTest.mockNativeMethod":17,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":171,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":20,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":496,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":40,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":446,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":256,"org.easymock.tests2.NameTest.nameForMocksControl":477,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":498,"org.easymock.tests2.MockedExceptionTest.testMockedException":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":458,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":118,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":126,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":16,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":307,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":45,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":33,"org.easymock.tests.MockingTest.testNicePartialClassMocking":15,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":49,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":494,"org.easymock.tests2.CaptureTest.testCaptureLast":300,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":325,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":445,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":6,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":63,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":275,"org.easymock.tests.MockingTest.testTwoMocks":13,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":442,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":517,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":152,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":130,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":231,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":279,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":311,"org.easymock.samples.ExampleTest.removeNonExistingDocument":449,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":500,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":411,"org.easymock.tests.UsageStrictMockTest.differentMethods":148,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":507,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":490,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":393,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":209,"org.easymock.tests2.MockBuilderTest.testCreateMockString":37,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":459,"org.easymock.tests.UsageExpectAndThrowTest.floatType":124,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":456,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":283,"org.easymock.tests.UsageVerifyTest.twoThrows":181,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":43,"org.easymock.samples.ExampleTest.voteAgainstRemoval":199,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":317,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":358,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":54,"org.easymock.tests.LimitationsTest.privateConstructor":384,"org.easymock.tests2.UsageConstraintsTest.testNotNull":278,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":85,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":286,"org.easymock.tests2.UsageTest.defaultResetToNice":230,"org.easymock.samples.ExampleTest.voteAgainstRemovals":196,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":167,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":359,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":495,"org.easymock.tests.UsageVarargTest.differentLength":101,"org.easymock.tests2.CallbackTest.callback":236,"org.easymock.tests2.UsageConstraintsTest.equals":492,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":481,"org.easymock.tests.UsageTest.openCallCountByLastCall":117,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":257,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":185,"org.easymock.tests.UsageCallCountTest.tooFewCalls":66,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":61,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":75,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":310,"org.easymock.tests.UsageThrowableTest.throwCheckedException":82,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":343,"org.easymock.tests.MockingTest.testStrictClassMocking":377,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":62,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":77,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":499,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":60,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":416,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":290,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":285,"org.easymock.tests.ObjectMethodsTest.testHashCode":401,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":444,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":211,"org.easymock.tests2.NameTest.nameForNiceMock":340,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":439,"org.easymock.tests2.DependencyTest.testInterfaceMocking":220,"org.easymock.samples.ExampleTest.addDocument":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":469,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":473,"org.easymock.tests2.DelegateToTest.testStubDelegate":292,"org.easymock.tests2.AnswerTest.stubAnswer":284,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":145,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":451,"org.easymock.tests.UsageVarargTest.varargLongAccepted":103,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":149,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":356,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":170,"org.easymock.tests.UsageExpectAndReturnTest.floatType":154,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":56,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":22,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":513,"org.easymock.tests.UsageThrowableTest.noUpperLimit":79,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":272,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":315,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":258,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":484,"org.easymock.tests2.SerializationTest.test":2,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":298,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":523,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":392,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":153,"org.easymock.tests2.UsageConstraintsTest.testSame":262,"org.easymock.samples.SupportTest.addDocument":204,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":516,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":429,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":412,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":460,"org.easymock.tests.GenericTest.testPackageScope":18,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":419,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":351,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":512,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":380,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":427,"org.easymock.tests2.NameTest.nameForMock":334,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":164,"org.easymock.tests2.UsageStrictMockTest.differentMethods":255,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":482,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":156,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":136,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":399,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":174,"org.easymock.tests2.MockedExceptionTest.testRealException":288,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":376,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":489,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":361,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":252,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":360,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":418,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":184,"org.easymock.tests2.NameTest.nameForStrictMock":476,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":450,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":216,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":48,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":487,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":394,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":273,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":28,"org.easymock.tests2.UsageStrictMockTest.range":254,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":433,"org.easymock.tests2.UsageConstraintsTest.lessThan":280,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":509,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":238,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":464,"org.easymock.tests2.CaptureTest.testCaptureRightOne":9,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":308,"org.easymock.tests2.UsageConstraintsTest.testOr":263,"org.easymock.tests.UsageRangeTest.combination":172,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":46,"org.easymock.tests.UsageTest.wrongArguments":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":461,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":4,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":157,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":165,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":348,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":396,"org.easymock.tests.UsageVarargTest.varargShortAccepted":102,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":69,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":447,"org.easymock.tests2.UsageConstraintsTest.cmpTo":266,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":337,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":437,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":350,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":229,"org.easymock.tests2.CaptureTest.testCaptureFromStub":303,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":408,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":29,"org.easymock.tests.UsageTest.unexpectedCallWithArray":115,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":443,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":144,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":67,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":166,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":146,"org.easymock.tests2.UsageConstraintsTest.constraints":5,"org.easymock.samples.ExampleTest.addAndChangeDocument":202,"org.easymock.tests.UsageStrictMockTest.testVerify":398,"org.easymock.tests2.ConstraintsToStringTest.containsToString":306,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":203,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":143,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":109,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":299,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":177,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":39,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":158,"org.easymock.tests.LimitationsTest.abstractClass":383,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":178,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":316,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":97,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":243}}]
