[{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:60","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:43","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"equals\", new java.lang.Class[]{ java.lang.Object.java.lang.Object })","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:107","sourceCode":"break","type":"CtBreakImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:94","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[20],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:72","sourceCode":"java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","type":"CtAssignmentImpl"},"failures":[21,22,23,24],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[25,26],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:85","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object));\n} ","type":"CtIfImpl"},"failures":[27,28,29,30,31,32,33,34,34,35,35,36,37,38,25,39,40,41,42,43,44,45,46,47,48,49,50,51,21,22,52,53,54,55,56,57,58,59,0,1,2,3,60,61,62,63,64,65,4,5,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,6,7,8,9,10,11,12,13,14,15,113,114,115,116,117,118,119,120,16,17,121,122,123,18,19,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"method","finalizeMethod":"method"}},{"transplant":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType) : org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtLocalVariableImpl"},"failures":[136,202],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:183","sourceCode":"net.sf.cglib.proxy.Enhancer.setClassLoader(java.lang.Object.getClass().getClassLoader())","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:174","sourceCode":"try {\n    java.lang.Class<?> = net.sf.cglib.proxy.Enhancer.createClass();\n} catch (final net.sf.cglib.core.CodeGenerationException net.sf.cglib.core.CodeGenerationException) {\n    net.sf.cglib.proxy.Enhancer.setClassLoader(java.lang.Object.getClass().getClassLoader());\n    java.lang.Class<?> = net.sf.cglib.proxy.Enhancer.createClass();\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"failures":[311],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:65","sourceCode":"if (org.easymock.internal.Range.hasFixedCount()) {\n    return \"\" + (int);\n} else if (org.easymock.internal.Range.hasOpenCount()) {\n    return \"at least \" + (int);\n} else {\n    return ((\"between \" + (int)) + \" and \") + (int);\n}","type":"CtIfImpl"},"failures":[47,49,50,312,313,314,315,141,142,148,149,163,164,165,183,184,186,187,255,303,305,308,309],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[316,119],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:245","sourceCode":"net.sf.cglib.proxy.Factory.getCallback(0)","type":"CtInvocationImpl"},"failures":[36,317,318,23,53,54,56,58,68,69,71,72,73,319,74,320,75,76,77,78,321,79,80,82,83,84,131,132,133,322,134,323,135,136,324,137,138,325,152,153,154,155,202,205,209,326,210,256,327,328,329,286,287,288,330,331,332,289,290,291,333,334,335,292],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1862","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Same(T))","type":"CtInvocationImpl"},"failures":[10],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[139,146,164,176,302,307],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:853","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[47,49,50,141,336,337,20,338,163,164,165,184,186,187,255,303],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:52","sourceCode":"return (int) == (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:79","sourceCode":"return ((int) <= int) && (int <= (int))","type":"CtReturnImpl"},"failures":[46,47,49,51,52,98,102,103,106,109,112,6,8,10,11,114,117,118,120,19,137,141,142,143,144,148,149,150,163,164,165,175,182,184,186,188,208,215,219,220,222,225,234,239,243,244,246,249,277,298,299,300,301,303,305,308,309],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[16],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.Capture:131","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:137","sourceCode":"return java.util.List<T>.toString()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[109,150,339,299,300,301],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[340,27,28,29,30,31,341,32,342,33,34,34,35,35,343,36,317,318,344,37,38,25,39,40,41,43,44,45,46,345,47,48,49,50,51,21,22,23,52,53,54,55,56,57,58,59,0,1,2,3,60,61,62,63,64,65,4,5,66,67,68,69,70,71,72,73,319,74,75,76,77,78,80,81,82,83,84,85,86,88,89,90,346,92,93,94,96,97,98,99,100,101,102,103,104,105,106,107,108,347,109,110,111,112,6,7,8,9,10,11,12,13,15,113,114,115,116,117,118,119,120,16,17,121,122,123,18,19,124,312,313,314,315,125,128,129,130,131,132,134,323,135,136,324,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,160,161,162,348,163,164,165,166,167,168,169,170,173,174,175,176,177,178,179,180,181,182,349,183,184,185,186,187,188,350,351,192,193,352,196,197,198,199,200,201,353,354,208,355,356,357,358,359,360,209,326,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,361,362,363,364,365,366,367,368,369,26,370,371,231,372,232,233,234,373,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,262,263,265,266,267,268,269,270,271,272,273,274,275,276,277,374,375,376,377,378,379,380,381,382,383,278,279,280,281,282,283,284,285,286,287,288,331,332,289,290,291,333,334,335,292,298,299,300,301,302,303,304,305,306,307,308,309,310],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Injector:217","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[384,385],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[91],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[82,83,84,85,110,139,146,164,174,176,177,178,179,180,181,196,197,198,199,200,201,233,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,263,277,302,307],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[340,27,28,29,30,31,341,32,342,33,34,34,35,35,343,36,317,318,344,37,38,25,39,40,41,43,44,45,46,345,47,48,49,50,51,21,22,23,52,53,54,55,56,57,58,59,0,1,2,3,60,61,62,63,64,65,4,5,66,67,68,69,70,71,72,73,319,74,75,76,77,78,80,81,82,83,84,85,86,88,89,90,346,92,93,94,96,97,98,99,100,101,102,103,104,105,106,107,108,347,109,110,111,112,6,7,8,9,10,11,12,13,15,113,114,115,116,117,118,119,120,16,17,121,122,123,18,19,124,312,313,314,315,125,128,129,130,131,132,134,323,135,136,324,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,160,161,162,348,163,164,165,166,167,168,169,170,173,174,175,176,177,178,179,180,181,182,349,183,184,185,186,187,188,350,351,192,193,352,196,197,198,199,200,201,353,354,208,355,356,357,358,359,360,209,326,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,361,362,363,364,365,366,367,368,369,26,370,371,231,372,232,233,234,373,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,262,263,265,266,267,268,269,270,271,272,273,274,275,276,277,374,375,376,377,378,379,380,381,382,383,278,279,280,281,282,283,284,285,286,287,288,331,332,289,290,291,333,334,335,292,298,299,300,301,302,303,304,305,306,307,308,309,310],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:152","failures":[],"status":0,"binaryOperator":"(\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[317,318,23,53,56,68,69,71,72,73,74,320,75,78,321,79,83,84,386,325,387,152,388,389,390,391,392,393,394,395,351,396,397,398,399,400,401,209,326,385,402,403,256,404,327,328,329,330,331,332,289,290,291,333,334,335,292],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:79","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"failures":[0,2,4,6,7,9,11,12,14,16,18],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[340,27,28,29,30,31,341,32,342,33,34,35,343,36,317,318,344,37,38,25,39,40,405,406,407,408,409,41,42,410,411,412,413,414,415,416,43,44,45,417,418,46,345,47,48,49,50,51,21,22,23,52,53,54,55,56,419,57,58,59,420,0,1,2,3,60,61,62,63,64,65,4,5,66,67,68,69,70,71,72,73,319,421,74,422,320,75,76,77,78,321,79,80,423,81,82,83,84,85,424,425,426,427,428,86,87,429,430,431,432,433,434,88,89,90,346,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,347,109,110,111,112,6,7,435,8,9,10,11,12,13,14,15,113,114,115,116,117,118,119,120,16,17,121,122,123,18,19,124,436,312,313,314,315,125,126,127,128,129,130,131,437,132,133,438,322,134,323,135,439,136,440,441,324,137,442,138,386,443,444,445,325,446,447,139,140,141,142,143,144,145,146,147,148,149,150,151,387,448,449,152,450,388,153,389,390,451,452,391,453,454,392,455,154,393,394,456,457,395,155,458,459,156,157,158,159,160,161,162,348,163,164,165,166,167,168,169,170,460,171,461,172,173,462,174,175,176,177,178,179,180,181,182,349,183,184,185,186,187,188,350,189,190,191,463,351,396,397,398,399,400,464,401,465,192,193,352,194,195,196,197,198,199,200,201,466,202,467,468,203,204,205,206,207,353,354,208,355,356,357,358,359,360,384,209,326,210,385,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,361,362,363,364,365,366,367,368,369,26,370,371,231,372,232,233,469,234,373,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,402,403,256,404,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,374,375,376,470,377,378,379,380,381,382,383,278,279,280,281,282,283,284,285,327,328,329,286,287,471,288,472,473,330,331,332,289,290,291,333,334,335,292,293,294,295,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,296,339,490,491,492,493,297,494,298,299,300,301,302,303,304,305,306,307,308,309,310],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if (org.easymock.ConstructorArgs != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[34,35,45,495,496,497,498,499,500,501],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":7,"org.easymock.tests2.UsageTest.argumentsOrdered":149,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":302,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":107,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":87,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":484,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":144,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":343,"org.easymock.tests2.DelegateToTest.testReturnException":92,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":197,"org.easymock.tests.MockingTest.testPartialClassMocking":286,"org.easymock.tests.MockClassControlTest.testToString":289,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":436,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":171,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":491,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":452,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":153,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":235,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":336,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":44,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":13,"org.easymock.tests2.UsageTest.wrongArguments":142,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":270,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":414,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":162,"org.easymock.samples.ExampleTest.answerVsDelegate":29,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":205,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":473,"org.easymock.tests2.UsageConstraintsTest.testNull":9,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":71,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":106,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":335,"org.easymock.tests2.CaptureTest.testPrimitive":3,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":274,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":254,"org.easymock.tests.UsageTest.moreThanOneArgument":303,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":70,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":283,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":257,"org.easymock.tests.UsageTest.argumentsOrdered":309,"org.easymock.tests.UsageVarargTest.varargIntAccepted":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":489,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":166,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":131,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":444,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":432,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":323,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":476,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":170,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":41,"org.easymock.tests.ReplayStateInvalidUsageTest.times":369,"org.easymock.tests2.DependencyTest.testClassMocking":415,"org.easymock.tests2.AnswerTest.answer":125,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":14,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":339,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":346,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":468,"org.easymock.tests2.CaptureTest.testAnd":0,"org.easymock.tests2.UsageTest.strictResetToDefault":140,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":438,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":75,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":282,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":101,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":300,"org.easymock.tests2.DelegateToTest.testDelegate":96,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":261,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":250,"org.easymock.tests.LimitationsTest.mockFinalMethod":404,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":200,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":269,"org.easymock.tests2.DependencyTest.testClassMockingSupport":416,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":172,"org.easymock.tests2.CaptureTest.testCapture1_2446744":60,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":421,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":248,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":89,"org.easymock.tests.UsageThrowableTest.throwError":174,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":363,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":204,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":466,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":433,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":285,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":495,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":459,"org.easymock.samples.PartialClassMockTest.testGetArea":36,"org.easymock.tests.MockingTest.testInterfaceMocking":471,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":364,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":167,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":391,"org.easymock.tests2.UsageTest.niceToStrict":143,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":195,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":236,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":501,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":474,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":134,"org.easymock.tests2.MockBuilderTest.testCreateMock":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":456,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":411,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":244,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":102,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":467,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":295,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":353,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":160,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":498,"org.easymock.tests.UsageOverloadedMethodTest.overloading":276,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":455,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":395,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":116,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":233,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":222,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":275,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":115,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":65,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":470,"org.easymock.tests2.EasyMockSupportClassTest.testAll":152,"org.easymock.tests.MockClassControlTest.testEquals":334,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":326,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":252,"org.easymock.tests2.CaptureTest.testCaptureAll":1,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":90,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":267,"org.easymock.tests.MockNameTest.defaultName":264,"org.easymock.tests2.UsageConstraintsTest.testMatches":117,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":284,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":361,"org.easymock.samples.ExampleTest.voteForRemovals":32,"org.easymock.tests.UsageVarargTest.allKinds":278,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":163,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":268,"org.easymock.samples.BasicClassMockTest.testPrintContent":318,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":180,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":46,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":429,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":95,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":201,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":464,"org.easymock.tests2.UsageConstraintsTest.greaterThan":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":450,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":299,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":78,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":401,"org.easymock.samples.ExampleTest.voteForRemoval":30,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":38,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":321,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":206,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":445,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":319,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":139,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":292,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":441,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":481,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":99,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":448,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":196,"org.easymock.tests2.CaptureTest.testCaptureFirst":67,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":480,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":100,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":151,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":373,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":218,"org.easymock.tests2.UsageTest.moreThanOneArgument":141,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":39,"org.easymock.tests2.CaptureTest.testCapture2_2446744":66,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":490,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":137,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":383,"org.easymock.tests.GenericTest.testBridgedEquals":385,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":499,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":496,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":359,"org.easymock.tests.UsageExpectAndReturnTest.longType":214,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":97,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":265,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":253,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":156,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":122,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":251,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":190,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":281,"org.easymock.tests.UsageCallCountTest.tooManyCalls":360,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":457,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":219,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":413,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":240,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":179,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":54,"org.easymock.tests.MockingTest.testNiceClassMocking":330,"org.easymock.tests.MockingTest.testClassMocking":328,"org.easymock.tests2.UsageConstraintsTest.testContains":114,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":354,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":84,"org.easymock.tests2.UsageConstraintsTest.testFind":8,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":277,"org.easymock.tests.MockTypeTest.fromEasyMockClass":203,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":182,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":81,"org.easymock.tests.UsageExpectAndReturnTest.object":221,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":74,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":412,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":105,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":378,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":352,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":500,"org.easymock.tests.UsageTest.exactCallCountByLastCall":310,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":262,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":479,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":460,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":258,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":417,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":227,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":374,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":232,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":425,"org.easymock.tests.MockClassControlTest.testHashCode":333,"org.easymock.tests2.EasyMockSupportTest.testVerify":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":454,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":259,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":231,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":294,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":88,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":434,"org.easymock.tests.UsageVarargTest.varargCharAccepted":377,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":463,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":494,"org.easymock.tests2.UsageTest.openCallCountByLastCall":145,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":108,"org.easymock.tests.DefaultClassInstantiatorTest.object":351,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":293,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":392,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":242,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":177,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":408,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":424,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":76,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":291,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":241,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":228,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":155,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":290,"org.easymock.tests2.UsageTest.resumeIfFailure":150,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":202,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":443,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":199,"org.easymock.tests2.StubTest.stubWithReturnValue":110,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":439,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":123,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":220,"org.easymock.tests2.SerializationTest.testAllMockedMethod":23,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":296,"org.easymock.samples.SupportTest.voteForRemovals":27,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":384,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":427,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":247,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":24,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":297,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":126,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":461,"org.easymock.tests.UsageExpectAndThrowTest.object":245,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":17,"org.easymock.tests2.DelegateToTest.testWrongClass":94,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":279,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":280,"org.easymock.tests.UsageStrictMockTest.range":186,"org.easymock.samples.ConstructorCalledMockTest.testTax":34,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":446,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":104,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":53,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":497,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":246,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":387,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":308,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":370,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":161,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":159,"org.easymock.tests2.CaptureTest.testCaptureNone":64,"org.easymock.tests.UsageUnorderedTest.message":255,"org.easymock.tests.UsageVerifyTest.twoReturns":165,"org.easymock.tests.UsageVarargTest.varargByteAccepted":382,"org.easymock.tests2.ThreadingTest.testThreadSafe":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":393,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":357,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":194,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":317,"org.easymock.tests2.CaptureTest.testCapture_2617107":2,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":462,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":492,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":273,"org.easymock.tests2.UsageConstraintsTest.any":15,"org.easymock.tests2.StubTest.stub":109,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":368,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":191,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":493,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":198,"org.easymock.tests.UsageExpectAndThrowTest.longType":238,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":399,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":367,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":48,"org.easymock.tests2.SerializationTest.testClass":21,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":86,"org.easymock.tests.LimitationsTest.mockNativeMethod":256,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":210,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":230,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":407,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":51,"org.easymock.tests2.NameTest.nameForMocksControl":315,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":409,"org.easymock.tests2.MockedExceptionTest.testMockedException":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":388,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":307,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":423,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":239,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":288,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":68,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":136,"org.easymock.tests.MockingTest.testNicePartialClassMocking":287,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":73,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":405,"org.easymock.tests2.CaptureTest.testCaptureLast":63,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":173,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":12,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":59,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":121,"org.easymock.tests.MockingTest.testTwoMocks":329,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":420,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":211,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":243,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":148,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":19,"org.easymock.samples.ExampleTest.removeNonExistingDocument":342,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":410,"org.easymock.tests.UsageStrictMockTest.differentMethods":187,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":365,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":426,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":397,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":25,"org.easymock.tests2.MockBuilderTest.testCreateMockString":138,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":389,"org.easymock.tests.UsageExpectAndThrowTest.floatType":237,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":449,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":128,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":418,"org.easymock.tests.UsageVerifyTest.twoThrows":164,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":372,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":154,"org.easymock.samples.ExampleTest.voteAgainstRemoval":31,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":485,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":157,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":77,"org.easymock.tests.LimitationsTest.privateConstructor":403,"org.easymock.tests2.UsageConstraintsTest.testNotNull":18,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":181,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":82,"org.easymock.tests2.UsageTest.defaultResetToNice":147,"org.easymock.samples.ExampleTest.voteAgainstRemovals":28,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":486,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":226,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":406,"org.easymock.tests.UsageVarargTest.differentLength":379,"org.easymock.tests2.CallbackTest.callback":52,"org.easymock.tests2.UsageConstraintsTest.equals":435,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":422,"org.easymock.tests.UsageTest.openCallCountByLastCall":306,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":111,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":272,"org.easymock.tests.UsageCallCountTest.tooFewCalls":355,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":56,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":348,"org.easymock.tests.UsageThrowableTest.throwCheckedException":178,"org.easymock.tests.MockingTest.testStrictClassMocking":327,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":58,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":263,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":42,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":55,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":26,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":57,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":130,"org.easymock.tests.ObjectMethodsTest.testHashCode":193,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":40,"org.easymock.tests2.NameTest.nameForNiceMock":314,"org.easymock.tests2.DependencyTest.testInterfaceMocking":43,"org.easymock.samples.ExampleTest.addDocument":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":458,"org.easymock.tests2.DelegateToTest.testStubDelegate":93,"org.easymock.tests2.AnswerTest.stubAnswer":129,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":184,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":440,"org.easymock.tests.UsageVarargTest.varargLongAccepted":381,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":188,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":483,"org.easymock.tests.UsageExpectAndReturnTest.floatType":213,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":229,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":45,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":35,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":469,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":431,"org.easymock.tests.UsageThrowableTest.noUpperLimit":175,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":120,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":112,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":386,"org.easymock.tests2.SerializationTest.test":22,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":61,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":396,"org.easymock.tests2.UsageConstraintsTest.testSame":10,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":212,"org.easymock.samples.SupportTest.addDocument":340,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":419,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":390,"org.easymock.tests.GenericTest.testPackageScope":209,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":260,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":478,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":430,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":472,"org.easymock.tests2.NameTest.nameForMock":312,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":223,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":442,"org.easymock.tests2.UsageStrictMockTest.differentMethods":50,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":320,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":215,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":249,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":465,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":301,"org.easymock.tests2.MockedExceptionTest.testRealException":85,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":207,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":488,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":447,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":487,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":47,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":271,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":371,"org.easymock.tests2.NameTest.nameForStrictMock":313,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":322,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":80,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":72,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":325,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":398,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":16,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":337,"org.easymock.tests.ErrorMessageTest.testGetters":20,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":132,"org.easymock.tests2.UsageStrictMockTest.range":49,"org.easymock.tests2.UsageConstraintsTest.lessThan":124,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":428,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":482,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":453,"org.easymock.tests2.CaptureTest.testCaptureRightOne":4,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":311,"org.easymock.tests2.UsageConstraintsTest.testOr":11,"org.easymock.tests.UsageRangeTest.combination":298,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":69,"org.easymock.tests.UsageTest.wrongArguments":305,"org.easymock.tests2.MockBuilderTest.testWithConstructor":437,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":451,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":332,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":216,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":475,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":224,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":400,"org.easymock.tests.UsageVarargTest.varargShortAccepted":380,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":358,"org.easymock.tests2.UsageConstraintsTest.cmpTo":113,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":127,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":477,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":146,"org.easymock.tests2.CaptureTest.testCaptureFromStub":5,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":362,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":133,"org.easymock.tests.UsageTest.unexpectedCallWithArray":304,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":183,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":356,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":225,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":185,"org.easymock.tests2.UsageConstraintsTest.constraints":6,"org.easymock.samples.ExampleTest.addAndChangeDocument":33,"org.easymock.tests.UsageStrictMockTest.testVerify":350,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":344,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":349,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":266,"org.easymock.tests2.CompareToTest.testGreateThan":316,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":62,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":168,"org.easymock.tests.LimitationsTest.abstractClass":402,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":217,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":169,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":234,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":103,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":338,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":375}}]
