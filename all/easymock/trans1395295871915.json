[{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,17,18,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[43,44,45],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[46,47,48,49,50,51,52],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,0,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,46,111,112,113,114,115,116,117,118,1,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,2,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,3,4,167,168,169,5,6,7,8,170,171,172,173,174,9,175,10,11,176,12,13,177,178,179,180,181,14,15,16,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,17,18,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,19,287,43,288,289,290,291,292,293,294,295,296,297,298,299,20,21,22,23,24,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,25,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,26,336,337,338,27,28,339,340,341,342,343,344,345,346,29,44,347,348,349,30,350,351,45,352,31,32,353,354,33,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,34,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,35,36,37,38,39,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,40,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,41,42,500,501,502,503,504,505,506,507,508,509,510,511,512,513],"status":-1,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[514,515,516],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:184","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[207],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.Range:52","failures":[61,0,70,71,147,149,150,153,154,156,157,159,165,6,7,173,174,14,15,183,184,185,186,262,286,318,25,320,321,330,332,335,356,357,397,454,465,466,470,471,472,475,476,477,479,480,481,482,483,484],"status":-1,"binaryOperator":"(int) == (int)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:229","failures":[199,203,205,215,239],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if (java.lang.Object == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"transplant":{"position":"org.easymock.internal.LastControl:37","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[108,110,290,424,426],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[182],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[517,50,51,518,519],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:959","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:217","failures":[53,54,55,56,59,60,61,62,63,64,65,66,67,68,0,69,70,71,72,78,85,86,87,88,89,90,91,92,93,94,95,96,97,104,106,107,108,109,110,111,112,114,115,116,117,118,1,119,120,121,122,124,125,126,134,135,136,137,138,139,140,141,142,143,144,2,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,3,4,167,168,5,6,7,8,170,171,172,173,174,9,175,10,11,176,12,13,177,178,179,180,181,14,15,16,183,184,185,186,187,188,189,190,191,192,193,195,198,199,200,201,204,205,208,209,210,211,214,215,216,222,229,230,231,232,236,239,249,255,258,259,260,261,262,263,264,265,266,267,268,17,17,18,18,269,270,271,272,274,275,276,279,286,19,287,43,288,289,290,291,292,293,294,295,296,297,298,299,20,21,22,23,24,300,301,302,304,305,306,308,309,310,311,312,313,314,315,316,317,318,25,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,347,45,31,32,353,354,33,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,382,387,388,389,391,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,34,423,425,449,450,451,452,453,35,36,37,38,39,454,455,456,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,40,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,41,42,500,501,502,503,504,505,506,507,508,509,510,511,512,513],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[110,115,117,119,120,121,122,125,126,187,188,190,191,192,193,195,198,199,200,201,203,204,205,206,208,209,210,211,214,215,216,231,236,239,249,255,259,260,17,17,18,18,272,278,304,305,306,308,309,310,311,312,313,382,387,388,389,391,492,497,507],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"failures":[520],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[115,116,117],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[63],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"toStringMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[1,147,154,297,298,299,338,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,395,397,398,399,400,401,402,471,475,476,481,503,512],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[70,71,320,321,341,355,358,359,364,368,369,371,374,407,411,412,414,417],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.EasyMock:1848","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:68","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[70,150,156,157,176,286,318,320,521,522,471,472,478,479,482,483,506],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"argument"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:206","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"failures":[90,151,197,236],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:89","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object)","type":"CtReturnImpl"},"failures":[67,0,69,70,71,72,78,79,86,88,90,91,93,94,111,120,121,125,126,147,149,150,151,152,156,157,158,159,167,176,183,184,185,186,188,198,201,203,204,205,206,210,211,214,215,216,222,223,274,277,278,286,310,311,312,316,318,25,319,320,321,322,327,329,330,333,334,335,384,460,466,470,471,472,476,477,478,479,482,483,484,489,490,492,495,496,497,498,499,501,504,505,506],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String)","type":"CtInvocationImpl"},"failures":[0,70,71,149,150,156,157,183,184,185,186,286,318,25,320,321,523,524,525,470,471,472,477,479,482,483],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:933","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[53,54,55,56,59,60,61,64,65,66,68,0,71,72,78,85,86,87,88,89,90,91,92,93,94,95,96,97,104,106,109,110,111,112,114,115,116,117,118,1,119,120,121,122,124,125,126,134,135,136,137,139,140,141,142,143,144,146,148,149,151,152,155,158,161,162,165,3,4,167,168,5,6,7,8,170,171,173,174,9,175,10,11,176,12,13,177,178,179,181,14,15,16,183,184,185,186,187,189,190,191,192,195,198,200,204,208,209,210,211,222,229,230,231,232,236,239,249,255,258,259,260,261,262,263,264,265,266,268,17,18,269,270,271,272,20,21,22,23,24,304,305,309,317,25,321,322,323,327,328,329,330,331,332,31,32,33,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,382,388,389,391,396,397,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,34,449,450,451,452,453,35,36,37,38,39,454,455,456,458,459,461,462,463,464,465,466,467,468,469,470,471,472,474,475,477,485,486,487,488,491,41,42,505,507,508,509,510,511,512,513],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"failures":[526,12],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[115,116,117,527],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1848","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:79","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"m"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[193,203,204,209],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[46,47,48,49,50,51,52],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1862","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Same(T))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[59,60,61,65,0,70,71,78,85,86,87,88,89,90,91,92,93,94,95,96,104,106,107,108,109,110,115,116,1,119,120,121,122,124,125,126,134,135,137,138,141,142,143,144,145,146,147,148,149,151,153,154,155,158,159,162,3,4,167,168,5,6,7,8,170,171,173,174,9,175,10,11,176,12,13,177,178,179,181,14,15,16,187,188,189,190,191,192,195,199,200,201,205,208,210,211,215,222,231,236,239,249,255,261,263,264,266,270,272,304,308,25,320,321,327,31,32,33,382,388,389,391,395,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,34,35,36,37,38,39,466,467,468,469,470,472,473,474,475,476,477,480,481,484,41,42,505],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[0,70,71,188,190,192,198,201,318,25,320,321,323,478],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:83","failures":[61,65,0,69,70,71,111,1,135,136,138,139,140,141,142,146,147,149,150,153,154,156,157,159,162,6,173,176,14,183,184,185,186,286,318,25,319,320,321,32,33,397,465,470,471,472,475,476,477,479,480,481,482,483,484,512],"status":-1,"binaryOperator":"(int) == (java.lang.Integer.int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"failures":[110,46,115,196,528,529,52,213,530,531,532,518,519,17,18],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[533,10,179,16],"status":-1,"binaryOperator":"int < 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[61,63,64,66,111,112,114,262,346,500],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[115,116,117],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":168,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":476,"org.easymock.tests2.UsageTest.argumentsOrdered":157,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":95,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":343,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":152,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":271,"org.easymock.tests2.DelegateToTest.testReturnException":161,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":509,"org.easymock.tests.MockingTest.testPartialClassMocking":388,"org.easymock.tests.MockClassControlTest.testToString":310,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":182,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":425,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":30,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":203,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":243,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":239,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":360,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":523,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":60,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":448,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":47,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":171,"org.easymock.tests2.UsageTest.wrongArguments":150,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":31,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":84,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":487,"org.easymock.samples.ExampleTest.answerVsDelegate":262,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":497,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":393,"org.easymock.tests2.UsageConstraintsTest.testNull":6,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":190,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":94,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":315,"org.easymock.tests2.CaptureTest.testPrimitive":137,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":33,"org.easymock.tests.UsageTest.moreThanOneArgument":477,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":379,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":189,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":22,"org.easymock.tests.UsageTest.argumentsOrdered":483,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":355,"org.easymock.tests.UsageVarargTest.varargIntAccepted":456,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":44,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":35,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":51,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":204,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":130,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":227,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":209,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":337,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":39,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":432,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":78,"org.easymock.tests.ReplayStateInvalidUsageTest.times":293,"org.easymock.tests2.DependencyTest.testClassMocking":57,"org.easymock.tests2.AnswerTest.answer":61,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":172,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":348,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":56,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":494,"org.easymock.tests2.CaptureTest.testAnd":134,"org.easymock.tests2.UsageTest.strictResetToDefault":148,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":529,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":198,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":21,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":468,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":89,"org.easymock.tests2.DelegateToTest.testDelegate":165,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":359,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":431,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":375,"org.easymock.tests.LimitationsTest.mockFinalMethod":383,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":512,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":453,"org.easymock.tests2.DependencyTest.testClassMockingSupport":58,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":489,"org.easymock.tests2.CaptureTest.testCapture1_2446744":138,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":194,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":373,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":54,"org.easymock.tests.UsageThrowableTest.throwError":395,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":43,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":496,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":228,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":24,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":532,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":257,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":435,"org.easymock.samples.PartialClassMockTest.testGetArea":272,"org.easymock.tests.MockingTest.testInterfaceMocking":390,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":288,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":36,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":325,"org.easymock.tests2.UsageTest.niceToStrict":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":244,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":278,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":361,"org.easymock.tests2.ThreadingTest.testChangeDefault":105,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":516,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":26,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":208,"org.easymock.tests2.MockBuilderTest.testCreateMock":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":252,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":81,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":369,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":90,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":493,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":299,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":327,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":485,"org.easymock.tests.UsageOverloadedMethodTest.overloading":474,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":248,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":254,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":503,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":10,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":473,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":414,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":175,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":143,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":457,"org.easymock.tests2.EasyMockSupportClassTest.testAll":236,"org.easymock.tests.MockClassControlTest.testEquals":314,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":305,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":377,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":451,"org.easymock.tests2.CaptureTest.testCaptureAll":135,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":55,"org.easymock.tests.MockNameTest.defaultName":384,"org.easymock.tests2.UsageConstraintsTest.testMatches":11,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":19,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":23,"org.easymock.samples.ExampleTest.voteForRemovals":266,"org.easymock.tests.UsageVarargTest.allKinds":465,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":470,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":452,"org.easymock.samples.BasicClassMockTest.testPrintContent":260,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":401,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":67,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":513,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":164,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":224,"org.easymock.tests2.UsageConstraintsTest.greaterThan":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":237,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":467,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":201,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":436,"org.easymock.samples.ExampleTest.voteForRemoval":263,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":285,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":106,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":202,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":498,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":193,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":428,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":507,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":147,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":213,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":340,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":87,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":234,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":508,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":160,"org.easymock.tests2.CaptureTest.testCaptureFirst":146,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":339,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":88,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":159,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":506,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":410,"org.easymock.tests2.UsageTest.moreThanOneArgument":149,"org.easymock.tests2.CaptureTest.testCapture2_2446744":145,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":108,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":215,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":349,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":464,"org.easymock.tests.GenericTest.testBridgedEquals":307,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":334,"org.easymock.tests.UsageExpectAndReturnTest.longType":406,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":449,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":85,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":378,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":180,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":40,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":376,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":20,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":301,"org.easymock.tests.UsageCallCountTest.tooManyCalls":335,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":253,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":411,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":83,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":365,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":400,"org.easymock.tests.MockingTest.testNiceClassMocking":394,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":120,"org.easymock.tests.MockingTest.testClassMocking":386,"org.easymock.tests2.UsageConstraintsTest.testContains":9,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":328,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":231,"org.easymock.tests2.UsageConstraintsTest.testFind":5,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":475,"org.easymock.tests.MockTypeTest.fromEasyMockClass":495,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":114,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":316,"org.easymock.tests.UsageExpectAndReturnTest.object":413,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":195,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":82,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":93,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":459,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":48,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":276,"org.easymock.tests.UsageTest.exactCallCountByLastCall":484,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":34,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":28,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":424,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":356,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":46,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":454,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":419,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":502,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":218,"org.easymock.tests.MockClassControlTest.testHashCode":313,"org.easymock.tests2.EasyMockSupportTest.testVerify":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":246,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":357,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":500,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":298,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":53,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":166,"org.easymock.tests.UsageVarargTest.varargCharAccepted":458,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":68,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":352,"org.easymock.tests2.UsageTest.openCallCountByLastCall":153,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":514,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":96,"org.easymock.tests.DefaultClassInstantiatorTest.object":279,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":297,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":274,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":522,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":247,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":367,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":398,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":76,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":217,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":434,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":199,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":312,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":366,"org.easymock.tests.ReplayStateInvalidCallsTest.times":440,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":420,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":300,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":441,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":255,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":311,"org.easymock.tests2.UsageTest.resumeIfFailure":158,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":492,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":129,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":511,"org.easymock.tests2.StubTest.stubWithReturnValue":1,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":52,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":412,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":181,"org.easymock.tests2.SerializationTest.testAllMockedMethod":117,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":347,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":519,"org.easymock.samples.SupportTest.voteForRemovals":270,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":303,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":220,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":372,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":527,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":45,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":62,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":426,"org.easymock.tests.UsageExpectAndThrowTest.object":370,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":178,"org.easymock.tests2.DelegateToTest.testWrongClass":163,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":438,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":41,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":42,"org.easymock.samples.ConstructorCalledMockTest.testTax":17,"org.easymock.tests.UsageStrictMockTest.range":320,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":132,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":92,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":119,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":371,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":210,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":482,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":233,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":295,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":486,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":430,"org.easymock.tests2.CaptureTest.testCaptureNone":142,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":326,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":99,"org.easymock.tests.UsageUnorderedTest.message":286,"org.easymock.tests.UsageVerifyTest.twoReturns":472,"org.easymock.tests.UsageVarargTest.varargByteAccepted":463,"org.easymock.tests2.ThreadingTest.testThreadSafe":104,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":250,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":332,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":259,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":277,"org.easymock.tests2.CaptureTest.testCapture_2617107":136,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":350,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":354,"org.easymock.tests2.UsageConstraintsTest.any":173,"org.easymock.tests2.StubTest.stub":118,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":292,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":302,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":510,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":351,"org.easymock.tests.UsageExpectAndThrowTest.longType":363,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":283,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":291,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":69,"org.easymock.tests2.SerializationTest.testClass":115,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":222,"org.easymock.tests.LimitationsTest.mockNativeMethod":382,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":422,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":306,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":75,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":446,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":72,"org.easymock.tests2.NameTest.nameForMocksControl":186,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":100,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":77,"org.easymock.tests2.MockedExceptionTest.testMockedException":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":238,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":481,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":391,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":113,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":364,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":187,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":211,"org.easymock.tests.MockingTest.testNicePartialClassMocking":389,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":192,"org.easymock.tests2.CompareToTest.testCompareEqual":520,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":517,"org.easymock.tests2.CaptureTest.testCaptureLast":141,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":73,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":490,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":445,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":170,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":126,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":179,"org.easymock.tests.MockingTest.testTwoMocks":387,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":442,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":127,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":403,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":368,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":156,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":15,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":103,"org.easymock.samples.ExampleTest.removeNonExistingDocument":267,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":80,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":289,"org.easymock.tests.UsageStrictMockTest.differentMethods":321,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":219,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":102,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":281,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":107,"org.easymock.tests2.MockBuilderTest.testCreateMockString":216,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":240,"org.easymock.tests.UsageExpectAndThrowTest.floatType":362,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":235,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":64,"org.easymock.tests.UsageVerifyTest.twoThrows":471,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":501,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":249,"org.easymock.samples.ExampleTest.voteAgainstRemoval":264,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":324,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":344,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":200,"org.easymock.tests.LimitationsTest.privateConstructor":381,"org.easymock.tests2.UsageConstraintsTest.testNotNull":14,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":402,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":229,"org.easymock.tests2.UsageTest.defaultResetToNice":155,"org.easymock.samples.ExampleTest.voteAgainstRemovals":261,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":418,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":345,"org.easymock.tests.UsageVarargTest.differentLength":460,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":74,"org.easymock.tests2.CallbackTest.callback":111,"org.easymock.tests2.UsageConstraintsTest.equals":169,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":196,"org.easymock.tests.UsageTest.openCallCountByLastCall":480,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":3,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":353,"org.easymock.tests.UsageCallCountTest.tooFewCalls":330,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":122,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":488,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":101,"org.easymock.tests.UsageThrowableTest.throwCheckedException":399,"org.easymock.tests.MockingTest.testStrictClassMocking":385,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":423,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":125,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":121,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":79,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":294,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":124,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":66,"org.easymock.tests.ObjectMethodsTest.testHashCode":275,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":50,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":444,"org.easymock.tests2.NameTest.nameForNiceMock":185,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":109,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":439,"org.easymock.tests2.DependencyTest.testInterfaceMocking":59,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":49,"org.easymock.samples.ExampleTest.addDocument":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":251,"org.easymock.tests2.DelegateToTest.testStubDelegate":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":256,"org.easymock.tests2.AnswerTest.stubAnswer":65,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":25,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":212,"org.easymock.tests.UsageVarargTest.varargLongAccepted":462,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":322,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":342,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":421,"org.easymock.tests.UsageExpectAndReturnTest.floatType":405,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":110,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":18,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":504,"org.easymock.tests.UsageThrowableTest.noUpperLimit":396,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":13,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":226,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":4,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":128,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":139,"org.easymock.tests2.SerializationTest.test":116,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":280,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":404,"org.easymock.tests2.UsageConstraintsTest.testSame":7,"org.easymock.samples.SupportTest.addDocument":269,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":123,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":429,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":241,"org.easymock.tests.GenericTest.testPackageScope":304,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":358,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":27,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":225,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":392,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":427,"org.easymock.tests2.NameTest.nameForMock":183,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":415,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":531,"org.easymock.tests2.UsageStrictMockTest.differentMethods":71,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":197,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":407,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":374,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":273,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":469,"org.easymock.tests2.MockedExceptionTest.testRealException":232,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":499,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":133,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":29,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":521,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":518,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":346,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":32,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":296,"org.easymock.tests2.NameTest.nameForStrictMock":184,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":207,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":515,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":112,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":191,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":131,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":524,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":177,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":282,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":205,"org.easymock.tests2.UsageStrictMockTest.range":70,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":433,"org.easymock.tests2.UsageConstraintsTest.lessThan":16,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":221,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":341,"org.easymock.tests2.CaptureTest.testCaptureRightOne":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":245,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":98,"org.easymock.tests2.UsageConstraintsTest.testOr":8,"org.easymock.tests.UsageRangeTest.combination":466,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":188,"org.easymock.tests.UsageTest.wrongArguments":479,"org.easymock.tests2.MockBuilderTest.testWithConstructor":528,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":242,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":309,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":408,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":336,"org.easymock.tests.UsageVarargTest.varargShortAccepted":461,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":284,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":333,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":447,"org.easymock.tests2.UsageConstraintsTest.cmpTo":174,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":63,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":437,"org.easymock.tests2.CompareToTest.testLessThan":533,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":338,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":154,"org.easymock.tests2.CaptureTest.testCaptureFromStub":2,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":287,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":206,"org.easymock.tests.UsageTest.unexpectedCallWithArray":478,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":443,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":318,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":331,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":530,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":417,"org.easymock.tests2.UsageConstraintsTest.constraints":167,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":319,"org.easymock.samples.ExampleTest.addAndChangeDocument":268,"org.easymock.tests.UsageStrictMockTest.testVerify":323,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":258,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":317,"org.easymock.tests2.CompareToTest.testGreateThan":526,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":450,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":140,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":37,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":409,"org.easymock.tests.LimitationsTest.abstractClass":380,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":505,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":38,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":525,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":455,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":91}}]
