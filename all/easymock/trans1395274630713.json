[{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1349","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.JavaProxyFactory:30","sourceCode":"return java.lang.reflect.Proxy.((T)(java.lang.reflect.Proxy.newProxyInstance(java.lang.Class<T>.getClassLoader(), new java.lang.Class[]{ java.lang.Class<T> }, java.lang.reflect.InvocationHandler)))","type":"CtReturnImpl"},"failures":[14,15,16,17,18,19,20,21,22,23,24,25,0,1,2,3,4,5,6,7,26,8,9,10,11,12,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"(((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"return java.lang.reflect.Field.getType().isAssignableFrom(org.easymock.internal.Injection.getMock().getClass())","type":"CtReturnImpl"},"failures":[75,81,136,142],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:55","sourceCode":"java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection)","type":"CtInvocationImpl"},"failures":[14,25,75,80,136,141],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[27,28,338,339],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:138","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[340,341,342,343],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.Invocation:183","sourceCode":"final java.lang.SecurityException java.lang.SecurityException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[29,31],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[39,40,45,46],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:217","failures":[344,14,15,16,17,18,19,20,22,23,24,345,346,25,0,1,2,3,5,6,7,26,8,9,12,27,28,338,30,32,34,340,40,42,45,46,48,49,51,54,57,58,59,60,61,62,67,347,348,349,68,350,351,69,72,79,352,353,354,355,84,85,87,88,89,93,94,96,98,356,99,357,358,359,360,361,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,122,123,124,125,126,131,140,147,362,363,364,153,154,156,161,166,171,172,173,174,175,176,177,178,179,365,185,186,187,188,189,191,192,193,194,195,213,216,217,218,366,367,368,227,247,248,249,250,251,252,253,255,369,370,256,257,267,268,269,271,272,274,275,276,278,279,281,289,290,304,305,306,307,311,312,314,319,324],"status":-1,"binaryOperator":"(boolean) && ((org.easymock.internal.Result) == null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,26,8,9,10,11,12,27,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,97,360,371,103,105,107,108,149,150,151,179,184,195,196,200,201,235,236,237,238,239,240,244,245,246,248,249,304,305,306,307,308,329,330],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[372,373],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:946","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Matches:40","sourceCode":"java.lang.StringBuffer.append(((\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[374],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[344,14,15,16,17,18,19,20,21,22,23,24,345,346,25,0,1,2,3,4,5,6,7,26,8,9,10,11,12,28,338,29,30,31,32,33,34,35,36,37,38,39,40,375,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,376,377,65,66,67,347,349,68,378,69,70,71,72,73,74,75,76,77,379,78,79,80,81,82,380,381,83,382,383,352,384,353,385,386,387,388,354,389,390,391,392,393,355,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,356,99,357,358,359,394,395,360,396,371,397,361,398,399,400,100,101,102,103,104,105,106,107,108,109,110,111,401,402,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,403,127,128,129,130,131,132,133,134,135,136,137,138,404,139,140,141,142,143,405,406,144,145,146,147,148,407,408,409,410,362,411,363,364,412,413,414,149,415,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,416,180,181,417,182,183,418,184,372,419,420,421,373,422,423,424,425,365,426,185,186,187,427,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,428,429,430,431,432,433,434,203,204,205,206,207,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,208,451,452,453,454,455,209,456,210,211,212,213,214,215,216,217,218,219,220,221,222,223,457,458,459,224,225,226,460,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,461,243,462,244,245,246,247,248,249,250,251,252,253,254,463,255,369,464,465,370,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,466,337],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[57],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Captures:53","failures":[0,1,2,3,4,5,6,7,26,8,9,10,11,12,13],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[0,2,9,39,40,42,44,45,47,57,62],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:104","sourceCode":"throw new java.lang.IllegalStateException(java.lang.String)","type":"CtThrowImpl"},"failures":[47],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[0,2,9,39,45],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:243","failures":[344,15,17,18,20,24,31,340,67,347,348,349,68,350,351,352,353,354,355,98,356,99,357,358,359,360,397,361,398,103,107,109,110,112,113,408,362,363,364,413,151,152,153,154,155,156,159,160,162,163,164,166,167,168,169,170,365,203,204,205,206,366,367,368,227,228,229,230,235,236,237,238,239,243,249,251,252,255,464,256,284,285,304,329,330,331],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < (java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:40","sourceCode":"if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[86,87,93,94,467,468,469,470,471,472,473,211,212,213,216,217,248],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[474],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[343],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[475],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:157","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[27,340,341,476,477,478,479,480,342,481],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method","bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[467,469,471,472,212,248],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:251","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"mockClass"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[463,465],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:154","sourceCode":"return (java.lang.String + \".\") + java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[482,395,483],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mockName":"key","methodName":"value"}},{"position":"org.easymock.EasyMock:760","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[463,465],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[484],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[88],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:721","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:557","failures":[344,15,16,17,18,20,22,24,485,485,486,486,0,1,3,4,7,26,8,9,10,11,12,27,28,29,30,31,32,33,34,35,36,340,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,67,347,348,349,68,350,351,69,70,71,72,73,74,79,352,353,354,355,84,85,86,88,90,91,92,95,96,98,356,99,357,358,359,360,397,361,398,100,101,102,103,104,107,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,131,140,145,146,147,148,408,362,363,364,413,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,365,196,197,198,199,200,201,203,204,205,206,207,208,209,210,211,214,215,218,366,367,368,227,228,229,230,235,236,237,238,239,240,241,242,461,243,462,244,245,249,251,252,255,464,370,256,257,258,259,260,261,262,263,266,273,274,275,276,278,279,281,283,284,285,286,287,288,290,297,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":40,"org.easymock.tests2.UsageTest.argumentsOrdered":94,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":210,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":124,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":141,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":445,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":89,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":14,"org.easymock.tests2.DelegateToTest.testReturnException":30,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":197,"org.easymock.tests.MockingTest.testPartialClassMocking":366,"org.easymock.tests.MockClassControlTest.testToString":429,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":403,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":453,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":400,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":309,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":353,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":113,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":476,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":46,"org.easymock.tests2.UsageTest.wrongArguments":87,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":304,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":83,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":233,"org.easymock.samples.ExampleTest.answerVsDelegate":16,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":417,"org.easymock.tests2.UsageConstraintsTest.testNull":42,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":226,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":357,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":434,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":123,"org.easymock.tests2.CaptureTest.testPrimitive":3,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":308,"org.easymock.tests.UsageTest.moreThanOneArgument":211,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":328,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":99,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":205,"org.easymock.tests.UsageTest.argumentsOrdered":217,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":259,"org.easymock.tests.UsageVarargTest.varargIntAccepted":187,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":450,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":235,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":407,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":406,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":411,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":437,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":239,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":79,"org.easymock.tests.ReplayStateInvalidUsageTest.times":300,"org.easymock.tests2.DependencyTest.testClassMocking":401,"org.easymock.tests2.AnswerTest.answer":69,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":47,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":451,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":135,"org.easymock.tests2.CaptureTest.testAnd":0,"org.easymock.tests2.UsageTest.strictResetToDefault":85,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":371,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":204,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":118,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":229,"org.easymock.tests2.DelegateToTest.testDelegate":34,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":263,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":324,"org.easymock.tests.LimitationsTest.mockFinalMethod":426,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":200,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":223,"org.easymock.tests2.DependencyTest.testClassMockingSupport":402,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":289,"org.easymock.tests2.CaptureTest.testCapture1_2446744":4,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":395,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":322,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":133,"org.easymock.tests.UsageThrowableTest.throwError":171,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":294,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":181,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":144,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":207,"org.easymock.samples.PartialClassMockTest.testGetArea":344,"org.easymock.tests.MockingTest.testInterfaceMocking":224,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":295,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":236,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":284,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":466,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":387,"org.easymock.tests2.UsageTest.niceToStrict":88,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":310,"org.easymock.tests2.ThreadingTest.testChangeDefault":483,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":435,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":362,"org.easymock.tests2.MockBuilderTest.testCreateMock":412,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":391,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":82,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":467,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":318,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":119,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":288,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":264,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":231,"org.easymock.tests.UsageOverloadedMethodTest.overloading":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":393,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":52,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":279,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":162,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":256,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":51,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":8,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":427,"org.easymock.tests.MockClassControlTest.testEquals":433,"org.easymock.tests2.EasyMockSupportClassTest.testAll":352,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":369,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":468,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":326,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":134,"org.easymock.tests2.CaptureTest.testCaptureAll":1,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":221,"org.easymock.tests.MockNameTest.defaultName":337,"org.easymock.tests2.UsageConstraintsTest.testMatches":53,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":206,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":292,"org.easymock.samples.ExampleTest.voteForRemovals":20,"org.easymock.tests.UsageVarargTest.allKinds":195,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":273,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":222,"org.easymock.samples.BasicClassMockTest.testPrintContent":346,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":177,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":105,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":142,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":33,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":201,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":480,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":422,"org.easymock.tests2.UsageConstraintsTest.greaterThan":55,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":228,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":398,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":423,"org.easymock.samples.ExampleTest.voteForRemoval":17,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":399,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":101,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":182,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":394,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":84,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":370,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":481,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":442,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":116,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":383,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":196,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":29,"org.easymock.tests2.CaptureTest.testCaptureFirst":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":441,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":117,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":96,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":282,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":158,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":103,"org.easymock.tests2.CaptureTest.testCapture2_2446744":11,"org.easymock.tests2.UsageTest.moreThanOneArgument":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":452,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":413,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":194,"org.easymock.tests.GenericTest.testBridgedEquals":465,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":271,"org.easymock.tests.UsageExpectAndReturnTest.longType":154,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":114,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":219,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":327,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":60,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":331,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":325,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":203,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":241,"org.easymock.tests.UsageCallCountTest.tooManyCalls":272,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":392,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":159,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":381,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":314,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":176,"org.easymock.tests.MockingTest.testNiceClassMocking":460,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":347,"org.easymock.tests.MockingTest.testClassMocking":458,"org.easymock.tests2.UsageConstraintsTest.testContains":50,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":265,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":147,"org.easymock.tests2.UsageConstraintsTest.testFind":41,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":258,"org.easymock.tests.MockTypeTest.fromEasyMockClass":180,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":150,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":246,"org.easymock.tests.UsageExpectAndReturnTest.object":161,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":360,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":380,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":122,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":477,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":189,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":335,"org.easymock.tests.UsageTest.exactCallCountByLastCall":218,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":440,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":461,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":260,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":473,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":341,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":185,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":167,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":278,"org.easymock.tests.MockClassControlTest.testHashCode":432,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":137,"org.easymock.tests2.EasyMockSupportTest.testVerify":126,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":261,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":276,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":287,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":132,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":97,"org.easymock.tests.UsageVarargTest.varargCharAccepted":188,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":418,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":106,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":456,"org.easymock.tests2.UsageTest.openCallCountByLastCall":90,"org.easymock.tests.DefaultClassInstantiatorTest.object":184,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":125,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":286,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":388,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":316,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":174,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":379,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":136,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":431,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":397,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":315,"org.easymock.tests.CapturesMatcherTest.test":13,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":168,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":240,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":430,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":355,"org.easymock.tests2.UsageTest.resumeIfFailure":95,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":416,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":199,"org.easymock.tests2.StubTest.stubWithReturnValue":36,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":342,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":160,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":61,"org.easymock.tests2.SerializationTest.testAllMockedMethod":338,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":208,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":469,"org.easymock.samples.SupportTest.voteForRemovals":24,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":463,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":404,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":321,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":339,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":209,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":70,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":462,"org.easymock.tests.UsageExpectAndThrowTest.object":319,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":58,"org.easymock.tests2.DelegateToTest.testWrongClass":32,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":329,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":330,"org.easymock.samples.ConstructorCalledMockTest.testTax":485,"org.easymock.tests.UsageStrictMockTest.range":251,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":65,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":121,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":67,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":320,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":363,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":216,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":382,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":232,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":471,"org.easymock.tests2.CaptureTest.testCaptureNone":26,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":285,"org.easymock.tests.UsageUnorderedTest.message":179,"org.easymock.tests.UsageVerifyTest.twoReturns":275,"org.easymock.tests.UsageVarargTest.varargByteAccepted":193,"org.easymock.tests2.ThreadingTest.testThreadSafe":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":389,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":269,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":336,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":345,"org.easymock.tests2.CaptureTest.testCapture_2617107":2,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":470,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":291,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":454,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":307,"org.easymock.tests2.UsageConstraintsTest.any":48,"org.easymock.tests2.StubTest.stub":35,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":299,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":242,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":455,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":198,"org.easymock.tests.UsageExpectAndThrowTest.longType":312,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":421,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":298,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":108,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":140,"org.easymock.tests2.SerializationTest.testClass":27,"org.easymock.tests.LimitationsTest.mockNativeMethod":365,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":464,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":170,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":77,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":111,"org.easymock.tests2.NameTest.nameForMocksControl":130,"org.easymock.tests2.MockedExceptionTest.testMockedException":146,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":384,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":215,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":415,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":313,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":368,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":98,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":364,"org.easymock.tests.MockingTest.testNicePartialClassMocking":367,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":359,"org.easymock.tests2.CaptureTest.testCaptureLast":7,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":75,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":290,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":45,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":351,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":59,"org.easymock.tests.MockingTest.testTwoMocks":459,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":378,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":151,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":317,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":93,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":63,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":482,"org.easymock.samples.ExampleTest.removeNonExistingDocument":21,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":81,"org.easymock.tests.UsageStrictMockTest.differentMethods":252,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":296,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":138,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":419,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":102,"org.easymock.tests2.MockBuilderTest.testCreateMockString":414,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":202,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":385,"org.easymock.tests.UsageExpectAndThrowTest.floatType":311,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":54,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":72,"org.easymock.tests.UsageVerifyTest.twoThrows":274,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":277,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":354,"org.easymock.samples.ExampleTest.voteAgainstRemoval":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":446,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":283,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":361,"org.easymock.tests.LimitationsTest.privateConstructor":425,"org.easymock.tests2.UsageConstraintsTest.testNotNull":62,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":178,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":145,"org.easymock.tests2.UsageTest.defaultResetToNice":92,"org.easymock.samples.ExampleTest.voteAgainstRemovals":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":447,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":166,"org.easymock.tests.UsageVarargTest.differentLength":190,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":76,"org.easymock.tests2.CallbackTest.callback":131,"org.easymock.tests2.UsageConstraintsTest.equals":375,"org.easymock.tests.UsageTest.openCallCountByLastCall":214,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":37,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":306,"org.easymock.tests.UsageCallCountTest.tooFewCalls":267,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":349,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":234,"org.easymock.tests.UsageThrowableTest.throwCheckedException":175,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":472,"org.easymock.tests.MockingTest.testStrictClassMocking":457,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":245,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":350,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":80,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":348,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":301,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":68,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":74,"org.easymock.tests.ObjectMethodsTest.testHashCode":334,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":374,"org.easymock.tests2.NameTest.nameForNiceMock":129,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":104,"org.easymock.tests2.DependencyTest.testInterfaceMocking":112,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":478,"org.easymock.samples.ExampleTest.addDocument":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":390,"org.easymock.tests2.DelegateToTest.testStubDelegate":31,"org.easymock.tests2.AnswerTest.stubAnswer":73,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":249,"org.easymock.tests.UsageVarargTest.varargLongAccepted":192,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":444,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":169,"org.easymock.tests.UsageExpectAndReturnTest.floatType":153,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":340,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":486,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":405,"org.easymock.tests.UsageThrowableTest.noUpperLimit":172,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":56,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":280,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":38,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":376,"org.easymock.tests2.SerializationTest.test":28,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":5,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":474,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":372,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":152,"org.easymock.tests2.UsageConstraintsTest.testSame":43,"org.easymock.samples.SupportTest.addDocument":23,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":386,"org.easymock.tests.GenericTest.testPackageScope":255,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":262,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":439,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":143,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":225,"org.easymock.tests2.NameTest.nameForMock":127,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":163,"org.easymock.tests2.UsageStrictMockTest.differentMethods":110,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":396,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":155,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":323,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":332,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":230,"org.easymock.tests2.MockedExceptionTest.testRealException":148,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":183,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":449,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":66,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":448,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":107,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":303,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":305,"org.easymock.tests2.NameTest.nameForStrictMock":128,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":410,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":149,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":358,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":377,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":420,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":57,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":408,"org.easymock.tests2.UsageStrictMockTest.range":109,"org.easymock.tests2.UsageConstraintsTest.lessThan":64,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":139,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":479,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":443,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":115,"org.easymock.tests2.CaptureTest.testCaptureRightOne":9,"org.easymock.tests2.UsageConstraintsTest.testOr":44,"org.easymock.tests.UsageRangeTest.combination":227,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":356,"org.easymock.tests.UsageTest.wrongArguments":213,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":428,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":156,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":436,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":164,"org.easymock.tests.UsageVarargTest.varargShortAccepted":191,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":373,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":270,"org.easymock.tests2.UsageConstraintsTest.cmpTo":49,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":71,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":438,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":91,"org.easymock.tests2.CaptureTest.testCaptureFromStub":10,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":293,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":409,"org.easymock.tests.UsageTest.unexpectedCallWithArray":212,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":248,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":268,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":165,"org.easymock.tests2.CaptureTest.testCapture":475,"org.easymock.tests2.UsageConstraintsTest.constraints":39,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":250,"org.easymock.samples.ExampleTest.addAndChangeDocument":22,"org.easymock.tests.UsageStrictMockTest.testVerify":254,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":25,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":247,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":220,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":6,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":237,"org.easymock.tests.LimitationsTest.abstractClass":424,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":157,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":238,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":281,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":186,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":120}}]
