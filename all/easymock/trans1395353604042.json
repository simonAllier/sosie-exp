[{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:417","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return org.easymock.internal.AndroidSupport.boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:159","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"failures":[1],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1080","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:46","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:57","sourceCode":"try {\n    final org.easymock.internal.Result org.easymock.internal.Result = org.easymock.internal.IMocksBehavior.addActual(org.easymock.internal.Invocation);\n    try {\n        return org.easymock.internal.Result.answer();\n    } catch (final java.lang.Throwable java.lang.Throwable) {\n        if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n            throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n        } \n        throw java.lang.Throwable;\n    }\n} finally {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation();\n}","type":"CtTryImpl"},"failures":[41,42,43,44,45,46,47,48,49,2,50,3,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,8,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,13,117,118,119,120,121,122,14,123,124,15,125,126,127,128,129,130,131,132,133,17,134,135,18,136,19,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,24,29,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[325],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:200","sourceCode":"throw new java.lang.RuntimeException(\"Fail to find constructor for param types\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[326],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"e":"e"}},{"transplant":{"position":"org.easymock.internal.matchers.And:54","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[152,153,159,160,327,328,329,330,200,331,332,333,255,256,257,260,261],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[41,42,43,44,45,46,47,48,49,2,50,3,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,8,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,13,117,118,119,120,121,122,14,123,124,15,125,126,127,128,129,130,131,132,133,17,134,135,18,136,19,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,24,29,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,334,334,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[173,174,175],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[48,49,335,336,337,338],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[339,340,341],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:44","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n        if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n            org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n        } \n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"failures":[342],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[173,174,175,343],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[15],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplant":{"position":"org.easymock.internal.Invocation:44","sourceCode":"new java.util.ArrayList<org.easymock.internal.matchers.Captures<?>>(0)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:62","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>, java.lang.Integer.java.lang.Integer)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:417","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"transplant":{"position":"org.easymock.EasyMock:1878","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[13,14,15,171,344,345,346,347,240,241,242],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1915","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<T>(org.easymock.Capture<T>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"captured"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[173,174,175,343],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[127,128],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"type"}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[348],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":74,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":254,"org.easymock.tests2.UsageTest.argumentsOrdered":160,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":138,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":229,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":25,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":155,"org.easymock.tests2.StubTest.stubWithReturnValue":186,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":215,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":94,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":3,"org.easymock.tests2.SerializationTest.testAllMockedMethod":175,"org.easymock.tests2.DelegateToTest.testReturnException":180,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":227,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":326,"org.easymock.tests.MockingTest.testPartialClassMocking":240,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":329,"org.easymock.samples.SupportTest.voteForRemovals":52,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":0,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":33,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":304,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":16,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":343,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":340,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":292,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":177,"org.easymock.tests.UsageExpectAndThrowTest.object":302,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":91,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":56,"org.easymock.tests2.DelegateToTest.testWrongClass":182,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":285,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":286,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":80,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":280,"org.easymock.tests2.UsageTest.wrongArguments":153,"org.easymock.tests.UsageStrictMockTest.range":203,"org.easymock.samples.ConstructorCalledMockTest.testTax":48,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":12,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":189,"org.easymock.samples.ExampleTest.answerVsDelegate":42,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":136,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":29,"org.easymock.tests2.UsageConstraintsTest.testNull":76,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":303,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":118,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":137,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":145,"org.easymock.tests2.CaptureTest.testPrimitive":101,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":284,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":311,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":260,"org.easymock.tests.UsageTest.moreThanOneArgument":255,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":117,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":188,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":331,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":195,"org.easymock.tests2.CaptureTest.testCaptureNone":106,"org.easymock.tests.UsageUnorderedTest.message":312,"org.easymock.tests.UsageVerifyTest.twoReturns":237,"org.easymock.tests.UsageVarargTest.varargByteAccepted":271,"org.easymock.tests2.ThreadingTest.testThreadSafe":126,"org.easymock.tests.UsageTest.argumentsOrdered":261,"org.easymock.tests.UsageVarargTest.varargIntAccepted":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":32,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":250,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":53,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":339,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":274,"org.easymock.tests2.CaptureTest.testCapture_2617107":100,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":330,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":141,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":283,"org.easymock.tests2.UsageConstraintsTest.any":81,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":144,"org.easymock.tests2.StubTest.stub":185,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":278,"org.easymock.tests.UsageExpectAndThrowTest.longType":295,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":228,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":63,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":24,"org.easymock.tests2.SerializationTest.testClass":173,"org.easymock.tests.LimitationsTest.mockNativeMethod":246,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":8,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":225,"org.easymock.tests2.AnswerTest.answer":112,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":70,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":6,"org.easymock.tests2.CaptureTest.testAnd":98,"org.easymock.tests2.UsageTest.strictResetToDefault":151,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":66,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":14,"org.easymock.tests2.NameTest.nameForMocksControl":37,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":7,"org.easymock.tests2.MockedExceptionTest.testMockedException":164,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":194,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":233,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":134,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":259,"org.easymock.tests2.DelegateToTest.testDelegate":183,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":296,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":242,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":58,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":116,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":146,"org.easymock.tests.MockingTest.testNicePartialClassMocking":241,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":307,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":120,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":4,"org.easymock.tests2.CaptureTest.testCaptureLast":105,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":230,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":79,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":172,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":291,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":92,"org.easymock.tests2.CaptureTest.testCapture1_2446744":102,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":344,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":206,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":305,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":300,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":68,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":159,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":96,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":341,"org.easymock.tests.UsageThrowableTest.throwError":313,"org.easymock.tests.UsageStrictMockTest.differentMethods":204,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":10,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":22,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":38,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":128,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":28,"org.easymock.tests2.MockBuilderTest.testCreateMockString":149,"org.easymock.tests.UsageExpectAndThrowTest.floatType":294,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":30,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":87,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":113,"org.easymock.tests.UsageVerifyTest.twoThrows":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":178,"org.easymock.samples.PartialClassMockTest.testGetArea":50,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":275,"org.easymock.samples.ExampleTest.voteAgainstRemoval":44,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":124,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":31,"org.easymock.tests2.UsageTest.niceToStrict":154,"org.easymock.tests2.UsageConstraintsTest.testNotNull":95,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":320,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":163,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":143,"org.easymock.tests2.MockBuilderTest.testCreateMock":147,"org.easymock.tests2.UsageTest.defaultResetToNice":158,"org.easymock.samples.ExampleTest.voteAgainstRemovals":41,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":221,"org.easymock.tests.UsageVarargTest.differentLength":268,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":5,"org.easymock.tests2.CallbackTest.callback":184,"org.easymock.tests2.UsageConstraintsTest.equals":342,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":335,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":11,"org.easymock.tests.UsageTest.openCallCountByLastCall":258,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":327,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":301,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":135,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":71,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":282,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":187,"org.easymock.tests.UsageCallCountTest.tooFewCalls":248,"org.easymock.tests.UsageOverloadedMethodTest.overloading":244,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":323,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":85,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":243,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":217,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":169,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":84,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":1,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":107,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":190,"org.easymock.tests.UsageThrowableTest.throwCheckedException":317,"org.easymock.tests2.EasyMockSupportClassTest.testAll":176,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":192,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":332,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":328,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":309,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":289,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":69,"org.easymock.tests2.CaptureTest.testCaptureAll":99,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":239,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":171,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":9,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":168,"org.easymock.tests2.UsageConstraintsTest.testMatches":86,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":170,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":115,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":196,"org.easymock.samples.ExampleTest.voteForRemovals":46,"org.easymock.tests2.NameTest.nameForNiceMock":36,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":130,"org.easymock.tests.UsageVarargTest.allKinds":273,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":235,"org.easymock.tests2.DependencyTest.testInterfaceMocking":55,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":290,"org.easymock.samples.BasicClassMockTest.testPrintContent":54,"org.easymock.samples.ExampleTest.addDocument":45,"org.easymock.tests2.DelegateToTest.testStubDelegate":181,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":319,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":60,"org.easymock.tests2.AnswerTest.stubAnswer":114,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":231,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":26,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":201,"org.easymock.tests2.UsageConstraintsTest.greaterThan":88,"org.easymock.tests.UsageVarargTest.varargLongAccepted":270,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":15,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":205,"org.easymock.samples.ExampleTest.voteForRemoval":43,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":127,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":224,"org.easymock.tests.UsageExpectAndReturnTest.floatType":208,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":39,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":121,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":125,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":49,"org.easymock.tests.UsageThrowableTest.noUpperLimit":314,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":89,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":279,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":72,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":150,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":103,"org.easymock.tests2.SerializationTest.test":174,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":325,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":133,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":315,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":207,"org.easymock.tests2.UsageConstraintsTest.testSame":77,"org.easymock.samples.SupportTest.addDocument":51,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":226,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":348,"org.easymock.tests2.CaptureTest.testCaptureFirst":111,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":17,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":162,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":324,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":213,"org.easymock.tests.GenericTest.testPackageScope":191,"org.easymock.tests2.CaptureTest.testCapture2_2446744":110,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":129,"org.easymock.tests2.UsageTest.moreThanOneArgument":152,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":148,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":27,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":272,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":252,"org.easymock.tests2.NameTest.nameForMock":34,"org.easymock.tests.UsageExpectAndReturnTest.longType":209,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":287,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":131,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":310,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":218,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":93,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":338,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":308,"org.easymock.tests2.UsageStrictMockTest.differentMethods":65,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":193,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":210,"org.easymock.tests.UsageCallCountTest.tooManyCalls":253,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":306,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":234,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":247,"org.easymock.tests2.MockedExceptionTest.testRealException":166,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":214,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":297,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":62,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":318,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":281,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":167,"org.easymock.tests2.UsageConstraintsTest.testContains":83,"org.easymock.tests2.NameTest.nameForStrictMock":35,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":165,"org.easymock.tests2.UsageConstraintsTest.testFind":75,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":245,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":57,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":119,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":198,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":59,"org.easymock.tests.UsageExpectAndReturnTest.object":216,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":90,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":122,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":142,"org.easymock.tests2.UsageStrictMockTest.range":64,"org.easymock.tests2.UsageConstraintsTest.lessThan":97,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":19,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":267,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":23,"org.easymock.tests.UsageTest.exactCallCountByLastCall":262,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":238,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":346,"org.easymock.tests2.CaptureTest.testCaptureRightOne":108,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":333,"org.easymock.tests2.UsageConstraintsTest.testOr":78,"org.easymock.tests.UsageRangeTest.combination":232,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":263,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":222,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":13,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":322,"org.easymock.tests.UsageTest.wrongArguments":257,"org.easymock.tests2.MockBuilderTest.testWithConstructor":336,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":345,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":211,"org.easymock.tests2.EasyMockSupportTest.testVerify":140,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":347,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":321,"org.easymock.tests.UsageVarargTest.varargShortAccepted":269,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":251,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":67,"org.easymock.tests2.UsageConstraintsTest.cmpTo":82,"org.easymock.tests.UsageVarargTest.varargCharAccepted":266,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":61,"org.easymock.tests2.UsageTest.openCallCountByLastCall":156,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":157,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":139,"org.easymock.tests2.CaptureTest.testCaptureFromStub":109,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":40,"org.easymock.tests.UsageTest.unexpectedCallWithArray":256,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":299,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":316,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":200,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":249,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":337,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":20,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":220,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":202,"org.easymock.tests2.UsageConstraintsTest.constraints":73,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":123,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":298,"org.easymock.samples.ExampleTest.addAndChangeDocument":47,"org.easymock.tests.CapturesMatcherTest.test":334,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":223,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":2,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":179,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":288,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":104,"org.easymock.tests2.UsageTest.resumeIfFailure":161,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":276,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":212,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":277,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":264,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":18}}]
