[{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[0,1],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[2,3,4,5,6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:62","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>()","type":"CtAssignmentImpl"},"failures":[7,8,9,10,2,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:229","failures":[73,74,75,76,77],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:54","sourceCode":"return java.lang.Object[] == null ? java.lang.Object[] : java.lang.Object[]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:130","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.Invocation.NO_ARGS":"methodArgs","args":"methodArgs"}},{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[78],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[79,80,10,2,81,82,83,84,12,85,86,87,88,17,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:171","sourceCode":"net.sf.cglib.proxy.Enhancer.setCallbackType(org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.getClass())","type":"CtInvocationImpl"},"failures":[123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,0,145,146,147,1,148,149,150,151,152,153,154,155,155,156,156,157,158,159,160,161,162,73,163,164,165,166,167,168,169,170,74,171,172,173,174,175,176,177,178,78,179,180,181,182,25,183,184,185,75,186,187,188,76,189,190,191,192,193,194,77,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,118,119,120,215,216],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[217,218,219,220,221,222,223,224,225,226,227,228,229,230,7,2,231,232,86,233,234,235,236,237,238,239,240,241,242,135,87,243,244,245,140,141,142,91,92,94,99,104,246,18,247,248,109,249,110,111,112,113,114,115,150,151,154,250,251,252,253,254,255,256,257,157,158,159,258,259,116,260,261,262,263,264,265,266,165,167,168,172,173,174,175,267,176,177,178,78,268,179,180,181,25,186,269,192,77,204,210,270,271,272,213,27,273,120,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,32,37,38,40,41,43,46,49,50,51,52,53,291,292,215,293,216,57,58,59,60,62,63,64,65,66,67,70],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[294],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[295,296],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[147,297,298],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.internal.matchers.Equals:37","failures":[79,299,300,80,221,222,223,224,225,226,227,228,229,230,7,8,9,10,2,11,81,82,83,84,12,85,231,232,86,301,302,234,235,303,236,304,305,306,307,237,308,309,310,311,238,312,313,314,315,316,87,243,13,14,15,317,318,319,320,321,244,245,88,16,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,246,19,247,322,323,248,109,249,110,111,112,113,114,115,20,21,22,23,24,151,250,251,252,253,254,255,256,257,324,157,158,258,259,116,260,325,262,263,326,117,327,266,165,167,168,78,180,186,269,270,271,272,295,328,329,330,273,274,275,276,277,278,279,280,281,282,283,284,331,286,332,287,294,6,122,288,28,289,333,334,290,32,34,36,37,54,291,292,215,293,57,58,64,65,67,70],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:48","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"toString\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:57","sourceCode":"try {\n    final org.easymock.internal.Result org.easymock.internal.Result = org.easymock.internal.IMocksBehavior.addActual(org.easymock.internal.Invocation);\n    try {\n        return org.easymock.internal.Result.answer();\n    } catch (final java.lang.Throwable java.lang.Throwable) {\n        if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n            throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n        } \n        throw java.lang.Throwable;\n    }\n} finally {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation();\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[187],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[335,332],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[336],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[0,1],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:75","sourceCode":"return java.io.Serializable.java.io.Serializable.isAssignableFrom(java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[144,0,145,146,1,148],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"failures":[337,338],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:155","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Class<?>.getDeclaredField(\"serialVersionUID\");\n    final int int = (java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int);\n    if (((java.lang.reflect.Field.getModifiers()) & int) == int) {\n        java.lang.reflect.Field.setAccessible(true);\n        return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null));\n    } \n} catch (final java.lang.NoSuchFieldException java.lang.NoSuchFieldException) {\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\");\n}","type":"CtTryImpl"},"failures":[297],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"failures":[337,338],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:219","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[171,76],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:193","sourceCode":"final java.lang.Number java.lang.Number = ((java.lang.Number)(java.lang.Object))","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1507","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:119","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"failures":[166,182],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":32,"org.easymock.tests2.UsageTest.argumentsOrdered":265,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":79,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":283,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":84,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":263,"org.easymock.tests2.StubTest.stubWithReturnValue":122,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":307,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":259,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":53,"org.easymock.tests2.SerializationTest.testAllMockedMethod":216,"org.easymock.tests2.DelegateToTest.testReturnException":286,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":82,"org.easymock.tests.MockingTest.testPartialClassMocking":140,"org.easymock.samples.SupportTest.voteForRemovals":251,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":149,"org.easymock.tests.MockClassControlTest.testToString":127,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":76,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":198,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":89,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":77,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":4,"org.easymock.tests.UsageExpectAndThrowTest.object":99,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":292,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":50,"org.easymock.tests2.DelegateToTest.testWrongClass":287,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":14,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":15,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":38,"org.easymock.tests2.UsageTest.wrongArguments":261,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":8,"org.easymock.tests.UsageStrictMockTest.range":322,"org.easymock.samples.ConstructorCalledMockTest.testTax":155,"org.easymock.samples.ExampleTest.answerVsDelegate":253,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":124,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":172,"org.easymock.tests2.UsageConstraintsTest.testNull":34,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":100,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":179,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":282,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":132,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":167,"org.easymock.tests2.CaptureTest.testPrimitive":60,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":11,"org.easymock.tests.UsageTest.moreThanOneArgument":299,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":219,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":189,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":268,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":319,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":336,"org.easymock.tests2.CaptureTest.testCaptureNone":65,"org.easymock.tests.UsageUnorderedTest.message":13,"org.easymock.tests.UsageVerifyTest.twoReturns":243,"org.easymock.tests.UsageVarargTest.varargByteAccepted":229,"org.easymock.tests2.ThreadingTest.testThreadSafe":328,"org.easymock.tests.UsageTest.argumentsOrdered":220,"org.easymock.tests.UsageVarargTest.varargIntAccepted":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":205,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":240,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":157,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":3,"org.easymock.tests2.CaptureTest.testCapture_2617107":59,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":20,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":162,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":2,"org.easymock.tests2.UsageConstraintsTest.any":40,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":166,"org.easymock.tests2.StubTest.stub":6,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":24,"org.easymock.tests.UsageExpectAndThrowTest.longType":92,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":83,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":147,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":289,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":270,"org.easymock.tests2.SerializationTest.testClass":215,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":269,"org.easymock.tests.LimitationsTest.mockNativeMethod":135,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":315,"org.easymock.tests2.AnswerTest.answer":271,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":152,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":39,"org.easymock.tests2.CaptureTest.testAnd":57,"org.easymock.tests2.UsageTest.strictResetToDefault":260,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":290,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":185,"org.easymock.tests2.MockedExceptionTest.testMockedException":119,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":318,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":278,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":194,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":80,"org.easymock.tests2.DelegateToTest.testDelegate":294,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":93,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":142,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":178,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":168,"org.easymock.tests.MockingTest.testNicePartialClassMocking":141,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":104,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":181,"org.easymock.tests.LimitationsTest.mockFinalMethod":136,"org.easymock.tests2.CaptureTest.testCaptureLast":64,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":12,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":217,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":37,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":177,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":51,"org.easymock.tests.MockingTest.testTwoMocks":139,"org.easymock.tests2.CaptureTest.testCapture1_2446744":61,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":301,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":102,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":97,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":264,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":55,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":5,"org.easymock.tests.UsageThrowableTest.throwError":109,"org.easymock.tests.UsageStrictMockTest.differentMethods":323,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":145,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":330,"org.easymock.tests2.MockBuilderTest.testCreateMockString":171,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":125,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":195,"org.easymock.tests.UsageExpectAndThrowTest.floatType":91,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":191,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":272,"org.easymock.tests.UsageVerifyTest.twoThrows":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":204,"org.easymock.samples.PartialClassMockTest.testGetArea":159,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":21,"org.easymock.samples.ExampleTest.voteAgainstRemoval":255,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":186,"org.easymock.tests2.UsageTest.niceToStrict":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":199,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":90,"org.easymock.tests.LimitationsTest.privateConstructor":134,"org.easymock.tests2.UsageConstraintsTest.testNotNull":54,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":115,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":118,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":165,"org.easymock.tests2.MockBuilderTest.testCreateMock":170,"org.easymock.samples.ExampleTest.voteAgainstRemovals":252,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":207,"org.easymock.tests2.CallbackTest.callback":331,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":183,"org.easymock.tests.UsageTest.openCallCountByLastCall":300,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":98,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":279,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":29,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":10,"org.easymock.tests.UsageOverloadedMethodTest.overloading":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":203,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":86,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":44,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":308,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":244,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":175,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":297,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":43,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":66,"org.easymock.tests.UsageThrowableTest.throwCheckedException":112,"org.easymock.tests2.EasyMockSupportClassTest.testAll":192,"org.easymock.tests.MockClassControlTest.testEquals":131,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":151,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":106,"org.easymock.tests.MockingTest.testStrictClassMocking":137,"org.easymock.tests2.CaptureTest.testCaptureAll":58,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":17,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":176,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":174,"org.easymock.tests2.UsageConstraintsTest.testMatches":45,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":267,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":296,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":320,"org.easymock.samples.ExampleTest.voteForRemovals":257,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":273,"org.easymock.tests.UsageVarargTest.allKinds":7,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":316,"org.easymock.tests2.DependencyTest.testInterfaceMocking":291,"org.easymock.samples.BasicClassMockTest.testPrintContent":158,"org.easymock.samples.ExampleTest.addDocument":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":206,"org.easymock.tests2.DelegateToTest.testStubDelegate":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":211,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":114,"org.easymock.tests2.AnswerTest.stubAnswer":295,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":85,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":19,"org.easymock.tests2.UsageConstraintsTest.greaterThan":47,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":193,"org.easymock.tests.UsageVarargTest.varargLongAccepted":228,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":187,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":248,"org.easymock.samples.ExampleTest.voteForRemoval":254,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":148,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":329,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":188,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":314,"org.easymock.tests.UsageExpectAndReturnTest.floatType":234,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":213,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":182,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":156,"org.easymock.tests.UsageThrowableTest.noUpperLimit":249,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":48,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":30,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":116,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":154,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":160,"org.easymock.tests2.SerializationTest.test":293,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":62,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":169,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":298,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":276,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":0,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":110,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":302,"org.easymock.tests2.UsageConstraintsTest.testSame":35,"org.easymock.samples.SupportTest.addDocument":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":190,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":81,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":335,"org.easymock.tests2.CaptureTest.testCaptureFirst":70,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":277,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":266,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":196,"org.easymock.tests.GenericTest.testPackageScope":150,"org.easymock.tests2.UsageTest.moreThanOneArgument":325,"org.easymock.tests2.CaptureTest.testCapture2_2446744":69,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":27,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":74,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":230,"org.easymock.tests.GenericTest.testBridgedEquals":153,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":241,"org.easymock.tests.UsageExpectAndReturnTest.longType":235,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":274,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":338,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":309,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":107,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":52,"org.easymock.tests2.UsageStrictMockTest.differentMethods":334,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":105,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":317,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":184,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":303,"org.easymock.tests.UsageCallCountTest.tooManyCalls":242,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":208,"org.easymock.tests2.MockedExceptionTest.testRealException":121,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":306,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":94,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":28,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":9,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":113,"org.easymock.tests.MockingTest.testNiceClassMocking":143,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":173,"org.easymock.tests.MockingTest.testClassMocking":138,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":337,"org.easymock.tests2.UsageConstraintsTest.testContains":42,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":120,"org.easymock.tests2.UsageConstraintsTest.testFind":33,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":88,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":164,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":71,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":180,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":72,"org.easymock.tests.UsageExpectAndReturnTest.object":237,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":161,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":49,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":146,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":25,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":73,"org.easymock.tests2.UsageStrictMockTest.range":333,"org.easymock.tests2.UsageConstraintsTest.lessThan":56,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":281,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":226,"org.easymock.tests.UsageTest.exactCallCountByLastCall":221,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":16,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":200,"org.easymock.tests2.CaptureTest.testCaptureRightOne":67,"org.easymock.tests2.UsageConstraintsTest.testOr":36,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":214,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":312,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":222,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":78,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":232,"org.easymock.tests.UsageTest.wrongArguments":218,"org.easymock.tests.MockClassControlTest.testHashCode":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":197,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":126,"org.easymock.tests2.EasyMockSupportTest.testVerify":285,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":236,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":201,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":231,"org.easymock.tests.UsageVarargTest.varargShortAccepted":227,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":1,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":26,"org.easymock.tests2.UsageConstraintsTest.cmpTo":41,"org.easymock.tests.UsageVarargTest.varargCharAccepted":225,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":288,"org.easymock.tests2.UsageTest.openCallCountByLastCall":326,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":117,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":284,"org.easymock.tests.DefaultClassInstantiatorTest.object":144,"org.easymock.tests2.CaptureTest.testCaptureFromStub":68,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":202,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":96,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":18,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":111,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":239,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":311,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":247,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":75,"org.easymock.tests2.UsageConstraintsTest.constraints":31,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":129,"org.easymock.samples.ExampleTest.addAndChangeDocument":324,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":95,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":313,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":258,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":210,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":128,"org.easymock.tests2.UsageTest.resumeIfFailure":327,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":63,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":22,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":304,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":123,"org.easymock.tests.LimitationsTest.abstractClass":133,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":233,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":23,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":280,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":223}}]
