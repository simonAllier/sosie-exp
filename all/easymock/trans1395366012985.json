[{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:123","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1595","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:127","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[1,2,3],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stream":"stream"}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:103","sourceCode":"final java.lang.StringBuffer java.lang.StringBuffer = new java.lang.StringBuffer()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[4,5,6,7,8,9],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,6,42,43,44,45,46,47,48,49,0,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,7,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,1,2,3,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:33","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>.getName(), java.lang.Boolean.java.lang.Class<java.lang.Boolean>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1361","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"failures":[237,243,275,277,285],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:62","sourceCode":"throw new java.lang.RuntimeException(java.lang.IllegalAccessException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:75","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.Capture:107","sourceCode":"break","type":"CtBreakImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:305","sourceCode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","type":"CtReturnImpl"},"failures":[10,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,298,37,38,39,40,41,42,43,44,45,46,47,48,49,0,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,7,72,73,74,75,76,299,77,78,79,80,81,82,83,300,88,89,90,301,92,97,99,100,101,102,103,104,302,109,110,111,112,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,303,304,158,305,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,306,307,308,309,202,203,204,205,1,2,3,210,211,212,213,215,216,218,219,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,310,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,269,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,288,289,290,291,292,293,296],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[243],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[311,312],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:136","failures":[11,11,12,12,15,24,25,313,314,315,316,317,48,49,0,318,92,319,116,117,320,321,322,323,141,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,201,342,1,3,343,344,345,210,346,347,211,348,349,350,351,352,353,354,355,356,212,357,358,359,360,361,213,362,363,214,215,364,365,216,217,218,219,366,220,221,222,223,224,225,226,228,229,262,263,265,266,267,268,269,367,368,270,271,272,273,369,370,371,372,373,374,294,295,296],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[375],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:126","sourceCode":"if (java.lang.Object != java.lang.Object) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Null:35","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"otherArgument":"actual","myArgument":"actual"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[243],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[204,205],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:88","sourceCode":"java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"result","candidateMethods":"candidateMethods"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[240,310,254,259],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,376,23,24,25,377,378,379,26,27,28,380,29,30,31,32,33,34,35,36,381,298,37,38,39,40,41,6,42,43,44,45,46,47,382,383,384,313,385,386,387,388,314,389,390,315,316,317,48,49,391,0,392,393,318,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,7,72,73,74,75,76,299,394,395,375,396,397,398,77,78,79,80,81,82,83,300,399,400,401,402,403,404,405,406,407,408,409,84,85,86,87,88,410,89,90,411,301,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,412,413,414,302,415,109,110,111,112,113,114,115,319,116,117,320,321,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,322,323,141,324,142,143,144,325,326,327,328,329,330,331,332,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,311,431,432,433,434,435,436,312,437,333,334,335,336,337,338,339,438,439,440,441,442,443,145,146,147,148,149,150,151,152,444,303,304,445,446,153,154,155,156,157,158,305,159,160,161,447,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,340,341,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,342,448,306,307,308,309,202,449,450,203,204,205,206,207,208,209,1,2,3,343,344,345,210,346,347,211,348,349,350,351,352,353,354,355,356,212,357,358,359,360,361,213,362,363,214,215,364,365,216,217,218,219,366,220,221,222,223,224,225,226,451,227,228,229,452,230,231,232,233,234,235,236,237,238,453,239,240,241,242,243,244,310,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,454,269,367,368,270,271,272,273,369,370,455,456,457,458,459,274,460,461,462,463,464,465,371,374,466,467,275,276,277,278,279,280,281,282,283,284,285,286,287,288,468,469,470,471,472,289,473,474,475,476,477,478,479,290,291,292,480,293,294,295,296,297],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:50","sourceCode":"if (int != int) {\n    throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:113","sourceCode":"if (java.lang.Class<?>[][int].isPrimitive()) {\n    java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n} else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"length":"i","initArgs":"methodArgs","paramTypes":"methodTypes"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[334,338],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[40,51,57,63,67,69,122,128,134,138,140,144,433,304,279,287],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":238,"org.easymock.tests2.UsageTest.argumentsOrdered":191,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":40,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":175,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":460,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":426,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":186,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":16,"org.easymock.tests2.DelegateToTest.testReturnException":290,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":94,"org.easymock.tests.MockingTest.testPartialClassMocking":48,"org.easymock.tests.MockClassControlTest.testToString":327,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":448,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":397,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":434,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":351,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":121,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":211,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":179,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":244,"org.easymock.tests2.UsageTest.wrongArguments":184,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":79,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":478,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":86,"org.easymock.samples.ExampleTest.answerVsDelegate":18,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":314,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":393,"org.easymock.tests2.UsageConstraintsTest.testNull":240,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":265,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":174,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":332,"org.easymock.tests2.CaptureTest.testPrimitive":278,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":83,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":140,"org.easymock.tests.UsageTest.moreThanOneArgument":41,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":264,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":155,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":444,"org.easymock.tests.UsageTest.argumentsOrdered":46,"org.easymock.tests.UsageVarargTest.varargIntAccepted":28,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":311,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":99,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":214,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":464,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":373,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":217,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":418,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":103,"org.easymock.tests.ReplayStateInvalidUsageTest.times":406,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":289,"org.easymock.tests2.DependencyTest.testClassMocking":340,"org.easymock.tests2.AnswerTest.answer":202,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":432,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":209,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":386,"org.easymock.tests2.CaptureTest.testAnd":275,"org.easymock.tests2.UsageTest.strictResetToDefault":182,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":270,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":154,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":169,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":159,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":446,"org.easymock.tests2.DelegateToTest.testDelegate":293,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":136,"org.easymock.tests.LimitationsTest.mockFinalMethod":324,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":97,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":108,"org.easymock.tests2.DependencyTest.testClassMockingSupport":341,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":382,"org.easymock.tests2.CaptureTest.testCapture1_2446744":279,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":454,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":134,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":207,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":400,"org.easymock.tests.UsageThrowableTest.throwError":145,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":388,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":465,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":363,"org.easymock.samples.PartialClassMockTest.testGetArea":15,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":401,"org.easymock.tests.MockingTest.testInterfaceMocking":391,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":100,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":395,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":443,"org.easymock.tests2.UsageTest.niceToStrict":185,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":122,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":352,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":416,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":216,"org.easymock.tests2.MockBuilderTest.testCreateMock":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":359,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":475,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":130,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":8,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":170,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":385,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":379,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":302,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":84,"org.easymock.tests.UsageOverloadedMethodTest.overloading":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":361,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":90,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":249,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":118,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":61,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":248,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":284,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":380,"org.easymock.tests2.EasyMockSupportClassTest.testAll":210,"org.easymock.tests.MockClassControlTest.testEquals":331,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":117,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":138,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":106,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":208,"org.easymock.tests2.CaptureTest.testCaptureAll":276,"org.easymock.tests.MockNameTest.defaultName":381,"org.easymock.tests2.UsageConstraintsTest.testMatches":250,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":156,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":300,"org.easymock.samples.ExampleTest.voteForRemovals":22,"org.easymock.tests.UsageVarargTest.allKinds":36,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":37,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":107,"org.easymock.samples.BasicClassMockTest.testPrintContent":25,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":151,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":194,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":480,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":461,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":98,"org.easymock.tests2.UsageConstraintsTest.greaterThan":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":346,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":305,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":273,"org.easymock.samples.ExampleTest.voteForRemoval":19,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":339,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":231,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":369,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":389,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":268,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":181,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":92,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":366,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":423,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":167,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":344,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":93,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":479,"org.easymock.tests2.CaptureTest.testCaptureFirst":288,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":422,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":168,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":193,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":91,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":57,"org.easymock.tests2.UsageTest.moreThanOneArgument":183,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":233,"org.easymock.tests2.CaptureTest.testCapture2_2446744":287,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":433,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":221,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":35,"org.easymock.tests.GenericTest.testBridgedEquals":321,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":114,"org.easymock.tests.UsageExpectAndReturnTest.longType":53,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":165,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":104,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":139,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":257,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":298,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":137,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":413,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":153,"org.easymock.tests.UsageCallCountTest.tooManyCalls":115,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":360,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":58,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":477,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":126,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":150,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":224,"org.easymock.tests.MockingTest.testNiceClassMocking":318,"org.easymock.tests.MockingTest.testClassMocking":316,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":415,"org.easymock.tests2.UsageConstraintsTest.testContains":247,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":296,"org.easymock.tests2.UsageConstraintsTest.testFind":239,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":120,"org.easymock.tests.MockTypeTest.fromEasyMockClass":387,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":162,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":70,"org.easymock.tests.UsageExpectAndReturnTest.object":60,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":269,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":476,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":173,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":30,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":441,"org.easymock.tests.UsageTest.exactCallCountByLastCall":47,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":77,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":421,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":396,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":303,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":342,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":26,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":66,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":89,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":456,"org.easymock.tests.MockClassControlTest.testHashCode":330,"org.easymock.tests2.EasyMockSupportTest.testVerify":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":354,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":304,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":88,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":378,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":206,"org.easymock.tests.UsageVarargTest.varargCharAccepted":29,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":195,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":437,"org.easymock.tests2.UsageTest.openCallCountByLastCall":187,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":176,"org.easymock.tests.DefaultClassInstantiatorTest.object":333,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":377,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":439,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":355,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":148,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":471,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":455,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":271,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":329,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":127,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":67,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":412,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":213,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":328,"org.easymock.tests2.UsageTest.resumeIfFailure":192,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":313,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":372,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":96,"org.easymock.tests2.StubTest.stubWithReturnValue":164,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":59,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":258,"org.easymock.tests2.SerializationTest.testAllMockedMethod":3,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":431,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":9,"org.easymock.samples.SupportTest.voteForRemovals":14,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":319,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":458,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":133,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":312,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":449,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":398,"org.easymock.tests.UsageExpectAndThrowTest.object":131,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":255,"org.easymock.tests2.DelegateToTest.testWrongClass":292,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":142,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":143,"org.easymock.samples.ConstructorCalledMockTest.testTax":11,"org.easymock.tests.UsageStrictMockTest.range":74,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":466,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":172,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":223,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":132,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":218,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":408,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":45,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":343,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":85,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":4,"org.easymock.tests2.CaptureTest.testCaptureNone":283,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":375,"org.easymock.tests.UsageUnorderedTest.message":144,"org.easymock.tests.UsageVerifyTest.twoReturns":39,"org.easymock.tests.UsageVarargTest.varargByteAccepted":34,"org.easymock.tests2.ThreadingTest.testThreadSafe":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":357,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":112,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":442,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":24,"org.easymock.tests2.CaptureTest.testCapture_2617107":277,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":384,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":435,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":82,"org.easymock.tests2.UsageConstraintsTest.any":245,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":405,"org.easymock.tests2.StubTest.stub":163,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":414,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":436,"org.easymock.tests.UsageExpectAndThrowTest.longType":124,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":95,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":337,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":404,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":197,"org.easymock.tests2.SerializationTest.testClass":1,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":274,"org.easymock.tests.LimitationsTest.mockNativeMethod":141,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":69,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":320,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":470,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":200,"org.easymock.tests2.NameTest.nameForMocksControl":309,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":472,"org.easymock.tests2.MockedExceptionTest.testMockedException":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":347,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":44,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":447,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":125,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":0,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":262,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":219,"org.easymock.tests.MockingTest.testNicePartialClassMocking":49,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":267,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":468,"org.easymock.tests2.CaptureTest.testCaptureLast":282,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":383,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":229,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":243,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":256,"org.easymock.tests.MockingTest.testTwoMocks":317,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":452,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":50,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":129,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":190,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":260,"org.easymock.samples.ExampleTest.removeNonExistingDocument":376,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":474,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":402,"org.easymock.tests.UsageStrictMockTest.differentMethods":75,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":457,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":335,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":232,"org.easymock.tests2.MockBuilderTest.testCreateMockString":222,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":325,"org.easymock.tests.UsageExpectAndThrowTest.floatType":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":348,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":345,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":203,"org.easymock.tests.UsageVerifyTest.twoThrows":38,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":410,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":212,"org.easymock.samples.ExampleTest.voteAgainstRemoval":20,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":427,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":394,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":272,"org.easymock.tests.LimitationsTest.privateConstructor":323,"org.easymock.tests2.UsageConstraintsTest.testNotNull":259,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":152,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":294,"org.easymock.tests2.UsageTest.defaultResetToNice":189,"org.easymock.samples.ExampleTest.voteAgainstRemovals":17,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":428,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":65,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":469,"org.easymock.tests.UsageVarargTest.differentLength":31,"org.easymock.tests2.CallbackTest.callback":180,"org.easymock.tests2.UsageConstraintsTest.equals":453,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":367,"org.easymock.tests.UsageTest.openCallCountByLastCall":43,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":235,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":81,"org.easymock.tests.UsageCallCountTest.tooFewCalls":110,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":226,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":87,"org.easymock.tests.UsageThrowableTest.throwCheckedException":149,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":5,"org.easymock.tests.MockingTest.testStrictClassMocking":315,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":78,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":228,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":473,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":225,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":407,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":227,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":205,"org.easymock.tests.ObjectMethodsTest.testHashCode":440,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":234,"org.easymock.tests2.NameTest.nameForNiceMock":308,"org.easymock.tests2.DependencyTest.testInterfaceMocking":178,"org.easymock.samples.ExampleTest.addDocument":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":358,"org.easymock.tests2.DelegateToTest.testStubDelegate":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":362,"org.easymock.tests2.AnswerTest.stubAnswer":204,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":72,"org.easymock.tests.UsageVarargTest.varargLongAccepted":33,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":425,"org.easymock.tests.UsageExpectAndReturnTest.floatType":52,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":68,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":201,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":12,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":463,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":411,"org.easymock.tests.UsageThrowableTest.noUpperLimit":146,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":253,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":236,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":371,"org.easymock.tests2.SerializationTest.test":2,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":280,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":334,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":51,"org.easymock.tests2.UsageConstraintsTest.testSame":241,"org.easymock.samples.SupportTest.addDocument":13,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":451,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":349,"org.easymock.tests.GenericTest.testPackageScope":116,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":445,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":420,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":462,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":392,"org.easymock.tests2.NameTest.nameForMock":306,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":62,"org.easymock.tests2.UsageStrictMockTest.differentMethods":199,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":368,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":54,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":135,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":438,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":160,"org.easymock.tests2.MockedExceptionTest.testRealException":297,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":390,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":467,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":430,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":429,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":196,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":409,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":80,"org.easymock.tests2.NameTest.nameForStrictMock":307,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":365,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":161,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":266,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":374,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":254,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":336,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":215,"org.easymock.tests2.UsageStrictMockTest.range":198,"org.easymock.tests2.UsageConstraintsTest.lessThan":261,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":459,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":424,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":166,"org.easymock.tests2.CaptureTest.testCaptureRightOne":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":353,"org.easymock.tests2.UsageConstraintsTest.testOr":242,"org.easymock.tests.UsageRangeTest.combination":158,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":263,"org.easymock.tests.UsageTest.wrongArguments":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":350,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":326,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":55,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":417,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":63,"org.easymock.tests.UsageVarargTest.varargShortAccepted":32,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":338,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":113,"org.easymock.tests2.UsageConstraintsTest.cmpTo":246,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":450,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":419,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":188,"org.easymock.tests2.CaptureTest.testCaptureFromStub":286,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":399,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":364,"org.easymock.tests.UsageTest.unexpectedCallWithArray":6,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":7,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":111,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":64,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":73,"org.easymock.tests2.UsageConstraintsTest.constraints":237,"org.easymock.samples.ExampleTest.addAndChangeDocument":23,"org.easymock.tests.UsageStrictMockTest.testVerify":299,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":10,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":71,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":105,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":281,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":101,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":56,"org.easymock.tests.LimitationsTest.abstractClass":322,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":102,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":301,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":171,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":27}}]
