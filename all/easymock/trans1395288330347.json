[{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[13,14,15,16,17,18,19,20,21,22,23,24],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[25],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[26,27,28,29],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[30],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.Range:44","failures":[31,32,33,34,35,0,36,37,38,1,2,39,40,3,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,4,136,5,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,25,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,6,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,7,289,290,291,292,293,8,9,294,295,296,297,10,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,30,357,358,359,360,361,362,363,11,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,27,28,29,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,12,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,13,487,14,15,16,17,18,19,488,20,22,23,489,24],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"failures":[253],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[31,32,33,34,35,0,36,37,38,1,2,39,40,3,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,4,136,5,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,25,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,6,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,7,289,290,291,292,293,8,9,294,295,296,297,10,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,30,357,358,359,360,361,362,363,11,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,27,28,29,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,12,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,13,487,14,15,16,17,18,19,488,20,22,23,489,24],"status":-1,"binaryOperator":"(int >= 1)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"failures":[283,283,284,284,367],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:36","sourceCode":"try {\n    if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n        org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n    } \n    return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]));\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace();\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace();\n} catch (final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper) {\n    throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace();\n}","type":"CtTryImpl"},"failures":[31,32,33,34,35,0,36,37,38,1,2,39,40,3,42,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,89,90,93,101,102,105,106,107,109,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,131,132,133,134,135,4,136,5,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,173,175,176,177,178,179,180,183,221,227,229,230,231,232,239,241,6,242,243,244,245,247,248,249,250,251,252,253,254,255,256,257,267,268,269,270,271,273,275,276,277,278,280,282,283,283,284,284,288,7,289,290,291,292,293,8,9,294,295,296,297,10,298,300,304,305,306,308,311,312,314,317,318,319,320,321,322,323,324,325,327,330,331,332,333,336,337,338,339,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,30,357,358,359,360,361,362,363,11,364,365,366,367,368,369,370,371,372,373,374,375,376,377,379,380,381,382,383,384,385,391,398,399,400,401,402,403,27,28,404,407,408,409,410,411,412,413,414,415,416,417,418,435,438,448,454,462,469,12,471,472,473,474,475,476,478,479,480,481,483,484,485,13,487,14,15,16,17,18,19,488,20,22,23,489,24],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if ((this.java.lang.Object) == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"expected":"expected","actual":"actual"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:150","sourceCode":"return java.io.ByteArrayOutputStream.toByteArray()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[338,14,22],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:43","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"failures":[490,491,492],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[44,49,90,105,106,107,109,170,171,172,173,174,181,183,184,196,197,198,199,200,201,202,203,204,259,260,261,262,263,266,273,283,283,284,284,285,286,298,300,301,303,304,305,306,308,310,311,312,314,319,320,322,323,324,325,327,328,329,330,331,332,333,334,335,373,374,375,27,29,404,405,425,429,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,478,479,480,481,484,485],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"toMock"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"failures":[257],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:105","failures":[31,32,33,34,35,0,36,37,38,1,2,39,40,3,41,42,43,47,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,108,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,4,136,5,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,175,176,177,178,179,180,185,186,187,188,189,190,191,192,193,25,194,195,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,6,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,267,268,269,270,271,272,274,275,276,277,278,279,280,281,282,287,288,7,289,290,291,292,293,8,9,294,295,296,297,10,317,318,321,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,30,357,358,359,360,361,362,363,11,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,28,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,430,431,457,458,459,460,461,462,463,464,465,466,467,468,469,470,12,471,472,473,474,475,476,477,483,486,13,487,14,15,16,17,18,19,488,20,22,23,489,24],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"failures":[36,37,38,39,40,493,494,495,239,241,242,245,496,497,498,499,290,291,293,295,296,338,354,385,469,471,474],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Invocation:195","failures":[44,48,50,258,298,301,308,312,314,320,330,333,335,386,387,388,389,390,391,392,393,394,395,396,397,410,413,415,421,422,423,424,433,434,436,439,442,443,449,451,452,457,458,459,460,461,462,463,464,465,466,467,468,478,479,485],"status":-1,"binaryOperator":"(((java.lang.String.length()) == 0) || ((java.lang.String.indexOf(' ')) > (-1))) || (!java.lang.Character.(java.lang.Character.isJavaIdentifierStart(java.lang.String.charAt(0))))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[26,27,28,29],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:162","sourceCode":"final java.lang.NoSuchFieldException java.lang.NoSuchFieldException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[198,202],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[26,27,28,29],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:34","failures":[36,37,38,39,40,493,490,494,500,495,501,118,121,122,123,127,128,130,4,136,5,241,6,243,244,502,496,503,491,492,504,497,505,498,506,499,290,291,295,296,12,472,473],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"failures":[106,107,109,170,273,283,284,325,331,332,373,479,480,484,485],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[320],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[507,508],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[227],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:36","sourceCode":"return true","type":"CtReturnImpl"},"failures":[101,102,130,131,132,133,134,135,179,6,247,248,267,268,269,270,271,344,348,12,487,19,488,24],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:249","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:50","failures":[283,284,299,302,307,310,509,313,510,511,27,404,405,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,480,485,486],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1594","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(byte[]))","type":"CtInvocationImpl"},"failures":[351],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[37,493,494,241,496,498],"status":-1,"binaryOperator":"int < (java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:138","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[307,512,404,405],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:229","failures":[300,312,331,335,438],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:117","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[513,119,276,11,366,367,377,379,399,400,401,403,13,487,14,15,16,17,18,19,488,20,22,23,489,24],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[514],"status":-1,"binaryOperator":"int == 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:117","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[186,195],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1802","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.StartsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"prefix"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:48","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"toString\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1177","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[398],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":339,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":0,"org.easymock.tests2.UsageTest.argumentsOrdered":296,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":417,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":392,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":215,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":293,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":274,"org.easymock.tests2.DelegateToTest.testReturnException":399,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":176,"org.easymock.tests.MockingTest.testPartialClassMocking":106,"org.easymock.tests.MockClassControlTest.testToString":261,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":420,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":42,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":224,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":335,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":442,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":438,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":58,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":318,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":346,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":131,"org.easymock.tests2.UsageTest.wrongArguments":291,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":468,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":231,"org.easymock.samples.ExampleTest.answerVsDelegate":276,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":49,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":111,"org.easymock.tests2.UsageConstraintsTest.testNull":342,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":322,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":416,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":266,"org.easymock.tests2.CaptureTest.testPrimitive":15,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":135,"org.easymock.tests.UsageTest.moreThanOneArgument":36,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":77,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":321,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":33,"org.easymock.tests.UsageTest.argumentsOrdered":40,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":253,"org.easymock.tests.UsageVarargTest.varargIntAccepted":80,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":506,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":220,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":267,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":298,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":427,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":396,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":305,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":207,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":271,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":492,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":462,"org.easymock.tests.ReplayStateInvalidUsageTest.times":193,"org.easymock.tests2.DependencyTest.testClassMocking":315,"org.easymock.tests2.AnswerTest.answer":11,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":347,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":222,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":372,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":46,"org.easymock.tests2.CaptureTest.testAnd":13,"org.easymock.tests2.UsageTest.strictResetToDefault":289,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":302,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":330,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":32,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":411,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":115,"org.easymock.tests2.DelegateToTest.testDelegate":403,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":257,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":73,"org.easymock.tests.LimitationsTest.mockFinalMethod":184,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":179,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":169,"org.easymock.tests2.DependencyTest.testClassMockingSupport":316,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":127,"org.easymock.tests2.CaptureTest.testCapture1_2446744":16,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":326,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":71,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":370,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":187,"org.easymock.tests.UsageThrowableTest.throwError":157,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":48,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":397,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":258,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":35,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":510,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":456,"org.easymock.samples.PartialClassMockTest.testGetArea":273,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":188,"org.easymock.tests.MockingTest.testInterfaceMocking":108,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":268,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":443,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":59,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":238,"org.easymock.tests2.UsageTest.niceToStrict":292,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":205,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":304,"org.easymock.tests2.MockBuilderTest.testCreateMock":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":451,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":465,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":496,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":67,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":412,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":45,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":57,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":91,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":229,"org.easymock.tests.UsageOverloadedMethodTest.overloading":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":453,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":447,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":120,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":352,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":148,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":124,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":507,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":351,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":20,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":81,"org.easymock.tests2.EasyMockSupportClassTest.testAll":435,"org.easymock.tests.MockClassControlTest.testEquals":265,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":172,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":497,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":75,"org.easymock.tests2.CaptureTest.testCaptureAll":487,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":167,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":371,"org.easymock.tests.MockNameTest.defaultName":100,"org.easymock.tests2.UsageConstraintsTest.testMatches":353,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":185,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":34,"org.easymock.samples.ExampleTest.voteForRemovals":280,"org.easymock.tests.UsageVarargTest.allKinds":89,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":4,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":168,"org.easymock.samples.BasicClassMockTest.testPrintContent":286,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":163,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":469,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":402,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":393,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":180,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":203,"org.easymock.tests2.UsageConstraintsTest.greaterThan":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":436,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":114,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":333,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":204,"org.easymock.samples.ExampleTest.voteForRemoval":277,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":334,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":381,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":50,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":428,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":325,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":7,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":90,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":212,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":409,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":433,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":175,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":398,"org.easymock.tests2.CaptureTest.testCaptureFirst":24,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":211,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":410,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":10,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":123,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":144,"org.easymock.tests2.CaptureTest.testCapture2_2446744":489,"org.easymock.tests2.UsageTest.moreThanOneArgument":290,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":383,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":223,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":312,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":88,"org.easymock.tests.GenericTest.testBridgedEquals":174,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":98,"org.easymock.tests.UsageExpectAndReturnTest.longType":140,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":407,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":165,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":76,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":252,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":359,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":74,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":31,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":53,"org.easymock.tests.UsageCallCountTest.tooManyCalls":99,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":490,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":452,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":145,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":467,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":63,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":162,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":479,"org.easymock.tests.MockingTest.testNiceClassMocking":112,"org.easymock.tests.MockingTest.testClassMocking":104,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":92,"org.easymock.tests2.UsageConstraintsTest.testContains":350,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":375,"org.easymock.tests2.UsageConstraintsTest.testFind":341,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":126,"org.easymock.tests.MockTypeTest.fromEasyMockClass":47,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":239,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":379,"org.easymock.tests.UsageExpectAndReturnTest.object":147,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":327,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":466,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":415,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":83,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":236,"org.easymock.tests.UsageTest.exactCallCountByLastCall":3,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":101,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":210,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":41,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":254,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":495,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":405,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":153,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":78,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":119,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":387,"org.easymock.tests.MockClassControlTest.testHashCode":264,"org.easymock.tests2.EasyMockSupportTest.testVerify":419,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":445,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":491,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":255,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":117,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":56,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":369,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":477,"org.easymock.tests.UsageVarargTest.varargCharAccepted":82,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":196,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":470,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":228,"org.easymock.tests2.UsageTest.openCallCountByLastCall":8,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":418,"org.easymock.tests.DefaultClassInstantiatorTest.object":197,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":55,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":234,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":501,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":446,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":65,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":160,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":460,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":386,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":263,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":331,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":64,"org.easymock.tests.CapturesMatcherTest.test":513,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":154,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":52,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":504,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":454,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":262,"org.easymock.tests2.UsageTest.resumeIfFailure":297,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":44,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":426,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":178,"org.easymock.tests2.StubTest.stubWithReturnValue":476,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":307,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":146,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":360,"org.easymock.tests2.SerializationTest.testAllMockedMethod":29,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":221,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":498,"org.easymock.samples.SupportTest.voteForRemovals":288,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":170,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":389,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":70,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":26,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":227,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":364,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":43,"org.easymock.tests.UsageExpectAndThrowTest.object":68,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":357,"org.easymock.tests2.DelegateToTest.testWrongClass":401,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":247,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":248,"org.easymock.tests.UsageStrictMockTest.range":243,"org.easymock.samples.ConstructorCalledMockTest.testTax":283,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":430,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":414,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":478,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":69,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":432,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":39,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":194,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":230,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":493,"org.easymock.tests2.CaptureTest.testCaptureNone":488,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":251,"org.easymock.tests.UsageUnorderedTest.message":130,"org.easymock.tests.UsageVerifyTest.twoReturns":5,"org.easymock.tests.UsageVarargTest.varargByteAccepted":87,"org.easymock.tests2.ThreadingTest.testThreadSafe":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":449,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":96,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":237,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":285,"org.easymock.tests2.CaptureTest.testCapture_2617107":14,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":499,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":129,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":134,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":225,"org.easymock.tests2.UsageConstraintsTest.any":348,"org.easymock.tests2.StubTest.stub":475,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":192,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":54,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":177,"org.easymock.tests.UsageExpectAndThrowTest.longType":61,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":226,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":201,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":191,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":471,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":391,"org.easymock.tests2.SerializationTest.testClass":27,"org.easymock.tests.LimitationsTest.mockNativeMethod":183,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":173,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":156,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":459,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":474,"org.easymock.tests2.NameTest.nameForMocksControl":424,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":461,"org.easymock.tests2.MockedExceptionTest.testMockedException":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":437,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":2,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":109,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":62,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":378,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":319,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":308,"org.easymock.tests.MockingTest.testNicePartialClassMocking":107,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":324,"org.easymock.tests2.CompareToTest.testCompareEqual":514,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":457,"org.easymock.tests2.CaptureTest.testCaptureLast":19,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":128,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":485,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":345,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":358,"org.easymock.tests.MockingTest.testTwoMocks":105,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":486,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":137,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":66,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":295,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":362,"org.easymock.samples.ExampleTest.removeNonExistingDocument":281,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":464,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":189,"org.easymock.tests.UsageStrictMockTest.differentMethods":244,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":388,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":199,"org.easymock.tests2.ConstraintsToStringTest.andToString":505,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":382,"org.easymock.tests2.MockBuilderTest.testCreateMockString":314,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":439,"org.easymock.tests.UsageExpectAndThrowTest.floatType":60,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":434,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":366,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":406,"org.easymock.tests.UsageVerifyTest.twoThrows":136,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":448,"org.easymock.samples.ExampleTest.voteAgainstRemoval":278,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":216,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":249,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":332,"org.easymock.tests.LimitationsTest.privateConstructor":182,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":511,"org.easymock.tests2.UsageConstraintsTest.testNotNull":361,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":164,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":373,"org.easymock.tests2.UsageTest.defaultResetToNice":294,"org.easymock.samples.ExampleTest.voteAgainstRemovals":275,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":152,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":217,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":458,"org.easymock.tests.UsageVarargTest.differentLength":84,"org.easymock.tests2.CallbackTest.callback":385,"org.easymock.tests2.UsageConstraintsTest.equals":340,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":328,"org.easymock.tests.UsageTest.openCallCountByLastCall":1,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":336,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":133,"org.easymock.tests.UsageCallCountTest.tooFewCalls":94,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":481,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":232,"org.easymock.tests.UsageThrowableTest.throwCheckedException":161,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":494,"org.easymock.tests.MockingTest.testStrictClassMocking":103,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":484,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":102,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":480,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":463,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":25,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":483,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":368,"org.easymock.tests.ObjectMethodsTest.testHashCode":235,"org.easymock.tests2.NameTest.nameForNiceMock":423,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":384,"org.easymock.tests2.DependencyTest.testInterfaceMocking":317,"org.easymock.samples.ExampleTest.addDocument":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":450,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":455,"org.easymock.tests2.DelegateToTest.testStubDelegate":400,"org.easymock.tests2.AnswerTest.stubAnswer":367,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":6,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":309,"org.easymock.tests.UsageVarargTest.varargLongAccepted":86,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":245,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":214,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":155,"org.easymock.tests.UsageExpectAndReturnTest.floatType":139,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":404,"org.easymock.tests2.ConstraintsToStringTest.orToString":502,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":284,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":395,"org.easymock.tests.UsageThrowableTest.noUpperLimit":158,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":121,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":356,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":337,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":425,"org.easymock.tests2.SerializationTest.test":28,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":17,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":508,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":198,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":138,"org.easymock.tests2.UsageConstraintsTest.testSame":343,"org.easymock.samples.SupportTest.addDocument":287,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":482,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":440,"org.easymock.tests.GenericTest.testPackageScope":171,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":256,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":209,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":394,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":110,"org.easymock.tests2.NameTest.nameForMock":421,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":149,"org.easymock.tests2.UsageStrictMockTest.differentMethods":473,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":313,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":329,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":141,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":72,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":233,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":116,"org.easymock.tests2.MockedExceptionTest.testRealException":376,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":51,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":431,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":219,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":500,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":512,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":218,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":132,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":195,"org.easymock.tests2.NameTest.nameForStrictMock":422,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":303,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":377,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":323,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":429,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":30,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":200,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":300,"org.easymock.tests2.UsageStrictMockTest.range":472,"org.easymock.tests2.UsageConstraintsTest.lessThan":363,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":390,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":408,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":444,"org.easymock.tests2.CaptureTest.testCaptureRightOne":22,"org.easymock.tests2.UsageConstraintsTest.testOr":344,"org.easymock.tests.UsageRangeTest.combination":113,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":320,"org.easymock.tests.UsageTest.wrongArguments":38,"org.easymock.tests2.MockBuilderTest.testWithConstructor":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":441,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":260,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":142,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":150,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":206,"org.easymock.tests.UsageVarargTest.varargShortAccepted":85,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":202,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":97,"org.easymock.tests2.UsageConstraintsTest.cmpTo":349,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":365,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":208,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":9,"org.easymock.tests2.CaptureTest.testCaptureFromStub":23,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":186,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":301,"org.easymock.tests.UsageTest.unexpectedCallWithArray":37,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":241,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":95,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":509,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":151,"org.easymock.tests2.CaptureTest.testCapture":21,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":242,"org.easymock.tests2.UsageConstraintsTest.constraints":338,"org.easymock.samples.ExampleTest.addAndChangeDocument":282,"org.easymock.tests2.ConstraintsToStringTest.notToString":503,"org.easymock.tests.UsageStrictMockTest.testVerify":246,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":272,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":240,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":166,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":18,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":269,"org.easymock.tests.LimitationsTest.abstractClass":181,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":143,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":122,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":270,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":413,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":79}}]
