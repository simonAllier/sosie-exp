[{"transplant":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"value"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"failures":[17,18],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[19,20,21,22,23,24,0,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,5,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,13,91,92,93,94],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cls":"returnedType","type":"returnedType"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:102","sourceCode":"if (!boolean) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove();\n    throw new java.lang.IllegalStateException(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"message"}},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"this.java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[19,95,20,96,21,22,97,23,98,99,24,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,0,123,124,125,1,25,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,26,27,28,29,30,31,32,153,154,2,155,156,33,34,35,36,3,157,158,159,160,161,162,163,164,165,166,167,4,37,38,39,40,41,42,168,43,169,44,45,46,170,171,47,172,173,174,48,175,5,49,176,50,51,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,52,53,201,54,55,202,56,203,204,205,57,58,59,60,61,62,206,207,63,64,208,65,66,67,209,68,69,70,71,72,210,211,212,213,214,215,216,217,218,73,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,74,75,76,77,236,11,237,238,239,240,241,242,243,12,244,245,246,247,248,78,79,80,81,83,84,249,250,251,252,85,86,87,88,89,253,254,255,256,257,90,258,13,91,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,14,275,276,277,278,92,15,279,280,16,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,93,94],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lock":"lock"}},{"position":"org.easymock.EasyMock:933","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[301],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[129,133,302],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[131,302,145,150],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[152,303],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"method":"candidateMethod"}},{"position":"org.easymock.internal.LastControl:94","failures":[105,106,107,108,115,116,128,129,130,131,132,133,134,135,302,136,145,146,150,151],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"position":"org.easymock.internal.RecordState:274","failures":[96,153,17,18,154,2,155,190,204,205,275],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:708","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:71","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[304],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[305,306,307,308,238,257],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[19,95,20,96,21,22,97,23,98,99,24,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,0,123,124,125,1,25,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,26,27,28,29,30,31,32,153,154,2,155,156,33,34,35,36,3,157,158,159,160,161,162,163,164,165,166,167,4,37,38,39,40,41,42,168,43,169,44,45,46,170,171,309,47,172,173,174,48,175,5,49,176,50,51,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,52,53,201,54,55,202,56,203,204,205,57,58,59,60,61,62,206,207,63,64,208,65,66,67,209,68,69,70,71,72,210,211,212,213,214,215,216,217,218,73,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,74,75,76,77,236,11,237,238,239,240,241,242,243,12,244,245,246,247,248,78,79,80,81,83,84,249,250,251,252,85,86,87,88,89,253,254,255,256,257,90,258,13,91,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,14,275,276,277,278,92,15,279,280,16,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,93,94,310,310],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1065","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[311],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:320","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[312,313],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[105,107,108,109,110,111,112,114,314,115,116,118],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:707","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[135],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[19,100,101,103,103,104,104,119,121,25,26,27,28,29,31,32,33,34,35,36,37,38,40,41,42,168,43,169,44,45,46,315,198,200,52,316,53,201,54,55,202,56,203,317,318,73,319,320,321,322,323,324,325,78,79,80,260,261,326,262,327],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[139],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:117","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[328,329],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:88","sourceCode":"if (org.easymock.internal.Result != null) {\n    return org.easymock.internal.Result;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResult:41","sourceCode":"return org.easymock.internal.Result","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"result"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1802","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.StartsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[151],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Find:41","failures":[330],"status":-1,"binaryOperator":"(\"find(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\")))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[119,120,121,331],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:51","failures":[5,332,13,274,14],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[119,120,121,331],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:355","sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[333],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[334,335,336,337,338,339],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))","type":"CtThrowImpl"},"failures":[340],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[125,341],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[19,95,20,96,21,22,97,23,98,99,24,100,101,102,103,103,104,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,0,123,124,125,1,25,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,26,27,28,29,30,31,32,153,154,2,155,156,33,34,35,36,3,157,158,159,160,161,162,163,164,165,166,167,4,342,37,38,39,40,41,42,43,169,44,45,46,170,171,309,47,172,173,174,48,175,5,49,176,50,51,177,178,179,180,181,182,183,184,185,186,187,188,189,343,344,345,346,190,191,192,193,194,195,196,197,198,199,200,52,53,201,54,55,56,203,204,205,57,58,59,60,61,62,206,207,63,64,208,65,66,67,209,68,69,70,71,72,210,211,212,213,214,215,216,217,218,73,219,220,221,222,223,225,226,227,228,229,230,231,232,233,234,235,320,74,75,76,77,236,11,237,238,239,240,241,242,243,12,244,245,246,247,248,78,79,80,81,82,83,84,249,250,251,252,85,86,87,88,89,253,254,255,256,257,90,258,13,91,259,347,260,261,262,264,265,348,349,266,267,268,269,272,273,274,14,350,351,328,352,353,354,311,329,92,15,279,280,16,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,93,94],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[355],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,126,127,128,129,130,131,132,133,134,135,302,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,342,43,169,47,173,48,175,204,205,57,218,334,229,230,234,235,85,86,87,88,89,356,253,254,255,257,90,92,15,279,280,16,93,94],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[152,303],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":129,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":11,"org.easymock.tests2.UsageTest.argumentsOrdered":166,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":187,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":233,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":313,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":161,"org.easymock.tests2.StubTest.stubWithReturnValue":1,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":95,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":64,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":149,"org.easymock.tests2.SerializationTest.testAllMockedMethod":121,"org.easymock.tests2.DelegateToTest.testReturnException":122,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":231,"org.easymock.tests.MockingTest.testPartialClassMocking":78,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":306,"org.easymock.samples.SupportTest.voteForRemovals":24,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":333,"org.easymock.tests.MockClassControlTest.testToString":321,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":301,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":315,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":293,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":331,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":341,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":281,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":34,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":17,"org.easymock.tests.UsageExpectAndThrowTest.object":291,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":51,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":146,"org.easymock.tests2.DelegateToTest.testWrongClass":123,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":93,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":94,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":135,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":92,"org.easymock.tests2.UsageTest.wrongArguments":159,"org.easymock.tests.UsageStrictMockTest.range":13,"org.easymock.samples.ConstructorCalledMockTest.testTax":103,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":251,"org.easymock.samples.ExampleTest.answerVsDelegate":96,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":184,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":318,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":26,"org.easymock.tests2.UsageConstraintsTest.testNull":131,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":292,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":40,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":54,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":186,"org.easymock.tests2.CaptureTest.testPrimitive":108,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":16,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":300,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":242,"org.easymock.tests.UsageTest.moreThanOneArgument":237,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":250,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":39,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":307,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":76,"org.easymock.tests2.CaptureTest.testCaptureNone":113,"org.easymock.tests.UsageUnorderedTest.message":218,"org.easymock.tests.UsageVerifyTest.twoReturns":14,"org.easymock.tests.UsageVarargTest.varargByteAccepted":227,"org.easymock.tests2.ThreadingTest.testThreadSafe":170,"org.easymock.tests.UsageTest.argumentsOrdered":243,"org.easymock.tests.UsageVarargTest.varargIntAccepted":221,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":269,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":100,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":85,"org.easymock.tests2.CaptureTest.testCapture_2617107":107,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":200,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":280,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":8,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":201,"org.easymock.tests2.UsageConstraintsTest.any":136,"org.easymock.tests2.StubTest.stub":125,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":89,"org.easymock.tests.UsageExpectAndThrowTest.longType":284,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":232,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":9,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":354,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":175,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":195,"org.easymock.tests2.SerializationTest.testClass":119,"org.easymock.tests.LimitationsTest.mockNativeMethod":73,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":156,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":326,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":72,"org.easymock.tests2.AnswerTest.answer":153,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":302,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":194,"org.easymock.tests2.CaptureTest.testAnd":105,"org.easymock.tests2.UsageTest.strictResetToDefault":157,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":169,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":176,"org.easymock.tests2.NameTest.nameForMocksControl":346,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":340,"org.easymock.tests2.MockedExceptionTest.testMockedException":197,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":75,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":83,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":181,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":241,"org.easymock.tests2.DelegateToTest.testDelegate":124,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":285,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":80,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":37,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":55,"org.easymock.tests.MockingTest.testNicePartialClassMocking":79,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":296,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":42,"org.easymock.tests2.CaptureTest.testCaptureLast":112,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":234,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":351,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":32,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":134,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":248,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":147,"org.easymock.tests.MockingTest.testTwoMocks":325,"org.easymock.tests2.CaptureTest.testCapture1_2446744":109,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":57,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":294,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":289,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":192,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":165,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":151,"org.easymock.tests.UsageThrowableTest.throwError":210,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":353,"org.easymock.tests.UsageStrictMockTest.differentMethods":91,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":336,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":309,"org.easymock.tests2.MockBuilderTest.testCreateMockString":203,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":319,"org.easymock.tests.UsageExpectAndThrowTest.floatType":283,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":236,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":142,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":154,"org.easymock.tests.UsageVerifyTest.twoThrows":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":35,"org.easymock.samples.PartialClassMockTest.testGetArea":19,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":352,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":86,"org.easymock.samples.ExampleTest.voteAgainstRemoval":22,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":7,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":45,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":327,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":282,"org.easymock.tests2.UsageTest.niceToStrict":160,"org.easymock.tests2.UsageConstraintsTest.testNotNull":150,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":217,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":196,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":355,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":53,"org.easymock.tests2.MockBuilderTest.testCreateMock":202,"org.easymock.tests2.UsageTest.defaultResetToNice":164,"org.easymock.samples.ExampleTest.voteAgainstRemovals":20,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":68,"org.easymock.tests.UsageVarargTest.differentLength":224,"org.easymock.tests2.CallbackTest.callback":190,"org.easymock.tests.UsageTest.openCallCountByLastCall":240,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":305,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":290,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":182,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":126,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":348,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":279,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":249,"org.easymock.tests.UsageCallCountTest.tooFewCalls":267,"org.easymock.tests.UsageOverloadedMethodTest.overloading":264,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":277,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":140,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":263,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":65,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":29,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":139,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":114,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":252,"org.easymock.tests.UsageThrowableTest.throwCheckedException":214,"org.easymock.tests2.EasyMockSupportClassTest.testAll":33,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":261,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":308,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":298,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":246,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":193,"org.easymock.tests2.CaptureTest.testCaptureAll":106,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":254,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":31,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":28,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":311,"org.easymock.tests2.UsageConstraintsTest.testMatches":141,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":30,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":155,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":77,"org.easymock.samples.ExampleTest.voteForRemovals":23,"org.easymock.tests2.NameTest.nameForNiceMock":345,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":172,"org.easymock.tests.UsageVarargTest.allKinds":229,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":273,"org.easymock.tests2.DependencyTest.testInterfaceMocking":50,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":247,"org.easymock.samples.BasicClassMockTest.testPrintContent":101,"org.easymock.samples.ExampleTest.addDocument":97,"org.easymock.tests2.DelegateToTest.testStubDelegate":0,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":216,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":173,"org.easymock.tests2.AnswerTest.stubAnswer":2,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":235,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":90,"org.easymock.tests2.UsageConstraintsTest.greaterThan":143,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":82,"org.easymock.tests.UsageVarargTest.varargLongAccepted":226,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":46,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":259,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":339,"org.easymock.samples.ExampleTest.voteForRemoval":21,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":6,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":171,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":71,"org.easymock.tests.UsageExpectAndReturnTest.floatType":59,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":25,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":168,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":104,"org.easymock.tests.UsageThrowableTest.noUpperLimit":211,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":144,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":262,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":3,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":127,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":110,"org.easymock.tests2.SerializationTest.test":120,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":335,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":179,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":212,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":58,"org.easymock.tests2.UsageConstraintsTest.testSame":132,"org.easymock.samples.SupportTest.addDocument":99,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":230,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":312,"org.easymock.tests2.CaptureTest.testCaptureFirst":118,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":180,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":4,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":278,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":207,"org.easymock.tests.GenericTest.testPackageScope":260,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":47,"org.easymock.tests2.CaptureTest.testCapture2_2446744":117,"org.easymock.tests2.UsageTest.moreThanOneArgument":158,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":56,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":228,"org.easymock.tests2.NameTest.nameForMock":343,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":271,"org.easymock.tests.UsageExpectAndReturnTest.longType":60,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":244,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":177,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":299,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":66,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":148,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":297,"org.easymock.tests2.UsageStrictMockTest.differentMethods":49,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":74,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":61,"org.easymock.tests.UsageCallCountTest.tooManyCalls":272,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":295,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":84,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":266,"org.easymock.tests2.MockedExceptionTest.testRealException":199,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":63,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":286,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":48,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":329,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":215,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":15,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":27,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":349,"org.easymock.tests2.NameTest.nameForStrictMock":344,"org.easymock.tests2.UsageConstraintsTest.testContains":138,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":198,"org.easymock.tests2.UsageConstraintsTest.testFind":130,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":265,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":204,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":41,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":255,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":205,"org.easymock.tests.UsageExpectAndReturnTest.object":208,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":337,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":145,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":43,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":52,"org.easymock.tests2.UsageStrictMockTest.range":5,"org.easymock.tests2.UsageConstraintsTest.lessThan":152,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":185,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":223,"org.easymock.tests.UsageTest.exactCallCountByLastCall":12,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":253,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":304,"org.easymock.tests2.CaptureTest.testCaptureRightOne":115,"org.easymock.tests2.ConstraintsToStringTest.findToString":330,"org.easymock.tests2.UsageConstraintsTest.testOr":133,"org.easymock.tests.UsageRangeTest.combination":81,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":219,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":69,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":38,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":276,"org.easymock.tests.UsageTest.wrongArguments":239,"org.easymock.tests.MockClassControlTest.testHashCode":324,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":320,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":62,"org.easymock.tests2.EasyMockSupportTest.testVerify":189,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":67,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":338,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":275,"org.easymock.tests.UsageVarargTest.varargShortAccepted":225,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":270,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":191,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":342,"org.easymock.tests2.UsageConstraintsTest.cmpTo":137,"org.easymock.tests.UsageVarargTest.varargCharAccepted":222,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":18,"org.easymock.tests2.CompareToTest.testLessThan":303,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":174,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":10,"org.easymock.tests2.UsageTest.openCallCountByLastCall":162,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":163,"org.easymock.tests.DefaultClassInstantiatorTest.object":334,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":188,"org.easymock.tests2.CaptureTest.testCaptureFromStub":116,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":328,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":316,"org.easymock.tests.UsageTest.unexpectedCallWithArray":238,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":288,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":257,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":213,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":268,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":209,"org.easymock.tests2.CaptureTest.testCapture":314,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":323,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":258,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":44,"org.easymock.tests2.UsageConstraintsTest.constraints":128,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":287,"org.easymock.samples.ExampleTest.addAndChangeDocument":98,"org.easymock.tests.CapturesMatcherTest.test":310,"org.easymock.tests.UsageStrictMockTest.testVerify":347,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":70,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":356,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":102,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":322,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":36,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":245,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":111,"org.easymock.tests2.UsageTest.resumeIfFailure":167,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":87,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":317,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":206,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":350,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":88,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":332,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":220,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":183}}]
