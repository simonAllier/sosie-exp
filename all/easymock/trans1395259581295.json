[{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"hashCodeMethod","equalsMethod":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.ReplayState:61","sourceCode":"final java.lang.Throwable java.lang.Throwable","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:120","sourceCode":"throw new java.io.IOException(java.lang.NoSuchMethodException.toString())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:90","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[0,1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"failures":[3],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1471","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:172","failures":[4,5],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:206","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:214","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[6,7,8,9,10,11,12,13,14,15,16,17],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:83","sourceCode":"if (java.lang.Object[] == null) {\n    java.lang.Object[] = new java.lang.Object[0];\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:93","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"arguments":"arguments"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[18,19,20,21],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"failures":[22],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[23,14,24,25],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:243","failures":[26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,5,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,15,96,97,98,99,100,101,102,103,104,105,106,107,108,109],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:48","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"toString\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[110,111,112,113,114,115,116,117,118,119,120,121],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"matched"}},{"transplant":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[122,123],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:71","failures":[72,78,79,5,80,81,124],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"failures":[10,11,125,126,127,128,129,14,15,16],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[95],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[26,27,28,29,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,31,32,33,34,35,36,37,183,184,185,186,187,38,188,189,190,39,191,192,193,194,195,196,197,40,41,42,43,44,45,198,199,46,47,200,48,49,50,201,51,52,53,54,55,202,203,204,205,206,207,208,209,210,211,212,213,214,56,215,216,217,218,219,220,221,58,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,59,245,60,61,246,247,62,63,248,249,250,251,252,253,254,255,67,68,69,70,71,256,72,257,73,258,74,75,259,76,260,261,6,6,7,7,262,263,264,77,265,266,267,268,269,270,271,272,273,274,275,276,277,278,78,79,279,5,80,280,81,124,82,83,84,85,86,87,88,89,281,90,282,91,92,93,18,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,22,19,298,299,20,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,94,323,324,325,326,95,327,328,14,24,25,15,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,96,97,98,99,346,347,348,100,349,101,102,350,351,352,353,103,104,105,106,107,108,109,354,355,356,357,358,359,360,361,362,363,364,365,366,367],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[133,134,137,138,368,190,196,197,244,60,268,274,275,101],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","sourceCode":"return ((org.easymock.internal.ExpectedInvocation.toString()) + \": \") + (org.easymock.internal.Results.toString())","type":"CtReturnImpl"},"failures":[132,134,137,138,186,190,195,196,197,244,59,60,61,267,268,274,275,342,343,344,345,100,101,102],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:134","sourceCode":"final java.io.ByteArrayOutputStream java.io.ByteArrayOutputStream = new java.io.ByteArrayOutputStream()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[369],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[328],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1877","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.CompareEqual<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:124","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:35","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[370,371,372],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","threadSafe":"threadSafe"}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:249","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.RecordState:117","failures":[183,258,306,307,309,318,319,324],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[132,172,174,175,195,196,197,59,61,246,267,342,343,344,345,100,102,350],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[373,374,375,376],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:280","failures":[184,258,326,95,327,328],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[353],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:47","sourceCode":"org.easymock.internal.DefaultClassInstantiator org.easymock.internal.DefaultClassInstantiator = new org.easymock.internal.DefaultClassInstantiator()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:32","sourceCode":"new java.util.ArrayList<java.lang.reflect.Field>(1)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[23,14,24,25],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:50","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"finalize\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.CompareTo:42","failures":[377],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[26,27,28,29,130,131,132,133,134,135,136,137,138,139,378,30,379,380,4,381,382,383,384,385,386,387,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,388,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,389,181,182,390,391,392,31,32,393,33,394,395,396,34,35,36,37,183,373,184,185,374,186,187,38,188,189,375,376,397,190,39,191,192,193,194,195,196,197,40,41,42,43,44,45,198,199,46,47,200,48,49,50,201,51,52,53,54,55,202,203,204,205,206,207,208,209,210,211,212,213,214,122,56,215,57,123,216,217,218,219,220,221,398,399,58,400,222,223,224,225,226,227,228,229,230,231,232,233,234,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,235,236,237,238,431,239,240,241,432,433,242,243,244,59,245,60,61,246,247,62,63,434,64,65,66,435,436,437,438,439,248,249,250,251,252,253,254,255,67,68,69,70,71,256,72,257,73,258,74,75,259,76,260,261,6,6,7,7,262,263,264,77,265,266,267,268,269,270,271,272,273,274,275,276,277,78,440,79,279,5,11,280,82,83,84,85,86,87,88,89,281,90,13,441,282,91,92,93,442,18,283,284,285,443,286,287,288,289,290,291,444,292,293,294,295,296,297,22,19,298,299,20,300,301,302,303,304,305,306,445,446,307,308,309,310,311,312,313,314,315,316,317,318,447,319,320,321,322,94,323,324,448,110,111,449,112,325,1,113,114,450,451,115,452,326,95,327,453,328,14,24,25,15,16,329,330,331,333,334,336,338,339,340,341,454,455,456,457,458,459,96,460,97,461,462,463,464,465,466,98,467,468,99,469,470,471,116,117,472,118,346,2,119,120,473,474,121,347,348,100,349,101,102,350,351,352,353,105,106,107,108,354,355,356,357,358,359,360,361,362,363,364,365,366,367],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[30,434,64,65],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[32,282],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.EasyMock:760","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[133,134,137,138,368,190,196,197,244,60,268,274,275,101],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:959","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[420],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[475,476,244,477,478],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","i":"i"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":285,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":131,"org.easymock.tests2.UsageTest.argumentsOrdered":275,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":339,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":417,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":270,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":257,"org.easymock.tests2.DelegateToTest.testReturnException":326,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":217,"org.easymock.tests.MockingTest.testPartialClassMocking":31,"org.easymock.tests.MockClassControlTest.testToString":250,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":454,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":30,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":426,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":140,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":97,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":83,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":125,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":291,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":39,"org.easymock.tests2.UsageTest.wrongArguments":268,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":121,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":237,"org.easymock.samples.ExampleTest.answerVsDelegate":258,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":4,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":395,"org.easymock.tests2.UsageConstraintsTest.testNull":287,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":87,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":255,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":338,"org.easymock.tests2.CaptureTest.testPrimitive":357,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":194,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":159,"org.easymock.tests.UsageTest.moreThanOneArgument":132,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":86,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":28,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":435,"org.easymock.tests.UsageTest.argumentsOrdered":138,"org.easymock.tests.UsageVarargTest.varargIntAccepted":162,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":422,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":67,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":278,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":451,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":409,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":71,"org.easymock.tests.ReplayStateInvalidUsageTest.times":230,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":346,"org.easymock.tests2.AnswerTest.answer":306,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":444,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":424,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":313,"org.easymock.tests2.CaptureTest.testAnd":354,"org.easymock.tests2.UsageTest.strictResetToDefault":266,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":9,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":282,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":27,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":36,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":333,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":439,"org.easymock.tests2.DelegateToTest.testDelegate":328,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":155,"org.easymock.tests.LimitationsTest.mockFinalMethod":400,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":220,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":214,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":375,"org.easymock.tests2.CaptureTest.testCapture1_2446744":358,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":153,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":311,"org.easymock.tests.UsageThrowableTest.throwError":202,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":224,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":0,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":115,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":470,"org.easymock.samples.PartialClassMockTest.testGetArea":72,"org.easymock.tests.MockingTest.testInterfaceMocking":393,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":225,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":68,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":64,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":433,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":141,"org.easymock.tests2.UsageTest.niceToStrict":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":407,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":370,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":79,"org.easymock.tests2.MockBuilderTest.testCreateMock":280,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":120,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":477,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":149,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":334,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":387,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":172,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":235,"org.easymock.tests.UsageOverloadedMethodTest.overloading":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":468,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":466,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":185,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":296,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":38,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":48,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":295,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":363,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":388,"org.easymock.tests2.EasyMockSupportClassTest.testAll":96,"org.easymock.tests.MockClassControlTest.testEquals":254,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":215,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":157,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":212,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":312,"org.easymock.tests2.CaptureTest.testCaptureAll":355,"org.easymock.tests.MockNameTest.defaultName":389,"org.easymock.tests2.UsageConstraintsTest.testMatches":297,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":29,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":222,"org.easymock.samples.ExampleTest.voteForRemovals":76,"org.easymock.tests.UsageVarargTest.allKinds":170,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":195,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":213,"org.easymock.samples.BasicClassMockTest.testPrintContent":263,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":208,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":347,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":453,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":113,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":221,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":129,"org.easymock.tests2.UsageConstraintsTest.greaterThan":19,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":35,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":93,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":406,"org.easymock.samples.ExampleTest.voteForRemoval":74,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":442,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":321,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":281,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":171,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":265,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":414,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":331,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":204,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":216,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":452,"org.easymock.tests2.CaptureTest.testCaptureFirst":367,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":413,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":332,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":277,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":187,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":199,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":94,"org.easymock.tests2.UsageTest.moreThanOneArgument":267,"org.easymock.tests2.CaptureTest.testCapture2_2446744":366,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":425,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":81,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":169,"org.easymock.tests.GenericTest.testBridgedEquals":123,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":179,"org.easymock.tests.UsageExpectAndReturnTest.longType":43,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":210,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":329,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":158,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":66,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":301,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":156,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":26,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":383,"org.easymock.tests.UsageCallCountTest.tooManyCalls":180,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":174,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":46,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":474,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":145,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":207,"org.easymock.tests.MockingTest.testNiceClassMocking":396,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":104,"org.easymock.tests.MockingTest.testClassMocking":391,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":173,"org.easymock.tests2.UsageConstraintsTest.testContains":294,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":316,"org.easymock.tests2.UsageConstraintsTest.testFind":286,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":189,"org.easymock.tests.MockTypeTest.fromEasyMockClass":380,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":242,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":319,"org.easymock.tests.UsageExpectAndReturnTest.object":200,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":90,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":473,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":337,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":164,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":126,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":241,"org.easymock.tests.UsageTest.exactCallCountByLastCall":139,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":181,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":412,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":436,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":378,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":16,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":160,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":52,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":184,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":110,"org.easymock.tests.MockClassControlTest.testHashCode":253,"org.easymock.tests2.EasyMockSupportTest.testVerify":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":464,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":437,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":386,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":183,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":310,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":353,"org.easymock.tests.UsageVarargTest.varargCharAccepted":163,"org.easymock.tests2.CaptureTest.testCaptureMultiple":369,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":348,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":430,"org.easymock.tests2.UsageTest.openCallCountByLastCall":271,"org.easymock.tests.DefaultClassInstantiatorTest.object":234,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":340,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":371,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":385,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":239,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":465,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":147,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":205,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":472,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":448,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":91,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":252,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":146,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":53,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":382,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":99,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":251,"org.easymock.tests2.UsageTest.resumeIfFailure":276,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":219,"org.easymock.tests2.StubTest.stubWithReturnValue":352,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":10,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":47,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":302,"org.easymock.tests2.SerializationTest.testAllMockedMethod":25,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":423,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":478,"org.easymock.samples.SupportTest.voteForRemovals":77,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":122,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":449,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":152,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":23,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":429,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":445,"org.easymock.tests.UsageExpectAndThrowTest.object":150,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":379,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":20,"org.easymock.tests2.DelegateToTest.testWrongClass":327,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":62,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":63,"org.easymock.samples.ConstructorCalledMockTest.testTax":6,"org.easymock.tests.UsageStrictMockTest.range":60,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":457,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":336,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":103,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":151,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":459,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":137,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":232,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":236,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":475,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":65,"org.easymock.tests2.CaptureTest.testCaptureNone":362,"org.easymock.tests.UsageUnorderedTest.message":190,"org.easymock.tests.UsageVerifyTest.twoReturns":197,"org.easymock.tests.UsageVarargTest.varargByteAccepted":168,"org.easymock.tests2.ThreadingTest.testThreadSafe":320,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":177,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":432,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":262,"org.easymock.tests2.CaptureTest.testCapture_2617107":356,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":397,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":427,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":193,"org.easymock.tests2.UsageConstraintsTest.any":292,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":229,"org.easymock.tests2.StubTest.stub":351,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":384,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":428,"org.easymock.tests.UsageExpectAndThrowTest.longType":143,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":218,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":404,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":228,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":349,"org.easymock.tests2.SerializationTest.testClass":14,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":325,"org.easymock.tests.LimitationsTest.mockNativeMethod":58,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":55,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":57,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":117,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":350,"org.easymock.tests2.NameTest.nameForMocksControl":345,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":118,"org.easymock.tests2.MockedExceptionTest.testMockedException":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":460,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":136,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":447,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":144,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":33,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":84,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":80,"org.easymock.tests.MockingTest.testNicePartialClassMocking":32,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":89,"org.easymock.tests2.CompareToTest.testNotComparable":377,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":471,"org.easymock.tests2.CaptureTest.testCaptureLast":361,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":376,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":109,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":290,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":300,"org.easymock.tests.MockingTest.testTwoMocks":392,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":3,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":40,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":148,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":274,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":304,"org.easymock.samples.ExampleTest.removeNonExistingDocument":260,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":119,"org.easymock.tests.UsageStrictMockTest.differentMethods":61,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":226,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":111,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":402,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":322,"org.easymock.tests2.MockBuilderTest.testCreateMockString":124,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":248,"org.easymock.tests.UsageExpectAndThrowTest.floatType":142,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":22,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":307,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":17,"org.easymock.tests.UsageVerifyTest.twoThrows":196,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":98,"org.easymock.samples.ExampleTest.voteAgainstRemoval":75,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":418,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":92,"org.easymock.tests.LimitationsTest.privateConstructor":399,"org.easymock.tests2.UsageConstraintsTest.testNotNull":303,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":209,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":314,"org.easymock.tests2.UsageTest.defaultResetToNice":273,"org.easymock.samples.ExampleTest.voteAgainstRemovals":73,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":419,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":51,"org.easymock.tests.UsageVarargTest.differentLength":165,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":116,"org.easymock.tests2.CallbackTest.callback":324,"org.easymock.tests2.UsageConstraintsTest.equals":443,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":13,"org.easymock.tests.UsageTest.openCallCountByLastCall":135,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":18,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":192,"org.easymock.tests.UsageCallCountTest.tooFewCalls":175,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":106,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":238,"org.easymock.tests.UsageThrowableTest.throwCheckedException":206,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":476,"org.easymock.tests.MockingTest.testStrictClassMocking":390,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":182,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":108,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":105,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":2,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":231,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":107,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":309,"org.easymock.tests.ObjectMethodsTest.testHashCode":240,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":323,"org.easymock.tests2.NameTest.nameForNiceMock":344,"org.easymock.tests2.DependencyTest.testInterfaceMocking":82,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":127,"org.easymock.samples.ExampleTest.addDocument":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":467,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":469,"org.easymock.tests2.DelegateToTest.testStubDelegate":95,"org.easymock.tests2.AnswerTest.stubAnswer":308,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":59,"org.easymock.tests.UsageVarargTest.varargLongAccepted":167,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":246,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":416,"org.easymock.tests.UsageExpectAndReturnTest.floatType":42,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":54,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":15,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":7,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":450,"org.easymock.tests.UsageThrowableTest.noUpperLimit":203,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":298,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":374,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":283,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":455,"org.easymock.tests2.SerializationTest.test":24,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":359,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":401,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":41,"org.easymock.tests2.UsageConstraintsTest.testSame":288,"org.easymock.samples.SupportTest.addDocument":264,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":461,"org.easymock.tests.GenericTest.testPackageScope":56,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":438,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":411,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":114,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":394,"org.easymock.tests2.NameTest.nameForMock":342,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":49,"org.easymock.tests2.UsageStrictMockTest.differentMethods":102,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":12,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":441,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":44,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":154,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":431,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":37,"org.easymock.tests2.MockedExceptionTest.testRealException":317,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":381,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":458,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":421,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":420,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":100,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":191,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":233,"org.easymock.tests2.NameTest.nameForStrictMock":343,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":440,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":318,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":372,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":88,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":456,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":403,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":299,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":78,"org.easymock.tests2.UsageStrictMockTest.range":101,"org.easymock.tests2.UsageConstraintsTest.lessThan":305,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":112,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":415,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":128,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":463,"org.easymock.tests2.CaptureTest.testCaptureRightOne":364,"org.easymock.tests2.UsageConstraintsTest.testOr":289,"org.easymock.tests.UsageRangeTest.combination":34,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":85,"org.easymock.tests.UsageTest.wrongArguments":134,"org.easymock.tests2.MockBuilderTest.testWithConstructor":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":462,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":249,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":45,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":408,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":50,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":405,"org.easymock.tests.UsageVarargTest.varargShortAccepted":166,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":178,"org.easymock.tests2.UsageConstraintsTest.cmpTo":293,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":446,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":410,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":272,"org.easymock.tests2.CaptureTest.testCaptureFromStub":365,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":223,"org.easymock.tests.UsageTest.unexpectedCallWithArray":133,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":244,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":176,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":201,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":245,"org.easymock.tests2.UsageConstraintsTest.constraints":284,"org.easymock.samples.ExampleTest.addAndChangeDocument":261,"org.easymock.tests.UsageStrictMockTest.testVerify":247,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":256,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":243,"org.easymock.tests2.CompareToTest.testGreateThan":21,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":211,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":360,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":69,"org.easymock.tests.LimitationsTest.abstractClass":398,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":198,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":186,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":70,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":161,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":335}}]
