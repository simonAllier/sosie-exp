[{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:65","sourceCode":"if (org.easymock.internal.Range.hasFixedCount()) {\n    return \"\" + (int);\n} else if (org.easymock.internal.Range.hasOpenCount()) {\n    return \"at least \" + (int);\n} else {\n    return ((\"between \" + (int)) + \" and \") + (int);\n}","type":"CtIfImpl"},"failures":[3,18,19,20,21,4,5,6,22,7,23,8,10,24,25,26,11,12,13,14,15,27,16],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1177","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[28,29,30,31],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:720","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[32],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,5,69,70],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1940","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[3,21,71,72,73,74,4,5,6,7,23,8,10,15,27,16],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[75,76,77,22,78,79],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[80,81],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"delegateTo"}},{"position":"org.easymock.internal.matchers.CompareTo:49","failures":[82,83,84,85,86],"status":-1,"binaryOperator":"(((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"failures":[87,88,89],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[90,91,92,93,94,95,96,97,98],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[99],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual","this":"this"}},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:721","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[117,118,119,120,121,122,123,124,125,126],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[117,119,127],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[76,128,129,3,21,130,131,4,5,6,7,23,8,10,132,78,133,134,135,136,15,27,16],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.EasyMock:1506","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(double))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[137,138,45,139,140,141,75,142,76,143,128,144,129,145,3,77,18,146,19,20,147,148,149,21,150,130,131,151,4,5,6,152,22,7,23,8,9,153,154,155,156,157,158,159,160,10,24,161,25,26,95,132,78,133,162,163,134,164,135,79,136,165,166,167,168,169,170,171,15,172,27,16,17],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"failures":[133],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:62","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>()","type":"CtAssignmentImpl"},"failures":[44,173,174,145,175,176,177,178,179,180,181,21,150,182,183,68,184,22,7,185,93,94,186,187,188,158,189,28,190,191,192,32,29,193,194,195,99,196,197,198,159,199,30,200,201,202,203,31,204,205,206,102,103,104,105,106,107,108,109,110,111,113,114,115,116,207,15],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[208,209,210],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:205","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"failures":[211,212,213,214,215,216,217,156,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.EndsWith:40","failures":[234],"status":-1,"binaryOperator":"(\"endsWith(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.And:39","sourceCode":"if (!(org.easymock.IArgumentMatcher.matches(java.lang.Object))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[192],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[91,93,94,95,98],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[44,173,174,145,175,176,177,178,179,180,181,21,150,182,183,68,184,22,7,185,93,94,186,187,188,158,189,28,190,191,192,32,29,193,194,195,99,196,197,198,159,199,30,200,201,202,203,31,204,205,206,102,103,104,105,106,107,108,109,110,111,113,114,115,116,15],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MockBuilder:178","failures":[229],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"method"}},{"position":"org.easymock.internal.RecordState:243","failures":[235,236,237,173,174,145,175,176,177,178,238,239,240,214,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,150,260,261,262,263,264,265,266,267,268,7,23,8,215,269,270,271,272,273,274,154,155,275,276,277,185,217,156,157,278,219,220,221,279,280,281,282,283,284,285,223,226,228,229,231,120,206,286,287,288,15,27,16],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[185,194,84],"status":-1,"binaryOperator":"int == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[158],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:184","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; ++int) {\n    java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n    } \n    if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n        return false;\n    } \n}","type":"CtForImpl"},"failures":[118,121,122,123,124,289,290],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[291,292],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[33,34,35,0,293,1,2,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,211,324,325,326,327,212,328,329,330,235,236,237,331,36,332,333,334,335,336,337,338,37,339,38,39,40,41,42,43,340,341,342,343,344,345,346,347,44,348,90,137,138,45,139,140,141,173,174,145,175,176,177,178,349,350,351,352,353,46,3,77,18,146,354,19,20,355,147,148,356,357,358,359,360,149,361,362,363,179,208,238,209,364,365,239,366,180,181,213,240,367,214,368,369,370,371,47,372,373,374,375,376,377,80,378,379,91,380,381,382,383,384,385,386,387,388,389,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,241,242,243,244,245,246,390,391,247,248,392,249,250,251,393,252,253,254,255,256,394,395,396,257,258,397,259,398,399,400,21,150,182,183,68,184,401,291,402,403,87,292,404,405,406,407,408,409,210,410,411,412,413,414,415,260,261,262,263,264,265,266,267,416,268,130,131,417,151,418,419,420,421,422,423,424,425,4,5,6,426,427,428,429,430,431,152,22,7,432,23,8,9,153,215,269,92,270,271,433,272,434,435,436,437,438,439,440,273,441,442,274,154,155,275,276,277,216,443,185,444,445,446,217,156,157,447,218,448,449,450,278,451,452,219,453,454,455,456,457,458,459,460,461,220,462,463,464,465,466,221,467,468,279,280,281,282,469,283,284,285,470,93,471,94,186,187,188,158,472,189,28,190,191,192,32,29,193,194,195,99,196,197,198,159,199,30,200,201,202,203,31,204,205,117,473,474,222,223,224,225,226,227,228,229,475,119,230,231,232,69,160,10,24,476,161,477,478,479,25,26,480,481,482,483,484,485,486,487,95,488,489,96,490,97,491,492,493,494,495,496,497,498,499,166,500,501,502,503,504,505,506,507,167,508,509,510,168,511,512,169,513,514,515,516,11,12,13,14,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,120,121,233,534,535,536,98,170,537,538,539,206,540,541,70,542,543,286,287,81,544,288,545,546,547,102,103,104,105,106,107,108,109,110,111,113,114,115,116,207,548,171,15,172,27,16,17],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[330,235,236,331,36,40,41,238,180,182,260,7,23,8,215,269,270,271,272,273,154,276,217,156,157,158,28,192,32,193,99,198,199,30,200,201,203,31,226,160,476,95,506,507,167,508,510,168,169,513,514,103,105,106,109,110,111,113,115,116,15,27,16],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[141,129,77,18,19,20,21,5,6,22,23,24,25,26,27],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[75,76,77,22,78,79],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"failures":[185,444,445,446,217,156,157,447,218,448,449,450,278,451,452,219,453,454,455,456,457,458,459,460,461,220,462,463,464,465,466,221,467,468,279,280,281,282,284,285,117,474,222,223,224,225,226,227,228,229,119,230,231,232,482,483,485],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:159","failures":[436,437,444,549,550,551,552],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:197","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1901","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Compare<T>(T , java.util.Comparator<? super T> , org.easymock.LogicalOperator))","type":"CtInvocationImpl"},"failures":[198],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":158,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":46,"org.easymock.tests2.UsageTest.argumentsOrdered":26,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":513,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":500,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":80,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":161,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":438,"org.easymock.tests2.DelegateToTest.testReturnException":544,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":345,"org.easymock.tests.MockingTest.testPartialClassMocking":257,"org.easymock.tests.MockClassControlTest.testToString":419,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":516,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":238,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":385,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":456,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":48,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":219,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":71,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":287,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":320,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":122,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":32,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":150,"org.easymock.tests2.UsageTest.wrongArguments":24,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":528,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":342,"org.easymock.samples.ExampleTest.answerVsDelegate":92,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":212,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":399,"org.easymock.tests2.UsageConstraintsTest.testNull":28,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":275,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":424,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":169,"org.easymock.tests2.CaptureTest.testPrimitive":105,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":184,"org.easymock.tests.UsageTest.moreThanOneArgument":3,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":67,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":155,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":266,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":426,"org.easymock.tests.UsageTest.argumentsOrdered":20,"org.easymock.tests.UsageVarargTest.varargIntAccepted":356,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":136,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":381,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":145,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":222,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":290,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":504,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":484,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":227,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":371,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":178,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":304,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":163,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":522,"org.easymock.tests.ReplayStateInvalidUsageTest.times":412,"org.easymock.tests2.DependencyTest.testClassMocking":542,"org.easymock.tests2.AnswerTest.answer":95,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":29,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":383,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":494,"org.easymock.tests2.CaptureTest.testAnd":102,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":325,"org.easymock.tests2.UsageTest.strictResetToDefault":160,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":446,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":265,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":509,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":262,"org.easymock.tests2.DelegateToTest.testDelegate":547,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":430,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":303,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":63,"org.easymock.tests.LimitationsTest.mockFinalMethod":366,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":44,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":353,"org.easymock.tests2.DependencyTest.testClassMockingSupport":543,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":130,"org.easymock.tests2.CaptureTest.testCapture1_2446744":106,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":443,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":61,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":492,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":407,"org.easymock.tests.UsageThrowableTest.throwError":37,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":327,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":505,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":416,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":468,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":307,"org.easymock.samples.PartialClassMockTest.testGetArea":215,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":408,"org.easymock.tests.MockingTest.testInterfaceMocking":397,"org.easymock.tests2.CompareToTest.testLessOrEqual":86,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":175,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":235,"org.easymock.tests2.UsageTest.niceToStrict":476,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":457,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":49,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":337,"org.easymock.tests2.ThreadingTest.testChangeDefault":537,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":369,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":226,"org.easymock.tests2.MockBuilderTest.testCreateMock":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":464,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":525,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":57,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":78,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":510,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":324,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":35,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":0,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":340,"org.easymock.tests.UsageOverloadedMethodTest.overloading":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":466,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":461,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":45,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":196,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":237,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":249,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":99,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":88,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":111,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":357,"org.easymock.tests.MockClassControlTest.testEquals":423,"org.easymock.tests2.EasyMockSupportClassTest.testAll":278,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":367,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":164,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":65,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":551,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":493,"org.easymock.tests2.CaptureTest.testCaptureAll":103,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":351,"org.easymock.tests.MockNameTest.defaultName":338,"org.easymock.tests2.UsageConstraintsTest.testMatches":197,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":405,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":267,"org.easymock.samples.ExampleTest.voteForRemovals":272,"org.easymock.tests.UsageVarargTest.allKinds":179,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":4,"org.easymock.samples.BasicClassMockTest.testPrintContent":442,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":352,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":42,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":548,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":546,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":501,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":348,"org.easymock.tests2.UsageConstraintsTest.greaterThan":159,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":451,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":261,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":157,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":308,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":404,"org.easymock.samples.ExampleTest.voteForRemoval":270,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":538,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":447,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":328,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":216,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":300,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":425,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":69,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":119,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":375,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":167,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":38,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":449,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":344,"org.easymock.tests2.CaptureTest.testCaptureFirst":116,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":81,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":374,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":508,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":481,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":141,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":391,"org.easymock.tests2.CaptureTest.testCapture2_2446744":115,"org.easymock.tests2.UsageTest.moreThanOneArgument":10,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":206,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":384,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":231,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":363,"org.easymock.tests.GenericTest.testBridgedEquals":368,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":297,"org.easymock.tests.UsageExpectAndReturnTest.longType":244,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":506,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":349,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":66,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":202,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":268,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":64,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":264,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":322,"org.easymock.tests.UsageCallCountTest.tooManyCalls":298,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":142,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":1,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":465,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":247,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":527,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":53,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":41,"org.easymock.tests.MockingTest.testNiceClassMocking":400,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":280,"org.easymock.tests.MockingTest.testClassMocking":395,"org.easymock.tests2.UsageConstraintsTest.testContains":195,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":293,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":535,"org.easymock.tests2.UsageConstraintsTest.testFind":189,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":36,"org.easymock.tests.MockTypeTest.fromEasyMockClass":326,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":431,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":94,"org.easymock.tests.UsageExpectAndReturnTest.object":392,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":185,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":526,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":512,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":123,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":359,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":335,"org.easymock.tests.UsageTest.exactCallCountByLastCall":355,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":180,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":373,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":427,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":208,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":144,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":121,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":147,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":253,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":138,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":496,"org.easymock.tests.MockClassControlTest.testHashCode":422,"org.easymock.tests2.EasyMockSupportTest.testVerify":515,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":459,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":162,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":428,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":34,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":90,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":491,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":207,"org.easymock.tests.UsageVarargTest.varargCharAccepted":358,"org.easymock.tests2.CaptureTest.testCaptureMultiple":101,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":171,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":389,"org.easymock.tests2.UsageTest.openCallCountByLastCall":477,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":514,"org.easymock.tests.DefaultClassInstantiatorTest.object":401,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":33,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":333,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":460,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":55,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":39,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":520,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":495,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":421,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":217,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":306,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":54,"org.easymock.tests.CapturesMatcherTest.test":100,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":254,"org.easymock.tests.ReplayStateInvalidCallsTest.times":312,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":321,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":313,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":420,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":221,"org.easymock.tests2.UsageTest.resumeIfFailure":480,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":211,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":483,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":347,"org.easymock.tests2.StubTest.stubWithReturnValue":70,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":118,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":203,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":248,"org.easymock.tests2.SerializationTest.testAllMockedMethod":474,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":382,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":127,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":79,"org.easymock.samples.SupportTest.voteForRemovals":273,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":213,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":498,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":60,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":388,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":488,"org.easymock.tests.UsageExpectAndThrowTest.object":58,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":209,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":200,"org.easymock.tests2.DelegateToTest.testWrongClass":545,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":173,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":310,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":174,"org.easymock.samples.ConstructorCalledMockTest.testTax":436,"org.easymock.tests.UsageStrictMockTest.range":23,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":486,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":511,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":279,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":59,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":448,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":414,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":19,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":341,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":75,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":302,"org.easymock.tests2.CaptureTest.testCaptureNone":110,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":236,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":530,"org.easymock.tests.UsageUnorderedTest.message":21,"org.easymock.tests.UsageVerifyTest.twoReturns":6,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":234,"org.easymock.tests.UsageVarargTest.varargByteAccepted":362,"org.easymock.tests2.ThreadingTest.testThreadSafe":170,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":462,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":295,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":441,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":336,"org.easymock.tests2.CaptureTest.testCapture_2617107":104,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":165,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":417,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":386,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":68,"org.easymock.tests2.UsageConstraintsTest.any":193,"org.easymock.tests2.StubTest.stub":541,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":411,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":323,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":387,"org.easymock.tests.UsageExpectAndThrowTest.longType":51,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":346,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":87,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":410,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":172,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":166,"org.easymock.tests2.SerializationTest.testClass":117,"org.easymock.tests.LimitationsTest.mockNativeMethod":239,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":214,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":256,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":519,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":318,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":17,"org.easymock.tests2.NameTest.nameForMocksControl":14,"org.easymock.tests2.MockedExceptionTest.testMockedException":534,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":521,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":452,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":354,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":471,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":52,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":259,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":274,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":229,"org.easymock.tests.MockingTest.testNicePartialClassMocking":258,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":277,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":517,"org.easymock.tests2.CaptureTest.testCaptureLast":109,"org.easymock.tests2.CompareToTest.testCompareEqual":84,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":131,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":192,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":285,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":317,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":201,"org.easymock.tests.MockingTest.testTwoMocks":396,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":314,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":470,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":241,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":56,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":25,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":204,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":533,"org.easymock.samples.ExampleTest.removeNonExistingDocument":434,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":524,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":409,"org.easymock.tests.UsageStrictMockTest.differentMethods":8,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":497,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":532,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":402,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":539,"org.easymock.tests2.ConstraintsToStringTest.andToString":135,"org.easymock.tests2.MockBuilderTest.testCreateMockString":232,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":453,"org.easymock.tests.UsageExpectAndThrowTest.floatType":50,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":450,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":96,"org.easymock.tests.UsageVerifyTest.twoThrows":5,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":220,"org.easymock.samples.ExampleTest.voteAgainstRemoval":271,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":330,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":378,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":156,"org.easymock.tests.LimitationsTest.privateConstructor":365,"org.easymock.tests2.UsageConstraintsTest.testNotNull":31,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":43,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":233,"org.easymock.tests2.UsageTest.defaultResetToNice":479,"org.easymock.samples.ExampleTest.voteAgainstRemovals":269,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":252,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":379,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":518,"org.easymock.tests.UsageVarargTest.differentLength":360,"org.easymock.tests2.CallbackTest.callback":98,"org.easymock.tests2.UsageConstraintsTest.equals":472,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":444,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":143,"org.easymock.tests.UsageTest.openCallCountByLastCall":146,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":186,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":183,"org.easymock.tests.UsageCallCountTest.tooFewCalls":2,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":282,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":343,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":531,"org.easymock.tests.UsageThrowableTest.throwCheckedException":40,"org.easymock.tests.MockingTest.testStrictClassMocking":394,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":76,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":181,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":284,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":523,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":281,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":413,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":283,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":97,"org.easymock.tests2.CompareToTest.testGreateOrEqual":85,"org.easymock.tests.ObjectMethodsTest.testHashCode":334,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":289,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":540,"org.easymock.tests2.NameTest.nameForNiceMock":13,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":316,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":311,"org.easymock.tests2.DependencyTest.testInterfaceMocking":286,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":124,"org.easymock.samples.ExampleTest.addDocument":433,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":463,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":467,"org.easymock.tests2.DelegateToTest.testStubDelegate":288,"org.easymock.tests2.AnswerTest.stubAnswer":490,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":7,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":475,"org.easymock.tests.UsageVarargTest.varargLongAccepted":361,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":9,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":377,"org.easymock.tests.UsageExpectAndReturnTest.floatType":243,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":255,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":120,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":437,"org.easymock.tests2.ConstraintsToStringTest.orToString":132,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":503,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":139,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":199,"org.easymock.tests.UsageThrowableTest.noUpperLimit":339,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":187,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":482,"org.easymock.tests2.SerializationTest.test":473,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":107,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":89,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":291,"org.easymock.tests2.UsageConstraintsTest.testSame":190,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":242,"org.easymock.samples.SupportTest.addDocument":440,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":469,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":301,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":210,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":454,"org.easymock.tests.GenericTest.testPackageScope":240,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":429,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":372,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":502,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":398,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":299,"org.easymock.tests2.NameTest.nameForMock":11,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":250,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":552,"org.easymock.tests2.UsageStrictMockTest.differentMethods":16,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":445,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":245,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":62,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":332,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":263,"org.easymock.tests2.MockedExceptionTest.testRealException":536,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":329,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":380,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":128,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":91,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":415,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":182,"org.easymock.tests2.NameTest.nameForStrictMock":12,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":225,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":93,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":276,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":485,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":403,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":30,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":72,"org.easymock.tests.ErrorMessageTest.testGetters":73,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":223,"org.easymock.tests2.UsageStrictMockTest.range":27,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":305,"org.easymock.tests2.UsageConstraintsTest.lessThan":205,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":499,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":507,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":125,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":458,"org.easymock.tests2.CaptureTest.testCaptureRightOne":113,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":529,"org.easymock.tests2.UsageConstraintsTest.testOr":191,"org.easymock.tests.UsageRangeTest.combination":260,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":154,"org.easymock.tests.UsageTest.wrongArguments":18,"org.easymock.tests2.MockBuilderTest.testWithConstructor":549,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":455,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":418,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":246,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":370,"org.easymock.tests.UsageVarargTest.varargShortAccepted":149,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":292,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":296,"org.easymock.tests2.UsageConstraintsTest.cmpTo":194,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":319,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":489,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":309,"org.easymock.tests2.CompareToTest.testLessThan":82,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":47,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":478,"org.easymock.tests2.CaptureTest.testCaptureFromStub":114,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":406,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":224,"org.easymock.tests.UsageTest.unexpectedCallWithArray":77,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":315,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":22,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":294,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":550,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":393,"org.easymock.tests2.CaptureTest.testCapture":112,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":432,"org.easymock.tests2.UsageConstraintsTest.constraints":188,"org.easymock.samples.ExampleTest.addAndChangeDocument":435,"org.easymock.tests2.ConstraintsToStringTest.notToString":133,"org.easymock.tests.UsageStrictMockTest.testVerify":153,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":439,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":152,"org.easymock.tests2.CompareToTest.testGreateThan":83,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":350,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":108,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":176,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":390,"org.easymock.tests.LimitationsTest.abstractClass":364,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":177,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":140,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":168,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":148,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":74}}]
