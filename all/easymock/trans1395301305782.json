[{"transplant":{"position":"org.easymock.internal.MocksControl:295","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:230","sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[1],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[14,15,16,17,18,19],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"this.org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[20,21,22,23,24,25,26,27,28,29,30,31,32,33],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"capture"}},{"transplant":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[34],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,142,143,143,144],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:180","sourceCode":"if ((java.lang.Class<?>[].int) != (java.lang.Object[].int)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:184","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; ++int) {\n    java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n    } \n    if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n        return false;\n    } \n}","type":"CtForImpl"},"failures":[145,146,147,148,149,72,150],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[2,3,4,38,39,40,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,16,5,177,178,6,7,179,180,181,182,183,184,185,186,187,188,189,50,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,8,17,224,225,226,227,228,229,230,231,232,233,234,235,52,53,236,237,238,239,240,241,242,243,244,245,246,247,60,248,249,250,251,252,253,63,9,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,71,279,280,281,282,10,283,284,11,12,73,285,74,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,75,76,77,78,325,79,80,326,327,328,329,81,86,87,88,89,92,94,95,96,97,330,331,332,333,334,13,335,336,337,338,339,340,341,342,343,344,345,346,34,347,348,349,350,351,21,22,23,24,25,26,27,28,352,29,30,31,32,33,353,354,355,356,357,358,359,101,104,114,120,123,124,360,125,126,127,129,132,134,361,362,363,364,140,141,365,142,142,143,143,144,366,367,368,369,370,371,372,373],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[145,146,147,374,71,72,73,150,90],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[2,3,4,35,36,37,38,39,375,40,376,377,41,378,379,380,381,0,151,152,153,154,155,156,157,158,159,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,42,43,44,45,46,47,407,48,160,161,408,409,410,162,163,164,165,411,166,167,412,168,169,170,171,172,413,414,173,174,415,416,417,418,419,420,49,175,176,16,5,177,178,6,7,179,180,181,182,183,184,185,186,187,188,189,50,190,191,192,193,194,195,196,197,198,199,200,201,202,421,422,423,424,425,426,427,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,8,17,224,225,226,227,228,229,230,231,232,233,234,235,428,429,430,51,52,53,54,55,56,431,432,433,434,57,435,436,236,237,238,239,437,240,438,241,242,439,243,440,441,244,442,245,246,247,58,59,60,61,248,249,250,251,252,253,443,444,445,62,63,64,65,66,67,68,69,446,447,448,449,450,451,452,453,9,454,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,455,456,457,458,459,274,460,461,462,463,464,465,466,275,276,277,467,278,71,72,468,279,469,470,471,472,473,280,474,475,476,477,478,479,281,282,10,283,284,11,12,73,285,74,286,287,288,289,480,290,291,292,293,294,295,481,296,297,298,299,300,301,302,303,304,305,306,307,482,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,75,76,77,78,483,325,79,80,484,326,327,328,329,81,485,83,84,486,85,86,87,88,150,89,487,90,91,92,488,94,95,96,97,330,489,331,490,332,333,334,13,335,336,337,338,339,340,341,342,343,344,345,491,492,346,34,347,493,348,349,350,351,21,22,23,24,25,26,27,28,352,29,30,31,32,33,353,354,355,356,357,358,359,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,360,125,126,127,128,494,129,130,131,132,133,134,135,136,137,495,496,361,362,138,497,498,499,139,500,501,363,364,140,141,365,142,143,144,366,367,368,369,370,371,502,372,373],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[288,289,291,293,294,481,305,309,21,23,30],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:189","sourceCode":"org.easymock.internal.IMocksBehavior = new org.easymock.internal.MocksBehavior(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtAssignmentImpl"},"failures":[2,3,4,35,36,37,38,39,375,40,376,377,41,378,379,380,381,0,151,152,153,154,155,156,157,158,159,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,42,43,44,45,46,47,48,160,161,408,409,410,162,163,164,165,411,166,167,412,168,169,170,171,172,414,173,174,415,416,417,418,419,420,49,175,176,16,5,177,178,6,7,179,180,181,182,183,184,185,186,187,188,189,50,190,191,192,193,194,195,196,197,198,199,200,201,202,421,422,423,424,425,426,427,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,8,17,224,225,226,227,228,229,230,231,232,233,234,235,428,429,430,51,52,53,54,55,56,431,432,433,434,57,435,436,236,237,238,239,437,240,438,241,242,439,243,440,441,244,442,245,246,247,58,59,60,61,248,249,250,251,252,253,443,444,445,62,63,64,65,66,67,68,69,446,447,448,449,450,451,452,453,9,454,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,455,456,457,458,459,274,460,461,462,463,464,465,466,275,276,277,467,278,71,72,279,469,470,471,472,473,280,474,475,476,477,478,479,281,282,10,283,284,11,12,73,285,74,286,287,288,289,480,290,291,292,293,294,295,481,296,297,298,299,300,301,302,303,304,305,306,307,482,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,75,76,77,78,483,325,79,80,484,326,327,328,329,81,83,84,85,86,87,88,89,487,90,91,92,94,95,96,97,330,489,331,490,332,333,334,13,335,336,337,338,339,340,341,342,343,344,345,491,492,346,34,347,493,348,349,350,351,21,22,23,24,25,26,27,28,352,29,30,31,32,33,353,354,355,356,357,358,359,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,360,125,126,127,128,494,129,130,131,132,133,134,135,136,137,495,496,361,362,138,139,500,501,363,364,140,141,365,142,143,144,366,367,368,369,370,371,502,372,373],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:98","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[52,53,54,55],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if (org.easymock.ConstructorArgs != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:194","sourceCode":"try {\n    java.lang.reflect.Constructor<?> = java.lang.Class<?>.getDeclaredConstructor(org.easymock.ConstructorArgs.getConstructor().getParameterTypes());\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"Fail to find constructor for param types\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[71,72,73,77,80,90,100,102,108,113,121,122,124,130,132,135,142,142,143,143],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"args"}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:72","sourceCode":"java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","type":"CtAssignmentImpl"},"failures":[503,73,285,74],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","failures":[288,289,291,293,294,481,305,309,21,23,30],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:235","failures":[71,72,73,485,486,150,90,504,488,505,506,507,130,142,143],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[508,311],"status":-1,"binaryOperator":"int < 0","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[2,151,152,153,154,162,174,178,6,191,203,204,207,209,210,211,212,214,215,216,217,219,220,221,222,223,8,225,226,232,254,255,258,260,261,262,263,265,266,267,268,270,271,272,273,278,279,284,11,286,287,288,290,291,292,293,298,299,300,301,303,304,310,311,331,332,13,337,338,339,343,22,23,25,26,28,352,32,33,353,355,356,357,372],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[73,90],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[378,381,0,390,178,6,207,211,212,214,217,258,262,263,265,268,284,11],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[509],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"failures":[510],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[288,289,291,293,294,481,305,309,21,23,30],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.EqualsWithDelta:40","failures":[304],"status":-1,"binaryOperator":"(((java.lang.Number.doubleValue()) - (java.lang.Number.doubleValue())) <= (java.lang.Number.doubleValue())) && ((java.lang.Number.doubleValue()) <= ((java.lang.Number.doubleValue()) + (java.lang.Number.doubleValue())))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:148","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[46,511,512],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[14,15,16,17,18,19],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:62","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>, java.lang.Integer.java.lang.Integer)","type":"CtInvocationImpl"},"failures":[38,39,40,181,60,276,71,75,76,77,78,325,79,80,83,86,88,89,92,358,101,104,114,120,123,360,125,127,144],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"failures":[14,15,513,16,8,17,224,227,228,18,514,19,515,13,335,341,342],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[404],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"failures":[34,142,142,143,143],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"propertyFileName"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[16,5,178,6,179,10,284,11],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[486],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[14,15,16,17,18,19],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":289,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":223,"org.easymock.tests2.UsageTest.argumentsOrdered":342,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":322,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":460,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":392,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":337,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":365,"org.easymock.tests2.DelegateToTest.testReturnException":275,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":249,"org.easymock.tests.MockingTest.testPartialClassMocking":38,"org.easymock.tests.MockClassControlTest.testToString":64,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":493,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":447,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":401,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":108,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":104,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":203,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":362,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":145,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":295,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":198,"org.easymock.tests2.UsageTest.wrongArguments":335,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":479,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":238,"org.easymock.samples.ExampleTest.answerVsDelegate":367,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":57,"org.easymock.tests2.UsageConstraintsTest.testNull":291,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":377,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":125,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":69,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":321,"org.easymock.tests2.CaptureTest.testPrimitive":24,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":202,"org.easymock.tests.UsageTest.moreThanOneArgument":8,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":222,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":360,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":187,"org.easymock.tests.UsageTest.argumentsOrdered":228,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":378,"org.easymock.tests.UsageVarargTest.varargIntAccepted":165,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":397,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":180,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":149,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":81,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":498,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":464,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":87,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":384,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":184,"org.easymock.tests.ReplayStateInvalidUsageTest.times":441,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":280,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":510,"org.easymock.tests2.DependencyTest.testClassMocking":495,"org.easymock.tests2.AnswerTest.answer":345,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":481,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":399,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":329,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":432,"org.easymock.tests2.CaptureTest.testAnd":21,"org.easymock.tests2.UsageTest.strictResetToDefault":334,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":486,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":132,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":186,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":153,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":316,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":0,"org.easymock.tests2.DelegateToTest.testDelegate":278,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":218,"org.easymock.tests.LimitationsTest.mockFinalMethod":61,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":252,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":159,"org.easymock.tests2.DependencyTest.testClassMockingSupport":496,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":425,"org.easymock.tests2.CaptureTest.testCapture1_2446744":25,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":494,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":216,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":327,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":438,"org.easymock.tests.UsageThrowableTest.throwError":190,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":434,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":465,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":413,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":189,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":505,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":122,"org.easymock.samples.PartialClassMockTest.testGetArea":144,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":241,"org.easymock.tests.MockingTest.testInterfaceMocking":375,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":181,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":409,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":109,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":49,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":204,"org.easymock.tests2.UsageTest.niceToStrict":336,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":382,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":86,"org.easymock.tests2.MockBuilderTest.testCreateMock":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":117,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":476,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":18,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":212,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":317,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":431,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":445,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":230,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":236,"org.easymock.tests.UsageOverloadedMethodTest.overloading":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":113,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":452,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":300,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":414,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":265,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":511,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":299,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":29,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":411,"org.easymock.tests2.EasyMockSupportClassTest.testAll":101,"org.easymock.tests.MockClassControlTest.testEquals":68,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":53,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":514,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":220,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":157,"org.easymock.tests2.CaptureTest.testCaptureAll":22,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":328,"org.easymock.tests.MockNameTest.defaultName":421,"org.easymock.tests2.UsageConstraintsTest.testMatches":301,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":437,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":188,"org.easymock.samples.ExampleTest.voteForRemovals":371,"org.easymock.tests.UsageVarargTest.allKinds":172,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":2,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":158,"org.easymock.samples.BasicClassMockTest.testPrintContent":141,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":196,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":281,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":467,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":461,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":253,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":407,"org.easymock.tests2.UsageConstraintsTest.greaterThan":303,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":102,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":152,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":135,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":48,"org.easymock.samples.ExampleTest.voteForRemoval":368,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":136,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":356,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":509,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":435,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":499,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":128,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":50,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":333,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":389,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":314,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":99,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":248,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":466,"org.easymock.tests2.CaptureTest.testCaptureFirst":33,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":388,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":315,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":344,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":454,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":261,"org.easymock.tests2.CaptureTest.testCapture2_2446744":32,"org.easymock.tests2.UsageTest.moreThanOneArgument":13,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":358,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":400,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":92,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":171,"org.easymock.tests.GenericTest.testBridgedEquals":55,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":429,"org.easymock.tests.UsageExpectAndReturnTest.longType":257,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":155,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":312,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":93,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":221,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":482,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":415,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":219,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":423,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":185,"org.easymock.tests.UsageCallCountTest.tooManyCalls":430,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":118,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":262,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":478,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":208,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":195,"org.easymock.tests.MockingTest.testNiceClassMocking":41,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":76,"org.easymock.tests.MockingTest.testClassMocking":36,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":82,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":231,"org.easymock.tests2.UsageConstraintsTest.testContains":298,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":97,"org.easymock.tests2.UsageConstraintsTest.testFind":290,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":174,"org.easymock.tests.MockTypeTest.fromEasyMockClass":433,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":175,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":332,"org.easymock.tests.UsageExpectAndReturnTest.object":264,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":129,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":477,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":320,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":167,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":146,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":419,"org.easymock.tests.UsageTest.exactCallCountByLastCall":229,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":160,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":387,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":446,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":379,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":513,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":72,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":163,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":270,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":451,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":456,"org.easymock.tests.MockClassControlTest.testHashCode":67,"org.easymock.tests2.EasyMockSupportTest.testVerify":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":111,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":380,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":449,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":444,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":326,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":489,"org.easymock.tests.UsageVarargTest.varargCharAccepted":166,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":406,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":282,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":405,"org.easymock.tests2.UsageTest.openCallCountByLastCall":338,"org.easymock.tests.DefaultClassInstantiatorTest.object":42,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":323,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":443,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":417,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":112,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":210,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":193,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":472,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":455,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":133,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":66,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":209,"org.easymock.tests.CapturesMatcherTest.test":20,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":271,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":422,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":120,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":65,"org.easymock.tests2.UsageTest.resumeIfFailure":343,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":56,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":497,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":251,"org.easymock.tests2.StubTest.stubWithReturnValue":354,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":150,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":263,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":308,"org.easymock.tests2.SerializationTest.testAllMockedMethod":74,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":398,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":507,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":19,"org.easymock.samples.SupportTest.voteForRemovals":364,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":51,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":458,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":215,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":503,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":404,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":491,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":448,"org.easymock.tests.UsageExpectAndThrowTest.object":213,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":306,"org.easymock.tests2.DelegateToTest.testWrongClass":277,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":246,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":247,"org.easymock.tests.UsageStrictMockTest.range":178,"org.easymock.samples.ConstructorCalledMockTest.testTax":142,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":500,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":319,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":75,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":214,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":88,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":442,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":98,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":227,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":237,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":14,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":410,"org.easymock.tests2.CaptureTest.testCaptureNone":352,"org.easymock.tests.UsageUnorderedTest.message":162,"org.easymock.tests.UsageVerifyTest.twoReturns":4,"org.easymock.tests.UsageVarargTest.varargByteAccepted":170,"org.easymock.tests2.ThreadingTest.testThreadSafe":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":115,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":235,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":420,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":140,"org.easymock.tests2.CaptureTest.testCapture_2617107":23,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":515,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":427,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":402,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":201,"org.easymock.tests2.UsageConstraintsTest.any":296,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":440,"org.easymock.tests2.StubTest.stub":353,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":424,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":403,"org.easymock.tests.UsageExpectAndThrowTest.longType":206,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":250,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":46,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":243,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":283,"org.easymock.tests2.SerializationTest.testClass":73,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":274,"org.easymock.tests.LimitationsTest.mockNativeMethod":60,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":54,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":273,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":471,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":12,"org.easymock.tests2.NameTest.nameForMocksControl":351,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":473,"org.easymock.tests2.MockedExceptionTest.testMockedException":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":103,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":226,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":490,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":40,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":207,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":123,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":89,"org.easymock.tests.MockingTest.testNicePartialClassMocking":39,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":127,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":469,"org.easymock.tests2.CaptureTest.testCaptureLast":28,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":426,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":80,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":294,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":307,"org.easymock.tests.MockingTest.testTwoMocks":37,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":484,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":254,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":211,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":341,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":310,"org.easymock.samples.ExampleTest.removeNonExistingDocument":502,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":475,"org.easymock.tests.UsageStrictMockTest.differentMethods":6,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":242,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":457,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":44,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":357,"org.easymock.tests2.MockBuilderTest.testCreateMockString":94,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":105,"org.easymock.tests.UsageExpectAndThrowTest.floatType":205,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":100,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":346,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":468,"org.easymock.tests.UsageVerifyTest.twoThrows":3,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":450,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":114,"org.easymock.samples.ExampleTest.voteAgainstRemoval":369,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":408,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":393,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":134,"org.easymock.tests.LimitationsTest.privateConstructor":59,"org.easymock.tests2.UsageConstraintsTest.testNotNull":309,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":95,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":197,"org.easymock.tests2.UsageTest.defaultResetToNice":340,"org.easymock.samples.ExampleTest.voteAgainstRemovals":366,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":394,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":269,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":470,"org.easymock.tests.UsageVarargTest.differentLength":412,"org.easymock.tests2.CallbackTest.callback":279,"org.easymock.tests2.UsageConstraintsTest.equals":480,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":130,"org.easymock.tests.UsageTest.openCallCountByLastCall":225,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":286,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":200,"org.easymock.tests.UsageCallCountTest.tooFewCalls":233,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":78,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":239,"org.easymock.tests.UsageThrowableTest.throwCheckedException":194,"org.easymock.tests.MockingTest.testStrictClassMocking":35,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":15,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":161,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":79,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":474,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":77,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":244,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":325,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":347,"org.easymock.tests.ObjectMethodsTest.testHashCode":418,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":148,"org.easymock.tests2.NameTest.nameForNiceMock":350,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":359,"org.easymock.tests2.DependencyTest.testInterfaceMocking":361,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":147,"org.easymock.samples.ExampleTest.addDocument":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":121,"org.easymock.tests2.DelegateToTest.testStubDelegate":276,"org.easymock.tests2.AnswerTest.stubAnswer":34,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":5,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":487,"org.easymock.tests.UsageVarargTest.varargLongAccepted":169,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":391,"org.easymock.tests.UsageExpectAndReturnTest.floatType":256,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":272,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":71,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":143,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":463,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":453,"org.easymock.tests.UsageThrowableTest.noUpperLimit":191,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":304,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":287,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":138,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":26,"org.easymock.tests2.SerializationTest.test":285,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":512,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":43,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":255,"org.easymock.tests2.UsageConstraintsTest.testSame":292,"org.easymock.samples.SupportTest.addDocument":363,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":483,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":439,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":106,"org.easymock.tests.GenericTest.testPackageScope":52,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":381,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":386,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":462,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":376,"org.easymock.tests2.NameTest.nameForMock":348,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":266,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":488,"org.easymock.tests2.UsageStrictMockTest.differentMethods":11,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":131,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":258,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":217,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":416,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":154,"org.easymock.tests2.MockedExceptionTest.testRealException":330,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":436,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":501,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":396,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":506,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":395,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":10,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":199,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":245,"org.easymock.tests2.NameTest.nameForStrictMock":349,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":85,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":331,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":126,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":139,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":45,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":305,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":83,"org.easymock.tests2.UsageStrictMockTest.range":284,"org.easymock.tests2.UsageConstraintsTest.lessThan":311,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":459,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":390,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":110,"org.easymock.tests2.CaptureTest.testCaptureRightOne":30,"org.easymock.tests2.UsageConstraintsTest.testOr":293,"org.easymock.tests.UsageRangeTest.combination":151,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":124,"org.easymock.tests.UsageTest.wrongArguments":224,"org.easymock.tests2.MockBuilderTest.testWithConstructor":485,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":107,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":63,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":259,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":267,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":383,"org.easymock.tests.UsageVarargTest.varargShortAccepted":168,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":47,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":428,"org.easymock.tests2.UsageConstraintsTest.cmpTo":297,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":492,"org.easymock.tests2.CompareToTest.testLessThan":508,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":385,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":339,"org.easymock.tests2.CaptureTest.testCaptureFromStub":31,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":240,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":84,"org.easymock.tests.UsageTest.unexpectedCallWithArray":17,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":16,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":234,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":504,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":268,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":177,"org.easymock.tests2.UsageConstraintsTest.constraints":288,"org.easymock.samples.ExampleTest.addAndChangeDocument":372,"org.easymock.tests.UsageStrictMockTest.testVerify":179,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":373,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":176,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":156,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":27,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":182,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":70,"org.easymock.tests.LimitationsTest.abstractClass":58,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":260,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":183,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":9,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":164,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":318}}]
