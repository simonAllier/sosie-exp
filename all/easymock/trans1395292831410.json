[{"position":"org.easymock.internal.Range:44","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,7,17,18,21,23,24,25,26,27,28,29,30,31,33,34,35,36,37,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,65,67,71,72,73,74,75,78,79,80,81,87,88,99,100,103,104,105,106,107,109,110,111,112,113,114,117,118,119,120,121,122,136,150,151,153,154,157,160,163,164,168,169,172,173,176,177,178,180,181,182,183,186,189,191,239,240,241,242,243,244,245,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,270,271,273,278,279,282,283,284,285,286,289,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,333,334,335,337,338,340,341,342,343,344,346,347,354,364,365,366,367,368,381,382,383,384,386,409,410,411,412,413,414,415,419,420,423,426,434,435,436,437,443,447,449,452,453,454,455,456,457,458,459,461,462],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:318","failures":[345,348],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.RecordState:136","failures":[15,15,16,16,34,35,39,40,41,42,48,50,51,53,54,60,61,62,115,173,245,282,283,284,285,286,311,312,313,314,315,419,420,423,449,458,459],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[10,11,12,15,15,16,16,27,28,29,67,68,488,489,490,491,492,493,494,81,495,83,84,86,87,88,89,91,93,94,95,496,497,97,118,120,162,163,164,165,168,169,178,179,181,182,183,184,186,187,188,189,190,191,192,193,194,207,211,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,267,268,269,270,271,273,276,277,278,279,280,281,287,288,289,290,353,354,355,356,357,358,359,360,373,378,399,401,402,403,404,405,406,408,409],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"name":"name","method":"result","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < (java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:40","sourceCode":"if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[498,499,500,501,151,152,158,159,502,503,504,386,387,388,391,392,448],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[92],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:206","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:214","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[15,16,67,68,69,82,85,90,93,96,118,187],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[118,119,120,505],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MocksControl:105","failures":[0,1,2,3,4,5,6,7,8,9,13,14,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,65,66,70,71,72,73,74,75,76,77,78,79,80,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,167,170,171,172,173,174,175,176,177,180,195,196,197,198,199,200,201,202,203,204,205,206,212,213,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,272,274,275,282,283,284,285,286,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,361,362,363,364,365,366,367,368,369,370,371,372,376,377,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[15,15,16,16,34,35,39,40,41,42,48,50,51,53,54,60,61,62,115,173,245,282,283,284,285,286,311,312,313,314,315,419,420,423,445,449,458,459],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[498,500,502,503,387,448],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:103","sourceCode":"continue","type":"CtContinueImpl"},"failures":[280],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:324","failures":[349,350,456],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:42","sourceCode":"throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()","type":"CtThrowImpl"},"failures":[424],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[34,53,59,506],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:159","failures":[15,16,82,507,96,187],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[293,295,309,310,311,458],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:49","sourceCode":"org.easymock.internal.Injection.getAnnotation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:237","sourceCode":"org.easymock.internal.Injection = org.easymock.internal.Injection","type":"CtAssignmentImpl"},"failures":[8,9,137,143,195,201],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[498,500,502,503,387,448],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:94","failures":[36,37,39,40,41,42,43,44,45,46,55,56,60,61,104,105,106,107,114,115],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:206","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"failures":[128,153],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:106","failures":[489,492,493,87,190,191],"status":-1,"binaryOperator":"java.lang.Class<?>[] == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:48","sourceCode":"final java.lang.Class<?>[] java.lang.Class<?>[] = java.lang.reflect.Constructor<?>.getParameterTypes()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:84","sourceCode":"return this","type":"CtReturnImpl"},"failures":[12,81,83,84,87,88,89,91,94,95,97,118,184,280,373,378],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"failures":[362,432,445],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[498,500,502,503,387,448],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:262","failures":[27,28,29,30,122,149,156,239,240,241,242,243,244,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,345,347,348,349,350,351,352,370,371,372,385,390,421,422,428,429,430,441,456,462],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,27,28,29,30,31,33,34,35,36,37,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,65,66,67,71,72,73,74,75,78,79,80,81,83,87,88,89,91,94,95,97,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,142,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,189,190,191,192,200,217,220,230,236,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,270,271,273,278,279,282,283,284,285,286,289,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,333,334,335,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,364,365,366,367,368,381,382,383,384,385,386,387,388,389,390,391,392,393,409,412,413,414,415,416,417,418,419,420,421,422,423,508,508,427,434,436,437,438,440,441,444,446,447,448,449,450,451,452,453,455,456,457,458,459,460,461,462],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[32],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,15,16,16,17,18,19,20,21,22,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,83,86,87,88,89,93,94,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,128,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,164,165,167,168,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,195,196,197,198,199,200,201,202,203,204,205,206,207,211,212,213,214,217,219,220,222,223,226,227,228,229,230,232,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,376,378,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,401,402,403,404,405,406,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[1,31,33,75,77,78,80,136,438,477],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[324],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[486],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"failures":[152,158,159,175,509,510,387,388,391,392,427,448,451,456,457],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,7,8,9,10,11,13,14,17,18,19,20,21,23,27,28,29,30,31,33,34,35,36,37,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,65,66,75,78,79,80,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,142,149,150,151,152,153,154,155,156,158,159,160,161,162,165,167,171,172,173,174,175,176,177,178,179,180,181,182,183,186,192,200,217,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,278,279,281,282,283,284,285,286,289,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,317,318,333,334,335,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,359,360,385,386,388,389,390,391,392,393,394,397,409,412,413,414,415,417,418,419,420,421,422,423,427,434,436,437,438,440,441,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":37,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":385,"org.easymock.tests2.UsageTest.argumentsOrdered":159,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":133,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":143,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":474,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":154,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":8,"org.easymock.tests2.DelegateToTest.testReturnException":99,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":240,"org.easymock.tests.MockingTest.testPartialClassMocking":270,"org.easymock.tests.MockClassControlTest.testToString":355,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":22,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":483,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":224,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":220,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":247,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":66,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":44,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":419,"org.easymock.tests2.UsageTest.wrongArguments":152,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":206,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":383,"org.easymock.samples.ExampleTest.answerVsDelegate":1,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":378,"org.easymock.tests2.UsageConstraintsTest.testNull":40,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":275,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":181,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":132,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":360,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":488,"org.easymock.tests2.CaptureTest.testPrimitive":107,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":423,"org.easymock.tests.UsageTest.moreThanOneArgument":386,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":266,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":180,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":313,"org.easymock.tests.UsageTest.argumentsOrdered":392,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":316,"org.easymock.tests.UsageVarargTest.varargIntAccepted":335,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":479,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":282,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":81,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":147,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":209,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":88,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":466,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":286,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":200,"org.easymock.tests.ReplayStateInvalidUsageTest.times":329,"org.easymock.tests2.DependencyTest.testClassMocking":63,"org.easymock.tests2.AnswerTest.answer":75,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":45,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":481,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":74,"org.easymock.tests2.CaptureTest.testAnd":104,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":375,"org.easymock.tests2.UsageTest.strictResetToDefault":150,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":189,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":85,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":312,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":436,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":127,"org.easymock.tests2.DelegateToTest.testDelegate":103,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":320,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":262,"org.easymock.tests.LimitationsTest.mockFinalMethod":290,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":243,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":368,"org.easymock.tests2.DependencyTest.testClassMockingSupport":64,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":424,"org.easymock.tests2.CaptureTest.testCapture1_2446744":108,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":185,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":260,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":72,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":323,"org.easymock.tests.UsageThrowableTest.throwError":345,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":377,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":463,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":148,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":238,"org.easymock.samples.PartialClassMockTest.testGetArea":12,"org.easymock.tests.MockingTest.testInterfaceMocking":272,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":324,"org.easymock.tests2.CompareToTest.testLessOrEqual":506,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":283,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":362,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":399,"org.easymock.tests2.UsageTest.niceToStrict":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":225,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":248,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":464,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":87,"org.easymock.tests2.MockBuilderTest.testCreateMock":94,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":233,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":203,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":498,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":256,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":128,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":374,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":430,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":410,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":381,"org.easymock.tests.UsageOverloadedMethodTest.overloading":461,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":235,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":441,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":50,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":460,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":302,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":49,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":113,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":336,"org.easymock.tests2.EasyMockSupportClassTest.testAll":217,"org.easymock.tests.MockClassControlTest.testEquals":359,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":279,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":499,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":264,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":489,"org.easymock.tests2.CaptureTest.testCaptureAll":105,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":73,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":366,"org.easymock.tests.MockNameTest.defaultName":369,"org.easymock.tests2.UsageConstraintsTest.testMatches":51,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":314,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":321,"org.easymock.samples.ExampleTest.voteForRemovals":5,"org.easymock.tests.UsageVarargTest.allKinds":344,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":455,"org.easymock.samples.BasicClassMockTest.testPrintContent":11,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":367,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":351,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":171,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":144,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":102,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":244,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":407,"org.easymock.tests2.UsageConstraintsTest.greaterThan":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":218,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":435,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":192,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":408,"org.easymock.samples.ExampleTest.voteForRemoval":2,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":18,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":193,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":496,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":379,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":210,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":184,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":409,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":149,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":93,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":471,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":125,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":215,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":239,"org.easymock.tests2.CaptureTest.testCaptureFirst":117,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":98,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":470,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":126,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":161,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":444,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":298,"org.easymock.tests2.UsageTest.moreThanOneArgument":151,"org.easymock.tests2.CaptureTest.testCapture2_2446744":116,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":20,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":482,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":95,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":343,"org.easymock.tests.GenericTest.testBridgedEquals":281,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":417,"org.easymock.tests.UsageExpectAndReturnTest.longType":294,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":123,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":364,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":497,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":265,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":445,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":58,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":263,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":311,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":371,"org.easymock.tests.UsageCallCountTest.tooManyCalls":418,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":412,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":234,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":299,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":205,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":252,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":350,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":163,"org.easymock.tests.MockingTest.testNiceClassMocking":276,"org.easymock.tests.MockingTest.testClassMocking":268,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":495,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":411,"org.easymock.tests2.UsageConstraintsTest.testContains":48,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":29,"org.easymock.tests2.UsageConstraintsTest.testFind":39,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":462,"org.easymock.tests.MockTypeTest.fromEasyMockClass":376,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":446,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":33,"org.easymock.tests.UsageExpectAndReturnTest.object":301,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":186,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":204,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":131,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":338,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":397,"org.easymock.tests.UsageTest.exactCallCountByLastCall":393,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":245,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":469,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":431,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":317,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":504,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":68,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":307,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":333,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":440,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":138,"org.easymock.tests.MockClassControlTest.testHashCode":358,"org.easymock.tests2.EasyMockSupportTest.testVerify":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":227,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":318,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":438,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":429,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":71,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":70,"org.easymock.tests.UsageVarargTest.varargCharAccepted":337,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":400,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":172,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":487,"org.easymock.tests2.UsageTest.openCallCountByLastCall":155,"org.easymock.tests.DefaultClassInstantiatorTest.object":401,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":134,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":428,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":395,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":510,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":228,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":254,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":493,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":348,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":198,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":137,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":190,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":357,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":253,"org.easymock.tests.CapturesMatcherTest.test":508,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":308,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":236,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":356,"org.easymock.tests2.UsageTest.resumeIfFailure":160,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":373,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":208,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":242,"org.easymock.tests2.StubTest.stubWithReturnValue":122,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":90,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":59,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":300,"org.easymock.tests2.SerializationTest.testAllMockedMethod":120,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":480,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":500,"org.easymock.samples.SupportTest.voteForRemovals":14,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":277,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":140,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":259,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":505,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":486,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":76,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":433,"org.easymock.tests.UsageExpectAndThrowTest.object":257,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":56,"org.easymock.tests2.DelegateToTest.testWrongClass":101,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":458,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":459,"org.easymock.tests.UsageStrictMockTest.range":451,"org.easymock.samples.ConstructorCalledMockTest.testTax":15,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":212,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":130,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":162,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":258,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":89,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":214,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":331,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":382,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":502,"org.easymock.tests2.CaptureTest.testCaptureNone":112,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":363,"org.easymock.tests.UsageUnorderedTest.message":427,"org.easymock.tests.UsageVerifyTest.twoReturns":457,"org.easymock.tests.UsageVarargTest.varargByteAccepted":342,"org.easymock.tests2.ThreadingTest.testThreadSafe":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":231,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":415,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":398,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":10,"org.easymock.tests2.CaptureTest.testCapture_2617107":106,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":501,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":426,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":484,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":422,"org.easymock.tests2.UsageConstraintsTest.any":46,"org.easymock.tests2.StubTest.stub":121,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":328,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":485,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":241,"org.easymock.tests.UsageExpectAndThrowTest.longType":250,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":405,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":327,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":174,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":142,"org.easymock.tests2.SerializationTest.testClass":118,"org.easymock.tests.LimitationsTest.mockNativeMethod":289,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":280,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":310,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":492,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":197,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":177,"org.easymock.tests2.NameTest.nameForMocksControl":26,"org.easymock.tests2.MockedExceptionTest.testMockedException":28,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":219,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":390,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":32,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":251,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":273,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":178,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":91,"org.easymock.tests.MockingTest.testNicePartialClassMocking":271,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":183,"org.easymock.tests2.CaptureTest.testCaptureLast":111,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":195,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":425,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":169,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":43,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":57,"org.easymock.tests.MockingTest.testTwoMocks":269,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":170,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":291,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":255,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":158,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":61,"org.easymock.samples.ExampleTest.removeNonExistingDocument":6,"org.easymock.tests.UsageStrictMockTest.differentMethods":452,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":202,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":325,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":139,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":403,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":19,"org.easymock.tests2.MockBuilderTest.testCreateMockString":97,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":353,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":221,"org.easymock.tests.UsageExpectAndThrowTest.floatType":249,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":216,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":78,"org.easymock.tests.UsageVerifyTest.twoThrows":456,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":69,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":439,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":230,"org.easymock.samples.ExampleTest.voteAgainstRemoval":3,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":475,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":361,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":191,"org.easymock.tests.LimitationsTest.privateConstructor":288,"org.easymock.tests2.UsageConstraintsTest.testNotNull":60,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":27,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":352,"org.easymock.tests2.UsageTest.defaultResetToNice":157,"org.easymock.samples.ExampleTest.voteAgainstRemovals":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":476,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":306,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":196,"org.easymock.tests.UsageVarargTest.differentLength":339,"org.easymock.tests2.CallbackTest.callback":136,"org.easymock.tests2.UsageConstraintsTest.equals":38,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":187,"org.easymock.tests.UsageTest.openCallCountByLastCall":389,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":34,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":421,"org.easymock.tests.UsageCallCountTest.tooFewCalls":413,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":165,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":384,"org.easymock.tests.UsageThrowableTest.throwCheckedException":349,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":503,"org.easymock.tests.MockingTest.testStrictClassMocking":267,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":168,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":246,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":164,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":201,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":330,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":167,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":80,"org.easymock.tests.ObjectMethodsTest.testHashCode":396,"org.easymock.tests2.NameTest.nameForNiceMock":25,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":21,"org.easymock.tests2.DependencyTest.testInterfaceMocking":65,"org.easymock.samples.ExampleTest.addDocument":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":232,"org.easymock.tests2.DelegateToTest.testStubDelegate":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":237,"org.easymock.tests2.AnswerTest.stubAnswer":79,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":449,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":92,"org.easymock.tests.UsageVarargTest.varargLongAccepted":341,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":473,"org.easymock.tests.UsageExpectAndReturnTest.floatType":293,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":309,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":67,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":16,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":442,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":146,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":54,"org.easymock.tests.UsageThrowableTest.noUpperLimit":346,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":35,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":207,"org.easymock.tests2.SerializationTest.test":119,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":109,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":402,"org.easymock.tests2.UsageConstraintsTest.testSame":41,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":292,"org.easymock.samples.SupportTest.addDocument":13,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":166,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":222,"org.easymock.tests.GenericTest.testPackageScope":278,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":319,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":468,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":145,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":274,"org.easymock.tests2.NameTest.nameForMock":23,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":303,"org.easymock.tests2.UsageStrictMockTest.differentMethods":176,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":96,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":188,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":295,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":261,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":394,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":437,"org.easymock.tests2.MockedExceptionTest.testRealException":30,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":380,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":478,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":213,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":509,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":477,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":173,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":420,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":332,"org.easymock.tests2.NameTest.nameForStrictMock":24,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":86,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":31,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":182,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":211,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":404,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":55,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":83,"org.easymock.tests2.UsageStrictMockTest.range":175,"org.easymock.tests2.UsageConstraintsTest.lessThan":62,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":490,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":141,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":494,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":472,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":124,"org.easymock.tests2.CaptureTest.testCaptureRightOne":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":226,"org.easymock.tests2.UsageConstraintsTest.testOr":42,"org.easymock.tests.UsageRangeTest.combination":434,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":179,"org.easymock.tests.UsageTest.wrongArguments":388,"org.easymock.tests2.MockBuilderTest.testWithConstructor":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":223,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":354,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":296,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":465,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":304,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":406,"org.easymock.tests.UsageVarargTest.varargShortAccepted":340,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":416,"org.easymock.tests2.UsageConstraintsTest.cmpTo":47,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":77,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":467,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":156,"org.easymock.tests2.CaptureTest.testCaptureFromStub":115,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":322,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":84,"org.easymock.tests.UsageTest.unexpectedCallWithArray":387,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":448,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":414,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":507,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":305,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":450,"org.easymock.tests2.UsageConstraintsTest.constraints":36,"org.easymock.samples.ExampleTest.addAndChangeDocument":7,"org.easymock.tests.UsageStrictMockTest.testVerify":454,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":9,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":447,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":365,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":110,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":491,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":284,"org.easymock.tests.LimitationsTest.abstractClass":287,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":297,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":443,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":285,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":129,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":334}}]
