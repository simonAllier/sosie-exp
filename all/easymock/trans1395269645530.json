[{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[16,17,18],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.InstanceOf:40","sourceCode":"java.lang.StringBuffer.append(((\"isA(\" + (java.lang.Class<?>.getName())) + \")\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMockSupport:530","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:126","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:37","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(int.int, java.lang.Integer.java.lang.Integer)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[19],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Contains:40","failures":[20],"status":-1,"binaryOperator":"(\"contains(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[21],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[16,17,18],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"failures":[22,23,24,25,26],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[21],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[16,17,18],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"hashCodeMethod","equalsMethod":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"failures":[0,27,28,4,5,6,7,8,9,29,30,31,32,11,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,12,13,14,15],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:30","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:37","sourceCode":"if (!(java.util.LinkedList<org.easymock.internal.Range>.isEmpty())) {\n    final org.easymock.internal.Range org.easymock.internal.Range = java.util.LinkedList<org.easymock.internal.Range>.getLast();\n    if (!(org.easymock.internal.Range.hasFixedCount())) {\n        throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"));\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:221","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:380","sourceCode":"final java.util.List<java.lang.Class<?>> java.util.List<java.lang.Class<?>> = new java.util.ArrayList<java.lang.Class<?>>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:174","sourceCode":"try {\n    java.lang.Class<?> = net.sf.cglib.proxy.Enhancer.createClass();\n} catch (final net.sf.cglib.core.CodeGenerationException net.sf.cglib.core.CodeGenerationException) {\n    net.sf.cglib.proxy.Enhancer.setClassLoader(java.lang.Object.getClass().getClassLoader());\n    java.lang.Class<?> = net.sf.cglib.proxy.Enhancer.createClass();\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1776","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Find(java.lang.String))","type":"CtInvocationImpl"},"failures":[58],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"regex"}},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:89","failures":[59,60,61,62,63],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[64,65],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1038","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[25,66,26,67],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:945","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[68,69,70],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Injector:132","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[71,72,0,27,73,74,75,76,77,78,79,80,81,82,83,84,28,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,1,2,3,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,4,5,6,7,8,9,165,166,29,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,10,188,189,190,191,192,193,194,195,196,197,198,199,30,200,201,202,31,32,203,11,204,205,206,33,207,208,209,210,34,211,212,213,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,229,230,230,231,232,233,234,235,236,237,238,239,240,241,242,243,55,244,245,246,247,248,249,250,251,252,59,60,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,68,293,23,19,58,294,295,296,297,24,298,299,300,301,25,302,303,69,304,21,70,66,305,306,307,308,26,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,56,327,328,329,330,331,332,57,333,334,335,336,337,338,339,63,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,16,17,18,12,13,14,15,359,360,361,362,363,364],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[71,72,0,27,73,74,75,365,366,367,76,77,78,368,79,369,370,371,80,81,82,83,84,28,85,86,87,88,89,90,91,92,93,94,95,372,96,97,98,373,374,375,99,100,101,102,103,376,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,1,2,3,377,378,379,380,381,382,383,384,143,144,145,146,147,148,149,150,151,385,152,64,386,387,388,65,389,390,153,154,155,156,157,158,159,160,161,162,163,164,4,5,6,7,8,9,165,166,29,167,168,169,391,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,10,188,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,189,408,409,410,411,412,190,413,191,414,192,193,194,415,195,196,197,198,199,30,200,201,202,31,32,203,11,204,205,206,33,207,208,209,210,34,211,212,213,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,214,215,216,217,218,219,220,221,416,417,222,418,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,419,420,421,422,423,424,425,426,427,241,242,243,55,244,245,246,247,248,249,250,428,251,429,430,252,59,60,253,431,432,433,434,435,436,437,254,438,439,440,441,442,443,255,256,257,258,444,445,446,447,448,259,449,450,451,452,453,454,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,68,293,23,19,455,58,294,295,296,297,24,456,298,299,300,301,25,302,303,69,304,21,70,66,305,306,307,308,26,309,310,311,312,457,313,314,315,458,459,460,461,316,462,463,317,464,465,466,467,468,469,470,471,472,318,473,474,475,476,477,319,478,479,67,320,480,481,321,322,323,324,325,326,56,327,328,329,330,331,332,57,333,334,335,336,337,338,482,339,483,484,485,63,340,341,486,342,487,488,343,344,489,345,346,347,348,349,350,351,352,353,354,355,356,357,358,16,17,18,12,13,14,15,490,359,360,361,362,363,491,364],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[428,492,493],"status":-1,"binaryOperator":"java.lang.String == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[414],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:205","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"failures":[377,382,414,194,228,229,229,230,230,250,429,59,60,432,317,318,319,320,480,338,339,483,485,63,340,341,342,488,343,344,345,16,12],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[87,106,109,191,196,197,208,209,211,212,494,264,329,334,335],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:188","sourceCode":"try {\n    java.lang.Long = ((java.lang.Long)(java.lang.reflect.Method.invoke(null, new java.lang.Object[]{ java.lang.Class<?> })));\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" should have been accessible\"));\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.InternalError((((\"ObjectStreamClass.\" + java.lang.String) + \" failled to be called: \") + (java.lang.reflect.InvocationTargetException.getMessage())));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"clazz"}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:107","sourceCode":"java.io.ObjectInputStream.defaultReadObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:108","sourceCode":"try {\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[16,17,18],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stream":"stream"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[495,16,17,18],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:130","sourceCode":"java.io.ObjectOutputStream.writeObject(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:121","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"failures":[16,17,18],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stream":"stream"}},{"position":"org.easymock.internal.Range:36","failures":[71,72,0,27,73,74,75,365,366,367,76,77,78,368,79,369,370,371,80,81,82,83,84,28,85,86,87,88,89,90,91,92,93,94,95,372,96,97,98,373,374,375,99,100,101,102,103,376,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,1,2,3,377,378,379,380,381,382,383,384,143,144,145,146,147,148,149,150,151,385,152,64,386,387,388,65,389,390,153,154,155,156,157,158,159,160,161,162,163,164,4,5,6,7,8,9,165,166,29,167,168,169,391,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,10,188,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,189,408,409,410,411,412,190,413,191,414,192,193,194,415,195,196,197,198,199,30,200,201,202,31,32,203,11,204,205,206,33,207,208,209,210,34,211,212,213,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,214,215,216,217,218,219,220,221,416,417,222,418,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,419,420,421,422,423,424,425,426,427,241,242,243,55,244,245,246,247,248,249,250,428,251,429,430,252,59,60,253,431,432,433,434,435,436,437,254,438,439,440,441,442,443,255,256,257,258,444,445,446,447,448,259,449,450,451,452,453,454,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,68,293,23,19,455,58,294,295,296,297,24,456,298,299,300,301,25,302,303,69,304,21,70,66,305,306,307,308,26,309,310,311,312,457,313,314,315,458,459,460,461,316,462,463,317,464,465,466,467,468,469,470,471,472,318,473,474,475,476,477,319,478,479,67,320,480,481,321,322,323,324,325,326,56,327,328,329,330,331,332,57,333,334,335,336,337,338,482,339,483,484,485,63,340,341,486,342,487,488,343,344,489,345,346,347,348,349,350,351,352,353,354,355,356,357,358,16,17,18,12,13,14,15,490,359,360,361,362,363,491,364],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[71,72,0,27,73,74,75,365,366,367,76,77,78,368,79,369,370,371,80,81,82,83,84,28,85,86,87,88,89,90,91,92,93,94,95,372,96,97,98,373,374,375,99,100,101,102,103,376,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,1,2,3,377,378,379,380,381,382,383,384,143,144,145,146,147,148,149,150,151,385,152,64,386,387,388,65,389,390,153,154,155,156,157,158,159,160,161,162,163,164,4,5,6,7,8,9,165,166,29,167,168,169,391,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,10,188,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,189,408,409,410,411,412,190,413,191,414,192,193,194,415,195,196,197,198,199,30,200,201,202,31,32,203,11,204,205,206,33,207,208,209,210,34,211,212,213,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,214,215,216,217,218,219,220,221,416,417,222,418,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,419,420,421,422,423,424,425,426,427,241,242,243,55,244,245,246,247,248,249,250,428,251,429,430,252,59,60,253,431,432,433,434,435,436,437,254,438,439,440,441,442,443,255,256,257,258,444,445,446,447,448,259,449,450,451,452,453,454,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,68,293,23,19,455,58,294,295,296,297,24,456,298,299,300,301,25,302,303,69,304,21,70,66,305,306,307,308,26,309,310,311,312,457,313,314,315,458,459,460,461,316,462,463,317,464,465,466,467,468,469,470,471,472,318,473,474,475,476,477,319,478,479,67,320,480,481,321,322,323,324,325,326,56,327,328,329,330,331,332,57,333,334,335,336,337,338,482,339,483,484,485,63,340,341,486,342,487,488,343,344,489,345,346,347,348,349,350,351,352,353,354,355,356,357,358,16,17,18,12,13,14,15,490,359,360,361,362,363,491,364],"status":-1,"binaryOperator":"(int <= int)","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":19,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":33,"org.easymock.tests2.UsageTest.argumentsOrdered":335,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":356,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":438,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":402,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":331,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":224,"org.easymock.tests2.DelegateToTest.testReturnException":288,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":5,"org.easymock.tests.MockingTest.testPartialClassMocking":77,"org.easymock.tests.MockClassControlTest.testToString":216,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":490,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":205,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":410,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":467,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":35,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":317,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":242,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":24,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":71,"org.easymock.tests2.UsageTest.wrongArguments":329,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":454,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":94,"org.easymock.samples.ExampleTest.answerVsDelegate":234,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":382,"org.easymock.tests2.UsageConstraintsTest.testNull":294,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":370,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":247,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":221,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":355,"org.easymock.tests2.CaptureTest.testPrimitive":275,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":73,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":54,"org.easymock.tests.UsageTest.moreThanOneArgument":207,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":246,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":101,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":133,"org.easymock.tests.UsageTest.argumentsOrdered":212,"org.easymock.tests.UsageVarargTest.varargIntAccepted":169,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":407,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":143,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":338,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":442,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":421,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":340,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":394,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":147,"org.easymock.tests.ReplayStateInvalidUsageTest.times":186,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":259,"org.easymock.tests2.DependencyTest.testClassMocking":426,"org.easymock.tests2.AnswerTest.answer":321,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":456,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":408,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":258,"org.easymock.tests2.CaptureTest.testAnd":272,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":379,"org.easymock.tests2.UsageTest.strictResetToDefault":327,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":484,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":252,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":100,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":150,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":350,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":137,"org.easymock.tests2.DelegateToTest.testDelegate":292,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":50,"org.easymock.tests.LimitationsTest.mockFinalMethod":418,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":8,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":142,"org.easymock.tests2.DependencyTest.testClassMockingSupport":427,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":74,"org.easymock.tests2.CaptureTest.testCapture1_2446744":276,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":428,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":48,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":256,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":180,"org.easymock.tests.UsageThrowableTest.throwError":198,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":381,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":443,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":375,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":479,"org.easymock.samples.PartialClassMockTest.testGetArea":228,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":181,"org.easymock.tests.MockingTest.testInterfaceMocking":368,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":144,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":468,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":36,"org.easymock.tests2.UsageTest.niceToStrict":330,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":374,"org.easymock.tests2.ThreadingTest.testChangeDefault":492,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":392,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":63,"org.easymock.tests2.MockBuilderTest.testCreateMock":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":475,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":451,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":44,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":351,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":378,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":90,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":156,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":92,"org.easymock.tests.UsageOverloadedMethodTest.overloading":166,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":477,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":472,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":28,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":25,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":165,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":124,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":301,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":281,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":391,"org.easymock.tests.MockClassControlTest.testEquals":220,"org.easymock.tests2.EasyMockSupportClassTest.testAll":316,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":193,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":52,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":140,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":257,"org.easymock.tests2.CaptureTest.testCaptureAll":273,"org.easymock.tests.MockNameTest.defaultName":376,"org.easymock.tests2.UsageConstraintsTest.testMatches":302,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":178,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":102,"org.easymock.samples.ExampleTest.voteForRemovals":238,"org.easymock.tests.UsageVarargTest.allKinds":177,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":195,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":141,"org.easymock.samples.BasicClassMockTest.testPrintContent":227,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":31,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":260,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":439,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":9,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":291,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":389,"org.easymock.tests2.UsageConstraintsTest.greaterThan":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":462,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":149,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":253,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":390,"org.easymock.samples.ExampleTest.voteForRemoval":235,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":431,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":268,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":383,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":422,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":250,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":56,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":223,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":488,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":399,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":348,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":460,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":4,"org.easymock.tests2.CaptureTest.testCaptureFirst":285,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":287,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":398,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":349,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":337,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":87,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":120,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":270,"org.easymock.tests2.CaptureTest.testCapture2_2446744":284,"org.easymock.tests2.UsageTest.moreThanOneArgument":328,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":409,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":344,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":176,"org.easymock.tests.GenericTest.testBridgedEquals":415,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":163,"org.easymock.tests.UsageExpectAndReturnTest.longType":116,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":138,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":346,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":53,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":91,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":305,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":51,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":99,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":2,"org.easymock.tests.UsageCallCountTest.tooManyCalls":164,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":476,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":121,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":453,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":40,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":202,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":310,"org.easymock.tests.MockingTest.testNiceClassMocking":371,"org.easymock.tests.MockingTest.testClassMocking":367,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":157,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":62,"org.easymock.tests2.UsageConstraintsTest.testContains":300,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":14,"org.easymock.tests2.UsageConstraintsTest.testFind":58,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":29,"org.easymock.tests.MockTypeTest.fromEasyMockClass":380,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":104,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":364,"org.easymock.tests.UsageExpectAndReturnTest.object":123,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":251,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":452,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":354,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":171,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":98,"org.easymock.tests.UsageTest.exactCallCountByLastCall":213,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":203,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":397,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":134,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":204,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":480,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":167,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":129,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":84,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":434,"org.easymock.tests.MockClassControlTest.testHashCode":219,"org.easymock.tests2.EasyMockSupportTest.testVerify":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":470,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":135,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":82,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":89,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":255,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":67,"org.easymock.tests.UsageVarargTest.varargCharAccepted":170,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":385,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":261,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":413,"org.easymock.tests2.UsageTest.openCallCountByLastCall":332,"org.easymock.tests.DefaultClassInstantiatorTest.object":152,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":357,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":88,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":96,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":494,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":471,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":42,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":200,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":447,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":433,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":59,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":218,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":41,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":130,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":1,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":319,"org.easymock.tests2.UsageTest.resumeIfFailure":336,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":377,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":420,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":7,"org.easymock.tests2.StubTest.stubWithReturnValue":55,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":486,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":122,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":306,"org.easymock.tests2.SerializationTest.testAllMockedMethod":18,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":189,"org.easymock.samples.SupportTest.voteForRemovals":232,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":414,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":436,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":47,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":495,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":190,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":322,"org.easymock.tests.UsageExpectAndThrowTest.object":45,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":206,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":70,"org.easymock.tests2.DelegateToTest.testWrongClass":290,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":80,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":81,"org.easymock.tests.UsageStrictMockTest.range":109,"org.easymock.samples.ConstructorCalledMockTest.testTax":229,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":424,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":353,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":309,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":46,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":459,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":10,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":211,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":93,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":155,"org.easymock.tests2.CaptureTest.testCaptureNone":280,"org.easymock.tests.UsageUnorderedTest.message":191,"org.easymock.tests.UsageVerifyTest.twoReturns":197,"org.easymock.tests.UsageVarargTest.varargByteAccepted":175,"org.easymock.tests2.ThreadingTest.testThreadSafe":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":473,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":161,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":226,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":373,"org.easymock.tests2.CaptureTest.testCapture_2617107":274,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":365,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":411,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":27,"org.easymock.tests2.UsageConstraintsTest.any":298,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":185,"org.easymock.tests2.StubTest.stub":243,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":3,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":412,"org.easymock.tests.UsageExpectAndThrowTest.longType":38,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":6,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":388,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":184,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":263,"org.easymock.tests2.SerializationTest.testClass":16,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":254,"org.easymock.tests.LimitationsTest.mockNativeMethod":222,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":132,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":194,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":446,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":266,"org.easymock.tests2.NameTest.nameForMocksControl":362,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":448,"org.easymock.tests2.MockedExceptionTest.testMockedException":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":463,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":34,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":491,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":39,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":79,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":244,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":342,"org.easymock.tests.MockingTest.testNicePartialClassMocking":78,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":249,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":444,"org.easymock.tests2.CaptureTest.testCaptureLast":279,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":75,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":297,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":315,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":66,"org.easymock.tests.MockingTest.testTwoMocks":76,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":458,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":113,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":43,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":334,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":308,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":493,"org.easymock.samples.ExampleTest.removeNonExistingDocument":239,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":450,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":182,"org.easymock.tests.UsageStrictMockTest.differentMethods":110,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":435,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":386,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":269,"org.easymock.tests2.MockBuilderTest.testCreateMockString":345,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":464,"org.easymock.tests.UsageExpectAndThrowTest.floatType":37,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":303,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":461,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":324,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":481,"org.easymock.tests.UsageVerifyTest.twoThrows":196,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":318,"org.easymock.samples.ExampleTest.voteAgainstRemoval":236,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":403,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":153,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":60,"org.easymock.tests.LimitationsTest.privateConstructor":417,"org.easymock.tests2.UsageConstraintsTest.testNotNull":307,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":32,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":12,"org.easymock.tests2.UsageTest.defaultResetToNice":333,"org.easymock.samples.ExampleTest.voteAgainstRemovals":233,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":404,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":128,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":445,"org.easymock.tests.UsageVarargTest.differentLength":172,"org.easymock.tests2.CallbackTest.callback":286,"org.easymock.tests2.UsageConstraintsTest.equals":455,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":429,"org.easymock.tests.UsageTest.openCallCountByLastCall":210,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":68,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":0,"org.easymock.tests.UsageCallCountTest.tooFewCalls":159,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":312,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":95,"org.easymock.tests.UsageThrowableTest.throwCheckedException":201,"org.easymock.tests.MockingTest.testStrictClassMocking":366,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":11,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":314,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":449,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":311,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":187,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":313,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":326,"org.easymock.tests.ObjectMethodsTest.testHashCode":97,"org.easymock.tests2.CompareToTest.testGreateOrEqual":22,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":271,"org.easymock.tests2.NameTest.nameForNiceMock":361,"org.easymock.tests2.DependencyTest.testInterfaceMocking":241,"org.easymock.samples.ExampleTest.addDocument":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":474,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":478,"org.easymock.tests2.DelegateToTest.testStubDelegate":289,"org.easymock.tests2.AnswerTest.stubAnswer":325,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":107,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":487,"org.easymock.tests.UsageVarargTest.varargLongAccepted":174,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":111,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":401,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":131,"org.easymock.tests.UsageExpectAndReturnTest.floatType":115,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":320,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":230,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":441,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":85,"org.easymock.tests.UsageThrowableTest.noUpperLimit":199,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":304,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":293,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":419,"org.easymock.tests2.SerializationTest.test":17,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":277,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":64,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":114,"org.easymock.tests2.UsageConstraintsTest.testSame":295,"org.easymock.samples.SupportTest.addDocument":231,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":457,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":183,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":465,"org.easymock.tests.GenericTest.testPackageScope":192,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":136,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":396,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":440,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":369,"org.easymock.tests2.NameTest.nameForMock":359,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":125,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":489,"org.easymock.tests2.UsageStrictMockTest.differentMethods":265,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":430,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":117,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":49,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":372,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":151,"org.easymock.tests2.MockedExceptionTest.testRealException":15,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":384,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":425,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":406,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":405,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":262,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":188,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":72,"org.easymock.tests2.NameTest.nameForStrictMock":360,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":485,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":363,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":248,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":423,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":387,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":21,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":339,"org.easymock.tests2.UsageStrictMockTest.range":264,"org.easymock.tests2.UsageConstraintsTest.lessThan":26,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":437,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":61,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":400,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":469,"org.easymock.tests2.CaptureTest.testCaptureRightOne":282,"org.easymock.tests2.UsageConstraintsTest.testOr":296,"org.easymock.tests.UsageRangeTest.combination":148,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":245,"org.easymock.tests.UsageTest.wrongArguments":209,"org.easymock.tests2.MockBuilderTest.testWithConstructor":482,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":466,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":215,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":118,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":393,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":126,"org.easymock.tests.UsageVarargTest.varargShortAccepted":173,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":65,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":162,"org.easymock.tests2.UsageConstraintsTest.cmpTo":299,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":323,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":395,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":57,"org.easymock.tests2.CaptureTest.testCaptureFromStub":283,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":179,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":483,"org.easymock.tests.UsageTest.unexpectedCallWithArray":208,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":106,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":160,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":127,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":108,"org.easymock.tests2.UsageConstraintsTest.constraints":23,"org.easymock.samples.ExampleTest.addAndChangeDocument":240,"org.easymock.tests.UsageStrictMockTest.testVerify":112,"org.easymock.tests2.ConstraintsToStringTest.containsToString":20,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":225,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":105,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":139,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":278,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":145,"org.easymock.tests.LimitationsTest.abstractClass":416,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":119,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":146,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":86,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":168,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":352}}]
