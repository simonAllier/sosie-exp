[{"transplant":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:181","sourceCode":"for (final java.lang.reflect.Field java.lang.reflect.Field : java.util.List<java.lang.reflect.Field>) {\n    final org.easymock.internal.InjectionTarget org.easymock.internal.InjectionTarget = org.easymock.internal.Injector.org.easymock.internal.Injector.injectionTargetWithField(java.lang.reflect.Field);\n    if (org.easymock.internal.InjectionTarget == null) {\n        continue;\n    } \n    final org.easymock.internal.Injection org.easymock.internal.Injection = org.easymock.internal.Injector.org.easymock.internal.Injector.findUniqueAssignable(java.util.List<org.easymock.internal.Injection>, org.easymock.internal.InjectionTarget);\n    if (org.easymock.internal.Injection == null) {\n        continue;\n    } \n    org.easymock.internal.InjectionTarget.inject(java.lang.Object, org.easymock.internal.Injection);\n}","type":"CtForEachImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[22],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:355","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[23,24],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[25,26,27,28,29,30,31,32,33,34,0,35,1,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,2,3,4,62,5,63,6,7,8,9,10,11,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,12,13,14,179,15,180,16,17,18,19,20,21,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,23,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,24,460,461,462,463,464,465,466,467,468,469,470,471],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:149","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[248,472,473],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:118","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1803","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[79],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:201","sourceCode":"java.util.Set<java.lang.reflect.Method>.toArray(new java.lang.reflect.Method[java.util.Set<java.lang.reflect.Method>.size()])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:72","sourceCode":"java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>()","type":"CtAssignmentImpl"},"failures":[35,119,125,126,129,150,151,152,154,155,156,157,159,160,161,188,197,207,213,237,346,349],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mockedMethods":"mockedMethods"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[474],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[25,26,27,28,29,30,32,33,34,0,35,1,36,37,38,39,42,43,48,50,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66,67,69,70,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,110,111,112,113,114,115,116,117,118,119,121,124,125,126,127,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,154,155,156,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,186,187,188,189,190,194,197,207,213,222,223,224,226,227,228,229,230,231,232,233,235,236,239,240,241,242,243,251,252,253,254,255,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,288,289,293,294,295,296,297,327,328,330,337,338,339,354,358,359,360,361,362,363,364,388,389,390,391,392,393,394,395,396,397,398,399,401,402,403,404,405,406,407,408,409,410,411,412,413,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,465,467,468,471],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Any:40","sourceCode":"java.lang.StringBuffer.append(\"<any>\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[475,476,477],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:160","sourceCode":"return java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:158","sourceCode":"if (((java.lang.reflect.Field.getModifiers()) & int) == int) {\n    java.lang.reflect.Field.setAccessible(true);\n    return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null));\n} ","type":"CtIfImpl"},"failures":[472,473],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"f":"f","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[310,312,320,321,323],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[108],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:148","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[248,472,473],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:249","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"cls"}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"failures":[478],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:159","sourceCode":"final java.lang.ClassCastException java.lang.ClassCastException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"failures":[409],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.EasyMock:1542","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(long))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[25,27,28,30,35,37,42,43,53,55,56,63,64,65,66,67,69,70,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,94,96,97,100,101,102,103,105,106,107,111,113,114,115,116,117,118,121,125,126,127,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,151,154,156,157,160,162,163,164,166,168,169,170,173,174,177,180,181,182,183,184,185,186,187,188,189,194,197,207,213,223,229,235,239,254,256,257,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,286,287,288,289,293,295,296,327,328,330,337,338,339,354,388,389,392,393,396,409,410,411,412,413,417,418,421,422,423,450,452,453,454,455,456,457,470],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1052","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:357","sourceCode":"java.lang.reflect.Type = java.lang.reflect.Type","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:84","sourceCode":"java.lang.Object[] = new java.lang.Object[0]","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:93","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]))","type":"CtInvocationImpl"},"failures":[51,54,55,66,82,114,125,127,138,142,143,146,162,165,166,167,171,172,174,227,251,253,255,256,294,295,479,388,390,391,394,395,396,403,449,471],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arguments":"arguments"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:249","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[175,176,177,178,229,280,281,282,283,284,285,297,308,375,385,386,387,419],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":67,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":388,"org.easymock.tests2.UsageTest.argumentsOrdered":172,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":147,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":16,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":311,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":167,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":1,"org.easymock.tests2.DelegateToTest.testReturnException":222,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":281,"org.easymock.tests.MockingTest.testPartialClassMocking":327,"org.easymock.tests.MockClassControlTest.testToString":379,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":216,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":291,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":129,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":319,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":201,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":429,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":197,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":43,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":74,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":417,"org.easymock.tests2.UsageTest.wrongArguments":165,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":11,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":232,"org.easymock.samples.ExampleTest.answerVsDelegate":26,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":349,"org.easymock.tests2.UsageConstraintsTest.testNull":70,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":332,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":116,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":384,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":146,"org.easymock.tests2.CaptureTest.testPrimitive":96,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":421,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":448,"org.easymock.tests.UsageTest.moreThanOneArgument":389,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":115,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":241,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":458,"org.easymock.tests.UsageTest.argumentsOrdered":395,"org.easymock.tests.UsageVarargTest.varargIntAccepted":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":316,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":409,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":150,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":20,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":155,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":303,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":413,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":476,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":63,"org.easymock.tests.ReplayStateInvalidUsageTest.times":373,"org.easymock.tests2.DependencyTest.testClassMocking":40,"org.easymock.tests2.AnswerTest.answer":107,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":75,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":318,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":61,"org.easymock.tests2.CaptureTest.testAnd":93,"org.easymock.tests2.UsageTest.strictResetToDefault":163,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":124,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":240,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":141,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":288,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":461,"org.easymock.tests2.DelegateToTest.testDelegate":226,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":444,"org.easymock.tests.LimitationsTest.mockFinalMethod":355,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":284,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":428,"org.easymock.tests2.DependencyTest.testClassMockingSupport":41,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":298,"org.easymock.tests2.CaptureTest.testCapture1_2446744":97,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":120,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":442,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":59,"org.easymock.tests.UsageThrowableTest.throwError":450,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":367,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":348,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":21,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":243,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":215,"org.easymock.samples.PartialClassMockTest.testGetArea":35,"org.easymock.tests.MockingTest.testInterfaceMocking":329,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":368,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":410,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":335,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":430,"org.easymock.tests2.UsageTest.niceToStrict":166,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":202,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":301,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":154,"org.easymock.tests2.MockBuilderTest.testCreateMock":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":210,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":8,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":438,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":142,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":464,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":356,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":230,"org.easymock.tests.UsageOverloadedMethodTest.overloading":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":212,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":468,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":80,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":271,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":337,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":472,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":79,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":102,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":400,"org.easymock.tests2.EasyMockSupportClassTest.testAll":194,"org.easymock.tests.MockClassControlTest.testEquals":383,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":236,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":446,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":478,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":426,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":60,"org.easymock.tests2.CaptureTest.testCaptureAll":94,"org.easymock.tests.MockNameTest.defaultName":415,"org.easymock.tests2.UsageConstraintsTest.testMatches":81,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":242,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":365,"org.easymock.samples.ExampleTest.voteForRemovals":30,"org.easymock.tests.UsageVarargTest.allKinds":408,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":293,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":427,"org.easymock.samples.BasicClassMockTest.testPrintContent":39,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":456,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":51,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":17,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":225,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":285,"org.easymock.tests2.UsageConstraintsTest.greaterThan":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":195,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":287,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":127,"org.easymock.samples.ExampleTest.voteForRemoval":27,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":250,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":133,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":128,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":350,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":119,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":416,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":162,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":158,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":308,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":139,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":452,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":192,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":280,"org.easymock.tests2.CaptureTest.testCaptureFirst":106,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":221,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":307,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":140,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":174,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":471,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":267,"org.easymock.tests2.UsageTest.moreThanOneArgument":164,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":135,"org.easymock.tests2.CaptureTest.testCapture2_2446744":105,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":160,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":23,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":407,"org.easymock.tests.GenericTest.testBridgedEquals":238,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":363,"org.easymock.tests.UsageExpectAndReturnTest.longType":263,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":424,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":137,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":447,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":414,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":88,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":445,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":386,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":239,"org.easymock.tests.UsageCallCountTest.tooManyCalls":364,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":477,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":211,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":268,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":10,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":434,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":455,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":182,"org.easymock.tests.MockingTest.testNiceClassMocking":333,"org.easymock.tests.MockingTest.testClassMocking":325,"org.easymock.tests2.UsageConstraintsTest.testContains":78,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":357,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":177,"org.easymock.tests2.UsageConstraintsTest.testFind":69,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":339,"org.easymock.tests.MockTypeTest.fromEasyMockClass":347,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":50,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":251,"org.easymock.tests.UsageExpectAndReturnTest.object":270,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":121,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":9,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":145,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":402,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":343,"org.easymock.tests.UsageTest.exactCallCountByLastCall":396,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":296,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":306,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":459,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":290,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":131,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":397,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":276,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":467,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":13,"org.easymock.tests.MockClassControlTest.testHashCode":382,"org.easymock.tests2.EasyMockSupportTest.testVerify":149,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":204,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":475,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":24,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":465,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":463,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":58,"org.easymock.tests.UsageVarargTest.varargCharAccepted":401,"org.easymock.tests2.CaptureTest.testCaptureMultiple":22,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":52,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":323,"org.easymock.tests2.UsageTest.openCallCountByLastCall":168,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":148,"org.easymock.tests.DefaultClassInstantiatorTest.object":244,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":462,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":341,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":479,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":436,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":205,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":453,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":62,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":12,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":125,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":381,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":435,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":277,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":213,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":380,"org.easymock.tests2.UsageTest.resumeIfFailure":173,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":346,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":283,"org.easymock.tests2.StubTest.stubWithReturnValue":229,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":89,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":269,"org.easymock.tests2.SerializationTest.testAllMockedMethod":190,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":317,"org.easymock.samples.SupportTest.voteForRemovals":37,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":234,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":179,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":441,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":322,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":108,"org.easymock.tests.UsageExpectAndThrowTest.object":439,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":292,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":86,"org.easymock.tests2.DelegateToTest.testWrongClass":224,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":422,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":423,"org.easymock.samples.ConstructorCalledMockTest.testTax":33,"org.easymock.tests.UsageStrictMockTest.range":256,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":46,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":144,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":181,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":440,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":156,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":191,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":375,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":231,"org.easymock.tests2.CaptureTest.testCaptureNone":101,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":336,"org.easymock.tests.UsageUnorderedTest.message":449,"org.easymock.tests.UsageVerifyTest.twoReturns":295,"org.easymock.tests.UsageVarargTest.varargByteAccepted":406,"org.easymock.tests2.ThreadingTest.testThreadSafe":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":208,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":361,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":38,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":344,"org.easymock.tests2.CaptureTest.testCapture_2617107":95,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":300,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":420,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":320,"org.easymock.tests2.UsageConstraintsTest.any":76,"org.easymock.tests2.StubTest.stub":228,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":372,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":387,"org.easymock.tests.UsageExpectAndThrowTest.longType":432,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":282,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":321,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":248,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":371,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":54,"org.easymock.tests2.SerializationTest.testClass":188,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":180,"org.easymock.tests.LimitationsTest.mockNativeMethod":354,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":237,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":279,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":4,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":57,"org.easymock.tests2.NameTest.nameForMocksControl":220,"org.easymock.tests2.MockedExceptionTest.testMockedException":176,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":196,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":393,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":433,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":49,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":330,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":113,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":157,"org.easymock.tests.MockingTest.testNicePartialClassMocking":328,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":118,"org.easymock.tests2.CaptureTest.testCaptureLast":100,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":2,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":299,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":187,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":73,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":87,"org.easymock.tests.MockingTest.testTwoMocks":326,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":260,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":437,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":171,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":91,"org.easymock.samples.ExampleTest.removeNonExistingDocument":31,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":7,"org.easymock.tests.UsageStrictMockTest.differentMethods":257,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":369,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":14,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":246,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":134,"org.easymock.tests2.MockBuilderTest.testCreateMockString":161,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":377,"org.easymock.tests.UsageExpectAndThrowTest.floatType":431,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":198,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":193,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":110,"org.easymock.tests.UsageVerifyTest.twoThrows":294,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":466,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":207,"org.easymock.samples.ExampleTest.voteAgainstRemoval":28,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":312,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":334,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":126,"org.easymock.tests.LimitationsTest.privateConstructor":353,"org.easymock.tests2.UsageConstraintsTest.testNotNull":90,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":457,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":175,"org.easymock.tests2.UsageTest.defaultResetToNice":170,"org.easymock.samples.ExampleTest.voteAgainstRemovals":25,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":275,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":313,"org.easymock.tests.UsageVarargTest.differentLength":403,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":3,"org.easymock.tests2.CallbackTest.callback":227,"org.easymock.tests2.UsageConstraintsTest.equals":68,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":122,"org.easymock.tests.UsageTest.openCallCountByLastCall":392,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":64,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":419,"org.easymock.tests.UsageCallCountTest.tooFewCalls":359,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":184,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":233,"org.easymock.tests.UsageThrowableTest.throwCheckedException":454,"org.easymock.tests.MockingTest.testStrictClassMocking":324,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":186,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":297,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":183,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":6,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":374,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":185,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":112,"org.easymock.tests.ObjectMethodsTest.testHashCode":342,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":136,"org.easymock.tests2.NameTest.nameForNiceMock":219,"org.easymock.tests2.DependencyTest.testInterfaceMocking":42,"org.easymock.samples.ExampleTest.addDocument":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":214,"org.easymock.tests2.DelegateToTest.testStubDelegate":223,"org.easymock.tests2.AnswerTest.stubAnswer":111,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":254,"org.easymock.tests.UsageVarargTest.varargLongAccepted":405,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":258,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":310,"org.easymock.tests.UsageExpectAndReturnTest.floatType":262,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":278,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":130,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":34,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":469,"org.easymock.tests.UsageThrowableTest.noUpperLimit":451,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":19,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":84,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":65,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":44,"org.easymock.tests2.SerializationTest.test":189,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":98,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":473,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":245,"org.easymock.tests2.UsageConstraintsTest.testSame":71,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":261,"org.easymock.samples.SupportTest.addDocument":36,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":199,"org.easymock.tests.GenericTest.testPackageScope":235,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":460,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":305,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":18,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":331,"org.easymock.tests2.NameTest.nameForMock":217,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":272,"org.easymock.tests2.UsageStrictMockTest.differentMethods":56,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":123,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":264,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":443,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":340,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":289,"org.easymock.tests2.MockedExceptionTest.testRealException":178,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":351,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":47,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":315,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":53,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":314,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":418,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":376,"org.easymock.tests2.NameTest.nameForStrictMock":218,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":153,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":48,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":117,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":45,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":85,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":247,"org.easymock.tests.ErrorMessageTest.testGetters":474,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":151,"org.easymock.tests2.UsageStrictMockTest.range":55,"org.easymock.tests2.UsageConstraintsTest.lessThan":92,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":15,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":138,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":309,"org.easymock.tests2.CaptureTest.testCaptureRightOne":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":203,"org.easymock.tests2.UsageConstraintsTest.testOr":72,"org.easymock.tests.UsageRangeTest.combination":286,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":114,"org.easymock.tests.UsageTest.wrongArguments":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":200,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":378,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":265,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":273,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":302,"org.easymock.tests.UsageVarargTest.varargShortAccepted":404,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":249,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":362,"org.easymock.tests2.UsageConstraintsTest.cmpTo":77,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":109,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":304,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":169,"org.easymock.tests2.CaptureTest.testCaptureFromStub":104,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":366,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":152,"org.easymock.tests.UsageTest.unexpectedCallWithArray":390,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":253,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":360,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":274,"org.easymock.tests2.UsageConstraintsTest.constraints":66,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":255,"org.easymock.samples.ExampleTest.addAndChangeDocument":32,"org.easymock.tests.UsageStrictMockTest.testVerify":259,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":0,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":252,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":425,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":99,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":411,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":266,"org.easymock.tests.LimitationsTest.abstractClass":352,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":470,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":412,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":398,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":143}}]
