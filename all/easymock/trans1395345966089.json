[{"transplant":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:115","sourceCode":"java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int])","type":"CtAssignmentImpl"},"failures":[0,1],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1361","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"qualifier"}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[2],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:157","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[3,4,5,6,7,8,9,10,11,12],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplant":{"position":"org.easymock.internal.Injector:75","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtAssignmentImpl"},"failures":[13,14,15,16],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[17],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnValue":"arg","returnedType":"paramType"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:85","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:144","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findGenericDeclaration(java.lang.reflect.Method)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,3,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,9,122,10,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,11,12,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,231,232,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,15,298,299,300,301,302,303,304,305,306,307,0,308,309,310,1,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,16,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:83","sourceCode":"return (this.int) == (this.int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:52","sourceCode":"return (int) == (int)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"maximum":"maximum","java.lang.Integer.MAX_VALUE":"minimum"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:107","sourceCode":"java.io.ObjectInputStream.defaultReadObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:210","sourceCode":"try {\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[3,31,32],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1319","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[79],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:80","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"bridgeMethod","bridgeMethod":"candidateMethod"}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[18,21,22,23,24,25,26,27,28,29,30,3,31,32,38,45,46,48,49,53,56,66,72,75,77,78,84,85,86,87,89,90,91,92,93,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,119,120,121,122,123,124,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,147,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,176,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,11,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,216,219,220,221,222,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,284,285,286,287,288,289,290,291,293,294,295,296,15,299,301,302,329,331,333,334,337,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,369,370,373,374,375,377,378,379,380,381,382,383,384,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,449,450,451,452,453,454,455,456,457,458,459,460,464,465,467,473,474,475,476,477,478,479],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:193","sourceCode":"if (!(this.boolean)) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:217","sourceCode":"if ((boolean) && ((org.easymock.internal.Result) == null)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[21,25,27,28,29,30,3,31,32,38,48,49,53,56,66,72,78,87,93,94,96,97,99,102,105,106,107,108,109,119,121,122,128,129,130,131,133,134,135,136,137,138,141,147,154,155,156,157,158,159,160,162,163,164,165,166,169,172,174,176,186,188,189,190,194,195,11,199,200,201,202,203,204,205,208,209,210,211,212,213,216,221,227,228,229,230,233,234,235,236,238,239,240,241,243,244,245,257,258,285,286,288,289,290,291,15,299,329,331,333,334,336,350,351,352,353,356,369,370,373,374,375,377,378,380,381,382,383,384,393,394,396,401,406,411,414,415,417,422,427,435,438,439,446,447,451,452,454,455,456,457,458,464,465,467,474,475,476,478,479],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"shouldBeUsedInOneThread":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[310,488,489],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[105],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:85","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:79","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:228","sourceCode":"final java.lang.InstantiationException java.lang.InstantiationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[18,21,22,23,24,25,26,27,28,29,30,3,31,32,45,46,47,48,49,75,77,78,80,81,82,83,84,85,86,87,89,90,91,92,93,94,96,97,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,119,120,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,167,168,169,170,172,173,174,176,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,11,200,201,204,205,206,207,208,209,210,211,212,213,216,219,221,227,236,237,238,239,240,241,243,246,247,248,249,250,251,252,253,254,255,256,258,259,284,285,286,287,288,289,290,291,292,293,294,295,296,15,299,300,301,302,317,329,336,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,369,370,373,374,375,377,378,380,381,382,383,384,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,447,449,450,451,452,453,454,455,456,457,458,459,460,464,465,467,471,472,473,474,475,476,481],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:63","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class.java.lang.Class.forName(java.lang.String, true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","state":"threadSafe","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1964","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (this.java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:82","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])));\n} ","type":"CtIfImpl"},"failures":[18,19,20,21,22,23,24,26,27,28,29,30,3,31,38,39,45,46,47,48,49,53,56,66,72,75,77,78,84,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,116,119,121,122,124,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,147,148,154,155,156,157,158,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,176,181,182,183,185,186,187,188,189,190,191,192,193,194,195,196,197,11,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,216,219,220,221,222,224,227,228,229,231,231,232,232,234,236,237,238,239,241,243,246,247,248,249,250,251,252,253,254,255,256,257,258,259,276,282,284,286,287,288,289,290,291,293,294,295,297,15,298,299,300,301,302,303,304,305,325,326,327,329,331,333,334,336,339,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,369,371,372,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,449,450,451,452,453,454,455,456,457,458,459,460,464,465,467,473,482,483,484,486,487],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"equalsMethod","finalizeMethod":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"failures":[96],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[18,21,23,75,77,78,237,331],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"failures":[310,488,489],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,3,31,32,38,45,46,47,48,49,53,56,66,72,75,77,78,80,81,82,83,84,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,115,119,121,122,124,128,129,130,131,132,133,134,135,136,137,138,139,140,141,147,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,185,186,187,188,189,190,191,192,193,194,195,196,197,11,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,216,220,221,222,227,228,229,230,231,231,232,232,233,234,235,236,237,238,239,240,241,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,276,282,284,285,286,287,288,289,290,291,292,15,298,299,300,301,302,303,304,305,325,326,327,329,331,332,333,334,335,336,339,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,369,370,371,373,374,375,377,378,379,380,381,382,383,384,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,435,436,437,438,439,440,441,442,443,444,445,446,447,449,450,451,452,453,454,455,456,457,458,459,460,463,464,465,467,471,473,474,475,476,478,479],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[46,47],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[490],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[18,21,25,27,30,3,31,32,38,48,49,53,56,66,72,87,93,94,96,97,99,102,105,106,107,108,109,119,121,122,127,128,129,130,131,133,134,135,136,137,138,141,147,154,155,156,157,158,159,160,162,163,164,165,166,169,172,174,185,186,188,189,190,194,195,197,11,199,200,201,202,203,204,205,208,209,210,211,212,213,216,221,227,228,229,230,233,234,235,236,237,238,239,240,241,244,245,257,258,285,286,288,291,15,317,329,331,333,334,336,353,356,357,369,370,373,374,375,377,378,380,381,382,383,384,393,394,396,401,406,414,415,417,422,427,435,438,439,440,447,451,452,453,454,455,456,457,458,464,465,467,475,476,478,479],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[18,20,21,23,75,77,78,237,331],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":87,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":432,"org.easymock.tests2.UsageTest.argumentsOrdered":195,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":164,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":148,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":270,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":190,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":230,"org.easymock.tests2.DelegateToTest.testReturnException":172,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":252,"org.easymock.tests.MockingTest.testPartialClassMocking":464,"org.easymock.tests.MockClassControlTest.testToString":482,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":79,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":339,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":60,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":412,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":56,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":228,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":4,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":94,"org.easymock.tests2.UsageTest.wrongArguments":188,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":350,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":44,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":295,"org.easymock.samples.ExampleTest.answerVsDelegate":237,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":344,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":469,"org.easymock.tests2.UsageConstraintsTest.testNull":90,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":211,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":487,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":163,"org.easymock.tests2.CaptureTest.testPrimitive":131,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":354,"org.easymock.tests.UsageTest.moreThanOneArgument":433,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":431,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":210,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":360,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":441,"org.easymock.tests.UsageTest.argumentsOrdered":439,"org.easymock.tests.UsageVarargTest.varargIntAccepted":375,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":275,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":246,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":113,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":152,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":120,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":262,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":250,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":38,"org.easymock.tests.ReplayStateInvalidUsageTest.times":321,"org.easymock.tests2.DependencyTest.testClassMocking":225,"org.easymock.tests2.AnswerTest.answer":18,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":95,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":277,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":184,"org.easymock.tests2.CaptureTest.testAnd":128,"org.easymock.tests2.UsageTest.strictResetToDefault":186,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":117,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":219,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":359,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":158,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":301,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":445,"org.easymock.tests2.DelegateToTest.testDelegate":176,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":427,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_BackToDefault":13,"org.easymock.tests.LimitationsTest.mockFinalMethod":330,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":255,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":367,"org.easymock.tests2.DependencyTest.testClassMockingSupport":226,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":446,"org.easymock.tests2.CaptureTest.testCapture1_2446744":132,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":215,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":425,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":182,"org.easymock.tests.UsageThrowableTest.throwError":451,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":315,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":343,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":153,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":74,"org.easymock.samples.PartialClassMockTest.testGetArea":229,"org.easymock.tests.MockingTest.testInterfaceMocking":466,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":316,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":247,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":348,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":413,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":390,"org.easymock.tests2.UsageTest.niceToStrict":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":61,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":17,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":260,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":119,"org.easymock.tests2.MockBuilderTest.testCreateMock":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":69,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":41,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":421,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":159,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":305,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":471,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":293,"org.easymock.tests.UsageOverloadedMethodTest.overloading":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":71,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":100,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":334,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":402,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":257,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":488,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":99,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":137,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":376,"org.easymock.tests.MockClassControlTest.testEquals":486,"org.easymock.tests2.EasyMockSupportClassTest.testAll":53,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":370,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":429,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":183,"org.easymock.tests2.CaptureTest.testCaptureAll":129,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":365,"org.easymock.tests.MockNameTest.defaultName":297,"org.easymock.tests2.UsageConstraintsTest.testMatches":101,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":313,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":361,"org.easymock.samples.ExampleTest.voteForRemovals":241,"org.easymock.tests.UsageVarargTest.allKinds":384,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":355,"org.easymock.samples.BasicClassMockTest.testPrintContent":245,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":366,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":457,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":24,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":175,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":149,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":256,"org.easymock.tests2.UsageConstraintsTest.greaterThan":103,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":8,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":54,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":300,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":222,"org.easymock.samples.ExampleTest.voteForRemoval":238,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":312,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":46,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":223,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":345,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":214,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":185,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":15,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":267,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":156,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":453,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":51,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":251,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":171,"org.easymock.tests2.CaptureTest.testCaptureFirst":141,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":266,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":157,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":197,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":337,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":398,"org.easymock.tests2.UsageTest.moreThanOneArgument":187,"org.easymock.tests2.CaptureTest.testCapture2_2446744":140,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":48,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":124,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":278,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":383,"org.easymock.tests.GenericTest.testBridgedEquals":372,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":478,"org.easymock.tests.UsageExpectAndReturnTest.longType":394,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":154,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":363,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":430,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":108,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":298,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":428,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":326,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":358,"org.easymock.tests.UsageCallCountTest.tooManyCalls":479,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":473,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":70,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":399,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":43,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":417,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":456,"org.easymock.tests.MockingTest.testNiceClassMocking":470,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":200,"org.easymock.tests.MockingTest.testClassMocking":462,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_Default":14,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":472,"org.easymock.tests2.UsageConstraintsTest.testContains":98,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":169,"org.easymock.tests2.UsageConstraintsTest.testFind":89,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":259,"org.easymock.tests.MockTypeTest.fromEasyMockClass":342,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":77,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":284,"org.easymock.tests.UsageExpectAndReturnTest.object":401,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":216,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":42,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":162,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":5,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":378,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":388,"org.easymock.tests.UsageTest.exactCallCountByLastCall":440,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":459,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":265,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":442,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":338,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":12,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":407,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":373,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":333,"org.easymock.tests.MockClassControlTest.testHashCode":485,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":143,"org.easymock.tests2.EasyMockSupportTest.testVerify":166,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":63,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":443,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":304,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":331,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":181,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":127,"org.easymock.tests.UsageVarargTest.varargCharAccepted":377,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":306,"org.easymock.tests2.CaptureTest.testCaptureMultiple":490,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":25,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":283,"org.easymock.tests2.UsageTest.openCallCountByLastCall":191,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":165,"org.easymock.tests.DefaultClassInstantiatorTest.object":307,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":303,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":386,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":419,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":64,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":454,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":36,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":142,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":484,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":220,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":418,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":408,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":325,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":483,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":72,"org.easymock.tests2.UsageTest.resumeIfFailure":196,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":341,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":254,"org.easymock.tests2.StubTest.stubWithReturnValue":207,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":9,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":400,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":109,"org.easymock.tests2.SerializationTest.testAllMockedMethod":32,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":276,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":2,"org.easymock.samples.SupportTest.voteForRemovals":234,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":368,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":145,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":424,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":282,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":19,"org.easymock.tests.UsageExpectAndThrowTest.object":422,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":340,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":106,"org.easymock.tests2.DelegateToTest.testWrongClass":174,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":449,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":450,"org.easymock.samples.ConstructorCalledMockTest.testTax":231,"org.easymock.tests.UsageStrictMockTest.range":289,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":179,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":161,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":199,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":423,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":121,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":438,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":50,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":323,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":294,"org.easymock.tests2.CaptureTest.testCaptureNone":136,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":349,"org.easymock.tests.UsageUnorderedTest.message":411,"org.easymock.tests.UsageVerifyTest.twoReturns":357,"org.easymock.tests.UsageVarargTest.varargByteAccepted":382,"org.easymock.tests2.ThreadingTest.testThreadSafe":45,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":67,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":476,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":389,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":244,"org.easymock.tests2.CaptureTest.testCapture_2617107":130,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":448,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":280,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":353,"org.easymock.tests2.UsageConstraintsTest.any":96,"org.easymock.tests2.StubTest.stub":206,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":320,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":327,"org.easymock.tests.UsageExpectAndThrowTest.longType":415,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":281,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":310,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":319,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":27,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":147,"org.easymock.tests2.SerializationTest.testClass":3,"org.easymock.tests.LimitationsTest.mockNativeMethod":329,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":410,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":371,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":35,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":30,"org.easymock.tests2.NameTest.nameForMocksControl":83,"org.easymock.tests2.MockedExceptionTest.testMockedException":168,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":55,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":437,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":467,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":416,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":76,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":208,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":122,"org.easymock.tests.MockingTest.testNicePartialClassMocking":465,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":213,"org.easymock.tests2.CaptureTest.testCaptureLast":135,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":33,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":447,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":93,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":205,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":107,"org.easymock.tests.MockingTest.testTwoMocks":463,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":391,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":420,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":194,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":111,"org.easymock.samples.ExampleTest.removeNonExistingDocument":242,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":40,"org.easymock.tests.UsageStrictMockTest.differentMethods":290,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":317,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":144,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":308,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":47,"org.easymock.tests2.MockBuilderTest.testCreateMockString":126,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":480,"org.easymock.tests.UsageExpectAndThrowTest.floatType":414,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":57,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":102,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":52,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":21,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":198,"org.easymock.tests.UsageVerifyTest.twoThrows":356,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":66,"org.easymock.samples.ExampleTest.voteAgainstRemoval":239,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":271,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":347,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":221,"org.easymock.tests.LimitationsTest.privateConstructor":16,"org.easymock.tests2.UsageConstraintsTest.testNotNull":110,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":458,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":167,"org.easymock.tests2.UsageTest.defaultResetToNice":193,"org.easymock.samples.ExampleTest.voteAgainstRemovals":236,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":406,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":272,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":34,"org.easymock.tests.UsageVarargTest.differentLength":379,"org.easymock.tests2.CallbackTest.callback":78,"org.easymock.tests2.UsageConstraintsTest.equals":88,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":217,"org.easymock.tests.UsageTest.openCallCountByLastCall":436,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":84,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":352,"org.easymock.tests.UsageCallCountTest.tooFewCalls":474,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":202,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":296,"org.easymock.tests.UsageThrowableTest.throwCheckedException":455,"org.easymock.tests.MockingTest.testStrictClassMocking":461,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":460,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":204,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":39,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":201,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":322,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":203,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":23,"org.easymock.tests.ObjectMethodsTest.testHashCode":387,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":49,"org.easymock.tests2.NameTest.nameForNiceMock":82,"org.easymock.tests2.DependencyTest.testInterfaceMocking":227,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":6,"org.easymock.samples.ExampleTest.addDocument":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":68,"org.easymock.tests2.DelegateToTest.testStubDelegate":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":73,"org.easymock.tests2.AnswerTest.stubAnswer":22,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":287,"org.easymock.tests.UsageVarargTest.varargLongAccepted":381,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":291,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":269,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":409,"org.easymock.tests.UsageExpectAndReturnTest.floatType":393,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":11,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":232,"org.easymock.tests.UsageThrowableTest.noUpperLimit":452,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":151,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":104,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":335,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":85,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":177,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":133,"org.easymock.tests2.SerializationTest.test":31,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":489,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":0,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":392,"org.easymock.tests2.UsageConstraintsTest.testSame":91,"org.easymock.samples.SupportTest.addDocument":233,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":58,"org.easymock.tests.GenericTest.testPackageScope":369,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":444,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":264,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":150,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":468,"org.easymock.tests2.NameTest.nameForMock":80,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":403,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":125,"org.easymock.tests2.UsageStrictMockTest.differentMethods":29,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":218,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":395,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":426,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":385,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":302,"org.easymock.tests2.MockedExceptionTest.testRealException":170,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":346,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":180,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":274,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":26,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":273,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":324,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":351,"org.easymock.tests2.NameTest.nameForStrictMock":81,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":118,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":75,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":212,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":178,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":105,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":309,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":115,"org.easymock.tests2.UsageStrictMockTest.range":28,"org.easymock.tests2.UsageConstraintsTest.lessThan":112,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":146,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":155,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":268,"org.easymock.tests2.CaptureTest.testCaptureRightOne":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":62,"org.easymock.tests2.UsageConstraintsTest.testOr":92,"org.easymock.tests.UsageRangeTest.combination":299,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":209,"org.easymock.tests.UsageTest.wrongArguments":435,"org.easymock.tests2.MockBuilderTest.testWithConstructor":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":59,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":481,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":396,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":404,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":261,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":1,"org.easymock.tests.UsageVarargTest.varargShortAccepted":380,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":477,"org.easymock.tests2.UsageConstraintsTest.cmpTo":97,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":20,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":263,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":192,"org.easymock.tests2.CaptureTest.testCaptureFromStub":139,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":314,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":116,"org.easymock.tests.UsageTest.unexpectedCallWithArray":434,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":286,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":475,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":405,"org.easymock.tests2.UsageConstraintsTest.constraints":86,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":288,"org.easymock.samples.ExampleTest.addAndChangeDocument":243,"org.easymock.tests.UsageStrictMockTest.testVerify":292,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":235,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":285,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":364,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":134,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":248,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":397,"org.easymock.tests.LimitationsTest.abstractClass":328,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":249,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":336,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":160,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":374}}]
