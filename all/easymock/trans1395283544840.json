[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:80","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"candidateMethod"}},{"position":"org.easymock.EasyMock:1177","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1848","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:415","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForEachImpl"},"failures":[295],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"failures":[296],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:139","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"method":"result"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[297,298,93,112,299,300],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:183","failures":[1,3,4,5,6,7,8,9,10,13,14,15,38,39,65,76,85,111,114,115,116,117,121,122,123,124,126,127,141,142,143,144,145,147,148,149,150,151,168,169,172,173,174,175,180,201,205,211,212,213,214,229,241,250,252,253,254,255,262,287],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:126","failures":[2,107,223,225,226],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:176","failures":[301,302,303,304,305,306,307,294],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[308],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"position":"org.easymock.EasyMock:1848","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:253","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:411","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","type":"CtLocalVariableImpl"},"failures":[295],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cls":"clazz"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[309,310,311],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1987","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Byte>(org.easymock.Capture<java.lang.Byte>))","type":"CtInvocationImpl"},"failures":[170],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ErrorMessage:50","failures":[39,312],"status":-1,"binaryOperator":"int == 1","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:50","failures":[39,312,313,89,90,115,253],"status":-1,"binaryOperator":"int == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,6,9,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,314,61,62,63,64,75,77,78,79,80,81,82,83,84,87,88,89,90,91,92,95,96,99,104,106,107,108,315,113,115,116,118,119,120,316,317,318,319,320,128,129,130,136,137,138,139,140,152,153,154,155,156,157,158,159,160,162,164,165,166,167,168,169,170,171,174,175,176,177,179,180,181,182,183,184,185,186,187,188,189,190,193,195,197,198,199,200,202,203,204,205,206,207,208,209,210,211,212,213,215,216,217,218,219,220,221,222,223,224,225,226,228,229,231,232,234,236,237,238,240,242,243,244,247,248,251,253,254,260,261,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,294],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[321,279,286,291],"status":-1,"binaryOperator":"int < 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[302,303,304,305,306,322,323],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:582","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[324,83,325,326,327],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[268,272,328],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:204","sourceCode":"try {\n    java.lang.reflect.Constructor<?>.setAccessible(true);\n    T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException());\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:207","sourceCode":"T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","args":"args","cstr":"cstr"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[199,301,302,303,304,329,305,307,322,330,331,294,323],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[332,292],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[333,226],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","delegateTo":"answer"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:814","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1235","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:38","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Long.java.lang.Class<java.lang.Long>.getName(), java.lang.Long.java.lang.Class<java.lang.Long>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:206","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"type":"type","org.easymock.MockType.STRICT":"type"}},{"position":"org.easymock.ConstructorArgs:60","failures":[218,222,334,335,336,337,338,322,339,340,323],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[341],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:73","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[0,11,11,12,12,13,14,37,38,342,65,343,344,345,346,118,119,120,154,155,156,158,159,160,161,162,163,164,165,166,186,187,188,189,193,199,201,347,348,349,216,217,218,219,221,222,227,350,228,351,229,230,231,232,233,234,352,235,294],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[321,291],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":268,"org.easymock.tests2.UsageTest.argumentsOrdered":246,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":91,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":212,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":103,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":241,"org.easymock.tests2.StubTest.stubWithReturnValue":263,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":322,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":288,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":49,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":15,"org.easymock.tests2.SerializationTest.testAllMockedMethod":201,"org.easymock.tests2.DelegateToTest.testReturnException":223,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":101,"org.easymock.tests.MockingTest.testPartialClassMocking":118,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":300,"org.easymock.samples.SupportTest.voteForRemovals":9,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":295,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":28,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":16,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":187,"org.easymock.tests.UsageExpectAndThrowTest.object":26,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":285,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":261,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":302,"org.easymock.tests2.DelegateToTest.testWrongClass":225,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":152,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":153,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":274,"org.easymock.tests2.UsageTest.wrongArguments":239,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":83,"org.easymock.samples.ConstructorCalledMockTest.testTax":11,"org.easymock.tests.UsageStrictMockTest.range":115,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":68,"org.easymock.samples.ExampleTest.answerVsDelegate":2,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":209,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":345,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":216,"org.easymock.tests2.UsageConstraintsTest.testNull":270,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":27,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":158,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":231,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":211,"org.easymock.tests2.CaptureTest.testPrimitive":170,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":87,"org.easymock.tests.UsageTest.moreThanOneArgument":92,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":35,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":97,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":67,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":157,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":297,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":133,"org.easymock.tests2.CaptureTest.testCaptureNone":175,"org.easymock.tests.UsageUnorderedTest.message":39,"org.easymock.tests.UsageVerifyTest.twoReturns":90,"org.easymock.tests.UsageVarargTest.varargByteAccepted":149,"org.easymock.tests2.ThreadingTest.testThreadSafe":181,"org.easymock.tests.UsageTest.argumentsOrdered":98,"org.easymock.tests.UsageVarargTest.varargIntAccepted":143,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":124,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":13,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":136,"org.easymock.tests2.CaptureTest.testCapture_2617107":169,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":306,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":227,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":86,"org.easymock.tests2.UsageConstraintsTest.any":275,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":230,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":333,"org.easymock.tests2.StubTest.stub":262,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":140,"org.easymock.tests.UsageExpectAndThrowTest.longType":19,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":102,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":326,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":252,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":264,"org.easymock.tests2.SerializationTest.testClass":199,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":215,"org.easymock.tests.LimitationsTest.mockNativeMethod":154,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":342,"org.easymock.tests2.AnswerTest.answer":195,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":59,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":328,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":319,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":259,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":349,"org.easymock.tests2.CaptureTest.testAnd":167,"org.easymock.tests2.UsageTest.strictResetToDefault":237,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":338,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":255,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":163,"org.easymock.tests2.MockedExceptionTest.testMockedException":192,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":132,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":206,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":61,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":96,"org.easymock.tests2.DelegateToTest.testDelegate":226,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":20,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":120,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":155,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":232,"org.easymock.tests.MockingTest.testNicePartialClassMocking":119,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":31,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":160,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":301,"org.easymock.tests2.CaptureTest.testCaptureLast":174,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":104,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":273,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":222,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":286,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":74,"org.easymock.tests.MockingTest.testTwoMocks":346,"org.easymock.tests2.CaptureTest.testCapture1_2446744":171,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":334,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":40,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":29,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":257,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":24,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":245,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":290,"org.easymock.tests.UsageThrowableTest.throwError":75,"org.easymock.tests.UsageStrictMockTest.differentMethods":116,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":183,"org.easymock.tests2.MockBuilderTest.testCreateMockString":235,"org.easymock.tests.UsageExpectAndThrowTest.floatType":18,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":135,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":281,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":196,"org.easymock.tests.UsageVerifyTest.twoThrows":89,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":335,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":188,"org.easymock.samples.PartialClassMockTest.testGetArea":0,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":137,"org.easymock.samples.ExampleTest.voteAgainstRemoval":4,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":165,"org.easymock.tests2.UsageTest.niceToStrict":240,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":17,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":336,"org.easymock.tests2.UsageConstraintsTest.testNotNull":289,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":82,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":191,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":309,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":229,"org.easymock.tests2.UsageTest.defaultResetToNice":244,"org.easymock.tests2.MockBuilderTest.testCreateMock":233,"org.easymock.samples.ExampleTest.voteAgainstRemovals":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":318,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":55,"org.easymock.tests.UsageVarargTest.differentLength":146,"org.easymock.tests2.CallbackTest.callback":190,"org.easymock.tests.UsageTest.openCallCountByLastCall":95,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":299,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":25,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":207,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":265,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":85,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":66,"org.easymock.tests.UsageCallCountTest.tooFewCalls":122,"org.easymock.tests.UsageOverloadedMethodTest.overloading":129,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":279,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":108,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":219,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":51,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":128,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":278,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":176,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":69,"org.easymock.tests.UsageThrowableTest.throwCheckedException":79,"org.easymock.tests2.EasyMockSupportClassTest.testAll":186,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":38,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":298,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":33,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":347,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":258,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":72,"org.easymock.tests2.CaptureTest.testCaptureAll":168,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":221,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":64,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":218,"org.easymock.tests2.UsageConstraintsTest.testMatches":280,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":220,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":198,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":134,"org.easymock.samples.ExampleTest.voteForRemovals":6,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":305,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":185,"org.easymock.tests.UsageVarargTest.allKinds":151,"org.easymock.tests2.DependencyTest.testInterfaceMocking":260,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":88,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":304,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":73,"org.easymock.samples.BasicClassMockTest.testPrintContent":14,"org.easymock.samples.ExampleTest.addDocument":5,"org.easymock.tests2.DelegateToTest.testStubDelegate":224,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":81,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":249,"org.easymock.tests2.AnswerTest.stubAnswer":197,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":105,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":113,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":307,"org.easymock.tests2.UsageConstraintsTest.greaterThan":282,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":314,"org.easymock.tests.UsageVarargTest.varargLongAccepted":148,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":166,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":117,"org.easymock.samples.ExampleTest.voteForRemoval":3,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":182,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":58,"org.easymock.tests.UsageExpectAndReturnTest.floatType":42,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":294,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":161,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":12,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":283,"org.easymock.tests.UsageThrowableTest.noUpperLimit":76,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":266,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":236,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":65,"org.easymock.tests2.SerializationTest.test":200,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":172,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":330,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":308,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":204,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":77,"org.easymock.tests2.UsageConstraintsTest.testSame":271,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":41,"org.easymock.samples.SupportTest.addDocument":8,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":100,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":327,"org.easymock.tests2.CaptureTest.testCaptureFirst":180,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":205,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":248,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":109,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":47,"org.easymock.tests.GenericTest.testPackageScope":37,"org.easymock.tests2.UsageTest.moreThanOneArgument":238,"org.easymock.tests2.CaptureTest.testCapture2_2446744":179,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":184,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":341,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":320,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":234,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":150,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":126,"org.easymock.tests.UsageExpectAndReturnTest.longType":43,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":202,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":70,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":352,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":52,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":34,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":287,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":340,"org.easymock.tests2.UsageStrictMockTest.differentMethods":254,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":32,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":131,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":44,"org.easymock.tests.UsageCallCountTest.tooManyCalls":127,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":324,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":30,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":62,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":121,"org.easymock.tests2.MockedExceptionTest.testRealException":194,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":48,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":331,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":251,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":21,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":84,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":80,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":217,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":350,"org.easymock.tests2.UsageConstraintsTest.testContains":277,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":193,"org.easymock.tests2.UsageConstraintsTest.testFind":269,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":130,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":311,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":292,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":159,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":293,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":110,"org.easymock.tests.UsageExpectAndReturnTest.object":50,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":312,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":284,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":162,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":228,"org.easymock.tests2.UsageStrictMockTest.range":253,"org.easymock.tests2.UsageConstraintsTest.lessThan":291,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":296,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":210,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":303,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":145,"org.easymock.tests.UsageTest.exactCallCountByLastCall":99,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":63,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":329,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":317,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":203,"org.easymock.tests2.CaptureTest.testCaptureRightOne":177,"org.easymock.tests2.UsageConstraintsTest.testOr":272,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":323,"org.easymock.tests.UsageRangeTest.combination":60,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":56,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":141,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":156,"org.easymock.tests.UsageTest.wrongArguments":94,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":107,"org.easymock.tests2.MockBuilderTest.testWithConstructor":337,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":343,"org.easymock.tests2.EasyMockSupportTest.testVerify":214,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":45,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":316,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":53,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":325,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":106,"org.easymock.tests.UsageVarargTest.varargShortAccepted":147,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":256,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":125,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":332,"org.easymock.tests2.UsageConstraintsTest.cmpTo":276,"org.easymock.tests.UsageVarargTest.varargCharAccepted":144,"org.easymock.tests2.CompareToTest.testLessThan":321,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":250,"org.easymock.tests2.UsageTest.openCallCountByLastCall":242,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":243,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":310,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":213,"org.easymock.tests2.CaptureTest.testCaptureFromStub":178,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":351,"org.easymock.tests.UsageTest.unexpectedCallWithArray":93,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":23,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":78,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":112,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":123,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":339,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":54,"org.easymock.tests2.UsageConstraintsTest.constraints":267,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":114,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":164,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":22,"org.easymock.samples.ExampleTest.addAndChangeDocument":7,"org.easymock.tests.CapturesMatcherTest.test":36,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":57,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":10,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":189,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":71,"org.easymock.tests2.UsageTest.resumeIfFailure":247,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":173,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":348,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":138,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":344,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":46,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":315,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":139,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":313,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":208,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":142}}]
