[{"transplant":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[10,11,12,13],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1026","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[14],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[15,16],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:172","failures":[1,9],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:42","sourceCode":"throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()","type":"CtThrowImpl"},"failures":[17],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[18],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\")","type":"CtInvocationImpl"},"failures":[19],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[20,21],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:325","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"this.java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[22],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,1,44,45,46,47,48,49,14,50,51,2,3,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,17,68,69,70,4,71,5,6,7,72,73,74,75,76,77,78,79,80,81,82,83,84,85,9,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[10,11,12,13],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:93","sourceCode":"while (java.lang.Class<?> != null) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    java.lang.reflect.Method java.lang.reflect.Method = null;\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n            continue;\n        } \n        if (java.lang.reflect.Method.isBridge()) {\n            continue;\n        } \n        if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n            if (java.lang.Class<?>[] == null) {\n                if (java.lang.reflect.Method != null) {\n                    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n                } \n                java.lang.reflect.Method = java.lang.reflect.Method;\n            } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n                return java.lang.reflect.Method;\n            } \n        } \n    }\n    if (java.lang.reflect.Method != null) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[106,106,107,107,108,109,110,10,12,111,112,113,114,41,115,42,43,116,117,1,44,45,46,118,47,119,48,120,121,122,123,124,49,125,126,14,127,51,2,128,3,52,129,130,131,132,133,134,135,136,137,138,139,140,141,142,83,9,143],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[144],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[25,30,121],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:40","failures":[106,107,145,146,147,148,149,150,151,152,108,109,153,154,110,155,156,23,10,11,12,0,157,158,159,160,161,162,163,164,165,111,166,167,112,168,169,170,171,172,173,174,175,176,113,177,178,179,180,181,114,182,183,184,185,186,187,188,24,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,25,204,205,144,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,22,236,237,15,238,239,240,241,242,243,244,245,26,246,27,28,29,30,247,248,249,31,32,33,34,250,35,251,36,252,37,38,253,39,40,254,255,256,257,41,258,42,43,259,260,116,117,1,261,44,262,263,45,46,264,47,119,48,265,120,121,122,123,266,124,267,268,49,125,126,14,269,50,127,51,2,128,270,271,3,52,272,273,274,275,276,277,278,279,280,281,53,54,282,283,284,285,286,287,55,56,57,58,132,288,289,290,291,292,293,294,59,60,295,296,297,298,299,300,301,133,302,61,303,62,63,64,65,66,304,305,306,307,308,309,67,310,311,312,313,314,315,316,317,318,319,320,321,322,134,135,136,323,137,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,17,68,18,347,69,348,349,70,4,71,350,351,352,353,138,5,6,7,354,355,356,357,139,140,141,358,359,360,361,362,363,364,365,366,367,72,368,369,370,371,372,373,374,8,375,142,376,377,378,379,380,381,382,383,384,16,385,386,387,388,389,390,391,73,74,75,76,392,393,77,78,79,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,80,81,82,417,418,419,83,420,421,84,85,9,86,87,20,422,423,424,425,426,427,428,429,430,431,432,433,143,434,435,88,436,437,89,90,91,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,21,472,473,92,93,474,94,95,96,97,98,99,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,100,492,101,102,493,494,103,104,105],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[495,496,497,498,75,94],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:85","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object));\n} ","type":"CtIfImpl"},"failures":[106,106,107,107,145,146,147,148,150,152,110,156,23,10,11,111,112,113,114,184,186,187,188,24,189,191,192,193,194,195,196,197,198,199,200,201,202,203,25,204,205,144,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,22,236,237,15,238,239,240,241,242,243,244,245,26,246,27,28,29,30,247,248,249,31,32,33,34,250,35,251,36,252,37,38,253,39,40,254,255,41,42,43,116,117,1,44,45,46,47,119,48,265,120,121,122,123,124,49,125,126,14,50,127,51,2,128,271,3,52,275,276,53,54,132,59,60,300,301,133,302,61,62,63,64,65,66,304,305,306,307,308,309,67,310,311,313,134,135,136,137,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,17,68,69,348,70,4,71,350,351,352,353,5,6,7,354,139,141,360,372,373,374,375,142,387,388,389,390,391,73,74,75,76,392,393,77,78,79,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,80,81,82,417,418,419,83,84,85,9,86,87,20,422,423,424,425,426,427,428,429,430,431,143,435,88,436,437,89,90,91,438,439,440,441,442,459,465,467,468,469,470,471,21,472,473,92,93,94,95,96,97,98,99,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,101],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[29],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:355","sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[358],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[18],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[14],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < (java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[25,27,28,31,32,495,499,500,501,496,502,497,503,498,504,505,74,75,76,77,78,94],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:310","sourceCode":"return java.lang.Class<?>.equals(java.lang.Void.java.lang.Class<java.lang.Void>)","type":"CtReturnImpl"},"failures":[106,106,107,107,145,147,148,150,110,156,10,11,111,112,113,114,187,188,24,189,191,192,193,194,195,196,198,199,200,201,202,203,25,204,205,144,206,207,209,210,211,212,213,217,223,224,226,227,230,231,232,233,234,235,22,236,237,15,238,239,242,26,246,27,29,247,248,249,33,34,250,35,251,36,252,37,38,253,39,40,254,255,42,116,1,44,46,119,48,265,120,121,122,124,125,126,14,127,51,2,128,271,3,52,275,276,53,132,59,133,62,64,65,305,310,135,136,137,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,17,68,71,350,351,352,139,141,360,373,374,375,387,388,391,73,74,392,393,79,414,415,416,80,82,418,419,424,426,427,428,429,430,431,143,90,438,439,440,441,442,459,465,95,97,98,487,488,489,490,491],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:354","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[138],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:119","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1277","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[314,318],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"failures":[10,261,263,506,507,508,509,510,132,288],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[192,193,197,198,144,206,210,211],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[511,512,513,514,515,516,10,163,164,165,111,166,167,112,168,169,170,171,172,173,174,175,176,113,177,178,179,180,181,114,182,183,263,517,518],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:583","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[24,189,192,194,195,197,144,210,223,225,233],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.EqualsWithDelta:40","failures":[205],"status":-1,"binaryOperator":"(((java.lang.Number.doubleValue()) - (java.lang.Number.doubleValue())) <= (java.lang.Number.doubleValue())) && ((java.lang.Number.doubleValue()) <= ((java.lang.Number.doubleValue()) + (java.lang.Number.doubleValue())))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[305],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[24,189,192,194,195,197,144,210,223,225,233],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[145,146,147,148,149,150,151,152,108,109,153,154,110,155,156,23,11,12,0,160,161,162,163,164,111,167,112,168,169,172,175,113,177,178,179,180,181,114,184,185,186,187,188,24,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,25,204,205,144,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,22,236,237,15,238,239,240,241,242,243,244,245,26,246,27,28,29,30,247,248,249,31,32,33,34,250,35,251,36,252,37,38,253,39,40,254,255,256,257,41,42,43,260,116,117,1,44,45,46,47,119,48,265,120,121,122,123,266,124,268,49,125,126,14,269,50,127,51,128,271,272,273,274,275,276,277,278,279,280,281,53,54,282,283,284,285,286,287,55,56,57,58,290,291,292,293,294,59,60,295,296,297,298,299,300,301,133,302,61,303,62,63,64,65,66,304,305,306,307,308,309,67,310,311,312,313,314,315,316,317,318,319,320,321,322,134,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,17,68,18,347,69,348,349,70,4,71,350,351,352,353,138,5,6,7,354,355,356,357,139,140,141,358,359,360,361,362,363,364,365,366,367,72,368,369,370,371,372,373,374,375,142,376,377,378,379,380,381,382,383,384,16,385,386,387,388,389,390,391,73,74,75,76,392,393,77,78,79,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,80,81,82,417,418,419,83,84,85,9,86,87,20,422,423,424,425,426,427,428,429,430,431,432,433,143,434,435,88,436,437,89,90,91,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,21,472,473,92,93,474,94,95,96,97,98,99,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,100,492,101,102,493,494,103,104,105],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[48],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[106,106,107,107,108,109,110,10,12,111,112,113,114,41,115,42,43,116,117,1,44,45,46,118,47,119,48,120,121,122,123,124,49,125,126,14,127,51,2,128,3,52,129,130,131,132,133,134,135,136,137,138,139,140,141,142,83,9,143],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[375],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":189,"org.easymock.tests2.UsageTest.argumentsOrdered":32,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":73,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":254,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":60,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":453,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":30,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":154,"org.easymock.tests2.DelegateToTest.testReturnException":241,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":477,"org.easymock.tests.MockingTest.testPartialClassMocking":135,"org.easymock.tests.MockClassControlTest.testToString":5,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":287,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":360,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":462,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":171,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":394,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":112,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":276,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":506,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":196,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":387,"org.easymock.tests2.UsageTest.wrongArguments":28,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":286,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":308,"org.easymock.samples.ExampleTest.answerVsDelegate":146,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":9,"org.easymock.tests2.UsageConstraintsTest.testNull":192,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":325,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":120,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":40,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":356,"org.easymock.tests2.CaptureTest.testPrimitive":226,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":391,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":413,"org.easymock.tests.UsageTest.moreThanOneArgument":74,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":265,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":489,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":482,"org.easymock.tests.UsageTest.argumentsOrdered":78,"org.easymock.tests.UsageVarargTest.varargIntAccepted":364,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":458,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":438,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":41,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":158,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":298,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":117,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":445,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":442,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":500,"org.easymock.tests.ReplayStateInvalidUsageTest.times":384,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":53,"org.easymock.tests2.DependencyTest.testClassMocking":273,"org.easymock.tests2.AnswerTest.answer":213,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":197,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":460,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":222,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":421,"org.easymock.tests2.CaptureTest.testAnd":223,"org.easymock.tests2.UsageTest.strictResetToDefault":246,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":49,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":259,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":488,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":252,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":351,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":486,"org.easymock.tests2.DelegateToTest.testDelegate":245,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":409,"org.easymock.tests.LimitationsTest.mockFinalMethod":434,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":480,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":471,"org.easymock.tests2.DependencyTest.testClassMockingSupport":274,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":17,"org.easymock.tests2.CaptureTest.testCapture1_2446744":227,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":266,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":407,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":220,"org.easymock.tests.UsageThrowableTest.throwError":424,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":378,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":85,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":8,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":299,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":491,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":183,"org.easymock.samples.PartialClassMockTest.testGetArea":110,"org.easymock.tests.MockingTest.testInterfaceMocking":323,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":379,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":439,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":418,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":395,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":172,"org.easymock.tests2.UsageTest.niceToStrict":29,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":4,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":516,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":443,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":116,"org.easymock.tests2.MockBuilderTest.testCreateMock":45,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":179,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":283,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":495,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":403,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":37,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":420,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":473,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":100,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":306,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":513,"org.easymock.tests.UsageOverloadedMethodTest.overloading":415,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":181,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":176,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":437,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":202,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":414,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":338,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":201,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":232,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":365,"org.easymock.tests2.EasyMockSupportClassTest.testAll":111,"org.easymock.tests.MockClassControlTest.testEquals":355,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":140,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":501,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":411,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":129,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":469,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":221,"org.easymock.tests2.CaptureTest.testCaptureAll":224,"org.easymock.tests.MockNameTest.defaultName":67,"org.easymock.tests2.UsageConstraintsTest.testMatches":203,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":490,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":376,"org.easymock.samples.ExampleTest.voteForRemovals":150,"org.easymock.tests.UsageVarargTest.allKinds":372,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":80,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":470,"org.easymock.samples.BasicClassMockTest.testPrintContent":109,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":430,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":61,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":481,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":244,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":295,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":510,"org.easymock.tests2.UsageConstraintsTest.greaterThan":204,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":319,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":166,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":350,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":14,"org.easymock.samples.ExampleTest.voteForRemoval":147,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":320,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":237,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":269,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":86,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":159,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":123,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":142,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":26,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":263,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":450,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":251,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":426,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":164,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":476,"org.easymock.tests2.CaptureTest.testCaptureFirst":22,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":240,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":449,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":36,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":34,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":91,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":334,"org.easymock.tests2.UsageTest.moreThanOneArgument":27,"org.easymock.tests2.CaptureTest.testCapture2_2446744":235,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":238,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":461,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":46,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":371,"org.easymock.tests.GenericTest.testBridgedEquals":358,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":514,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":511,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":104,"org.easymock.tests.UsageExpectAndReturnTest.longType":330,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":467,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":250,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":412,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":118,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":208,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":375,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":410,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":487,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":422,"org.easymock.tests.UsageCallCountTest.tooManyCalls":105,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":503,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":180,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":335,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":285,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":399,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":429,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":51,"org.easymock.tests.MockingTest.testNiceClassMocking":326,"org.easymock.tests.MockingTest.testClassMocking":322,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":492,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":115,"org.easymock.tests2.UsageConstraintsTest.testContains":200,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":133,"org.easymock.tests2.UsageConstraintsTest.testFind":191,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":416,"org.easymock.tests.MockTypeTest.fromEasyMockClass":84,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":186,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":93,"org.easymock.tests.UsageExpectAndReturnTest.object":337,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":124,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":284,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":39,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":507,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":367,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":349,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":515,"org.easymock.tests.UsageTest.exactCallCountByLastCall":79,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":448,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":483,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":359,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":505,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":288,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":343,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":362,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":436,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":291,"org.easymock.tests.MockClassControlTest.testHashCode":354,"org.easymock.tests2.EasyMockSupportTest.testVerify":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":174,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":499,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":484,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":472,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":435,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":219,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":257,"org.easymock.tests.UsageVarargTest.varargCharAccepted":366,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":312,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":303,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":466,"org.easymock.tests2.UsageTest.openCallCountByLastCall":247,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":517,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":255,"org.easymock.tests.DefaultClassInstantiatorTest.object":313,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":21,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":69,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":175,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":427,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":280,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":290,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":125,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":7,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":400,"org.easymock.tests.CapturesMatcherTest.test":19,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":344,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":20,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":114,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":6,"org.easymock.tests2.UsageTest.resumeIfFailure":33,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":83,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":157,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":479,"org.easymock.tests2.StubTest.stubWithReturnValue":305,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":261,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":209,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":336,"org.easymock.tests2.SerializationTest.testAllMockedMethod":12,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":459,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":496,"org.easymock.samples.SupportTest.voteForRemovals":156,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":357,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":293,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":406,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":13,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":465,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":214,"org.easymock.tests.UsageExpectAndThrowTest.object":404,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":361,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":206,"org.easymock.tests2.DelegateToTest.testWrongClass":243,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":373,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":374,"org.easymock.samples.ConstructorCalledMockTest.testTax":106,"org.easymock.tests.UsageStrictMockTest.range":97,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":161,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":253,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":127,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":512,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":405,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":1,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":163,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":77,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":307,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":497,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":419,"org.easymock.tests2.CaptureTest.testCaptureNone":231,"org.easymock.tests.UsageUnorderedTest.message":92,"org.easymock.tests.UsageVerifyTest.twoReturns":82,"org.easymock.tests.UsageVarargTest.varargByteAccepted":370,"org.easymock.tests2.ThreadingTest.testThreadSafe":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":177,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":494,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":108,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":70,"org.easymock.tests2.CaptureTest.testCapture_2617107":225,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":502,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":463,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":390,"org.easymock.tests2.UsageConstraintsTest.any":198,"org.easymock.tests2.StubTest.stub":304,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":383,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":423,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":478,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":464,"org.easymock.tests.UsageExpectAndThrowTest.longType":397,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":317,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":382,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":63,"org.easymock.tests2.SerializationTest.testClass":10,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":59,"org.easymock.tests.LimitationsTest.mockNativeMethod":143,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":141,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":346,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":131,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":279,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":66,"org.easymock.tests2.NameTest.nameForMocksControl":58,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":281,"org.easymock.tests2.MockedExceptionTest.testMockedException":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":167,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":393,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":398,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":185,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":137,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":119,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":44,"org.easymock.tests.MockingTest.testNicePartialClassMocking":136,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":122,"org.easymock.tests2.CaptureTest.testCaptureLast":230,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":277,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":68,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":52,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":195,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":207,"org.easymock.tests.MockingTest.testTwoMocks":134,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":272,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":327,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":402,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":31,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":211,"org.easymock.samples.ExampleTest.removeNonExistingDocument":151,"org.easymock.tests.UsageStrictMockTest.differentMethods":98,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":282,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":380,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":292,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":315,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":15,"org.easymock.tests2.MockBuilderTest.testCreateMockString":47,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":353,"org.easymock.tests.UsageExpectAndThrowTest.floatType":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":168,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":165,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":216,"org.easymock.tests.UsageVerifyTest.twoThrows":81,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":289,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":113,"org.easymock.samples.ExampleTest.voteAgainstRemoval":148,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":454,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":417,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":126,"org.easymock.tests.LimitationsTest.privateConstructor":433,"org.easymock.tests2.UsageConstraintsTest.testNotNull":210,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":431,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":300,"org.easymock.tests2.UsageTest.defaultResetToNice":249,"org.easymock.samples.ExampleTest.voteAgainstRemovals":145,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":455,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":342,"org.easymock.tests.UsageVarargTest.differentLength":72,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":278,"org.easymock.tests2.CallbackTest.callback":23,"org.easymock.tests2.UsageConstraintsTest.equals":190,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":504,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":267,"org.easymock.tests.UsageTest.openCallCountByLastCall":392,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":187,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":389,"org.easymock.tests.UsageCallCountTest.tooFewCalls":102,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":128,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":309,"org.easymock.tests.UsageThrowableTest.throwCheckedException":428,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":498,"org.easymock.tests.MockingTest.testStrictClassMocking":321,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":3,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":311,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":2,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":54,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":16,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":271,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":218,"org.easymock.tests.ObjectMethodsTest.testHashCode":348,"org.easymock.tests2.NameTest.nameForNiceMock":57,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":239,"org.easymock.tests2.DependencyTest.testInterfaceMocking":275,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":508,"org.easymock.samples.ExampleTest.addDocument":149,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":182,"org.easymock.tests2.DelegateToTest.testStubDelegate":242,"org.easymock.tests2.AnswerTest.stubAnswer":217,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":95,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":262,"org.easymock.tests.UsageVarargTest.varargLongAccepted":369,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":99,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":452,"org.easymock.tests.UsageExpectAndReturnTest.floatType":329,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":345,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":132,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":107,"org.easymock.tests.UsageThrowableTest.noUpperLimit":425,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":89,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":205,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":297,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":188,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":0,"org.easymock.tests2.SerializationTest.test":11,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":228,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":314,"org.easymock.tests2.UsageConstraintsTest.testSame":193,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":328,"org.easymock.samples.SupportTest.addDocument":155,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":270,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":169,"org.easymock.tests.GenericTest.testPackageScope":139,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":485,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":447,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":296,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":324,"org.easymock.tests2.NameTest.nameForMock":55,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":339,"org.easymock.tests2.UsageStrictMockTest.differentMethods":65,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":264,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":268,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":331,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":408,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":347,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":352,"org.easymock.tests2.MockedExceptionTest.testRealException":302,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":87,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":457,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":162,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":456,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":62,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":388,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":386,"org.easymock.tests2.NameTest.nameForStrictMock":56,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":260,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":518,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":184,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":121,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":160,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":144,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":316,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":42,"org.easymock.tests2.UsageStrictMockTest.range":64,"org.easymock.tests2.UsageConstraintsTest.lessThan":212,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":294,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":509,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":451,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":35,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":173,"org.easymock.tests2.CaptureTest.testCaptureRightOne":233,"org.easymock.tests2.UsageConstraintsTest.testOr":194,"org.easymock.tests.UsageRangeTest.combination":71,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":48,"org.easymock.tests.UsageTest.wrongArguments":76,"org.easymock.tests2.MockBuilderTest.testWithConstructor":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":170,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":138,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":332,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":444,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":340,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":318,"org.easymock.tests.UsageVarargTest.varargShortAccepted":368,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":103,"org.easymock.tests2.UsageConstraintsTest.cmpTo":199,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":215,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":446,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":248,"org.easymock.tests2.CaptureTest.testCaptureFromStub":234,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":377,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":43,"org.easymock.tests.UsageTest.unexpectedCallWithArray":75,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":94,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":493,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":341,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":96,"org.easymock.tests2.UsageConstraintsTest.constraints":24,"org.easymock.samples.ExampleTest.addAndChangeDocument":152,"org.easymock.tests.UsageStrictMockTest.testVerify":475,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":153,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":474,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":468,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":229,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":440,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":130,"org.easymock.tests.LimitationsTest.abstractClass":432,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":333,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":441,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":90,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":38,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":363}}]
