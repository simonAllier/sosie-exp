[{"position":"org.easymock.internal.ArgumentToString:89","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[49,50,51,52],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"failures":[53,54,55],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:108","sourceCode":"return org.easymock.internal.ExpectedInvocation.equals(org.easymock.internal.ExpectedInvocation)","type":"CtReturnImpl"},"failures":[0,2,3,4,7,8,14,15,16,17,18,21,26,30,33,34],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:681","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[56,57,58,59,60,29,61,38,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:305","failures":[80,81,82],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[2,5,12,83,84,85,29,86,87,88,89,90,33,35,40,91,92],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"value"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[93,94,95,96,97,98,99,100,101,102,103,104],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"paramType"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[2,6,9,10,27,28,29,31,33,36,37,38,39,42,105],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[106,107,108,109,110,111,112,113,114,114,115,115,116,56,117,57,118,119,120,121,122,123,94,124,125,126,95,127,128,2,3,4,5,129,130,7,131,132,58,11,12,133,83,59,134,135,136,137,138,139,140,141,142,143,13,144,145,146,147,148,149,150,151,152,153,154,155,156,14,157,158,159,160,161,162,163,164,165,166,167,168,169,84,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,15,185,186,187,16,17,188,189,18,190,191,49,50,192,193,194,195,85,196,19,197,198,199,21,200,23,201,202,203,204,205,24,206,25,207,208,209,26,210,211,212,213,214,215,216,217,218,219,27,220,28,29,80,221,222,33,34,35,61,223,224,40,225,226,62,227,63,228,64,229,230,231,65,232,233,91,234,67,92,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,69,268,70,269,270,71,271,53,272,72,273,274,275,73,276,74,277,75,278,279,76,280,281,77,282,78,283,79,284,54,285,286,287,288,289,55,290,291,292,293,294,295,296,297,82],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:235","failures":[114,115,118,93,49,100,101,102,298,103,104,299,300,301,302],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1235","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ErrorMessage:51","failures":[2,28,29,33,303],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[304,157],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:94","failures":[],"status":0,"binaryOperator":"(\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[168,84,305],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","failures":[13,144,146,148,149,306,159,163,173,307,180],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:557","failures":[106,107,108,109,110,111,112,113,114,114,115,115,116,56,117,57,118,119,120,121,122,123,94,124,125,126,95,127,128,2,3,4,5,129,130,7,131,132,58,11,12,133,83,59,134,135,136,137,138,139,140,141,142,143,13,144,145,146,147,148,149,150,151,152,153,154,155,156,14,157,158,159,160,161,162,163,164,165,166,167,168,169,84,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,15,185,186,187,16,17,188,189,18,190,191,49,50,192,193,194,195,85,196,19,197,198,199,21,200,23,201,202,203,204,205,24,206,25,207,208,209,26,210,211,212,213,214,215,216,217,218,219,27,220,28,29,80,221,222,33,34,35,61,223,224,40,225,226,62,227,63,228,64,229,230,231,65,232,233,91,234,67,92,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,69,268,70,269,270,71,271,53,272,72,273,274,275,73,276,74,277,75,278,279,76,280,281,77,282,78,283,79,284,54,285,286,287,288,289,55,290,291,292,293,294,295,296,297,82],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"toStringMethod","method":"toStringMethod"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"failures":[304],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[308,309,31,36,310,311],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:37","failures":[312,106,107,108,109,313,110,111,314,315,316,317,112,119,120,121,127,318,128,1,2,3,319,4,5,129,130,7,8,131,132,11,12,133,83,137,138,139,141,144,146,148,149,163,169,84,170,172,173,174,177,178,180,183,184,15,185,186,187,16,17,189,18,190,191,49,50,192,195,85,197,198,199,23,203,206,207,208,209,320,218,219,27,220,28,29,321,222,32,33,34,322,35,61,223,224,40,226,62,227,63,228,64,230,231,65,233,91,234,67,92,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,265,68,323,324,325,326,327,328,329,330,331,267,69,268,70,269,270,71,271,272,72,273,274,275,73,276,74,277,75,278,279,76,280,281,77,282,78,283,79,290,291,292,293,294],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"method"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[332,333,334,335,336,337],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[264],"status":-1,"binaryOperator":"(int <= int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1433","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[315,316,113,114,114,115,115,117,118,122,123,94,124,126,95,59,134,135,136,49,51,338,339,340,19,341,197,342,198,199,20,21,343,22,200,23,202,203,204,344,205,345,24,206,25,216,320,217,346,347,225,229,348,286,287,288,349],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"failures":[93,350,351,352,353,354,102],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:105","failures":[312,106,107,108,109,313,110,355,111,314,317,112,116,56,117,57,356,357,358,359,360,119,361,362,363,364,365,366,120,121,125,96,367,368,369,370,371,127,372,373,374,375,376,377,0,318,128,1,2,3,319,378,379,380,381,382,4,5,129,130,6,7,8,131,132,58,9,10,11,12,133,83,383,384,137,138,139,140,141,142,143,13,144,385,145,146,147,148,149,150,306,151,152,153,154,155,156,14,157,158,159,160,161,386,162,163,164,165,387,388,389,390,391,166,392,167,168,169,84,170,171,172,173,174,307,175,176,393,394,177,178,179,180,181,182,183,184,15,185,186,187,16,17,188,189,18,190,191,395,50,192,193,194,195,85,196,201,207,208,209,60,396,397,398,26,210,211,212,213,214,215,399,400,401,402,403,404,405,406,407,218,219,27,220,28,29,408,409,410,411,412,413,414,415,416,86,305,87,417,418,419,420,80,421,422,423,88,89,221,90,30,321,31,222,32,33,34,322,424,35,61,36,37,223,224,38,39,40,226,62,227,63,228,64,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,230,443,231,65,66,232,105,233,91,234,67,92,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,68,323,324,444,325,326,43,327,328,329,330,331,445,267,69,268,70,269,270,71,271,53,272,72,273,274,275,73,276,74,277,75,278,279,76,280,281,77,282,78,283,79,284,54,285,446,447,448,449,450,289,451,452,453,44,45,46,454,55,455,290,291,292,293,294,295,296,297,81,82,456],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[312,106,107,108,109,313,110,111,314,317,112,116,56,117,57,119,361,120,121,125,127,372,0,318,128,1,2,3,319,379,380,381,382,4,5,129,130,6,7,8,131,132,58,9,10,11,12,133,83,137,138,139,140,141,142,143,13,144,145,146,147,148,149,150,306,151,152,153,154,155,156,14,157,158,159,160,161,386,162,163,164,165,388,389,390,391,166,167,168,169,84,170,171,172,173,174,307,175,176,393,394,177,178,179,180,181,182,183,184,15,185,186,187,16,17,188,189,18,190,191,395,49,50,192,193,194,195,85,196,201,207,208,209,60,396,397,398,26,210,211,212,213,214,215,399,400,401,402,403,404,405,406,407,218,219,27,220,28,29,80,221,30,321,31,222,32,33,34,322,424,35,61,36,37,223,224,38,39,40,226,62,227,63,228,64,425,426,427,428,429,230,443,231,65,66,232,105,233,91,234,67,92,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,68,323,324,325,326,43,327,328,329,330,331,445,267,69,268,70,269,270,71,271,53,272,72,273,274,275,73,276,74,277,75,278,279,76,280,281,77,282,78,283,79,284,54,285,348,449,289,451,452,453,44,45,46,55,290,291,292,293,294,295,296,297,81,82],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:613","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:122","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:213","failures":[457,458],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:932","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[160],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:213","failures":[457,458],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[459,142,157,162],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":144,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":35,"org.easymock.tests2.UsageTest.argumentsOrdered":10,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":190,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":305,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":8,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":312,"org.easymock.tests2.DelegateToTest.testReturnException":169,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":62,"org.easymock.tests.MockingTest.testPartialClassMocking":286,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":387,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":55,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":423,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":134,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":272,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":121,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":350,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":150,"org.easymock.tests2.UsageTest.wrongArguments":6,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":233,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":366,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":397,"org.easymock.samples.ExampleTest.answerVsDelegate":107,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":347,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":448,"org.easymock.tests2.UsageConstraintsTest.testNull":146,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":202,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":18,"org.easymock.tests2.CaptureTest.testPrimitive":175,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":92,"org.easymock.tests.UsageTest.moreThanOneArgument":61,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":79,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":201,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":292,"org.easymock.tests.UsageTest.argumentsOrdered":39,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":260,"org.easymock.tests.UsageVarargTest.varargIntAccepted":324,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":420,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":235,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":339,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":354,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":376,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":342,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":410,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":239,"org.easymock.tests.ReplayStateInvalidUsageTest.times":439,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":119,"org.easymock.tests2.AnswerTest.answer":192,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":421,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":382,"org.easymock.tests2.CaptureTest.testAnd":173,"org.easymock.tests2.UsageTest.strictResetToDefault":129,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":101,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":345,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":291,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":187,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":211,"org.easymock.tests2.DelegateToTest.testDelegate":172,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":264,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":77,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":228,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":407,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":81,"org.easymock.tests2.CaptureTest.testCapture1_2446744":176,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":280,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":380,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":433,"org.easymock.tests.UsageThrowableTest.throwError":267,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":400,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":48,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":377,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":294,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":299,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":97,"org.easymock.samples.PartialClassMockTest.testGetArea":113,"org.easymock.tests.MockingTest.testInterfaceMocking":446,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":434,"org.easymock.tests2.CompareToTest.testLessOrEqual":459,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":236,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":54,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":430,"org.easymock.tests2.UsageTest.niceToStrict":7,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":72,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":408,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":197,"org.easymock.tests2.MockBuilderTest.testCreateMock":20,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":363,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":75,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":308,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":16,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":215,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":449,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":60,"org.easymock.tests.UsageOverloadedMethodTest.overloading":208,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":155,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":65,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":207,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":251,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":154,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":179,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":444,"org.easymock.tests2.EasyMockSupportClassTest.testAll":59,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":320,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":78,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":405,"org.easymock.tests2.CaptureTest.testCaptureAll":174,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":381,"org.easymock.tests.MockNameTest.defaultName":445,"org.easymock.tests2.UsageConstraintsTest.testMatches":156,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":431,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":293,"org.easymock.samples.ExampleTest.voteForRemovals":110,"org.easymock.tests.UsageVarargTest.allKinds":331,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":220,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":406,"org.easymock.samples.BasicClassMockTest.testPrintContent":316,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":71,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":0,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":171,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":64,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":373,"org.easymock.tests2.UsageConstraintsTest.greaterThan":157,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":210,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":25,"org.easymock.samples.ExampleTest.voteForRemoval":108,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":337,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":138,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":401,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":344,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":5,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":229,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":298,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":415,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":185,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":268,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":226,"org.easymock.tests2.CaptureTest.testCaptureFirst":183,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":168,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":414,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":186,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":12,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":105,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":247,"org.easymock.tests2.CaptureTest.testCapture2_2446744":182,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":140,"org.easymock.tests2.UsageTest.moreThanOneArgument":130,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":422,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":21,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":330,"org.easymock.tests.GenericTest.testBridgedEquals":458,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":99,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":45,"org.easymock.tests.UsageExpectAndReturnTest.longType":243,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":403,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":184,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":283,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":343,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":386,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":53,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":282,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":290,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":296,"org.easymock.tests.UsageCallCountTest.tooManyCalls":46,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":289,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":248,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":365,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":73,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":270,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":123,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":450,"org.easymock.tests2.UsageConstraintsTest.testContains":153,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":340,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":117,"org.easymock.tests2.UsageConstraintsTest.testFind":145,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":209,"org.easymock.tests.MockTypeTest.fromEasyMockClass":399,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":167,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":30,"org.easymock.tests.UsageExpectAndReturnTest.object":250,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":205,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":364,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":189,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":326,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":351,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":428,"org.easymock.tests.UsageTest.exactCallCountByLastCall":40,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":265,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":413,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":454,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":261,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":93,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":68,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":256,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":231,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":368,"org.easymock.tests2.EasyMockSupportTest.testVerify":395,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":262,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":214,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":230,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":41,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":379,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":378,"org.easymock.tests.UsageVarargTest.varargCharAccepted":325,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":318,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":90,"org.easymock.tests2.UsageTest.openCallCountByLastCall":131,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":191,"org.easymock.tests.DefaultClassInstantiatorTest.object":332,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":213,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":426,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":42,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":74,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":70,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":359,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":367,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":24,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":276,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":257,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":136,"org.easymock.tests2.UsageTest.resumeIfFailure":11,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":346,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":63,"org.easymock.tests2.StubTest.stubWithReturnValue":83,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":102,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":162,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":249,"org.easymock.tests2.SerializationTest.testAllMockedMethod":51,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":80,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":301,"org.easymock.samples.SupportTest.voteForRemovals":112,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":309,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":457,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":370,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":76,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":52,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":221,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":193,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":455,"org.easymock.tests.UsageExpectAndThrowTest.object":278,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":160,"org.easymock.tests2.DelegateToTest.testWrongClass":170,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":218,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":219,"org.easymock.samples.ConstructorCalledMockTest.testTax":114,"org.easymock.tests.UsageStrictMockTest.range":33,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":383,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":188,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":122,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":279,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":198,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":441,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":38,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":396,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":310,"org.easymock.tests2.CaptureTest.testCaptureNone":178,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":285,"org.easymock.tests.UsageUnorderedTest.message":27,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":47,"org.easymock.tests.UsageVerifyTest.twoReturns":29,"org.easymock.tests.UsageVarargTest.varargByteAccepted":329,"org.easymock.tests2.ThreadingTest.testThreadSafe":137,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":453,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":429,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":315,"org.easymock.tests2.CaptureTest.testCapture_2617107":307,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":456,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":67,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":88,"org.easymock.tests2.UsageConstraintsTest.any":151,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":438,"org.easymock.tests2.StubTest.stub":133,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":297,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":89,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":227,"org.easymock.tests.UsageExpectAndThrowTest.longType":274,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":437,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":1,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":127,"org.easymock.tests2.SerializationTest.testClass":49,"org.easymock.tests.LimitationsTest.mockNativeMethod":225,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":217,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":259,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":358,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":319,"org.easymock.tests2.NameTest.nameForMocksControl":391,"org.easymock.tests2.MockedExceptionTest.testMockedException":56,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":360,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":224,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":392,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":275,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":288,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":200,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":199,"org.easymock.tests.MockingTest.testNicePartialClassMocking":287,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":204,"org.easymock.tests2.CaptureTest.testCaptureLast":177,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":356,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":82,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":149,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":95,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":161,"org.easymock.tests.MockingTest.testTwoMocks":348,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":96,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":240,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":277,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":9,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":164,"org.easymock.samples.ExampleTest.removeNonExistingDocument":355,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":435,"org.easymock.tests.UsageStrictMockTest.differentMethods":34,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":362,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":369,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":334,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":139,"org.easymock.tests2.MockBuilderTest.testCreateMockString":22,"org.easymock.tests.UsageExpectAndThrowTest.floatType":273,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":14,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":195,"org.easymock.tests.UsageVerifyTest.twoThrows":28,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":443,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":135,"org.easymock.samples.ExampleTest.voteAgainstRemoval":109,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":87,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":284,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":206,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":98,"org.easymock.tests2.UsageConstraintsTest.testNotNull":163,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":116,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":271,"org.easymock.tests2.UsageTest.defaultResetToNice":58,"org.easymock.samples.ExampleTest.voteAgainstRemovals":106,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":417,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":255,"org.easymock.tests.UsageVarargTest.differentLength":43,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":357,"org.easymock.tests2.CallbackTest.callback":4,"org.easymock.tests2.UsageConstraintsTest.equals":385,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":302,"org.easymock.tests.UsageTest.openCallCountByLastCall":223,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":142,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":234,"org.easymock.tests.UsageCallCountTest.tooFewCalls":451,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":124,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":398,"org.easymock.tests.UsageThrowableTest.throwCheckedException":269,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":311,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":126,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":266,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":94,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":361,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":440,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":125,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":196,"org.easymock.tests.ObjectMethodsTest.testHashCode":427,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":353,"org.easymock.tests2.NameTest.nameForNiceMock":390,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":141,"org.easymock.tests2.DependencyTest.testInterfaceMocking":120,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":352,"org.easymock.samples.ExampleTest.addDocument":313,"org.easymock.tests2.DelegateToTest.testStubDelegate":84,"org.easymock.tests2.AnswerTest.stubAnswer":85,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":222,"org.easymock.tests.UsageVarargTest.varargLongAccepted":328,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":322,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":86,"org.easymock.tests.UsageExpectAndReturnTest.floatType":242,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":258,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":118,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":115,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":158,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":66,"org.easymock.tests.UsageThrowableTest.noUpperLimit":69,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":375,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":143,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":393,"org.easymock.tests2.SerializationTest.test":50,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":333,"org.easymock.tests2.UsageConstraintsTest.testSame":147,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":241,"org.easymock.samples.SupportTest.addDocument":317,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":436,"org.easymock.tests.GenericTest.testPackageScope":216,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":263,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":412,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":374,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":447,"org.easymock.tests2.NameTest.nameForMock":388,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":252,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":104,"org.easymock.tests2.UsageStrictMockTest.differentMethods":3,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":244,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":281,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":425,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":212,"org.easymock.tests2.MockedExceptionTest.testRealException":57,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":402,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":419,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":384,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":300,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":418,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":128,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":442,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":91,"org.easymock.tests2.NameTest.nameForStrictMock":389,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":166,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":203,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":159,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":335,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":19,"org.easymock.tests2.UsageStrictMockTest.range":2,"org.easymock.tests2.UsageConstraintsTest.lessThan":165,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":371,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":416,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":15,"org.easymock.tests2.CaptureTest.testCaptureRightOne":180,"org.easymock.tests2.UsageConstraintsTest.testOr":148,"org.easymock.tests.UsageRangeTest.combination":26,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":23,"org.easymock.tests.UsageTest.wrongArguments":37,"org.easymock.tests2.MockBuilderTest.testWithConstructor":100,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":349,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":245,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":409,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":253,"org.easymock.tests.UsageVarargTest.varargShortAccepted":327,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":336,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":44,"org.easymock.tests2.UsageConstraintsTest.cmpTo":152,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":194,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":411,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":132,"org.easymock.tests2.CaptureTest.testCaptureFromStub":181,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":432,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":341,"org.easymock.tests.UsageTest.unexpectedCallWithArray":36,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":31,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":452,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":103,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":254,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":32,"org.easymock.tests2.UsageConstraintsTest.constraints":13,"org.easymock.samples.ExampleTest.addAndChangeDocument":111,"org.easymock.tests.UsageStrictMockTest.testVerify":424,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":314,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":321,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":404,"org.easymock.tests2.CompareToTest.testGreateThan":304,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":394,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":237,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":338,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":246,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":232,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":238,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":17,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":303,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":323}}]
