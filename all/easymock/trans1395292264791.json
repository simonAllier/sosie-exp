[{"position":"org.easymock.Capture:82","failures":[0,1,2,3,4,5,6,7,8,9,10,11],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,0,91,1,2,3,4,5,6,92,7,9,10,93,11,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[265],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:320","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[107,323],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[279,283],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[117],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[18,19,20,23,27,29,32,38,45,46,47,48,49,50,51,53,54,55,56,57,61,62,63,70,71,72,75,76,77,78,80,81,82,0,91,1,2,4,5,6,92,7,9,11,94,95,97,98,99,103,104,106,108,110,117,123,124,126,127,129,132,135,136,137,138,139,148,149,150,151,152,153,156,161,171,173,175,187,196,201,204,214,220,223,224,225,226,227,228,229,230,231,236,237,238,239,260,280,281,293,294,296,299,308,309,311,312,340,349,350,352,357,362,369,376,377,379,383,384,385,386,387,388,389,390,393,394,396,401,406,426,427,428,430,431,433,434,435,436,437,443,444,446,447,452,455,456,457,463,475,477,478,480,482],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[77,81,84,173,245,286,287,288,371,470],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"failures":[279,283],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericType":"genericType"}},{"transplant":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[489,490,491,492,493,494,28,30,31,96,255,295,297,298,495,496,497,442,443,444,450,462,463,476,479,480,481],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[70,71,72,498],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[21,24,25,319],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:92","failures":[125],"status":-1,"binaryOperator":"(\"\" + int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:65","sourceCode":"if (org.easymock.internal.Range.hasFixedCount()) {\n    return \"\" + (int);\n} else if (org.easymock.internal.Range.hasOpenCount()) {\n    return \"at least \" + (int);\n} else {\n    return ((\"between \" + (int)) + \" and \") + (int);\n}","type":"CtIfImpl"},"failures":[26,28,29,30,31,32,46,50,51,54,66,94,96,97,98,99,103,104,106,116,132,144,145,146,147,160,162,167,179,255,292,294,295,296,297,298,299,304,306,307,311,312,432,438,442,443,444,449,450,452,455,456,457],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[12,13,14,15,18,20,23,24,25,27,28,29,30,31,32,58,59,60,61,62,63,66,67,69,70,71,72,73,74,76,77,81,82,0,91,1,2,3,4,5,6,92,7,9,10,93,11,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,112,114,115,116,117,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,148,149,150,151,152,153,154,156,159,161,165,171,172,194,195,196,197,226,227,228,229,230,231,233,255,260,271,272,273,274,275,280,281,293,294,295,296,297,298,299,306,307,308,309,311,312,337,338,339,340,341,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,369,376,377,379,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,416,417,418,419,420,421,422,423,424,425,426,427,428,430,431,433,434,435,436,437,438,440,441,442,443,444,446,447,448,449,450,452,453,454,455,456,457,458,459,460,461,463,473,474,475,477,478,480,482,483,484,485,486,487,488],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"failures":[302,414,445],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[335],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:573","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[489,490,491,492,493,494,28,30,31,96,255,295,297,298,495,496,497,442,443,444,450,462,463,476,479,480,481],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[490,499,294,500,495,451],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[501,114,133,139],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:436","sourceCode":"java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[279,280,281,282,283],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[20,23,25,66,67,69,227,475],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:273","sourceCode":"if ((java.lang.Class<?>.getSigners()) != null) {\n    net.sf.cglib.proxy.Enhancer.setNamingPolicy(org.easymock.internal.ClassProxyFactory.net.sf.cglib.core.NamingPolicy);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"enhancer":"enhancer","toMock":"toMock"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[490,499,294,500,495,451],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[322,324,333,334,336],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:163","failures":[24,25],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[74,94,101,194,195,196,197,339,340,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,383,385,386,387,388,389,390,412,443,448,449,454,478,483,484,485,486,487,488],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"control":"control","this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[279,283],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[490,499,294,500,495,451],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[12,13,14,15,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,52,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,77,78,80,81,84,88,89,90,0,91,1,2,3,4,5,6,92,7,9,10,93,11,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,148,149,150,151,152,153,154,156,157,158,159,160,161,162,163,167,170,171,172,173,177,178,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,201,203,204,206,207,210,211,212,213,214,216,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,234,235,235,236,237,238,239,240,241,242,243,244,245,247,248,249,250,251,252,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,468,470,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[502,130,137,142],"status":-1,"binaryOperator":"int < 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[502,142],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[490,499,294,500,495,451],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:89","failures":[160,161,503,504,171],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[30,31,97,103,104,255,294,297,298,505,371,506,497,443,444,451,452,455,456],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":117,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":449,"org.easymock.tests2.UsageTest.argumentsOrdered":104,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":55,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":188,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":323,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":99,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":238,"org.easymock.tests2.DelegateToTest.testReturnException":108,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":484,"org.easymock.tests.MockingTest.testPartialClassMocking":376,"org.easymock.tests.MockClassControlTest.testToString":286,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":143,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":414,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":164,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":208,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":204,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":347,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":19,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":124,"org.easymock.tests2.UsageTest.wrongArguments":97,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":337,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":44,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":460,"org.easymock.samples.ExampleTest.answerVsDelegate":227,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":470,"org.easymock.tests2.UsageConstraintsTest.testNull":120,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":381,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":151,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":54,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":291,"org.easymock.tests2.CaptureTest.testPrimitive":2,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":341,"org.easymock.tests.UsageTest.moreThanOneArgument":450,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":366,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":150,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":273,"org.easymock.tests.UsageTest.argumentsOrdered":456,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":342,"org.easymock.tests.UsageVarargTest.varargIntAccepted":428,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":494,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":328,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":421,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":165,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":86,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":192,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":172,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":315,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":425,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":38,"org.easymock.tests.ReplayStateInvalidUsageTest.times":264,"org.easymock.tests2.DependencyTest.testClassMocking":16,"org.easymock.tests2.AnswerTest.answer":20,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":125,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":330,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":15,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":467,"org.easymock.tests2.CaptureTest.testAnd":0,"org.easymock.tests2.UsageTest.strictResetToDefault":95,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":169,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":159,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":272,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":440,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":49,"org.easymock.tests2.DelegateToTest.testDelegate":112,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":346,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":362,"org.easymock.tests.LimitationsTest.mockFinalMethod":370,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":487,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":420,"org.easymock.tests2.DependencyTest.testClassMockingSupport":17,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":462,"org.easymock.tests2.CaptureTest.testCapture1_2446744":3,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":155,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":360,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":13,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":258,"org.easymock.tests.UsageThrowableTest.throwError":383,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":469,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":193,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":371,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":222,"org.easymock.samples.PartialClassMockTest.testGetArea":239,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":259,"org.easymock.tests.MockingTest.testInterfaceMocking":378,"org.easymock.tests2.CompareToTest.testLessOrEqual":501,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":422,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":302,"org.easymock.tests2.UsageTest.niceToStrict":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":209,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":245,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":348,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":313,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":171,"org.easymock.tests2.MockBuilderTest.testCreateMock":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":217,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":41,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":490,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":356,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":50,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":466,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":270,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":304,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":458,"org.easymock.tests.UsageOverloadedMethodTest.overloading":447,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":219,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":478,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":130,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":446,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":402,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":129,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":7,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":429,"org.easymock.tests2.EasyMockSupportClassTest.testAll":201,"org.easymock.tests.MockClassControlTest.testEquals":290,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":281,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":364,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":418,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":14,"org.easymock.tests2.CaptureTest.testCaptureAll":91,"org.easymock.tests.MockNameTest.defaultName":372,"org.easymock.tests2.UsageConstraintsTest.testMatches":131,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":256,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":274,"org.easymock.samples.ExampleTest.voteForRemovals":231,"org.easymock.tests.UsageVarargTest.allKinds":437,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":442,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":419,"org.easymock.samples.BasicClassMockTest.testPrintContent":225,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":389,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":26,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":488,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":189,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":111,"org.easymock.tests2.UsageConstraintsTest.greaterThan":133,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":202,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":439,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":162,"org.easymock.samples.ExampleTest.voteForRemoval":228,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":254,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":163,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":59,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":471,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":87,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":154,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":482,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":94,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":177,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":320,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":47,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":199,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":483,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":107,"org.easymock.tests2.CaptureTest.testCaptureFirst":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":319,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":48,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":106,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":481,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":398,"org.easymock.tests2.UsageTest.moreThanOneArgument":96,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":61,"org.easymock.tests2.CaptureTest.testCapture2_2446744":93,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":179,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":331,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":436,"org.easymock.tests.GenericTest.testBridgedEquals":283,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":311,"org.easymock.tests.UsageExpectAndReturnTest.longType":394,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":416,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":45,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":365,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":445,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":138,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":363,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":271,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":277,"org.easymock.tests.UsageCallCountTest.tooManyCalls":312,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":218,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":399,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":43,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":352,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":388,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":76,"org.easymock.tests.MockingTest.testNiceClassMocking":382,"org.easymock.tests.MockingTest.testClassMocking":374,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":504,"org.easymock.tests2.UsageConstraintsTest.testContains":128,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":305,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":196,"org.easymock.tests2.UsageConstraintsTest.testFind":119,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":448,"org.easymock.tests.MockTypeTest.fromEasyMockClass":468,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":69,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":292,"org.easymock.tests.UsageExpectAndReturnTest.object":401,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":156,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":42,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":53,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":431,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":243,"org.easymock.tests.UsageTest.exactCallCountByLastCall":457,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":411,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":318,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":413,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":343,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":64,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":426,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":407,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":477,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":183,"org.easymock.tests.MockClassControlTest.testHashCode":289,"org.easymock.tests2.EasyMockSupportTest.testVerify":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":211,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":344,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":475,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":269,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":506,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":12,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":113,"org.easymock.tests.UsageVarargTest.varargCharAccepted":430,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":246,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":27,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":336,"org.easymock.tests2.UsageTest.openCallCountByLastCall":100,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":56,"org.easymock.tests.DefaultClassInstantiatorTest.object":247,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":268,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":241,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":497,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":212,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":354,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":386,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":36,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":182,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":160,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":288,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":353,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":408,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":276,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":492,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":220,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":287,"org.easymock.tests2.UsageTest.resumeIfFailure":105,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":465,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":85,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":486,"org.easymock.tests2.StubTest.stubWithReturnValue":74,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":174,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":400,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":139,"org.easymock.tests2.SerializationTest.testAllMockedMethod":72,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":329,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":499,"org.easymock.samples.SupportTest.voteForRemovals":237,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":279,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":185,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":359,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":498,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":335,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":21,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":415,"org.easymock.tests.UsageExpectAndThrowTest.object":357,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":136,"org.easymock.tests2.DelegateToTest.testWrongClass":110,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":473,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":474,"org.easymock.samples.ConstructorCalledMockTest.testTax":234,"org.easymock.tests.UsageStrictMockTest.range":297,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":89,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":52,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":75,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":358,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":173,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":455,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":198,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":266,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":459,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":500,"org.easymock.tests2.CaptureTest.testCaptureNone":92,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":303,"org.easymock.tests.UsageUnorderedTest.message":255,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":505,"org.easymock.tests.UsageVerifyTest.twoReturns":444,"org.easymock.tests.UsageVarargTest.varargByteAccepted":435,"org.easymock.tests2.ThreadingTest.testThreadSafe":58,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":215,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":309,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":224,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":244,"org.easymock.tests2.CaptureTest.testCapture_2617107":1,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":464,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":333,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":340,"org.easymock.tests2.UsageConstraintsTest.any":126,"org.easymock.tests2.StubTest.stub":73,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":263,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":278,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":485,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":334,"org.easymock.tests.UsageExpectAndThrowTest.longType":350,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":251,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":262,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":29,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":187,"org.easymock.tests2.SerializationTest.testClass":70,"org.easymock.tests.LimitationsTest.mockNativeMethod":369,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":410,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":282,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":35,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":32,"org.easymock.tests2.NameTest.nameForMocksControl":147,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":37,"org.easymock.tests2.MockedExceptionTest.testMockedException":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":203,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":454,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":68,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":351,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":379,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":148,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":175,"org.easymock.tests.MockingTest.testNicePartialClassMocking":377,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":153,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":33,"org.easymock.tests2.CaptureTest.testCaptureLast":6,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":463,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":123,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":82,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":137,"org.easymock.tests.MockingTest.testTwoMocks":375,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":83,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":391,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":355,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":103,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":141,"org.easymock.samples.ExampleTest.removeNonExistingDocument":232,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":40,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":260,"org.easymock.tests.UsageStrictMockTest.differentMethods":298,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":184,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":249,"org.easymock.tests2.ConstraintsToStringTest.andToString":493,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":60,"org.easymock.tests2.MockBuilderTest.testCreateMockString":181,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":205,"org.easymock.tests.UsageExpectAndThrowTest.floatType":349,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":200,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":23,"org.easymock.tests.UsageVerifyTest.twoThrows":443,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":65,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":476,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":214,"org.easymock.samples.ExampleTest.voteAgainstRemoval":229,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":301,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":324,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":161,"org.easymock.tests.LimitationsTest.privateConstructor":368,"org.easymock.tests2.UsageConstraintsTest.testNotNull":140,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":390,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":194,"org.easymock.tests2.UsageTest.defaultResetToNice":102,"org.easymock.samples.ExampleTest.voteAgainstRemovals":226,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":406,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":325,"org.easymock.tests.UsageVarargTest.differentLength":432,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":34,"org.easymock.tests2.CallbackTest.callback":66,"org.easymock.tests2.UsageConstraintsTest.equals":118,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":157,"org.easymock.tests.UsageTest.openCallCountByLastCall":453,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":114,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":339,"org.easymock.tests.UsageCallCountTest.tooFewCalls":307,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":78,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":461,"org.easymock.tests.UsageThrowableTest.throwCheckedException":387,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":495,"org.easymock.tests.MockingTest.testStrictClassMocking":373,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":412,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":81,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":39,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":77,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":265,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":80,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":25,"org.easymock.tests.ObjectMethodsTest.testHashCode":242,"org.easymock.tests2.NameTest.nameForNiceMock":146,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":62,"org.easymock.tests2.DependencyTest.testInterfaceMocking":18,"org.easymock.samples.ExampleTest.addDocument":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":216,"org.easymock.tests2.DelegateToTest.testStubDelegate":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":221,"org.easymock.tests2.AnswerTest.stubAnswer":24,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":295,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":176,"org.easymock.tests.UsageVarargTest.varargLongAccepted":434,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":299,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":322,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":409,"org.easymock.tests.UsageExpectAndReturnTest.floatType":393,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":63,"org.easymock.tests2.ConstraintsToStringTest.orToString":489,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":235,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":479,"org.easymock.tests.UsageThrowableTest.noUpperLimit":384,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":191,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":134,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":115,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":84,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":4,"org.easymock.tests2.SerializationTest.test":71,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":248,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":392,"org.easymock.tests2.UsageConstraintsTest.testSame":121,"org.easymock.samples.SupportTest.addDocument":236,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":79,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":206,"org.easymock.tests.GenericTest.testPackageScope":280,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":317,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":190,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":380,"org.easymock.tests2.NameTest.nameForMock":144,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":403,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":180,"org.easymock.tests2.UsageStrictMockTest.differentMethods":31,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":158,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":395,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":361,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":240,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":441,"org.easymock.tests2.MockedExceptionTest.testRealException":197,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":472,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":327,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":496,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":28,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":326,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":267,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":338,"org.easymock.tests2.NameTest.nameForStrictMock":145,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":170,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":67,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":152,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":88,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":135,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":250,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":167,"org.easymock.tests2.UsageStrictMockTest.range":30,"org.easymock.tests2.UsageConstraintsTest.lessThan":142,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":186,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":503,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":46,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":321,"org.easymock.tests2.CaptureTest.testCaptureRightOne":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":210,"org.easymock.tests2.UsageConstraintsTest.testOr":122,"org.easymock.tests.UsageRangeTest.combination":438,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":149,"org.easymock.tests.UsageTest.wrongArguments":452,"org.easymock.tests2.MockBuilderTest.testWithConstructor":166,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":207,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":285,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":396,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":404,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":314,"org.easymock.tests.UsageVarargTest.varargShortAccepted":433,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":252,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":310,"org.easymock.tests2.UsageConstraintsTest.cmpTo":127,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":22,"org.easymock.tests2.CompareToTest.testLessThan":502,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":316,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":101,"org.easymock.tests2.CaptureTest.testCaptureFromStub":10,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":257,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":168,"org.easymock.tests.UsageTest.unexpectedCallWithArray":451,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":294,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":308,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":405,"org.easymock.tests2.CaptureTest.testCapture":8,"org.easymock.tests2.UsageConstraintsTest.constraints":116,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":296,"org.easymock.samples.ExampleTest.addAndChangeDocument":233,"org.easymock.tests2.ConstraintsToStringTest.notToString":491,"org.easymock.tests.UsageStrictMockTest.testVerify":300,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":223,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":293,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":417,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":5,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":423,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":397,"org.easymock.tests.LimitationsTest.abstractClass":367,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":480,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":424,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":427,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":51}}]
