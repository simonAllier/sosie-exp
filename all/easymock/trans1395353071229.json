[{"transplant":{"position":"org.easymock.EasyMock:71","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:90","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[0,1,2],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,0,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,1,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,2,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[20,52,78,117,123,129,133,135,182,188,194,198,200,254,342,350],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1608","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"failures":[4,5,453,453,454,454,28,29,30,31,32,33,34,35,36,65,101,102,103,104,105,106,108,109,110,111,455,456,457,115,156,157,158,159,160,161,162,163,176,178,273,458,459,274,277,278,279,460,357,368,369,370,371,372,373,374,375,461,376,377,378,462,463,401,402,404,405,406,407,409,464,410,411,412,413,414,415,416,417,418,465,419,466,467,437,438,468,439,469,440,441,442,443,470,471,444,472,473,445,474,446,447,448,449,450,451,452,475,476],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:259","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.LogicalOperator:62","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[477,460,356,357],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:159","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:130","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, java.lang.Object);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"f":"f"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:180","sourceCode":"if ((java.lang.Class<?>[].int) != (java.lang.Object[].int)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[460,478,461,479,480,462,463,481,482,483,484,485,486,487,488],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:36","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Character.java.lang.Class<java.lang.Character>.getName(), java.lang.Character.java.lang.Class<java.lang.Character>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[3,4,5,453,453,454,454,29,30,31,35,65,111,455,456,457,157,176,178,279,460,357,368,489,369,370,372,373,374,375,376,377,490,378,462,491,492,493,401,402,404,405,406,407,409,411,412,413,414,417,418,465,419,466,467,439,441,446,452],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:123","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:81","sourceCode":"java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[3,4,5,6,453,454,7,8,9,10,11,12,13,14,15,17,23,24,25,26,27,29,30,35,37,38,39,40,41,42,43,44,45,46,47,48,65,66,67,68,69,70,72,73,79,87,93,94,455,456,457,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,148,149,151,152,153,154,155,157,164,165,166,167,168,169,172,175,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,202,203,209,214,215,216,217,219,221,224,225,226,260,261,262,263,264,265,266,267,268,269,270,271,272,277,278,279,280,281,282,283,284,286,287,288,289,290,291,293,294,295,296,297,298,299,300,301,302,303,304,306,307,308,309,316,322,323,326,332,338,339,340,341,343,344,345,346,347,348,351,354,355,460,356,357,359,360,363,364,365,366,367,368,372,373,374,375,380,381,383,384,387,390,462,392,395,396,397,398,400,401,403,404,405,406,409,411,413,417,418,465,419,420,466,467,422,423,424,426,427,428,429,431,432,435,436,439,441,446,452],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.EasyMock:1361","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[302],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[302],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[494,495,80,220,496,497],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1672","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(short[]))","type":"CtInvocationImpl"},"failures":[296],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[57,174],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1927","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Boolean>(org.easymock.Capture<java.lang.Boolean>))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1927","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Boolean>(org.easymock.Capture<java.lang.Boolean>))","type":"CtInvocationImpl"},"failures":[341],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[287,288,292,293,302,303,307,308],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:206","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[110,455,456,112,114,115,164,218,223,224,261,265,266,269,377,383,411,498,424,430,434,435],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[477,460,356,357],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:759","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[283,291,297,309],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:249","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:105","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[372,490],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:312","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[242,393],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:72","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = org.easymock.internal.IClassInstantiator","type":"CtAssignmentImpl"},"failures":[100,107,499],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[89,211],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1530","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(int))","type":"CtInvocationImpl"},"failures":[155,284,287,289,290,302,307,339,345,346,351],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[56],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[500],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:85","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object));\n} ","type":"CtIfImpl"},"failures":[232],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"hashCodeMethod","finalizeMethod":"method"}},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":284,"org.easymock.tests2.UsageTest.argumentsOrdered":389,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":78,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":270,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":246,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":384,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":6,"org.easymock.tests2.DelegateToTest.testReturnException":359,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":38,"org.easymock.tests.MockingTest.testPartialClassMocking":455,"org.easymock.tests.MockClassControlTest.testToString":158,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":425,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":75,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":471,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":441,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":181,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":355,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":482,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":291,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":168,"org.easymock.tests2.UsageTest.wrongArguments":382,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":337,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":216,"org.easymock.samples.ExampleTest.answerVsDelegate":11,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":178,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":114,"org.easymock.tests2.UsageConstraintsTest.testNull":287,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":404,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":163,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":269,"org.easymock.tests2.CaptureTest.testPrimitive":341,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":172,"org.easymock.tests.UsageTest.moreThanOneArgument":79,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":200,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":403,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":68,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":18,"org.easymock.tests.UsageTest.argumentsOrdered":85,"org.easymock.tests.UsageVarargTest.varargIntAccepted":146,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":251,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":136,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":487,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":368,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":459,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":320,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":373,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":238,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":140,"org.easymock.tests.ReplayStateInvalidUsageTest.times":61,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":332,"org.easymock.tests2.DependencyTest.testClassMocking":352,"org.easymock.tests2.AnswerTest.answer":392,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":292,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":253,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":367,"org.easymock.tests2.CaptureTest.testAnd":338,"org.easymock.tests2.UsageTest.strictResetToDefault":380,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":411,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":67,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":166,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":264,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":22,"org.easymock.tests2.DelegateToTest.testDelegate":363,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":196,"org.easymock.tests.LimitationsTest.mockFinalMethod":36,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":41,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":27,"org.easymock.tests2.DependencyTest.testClassMockingSupport":353,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":173,"org.easymock.tests2.CaptureTest.testCapture1_2446744":342,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":408,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":194,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":365,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":55,"org.easymock.tests.UsageThrowableTest.throwError":92,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":0,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":321,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":476,"org.easymock.samples.PartialClassMockTest.testGetArea":3,"org.easymock.tests.MockingTest.testInterfaceMocking":112,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":56,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":137,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":444,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":182,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":235,"org.easymock.tests2.UsageTest.niceToStrict":383,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":236,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":372,"org.easymock.tests2.MockBuilderTest.testCreateMock":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":449,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":334,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":496,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":190,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":265,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":91,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":43,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":214,"org.easymock.tests.UsageOverloadedMethodTest.overloading":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":474,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":451,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":207,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":297,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":127,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":71,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":296,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":347,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":147,"org.easymock.tests2.EasyMockSupportClassTest.testAll":439,"org.easymock.tests.MockClassControlTest.testEquals":162,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":30,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":198,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":491,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":25,"org.easymock.tests2.CaptureTest.testCaptureAll":339,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":366,"org.easymock.tests.MockNameTest.defaultName":77,"org.easymock.tests2.UsageConstraintsTest.testMatches":298,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":53,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":69,"org.easymock.samples.ExampleTest.voteForRemovals":15,"org.easymock.tests.UsageVarargTest.allKinds":155,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":141,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":26,"org.easymock.samples.BasicClassMockTest.testPrintContent":5,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":98,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":430,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":42,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":317,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":362,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":488,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":107,"org.easymock.tests2.UsageConstraintsTest.greaterThan":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":469,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":165,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":414,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":108,"org.easymock.samples.ExampleTest.voteForRemoval":12,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":415,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":323,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":179,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":407,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":65,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":379,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":461,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":243,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":262,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":94,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":438,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":37,"org.easymock.tests2.CaptureTest.testCaptureFirst":351,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":358,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":242,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":263,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":391,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":210,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":123,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":325,"org.easymock.tests2.CaptureTest.testCapture2_2446744":350,"org.easymock.tests2.UsageTest.moreThanOneArgument":381,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":254,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":377,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":154,"org.easymock.tests.GenericTest.testBridgedEquals":32,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":50,"org.easymock.tests.UsageExpectAndReturnTest.longType":119,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":23,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":260,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":490,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":199,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":201,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":305,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":197,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":66,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":212,"org.easymock.tests.UsageCallCountTest.tooManyCalls":51,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":45,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":450,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":124,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":336,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":186,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":97,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":418,"org.easymock.tests.MockingTest.testNiceClassMocking":115,"org.easymock.tests.MockingTest.testClassMocking":110,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":489,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":44,"org.easymock.tests2.UsageConstraintsTest.testContains":295,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":279,"org.easymock.tests2.UsageConstraintsTest.testFind":286,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":73,"org.easymock.tests.MockTypeTest.fromEasyMockClass":177,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":400,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":218,"org.easymock.tests.UsageExpectAndReturnTest.object":126,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":409,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":335,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":268,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":483,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":149,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":233,"org.easymock.tests.UsageTest.exactCallCountByLastCall":86,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":87,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":241,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":19,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":74,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":463,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":144,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":132,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":206,"org.easymock.tests.MockClassControlTest.testHashCode":161,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":312,"org.easymock.tests2.EasyMockSupportTest.testVerify":272,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":473,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":20,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":90,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":204,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":364,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":310,"org.easymock.tests.UsageVarargTest.varargCharAccepted":148,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":100,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":431,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":259,"org.easymock.tests2.UsageTest.openCallCountByLastCall":385,"org.easymock.tests.DefaultClassInstantiatorTest.object":101,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":271,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":89,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":445,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":188,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":95,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":330,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":311,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":412,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":160,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":187,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":133,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":452,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":159,"org.easymock.tests2.UsageTest.resumeIfFailure":390,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":176,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":458,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":40,"org.easymock.tests2.StubTest.stubWithReturnValue":423,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":478,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":125,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":306,"org.easymock.tests2.SerializationTest.testAllMockedMethod":357,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":252,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":480,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":497,"org.easymock.samples.SupportTest.voteForRemovals":9,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":28,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":314,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":193,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":477,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":258,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":393,"org.easymock.tests.UsageExpectAndThrowTest.object":191,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":76,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":303,"org.easymock.tests2.DelegateToTest.testWrongClass":361,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":202,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":203,"org.easymock.samples.ConstructorCalledMockTest.testTax":453,"org.easymock.tests.UsageStrictMockTest.range":223,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":275,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":267,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":417,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":192,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":437,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":63,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":84,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":215,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":494,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":229,"org.easymock.tests2.CaptureTest.testCaptureNone":346,"org.easymock.tests.UsageUnorderedTest.message":52,"org.easymock.tests.UsageVerifyTest.twoReturns":143,"org.easymock.tests.UsageVarargTest.varargByteAccepted":153,"org.easymock.tests2.ThreadingTest.testThreadSafe":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":447,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":48,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":4,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":234,"org.easymock.tests2.CaptureTest.testCapture_2617107":340,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":175,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":171,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":256,"org.easymock.tests2.UsageConstraintsTest.any":293,"org.easymock.tests2.StubTest.stub":422,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":60,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":213,"org.easymock.tests.UsageExpectAndThrowTest.longType":184,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":39,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":257,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":105,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":59,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":433,"org.easymock.tests2.SerializationTest.testClass":460,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":316,"org.easymock.tests.LimitationsTest.mockNativeMethod":35,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":135,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":31,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":493,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":329,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":436,"org.easymock.tests2.NameTest.nameForMocksControl":429,"org.easymock.tests2.MockedExceptionTest.testMockedException":278,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":440,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":83,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":457,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":399,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":185,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":401,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":375,"org.easymock.tests.MockingTest.testNicePartialClassMocking":456,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":406,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":481,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":327,"org.easymock.tests2.CaptureTest.testCaptureLast":345,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":174,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":467,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":290,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":304,"org.easymock.tests.MockingTest.testTwoMocks":111,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":421,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":116,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":189,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":388,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":308,"org.easymock.samples.ExampleTest.removeNonExistingDocument":16,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":57,"org.easymock.tests.UsageStrictMockTest.differentMethods":224,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":333,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":313,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":103,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":324,"org.easymock.tests2.MockBuilderTest.testCreateMockString":378,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":442,"org.easymock.tests.UsageExpectAndThrowTest.floatType":183,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":468,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":395,"org.easymock.tests.UsageVerifyTest.twoThrows":142,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":446,"org.easymock.samples.ExampleTest.voteAgainstRemoval":13,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":227,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":247,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":413,"org.easymock.tests.LimitationsTest.privateConstructor":34,"org.easymock.tests2.UsageConstraintsTest.testNotNull":307,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":99,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":277,"org.easymock.tests2.UsageTest.defaultResetToNice":387,"org.easymock.samples.ExampleTest.voteAgainstRemovals":10,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":131,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":248,"org.easymock.tests.UsageVarargTest.differentLength":150,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":328,"org.easymock.tests2.CallbackTest.callback":424,"org.easymock.tests2.UsageConstraintsTest.equals":285,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":464,"org.easymock.tests.UsageTest.openCallCountByLastCall":82,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":281,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":170,"org.easymock.tests.UsageCallCountTest.tooFewCalls":46,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":419,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":217,"org.easymock.tests.UsageThrowableTest.throwCheckedException":96,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":495,"org.easymock.tests.MockingTest.testStrictClassMocking":109,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":466,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":88,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":465,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":2,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":62,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":420,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":397,"org.easymock.tests.ObjectMethodsTest.testHashCode":232,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":486,"org.easymock.tests2.NameTest.nameForNiceMock":428,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":326,"org.easymock.tests2.DependencyTest.testInterfaceMocking":354,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":484,"org.easymock.samples.ExampleTest.addDocument":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":448,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":475,"org.easymock.tests2.DelegateToTest.testStubDelegate":360,"org.easymock.tests2.AnswerTest.stubAnswer":396,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":221,"org.easymock.tests.UsageVarargTest.varargLongAccepted":152,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":225,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":245,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":134,"org.easymock.tests.UsageExpectAndReturnTest.floatType":118,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":462,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":454,"org.easymock.tests.UsageThrowableTest.noUpperLimit":93,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":208,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":301,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":319,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":282,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":273,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":343,"org.easymock.tests2.SerializationTest.test":356,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":102,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":117,"org.easymock.tests2.UsageConstraintsTest.testSame":288,"org.easymock.samples.SupportTest.addDocument":8,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_Overriden":499,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":498,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":58,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":443,"org.easymock.tests.GenericTest.testPackageScope":29,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":21,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":240,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":318,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":113,"org.easymock.tests2.NameTest.nameForMock":426,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":128,"org.easymock.tests2.UsageStrictMockTest.differentMethods":435,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":410,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":120,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":195,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":230,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":167,"org.easymock.tests2.MockedExceptionTest.testRealException":280,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":180,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":250,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":276,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":479,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":249,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":169,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":64,"org.easymock.tests2.NameTest.nameForStrictMock":427,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":371,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":398,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":405,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":274,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":104,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":302,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":369,"org.easymock.tests2.UsageStrictMockTest.range":434,"org.easymock.tests2.UsageConstraintsTest.lessThan":309,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":315,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":485,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":244,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":472,"org.easymock.tests2.CaptureTest.testCaptureRightOne":348,"org.easymock.tests2.UsageConstraintsTest.testOr":289,"org.easymock.tests.UsageRangeTest.combination":164,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":402,"org.easymock.tests.UsageTest.wrongArguments":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":470,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":157,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":121,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":129,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":237,"org.easymock.tests.UsageVarargTest.varargShortAccepted":151,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":106,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":49,"org.easymock.tests2.UsageConstraintsTest.cmpTo":294,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":239,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":386,"org.easymock.tests2.CaptureTest.testCaptureFromStub":349,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":54,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":370,"org.easymock.tests.UsageTest.unexpectedCallWithArray":80,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":220,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":47,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":130,"org.easymock.tests2.CaptureTest.testCapture":500,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":222,"org.easymock.tests2.UsageConstraintsTest.constraints":283,"org.easymock.samples.ExampleTest.addAndChangeDocument":17,"org.easymock.tests.UsageStrictMockTest.testVerify":226,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":7,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":219,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":24,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":344,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":492,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":138,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":122,"org.easymock.tests.LimitationsTest.abstractClass":33,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":139,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":209,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":145,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":266}}]
