[{"transplantationPoint":{"position":"org.easymock.internal.RecordState:60","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Short.java.lang.Class<java.lang.Short>, java.lang.Short.java.lang.Short)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[1],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:70","failures":[2,3,4,5],"status":-1,"binaryOperator":"(\"between \" + (int))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[6,7,8],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:278","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[9],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[10,11,12],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:159","failures":[13,14,15,16,17,18],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.LogicalOperator:62","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,0,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,9,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,2,3,262,263,264,265,266,267,268,269,270,271,272,13,14,273,274,275,276,277,278,279,280,281,282,283,284,285,6,286,15,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,1,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,16,363,364,365,366,367,368,369,370,371,372,373,374,375,18,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,4,5,493],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:173","sourceCode":"throw new org.easymock.internal.AssertionErrorWrapper(new java.lang.AssertionError(java.lang.StringBuilder.toString()))","type":"CtThrowImpl"},"failures":[93,249,250,251,260,3,262,379,433,434,435,436,491,5,493],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"(((java.util.Comparator<? super T>) + \"(\") + (T))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"hashCodeMethod","equalsMethod":"hashCodeMethod"}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:42","sourceCode":"if (org.easymock.internal.IMocksBehavior.isThreadSafe()) {\n    java.util.concurrent.locks.ReentrantLock.lock();\n    try {\n        return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n    } finally {\n        java.util.concurrent.locks.ReentrantLock.unlock();\n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[249,2,3,4,5],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[370,450,494,495,496,497,498],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[24,47,56,92,93,96,97,150,151,154,156,157,158,159,161,162,163,164,166,167,168,169,170,171,174,176,177,178,179,181,182,183,184,186,187,188,189,200,227,228,229,230,249,2,3,272,328,330,331,332,333,335,336,337,338,344,345,346,347,349,350,357,358,379,382,383,384,388,456,457,458,459,462,473,475,476,478,479,481,482,486,487,4,5],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[499,500,94,259,501,502],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[44],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:90","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:75","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[126],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.Equals:53","failures":[98,334,386],"status":-1,"binaryOperator":"(java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[221,283,348,382],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.MockBuilder:159","failures":[13,14,15,16,17,503,18],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:315","failures":[47,57,61,62,67,68,69,70,71,72,76,92,97,121,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,203,204,377,384,452,453,454,455,463],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[504,359,360,361],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:117","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[216,226],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[122,126],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:356","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.lang.reflect.Type = java.lang.reflect.Type;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","this":"this","bound":"genericType"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[331,333,349,355,505],"status":-1,"binaryOperator":"int <= 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[506],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[499,500,94,259,501,502],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:243","sourceCode":"if (java.lang.Object == null) {\n    final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType();\n    if (java.lang.Class<?>.isPrimitive()) {\n        throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n    } \n    return ;\n} ","type":"CtIfImpl"},"failures":[44,45,123,125],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[1],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:241","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[507],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"failures":[508],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[401,402],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":1,"org.easymock.tests2.UsageTest.argumentsOrdered":387,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":92,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":429,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":413,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":137,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":382,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":273,"org.easymock.tests2.DelegateToTest.testReturnException":469,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":68,"org.easymock.tests.MockingTest.testPartialClassMocking":193,"org.easymock.tests.MockClassControlTest.testToString":242,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":432,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":114,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":146,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":304,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":150,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":300,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":467,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":494,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":340,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":201,"org.easymock.tests2.UsageTest.wrongArguments":380,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":448,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":65,"org.easymock.samples.ExampleTest.answerVsDelegate":266,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":39,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":198,"org.easymock.tests2.UsageConstraintsTest.testNull":336,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":282,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":428,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":247,"org.easymock.tests2.CaptureTest.testPrimitive":477,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":205,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":169,"org.easymock.tests.UsageTest.moreThanOneArgument":93,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":281,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":233,"org.easymock.tests.UsageTest.argumentsOrdered":99,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":252,"org.easymock.tests.UsageVarargTest.varargIntAccepted":103,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":142,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":0,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":498,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":362,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":417,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":392,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":368,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":129,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":86,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":442,"org.easymock.tests.ReplayStateInvalidUsageTest.times":223,"org.easymock.tests2.DependencyTest.testClassMocking":464,"org.easymock.tests2.AnswerTest.answer":397,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":341,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":144,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":406,"org.easymock.tests2.CaptureTest.testAnd":474,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":36,"org.easymock.tests2.UsageTest.strictResetToDefault":378,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":288,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":365,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":232,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":423,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":229,"org.easymock.tests2.DelegateToTest.testDelegate":473,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":256,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":165,"org.easymock.tests.LimitationsTest.mockFinalMethod":119,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":71,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":91,"org.easymock.tests2.DependencyTest.testClassMockingSupport":465,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":237,"org.easymock.tests2.CaptureTest.testCapture1_2446744":478,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":6,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":163,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":404,"org.easymock.tests.UsageThrowableTest.throwError":55,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":217,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":38,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":418,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":82,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":318,"org.easymock.samples.PartialClassMockTest.testGetArea":264,"org.easymock.tests.MockingTest.testInterfaceMocking":195,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":218,"org.easymock.tests2.CompareToTest.testLessOrEqual":505,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":83,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":43,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":151,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":305,"org.easymock.tests2.UsageTest.niceToStrict":381,"org.easymock.tests2.ThreadingTest.testChangeDefault":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":127,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":10,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":367,"org.easymock.tests2.MockBuilderTest.testCreateMock":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":313,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":445,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":501,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":159,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":424,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":35,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":21,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":22,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":63,"org.easymock.tests.UsageOverloadedMethodTest.overloading":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":315,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":76,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":346,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":181,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":45,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":345,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":483,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":104,"org.easymock.tests.MockClassControlTest.testEquals":246,"org.easymock.tests2.EasyMockSupportClassTest.testAll":297,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":124,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":167,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":503,"org.easymock.tests2.CaptureTest.testCaptureAll":475,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":405,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":89,"org.easymock.tests.MockNameTest.defaultName":54,"org.easymock.tests2.UsageConstraintsTest.testMatches":347,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":215,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":234,"org.easymock.samples.ExampleTest.voteForRemovals":270,"org.easymock.tests.UsageVarargTest.allKinds":112,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":249,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":90,"org.easymock.samples.BasicClassMockTest.testPrintContent":278,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":61,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":489,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":472,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":414,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":72,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":213,"org.easymock.tests2.UsageConstraintsTest.greaterThan":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":298,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":228,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":291,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":214,"org.easymock.samples.ExampleTest.voteForRemoval":267,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":458,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":292,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":40,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":393,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":285,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":248,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":377,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":373,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":134,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":421,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":295,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":67,"org.easymock.tests2.CaptureTest.testCaptureFirst":487,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":468,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":133,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":422,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":389,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":79,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":177,"org.easymock.tests2.CaptureTest.testCapture2_2446744":486,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":460,"org.easymock.tests2.UsageTest.moreThanOneArgument":379,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":145,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":375,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":111,"org.easymock.tests.GenericTest.testBridgedEquals":126,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":29,"org.easymock.tests.UsageExpectAndReturnTest.longType":173,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":419,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":87,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":168,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":236,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":354,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":166,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":32,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":231,"org.easymock.tests.UsageCallCountTest.tooManyCalls":30,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":24,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":314,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":178,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":447,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":155,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":60,"org.easymock.tests.MockingTest.testNiceClassMocking":199,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":320,"org.easymock.tests.MockingTest.testClassMocking":191,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":23,"org.easymock.tests2.UsageConstraintsTest.testContains":344,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":454,"org.easymock.tests2.UsageConstraintsTest.testFind":335,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":47,"org.easymock.tests.MockTypeTest.fromEasyMockClass":37,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":257,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":330,"org.easymock.tests.UsageExpectAndReturnTest.object":180,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":286,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":446,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":427,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":495,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":106,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":51,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":507,"org.easymock.tests.UsageTest.exactCallCountByLastCall":100,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":120,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":132,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":113,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":253,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":450,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":186,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":101,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":75,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":408,"org.easymock.tests.MockClassControlTest.testHashCode":245,"org.easymock.tests2.EasyMockSupportTest.testVerify":431,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":307,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":254,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":20,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":73,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":403,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":488,"org.easymock.tests.UsageVarargTest.varargCharAccepted":105,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":206,"org.easymock.tests2.CaptureTest.testCaptureMultiple":506,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":490,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":149,"org.easymock.tests2.UsageTest.openCallCountByLastCall":383,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":430,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":11,"org.easymock.tests.DefaultClassInstantiatorTest.object":207,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":19,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":49,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":308,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":58,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":440,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":407,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":244,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":289,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":156,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":187,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":31,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":243,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":316,"org.easymock.tests2.UsageTest.resumeIfFailure":388,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":34,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":391,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":70,"org.easymock.tests2.StubTest.stubWithReturnValue":463,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":370,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":179,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":355,"org.easymock.tests2.SerializationTest.testAllMockedMethod":361,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":143,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":502,"org.easymock.samples.SupportTest.voteForRemovals":276,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":122,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":410,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":162,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":504,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":9,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":398,"org.easymock.tests.UsageExpectAndThrowTest.object":160,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":115,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":352,"org.easymock.tests2.DelegateToTest.testWrongClass":471,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":80,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":81,"org.easymock.tests.UsageStrictMockTest.range":2,"org.easymock.samples.ConstructorCalledMockTest.testTax":13,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":395,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":426,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":319,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":161,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":369,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":98,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":294,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":64,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":499,"org.easymock.tests2.CaptureTest.testCaptureNone":482,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":44,"org.easymock.tests.UsageUnorderedTest.message":200,"org.easymock.tests.UsageVerifyTest.twoReturns":251,"org.easymock.tests.UsageVarargTest.varargByteAccepted":110,"org.easymock.tests2.ThreadingTest.testThreadSafe":457,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":311,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":27,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":52,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":277,"org.easymock.tests2.CaptureTest.testCapture_2617107":476,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":239,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":147,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":204,"org.easymock.tests2.UsageConstraintsTest.any":342,"org.easymock.tests2.StubTest.stub":462,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":222,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":33,"org.easymock.tests.UsageExpectAndThrowTest.longType":153,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":148,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":69,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":211,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":221,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":492,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":412,"org.easymock.tests2.SerializationTest.testClass":359,"org.easymock.tests.LimitationsTest.mockNativeMethod":118,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":189,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":125,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":439,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":493,"org.easymock.tests2.NameTest.nameForMocksControl":436,"org.easymock.tests2.MockedExceptionTest.testMockedException":453,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":441,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":299,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":97,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":154,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":196,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":329,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":279,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":371,"org.easymock.tests.MockingTest.testNicePartialClassMocking":194,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":284,"org.easymock.tests2.CaptureTest.testCaptureLast":481,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":437,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":238,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":326,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":339,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":353,"org.easymock.tests.MockingTest.testTwoMocks":192,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":327,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":170,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":158,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":386,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":357,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":7,"org.easymock.samples.ExampleTest.removeNonExistingDocument":271,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":444,"org.easymock.tests.UsageStrictMockTest.differentMethods":3,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":219,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":409,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":209,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":459,"org.easymock.tests2.MockBuilderTest.testCreateMockString":376,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":240,"org.easymock.tests.UsageExpectAndThrowTest.floatType":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":301,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":296,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":400,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":451,"org.easymock.tests.UsageVerifyTest.twoThrows":250,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":74,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":310,"org.easymock.samples.ExampleTest.voteAgainstRemoval":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":138,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":42,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":290,"org.easymock.tests.LimitationsTest.privateConstructor":117,"org.easymock.tests2.UsageConstraintsTest.testNotNull":356,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":452,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":62,"org.easymock.tests2.UsageTest.defaultResetToNice":385,"org.easymock.samples.ExampleTest.voteAgainstRemovals":265,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":185,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":139,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":438,"org.easymock.tests.UsageVarargTest.differentLength":107,"org.easymock.tests2.CallbackTest.callback":456,"org.easymock.tests2.UsageConstraintsTest.equals":334,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":15,"org.easymock.tests.UsageTest.openCallCountByLastCall":96,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":331,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":203,"org.easymock.tests.UsageCallCountTest.tooFewCalls":25,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":322,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":66,"org.easymock.tests.UsageThrowableTest.throwCheckedException":59,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":500,"org.easymock.tests.MockingTest.testStrictClassMocking":190,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":121,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":325,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":443,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":321,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":224,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":324,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":402,"org.easymock.tests2.CompareToTest.testGreateOrEqual":508,"org.easymock.tests.ObjectMethodsTest.testHashCode":50,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":497,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":461,"org.easymock.tests2.NameTest.nameForNiceMock":435,"org.easymock.tests2.DependencyTest.testInterfaceMocking":466,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":496,"org.easymock.samples.ExampleTest.addDocument":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":312,"org.easymock.tests2.DelegateToTest.testStubDelegate":470,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":317,"org.easymock.tests2.AnswerTest.stubAnswer":401,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":260,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":372,"org.easymock.tests.UsageVarargTest.varargLongAccepted":109,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":262,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":136,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":188,"org.easymock.tests.UsageExpectAndReturnTest.floatType":172,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":449,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":14,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":416,"org.easymock.tests.UsageThrowableTest.noUpperLimit":56,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":77,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":350,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":332,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":390,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":479,"org.easymock.tests2.SerializationTest.test":360,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":208,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":171,"org.easymock.tests2.UsageConstraintsTest.testSame":337,"org.easymock.samples.SupportTest.addDocument":275,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":323,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":302,"org.easymock.tests.GenericTest.testPackageScope":123,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":255,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":131,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":415,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":197,"org.easymock.tests2.NameTest.nameForMock":433,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":182,"org.easymock.tests2.UsageStrictMockTest.differentMethods":5,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":18,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":287,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":174,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":164,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":48,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":230,"org.easymock.tests2.MockedExceptionTest.testRealException":455,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":41,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":396,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":141,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":140,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":202,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":226,"org.easymock.tests2.NameTest.nameForStrictMock":434,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":366,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":12,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":328,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":283,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":394,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":210,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":351,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":363,"org.easymock.tests2.UsageStrictMockTest.range":4,"org.easymock.tests2.UsageConstraintsTest.lessThan":358,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":411,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":420,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":135,"org.easymock.tests2.CaptureTest.testCaptureRightOne":484,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":306,"org.easymock.tests2.UsageConstraintsTest.testOr":338,"org.easymock.tests.UsageRangeTest.combination":227,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":280,"org.easymock.tests.UsageTest.wrongArguments":95,"org.easymock.tests2.MockBuilderTest.testWithConstructor":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":303,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":241,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":175,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":183,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":128,"org.easymock.tests.UsageVarargTest.varargShortAccepted":108,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":212,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":28,"org.easymock.tests2.UsageConstraintsTest.cmpTo":343,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":130,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":384,"org.easymock.tests2.CaptureTest.testCaptureFromStub":485,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":216,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":364,"org.easymock.tests.UsageTest.unexpectedCallWithArray":94,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":259,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":26,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":17,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":184,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":261,"org.easymock.tests2.UsageConstraintsTest.constraints":333,"org.easymock.samples.ExampleTest.addAndChangeDocument":272,"org.easymock.tests.UsageStrictMockTest.testVerify":263,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":274,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":258,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":88,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":480,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":84,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":176,"org.easymock.tests.LimitationsTest.abstractClass":116,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":78,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":85,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":425,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":102}}]
