[{"transplant":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack","this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:39","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"failures":[20,21],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1927","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Boolean>(org.easymock.Capture<java.lang.Boolean>))","type":"CtInvocationImpl"},"failures":[17],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:32","sourceCode":"org.easymock.internal.Range.this(int, int)","type":"CtInvocationImpl"},"failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,0,1,317,2,3,4,5,6,7,8,9,318,319,320,321,322,323,324,325,10,11,326,327,328,12,13,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,14,15,16,17,405,406,407,408,409,410,18,19,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[490,321,326,329],"status":-1,"binaryOperator":"int < 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:39","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"failures":[87,491],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:54","sourceCode":"return java.lang.Object[] == null ? this.java.lang.Object[] : java.lang.Object[]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:94","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.Invocation.NO_ARGS":"initArgs","args":"initArgs"}},{"position":"org.easymock.internal.BridgeMethodResolver:210","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[492,312,313,314],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"primitiveType"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:43","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"failures":[493,494,495],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:181","failures":[496,497,498,499,500,501,502,290,312,365],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[497,498,499,500,501,290,365],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1832","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:58","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>, java.lang.Boolean.java.lang.Boolean)","type":"CtInvocationImpl"},"failures":[40,41,42,43,114,116,117,127,139,256,262,263,264,307,309,310,362,446,449,453,457,458,459,464,465],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:327","failures":[146,147,231,232],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.EasyMock:1361","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[146,147,231,232],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","failures":[22,23,24,87,113,114,116,117,172,174,177,178,249,307,309,310,383,384,390,391,401,402,403,404],"status":-1,"binaryOperator":"((org.easymock.internal.ExpectedInvocation.toString()) + \": \")","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:96","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n        continue;\n    } \n    if (java.lang.reflect.Method.isBridge()) {\n        continue;\n    } \n    if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n        if (java.lang.Class<?>[] == null) {\n            if (java.lang.reflect.Method != null) {\n                throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n            } \n            java.lang.reflect.Method = java.lang.reflect.Method;\n        } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n            return java.lang.reflect.Method;\n        } \n    } \n}","type":"CtForEachImpl"},"failures":[27,28,29,31,130,190,191,192,194,199,222,234,503,504,505,289,312,314,343,344,345,346,349,350,356,506,358,359,362,363,364,366,369,370,507,372,375,423,426,436,442,445,446,448,449,450,451,453,456,457,458,459,475,476,478,478,479,479,480],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1052","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[456],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[51,246,284,286,287,288,482],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[82,83,87,88,99,101,113,114,120,121,122,123,124,125,139,140,141,142,143,218,219,228,229,307,308,315,316,0,1,2,3,4,5,6,7,8,9,318,319,320,321,322,323,324,325,10,11,326,327,328,12,13,329,330,377,378,380,381,14,15,16,17,405,406,407,408,409,410,18,19,411,412,413,418,453,456],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[0,1,3,5,6,8,10,12,14,16,18],"status":-1,"binaryOperator":"int < int","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:573","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:310","sourceCode":"return java.lang.Class<?>.equals(java.lang.Void.java.lang.Class<java.lang.Void>)","type":"CtReturnImpl"},"failures":[36,37,84,87,88,89,90,92,93,94,95,96,97,98,99,101,111,112,113,114,115,116,117,118,119,130,132,141,142,174,177,178,180,182,183,184,185,187,188,191,305,306,307,308,309,310,311,314,8,9,327,328,333,339,340,341,342,358,362,370,384,386,390,391,401,402,403,404,15,16,406,407,408,409,412,413,473,474,475,476,477,481,483,484,485,486,488,489],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[492,312,313,314],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:39","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.vm.vendor\")","type":"CtReturnImpl"},"failures":[508],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[382],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[509,510,113,173,511,512],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1445","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[189],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"type","type":"type"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":1,"org.easymock.tests.ClassInstantiatorFactoryTest.getJVM":508,"org.easymock.tests2.UsageTest.argumentsOrdered":391,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":171,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":340,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":59,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":386,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":477,"org.easymock.tests2.DelegateToTest.testReturnException":284,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":225,"org.easymock.tests.MockingTest.testPartialClassMocking":28,"org.easymock.tests.MockClassControlTest.testToString":235,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":400,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":242,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":461,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":430,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":426,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":151,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":465,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":497,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":7,"org.easymock.tests2.UsageTest.wrongArguments":384,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":139,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":304,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":204,"org.easymock.samples.ExampleTest.answerVsDelegate":482,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":199,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":33,"org.easymock.tests2.UsageConstraintsTest.testNull":3,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":448,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":240,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":339,"org.easymock.tests2.CaptureTest.testPrimitive":17,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":143,"org.easymock.tests.UsageTest.moreThanOneArgument":172,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":170,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":447,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":127,"org.easymock.tests.UsageTest.argumentsOrdered":178,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":35,"org.easymock.tests.UsageVarargTest.varargIntAccepted":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":64,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":120,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":501,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":356,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":468,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":281,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":363,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":51,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":124,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":495,"org.easymock.tests.ReplayStateInvalidUsageTest.times":214,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":298,"org.easymock.tests2.DependencyTest.testClassMocking":462,"org.easymock.tests2.AnswerTest.answer":394,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":66,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":355,"org.easymock.tests2.CaptureTest.testAnd":14,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":196,"org.easymock.tests2.UsageTest.strictResetToDefault":382,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":456,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":360,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":126,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":42,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":334,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":39,"org.easymock.tests2.DelegateToTest.testDelegate":288,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":166,"org.easymock.tests.LimitationsTest.mockFinalMethod":223,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":228,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":48,"org.easymock.tests2.DependencyTest.testClassMockingSupport":463,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":148,"org.easymock.tests2.CaptureTest.testCapture1_2446744":405,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":452,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":164,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":353,"org.easymock.tests.UsageThrowableTest.throwError":131,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":208,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":198,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":100,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":282,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":444,"org.easymock.samples.PartialClassMockTest.testGetArea":480,"org.easymock.tests.MockingTest.testInterfaceMocking":30,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":209,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":121,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":85,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":431,"org.easymock.tests2.UsageTest.niceToStrict":385,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":152,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":110,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":49,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":362,"org.easymock.tests2.MockBuilderTest.testCreateMock":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":439,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":301,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":511,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":160,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":335,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":195,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":232,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":180,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":202,"org.easymock.tests.UsageOverloadedMethodTest.overloading":102,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":441,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":435,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":247,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":321,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":101,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":262,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":320,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":410,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":91,"org.easymock.tests2.EasyMockSupportClassTest.testAll":423,"org.easymock.tests.MockClassControlTest.testEquals":239,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":191,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":168,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":503,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":46,"org.easymock.tests2.CaptureTest.testCaptureAll":15,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":354,"org.easymock.tests.MockNameTest.defaultName":144,"org.easymock.tests2.UsageConstraintsTest.testMatches":322,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":128,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":206,"org.easymock.samples.ExampleTest.voteForRemovals":486,"org.easymock.tests.UsageVarargTest.allKinds":99,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":22,"org.easymock.samples.BasicClassMockTest.testPrintContent":476,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":47,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":137,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":305,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":229,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":278,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":287,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":502,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":80,"org.easymock.tests2.UsageConstraintsTest.greaterThan":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":424,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":41,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":459,"org.easymock.samples.ExampleTest.voteForRemoval":483,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":81,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":460,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":416,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":200,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":469,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":451,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":130,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":381,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":368,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":56,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":332,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":133,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":421,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":224,"org.easymock.tests2.CaptureTest.testCaptureFirst":412,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":283,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":55,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":333,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":393,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":250,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":258,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":418,"org.easymock.tests2.CaptureTest.testCapture2_2446744":411,"org.easymock.tests2.UsageTest.moreThanOneArgument":383,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":67,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":370,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":98,"org.easymock.tests.GenericTest.testBridgedEquals":193,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":187,"org.easymock.tests.UsageExpectAndReturnTest.longType":254,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":44,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":330,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":507,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":169,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":104,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":327,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":167,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":146,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":125,"org.easymock.tests.UsageCallCountTest.tooManyCalls":188,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":493,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":440,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":259,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":303,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":156,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":136,"org.easymock.tests.MockingTest.testNiceClassMocking":34,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":344,"org.easymock.tests.MockingTest.testClassMocking":26,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":506,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":181,"org.easymock.tests2.UsageConstraintsTest.testContains":319,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":375,"org.easymock.tests2.UsageConstraintsTest.testFind":2,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":103,"org.easymock.tests.MockTypeTest.fromEasyMockClass":197,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":111,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":380,"org.easymock.tests.UsageExpectAndReturnTest.object":261,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":453,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":302,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":338,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":498,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":93,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":108,"org.easymock.tests.UsageTest.exactCallCountByLastCall":179,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":82,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":54,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":36,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":241,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":290,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":88,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":267,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":246,"org.easymock.tests.MockClassControlTest.testHashCode":238,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":272,"org.easymock.tests2.EasyMockSupportTest.testVerify":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":433,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":494,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":37,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":231,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":244,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":352,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":377,"org.easymock.tests.UsageVarargTest.varargCharAccepted":92,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":73,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":72,"org.easymock.tests2.UsageTest.openCallCountByLastCall":387,"org.easymock.tests.DefaultClassInstantiatorTest.object":74,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":341,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":230,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":434,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":158,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":134,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":296,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":271,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":457,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":237,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":157,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":268,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":442,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":236,"org.easymock.tests2.UsageTest.resumeIfFailure":392,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":194,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":467,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":227,"org.easymock.tests2.StubTest.stubWithReturnValue":414,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":365,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":260,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":328,"org.easymock.tests2.SerializationTest.testAllMockedMethod":314,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":65,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":512,"org.easymock.samples.SupportTest.voteForRemovals":474,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":189,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":274,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":163,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":492,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":71,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":395,"org.easymock.tests.UsageExpectAndThrowTest.object":161,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":243,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":11,"org.easymock.tests2.DelegateToTest.testWrongClass":286,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":218,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":219,"org.easymock.samples.ConstructorCalledMockTest.testTax":478,"org.easymock.tests.UsageStrictMockTest.range":116,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":471,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":337,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":343,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":162,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":420,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":177,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":216,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":203,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":509,"org.easymock.tests2.CaptureTest.testCaptureNone":409,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":86,"org.easymock.tests.UsageUnorderedTest.message":87,"org.easymock.tests.UsageVerifyTest.twoReturns":24,"org.easymock.tests.UsageVarargTest.varargByteAccepted":97,"org.easymock.tests2.ThreadingTest.testThreadSafe":415,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":437,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":185,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":475,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":109,"org.easymock.tests2.CaptureTest.testCapture_2617107":16,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":150,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":142,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":69,"org.easymock.tests2.UsageConstraintsTest.any":9,"org.easymock.tests2.StubTest.stub":413,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":213,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":147,"org.easymock.tests.UsageExpectAndThrowTest.longType":154,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":70,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":226,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":78,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":212,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":308,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":276,"org.easymock.tests2.SerializationTest.testClass":312,"org.easymock.tests.LimitationsTest.mockNativeMethod":222,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":192,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":270,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":505,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":295,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":311,"org.easymock.tests2.NameTest.nameForMocksControl":404,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":297,"org.easymock.tests2.MockedExceptionTest.testMockedException":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":425,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":176,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":155,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":31,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":379,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":445,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":366,"org.easymock.tests.MockingTest.testNicePartialClassMocking":29,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":450,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":496,"org.easymock.tests2.CaptureTest.testCaptureLast":408,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":293,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":149,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":6,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":350,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":326,"org.easymock.tests.MockingTest.testTwoMocks":27,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":351,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":251,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":159,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":390,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":13,"org.easymock.samples.ExampleTest.removeNonExistingDocument":487,"org.easymock.tests.UsageStrictMockTest.differentMethods":117,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":210,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":300,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":273,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":21,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":76,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":417,"org.easymock.tests2.MockBuilderTest.testCreateMockString":372,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":427,"org.easymock.tests.UsageExpectAndThrowTest.floatType":153,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":422,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":397,"org.easymock.tests.UsageVerifyTest.twoThrows":23,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":291,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":436,"org.easymock.samples.ExampleTest.voteAgainstRemoval":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":60,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":84,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":458,"org.easymock.tests.LimitationsTest.privateConstructor":221,"org.easymock.tests2.UsageConstraintsTest.testNotNull":12,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":138,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":373,"org.easymock.tests2.UsageTest.defaultResetToNice":389,"org.easymock.samples.ExampleTest.voteAgainstRemovals":481,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":61,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":266,"org.easymock.tests.UsageVarargTest.differentLength":94,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":294,"org.easymock.tests2.CallbackTest.callback":292,"org.easymock.tests2.UsageConstraintsTest.equals":317,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":454,"org.easymock.tests.UsageTest.openCallCountByLastCall":175,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":315,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":141,"org.easymock.tests.UsageCallCountTest.tooFewCalls":183,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":346,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":205,"org.easymock.tests.UsageThrowableTest.throwCheckedException":135,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":510,"org.easymock.tests.MockingTest.testStrictClassMocking":25,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":83,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":349,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":299,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":345,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":215,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":348,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":399,"org.easymock.tests.ObjectMethodsTest.testHashCode":107,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":500,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":419,"org.easymock.tests2.NameTest.nameForNiceMock":403,"org.easymock.tests2.DependencyTest.testInterfaceMocking":464,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":499,"org.easymock.samples.ExampleTest.addDocument":485,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":438,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":443,"org.easymock.tests2.DelegateToTest.testStubDelegate":285,"org.easymock.tests2.AnswerTest.stubAnswer":398,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":114,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":367,"org.easymock.tests.UsageVarargTest.varargLongAccepted":96,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":118,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":58,"org.easymock.tests.UsageExpectAndReturnTest.floatType":253,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":269,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":289,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":479,"org.easymock.tests.UsageThrowableTest.noUpperLimit":132,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":248,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":280,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":325,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":316,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":466,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":406,"org.easymock.tests2.SerializationTest.test":313,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":75,"org.easymock.tests2.UsageConstraintsTest.testSame":4,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":252,"org.easymock.samples.SupportTest.addDocument":473,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":347,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":428,"org.easymock.tests.GenericTest.testPackageScope":190,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":38,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":53,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":279,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":32,"org.easymock.tests2.NameTest.nameForMock":401,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":263,"org.easymock.tests2.UsageStrictMockTest.differentMethods":310,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":371,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":455,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":255,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":165,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":105,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":43,"org.easymock.tests2.MockedExceptionTest.testRealException":376,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":201,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":472,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":63,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":62,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":307,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":140,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":217,"org.easymock.tests2.NameTest.nameForStrictMock":402,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":361,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":378,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":449,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":470,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":491,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":10,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":77,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":358,"org.easymock.tests2.UsageStrictMockTest.range":309,"org.easymock.tests2.UsageConstraintsTest.lessThan":329,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":275,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":57,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":432,"org.easymock.tests2.CaptureTest.testCaptureRightOne":18,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":20,"org.easymock.tests2.UsageConstraintsTest.testOr":5,"org.easymock.tests.UsageRangeTest.combination":40,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":446,"org.easymock.tests.UsageTest.wrongArguments":174,"org.easymock.tests2.MockBuilderTest.testWithConstructor":357,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":429,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":234,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":256,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":50,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":264,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":79,"org.easymock.tests.UsageVarargTest.varargShortAccepted":95,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":186,"org.easymock.tests2.UsageConstraintsTest.cmpTo":318,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":396,"org.easymock.tests2.CompareToTest.testLessThan":490,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":52,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":388,"org.easymock.tests2.CaptureTest.testCaptureFromStub":19,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":207,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":359,"org.easymock.tests.UsageTest.unexpectedCallWithArray":173,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":113,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":184,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":265,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":115,"org.easymock.tests2.UsageConstraintsTest.constraints":0,"org.easymock.samples.ExampleTest.addAndChangeDocument":488,"org.easymock.tests.UsageStrictMockTest.testVerify":119,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":489,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":112,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":45,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":407,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":504,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":122,"org.easymock.tests.LimitationsTest.abstractClass":220,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":257,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":123,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":249,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":89,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":336}}]
