[{"transplant":{"position":"org.easymock.EasyMockSupport:530","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl() : org.easymock.EasyMockSupport.createStrictControl()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:183","sourceCode":"final java.lang.SecurityException java.lang.SecurityException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[0,1],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"failures":[2,3,4,5],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[6,7],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:582","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[8,9,10],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1052","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[11],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"failures":[12],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:61","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,11],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1776","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Find(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"regex","key":"regex"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:85","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object));\n} ","type":"CtIfImpl"},"failures":[78,78,79,79,80,81,82,83,84,85,86,87,88,89,90,13,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,14,15,138,139,140,141,142,143,144,145,16,17,18,19,20,21,22,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,23,162,24,25,26,27,28,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,29,30,31,198,199,200,201,202,203,7,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,32,33,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,8,9,255,256,257,258,34,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,302,303,304,305,306,307,308,64,10,309,310,311,312,313,314,65,66,67,68,69,70,71,72,73,74,75,76,77,11,315,316,317,318,319,320,321,322,323,324,325,326],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[327,274,275,328],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[94,96,101,21,153,23,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,208,210,211,212,213,214,215,231,247,254],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:45","sourceCode":"java.lang.StringBuffer.append(\"[\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[329,94,95,139,260],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[330,78,79,331,80,81,332,82,83,84,85,333,86,334,87,335,336,88,89,90,337,338,339,340,341,342,343,344,345,346,347,13,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,348,107,349,350,108,109,110,111,112,351,352,113,114,115,353,116,354,355,356,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,357,14,15,138,139,140,141,358,142,143,144,359,145,360,16,17,18,19,20,21,22,361,362,363,364,365,366,367,368,369,370,371,372,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,23,162,24,25,26,27,28,163,164,165,166,167,168,169,170,373,374,171,375,376,377,378,379,380,381,172,382,173,383,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,384,385,197,386,29,30,31,198,387,199,200,201,202,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,6,203,427,428,429,430,431,7,432,433,434,435,436,437,438,439,440,204,205,441,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,32,442,33,230,231,232,233,234,235,236,237,238,239,240,241,242,243,443,444,445,244,245,246,247,248,249,250,251,252,253,254,8,9,255,256,257,258,446,34,259,260,261,262,263,447,448,449,450,451,452,264,265,266,267,268,269,270,271,272,273,274,275,328,453,454,455,276,456,457,277,458,459,460,461,462,463,464,465,466,278,467,468,469,470,471,279,472,473,280,281,282,474,283,284,285,286,475,476,287,288,289,35,290,291,292,293,477,294,295,296,12,297,478,298,299,300,301,36,37,38,39,479,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,302,303,304,305,306,307,308,480,64,481,482,10,309,310,311,483,312,484,485,486,487,488,313,314,489,490,491,492,493,494,495,496,497,498,499,65,66,67,68,69,70,71,72,73,74,75,76,77,11,500,501,502,503,504,315,316,505,506,507,508,509,317,318,319,320,321,322,510,511,512,513,514,323,324,325,326],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[173],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"method"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[13,92,14,15,16,17,18,19,20,21,22,23,162,24,25,26,27,28,163,29,30,31,198,32,33,230,34,259,35,300,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,10,65,66,67,68,69,70,71,72,73,74,75,76,77,11,315],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.MocksControl:189","failures":[94,95,96,98,99,102,103,104,137,14,138,139,140,146,147,148,149,163,164,165,166,167,31,234,236,237,239,240,247,250,251,252,8,9,255,257,258,259,260,261,270,271,272,273,280,284,285,286,288,289,38,308,10,313,315],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[44],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"type"}},{"transplant":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[311],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","constructorArgs":"constructorArgs","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:63","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[14,15,139,140,358,34,260,261,305,307],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:40","sourceCode":"java.lang.StringBuffer.append(\"notNull()\")","type":"CtInvocationImpl"},"failures":[515],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:197","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"failures":[239,8],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:681","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:48","sourceCode":"final java.lang.Class<?>[] java.lang.Class<?>[] = java.lang.reflect.Constructor<?>.getParameterTypes()","type":"CtLocalVariableImpl"},"failures":[78,78,79,79,263,449,276,277,278,279,280,281,283,287,289,292,296,302,10,313],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:38","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Long.java.lang.Class<java.lang.Long>.getName(), java.lang.Long.java.lang.Class<java.lang.Long>)","type":"CtInvocationImpl"},"failures":[327,274,275,328],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1052","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1726","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:219","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[78,78,79,79,81,381,173,263,447,516,274,277,278,517,518,283,519,475,476,287,520,289,481,310,312],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[83,150,32,33,246,264,267,269],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[50],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"failures":[263,521,522,523,524,525,526,527],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":39,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":96,"org.easymock.tests2.UsageTest.argumentsOrdered":255,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":242,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":314,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":422,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":252,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":332,"org.easymock.tests2.DelegateToTest.testReturnException":318,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":159,"org.easymock.tests.MockingTest.testPartialClassMocking":114,"org.easymock.tests.MockClassControlTest.testToString":199,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":448,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":145,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":429,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":312,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":461,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":177,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":277,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":245,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":411,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":522,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":45,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":18,"org.easymock.tests2.UsageTest.wrongArguments":250,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":509,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":148,"org.easymock.samples.ExampleTest.answerVsDelegate":83,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":110,"org.easymock.tests2.UsageConstraintsTest.testNull":41,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":355,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":305,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":389,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":241,"org.easymock.tests2.CaptureTest.testPrimitive":68,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":22,"org.easymock.tests.UsageTest.moreThanOneArgument":97,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":196,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":304,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":223,"org.easymock.tests.UsageTest.argumentsOrdered":103,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":216,"org.easymock.tests.UsageVarargTest.varargIntAccepted":339,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":6,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":24,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":526,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":280,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":496,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":492,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":284,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":414,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":28,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":395,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":315,"org.easymock.tests.ReplayStateInvalidUsageTest.times":369,"org.easymock.tests2.DependencyTest.testClassMocking":444,"org.easymock.tests2.AnswerTest.answer":264,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":46,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":427,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":273,"org.easymock.tests2.CaptureTest.testAnd":65,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":350,"org.easymock.tests2.UsageTest.strictResetToDefault":248,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":518,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":10,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":222,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":228,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":236,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":220,"org.easymock.tests2.DelegateToTest.testDelegate":322,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":394,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":192,"org.easymock.tests.LimitationsTest.mockFinalMethod":386,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":23,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":167,"org.easymock.tests2.DependencyTest.testClassMockingSupport":445,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":105,"org.easymock.tests2.CaptureTest.testCapture1_2446744":69,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":480,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":190,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":271,"org.easymock.tests.UsageThrowableTest.throwError":208,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":363,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":109,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":493,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":473,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":398,"org.easymock.samples.PartialClassMockTest.testGetArea":81,"org.easymock.tests.MockingTest.testInterfaceMocking":353,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":364,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":25,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":462,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":178,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":207,"org.easymock.tests2.UsageTest.niceToStrict":251,"org.easymock.tests2.ThreadingTest.testChangeDefault":478,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":412,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":283,"org.easymock.tests2.MockBuilderTest.testCreateMock":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":469,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":506,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":186,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":4,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":237,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":349,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":90,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":373,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":146,"org.easymock.tests.UsageOverloadedMethodTest.overloading":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":471,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":466,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":153,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":51,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":174,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":128,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":50,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":74,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":340,"org.easymock.tests.MockClassControlTest.testEquals":388,"org.easymock.tests2.EasyMockSupportClassTest.testAll":276,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":382,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":194,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":165,"org.easymock.tests2.CaptureTest.testCaptureAll":66,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":272,"org.easymock.tests.MockNameTest.defaultName":91,"org.easymock.tests2.UsageConstraintsTest.testMatches":52,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":224,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":361,"org.easymock.samples.ExampleTest.voteForRemovals":86,"org.easymock.tests2.ConstraintsToStringTest.notNullToString":515,"org.easymock.tests.UsageVarargTest.allKinds":13,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":93,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":166,"org.easymock.samples.BasicClassMockTest.testPrintContent":336,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":214,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":258,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":489,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":162,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":321,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":527,"org.easymock.tests2.UsageConstraintsTest.greaterThan":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":456,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":227,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":311,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":399,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":439,"org.easymock.samples.ExampleTest.voteForRemoval":84,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":483,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":298,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":111,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":308,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":391,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":157,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":247,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":476,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":419,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":234,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":210,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":454,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":158,"org.easymock.tests2.CaptureTest.testCaptureFirst":11,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":317,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":418,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":235,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":257,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":156,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":124,"org.easymock.tests2.CaptureTest.testCapture2_2446744":77,"org.easymock.tests2.UsageTest.moreThanOneArgument":249,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":300,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":428,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":288,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":347,"org.easymock.tests.GenericTest.testBridgedEquals":383,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":379,"org.easymock.tests.UsageExpectAndReturnTest.longType":120,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":163,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":232,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":195,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":59,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":92,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":193,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":169,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":221,"org.easymock.tests.UsageCallCountTest.tooManyCalls":380,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":470,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":125,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":508,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":182,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":213,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":291,"org.easymock.tests.MockingTest.testNiceClassMocking":356,"org.easymock.tests.MockingTest.testClassMocking":352,"org.easymock.tests2.UsageConstraintsTest.testContains":49,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":374,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":325,"org.easymock.tests2.UsageConstraintsTest.testFind":40,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":176,"org.easymock.tests.MockTypeTest.fromEasyMockClass":108,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":137,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":33,"org.easymock.tests.UsageExpectAndReturnTest.object":127,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":64,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":507,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":240,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":523,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":342,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":441,"org.easymock.tests.UsageTest.exactCallCountByLastCall":104,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":16,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":417,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":217,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":359,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":447,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":133,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":337,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":152,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":485,"org.easymock.tests.MockClassControlTest.testHashCode":202,"org.easymock.tests2.EasyMockSupportTest.testVerify":443,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":464,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":218,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":150,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":89,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":270,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":35,"org.easymock.tests.UsageVarargTest.varargCharAccepted":341,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":446,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":432,"org.easymock.tests2.UsageTest.openCallCountByLastCall":253,"org.easymock.tests.DefaultClassInstantiatorTest.object":433,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":243,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":88,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":465,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":184,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":211,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":503,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":484,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":397,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":201,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":309,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":183,"org.easymock.tests.CapturesMatcherTest.test":0,"org.easymock.tests.ReplayStateInvalidCallsTest.times":403,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":134,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":168,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":404,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":279,"org.easymock.tests2.UsageTest.resumeIfFailure":256,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":107,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":495,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":161,"org.easymock.tests2.StubTest.stubWithReturnValue":231,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":519,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":126,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":60,"org.easymock.tests2.SerializationTest.testAllMockedMethod":328,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":203,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":5,"org.easymock.samples.SupportTest.voteForRemovals":80,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":381,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":487,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":189,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":327,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":7,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":265,"org.easymock.tests.UsageExpectAndThrowTest.object":187,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":360,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":57,"org.easymock.tests2.DelegateToTest.testWrongClass":320,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":401,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":29,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":30,"org.easymock.tests.UsageStrictMockTest.range":139,"org.easymock.samples.ConstructorCalledMockTest.testTax":78,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":498,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":239,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":290,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":188,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":453,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":102,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":371,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":147,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":393,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":144,"org.easymock.tests2.CaptureTest.testCaptureNone":73,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":511,"org.easymock.tests.UsageUnorderedTest.message":31,"org.easymock.tests.UsageVerifyTest.twoReturns":95,"org.easymock.tests.UsageVarargTest.varargByteAccepted":346,"org.easymock.tests2.ThreadingTest.testThreadSafe":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":467,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":377,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":206,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":335,"org.easymock.tests2.CaptureTest.testCapture_2617107":67,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":348,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":430,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":21,"org.easymock.tests2.UsageConstraintsTest.any":47,"org.easymock.tests2.StubTest.stub":230,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":368,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":170,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":431,"org.easymock.tests.UsageExpectAndThrowTest.longType":180,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":160,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":437,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":367,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":259,"org.easymock.tests2.SerializationTest.testClass":274,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":313,"org.easymock.tests.LimitationsTest.mockNativeMethod":197,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":173,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":136,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":502,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":409,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":262,"org.easymock.tests2.NameTest.nameForMocksControl":452,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":504,"org.easymock.tests2.MockedExceptionTest.testMockedException":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":457,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":101,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":442,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":181,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":116,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":302,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":286,"org.easymock.tests.MockingTest.testNicePartialClassMocking":115,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":307,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":521,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":500,"org.easymock.tests2.CaptureTest.testCaptureLast":72,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":106,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":408,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":44,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":296,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":58,"org.easymock.tests.MockingTest.testTwoMocks":113,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":405,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":12,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":117,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":185,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":9,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":62,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":514,"org.easymock.samples.ExampleTest.removeNonExistingDocument":334,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":505,"org.easymock.tests.UsageStrictMockTest.differentMethods":140,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":365,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":486,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":513,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":435,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":299,"org.easymock.tests2.MockBuilderTest.testCreateMockString":289,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":458,"org.easymock.tests.UsageExpectAndThrowTest.floatType":179,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":455,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":267,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":516,"org.easymock.tests.UsageVerifyTest.twoThrows":94,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":278,"org.easymock.samples.ExampleTest.voteAgainstRemoval":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":423,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":142,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":310,"org.easymock.tests.LimitationsTest.privateConstructor":385,"org.easymock.tests2.UsageConstraintsTest.testNotNull":61,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":215,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":323,"org.easymock.tests2.UsageTest.defaultResetToNice":8,"org.easymock.samples.ExampleTest.voteAgainstRemovals":82,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":424,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":132,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":501,"org.easymock.tests.UsageVarargTest.differentLength":343,"org.easymock.tests2.CallbackTest.callback":246,"org.easymock.tests2.UsageConstraintsTest.equals":479,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":481,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":3,"org.easymock.tests.UsageTest.openCallCountByLastCall":100,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":36,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":20,"org.easymock.tests.UsageCallCountTest.tooFewCalls":375,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":293,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":149,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":512,"org.easymock.tests.UsageThrowableTest.throwCheckedException":212,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":2,"org.easymock.tests.MockingTest.testStrictClassMocking":351,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":17,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":295,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":292,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":316,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":370,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":294,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":269,"org.easymock.tests.ObjectMethodsTest.testHashCode":205,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":525,"org.easymock.tests2.NameTest.nameForNiceMock":451,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":407,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":301,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":402,"org.easymock.tests2.DependencyTest.testInterfaceMocking":244,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":524,"org.easymock.samples.ExampleTest.addDocument":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":468,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":472,"org.easymock.tests2.DelegateToTest.testStubDelegate":319,"org.easymock.tests2.AnswerTest.stubAnswer":268,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":15,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":475,"org.easymock.tests.UsageVarargTest.varargLongAccepted":345,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":141,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":421,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":135,"org.easymock.tests.UsageExpectAndReturnTest.floatType":119,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":263,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":79,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":491,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":154,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":55,"org.easymock.tests.UsageThrowableTest.noUpperLimit":209,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":37,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":494,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":70,"org.easymock.tests2.SerializationTest.test":275,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":434,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":118,"org.easymock.tests2.UsageConstraintsTest.testSame":42,"org.easymock.samples.SupportTest.addDocument":331,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":477,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":392,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":459,"org.easymock.tests.GenericTest.testPackageScope":172,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":416,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":490,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":354,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":390,"org.easymock.tests2.NameTest.nameForMock":449,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":129,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":520,"org.easymock.tests2.UsageStrictMockTest.differentMethods":261,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":482,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":121,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":191,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":440,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":229,"org.easymock.tests2.MockedExceptionTest.testRealException":326,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":112,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":499,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":426,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":425,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":34,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":19,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":372,"org.easymock.tests2.NameTest.nameForStrictMock":450,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":474,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":32,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":306,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":497,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":436,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":56,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":281,"org.easymock.tests2.UsageStrictMockTest.range":260,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":396,"org.easymock.tests2.UsageConstraintsTest.lessThan":63,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":488,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":420,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":463,"org.easymock.tests2.CaptureTest.testCaptureRightOne":75,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":510,"org.easymock.tests2.UsageConstraintsTest.testOr":43,"org.easymock.tests.UsageRangeTest.combination":226,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":303,"org.easymock.tests.UsageTest.wrongArguments":99,"org.easymock.tests2.MockBuilderTest.testWithConstructor":517,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":460,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":387,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":122,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":413,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":130,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":438,"org.easymock.tests.UsageVarargTest.varargShortAccepted":344,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":378,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":410,"org.easymock.tests2.UsageConstraintsTest.cmpTo":48,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":266,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":400,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":415,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":254,"org.easymock.tests2.CaptureTest.testCaptureFromStub":76,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":362,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":282,"org.easymock.tests.UsageTest.unexpectedCallWithArray":98,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":406,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":14,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":376,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":131,"org.easymock.tests2.CaptureTest.testCapture":1,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":138,"org.easymock.tests2.UsageConstraintsTest.constraints":38,"org.easymock.samples.ExampleTest.addAndChangeDocument":87,"org.easymock.tests.UsageStrictMockTest.testVerify":358,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":330,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":357,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":164,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":71,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":26,"org.easymock.tests.LimitationsTest.abstractClass":384,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":123,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":155,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":27,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":238,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":329,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":338}}]
