[{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:40","failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,0,1,2,137,138,139,140,141,142,143,144,145,3,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,4,169,170,5,6,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,7,416,417,418,419,420,421,422,423,424,425,426,427,8,428,429,9,10,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"failures":[488],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[96,100],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:79","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    } \n}","type":"CtForEachImpl"},"failures":[54,55,56,57,58],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[489,278,465],"status":-1,"binaryOperator":"int == 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[95,96,97,98,100,102],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[23,24,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,342,372,377,378,490,491,391,394,399,402,492,405,485,486],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:161","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:223","failures":[276,286,312,332,390,397],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[268],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[336],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"failures":[276,286,332,390,397],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.StartsWith:40","failures":[493],"status":-1,"binaryOperator":"(\"startsWith(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:83","sourceCode":"return (int) == (java.lang.Integer.int)","type":"CtReturnImpl"},"failures":[0,148,149,170,5,217,419,420,429,9],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"failures":[337,338],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:2124","failures":[13,336,339,340,482,484],"status":-1,"binaryOperator":"org.easymock.internal.Invocation == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:987","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:90","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[141,358,359,360,362,364,365,366,369,440,441,442,444,446,447,448,451],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:30","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1482","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(byte))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[287,289,297,454,455,458,460,461,463,473,478],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:53","sourceCode":"java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection)","type":"CtInvocationImpl"},"failures":[359,360,362,365,366,367,368,369,441,442,444,447,448,449,450,451],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:327","failures":[114,115,247,248],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[494],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[86,113,114,115,134,153,154,155,156,157,158,189,239,332,333,334,335,439],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[12,13,14,15,16,17,19,20,21,22,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,55,56,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,89,90,93,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,0,1,2,145,3,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,166,167,168,4,169,170,5,6,171,208,209,210,211,213,214,215,216,217,218,219,220,221,222,223,226,241,242,243,244,245,249,250,251,253,254,255,256,257,258,259,260,261,262,265,270,271,272,273,274,275,278,284,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,309,331,332,333,334,335,336,339,340,341,343,344,345,346,347,348,349,350,351,353,354,355,356,357,363,370,373,375,385,386,387,389,414,415,7,416,417,418,419,420,422,423,424,425,426,427,8,428,429,9,10,436,437,438,439,445,452,453,454,455,457,458,459,460,461,462,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,482,484],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"searchType","type":"searchType"}},{"transplant":{"position":"org.easymock.EasyMock:1725","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:75","sourceCode":"return this","type":"CtReturnImpl"},"failures":[11,57,145,276,283,287,312,322,328,342,390,392,396,397,398,400,403,404,406],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[495,342,343,344],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[496,480],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[497,471],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[455],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2170","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[498,499,500],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,0,1,2,137,138,139,140,141,142,143,144,145,3,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,4,169,170,5,6,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,7,416,417,418,419,420,421,422,423,424,425,426,427,8,428,429,9,10,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[495,342,343,344],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":455,"org.easymock.tests2.UsageTest.argumentsOrdered":423,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":145,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":355,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":446,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":192,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":418,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":27,"org.easymock.tests2.DelegateToTest.testReturnException":385,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":154,"org.easymock.tests.MockingTest.testPartialClassMocking":175,"org.easymock.tests.MockClassControlTest.testToString":118,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":379,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":52,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":201,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":316,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":28,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":312,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":437,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":462,"org.easymock.tests2.UsageTest.wrongArguments":416,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":132,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":369,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":106,"org.easymock.samples.ExampleTest.answerVsDelegate":13,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":142,"org.easymock.tests2.UsageConstraintsTest.testNull":458,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":180,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":273,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":123,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":354,"org.easymock.tests2.CaptureTest.testPrimitive":290,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":136,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":47,"org.easymock.tests.UsageTest.moreThanOneArgument":3,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":272,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":220,"org.easymock.tests.UsageTest.argumentsOrdered":151,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":88,"org.easymock.tests.UsageVarargTest.varargIntAccepted":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":197,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":241,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":390,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":450,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":409,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":397,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":184,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":245,"org.easymock.tests.ReplayStateInvalidUsageTest.times":237,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":363,"org.easymock.tests2.DependencyTest.testClassMocking":434,"org.easymock.tests2.AnswerTest.answer":336,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":463,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":199,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":433,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":139,"org.easymock.tests2.CaptureTest.testAnd":287,"org.easymock.tests2.UsageTest.strictResetToDefault":415,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":394,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":281,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":219,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":83,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":349,"org.easymock.tests2.DelegateToTest.testDelegate":389,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":92,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":43,"org.easymock.tests.LimitationsTest.mockFinalMethod":266,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":157,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":112,"org.easymock.tests2.DependencyTest.testClassMockingSupport":435,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":267,"org.easymock.tests2.CaptureTest.testCapture1_2446744":291,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":277,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":41,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":431,"org.easymock.tests.UsageThrowableTest.throwError":124,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":231,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":141,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":451,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":103,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":222,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":490,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":330,"org.easymock.samples.PartialClassMockTest.testGetArea":11,"org.easymock.tests.MockingTest.testInterfaceMocking":177,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":232,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":242,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":49,"org.easymock.tests2.UsageTest.niceToStrict":417,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":29,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":317,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":182,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":396,"org.easymock.tests2.MockBuilderTest.testCreateMock":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":325,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":366,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":37,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":350,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":138,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":248,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":206,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":104,"org.easymock.tests.UsageOverloadedMethodTest.overloading":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":327,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":468,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":162,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":72,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":215,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":467,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":296,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":252,"org.easymock.tests.MockClassControlTest.testEquals":122,"org.easymock.tests2.EasyMockSupportClassTest.testAll":309,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":56,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":45,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":488,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":432,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":110,"org.easymock.tests2.CaptureTest.testCaptureAll":288,"org.easymock.tests.MockNameTest.defaultName":59,"org.easymock.tests2.UsageConstraintsTest.testMatches":469,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":221,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":229,"org.easymock.samples.ExampleTest.voteForRemovals":17,"org.easymock.tests.UsageVarargTest.allKinds":260,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":0,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":111,"org.easymock.samples.BasicClassMockTest.testPrintContent":26,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":130,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":426,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":447,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":388,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":158,"org.easymock.tests2.UsageConstraintsTest.greaterThan":471,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":310,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":82,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":284,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":102,"org.easymock.samples.ExampleTest.voteForRemoval":14,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":285,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":302,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":143,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":410,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":276,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":414,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":93,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":402,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":189,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":347,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":307,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":153,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":384,"org.easymock.tests2.CaptureTest.testCaptureFirst":300,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":188,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":348,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":425,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":165,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":68,"org.easymock.tests2.UsageTest.moreThanOneArgument":7,"org.easymock.tests2.CaptureTest.testCapture2_2446744":299,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":304,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":404,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":200,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":259,"org.easymock.tests.GenericTest.testBridgedEquals":58,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":213,"org.easymock.tests.UsageExpectAndReturnTest.longType":64,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":108,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":345,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":46,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":476,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":87,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":44,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":114,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":218,"org.easymock.tests.UsageCallCountTest.tooManyCalls":214,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":326,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":69,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":368,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":33,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":129,"org.easymock.tests.MockingTest.testNiceClassMocking":181,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":371,"org.easymock.tests.MockingTest.testClassMocking":173,"org.easymock.tests2.UsageConstraintsTest.testContains":466,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":207,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":334,"org.easymock.tests2.UsageConstraintsTest.testFind":457,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":217,"org.easymock.tests.MockTypeTest.fromEasyMockClass":140,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":484,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":166,"org.easymock.tests.UsageExpectAndReturnTest.object":71,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":278,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":367,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":353,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":254,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":226,"org.easymock.tests.UsageTest.exactCallCountByLastCall":152,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":187,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":51,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":89,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":486,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":77,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":249,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":161,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":441,"org.easymock.tests.MockClassControlTest.testHashCode":121,"org.easymock.tests2.EasyMockSupportTest.testVerify":357,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":319,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":90,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":159,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":247,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":430,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":481,"org.easymock.tests.UsageVarargTest.varargCharAccepted":253,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":94,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":427,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":205,"org.easymock.tests2.UsageTest.openCallCountByLastCall":419,"org.easymock.tests.DefaultClassInstantiatorTest.object":95,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":356,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":246,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":224,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":35,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":320,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":127,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":361,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":440,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":120,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":282,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":34,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":78,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":113,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":328,"org.easymock.tests2.UsageTest.resumeIfFailure":424,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":137,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":408,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":156,"org.easymock.tests2.StubTest.stubWithReturnValue":439,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":399,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":477,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":70,"org.easymock.tests2.SerializationTest.testAllMockedMethod":344,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":198,"org.easymock.samples.SupportTest.voteForRemovals":21,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":54,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":443,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":40,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":495,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":204,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":337,"org.easymock.tests.UsageExpectAndThrowTest.object":38,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":53,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":474,"org.easymock.tests2.DelegateToTest.testWrongClass":387,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":261,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":262,"org.easymock.tests.UsageStrictMockTest.range":170,"org.easymock.samples.ConstructorCalledMockTest.testTax":23,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":412,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":352,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":370,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":39,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":398,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":150,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":306,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":105,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":50,"org.easymock.tests2.CaptureTest.testCaptureNone":295,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":498,"org.easymock.tests.UsageUnorderedTest.message":60,"org.easymock.tests.UsageVerifyTest.twoReturns":2,"org.easymock.tests.UsageVarargTest.varargByteAccepted":258,"org.easymock.tests2.ThreadingTest.testThreadSafe":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":323,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":211,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":25,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":227,"org.easymock.tests2.CaptureTest.testCapture_2617107":289,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":269,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":135,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":202,"org.easymock.tests2.UsageConstraintsTest.any":464,"org.easymock.tests2.StubTest.stub":438,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":236,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":115,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":155,"org.easymock.tests.UsageExpectAndThrowTest.longType":31,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":203,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":99,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":235,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":428,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":445,"org.easymock.tests2.SerializationTest.testClass":342,"org.easymock.tests.LimitationsTest.mockNativeMethod":265,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":57,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":80,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":360,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":10,"org.easymock.tests2.NameTest.nameForMocksControl":383,"org.easymock.tests2.MockedExceptionTest.testMockedException":333,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":311,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":149,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":483,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":178,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":32,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":270,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":400,"org.easymock.tests.MockingTest.testNicePartialClassMocking":176,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":275,"org.easymock.tests2.CompareToTest.testCompareEqual":489,"org.easymock.tests2.CaptureTest.testCaptureLast":294,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":358,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":268,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":461,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":377,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":475,"org.easymock.tests.MockingTest.testTwoMocks":174,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":378,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":61,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":36,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":422,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":479,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":500,"org.easymock.samples.ExampleTest.removeNonExistingDocument":18,"org.easymock.tests.UsageStrictMockTest.differentMethods":5,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":233,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":365,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":442,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":499,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":97,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":303,"org.easymock.tests2.MockBuilderTest.testCreateMockString":406,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":116,"org.easymock.tests.UsageExpectAndThrowTest.floatType":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":313,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":470,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":308,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":339,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":487,"org.easymock.tests.UsageVerifyTest.twoThrows":1,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":322,"org.easymock.samples.ExampleTest.voteAgainstRemoval":15,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":48,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":193,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":283,"org.easymock.tests.LimitationsTest.privateConstructor":264,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":491,"org.easymock.tests2.UsageConstraintsTest.testNotNull":478,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":131,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":332,"org.easymock.tests2.UsageTest.defaultResetToNice":421,"org.easymock.samples.ExampleTest.voteAgainstRemovals":12,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":194,"org.easymock.tests.UsageVarargTest.differentLength":255,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":359,"org.easymock.tests2.CallbackTest.callback":331,"org.easymock.tests2.UsageConstraintsTest.equals":456,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":279,"org.easymock.tests.UsageTest.openCallCountByLastCall":148,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":493,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":452,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":134,"org.easymock.tests.UsageCallCountTest.tooFewCalls":209,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":373,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":107,"org.easymock.tests.UsageThrowableTest.throwCheckedException":128,"org.easymock.tests.MockingTest.testStrictClassMocking":172,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":86,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":376,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":364,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":372,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":238,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":375,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":341,"org.easymock.tests.ObjectMethodsTest.testHashCode":225,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":305,"org.easymock.tests2.NameTest.nameForNiceMock":382,"org.easymock.tests2.DependencyTest.testInterfaceMocking":436,"org.easymock.samples.ExampleTest.addDocument":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":324,"org.easymock.tests2.DelegateToTest.testStubDelegate":386,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":329,"org.easymock.tests2.AnswerTest.stubAnswer":340,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":4,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":401,"org.easymock.tests.UsageVarargTest.varargLongAccepted":257,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":191,"org.easymock.tests.UsageExpectAndReturnTest.floatType":63,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":79,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":485,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":24,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":472,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":449,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":163,"org.easymock.tests.UsageThrowableTest.noUpperLimit":125,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":453,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":407,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":292,"org.easymock.tests2.SerializationTest.test":343,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":96,"org.easymock.tests2.UsageConstraintsTest.testSame":459,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":62,"org.easymock.samples.SupportTest.addDocument":20,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":374,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":314,"org.easymock.tests.GenericTest.testPackageScope":55,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":186,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":448,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":179,"org.easymock.tests2.NameTest.nameForMock":380,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":73,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":405,"org.easymock.tests2.UsageStrictMockTest.differentMethods":9,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":280,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":65,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":42,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":223,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":84,"org.easymock.tests2.MockedExceptionTest.testRealException":335,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":144,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":413,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":196,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":195,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":133,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":240,"org.easymock.tests2.NameTest.nameForStrictMock":381,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":395,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":482,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":274,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":411,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":473,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":98,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":392,"org.easymock.tests2.UsageStrictMockTest.range":429,"org.easymock.tests2.UsageConstraintsTest.lessThan":480,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":444,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":190,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":346,"org.easymock.tests2.CaptureTest.testCaptureRightOne":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":318,"org.easymock.tests2.UsageConstraintsTest.testOr":460,"org.easymock.tests.UsageRangeTest.combination":81,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":271,"org.easymock.tests.UsageTest.wrongArguments":147,"org.easymock.tests2.MockBuilderTest.testWithConstructor":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":315,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":117,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":66,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":183,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":74,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":100,"org.easymock.tests.UsageVarargTest.varargShortAccepted":256,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":212,"org.easymock.tests2.UsageConstraintsTest.cmpTo":465,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":338,"org.easymock.tests2.CompareToTest.testLessThan":496,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":185,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":420,"org.easymock.tests2.CaptureTest.testCaptureFromStub":298,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":230,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":393,"org.easymock.tests.UsageTest.unexpectedCallWithArray":146,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":168,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":210,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":492,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":75,"org.easymock.tests2.CaptureTest.testCapture":494,"org.easymock.tests2.UsageConstraintsTest.constraints":454,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":169,"org.easymock.samples.ExampleTest.addAndChangeDocument":19,"org.easymock.tests.UsageStrictMockTest.testVerify":171,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":22,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":167,"org.easymock.tests2.CompareToTest.testGreateThan":497,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":109,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":293,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":243,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":67,"org.easymock.tests.LimitationsTest.abstractClass":263,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":164,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":244,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":250,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":351}}]
