[{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[0,1],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:194","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Byte.java.lang.Class<java.lang.Byte>)) {\n    return java.lang.Number.byteValue();\n} else if (java.lang.Class<?>.equals(java.lang.Short.java.lang.Class<java.lang.Short>)) {\n    return java.lang.Number.shortValue();\n} else if (java.lang.Class<?>.equals(java.lang.Integer.java.lang.Class<java.lang.Integer>)) {\n    return java.lang.Number.intValue();\n} else if (java.lang.Class<?>.equals(java.lang.Long.java.lang.Class<java.lang.Long>)) {\n    return java.lang.Number.longValue();\n} else if (java.lang.Class<?>.equals(java.lang.Float.java.lang.Class<java.lang.Float>)) {\n    return java.lang.Number.floatValue();\n} else if (java.lang.Class<?>.equals(java.lang.Double.java.lang.Class<java.lang.Double>)) {\n    return java.lang.Number.doubleValue();\n} else {\n    return java.lang.Number;\n}","type":"CtIfImpl"},"failures":[2,3,4,5,6,7,8,8,9,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:142","sourceCode":"return true","type":"CtReturnImpl"},"failures":[1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[53,54],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[55,56,57,58,59,60,61,62,28,63],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:40","sourceCode":"java.lang.StringBuffer.append(\"notNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[64,65,66],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[67,68,69,70,71,72,73],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[1],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[67,74,75,76,77,78,79,80,81,82,83,84,85,86,87,53,70,88,89,90,91,92,93,94,95],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[67,74,70,88],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[29,96,97,98],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"arg":"mock"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[67,99,100,101,102,103,70,104,105,106,107,71,72,73],"status":-1,"binaryOperator":"int > 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:67","sourceCode":"final java.lang.StringBuffer java.lang.StringBuffer = new java.lang.StringBuffer()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[56,57,58,108,109,61,63],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:30","sourceCode":"new java.util.HashMap<java.lang.String, java.lang.Class<?>>(10)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:55","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:2000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"checkOrder":"matched","value":"matched"}},{"transplant":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"(\"Invalid key (\" + java.lang.String)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1877","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.CompareEqual<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[110,111],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1235","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:557","failures":[2,112,3,4,5,113,6,7,8,8,9,9,114,115,10,116,117,118,55,119,120,121,122,123,124,125,126,127,67,74,128,129,130,131,75,76,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,77,78,147,79,148,80,81,149,150,151,110,82,152,153,83,154,155,84,156,157,158,159,160,85,161,11,12,13,14,15,16,17,18,19,162,163,164,165,166,20,21,22,23,24,25,26,167,168,169,170,27,171,28,172,173,174,175,29,176,177,178,179,180,181,182,183,184,185,186,187,188,30,189,31,32,190,33,111,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,86,207,208,209,210,211,212,213,214,215,216,217,218,219,34,35,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,87,53,251,252,253,254,255,70,88,256,257,258,89,90,259,91,71,260,261,92,262,263,94,264,265,266,267,268,36,37,38,269,270,271,272,39,273,274,275,276,277,278,40,41,42,43,44,45,46,279,47,48,95,72,73,280,281,49,50,51,52,282,283],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[263],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"failures":[284,153,158,161],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:128","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this","constructor":"constructor"}},{"transplant":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[136,144],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values","this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[285,286],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:229","failures":[12,15,19,191,287],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[67,99,100,101,288,102,103,70,104,105,106,107,71,72,73],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[2,112,3,4,289,5,290,113,291,292,6,293,7,294,8,8,9,9,295,114,115,10,116,117,118,55,119,296,120,121,297,298,299,300,301,122,302,303,304,305,306,307,308,309,310,311,123,124,125,312,126,313,314,315,316,317,318,127,319,67,74,320,128,129,130,99,131,321,75,76,132,100,101,133,134,135,136,322,137,138,323,324,139,140,141,142,143,144,145,146,77,78,147,325,79,148,80,81,149,150,326,151,110,82,152,153,83,154,155,84,156,157,158,327,159,160,85,161,328,329,330,11,331,332,12,333,334,335,336,337,338,339,340,341,13,342,343,344,345,346,14,347,348,349,350,15,351,352,16,353,17,18,62,354,19,355,356,357,358,359,360,162,361,362,363,364,365,366,163,164,165,166,367,368,369,370,20,21,22,23,24,25,26,167,168,169,170,27,171,28,63,172,173,174,175,29,176,177,178,179,180,181,182,183,184,185,186,187,188,371,30,189,31,32,190,33,372,111,373,374,375,191,192,193,376,287,194,377,195,196,378,197,288,198,199,200,201,202,203,204,205,379,380,381,382,206,86,207,208,209,210,211,212,213,214,215,383,216,384,217,218,219,34,35,220,221,222,223,224,225,226,227,228,229,385,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,386,387,388,389,390,391,392,393,394,395,396,397,250,87,53,251,252,398,399,400,401,402,403,404,405,406,285,407,408,409,286,410,0,253,411,254,1,412,413,103,255,414,70,88,415,416,417,418,419,420,421,96,422,423,424,425,426,427,256,428,429,430,431,432,433,257,258,104,105,89,90,106,107,259,434,435,91,436,437,438,439,440,441,71,442,443,444,445,446,447,260,261,92,448,93,449,450,451,452,453,454,455,456,457,458,459,460,461,462,262,463,54,464,465,466,263,467,94,264,265,266,267,268,36,37,38,269,270,271,272,39,273,274,275,276,277,278,40,41,42,43,44,45,46,279,47,468,469,48,470,95,72,73,471,472,473,474,475,280,281,476,477,478,49,50,479,51,480,481,482,52,282,97,283,98],"status":-1,"binaryOperator":"(java.lang.String != null) && (!org.easymock.internal.Invocation.(org.easymock.internal.Invocation.isJavaIdentifier(java.lang.String)))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[199,200],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:45","sourceCode":"return org.easymock.internal.matchers.CompareTo<T>.matchResult(((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Comparable<T>))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:137","sourceCode":"if (int > 1) {\n    java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\");\n} else {\n    java.lang.StringBuilder.append(\":\");\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[127,67,74,130,99,100,101,367,368,369,370,483,68,69,103,255,70,88,258,105,106,107,71,95,72,73],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"buffer","matches":"matches"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:252","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[2,112,3,4,289,5,113,291,292,6,293,7,294,295,115,10,116,118,55,119,296,120,121,122,123,124,125,126,318,127,319,67,74,320,128,129,130,99,131,321,75,76,100,101,133,134,135,136,322,137,138,323,324,139,140,141,142,144,145,146,77,78,147,79,148,80,81,149,150,151,110,82,152,153,83,154,155,84,156,157,158,327,159,160,85,161,11,12,13,14,16,17,18,162,165,20,21,22,23,24,25,26,167,170,27,28,172,173,174,175,29,176,177,178,179,180,181,182,183,185,186,187,188,371,30,189,31,32,190,33,111,192,194,195,196,197,201,202,203,204,205,206,86,207,208,209,210,211,212,223,228,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,386,387,388,390,391,393,394,395,396,397,87,53,253,411,413,103,255,414,70,88,415,257,258,105,89,90,106,107,259,91,436,437,438,440,441,71,260,261,92,94,265,266,267,268,36,37,38,269,270,271,272,39,273,274,275,276,277,278,40,41,42,43,44,45,46,279,47,48,95,72,73,280,49,50,51,52,282],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":147,"org.easymock.tests2.UsageTest.argumentsOrdered":101,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":257,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":187,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":457,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":321,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":295,"org.easymock.tests2.DelegateToTest.testReturnException":115,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":225,"org.easymock.tests.MockingTest.testPartialClassMocking":49,"org.easymock.tests.MockClassControlTest.testToString":400,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":283,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":464,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":336,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":12,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":230,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":483,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":121,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":56,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":150,"org.easymock.tests2.UsageTest.wrongArguments":99,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":201,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":307,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":381,"org.easymock.samples.ExampleTest.answerVsDelegate":112,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":431,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":481,"org.easymock.tests2.UsageConstraintsTest.testNull":148,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":32,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":405,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":186,"org.easymock.tests2.CaptureTest.testPrimitive":137,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":205,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":249,"org.easymock.tests.UsageTest.moreThanOneArgument":258,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":31,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":220,"org.easymock.tests.UsageTest.argumentsOrdered":107,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":250,"org.easymock.tests.UsageVarargTest.varargIntAccepted":388,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":462,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":44,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":109,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":350,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":365,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":353,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":449,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":47,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":65,"org.easymock.tests.ReplayStateInvalidUsageTest.times":424,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":122,"org.easymock.tests2.AnswerTest.answer":167,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":326,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":463,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":316,"org.easymock.tests2.CaptureTest.testAnd":135,"org.easymock.tests2.UsageTest.strictResetToDefault":129,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":375,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":35,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":181,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":265,"org.easymock.tests2.DelegateToTest.testDelegate":118,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":252,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":245,"org.easymock.tests.LimitationsTest.mockFinalMethod":470,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":228,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":475,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":383,"org.easymock.tests2.CaptureTest.testCapture1_2446744":138,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":243,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":314,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":419,"org.easymock.tests.UsageThrowableTest.throwError":206,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":430,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":366,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":348,"org.easymock.samples.PartialClassMockTest.testGetArea":6,"org.easymock.tests.MockingTest.testInterfaceMocking":479,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":420,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":45,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":218,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":447,"org.easymock.tests2.UsageTest.niceToStrict":131,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":448,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":16,"org.easymock.tests2.MockBuilderTest.testCreateMock":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":344,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":304,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":239,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":182,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":215,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":434,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":379,"org.easymock.tests.UsageOverloadedMethodTest.overloading":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":346,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":153,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":196,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":260,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":274,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":152,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":141,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":389,"org.easymock.tests.MockClassControlTest.testEquals":404,"org.easymock.tests2.EasyMockSupportClassTest.testAll":11,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":411,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":247,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":473,"org.easymock.tests2.CaptureTest.testCaptureAll":136,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":315,"org.easymock.tests.MockNameTest.defaultName":385,"org.easymock.tests2.UsageConstraintsTest.testMatches":83,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":417,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":221,"org.easymock.samples.ExampleTest.voteForRemovals":5,"org.easymock.tests.UsageVarargTest.allKinds":397,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":95,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":474,"org.easymock.samples.BasicClassMockTest.testPrintContent":292,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":211,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":317,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":117,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":229,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":362,"org.easymock.tests2.UsageConstraintsTest.greaterThan":155,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":331,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":264,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":193,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":410,"org.easymock.samples.ExampleTest.voteForRemoval":3,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":174,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":376,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":432,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":372,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":128,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":223,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":62,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":454,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":179,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":329,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":224,"org.easymock.tests2.CaptureTest.testCaptureFirst":145,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":114,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":453,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":180,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":134,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":288,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":271,"org.easymock.tests2.CaptureTest.testCapture2_2446744":144,"org.easymock.tests2.UsageTest.moreThanOneArgument":130,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":29,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":19,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":54,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":396,"org.easymock.tests.GenericTest.testBridgedEquals":1,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":440,"org.easymock.tests.UsageExpectAndReturnTest.longType":37,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":471,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":177,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":248,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":256,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":327,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":246,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":34,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":199,"org.easymock.tests.UsageCallCountTest.tooManyCalls":441,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":66,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":345,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":272,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":306,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":235,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":210,"org.easymock.tests.MockingTest.testNiceClassMocking":482,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":21,"org.easymock.tests.MockingTest.testClassMocking":477,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":435,"org.easymock.tests2.UsageConstraintsTest.testContains":82,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":165,"org.easymock.tests2.UsageConstraintsTest.testFind":79,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":92,"org.easymock.tests.MockTypeTest.fromEasyMockClass":429,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":412,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":126,"org.easymock.tests.UsageExpectAndReturnTest.object":273,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":111,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":305,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":185,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":391,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":57,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":445,"org.easymock.tests.UsageTest.exactCallCountByLastCall":259,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":280,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":452,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":97,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":87,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":63,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":386,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":40,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":195,"org.easymock.tests.MockClassControlTest.testHashCode":403,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":357,"org.easymock.tests2.EasyMockSupportTest.testVerify":371,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":339,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":64,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":53,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":194,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":214,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":313,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":349,"org.easymock.tests.UsageVarargTest.varargCharAccepted":390,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":318,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":467,"org.easymock.tests2.UsageTest.openCallCountByLastCall":75,"org.easymock.tests.DefaultClassInstantiatorTest.object":406,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":188,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":213,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":443,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":102,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":340,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":208,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":300,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":356,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":402,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":191,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":236,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":41,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":198,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":14,"org.easymock.tests2.UsageTest.resumeIfFailure":133,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":428,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":227,"org.easymock.tests2.StubTest.stubWithReturnValue":124,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":61,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":159,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":39,"org.easymock.tests2.SerializationTest.testAllMockedMethod":296,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":262,"org.easymock.samples.SupportTest.voteForRemovals":7,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":0,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":359,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":242,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":263,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":168,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":98,"org.easymock.tests.UsageExpectAndThrowTest.object":240,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":157,"org.easymock.tests2.DelegateToTest.testWrongClass":116,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":52,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":282,"org.easymock.samples.ConstructorCalledMockTest.testTax":8,"org.easymock.tests.UsageStrictMockTest.range":70,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":310,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":184,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":20,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":241,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":17,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":426,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":328,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":380,"org.easymock.tests2.CaptureTest.testCaptureNone":140,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":219,"org.easymock.tests.UsageUnorderedTest.message":71,"org.easymock.tests.UsageVerifyTest.twoReturns":73,"org.easymock.tests.UsageVarargTest.varargByteAccepted":395,"org.easymock.tests2.ThreadingTest.testThreadSafe":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":342,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":438,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":446,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":291,"org.easymock.tests2.CaptureTest.testCapture_2617107":322,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":384,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":465,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":204,"org.easymock.tests2.UsageConstraintsTest.any":151,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":423,"org.easymock.tests2.StubTest.stub":123,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":200,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":466,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":226,"org.easymock.tests.UsageExpectAndThrowTest.longType":233,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":409,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":422,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":319,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":162,"org.easymock.tests2.SerializationTest.testClass":55,"org.easymock.tests.LimitationsTest.mockNativeMethod":48,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":43,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":254,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":299,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":320,"org.easymock.tests2.NameTest.nameForMocksControl":370,"org.easymock.tests2.MockedExceptionTest.testMockedException":164,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":332,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":90,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":51,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":234,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":312,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":30,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":18,"org.easymock.tests.MockingTest.testNicePartialClassMocking":50,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":33,"org.easymock.tests2.CaptureTest.testCaptureLast":139,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":297,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":216,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":149,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":26,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":158,"org.easymock.tests.MockingTest.testTwoMocks":478,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":267,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":238,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":100,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":85,"org.easymock.samples.ExampleTest.removeNonExistingDocument":290,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":421,"org.easymock.tests.UsageStrictMockTest.differentMethods":88,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":303,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":358,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":407,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":175,"org.easymock.tests2.MockBuilderTest.testCreateMockString":355,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":398,"org.easymock.tests.UsageExpectAndThrowTest.floatType":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":333,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":330,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":170,"org.easymock.tests.UsageVerifyTest.twoThrows":72,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":13,"org.easymock.samples.ExampleTest.voteAgainstRemoval":4,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":458,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":217,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":192,"org.easymock.tests.LimitationsTest.privateConstructor":469,"org.easymock.tests2.UsageConstraintsTest.testNotNull":160,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":163,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":212,"org.easymock.tests2.UsageTest.defaultResetToNice":132,"org.easymock.samples.ExampleTest.voteAgainstRemovals":2,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":459,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":278,"org.easymock.tests.UsageVarargTest.differentLength":392,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":298,"org.easymock.tests2.CallbackTest.callback":172,"org.easymock.tests2.UsageConstraintsTest.equals":325,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":373,"org.easymock.tests.UsageTest.openCallCountByLastCall":89,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":146,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":203,"org.easymock.tests.UsageCallCountTest.tooFewCalls":436,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":23,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":382,"org.easymock.tests.UsageThrowableTest.throwCheckedException":209,"org.easymock.tests.MockingTest.testStrictClassMocking":476,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":25,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":281,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":22,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":302,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":425,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":24,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":171,"org.easymock.tests.ObjectMethodsTest.testHashCode":444,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":108,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":176,"org.easymock.tests2.NameTest.nameForNiceMock":369,"org.easymock.tests2.DependencyTest.testInterfaceMocking":120,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":58,"org.easymock.samples.ExampleTest.addDocument":289,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":343,"org.easymock.tests2.DelegateToTest.testStubDelegate":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":347,"org.easymock.tests2.AnswerTest.stubAnswer":27,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":255,"org.easymock.tests.UsageVarargTest.varargLongAccepted":394,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":456,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":42,"org.easymock.tests.UsageExpectAndReturnTest.floatType":36,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":28,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":9,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":84,"org.easymock.tests.UsageThrowableTest.noUpperLimit":86,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":364,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":378,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":77,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":308,"org.easymock.tests2.SerializationTest.test":119,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":323,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":285,"org.easymock.tests2.UsageConstraintsTest.testSame":80,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":268,"org.easymock.samples.SupportTest.addDocument":293,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":334,"org.easymock.tests.GenericTest.testPackageScope":253,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":451,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":363,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":480,"org.easymock.tests2.NameTest.nameForMock":367,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":275,"org.easymock.tests2.UsageStrictMockTest.differentMethods":74,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":374,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":38,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":244,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":442,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":266,"org.easymock.tests2.MockedExceptionTest.testRealException":166,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":433,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":461,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":311,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":460,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":127,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":427,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":202,"org.easymock.tests2.NameTest.nameForStrictMock":368,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":352,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":125,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":190,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":309,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":408,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":156,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":68,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":15,"org.easymock.tests2.UsageStrictMockTest.range":67,"org.easymock.tests2.UsageConstraintsTest.lessThan":161,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":360,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":455,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":178,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":59,"org.easymock.tests2.CaptureTest.testCaptureRightOne":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":338,"org.easymock.tests2.UsageConstraintsTest.testOr":81,"org.easymock.tests.UsageRangeTest.combination":94,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":189,"org.easymock.tests.UsageTest.wrongArguments":105,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":335,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":399,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":93,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":276,"org.easymock.tests.UsageVarargTest.varargShortAccepted":393,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":286,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":439,"org.easymock.tests2.UsageConstraintsTest.cmpTo":110,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":169,"org.easymock.tests2.CompareToTest.testLessThan":284,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":450,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":76,"org.easymock.tests2.CaptureTest.testCaptureFromStub":143,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":418,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":351,"org.easymock.tests.UsageTest.unexpectedCallWithArray":104,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":103,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":437,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":277,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":414,"org.easymock.tests2.UsageConstraintsTest.constraints":78,"org.easymock.samples.ExampleTest.addAndChangeDocument":113,"org.easymock.tests.UsageStrictMockTest.testVerify":416,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":294,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":413,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":472,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":324,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":46,"org.easymock.tests.LimitationsTest.abstractClass":468,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":270,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":197,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":279,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":387,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":183,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":69}}]
