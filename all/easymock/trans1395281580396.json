[{"position":"org.easymock.internal.ArgumentToString:47","failures":[0,1,2,3,4,5],"status":-1,"binaryOperator":"int > 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[6,7,8,9,10,11,12,13,14,15,16],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[17,18,19],"status":-1,"binaryOperator":"int == 0","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:47","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Short.java.lang.Class<java.lang.Short>, java.lang.Short.java.lang.Short.valueOf(((short)(0))))","type":"CtInvocationImpl"},"failures":[22,23],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:315","failures":[24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[67],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"expected","this":"this"}},{"position":"org.easymock.internal.MockBuilder:159","failures":[68,69,70,71,72,73,74],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:60","failures":[70,75,76,71,73,77,78,79,80,81,82],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[67],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"actual":"expected"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if (org.easymock.ConstructorArgs != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[70,75,76,73,77,78,83,84,85,86,79,87,80,81,82],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"this"}},{"position":"org.easymock.internal.MocksBehavior:200","failures":[88],"status":-1,"binaryOperator":"(((\"\\n Mock isn\\'t supposed to be called from multiple threads. Last: \" + (java.lang.Thread)) + \" Current: \") + java.lang.Thread.(java.lang.Thread.currentThread()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[0,89,90,91,92,93,20,94,95,3,96,97,98,99,100],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[0,89,90,91,92,20,94,95,3,96,97,98,99,100],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[0,1,2,3,4,5],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[101,102,103],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"ret":"constructor","clazz":"toMock"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:121","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:221","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[103,104,105],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stream":"stream"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:244","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:335","sourceCode":"if (java.lang.reflect.Type == null) {\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[0,1,2,3,4,5],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2170","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[106,107],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[108],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.LastControl:94","failures":[6,7,109,8,110,9,10,111,11,112,12,113,13,114,14,115,15,116,16,117],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:81","sourceCode":"java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[118,119,120,121,122],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[123,124,125],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[126,127,128,129,130,24,131,0,89,132,25,90,91,133,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,46,154,155,156,157,158,159,160,161,47,93,162,163,48,20,164,165,49,50,166,167,94,95,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,51,190,191,192,52,53,193,194,22,195,196,119,120,54,55,56,57,58,59,197,198,199,200,201,202,203,3,204,205,96,206,207,208,209,23,210,211,212,213,214,215,216,217,218,219,220,221,222,223,68,69,224,225,226,227,60,228,229,97,230,231,232,61,233,98,99,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,17,254,255,256,257,258,259,6,7,109,8,110,9,10,111,112,18,260,67,261,262,263,264,265,12,113,266,267,268,13,114,269,270,271,272,273,274,275,276,277,62,63,64,65,278,279,280,281,88,282,283,284,285,286,287,288,289,103,104,105,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,100,313,314,315,66,316,317,80,318,319,320,81,14,115,15,116,321,322,323,324,325,326,16,117,327,328],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[12],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[329,106,107],"status":-1,"binaryOperator":"java.lang.String == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:305","failures":[330,331,332],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[6,7,8,9,10,11,12,13,14,15,16],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:853","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:185","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:56","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"parameterTypes":"paramTypes","i":"i"}},{"transplant":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[211,217,219,220,222,227],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[333],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[126,127,128,129,154,155,156,157,334,158,159,164,168,169,170,171,172,173,176,177,179,180,181,183,184,185,186,187,197,204,96,206,208,209,23,210,211,212,213,215,217,219,220,222,227,237,238,240,241,243,245,246,247,248,249,250,251,252,17,255,256,257,282,287,290,304,305,306,307,311,100,313,316,317,80,318,319,320,81],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"returnedType"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":7,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":24,"org.easymock.tests2.UsageTest.argumentsOrdered":99,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":301,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":57,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":231,"org.easymock.tests2.StubTest.stubWithReturnValue":66,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":76,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":268,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":216,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":177,"org.easymock.tests2.SerializationTest.testAllMockedMethod":105,"org.easymock.tests2.DelegateToTest.testReturnException":286,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":332,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":55,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":102,"org.easymock.tests.MockingTest.testPartialClassMocking":154,"org.easymock.samples.SupportTest.voteForRemovals":227,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":5,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":118,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":38,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":305,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":26,"org.easymock.tests.UsageExpectAndThrowTest.object":36,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":246,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":113,"org.easymock.tests2.DelegateToTest.testWrongClass":288,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":208,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":209,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":111,"org.easymock.tests2.UsageTest.wrongArguments":97,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":164,"org.easymock.samples.ConstructorCalledMockTest.testTax":68,"org.easymock.tests.UsageStrictMockTest.range":96,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":200,"org.easymock.samples.ExampleTest.answerVsDelegate":218,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":298,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":316,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":83,"org.easymock.tests2.UsageConstraintsTest.testNull":8,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":250,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":37,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":300,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":240,"org.easymock.tests2.CaptureTest.testPrimitive":116,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":166,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":90,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":45,"org.easymock.tests.UsageTest.moreThanOneArgument":131,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":249,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":199,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":1,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":128,"org.easymock.tests2.CaptureTest.testCaptureNone":325,"org.easymock.tests.UsageUnorderedTest.message":20,"org.easymock.tests.UsageVerifyTest.twoReturns":95,"org.easymock.tests.UsageVarargTest.varargByteAccepted":142,"org.easymock.tests2.ThreadingTest.testThreadSafe":280,"org.easymock.tests.UsageTest.argumentsOrdered":91,"org.easymock.tests.UsageVarargTest.varargIntAccepted":136,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":149,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":224,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":23,"org.easymock.tests2.CaptureTest.testCapture_2617107":15,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":236,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":50,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":239,"org.easymock.tests2.UsageConstraintsTest.any":112,"org.easymock.tests2.StubTest.stub":315,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":213,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":125,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":56,"org.easymock.tests.UsageExpectAndThrowTest.longType":29,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":312,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":285,"org.easymock.tests2.SerializationTest.testClass":103,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":308,"org.easymock.tests.LimitationsTest.mockNativeMethod":197,"org.easymock.tests2.AnswerTest.answer":270,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":121,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":187,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":11,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":277,"org.easymock.tests2.CaptureTest.testAnd":14,"org.easymock.tests2.UsageTest.strictResetToDefault":228,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":314,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":254,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":75,"org.easymock.tests2.MockedExceptionTest.testMockedException":63,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":127,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":295,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":158,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":25,"org.easymock.tests2.DelegateToTest.testDelegate":289,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":30,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":156,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":247,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":241,"org.easymock.tests.MockingTest.testNicePartialClassMocking":155,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":41,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":252,"org.easymock.tests2.CaptureTest.testCaptureLast":324,"org.easymock.tests2.CompareToTest.testCompareEqual":19,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":58,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":331,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":81,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":10,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":266,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":196,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":330,"org.easymock.tests2.CaptureTest.testCapture1_2446744":321,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":82,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":329,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":168,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":39,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":275,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":34,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":98,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":114,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":106,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":108,"org.easymock.tests.UsageThrowableTest.throwError":188,"org.easymock.tests.UsageStrictMockTest.differentMethods":206,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":88,"org.easymock.tests2.MockBuilderTest.testCreateMockString":244,"org.easymock.tests.UsageExpectAndThrowTest.floatType":28,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":130,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":263,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":271,"org.easymock.tests.UsageVerifyTest.twoThrows":94,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":306,"org.easymock.samples.PartialClassMockTest.testGetArea":215,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":210,"org.easymock.samples.ExampleTest.voteAgainstRemoval":220,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":256,"org.easymock.tests2.UsageTest.niceToStrict":230,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":27,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":78,"org.easymock.tests2.ThreadingTest.testChangeDefault":107,"org.easymock.tests2.UsageConstraintsTest.testNotNull":13,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":62,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":53,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":238,"org.easymock.tests2.MockBuilderTest.testCreateMock":242,"org.easymock.tests2.UsageTest.defaultResetToNice":233,"org.easymock.samples.ExampleTest.voteAgainstRemovals":217,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":183,"org.easymock.tests.UsageVarargTest.differentLength":139,"org.easymock.tests2.CallbackTest.callback":284,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":74,"org.easymock.tests.UsageTest.openCallCountByLastCall":132,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":4,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":35,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":296,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":258,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":198,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":49,"org.easymock.tests.UsageCallCountTest.tooFewCalls":147,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":84,"org.easymock.tests.UsageOverloadedMethodTest.overloading":163,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":261,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":47,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":318,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":162,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":179,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":67,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":326,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":201,"org.easymock.tests.UsageThrowableTest.throwCheckedException":191,"org.easymock.tests2.EasyMockSupportClassTest.testAll":304,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":120,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":2,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":43,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":276,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":72,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":22,"org.easymock.tests2.CaptureTest.testCaptureAll":115,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":320,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":46,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":80,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":333,"org.easymock.tests2.UsageConstraintsTest.testMatches":262,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":319,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":273,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":129,"org.easymock.samples.ExampleTest.voteForRemovals":222,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":283,"org.easymock.tests.UsageVarargTest.allKinds":144,"org.easymock.tests2.DependencyTest.testInterfaceMocking":245,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":167,"org.easymock.samples.BasicClassMockTest.testPrintContent":225,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":195,"org.easymock.samples.ExampleTest.addDocument":221,"org.easymock.tests2.DelegateToTest.testStubDelegate":287,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":52,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":309,"org.easymock.tests2.AnswerTest.stubAnswer":272,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":59,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":204,"org.easymock.tests2.UsageConstraintsTest.greaterThan":264,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":334,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":257,"org.easymock.tests.UsageVarargTest.varargLongAccepted":141,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":207,"org.easymock.samples.ExampleTest.voteForRemoval":219,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":281,"org.easymock.tests.UsageExpectAndReturnTest.floatType":170,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":186,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":290,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":253,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":69,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":265,"org.easymock.tests.UsageThrowableTest.noUpperLimit":189,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":259,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":60,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":145,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":322,"org.easymock.tests2.SerializationTest.test":104,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":101,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":293,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":51,"org.easymock.tests2.UsageConstraintsTest.testSame":110,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":169,"org.easymock.samples.SupportTest.addDocument":226,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":54,"org.easymock.tests2.CaptureTest.testCaptureFirst":328,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":294,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":235,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":93,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":175,"org.easymock.tests.GenericTest.testPackageScope":119,"org.easymock.tests2.CaptureTest.testCapture2_2446744":327,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":282,"org.easymock.tests2.UsageTest.moreThanOneArgument":229,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":243,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":143,"org.easymock.tests.GenericTest.testBridgedEquals":122,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":85,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":151,"org.easymock.tests.UsageExpectAndReturnTest.longType":171,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":291,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":193,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":44,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":180,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":267,"org.easymock.tests2.UsageStrictMockTest.differentMethods":313,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":73,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":42,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":124,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":126,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":172,"org.easymock.tests.UsageCallCountTest.tooManyCalls":152,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":40,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":159,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":146,"org.easymock.tests2.MockedExceptionTest.testRealException":65,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":176,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":311,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":31,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":192,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":165,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":317,"org.easymock.tests2.UsageConstraintsTest.testContains":260,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":64,"org.easymock.tests2.UsageConstraintsTest.testFind":109,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":48,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":278,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":87,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":251,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":279,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":202,"org.easymock.tests.UsageExpectAndReturnTest.object":178,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":12,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":17,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":237,"org.easymock.tests2.UsageStrictMockTest.range":100,"org.easymock.tests2.UsageConstraintsTest.lessThan":269,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":299,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":138,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":86,"org.easymock.tests.UsageTest.exactCallCountByLastCall":133,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":153,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":292,"org.easymock.tests2.CaptureTest.testCaptureRightOne":16,"org.easymock.tests2.UsageConstraintsTest.testOr":9,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":79,"org.easymock.tests.UsageRangeTest.combination":157,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":248,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":134,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":184,"org.easymock.tests.UsageTest.wrongArguments":89,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":161,"org.easymock.tests2.MockBuilderTest.testWithConstructor":70,"org.easymock.tests2.EasyMockSupportTest.testVerify":303,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":173,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":181,"org.easymock.tests.UsageVarargTest.varargShortAccepted":140,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":160,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":274,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":150,"org.easymock.tests2.UsageConstraintsTest.cmpTo":18,"org.easymock.tests.UsageVarargTest.varargCharAccepted":137,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":310,"org.easymock.tests2.UsageTest.openCallCountByLastCall":232,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":61,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":302,"org.easymock.tests2.CaptureTest.testCaptureFromStub":117,"org.easymock.tests.UsageTest.unexpectedCallWithArray":0,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":92,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":33,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":3,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":190,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":148,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":71,"org.easymock.tests2.ConstraintsToStringTest.anyToString":21,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":182,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":255,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":205,"org.easymock.tests2.UsageConstraintsTest.constraints":6,"org.easymock.samples.ExampleTest.addAndChangeDocument":223,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":32,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":185,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":123,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":307,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":203,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":194,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":323,"org.easymock.tests2.UsageTest.resumeIfFailure":234,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":211,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":174,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":212,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":297,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":135}}]
