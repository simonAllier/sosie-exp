[{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:176","sourceCode":"final net.sf.cglib.core.CodeGenerationException net.sf.cglib.core.CodeGenerationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1659","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(long[]))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"position":"org.easymock.internal.RecordState:117","failures":[79,80,81,82,83,84,85,86],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[87,88,89,0,90,91,1,92,2,3,93,94,4,95,96,97,98,99,5,6,8,9,10,100,11,101,102,103,12,13,14,104,105,106,107,108,109,110,111,112,113,114,115,116,19,117,118,119,120,23,121,122,24,123,124,125,126,127,128,129,130,131,25,132,133,134,135,136,26,137,138,27,28,29,30,32,33,139,140,141,141,142,142,34,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,52,161,162,163,164,165,166,167,168,169,170,171,172,76,77,78,173],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[174],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:91","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[176],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:324","failures":[195,196,197],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:135","sourceCode":"java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader()","type":"CtAssignmentImpl"},"failures":[198],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:95","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.util.Stack<org.easymock.IArgumentMatcher>.pop();\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[175,176,178,180,181,183,185,187,189,191,193],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:106","failures":[88,89,0,90,1,92,2,3,94,4,96,97,98,99,5,6,8,9,10,100,11,103,12,13,14,109,111,112,113,116,19,23,24,25,26,27,28,29,30,32,33,139,140,141,141,142,142,34,144,145,146,150,157,158,52,162,172,76,77,78],"status":-1,"binaryOperator":"java.lang.Class<?>[] == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,175,176,177,178,179,180,181,182,184,214,215,216,217,218,219,220,221,185,186,222,223,224,187,188,225,88,0,1,92,2,3,94,4,97,98,226,99,5,6,7,8,9,10,100,11,103,12,13,14,227,228,229,230,231,232,233,15,234,235,16,236,237,189,190,191,192,238,239,240,241,242,243,193,194,244,245,17,18,246,247,114,115,116,248,19,249,250,20,251,21,22,252,23,24,25,26,253,254,255,256,257,258,259,260,261,262,263,264,265,266,79,80,267,81,268,82,83,84,27,28,29,30,31,32,33,139,140,141,142,269,34,270,271,35,36,85,37,38,272,39,273,274,275,276,277,195,196,278,279,40,41,42,43,44,280,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,144,145,45,47,48,295,296,49,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,50,51,52,328,329,330,331,332,333,334,335,336,53,337,54,55,338,162,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,56,57,58,59,60,61,358,359,62,63,360,64,65,66,361,67,68,69,70,71,362,197,363,72,73,74,75,364,76,77,78,86,365,366,367],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[368,369,370,371,372,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,175,176,373,177,178,179,180,181,182,183,184,214,215,216,217,218,219,220,221,185,186,222,223,224,187,188,225,374,88,0,90,91,1,92,2,3,375,93,94,4,97,98,226,99,5,6,7,8,9,10,100,376,11,101,102,103,12,13,14,104,105,227,228,229,230,231,377,232,233,15,234,378,235,16,236,379,237,189,190,191,192,238,239,240,241,242,243,193,194,244,245,106,380,381,107,382,383,384,385,386,17,18,246,247,114,115,116,248,19,117,249,250,20,251,21,22,252,118,119,120,23,121,122,24,123,124,125,126,127,128,129,130,131,25,132,133,134,135,136,26,137,138,387,388,389,390,391,253,392,393,394,395,396,397,254,255,256,257,258,259,260,261,262,263,264,265,266,79,398,399,80,267,81,400,401,402,403,404,268,405,406,407,408,409,410,82,411,83,84,27,28,29,30,412,31,32,33,413,139,140,141,142,269,34,270,271,35,36,85,37,38,272,39,414,273,274,275,276,277,195,196,278,279,40,41,42,43,44,415,416,417,418,281,282,283,284,285,286,419,287,288,289,290,291,292,293,294,143,144,145,146,147,45,46,47,48,295,296,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,49,297,298,299,300,442,443,444,445,446,148,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,149,150,151,152,153,154,155,156,447,448,321,322,323,324,325,326,327,157,449,450,451,452,158,453,454,50,51,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,159,160,52,161,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,174,491,492,493,494,495,496,497,498,499,500,328,329,330,331,332,333,334,335,336,53,337,54,55,338,501,162,339,340,341,342,343,344,345,346,347,502,503,504,348,349,350,351,352,353,354,355,356,357,163,164,165,166,167,168,169,56,57,58,59,60,61,358,359,62,63,360,64,65,66,361,67,68,69,70,71,505,506,507,362,197,363,72,73,74,75,364,508,170,171,172,76,77,509,78,510,511,173,86,512,365,366,513,514,367],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"failures":[89,96],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[515,516,517,518,519,520,521,117,29,33,413],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:84","sourceCode":"java.lang.Object[] = new java.lang.Object[0]","type":"CtAssignmentImpl"},"failures":[522],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"(((java.util.Comparator<? super T>) + \"(\") + (T))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:131","failures":[143,144,145,146,147],"status":-1,"binaryOperator":"((java.lang.reflect.Method.getParameterTypes().int) == (java.lang.reflect.Method.getParameterTypes().int))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[523],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:57","failures":[],"status":0,"binaryOperator":"(((this.java.lang.Object) != null) && (this.java.lang.Object.equals(org.easymock.internal.matchers.Equals.java.lang.Object)))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:747","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[524,525],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[246,299,462,490,496],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[175,176,178,180,181,183,185,187,189,191,193],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[368,369,370,371,372,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,175,176,373,177,178,179,180,181,182,183,184,214,215,216,217,218,219,220,221,185,186,222,223,224,187,188,225,526,198,527,374,528,88,0,90,91,1,92,2,3,375,93,94,4,97,98,226,99,5,6,7,8,9,10,100,376,11,101,102,103,12,13,14,104,105,227,228,229,230,231,377,232,233,15,234,378,235,16,236,379,237,189,190,191,192,238,239,240,241,242,243,193,194,244,245,106,380,381,107,382,383,384,385,386,17,18,246,247,114,115,116,248,19,117,249,250,20,251,21,22,252,118,119,120,23,121,122,24,123,124,125,126,127,128,129,130,131,25,132,133,134,135,136,26,137,138,387,388,389,390,391,253,392,393,394,395,396,397,254,255,256,257,258,259,260,261,262,263,264,265,266,79,398,399,80,267,81,400,401,402,403,404,268,405,406,407,408,409,410,82,411,83,84,27,28,29,30,412,31,32,33,413,139,140,141,142,269,34,270,271,35,36,85,37,38,272,39,414,273,274,275,276,277,195,196,278,279,40,41,42,43,44,415,416,417,418,281,282,283,284,285,286,419,287,288,289,290,291,292,293,294,143,144,145,146,147,45,46,47,48,295,296,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,49,297,298,299,300,442,443,444,445,446,148,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,149,150,151,152,153,154,155,156,447,448,321,322,323,324,325,326,327,157,449,450,451,452,158,453,454,50,51,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,159,160,52,161,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,174,491,492,493,494,495,496,497,498,499,500,328,329,330,331,332,333,334,335,336,53,337,54,55,338,501,162,339,340,341,342,343,344,345,346,347,502,503,504,348,349,350,351,352,353,354,355,356,357,163,164,165,166,167,168,169,56,57,58,59,60,61,358,359,62,63,360,64,65,66,361,67,68,69,70,71,505,506,507,362,197,363,72,73,74,75,364,508,170,171,172,76,77,509,78,510,511,173,86,512,365,366,513,514,367],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:622","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[184,295],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[21,257,263,264,529,328,336,54,341,342,345,346,197,363],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[164,165,166,168,169],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[216],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"actual","this":"this"}},{"position":"org.easymock.internal.Range:40","failures":[368,369,370,371,372,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,175,176,373,177,178,179,180,181,182,183,184,214,215,216,217,218,219,220,221,185,186,222,223,224,187,188,225,88,517,0,90,518,91,1,92,2,519,3,375,93,94,4,521,97,98,226,99,5,6,7,8,9,10,100,376,11,101,102,103,12,13,14,104,105,227,228,229,230,231,232,233,15,234,378,235,16,236,379,237,189,190,191,192,238,239,240,241,242,243,193,194,244,245,106,380,381,530,107,382,383,384,385,386,17,18,246,247,114,115,116,248,19,117,531,249,250,20,251,21,22,252,118,119,120,23,121,122,24,123,124,125,126,127,128,129,130,131,25,132,133,134,135,136,26,137,138,387,388,389,390,391,253,392,393,394,395,396,397,254,255,256,257,258,259,260,261,262,263,264,265,266,79,398,399,80,267,81,400,401,402,403,404,268,405,406,407,408,409,410,82,411,83,84,27,28,29,30,412,31,32,33,413,139,140,141,142,269,34,270,271,35,36,85,37,38,272,39,414,273,274,275,276,277,195,196,278,279,40,41,42,43,44,415,416,417,418,281,282,283,284,285,286,419,287,288,289,290,291,292,293,294,143,144,145,146,147,532,45,46,47,48,295,296,49,297,298,299,300,442,443,444,445,446,148,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,149,150,151,152,153,154,155,156,447,448,321,322,323,324,325,326,327,157,449,450,451,452,158,453,454,50,51,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,159,160,52,161,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,174,491,492,493,494,495,496,497,498,499,500,328,329,330,331,332,333,334,335,336,53,337,54,55,338,501,162,339,340,341,342,343,344,345,346,347,502,503,504,348,349,350,351,352,353,354,355,356,357,533,163,164,165,166,167,168,534,169,56,57,58,59,60,61,358,359,62,63,360,64,65,66,361,67,68,69,70,71,505,506,507,362,197,363,72,73,74,75,364,508,170,171,172,76,77,509,78,510,511,173,86,512,365,366,513,514,367],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"failures":[523],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:72","sourceCode":"java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","type":"CtAssignmentImpl"},"failures":[98,226,99,535],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[223,187,82,83],"status":-1,"binaryOperator":"java.lang.Object != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[104,233,463],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:93","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.LinkedList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:999","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ExpectedInvocation:75","failures":[219,223,190,191,238,239,240,241,242,245],"status":-1,"binaryOperator":"(((this.java.util.List<org.easymock.IArgumentMatcher>) != null) && (this.java.util.List<org.easymock.IArgumentMatcher>.equals(org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>)))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[93,98],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":176,"org.easymock.tests2.UsageTest.argumentsOrdered":264,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":339,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":209,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":405,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":485,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":259,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":269,"org.easymock.tests2.DelegateToTest.testReturnException":235,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":349,"org.easymock.tests.MockingTest.testPartialClassMocking":76,"org.easymock.tests.MockClassControlTest.testToString":151,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":368,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":493,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":105,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":126,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":24,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":301,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":18,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":441,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":182,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":49,"org.easymock.tests2.UsageTest.wrongArguments":257,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":397,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":356,"org.easymock.samples.ExampleTest.answerVsDelegate":85,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":158,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":511,"org.easymock.tests2.UsageConstraintsTest.testNull":178,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":8,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":156,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":208,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":108,"org.easymock.tests2.CaptureTest.testPrimitive":192,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":300,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":320,"org.easymock.tests.UsageTest.moreThanOneArgument":340,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":7,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":74,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":455,"org.easymock.tests.UsageTest.argumentsOrdered":346,"org.easymock.tests.UsageVarargTest.varargIntAccepted":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":490,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":40,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":88,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":409,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":381,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":92,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":477,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":44,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":425,"org.easymock.tests.ReplayStateInvalidUsageTest.times":468,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":253,"org.easymock.tests2.DependencyTest.testClassMocking":385,"org.easymock.tests2.AnswerTest.answer":79,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":183,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":491,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":230,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":450,"org.easymock.tests2.CaptureTest.testAnd":189,"org.easymock.tests2.UsageTest.strictResetToDefault":255,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":518,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":103,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":73,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":47,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":203,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":459,"org.easymock.tests2.DelegateToTest.testDelegate":237,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":424,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":316,"org.easymock.tests.LimitationsTest.mockFinalMethod":161,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":352,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":333,"org.easymock.tests2.DependencyTest.testClassMockingSupport":386,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":505,"org.easymock.tests2.CaptureTest.testCapture1_2446744":238,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":376,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":314,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":228,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":462,"org.easymock.tests.UsageThrowableTest.throwError":274,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":452,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":532,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":410,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":364,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":515,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":138,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":428,"org.easymock.samples.PartialClassMockTest.testGetArea":34,"org.easymock.tests.MockingTest.testInterfaceMocking":509,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":463,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":41,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":473,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":127,"org.easymock.tests2.UsageTest.niceToStrict":258,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":302,"org.easymock.tests2.ThreadingTest.testChangeDefault":377,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":475,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":1,"org.easymock.tests2.MockBuilderTest.testCreateMock":94,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":134,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":394,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":310,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":204,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":449,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":500,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":447,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":354,"org.easymock.tests.UsageOverloadedMethodTest.overloading":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":131,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":217,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":366,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":64,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":281,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":524,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":216,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":243,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":419,"org.easymock.tests.MockClassControlTest.testEquals":155,"org.easymock.tests2.EasyMockSupportClassTest.testAll":23,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":145,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":318,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":109,"org.easymock.tests2.CaptureTest.testCaptureAll":190,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":229,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":331,"org.easymock.tests.MockNameTest.defaultName":508,"org.easymock.tests2.UsageConstraintsTest.testMatches":218,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":460,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":75,"org.easymock.samples.ExampleTest.voteForRemovals":39,"org.easymock.tests.UsageVarargTest.allKinds":294,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":362,"org.easymock.samples.BasicClassMockTest.testPrintContent":140,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":332,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":278,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":249,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":406,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":353,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":379,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":534,"org.easymock.tests2.UsageConstraintsTest.greaterThan":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":121,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":46,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":14,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":429,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":169,"org.easymock.samples.ExampleTest.voteForRemoval":37,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":104,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":232,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":95,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":453,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":530,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":100,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":421,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":162,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":254,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":93,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":482,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":201,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":276,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":119,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":348,"org.easymock.tests2.CaptureTest.testCaptureFirst":245,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":378,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":481,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":202,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":266,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":367,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":359,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":15,"org.easymock.tests2.CaptureTest.testCapture2_2446744":244,"org.easymock.tests2.UsageTest.moreThanOneArgument":256,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":492,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":4,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":293,"org.easymock.tests.GenericTest.testBridgedEquals":147,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":523,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":326,"org.easymock.tests.UsageExpectAndReturnTest.longType":59,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":199,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":329,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":96,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":319,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":418,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":223,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":317,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":503,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":72,"org.easymock.tests.UsageCallCountTest.tooManyCalls":327,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":135,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":62,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":396,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":306,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":196,"org.easymock.tests.MockingTest.testNiceClassMocking":173,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":28,"org.easymock.tests.MockingTest.testClassMocking":171,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":448,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":89,"org.easymock.tests2.UsageConstraintsTest.testContains":215,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":116,"org.easymock.tests2.UsageConstraintsTest.testFind":177,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":283,"org.easymock.tests.MockTypeTest.fromEasyMockClass":451,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":83,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":334,"org.easymock.tests.UsageExpectAndReturnTest.object":360,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":11,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":395,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":207,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":288,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":445,"org.easymock.tests.UsageTest.exactCallCountByLastCall":347,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":480,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":456,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":415,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":117,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":68,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":284,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":365,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":401,"org.easymock.tests.MockClassControlTest.testHashCode":154,"org.easymock.tests2.EasyMockSupportTest.testVerify":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":129,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":457,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":499,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":86,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":522,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":227,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":384,"org.easymock.tests.UsageVarargTest.varargCharAccepted":287,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":533,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":250,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":497,"org.easymock.tests2.UsageTest.openCallCountByLastCall":260,"org.easymock.tests.DefaultClassInstantiatorTest.object":163,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":210,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":498,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":443,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":529,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":130,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":308,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":113,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":277,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":390,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":400,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":427,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":153,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":12,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":307,"org.easymock.tests.CapturesMatcherTest.test":280,"org.easymock.tests.ReplayStateInvalidCallsTest.times":433,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":69,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":502,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":434,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":26,"org.easymock.tests2.UsageTest.resumeIfFailure":265,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":157,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":380,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":351,"org.easymock.tests2.StubTest.stubWithReturnValue":247,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":519,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":63,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":224,"org.easymock.tests2.SerializationTest.testAllMockedMethod":99,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":174,"org.easymock.samples.SupportTest.voteForRemovals":35,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":143,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":403,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":313,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":535,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":496,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":398,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":417,"org.easymock.tests.UsageExpectAndThrowTest.object":311,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":186,"org.easymock.tests2.DelegateToTest.testWrongClass":236,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":431,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":50,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":51,"org.easymock.samples.ConstructorCalledMockTest.testTax":141,"org.easymock.tests.UsageStrictMockTest.range":54,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":382,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":206,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":27,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":312,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":2,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":470,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":118,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":345,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":355,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":423,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":474,"org.easymock.tests2.CaptureTest.testCaptureNone":242,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":198,"org.easymock.tests.UsageUnorderedTest.message":328,"org.easymock.tests.UsageVerifyTest.twoReturns":363,"org.easymock.tests.UsageVarargTest.varargByteAccepted":292,"org.easymock.tests2.ThreadingTest.testThreadSafe":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":132,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":324,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":446,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":139,"org.easymock.tests2.CaptureTest.testCapture_2617107":191,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":507,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":494,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":299,"org.easymock.tests2.UsageConstraintsTest.any":184,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":467,"org.easymock.tests2.StubTest.stub":246,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":504,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":495,"org.easymock.tests.UsageExpectAndThrowTest.longType":304,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":350,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":167,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":466,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":251,"org.easymock.tests2.SerializationTest.testClass":98,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":268,"org.easymock.tests.LimitationsTest.mockNativeMethod":52,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":146,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":71,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":389,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":112,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":439,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":252,"org.easymock.tests2.NameTest.nameForMocksControl":372,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":391,"org.easymock.tests2.MockedExceptionTest.testMockedException":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":122,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":344,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":411,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":78,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":305,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":5,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":3,"org.easymock.tests.MockingTest.testNicePartialClassMocking":77,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":10,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":387,"org.easymock.tests2.CaptureTest.testCaptureLast":241,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":506,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":438,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":181,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":33,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":222,"org.easymock.tests.MockingTest.testTwoMocks":172,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":435,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":413,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":56,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":309,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":263,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":188,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":528,"org.easymock.samples.ExampleTest.removeNonExistingDocument":414,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":464,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":393,"org.easymock.tests.UsageStrictMockTest.differentMethods":55,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":402,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":165,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":374,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":233,"org.easymock.tests2.MockBuilderTest.testCreateMockString":97,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":149,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":123,"org.easymock.tests.UsageExpectAndThrowTest.floatType":303,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":120,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":80,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":531,"org.easymock.tests.UsageVerifyTest.twoThrows":197,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":512,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":25,"org.easymock.samples.ExampleTest.voteAgainstRemoval":38,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":486,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":472,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":13,"org.easymock.tests.LimitationsTest.privateConstructor":160,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":516,"org.easymock.tests2.UsageConstraintsTest.testNotNull":187,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":114,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":279,"org.easymock.tests2.UsageTest.defaultResetToNice":262,"org.easymock.samples.ExampleTest.voteAgainstRemovals":36,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":487,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":67,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":388,"org.easymock.tests.UsageVarargTest.differentLength":289,"org.easymock.tests2.CallbackTest.callback":84,"org.easymock.tests2.UsageConstraintsTest.equals":373,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":101,"org.easymock.tests.UsageTest.openCallCountByLastCall":343,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":212,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":298,"org.easymock.tests.UsageCallCountTest.tooFewCalls":322,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":30,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":357,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":527,"org.easymock.tests.UsageThrowableTest.throwCheckedException":195,"org.easymock.tests.MockingTest.testStrictClassMocking":170,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":32,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":296,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":392,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":29,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":469,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":31,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":81,"org.easymock.tests.ObjectMethodsTest.testHashCode":444,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":437,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":234,"org.easymock.tests2.NameTest.nameForNiceMock":371,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":432,"org.easymock.tests2.DependencyTest.testInterfaceMocking":17,"org.easymock.samples.ExampleTest.addDocument":272,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":133,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":137,"org.easymock.tests2.DelegateToTest.testStubDelegate":16,"org.easymock.tests2.AnswerTest.stubAnswer":267,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":53,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":375,"org.easymock.tests.UsageVarargTest.varargLongAccepted":291,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":484,"org.easymock.tests.UsageExpectAndReturnTest.floatType":58,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":70,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":19,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":142,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":513,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":408,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":221,"org.easymock.tests.UsageThrowableTest.noUpperLimit":275,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":213,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":106,"org.easymock.tests2.SerializationTest.test":226,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":239,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":525,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":164,"org.easymock.tests2.UsageConstraintsTest.testSame":179,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":57,"org.easymock.samples.SupportTest.addDocument":271,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":412,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":422,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":465,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":124,"org.easymock.tests.GenericTest.testPackageScope":144,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":458,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":479,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":407,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":510,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":420,"org.easymock.tests2.NameTest.nameForMock":369,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":65,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":521,"org.easymock.tests2.UsageStrictMockTest.differentMethods":22,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":102,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":60,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":315,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":442,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":48,"org.easymock.tests2.MockedExceptionTest.testRealException":248,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":454,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":489,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":383,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":488,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":20,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":471,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":297,"org.easymock.tests2.NameTest.nameForStrictMock":370,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":91,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":82,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":9,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":107,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":185,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":166,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":0,"org.easymock.tests2.UsageStrictMockTest.range":21,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":426,"org.easymock.tests2.UsageConstraintsTest.lessThan":225,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":110,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":404,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":87,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":483,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":128,"org.easymock.tests2.CaptureTest.testCaptureRightOne":193,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":526,"org.easymock.tests2.UsageConstraintsTest.testOr":180,"org.easymock.tests.UsageRangeTest.combination":45,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":6,"org.easymock.tests.UsageTest.wrongArguments":342,"org.easymock.tests2.MockBuilderTest.testWithConstructor":517,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":125,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":150,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":61,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":476,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":66,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":168,"org.easymock.tests.UsageVarargTest.varargShortAccepted":290,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":325,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":440,"org.easymock.tests2.UsageConstraintsTest.cmpTo":214,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":399,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":430,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":478,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":261,"org.easymock.tests2.CaptureTest.testCaptureFromStub":194,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":461,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":90,"org.easymock.tests.UsageTest.unexpectedCallWithArray":341,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":436,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":336,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":323,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":520,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":361,"org.easymock.tests2.UsageConstraintsTest.constraints":175,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":337,"org.easymock.samples.ExampleTest.addAndChangeDocument":273,"org.easymock.tests.UsageStrictMockTest.testVerify":501,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":270,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":335,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":330,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":240,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":111,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":42,"org.easymock.tests.LimitationsTest.abstractClass":159,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":358,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":514,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":43,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":205,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":285}}]
