[{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[13],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:194","sourceCode":"try {\n    java.lang.reflect.Constructor<?> = java.lang.Class<?>.getDeclaredConstructor(org.easymock.ConstructorArgs.getConstructor().getParameterTypes());\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"Fail to find constructor for param types\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:196","sourceCode":"java.lang.reflect.Constructor<?> = java.lang.Class<?>.getDeclaredConstructor(org.easymock.ConstructorArgs.getConstructor().getParameterTypes())","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"args":"args","mockClass":"mockClass","cstr":"cstr"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[14,15,16],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[17,18,19],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[20],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[21],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:107","sourceCode":"java.io.ObjectInputStream.defaultReadObject()","type":"CtInvocationImpl"},"failures":[22,23,24],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:127","sourceCode":"try {\n    java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cl":"cl","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:53","sourceCode":"if (!(org.easymock.internal.ExpectedInvocationAndResults.getResults().hasResults())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:138","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[25,26,27],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[28,29,30,31,32,33,34,35,0,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,6,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.RecordState.primitiveToWrapperType":"org.easymock.internal.RecordState.primitiveToWrapperType","returnedType":"returnedType"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:104","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"failures":[51,105],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:117","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[67,75,77,87,88,103],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[13,106],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[13],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:747","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1507","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:111","sourceCode":"for (int int = 0 ; int < (java.lang.Class<?>[].int) ; int++) {\n    if (java.lang.Class<?>[][int].isPrimitive()) {\n        java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n    } else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n        java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n    } else {\n        final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n        org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n        java.lang.Object[][int] = java.lang.Object;\n    }\n}","type":"CtForImpl"},"failures":[107,108],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[45,46,51,109,110,111],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"method"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:244","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1940","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1940","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[112,1,113,114,115,116],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:138","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[25,26,27],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":17,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":60,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":57,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":16,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":9,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":59,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":114,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":70,"org.easymock.samples.ExampleTest.voteForRemovals":31,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":80,"org.easymock.tests2.SerializationTest.testAllMockedMethod":24,"org.easymock.tests2.DependencyTest.testInterfaceMocking":34,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":7,"org.easymock.tests.MockingTest.testPartialClassMocking":93,"org.easymock.samples.SupportTest.voteForRemovals":33,"org.easymock.tests2.DelegateToTest.testStubDelegate":66,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":63,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":6,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":106,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":35,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":90,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":47,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":103,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":104,"org.easymock.samples.ExampleTest.voteForRemoval":29,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":14,"org.easymock.tests.UsageExpectAndReturnTest.floatType":75,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":87,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":102,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":20,"org.easymock.tests.UsageStrictMockTest.range":71,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":48,"org.easymock.samples.ExampleTest.answerVsDelegate":112,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":55,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":2,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":41,"org.easymock.tests2.SerializationTest.test":23,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":52,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":27,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":107,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":40,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":74,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":69,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":5,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":49,"org.easymock.tests.UsageVerifyTest.twoReturns":8,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":21,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":54,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":97,"org.easymock.tests.UsageExpectAndReturnTest.longType":76,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":105,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":82,"org.easymock.tests2.UsageStrictMockTest.differentMethods":37,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":101,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":67,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":77,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":25,"org.easymock.tests2.SerializationTest.testClass":22,"org.easymock.tests.LimitationsTest.mockNativeMethod":96,"org.easymock.tests2.AnswerTest.answer":1,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":88,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":19,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":92,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":79,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":110,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":0,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":56,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":68,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":91,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":11,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":95,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":38,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":53,"org.easymock.tests.MockingTest.testNicePartialClassMocking":94,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":43,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":42,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":13,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":61,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":44,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":50,"org.easymock.tests2.UsageStrictMockTest.range":36,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":73,"org.easymock.tests.UsageTest.exactCallCountByLastCall":12,"org.easymock.tests.UsageStrictMockTest.differentMethods":72,"org.easymock.tests2.UsageConstraintsTest.testOr":18,"org.easymock.tests.UsageRangeTest.combination":89,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":39,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":85,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":15,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":78,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":83,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":116,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":64,"org.easymock.samples.PartialClassMockTest.testGetArea":32,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":113,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":98,"org.easymock.samples.ExampleTest.voteAgainstRemoval":30,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":46,"org.easymock.tests2.UsageTest.openCallCountByLastCall":3,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":4,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":51,"org.easymock.samples.ExampleTest.voteAgainstRemovals":28,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":84,"org.easymock.tests2.CallbackTest.callback":115,"org.easymock.tests.UsageTest.openCallCountByLastCall":10,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":111,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":45,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":58,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":81,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":86,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":65,"org.easymock.tests2.EasyMockSupportClassTest.testAll":62,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":99,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":100,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":109}}]
