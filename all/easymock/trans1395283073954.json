[{"position":"org.easymock.internal.matchers.CompareTo:42","failures":[0],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.RecordState:243","failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1964","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:51","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[2,83,3,4,84,5,85,86,87,88,6,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,13,15,141,142,143,23,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,24,25,164,165,166,167,168,26,169,170,171,172,173,31,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,38,195,39,40,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,41,42,43,44,45,46,221,222,47,48,223,49,50,51,224,52,53,54,55,56,60,61,62,63,225,226,227,228,229,230,231,232,233,234,235,236,237,238,64,65,66,67,68,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,70,291,292,293,294,295,296,297,298,71,72,73,74,75,76,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,77,78,319,320,321,79,322,80,81,323,324,325,82,326],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:363","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[39,327,309,310,80],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[1,328,329,2,83,3,4,84,5,330,85,86,331,332,87,88,6,7,333,334,335,89,90,91,92,93,336,94,95,96,97,98,337,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,338,339,8,340,341,342,9,343,10,344,11,345,346,347,12,348,349,127,128,129,130,131,132,133,134,135,136,137,138,139,140,13,14,15,16,17,18,350,351,19,352,353,354,20,21,22,355,356,141,142,143,23,144,145,146,147,148,357,358,359,360,361,149,150,362,363,364,365,366,151,152,153,154,155,156,157,158,159,160,161,162,163,367,368,24,25,164,369,370,371,372,373,374,165,166,375,376,377,378,379,167,168,26,169,170,171,380,381,382,383,384,385,386,172,173,27,28,29,30,387,31,32,33,388,174,175,176,177,178,179,180,181,182,183,184,185,186,389,390,391,34,392,393,35,394,395,396,397,398,399,400,401,402,36,403,404,405,406,407,37,408,409,187,188,189,190,191,192,193,194,38,195,39,40,196,410,197,411,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,412,41,42,43,44,45,46,221,222,47,48,223,49,50,51,224,52,53,54,55,56,413,414,415,57,58,416,59,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,60,61,62,63,225,432,433,434,226,227,435,228,229,230,231,232,233,234,235,236,237,238,436,64,65,66,67,68,239,240,241,242,243,244,245,246,247,437,248,249,250,251,252,253,254,255,256,257,438,439,440,441,442,443,444,445,446,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,447,273,448,449,450,274,275,276,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,277,467,468,469,470,471,278,472,279,280,281,473,282,283,284,285,286,287,288,289,290,474,475,476,477,478,479,480,481,482,69,483,70,291,292,293,294,295,296,297,298,71,72,73,74,75,484,76,485,486,299,300,487,301,488,302,303,304,305,306,307,308,309,310,311,489,312,313,314,315,316,317,318,77,78,319,320,321,79,322,80,81,323,324,325,82,326],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[436],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[490,491,492],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:814","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:181","failures":[333,344,493,494,495,496,497,498,499,410],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"failures":[500],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[501,122],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[410,197,411,502],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:90","sourceCode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:93","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]))","type":"CtInvocationImpl"},"failures":[154,160,161,39,236,503,241,242,245,246,258,309,310,321,80],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[97,98,100,102,103,105,115,120,127,129,137],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:138","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[7,333,344,504],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"ret":"constructor","clazz":"toMock"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"failures":[64,76,82],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:80","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[447,273,448,449,450],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"candidateMethod","bridgeMethod":"bridgeMethod"}},{"position":"org.easymock.internal.LastControl:70","failures":[1,328,328,329,329,2,83,3,4,84,5,330,85,86,331,332,87,88,6,7,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,127,128,129,130,131,132,133,134,135,136,137,138,139,140,19,144,24,25,369,38,258,262,263,289,70,291,292,293,294,71,72,73,74,75,306,77,78,321,79],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"transplant":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:932","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[116],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[1,328,329,2,83,3,4,84,5,330,85,86,331,332,87,88,6,7,333,334,335,89,90,91,92,93,336,94,95,96,97,98,337,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,338,339,8,340,341,342,9,343,10,344,11,345,346,347,12,348,349,127,128,129,130,131,132,133,134,135,136,137,138,139,140,13,14,15,16,17,18,350,351,19,352,353,354,20,21,22,355,356,141,142,143,23,144,145,146,147,148,357,358,359,360,361,149,150,362,363,364,365,366,151,152,153,154,155,156,157,158,159,160,161,162,163,367,368,24,25,164,369,370,371,372,373,374,165,166,375,376,377,378,379,167,168,26,169,170,171,380,381,382,383,384,385,386,172,173,27,28,29,30,387,31,32,33,388,174,175,176,177,178,179,180,181,182,183,184,185,186,389,390,391,34,392,393,35,394,395,396,397,398,399,400,401,402,36,403,404,405,406,407,37,408,409,187,188,189,190,191,192,193,194,38,195,39,40,196,410,197,411,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,412,41,42,43,44,45,46,221,222,47,48,223,49,50,51,224,52,53,54,55,56,413,414,415,57,58,416,59,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,60,61,62,63,225,432,433,434,226,227,435,228,229,230,231,232,233,234,235,236,237,238,436,64,65,66,67,68,239,240,241,242,243,244,245,246,247,437,248,249,250,251,252,253,254,255,256,257,438,439,440,441,442,443,444,445,446,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,447,273,448,449,450,274,275,276,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,277,467,468,469,470,471,278,472,279,280,281,473,282,283,284,285,286,287,288,289,290,474,475,476,477,478,479,480,481,482,69,483,70,291,292,293,294,295,296,297,298,71,72,73,74,75,484,76,485,486,299,300,487,301,488,302,303,304,305,306,307,308,309,310,311,489,312,313,314,315,316,317,318,77,78,319,320,321,79,322,80,81,323,324,325,82,326],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return this.java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[505,351,506],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"properties":"properties","defaultValue":"value","key":"value"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:53","sourceCode":"return true","type":"CtReturnImpl"},"failures":[127,128,129,130,131,132,133,134,135,136,137,138,139,140,507],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"failures":[145,146,147,148,151,158,173,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,233,239,244,263,267,271,272,276,292,293,302,303,304,305,306,307],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"answer":"answer"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[439,440,441,442,444,446],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidClassProxyFactory:43","sourceCode":"com.google.dexmaker.stock.ProxyBuilder<T>.constructorArgTypes(org.easymock.ConstructorArgs.getConstructor().getParameterTypes())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:32","sourceCode":"new java.util.ArrayList<java.lang.reflect.Field>(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[1,328,328,329,329,2,83,3,4,5,85,6,7,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,8,9,10,11,12,127,128,130,131,134,135,136,137,138,139,140,13,14,15,16,17,18,19,20,21,22,141,142,143,23,144,145,146,147,148,149,151,152,153,155,157,158,159,162,163,24,25,164,165,167,168,26,169,170,171,172,173,27,28,29,30,31,32,33,174,175,176,177,178,179,180,181,182,183,184,185,34,35,36,37,187,188,189,190,191,192,38,39,40,410,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,41,42,43,44,45,46,221,222,47,48,223,49,50,51,224,52,53,54,55,56,57,58,59,60,61,62,63,225,230,232,233,235,238,64,65,66,67,68,239,240,243,244,247,437,248,249,250,251,252,258,259,260,261,262,263,265,266,267,268,269,270,271,272,273,449,274,275,276,277,278,69,70,291,292,293,294,71,72,73,74,75,76,302,303,304,305,306,307,308,309,310,312,77,78,79,80,81,325,82,326],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[508,113],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:48","failures":[1,328,328,329,329,2,83,3,4,5,85,6,7,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,8,9,10,11,12,127,128,130,131,134,135,136,137,138,139,140,13,14,15,16,17,18,19,20,21,22,141,142,143,23,144,145,146,147,148,149,151,152,153,155,157,158,159,162,163,24,25,164,165,167,168,26,169,170,171,172,173,27,28,29,30,31,32,33,174,175,176,177,178,179,180,181,182,183,184,185,34,35,36,37,187,188,189,190,191,192,38,39,40,410,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,41,42,43,44,45,46,221,222,47,48,223,49,50,51,224,52,53,54,55,56,57,58,59,60,61,62,63,225,230,232,233,235,238,64,65,66,67,68,239,240,243,244,247,437,248,249,250,251,252,258,259,260,261,262,263,265,266,267,268,269,270,271,272,273,449,274,275,276,277,278,69,70,291,292,293,294,71,72,73,74,75,76,302,303,304,305,306,307,308,309,310,312,77,78,79,80,81,325,82,326],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:972","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[1,328,329,2,83,3,4,84,5,330,85,86,331,332,87,88,6,7,333,334,335,89,90,91,92,93,336,94,95,96,97,98,337,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,338,339,8,340,341,342,9,343,10,344,11,345,346,347,12,348,349,127,128,129,130,131,132,133,134,135,136,137,138,139,140,13,14,15,16,17,18,350,351,19,352,353,354,20,21,22,355,356,141,142,143,23,144,145,146,147,148,357,358,359,360,361,149,150,362,363,364,365,366,151,152,153,154,155,156,157,158,159,160,161,162,163,367,368,24,25,164,369,370,371,372,373,374,165,166,375,376,377,378,379,167,168,26,169,170,171,380,381,382,383,384,385,386,172,173,27,28,29,30,387,31,32,33,388,174,175,176,177,178,179,180,181,182,183,184,185,186,389,390,391,34,392,393,35,394,395,396,397,398,399,400,401,402,36,403,404,405,406,407,37,408,409,187,188,189,190,191,192,193,194,38,195,39,40,196,410,197,411,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,412,41,42,43,44,45,46,221,222,47,48,223,49,50,51,224,52,53,54,55,56,413,414,415,57,58,416,59,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,60,61,62,63,225,432,433,434,226,227,435,228,229,230,231,232,233,234,235,236,237,238,436,64,65,66,67,68,239,240,241,242,243,244,245,246,247,437,248,249,250,251,252,253,254,255,256,257,438,439,440,441,442,443,444,445,446,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,447,273,448,449,450,274,275,276,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,277,467,468,469,470,471,278,472,279,280,281,473,282,283,284,285,286,287,288,289,290,474,475,476,477,478,479,480,481,482,69,483,70,291,292,293,294,295,296,297,298,71,72,73,74,75,484,76,485,486,299,300,487,301,488,302,303,304,305,306,307,308,309,310,311,489,312,313,314,315,316,317,318,77,78,319,320,321,79,322,80,81,323,324,325,82,326],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:233","sourceCode":"if ((org.easymock.internal.ExpectedInvocation) == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"failMessage"}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[277],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[447,450],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[450],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:38","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[109],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:172","failures":[10,435],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":98,"org.easymock.tests2.UsageTest.argumentsOrdered":161,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":239,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":184,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":150,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":461,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":156,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":86,"org.easymock.tests2.DelegateToTest.testReturnException":168,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":303,"org.easymock.tests.MockingTest.testPartialClassMocking":57,"org.easymock.tests.MockClassControlTest.testToString":475,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":335,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":469,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":397,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":35,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":198,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":25,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":494,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":104,"org.easymock.tests2.UsageTest.wrongArguments":154,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":70,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":379,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":297,"org.easymock.samples.ExampleTest.answerVsDelegate":83,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":435,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":418,"org.easymock.tests2.UsageConstraintsTest.testNull":100,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":16,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":480,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":183,"org.easymock.tests2.CaptureTest.testPrimitive":130,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":294,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":217,"org.easymock.tests.UsageTest.moreThanOneArgument":240,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":15,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":62,"org.easymock.tests.UsageTest.argumentsOrdered":246,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":248,"org.easymock.tests.UsageVarargTest.varargIntAccepted":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":466,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":71,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":498,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":338,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":365,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":382,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":453,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":75,"org.easymock.tests.ReplayStateInvalidUsageTest.times":428,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":165,"org.easymock.tests2.DependencyTest.testClassMocking":367,"org.easymock.tests2.AnswerTest.answer":187,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":105,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":467,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":126,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":434,"org.easymock.tests2.CaptureTest.testAnd":127,"org.easymock.tests2.UsageTest.strictResetToDefault":152,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":341,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":354,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":61,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":178,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":67,"org.easymock.tests2.DelegateToTest.testDelegate":171,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":252,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":213,"org.easymock.tests.LimitationsTest.mockFinalMethod":483,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":306,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":257,"org.easymock.tests2.DependencyTest.testClassMockingSupport":368,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":237,"org.easymock.tests2.CaptureTest.testCapture1_2446744":131,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":351,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":211,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":124,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":422,"org.easymock.tests.UsageThrowableTest.throwError":265,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":227,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":412,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":366,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":409,"org.easymock.samples.PartialClassMockTest.testGetArea":1,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":423,"org.easymock.tests.MockingTest.testInterfaceMocking":416,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":72,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":82,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":488,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":398,"org.easymock.tests2.UsageTest.niceToStrict":155,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":199,"org.easymock.tests2.ThreadingTest.testChangeDefault":506,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":492,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":451,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":9,"org.easymock.tests2.MockBuilderTest.testCreateMock":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":405,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":376,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":207,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":179,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":433,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":261,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":311,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":295,"org.easymock.tests.UsageOverloadedMethodTest.overloading":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":407,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":402,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":110,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":233,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":49,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":274,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":109,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":136,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":473,"org.easymock.tests.MockClassControlTest.testEquals":479,"org.easymock.tests2.EasyMockSupportClassTest.testAll":34,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":448,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":215,"org.easymock.tests2.CaptureTest.testCaptureAll":128,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":125,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":255,"org.easymock.tests.MockNameTest.defaultName":264,"org.easymock.tests2.UsageConstraintsTest.testMatches":111,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":420,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":63,"org.easymock.samples.ExampleTest.voteForRemovals":5,"org.easymock.tests.UsageVarargTest.allKinds":289,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":308,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":256,"org.easymock.samples.BasicClassMockTest.testPrintContent":332,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":271,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":193,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":170,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":307,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":362,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":499,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":445,"org.easymock.tests2.UsageConstraintsTest.greaterThan":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":392,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":66,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":22,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":446,"org.easymock.samples.ExampleTest.voteForRemoval":3,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":142,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":355,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":228,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":383,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":350,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":437,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":151,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":346,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":458,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":176,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":390,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":302,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":167,"org.easymock.tests2.CaptureTest.testCaptureFirst":140,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":457,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":177,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":163,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":236,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":222,"org.easymock.tests2.UsageTest.moreThanOneArgument":153,"org.easymock.tests2.CaptureTest.testCapture2_2446744":139,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":23,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":468,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":12,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":288,"org.easymock.tests.GenericTest.testBridgedEquals":450,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":317,"org.easymock.tests.UsageExpectAndReturnTest.longType":44,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":174,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":253,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":216,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":118,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":64,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":214,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":60,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":219,"org.easymock.tests.UsageCallCountTest.tooManyCalls":318,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":312,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":406,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":47,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":378,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":203,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":270,"org.easymock.tests.MockingTest.testNiceClassMocking":419,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":28,"org.easymock.tests.MockingTest.testClassMocking":414,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":489,"org.easymock.tests2.UsageConstraintsTest.testContains":108,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":147,"org.easymock.tests2.UsageConstraintsTest.testFind":99,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":276,"org.easymock.tests.MockTypeTest.fromEasyMockClass":226,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":94,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":319,"org.easymock.tests.UsageExpectAndReturnTest.object":223,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":19,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":377,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":182,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":495,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":283,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":487,"org.easymock.tests.UsageTest.exactCallCountByLastCall":247,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":262,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":456,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":484,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":249,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":333,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":53,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":279,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":232,"org.easymock.tests.MockClassControlTest.testHashCode":478,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":358,"org.easymock.tests2.EasyMockSupportTest.testVerify":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":400,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":250,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":230,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":260,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":123,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":369,"org.easymock.tests.UsageVarargTest.varargCharAccepted":282,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":438,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":194,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":472,"org.easymock.tests2.UsageTest.openCallCountByLastCall":157,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":490,"org.easymock.tests.DefaultClassInstantiatorTest.object":439,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":185,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":259,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":299,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":503,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":401,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":205,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":268,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":373,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":357,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":477,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":20,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":204,"org.easymock.tests.CapturesMatcherTest.test":507,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":54,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":218,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":476,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":37,"org.easymock.tests2.UsageTest.resumeIfFailure":162,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":432,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":381,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":305,"org.easymock.tests2.StubTest.stubWithReturnValue":173,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":344,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":119,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":48,"org.easymock.tests2.SerializationTest.testAllMockedMethod":411,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":277,"org.easymock.samples.SupportTest.voteForRemovals":6,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":447,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":360,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":210,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":502,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":278,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":188,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":485,"org.easymock.tests.UsageExpectAndThrowTest.object":208,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":116,"org.easymock.tests2.DelegateToTest.testWrongClass":169,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":77,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":78,"org.easymock.tests.UsageStrictMockTest.range":80,"org.easymock.samples.ConstructorCalledMockTest.testTax":328,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":385,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":181,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":27,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":209,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":10,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":430,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":389,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":245,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":296,"org.easymock.tests2.CaptureTest.testCaptureNone":135,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":326,"org.easymock.tests.UsageUnorderedTest.message":258,"org.easymock.tests.UsageVerifyTest.twoReturns":310,"org.easymock.tests.UsageVarargTest.varargByteAccepted":287,"org.easymock.tests2.ThreadingTest.testThreadSafe":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":403,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":315,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":301,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":331,"org.easymock.tests2.CaptureTest.testCapture_2617107":129,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":470,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":293,"org.easymock.tests2.UsageConstraintsTest.any":106,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":427,"org.easymock.tests2.StubTest.stub":172,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":220,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":471,"org.easymock.tests.UsageExpectAndThrowTest.longType":201,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":304,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":443,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":426,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":195,"org.easymock.tests2.SerializationTest.testClass":410,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":149,"org.easymock.tests.LimitationsTest.mockNativeMethod":69,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":449,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":56,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":372,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":196,"org.easymock.tests2.NameTest.nameForMocksControl":92,"org.easymock.tests2.MockedExceptionTest.testMockedException":146,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":393,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":244,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":59,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":202,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":336,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":13,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":11,"org.easymock.tests.MockingTest.testNicePartialClassMocking":58,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":18,"org.easymock.tests2.CompareToTest.testNotComparable":0,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":493,"org.easymock.tests2.CaptureTest.testCaptureLast":134,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":370,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":238,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":103,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":33,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":117,"org.easymock.tests.MockingTest.testTwoMocks":415,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":388,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":41,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":206,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":160,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":121,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":505,"org.easymock.samples.ExampleTest.removeNonExistingDocument":330,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":424,"org.easymock.tests.UsageStrictMockTest.differentMethods":81,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":375,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":359,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":441,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":143,"org.easymock.tests2.MockBuilderTest.testCreateMockString":349,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":394,"org.easymock.tests.UsageExpectAndThrowTest.floatType":200,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":112,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":391,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":190,"org.easymock.tests.UsageVerifyTest.twoThrows":309,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":334,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":36,"org.easymock.samples.ExampleTest.voteAgainstRemoval":4,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":462,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":325,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":21,"org.easymock.tests.LimitationsTest.privateConstructor":482,"org.easymock.tests2.UsageConstraintsTest.testNotNull":120,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":145,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":272,"org.easymock.tests2.UsageTest.defaultResetToNice":159,"org.easymock.samples.ExampleTest.voteAgainstRemovals":2,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":463,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":52,"org.easymock.tests.UsageVarargTest.differentLength":284,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":371,"org.easymock.tests2.CallbackTest.callback":164,"org.easymock.tests2.UsageConstraintsTest.equals":337,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":352,"org.easymock.tests.UsageTest.openCallCountByLastCall":243,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":95,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":292,"org.easymock.tests.UsageCallCountTest.tooFewCalls":313,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":30,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":298,"org.easymock.tests.UsageThrowableTest.throwCheckedException":269,"org.easymock.tests.MockingTest.testStrictClassMocking":413,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":32,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":263,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":166,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":29,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":429,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":31,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":192,"org.easymock.tests.ObjectMethodsTest.testHashCode":300,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":497,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":144,"org.easymock.tests2.NameTest.nameForNiceMock":91,"org.easymock.tests2.DependencyTest.testInterfaceMocking":24,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":496,"org.easymock.samples.ExampleTest.addDocument":84,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":404,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":408,"org.easymock.tests2.DelegateToTest.testStubDelegate":26,"org.easymock.tests2.AnswerTest.stubAnswer":191,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":79,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":345,"org.easymock.tests.UsageVarargTest.varargLongAccepted":286,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":323,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":460,"org.easymock.tests.UsageExpectAndReturnTest.floatType":43,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":55,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":7,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":329,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":114,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":234,"org.easymock.tests.UsageThrowableTest.noUpperLimit":266,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":364,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":96,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":380,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":132,"org.easymock.tests2.SerializationTest.test":197,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":440,"org.easymock.tests2.UsageConstraintsTest.testSame":101,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":42,"org.easymock.samples.SupportTest.addDocument":88,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":387,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":425,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":395,"org.easymock.tests.GenericTest.testPackageScope":273,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":455,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":363,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":417,"org.easymock.tests2.NameTest.nameForMock":89,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":50,"org.easymock.tests2.UsageStrictMockTest.differentMethods":40,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":348,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":353,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":45,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":212,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":486,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":68,"org.easymock.tests2.MockedExceptionTest.testRealException":148,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":229,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":465,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":386,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":504,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":464,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":38,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":431,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":291,"org.easymock.tests2.NameTest.nameForStrictMock":90,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":342,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":491,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":93,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":17,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":384,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":442,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":115,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":8,"org.easymock.tests2.UsageStrictMockTest.range":39,"org.easymock.tests2.UsageConstraintsTest.lessThan":122,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":361,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":500,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":459,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":399,"org.easymock.tests2.CaptureTest.testCaptureRightOne":137,"org.easymock.tests2.UsageConstraintsTest.testOr":102,"org.easymock.tests.UsageRangeTest.combination":65,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":14,"org.easymock.tests.UsageTest.wrongArguments":242,"org.easymock.tests2.MockBuilderTest.testWithConstructor":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":396,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":474,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":46,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":452,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":51,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":444,"org.easymock.tests.UsageVarargTest.varargShortAccepted":285,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":316,"org.easymock.tests2.UsageConstraintsTest.cmpTo":107,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":189,"org.easymock.tests2.CompareToTest.testLessThan":501,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":454,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":158,"org.easymock.tests2.CaptureTest.testCaptureFromStub":138,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":421,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":340,"org.easymock.tests.UsageTest.unexpectedCallWithArray":241,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":321,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":314,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":224,"org.easymock.tests2.UsageConstraintsTest.constraints":97,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":322,"org.easymock.samples.ExampleTest.addAndChangeDocument":85,"org.easymock.tests.UsageStrictMockTest.testVerify":324,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":87,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":320,"org.easymock.tests2.CompareToTest.testGreateThan":508,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":254,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":133,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":73,"org.easymock.tests.LimitationsTest.abstractClass":481,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":221,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":74,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":235,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":180,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":280,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":327}}]
