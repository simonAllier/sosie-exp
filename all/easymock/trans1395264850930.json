[{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[57],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,16,73,17,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,39,96,97,98,56,99,100,101,102],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:189","sourceCode":"org.easymock.internal.IMocksBehavior = new org.easymock.internal.MocksBehavior(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtAssignmentImpl"},"failures":[103,104,105,106,107,108,109,110,111,0,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,58,131,132,133,134,135,136,137,138,139,140,1,141,142,143,144,145,146,147,148,149,150,151,2,152,153,154,155,156,157,59,158,159,60,61,62,160,161,162,163,164,165,63,166,167,168,169,3,170,171,172,173,4,64,174,65,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,5,6,7,8,204,205,206,9,66,207,208,209,67,68,10,210,69,211,212,11,213,214,70,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,71,230,231,232,233,234,235,236,237,238,239,12,13,240,241,14,72,242,243,244,15,245,246,247,248,16,73,17,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,74,287,288,75,76,77,289,290,18,78,79,80,81,19,20,21,22,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,84,335,336,337,338,339,340,341,342,343,344,345,346,347,85,348,86,349,87,88,89,350,23,90,57,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,91,379,380,381,382,383,384,24,25,26,27,28,385,386,387,388,92,93,29,30,31,32,33,34,35,36,37,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,38,418,419,420,421,39,96,97,422,40,41,42,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,43,472,473,474,475,476,477,44,45,46,47,48,49,50,51,52,53,54,55,98,478,56,99,479,480,100,101,102],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[130],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ClassProxyFactory:230","failures":[],"status":0,"binaryOperator":"(((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","failures":[120,121,122,123,159,61,62,288,75,78,79,86,349,88,89,90,388,92,93,471,478,99,100,101],"status":-1,"binaryOperator":"((org.easymock.internal.ExpectedInvocation.toString()) + \": \")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[37,389,390,391,393,394],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:206","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:214","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[115,116,131,134,135,481,172,482,483,484,248,485],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType) : org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:234","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)))","type":"CtThrowImpl"},"failures":[292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,309,310,311,312,313,315],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[125,127,302],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (this.int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[61,62,88,89],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"minimum":"maximum"}},{"position":"org.easymock.internal.LastControl:70","failures":[103,104,105,106,107,108,109,110,111,0,112,113,114,115,115,116,116,117,118,120,121,122,123,124,159,163,164,171,177,178,179,180,181,182,183,184,185,186,187,188,189,190,201,204,206,213,214,70,215,217,218,219,220,221,222,223,224,225,226,227,228,229,71,230,231,232,233,234,235,236,237,238,239,339,86,349,90,395,396,397,398,399,406,407,408,409,410,415,416,459,460,476],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[202,307,314,398,46],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[199,53],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"failures":[213,70,230,236,486],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:30","sourceCode":"new java.util.HashMap<java.lang.String, java.lang.Class<?>>(10)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:105","sourceCode":"org.easymock.internal.ReplayState.throwWrappedIllegalStateException()","type":"CtInvocationImpl"},"failures":[487],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[405],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[103,104,105,106,107,108,109,110,111,0,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,58,131,132,133,134,135,481,136,137,138,139,140,1,141,142,143,144,145,146,147,148,149,150,151,2,152,153,154,155,156,157,59,158,159,60,61,62,160,161,162,163,164,165,63,166,167,168,169,3,170,171,172,173,4,64,174,65,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,5,6,7,8,204,205,206,9,66,207,208,209,67,68,10,210,69,211,212,11,213,214,70,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,71,230,231,232,233,234,235,236,237,238,239,12,13,240,241,14,482,72,242,483,243,244,15,245,484,246,247,248,16,73,485,17,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,488,489,490,284,285,286,74,287,288,75,76,77,289,290,18,78,79,80,81,19,20,21,22,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,83,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,84,335,336,337,338,339,340,341,342,343,344,345,346,347,85,348,86,349,87,88,89,350,23,90,57,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,91,379,380,381,382,383,384,24,25,26,27,28,385,386,387,388,92,93,29,30,31,32,33,34,35,36,491,37,389,390,391,392,393,492,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,38,418,419,420,421,39,96,97,422,40,41,42,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,43,472,473,474,475,476,477,44,45,46,47,48,49,50,51,52,53,54,55,98,478,56,99,479,480,100,101,102],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[50],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1026","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[3,176,14,15],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:187","sourceCode":"java.lang.Long java.lang.Long","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:217","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[65],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.MockBuilder:235","failures":[115,116,131,134,135,172,482,483,484,248,493,485,494,495,496],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:46","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:45","sourceCode":"try {\n    return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n} finally {\n    java.util.concurrent.locks.ReentrantLock.unlock();\n}","type":"CtTryImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"invocation":"invocation","this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:666","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:206","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[282],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[497,498,86,499,500,56],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[127],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:98","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"position":"org.easymock.internal.RecordState:243","failures":[105,106,108,109,111,114,127,134,159,61,62,163,164,165,63,166,167,168,169,171,64,174,65,200,72,244,245,246,73,249,250,251,252,254,255,256,261,264,274,280,291,324,325,326,327,349,88,89,351,353,355,359,360,361,362,363,364,367,368,370,371,372,374,375,376,377,378,91,379,380,381,383,395,404,405,406,407,408,409,410,413,449,450,452,459,460],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[501,502,503,135,482,483,484,493,485,251,256,257],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[504],"status":-1,"binaryOperator":"(((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[4],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[103,104,105,106,107,108,109,110,111,112,113,114,117,118,126,127,128,130,58,131,132,133,134,1,2,158,159,60,61,62,160,163,164,165,63,166,167,168,169,171,174,177,178,179,180,181,182,183,184,185,186,187,189,190,191,194,195,197,198,199,200,201,202,203,204,206,9,66,207,208,209,67,68,210,69,211,212,11,213,214,70,215,217,218,219,220,221,222,224,225,226,227,228,229,71,230,231,232,233,234,235,236,237,238,239,240,244,245,246,249,250,251,252,254,255,256,261,264,274,280,74,287,288,75,76,77,289,290,78,79,80,81,316,317,318,319,320,321,322,323,329,330,331,333,334,335,336,337,338,339,348,86,349,87,88,89,350,90,351,352,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,91,380,381,388,92,93,395,396,397,398,399,406,407,408,409,410,413,415,418,419,420,421,96,97,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,449,450,452,459,460,462,463,466,468,469,471,476,98,478,99,479,480,100,101,102],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":215,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":98,"org.easymock.tests2.UsageTest.argumentsOrdered":79,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":211,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":152,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":302,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":77,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":103,"org.easymock.tests2.DelegateToTest.testReturnException":126,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":473,"org.easymock.tests.MockingTest.testPartialClassMocking":449,"org.easymock.tests.MockClassControlTest.testToString":31,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":119,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":383,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":176,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":268,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":425,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":264,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":164,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":222,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":395,"org.easymock.tests2.UsageTest.wrongArguments":75,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":146,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":21,"org.easymock.samples.ExampleTest.answerVsDelegate":107,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":345,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":454,"org.easymock.tests2.UsageConstraintsTest.testNull":218,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":167,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":36,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":69,"org.easymock.tests2.CaptureTest.testPrimitive":180,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":399,"org.easymock.tests.UsageTest.moreThanOneArgument":478,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":444,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":166,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":326,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":461,"org.easymock.tests.UsageTest.argumentsOrdered":101,"org.easymock.tests.UsageVarargTest.varargIntAccepted":331,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":307,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":406,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":14,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":489,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":156,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":294,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":410,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":1,"org.easymock.tests.ReplayStateInvalidUsageTest.times":52,"org.easymock.tests2.DependencyTest.testClassMocking":161,"org.easymock.tests2.AnswerTest.answer":191,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":309,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":8,"org.easymock.tests2.CaptureTest.testAnd":177,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":342,"org.easymock.tests2.UsageTest.strictResetToDefault":287,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":483,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":4,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":325,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":209,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":380,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":465,"org.easymock.tests2.DelegateToTest.testDelegate":130,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":440,"org.easymock.tests.LimitationsTest.mockFinalMethod":414,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":476,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":28,"org.easymock.tests2.DependencyTest.testClassMockingSupport":162,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":385,"org.easymock.tests2.CaptureTest.testCapture1_2446744":181,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":170,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":438,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":6,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":46,"org.easymock.tests.UsageThrowableTest.throwError":316,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":344,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":157,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":83,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":328,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":494,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":501,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":282,"org.easymock.samples.PartialClassMockTest.testGetArea":105,"org.easymock.tests.MockingTest.testInterfaceMocking":451,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":47,"org.easymock.tests2.CompareToTest.testLessOrEqual":486,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":407,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":404,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":426,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":424,"org.easymock.tests2.UsageTest.niceToStrict":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":292,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":244,"org.easymock.tests2.MockBuilderTest.testCreateMock":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":277,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":143,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":497,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":434,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":67,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":341,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":458,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":417,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":19,"org.easymock.tests.UsageOverloadedMethodTest.overloading":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":273,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":279,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":469,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":228,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":355,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":370,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":227,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":186,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":332,"org.easymock.tests.MockClassControlTest.testEquals":35,"org.easymock.tests2.EasyMockSupportClassTest.testAll":261,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":352,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":442,"org.easymock.tests2.CaptureTest.testCaptureAll":178,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":26,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":7,"org.easymock.tests.MockNameTest.defaultName":445,"org.easymock.tests2.UsageConstraintsTest.testMatches":229,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":44,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":327,"org.easymock.samples.ExampleTest.voteForRemovals":111,"org.easymock.tests.UsageVarargTest.allKinds":339,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":388,"org.easymock.samples.BasicClassMockTest.testPrintContent":118,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":27,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":322,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":59,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":477,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":153,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":129,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":492,"org.easymock.tests2.UsageConstraintsTest.greaterThan":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":262,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":379,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":65,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":394,"org.easymock.samples.ExampleTest.voteForRemoval":108,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":175,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":198,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":346,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":490,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":3,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":74,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":358,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":248,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":299,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":207,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":259,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":472,"org.easymock.tests2.CaptureTest.testCaptureFirst":190,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":125,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":298,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":208,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":81,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":43,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":366,"org.easymock.tests2.CaptureTest.testCapture2_2446744":189,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":200,"org.easymock.tests2.UsageTest.moreThanOneArgument":288,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":73,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":310,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":338,"org.easymock.tests.GenericTest.testBridgedEquals":354,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":503,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":96,"org.easymock.tests.UsageExpectAndReturnTest.longType":362,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":24,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":9,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":443,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":235,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":291,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":441,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":401,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":324,"org.easymock.tests.UsageCallCountTest.tooManyCalls":97,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":278,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":367,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":145,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":430,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":321,"org.easymock.tests.MockingTest.testNiceClassMocking":455,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":250,"org.easymock.tests.MockingTest.testClassMocking":447,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":38,"org.easymock.tests2.UsageConstraintsTest.testContains":226,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":240,"org.easymock.tests2.UsageConstraintsTest.testFind":217,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":357,"org.easymock.tests.MockTypeTest.fromEasyMockClass":343,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":85,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":206,"org.easymock.tests.UsageExpectAndReturnTest.object":369,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":171,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":144,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":504,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":210,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":334,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":42,"org.easymock.tests.UsageTest.exactCallCountByLastCall":102,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":297,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":462,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":382,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":135,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":329,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":375,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":468,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":148,"org.easymock.tests.MockClassControlTest.testHashCode":34,"org.easymock.tests2.EasyMockSupportTest.testVerify":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":271,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":463,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":466,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":457,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":5,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":94,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":124,"org.easymock.tests.UsageVarargTest.varargCharAccepted":333,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":491,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":158,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":315,"org.easymock.tests2.UsageTest.openCallCountByLastCall":289,"org.easymock.tests.DefaultClassInstantiatorTest.object":37,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":212,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":456,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":40,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":95,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":432,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":272,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":319,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":139,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":147,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":33,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":64,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":431,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":376,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":400,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":280,"org.easymock.tests2.UsageTest.resumeIfFailure":80,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":340,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":488,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":475,"org.easymock.tests2.StubTest.stubWithReturnValue":203,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":484,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":236,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":368,"org.easymock.tests2.SerializationTest.testAllMockedMethod":133,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":308,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":496,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":498,"org.easymock.samples.SupportTest.voteForRemovals":114,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":57,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":150,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":437,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":314,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":192,"org.easymock.tests.UsageExpectAndThrowTest.object":435,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":384,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":233,"org.easymock.tests2.DelegateToTest.testWrongClass":128,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":487,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":459,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":460,"org.easymock.samples.ConstructorCalledMockTest.testTax":115,"org.easymock.tests.UsageStrictMockTest.range":88,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":285,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":10,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":249,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":436,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":245,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":100,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":258,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":20,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":499,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":405,"org.easymock.tests2.CaptureTest.testCaptureNone":185,"org.easymock.tests.UsageUnorderedTest.message":90,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":82,"org.easymock.tests.UsageVerifyTest.twoReturns":93,"org.easymock.tests.UsageVarargTest.varargByteAccepted":337,"org.easymock.tests2.ThreadingTest.testThreadSafe":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":275,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":421,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":423,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":117,"org.easymock.tests2.CaptureTest.testCapture_2617107":179,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":387,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":398,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":312,"org.easymock.tests2.UsageConstraintsTest.any":224,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":51,"org.easymock.tests2.StubTest.stub":202,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":402,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":474,"org.easymock.tests.UsageExpectAndThrowTest.longType":428,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":313,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":392,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":50,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":60,"org.easymock.tests2.SerializationTest.testClass":131,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":2,"org.easymock.tests.LimitationsTest.mockNativeMethod":413,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":353,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":378,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":138,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":160,"org.easymock.tests2.NameTest.nameForMocksControl":123,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":140,"org.easymock.tests2.MockedExceptionTest.testMockedException":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":263,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":480,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":452,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":429,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":205,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":165,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":246,"org.easymock.tests.MockingTest.testNicePartialClassMocking":450,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":169,"org.easymock.tests2.CaptureTest.testCaptureLast":184,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":136,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":386,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":221,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":256,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":234,"org.easymock.tests.MockingTest.testTwoMocks":448,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":257,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":359,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":433,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":78,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":238,"org.easymock.samples.ExampleTest.removeNonExistingDocument":0,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":142,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":48,"org.easymock.tests.UsageStrictMockTest.differentMethods":89,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":149,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":390,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":199,"org.easymock.tests2.MockBuilderTest.testCreateMockString":17,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":29,"org.easymock.tests.UsageExpectAndThrowTest.floatType":427,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":265,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":260,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":194,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":481,"org.easymock.tests.UsageVerifyTest.twoThrows":92,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":467,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":274,"org.easymock.samples.ExampleTest.voteAgainstRemoval":109,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":403,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":303,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":174,"org.easymock.tests.LimitationsTest.privateConstructor":412,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":502,"org.easymock.tests2.UsageConstraintsTest.testNotNull":237,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":12,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":323,"org.easymock.tests2.UsageTest.defaultResetToNice":18,"org.easymock.samples.ExampleTest.voteAgainstRemovals":106,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":304,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":374,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":137,"org.easymock.tests.UsageVarargTest.differentLength":84,"org.easymock.tests2.CallbackTest.callback":58,"org.easymock.tests2.UsageConstraintsTest.equals":216,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":172,"org.easymock.tests.UsageTest.openCallCountByLastCall":479,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":213,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":397,"org.easymock.tests.UsageCallCountTest.tooFewCalls":419,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":252,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":22,"org.easymock.tests.UsageThrowableTest.throwCheckedException":320,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":500,"org.easymock.tests.MockingTest.testStrictClassMocking":446,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":416,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":255,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":141,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":251,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":53,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":254,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":196,"org.easymock.tests.ObjectMethodsTest.testHashCode":41,"org.easymock.tests2.NameTest.nameForNiceMock":122,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":201,"org.easymock.tests2.DependencyTest.testInterfaceMocking":163,"org.easymock.samples.ExampleTest.addDocument":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":276,"org.easymock.tests2.DelegateToTest.testStubDelegate":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":281,"org.easymock.tests2.AnswerTest.stubAnswer":195,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":349,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":247,"org.easymock.tests.UsageVarargTest.varargLongAccepted":336,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":350,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":301,"org.easymock.tests.UsageExpectAndReturnTest.floatType":361,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":377,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":134,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":116,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":470,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":155,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":231,"org.easymock.tests.UsageThrowableTest.noUpperLimit":317,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":214,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":283,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":182,"org.easymock.tests2.SerializationTest.test":132,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":389,"org.easymock.tests2.UsageConstraintsTest.testSame":219,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":360,"org.easymock.samples.SupportTest.addDocument":113,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":253,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":266,"org.easymock.tests.GenericTest.testPackageScope":351,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":464,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":296,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":154,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":453,"org.easymock.tests2.NameTest.nameForMock":120,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":371,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":485,"org.easymock.tests2.UsageStrictMockTest.differentMethods":62,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":173,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":363,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":439,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":422,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":381,"org.easymock.tests2.MockedExceptionTest.testRealException":241,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":347,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":306,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":495,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":159,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":305,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":396,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":55,"org.easymock.tests2.NameTest.nameForStrictMock":121,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":243,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":204,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":168,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":284,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":391,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":232,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":72,"org.easymock.tests2.UsageStrictMockTest.range":61,"org.easymock.tests2.UsageConstraintsTest.lessThan":239,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":151,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":66,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":300,"org.easymock.tests2.CaptureTest.testCaptureRightOne":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":270,"org.easymock.tests2.UsageConstraintsTest.testOr":220,"org.easymock.tests.UsageRangeTest.combination":91,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":63,"org.easymock.tests.UsageTest.wrongArguments":99,"org.easymock.tests2.MockBuilderTest.testWithConstructor":482,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":267,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":30,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":364,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":293,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":372,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":393,"org.easymock.tests.UsageVarargTest.varargShortAccepted":335,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":39,"org.easymock.tests2.UsageConstraintsTest.cmpTo":225,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":193,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":295,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":290,"org.easymock.tests2.CaptureTest.testCaptureFromStub":188,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":45,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":242,"org.easymock.tests.UsageTest.unexpectedCallWithArray":56,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":86,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":420,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":493,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":373,"org.easymock.tests2.UsageConstraintsTest.constraints":70,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":87,"org.easymock.samples.ExampleTest.addAndChangeDocument":112,"org.easymock.tests.UsageStrictMockTest.testVerify":23,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":104,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":348,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":25,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":183,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":408,"org.easymock.tests.LimitationsTest.abstractClass":411,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":365,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":471,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":409,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":68,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":330}}]
