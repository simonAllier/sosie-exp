[{"position":"org.easymock.internal.LastControl:92","failures":[0],"status":-1,"binaryOperator":"(((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1633","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(float[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,18,19,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[37,38,39,40,41,42],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[32,43],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[44,45,46,47,48,26,28,49,0,50,34],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:115","sourceCode":"return org.easymock.IAnswer<?>.toString()","type":"CtReturnImpl"},"failures":[51,52,53],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:128","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this","constructor":"constructor"}},{"transplant":{"position":"org.easymock.EasyMock:1687","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(T[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,1,76,77,2,3,4,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,5,96,97,98,99,100,101,102,103,104,105,106,11,12,13,14,15,16,17,107,108,109,110,111,112,44,113,114,115,116,117,118,46,119,120,121,122,123,124,125,126,127,128,129,130,21,22,131,132,133,134,135,136,137,138,23,24,47,48,25,26,27,28,49,139,140,141,29,142,30,31,143,32,33,50,144,145,146,34,35,36,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,194,195,196,1,197,76,77,198,199,200,201,202,203,204,205,206,207,208,209,210,2,3,211,212,4,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,81,233,82,84,85,86,87,88,89,234,90,91,92,93,94,95,5,235,236,237,238,239,240,241,96,97,242,243,98,99,244,245,100,101,102,103,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,6,7,8,9,10,105,266,106,267,268,268,11,12,13,14,15,16,17,107,269,270,18,19,271,272,273,108,109,274,110,111,275,112,276,277,44,113,45,114,115,278,279,116,117,118,46,20,119,120,121,122,123,124,125,126,280,127,281,128,129,130,282,21,283,284,22,285,131,132,286,133,287,288,289,290,134,135,136,137,138,23,24,47,48,25,26,27,28,49,139,140,141,29,142,30,31,143,32,33,50,144,145,291,146,34,35,36,292,147,293,294,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,295,168,169,296,170,171,172,297,173,298,174,175,176,299,300,177,178,301,302,179,180,181,182,183,184,185,303,186,187,304,188,189,305,190,306,307,308,191,309,192,310,193,311],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[263,309],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[312],"status":-1,"binaryOperator":"(((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[122,281,130,313,314,315,181,316],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[151,152],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:192","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1659","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(long[]))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1555","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[240,96,317,266,21,170],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"position":"org.easymock.Capture:82","failures":[44,45,114,115,278,279,116,118,318,46,20,120],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:583","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[319,320],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[120],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[319,320],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:40","failures":[196,1,76,77,321,322,323,324,325,326,97,242,265,105,266,106,22,131,132,327,328,329,330,331,332,333,172],"status":-1,"binaryOperator":"java.lang.Object instanceof java.lang.Character","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[168,169,296],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[334,261,274,277,192,335,311],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.Results:49","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[262,274,292,293,294],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:198","failures":[133,336,337,338,339,340,341,168,342,343],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[344],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[48,25,28,49],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[151,152],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1149","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[345,168,169,296],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:53","failures":[244,346,299],"status":-1,"binaryOperator":"(java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[271,272,347,348,349,350,351,352,353,354,355,356],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:213","failures":[319,320],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,194,195,196,1,197,76,77,198,357,358,359,199,200,201,202,203,206,207,208,209,210,322,2,3,211,212,4,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,81,233,82,83,84,85,360,361,362,363,364,365,366,367,368,369,370,86,87,88,89,234,90,91,92,93,94,95,5,235,236,237,238,239,240,241,96,97,242,243,98,99,244,245,100,101,102,103,246,247,248,249,37,250,251,252,253,254,256,257,258,259,260,371,372,373,374,375,376,377,378,379,380,381,382,261,383,262,263,104,264,265,6,7,8,9,10,105,266,106,267,11,12,13,14,15,16,17,107,269,270,18,18,19,19,271,272,273,108,109,274,110,111,275,112,384,276,277,44,113,45,114,115,278,279,116,117,118,46,20,119,120,121,122,123,124,125,126,280,127,281,128,129,130,282,21,385,386,387,388,283,284,22,285,131,132,286,133,287,288,289,290,389,134,135,136,137,138,23,24,47,48,25,26,27,28,49,139,140,141,29,142,30,31,143,32,33,50,144,145,146,34,35,36,292,147,293,294,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,295,168,169,296,170,171,172,297,173,298,174,175,176,299,300,177,178,301,302,179,180,181,182,183,184,185,303,187,304,188,189,305,190,306,307,308,191,309,192,310,193,311],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[36,390],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:117","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"failures":[391,392],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[139,30,36,393],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:83","sourceCode":"return int == int","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"failures":[36,390],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"maximum":"result","java.lang.Integer.MAX_VALUE":"result"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":48,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":96,"org.easymock.tests2.UsageTest.argumentsOrdered":300,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":166,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":298,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":272,"org.easymock.tests2.DelegateToTest.testReturnException":292,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":237,"org.easymock.tests.MockingTest.testPartialClassMocking":101,"org.easymock.tests.MockClassControlTest.testToString":365,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":55,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":136,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":213,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":149,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":337,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":139,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":2,"org.easymock.tests2.UsageTest.wrongArguments":297,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":351,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":248,"org.easymock.samples.ExampleTest.answerVsDelegate":274,"org.easymock.tests2.UsageConstraintsTest.testNull":26,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":124,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":165,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":370,"org.easymock.tests2.CaptureTest.testPrimitive":114,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":4,"org.easymock.tests.UsageTest.moreThanOneArgument":97,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":232,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":123,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":8,"org.easymock.tests.UsageTest.argumentsOrdered":245,"org.easymock.tests.UsageVarargTest.varargIntAccepted":252,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":333,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":13,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":303,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":304,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":17,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":134,"org.easymock.tests.ReplayStateInvalidUsageTest.times":379,"org.easymock.tests2.AnswerTest.answer":192,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":0,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":290,"org.easymock.tests2.CaptureTest.testAnd":44,"org.easymock.tests2.UsageTest.strictResetToDefault":171,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":281,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":7,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":160,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":84,"org.easymock.tests2.DelegateToTest.testDelegate":294,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":228,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":240,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":210,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":321,"org.easymock.tests2.CaptureTest.testCapture1_2446744":115,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":226,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":288,"org.easymock.tests.UsageThrowableTest.throwError":89,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":373,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":356,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":315,"org.easymock.samples.PartialClassMockTest.testGetArea":107,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":374,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":14,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":79,"org.easymock.tests2.UsageTest.niceToStrict":173,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":214,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":187,"org.easymock.tests2.MockBuilderTest.testCreateMock":305,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":350,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":222,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":328,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":161,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":358,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":246,"org.easymock.tests.UsageOverloadedMethodTest.overloading":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":313,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":30,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":263,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":67,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":86,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":142,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":118,"org.easymock.tests2.EasyMockSupportClassTest.testAll":135,"org.easymock.tests.MockClassControlTest.testEquals":369,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":233,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":230,"org.easymock.tests2.CaptureTest.testCaptureAll":113,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":208,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":289,"org.easymock.tests2.UsageConstraintsTest.testMatches":31,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":9,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":371,"org.easymock.samples.ExampleTest.voteForRemovals":112,"org.easymock.tests.UsageVarargTest.allKinds":260,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":105,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":209,"org.easymock.samples.BasicClassMockTest.testPrintContent":270,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":94,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":283,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":241,"org.easymock.tests2.UsageConstraintsTest.greaterThan":32,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":341,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":83,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":130,"org.easymock.samples.ExampleTest.voteForRemoval":110,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":42,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":151,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":280,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":170,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":267,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":343,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":158,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":90,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":236,"org.easymock.tests2.CaptureTest.testCaptureFirst":120,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":159,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":178,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":264,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":63,"org.easymock.tests2.UsageTest.moreThanOneArgument":172,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":153,"org.easymock.tests2.CaptureTest.testCapture2_2446744":119,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":190,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":259,"org.easymock.tests.GenericTest.testBridgedEquals":320,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":204,"org.easymock.tests.UsageExpectAndReturnTest.longType":59,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":156,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":206,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":392,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":231,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":291,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":229,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":6,"org.easymock.tests.UsageCallCountTest.tooManyCalls":205,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":199,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":64,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":218,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":93,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":180,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":391,"org.easymock.tests2.UsageConstraintsTest.testContains":29,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":359,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":191,"org.easymock.tests2.UsageConstraintsTest.testFind":25,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":88,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":194,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":302,"org.easymock.tests.UsageExpectAndReturnTest.object":66,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":127,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":312,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":164,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":254,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":338,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":362,"org.easymock.tests.UsageTest.exactCallCountByLastCall":100,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":5,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":336,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":72,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":250,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":262,"org.easymock.tests.ResultTest.createThrowResultToString":53,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":353,"org.easymock.tests.MockClassControlTest.testHashCode":368,"org.easymock.tests2.EasyMockSupportTest.testVerify":295,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":261,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":287,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":389,"org.easymock.tests.UsageVarargTest.varargCharAccepted":253,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":284,"org.easymock.tests2.UsageTest.openCallCountByLastCall":174,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":167,"org.easymock.tests.DefaultClassInstantiatorTest.object":37,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":360,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":326,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":220,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":91,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":352,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":128,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":367,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":219,"org.easymock.tests.CapturesMatcherTest.test":268,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":138,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":330,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":366,"org.easymock.tests2.UsageTest.resumeIfFailure":177,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":239,"org.easymock.tests2.StubTest.stubWithReturnValue":21,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":342,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":146,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":65,"org.easymock.tests2.SerializationTest.testAllMockedMethod":296,"org.easymock.samples.SupportTest.voteForRemovals":108,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":332,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":319,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":225,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":345,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":344,"org.easymock.tests.UsageExpectAndThrowTest.object":223,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":144,"org.easymock.tests2.DelegateToTest.testWrongClass":293,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":11,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":12,"org.easymock.samples.ConstructorCalledMockTest.testTax":18,"org.easymock.tests.UsageStrictMockTest.range":76,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":163,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":179,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":224,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":188,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":244,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":381,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":247,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":323,"org.easymock.tests2.CaptureTest.testCaptureNone":117,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":80,"org.easymock.tests.UsageUnorderedTest.message":265,"org.easymock.tests.UsageVerifyTest.twoReturns":106,"org.easymock.tests.UsageVarargTest.varargByteAccepted":258,"org.easymock.tests2.ThreadingTest.testThreadSafe":150,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":202,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":269,"org.easymock.tests2.CaptureTest.testCapture_2617107":45,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":212,"org.easymock.tests2.UsageConstraintsTest.any":140,"org.easymock.tests2.StubTest.stub":282,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":378,"org.easymock.tests.UsageExpectAndThrowTest.longType":216,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":238,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":377,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":285,"org.easymock.tests2.SerializationTest.testClass":168,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":155,"org.easymock.tests.LimitationsTest.mockNativeMethod":54,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":75,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":349,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":286,"org.easymock.tests2.NameTest.nameForMocksControl":388,"org.easymock.tests2.MockedExceptionTest.testMockedException":308,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":99,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":103,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":217,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":121,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":189,"org.easymock.tests.MockingTest.testNicePartialClassMocking":102,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":126,"org.easymock.tests2.CaptureTest.testCaptureLast":116,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":347,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":322,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":185,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":49,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":145,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":316,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":56,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":221,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":299,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":35,"org.easymock.samples.ExampleTest.removeNonExistingDocument":384,"org.easymock.tests.UsageStrictMockTest.differentMethods":77,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":375,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":354,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":39,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":152,"org.easymock.tests2.ConstraintsToStringTest.andToString":331,"org.easymock.tests2.MockBuilderTest.testCreateMockString":306,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":363,"org.easymock.tests.UsageExpectAndThrowTest.floatType":215,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":143,"org.easymock.tests.ResultTest.createReturnResultToString":52,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":310,"org.easymock.tests.UsageVerifyTest.twoThrows":266,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":137,"org.easymock.tests.ResultTest.createDelegateResultToString":51,"org.easymock.samples.ExampleTest.voteAgainstRemoval":111,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":78,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":129,"org.easymock.tests2.UsageConstraintsTest.testNotNull":34,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":95,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":307,"org.easymock.tests2.UsageTest.defaultResetToNice":176,"org.easymock.samples.ExampleTest.voteAgainstRemovals":109,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":71,"org.easymock.tests.UsageVarargTest.differentLength":255,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":348,"org.easymock.tests2.CallbackTest.callback":277,"org.easymock.tests2.UsageConstraintsTest.equals":346,"org.easymock.tests.UsageTest.openCallCountByLastCall":98,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":23,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":211,"org.easymock.tests.UsageCallCountTest.tooFewCalls":200,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":182,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":249,"org.easymock.tests.UsageThrowableTest.throwCheckedException":92,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":324,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":184,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":235,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":181,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":380,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":183,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":311,"org.easymock.tests2.CompareToTest.testGreateOrEqual":393,"org.easymock.tests.ObjectMethodsTest.testHashCode":361,"org.easymock.tests2.NameTest.nameForNiceMock":387,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":154,"org.easymock.tests2.DependencyTest.testInterfaceMocking":148,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":339,"org.easymock.samples.ExampleTest.addDocument":275,"org.easymock.tests2.DelegateToTest.testStubDelegate":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":314,"org.easymock.tests2.AnswerTest.stubAnswer":193,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":1,"org.easymock.tests.UsageVarargTest.varargLongAccepted":257,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":198,"org.easymock.tests.UsageExpectAndReturnTest.floatType":58,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":74,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":133,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":19,"org.easymock.tests2.ConstraintsToStringTest.orToString":327,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":33,"org.easymock.tests.UsageThrowableTest.noUpperLimit":234,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":24,"org.easymock.tests2.SerializationTest.test":169,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":278,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":38,"org.easymock.tests2.UsageConstraintsTest.testSame":27,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":57,"org.easymock.samples.SupportTest.addDocument":273,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":376,"org.easymock.tests.GenericTest.testPackageScope":81,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":355,"org.easymock.tests2.NameTest.nameForMock":385,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":68,"org.easymock.tests2.UsageStrictMockTest.differentMethods":132,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":60,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":227,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":85,"org.easymock.tests2.MockedExceptionTest.testRealException":309,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":325,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":22,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":334,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":3,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":382,"org.easymock.tests2.NameTest.nameForStrictMock":386,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":301,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":125,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":40,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":50,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":186,"org.easymock.tests2.UsageStrictMockTest.range":131,"org.easymock.tests2.UsageConstraintsTest.lessThan":36,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":157,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":340,"org.easymock.tests2.CaptureTest.testCaptureRightOne":46,"org.easymock.tests2.UsageConstraintsTest.testOr":28,"org.easymock.tests.UsageRangeTest.combination":82,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":122,"org.easymock.tests.UsageTest.wrongArguments":243,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":364,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":61,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":69,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":41,"org.easymock.tests.UsageVarargTest.varargShortAccepted":256,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":203,"org.easymock.tests2.UsageConstraintsTest.cmpTo":141,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":335,"org.easymock.tests2.CompareToTest.testLessThan":390,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":317,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":175,"org.easymock.tests2.CaptureTest.testCaptureFromStub":20,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":372,"org.easymock.tests.UsageTest.unexpectedCallWithArray":242,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":196,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":201,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":70,"org.easymock.tests2.CaptureTest.testCapture":318,"org.easymock.tests2.UsageConstraintsTest.constraints":47,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":197,"org.easymock.samples.ExampleTest.addAndChangeDocument":276,"org.easymock.tests2.ConstraintsToStringTest.notToString":329,"org.easymock.tests.UsageStrictMockTest.testVerify":357,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":271,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":195,"org.easymock.tests2.CompareToTest.testGreateThan":43,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":207,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":279,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":15,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":62,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":104,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":16,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":162,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":251}}]
