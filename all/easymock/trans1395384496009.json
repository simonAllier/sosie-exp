[{"position":"org.easymock.internal.InjectionPlan:51","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[26,27],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:99","sourceCode":"continue","type":"CtContinueImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[28],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[29],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[30,31,32],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"failures":[51,52],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"method","bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[53,54,55,56,57],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[26,27],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[58,59],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[60],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[26,61,62],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.matchers.Any:40","sourceCode":"java.lang.StringBuffer.append(\"<any>\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[63,33,34,64,65,66,67,68,69,70,71,72,73,74,75,76,36,37,77,78,79,80,81,82,83,84],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[59],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[63,85,86,87,88,89,58,26,27,90,91,61,59,92,62,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,75,76,131,132,133,134,135,136,80,137,138,139,140],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:30","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Matches:40","sourceCode":"java.lang.StringBuffer.append(((\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:134","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:70","sourceCode":"java.io.InputStream.close()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[141,142,143,144],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"failures":[145],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:55","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:81","sourceCode":"java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[146,147,148,149,150],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:61","sourceCode":"final java.lang.Throwable java.lang.Throwable","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:38","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(long.long, java.lang.Long.java.lang.Long)","type":"CtInvocationImpl"},"failures":[151,152,153,154,155,156],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:56","sourceCode":"if (int > int) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"currentPosition":"result","callCount":"result"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[157],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1964","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[99,158,159,160],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:157","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[161,151,152,153,162,156,163,164,165,166],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:60","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.ArrayList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:319","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:196","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:189","sourceCode":"org.easymock.internal.IMocksBehavior = new org.easymock.internal.MocksBehavior(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtAssignmentImpl"},"failures":[167,168,169,170,171,172,173,174,63,175,33,34,176,161,177,178,0,1,2,3,4,5,6,7,8,9,10,11,179,180,157,85,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,86,207,87,208,209,64,65,66,67,88,89,58,26,210,27,90,91,61,59,92,62,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,211,212,213,214,215,216,217,218,219,164,220,221,222,223,110,111,112,113,114,115,116,117,118,119,120,121,122,123,12,13,14,15,16,17,18,19,20,21,22,23,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,68,69,257,158,258,259,260,70,71,261,262,165,166,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,159,278,279,280,124,281,282,283,284,285,286,287,288,289,290,291,292,293,24,294,295,296,297,25,298,299,300,301,302,303,304,305,306,307,125,126,127,128,129,308,309,310,311,130,312,313,314,315,316,317,318,319,320,321,322,53,35,323,324,325,326,327,328,329,29,330,331,332,333,334,335,336,337,338,75,76,339,36,37,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,51,360,361,362,363,364,365,366,367,160,368,369,370,54,371,55,56,57,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,131,132,133,134,135,77,78,79,397,398,399,400,401,402,403,404,405,406,146,147,148,149,150,407,408,409,410,411,412,413,414,415,416,417,136,418,419,30,420,421,422,423,424,425,426,38,427,428,429,39,40,430,41,431,432,42,433,434,435,436,437,80,438,439,440,441,43,442,443,444,44,45,445,46,446,447,47,448,449,450,451,452,453,81,454,82,455,456,83,84,457,48,458,459,49,50,460,461,462,137,138,463,464,465,466,467,468,469,470,139,140,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,31,490,491,492,493,32,494,495],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:183","sourceCode":"final java.lang.SecurityException java.lang.SecurityException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[167,170,171,172,173,174,63,175,33,34,176,161,177,178,5,179,180,157,85,181,185,188,198,204,86,87,208,64,65,66,67,88,89,58,26,27,90,91,61,59,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,211,212,215,216,217,218,220,221,222,110,111,112,113,114,115,116,117,118,119,120,121,122,123,17,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,242,243,244,246,251,252,253,254,255,256,68,69,257,158,258,259,260,70,71,261,262,165,263,264,265,266,268,269,270,272,273,274,275,276,277,159,278,279,124,283,284,285,286,291,292,293,24,294,294,295,295,296,297,25,298,299,300,301,302,303,304,305,306,307,125,126,127,128,129,308,309,310,311,130,312,313,314,315,337,338,75,76,339,36,37,340,341,342,343,344,345,347,349,350,351,352,356,362,363,364,365,366,367,160,368,369,370,54,371,374,376,377,378,379,381,382,131,132,133,134,135,77,78,79,397,398,399,400,401,402,403,404,405,406,147,148,407,408,409,411,412,413,414,415,416,417,136,419,30,420,423,424,425,426,38,427,428,429,39,40,430,41,431,432,42,433,434,435,436,437,80,438,439,440,441,43,442,443,444,44,45,445,46,446,447,47,448,449,450,451,452,453,81,454,82,455,456,83,84,457,461,137,138,463,464,465,466,467,468,469,470,139,140,474,475,477,481,482,483,484,485,486,487,488,489,31,490,491,492,493,32,494,495],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[171,172],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":26,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":453,"org.easymock.tests2.UsageTest.argumentsOrdered":71,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":234,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":324,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":158,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":24,"org.easymock.tests2.DelegateToTest.testReturnException":242,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":309,"org.easymock.tests.MockingTest.testPartialClassMocking":474,"org.easymock.tests.MockClassControlTest.testToString":491,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":209,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":384,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":288,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":192,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":438,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":188,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":72,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":292,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":151,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":92,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":131,"org.easymock.tests2.UsageTest.wrongArguments":69,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":11,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":344,"org.easymock.samples.ExampleTest.answerVsDelegate":299,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":391,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":479,"org.easymock.tests2.UsageConstraintsTest.testNull":90,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":277,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":495,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":233,"org.easymock.tests2.CaptureTest.testPrimitive":113,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":135,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":452,"org.easymock.tests.UsageTest.moreThanOneArgument":81,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":276,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":399,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":48,"org.easymock.tests.UsageTest.argumentsOrdered":84,"org.easymock.tests.UsageVarargTest.varargIntAccepted":409,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":329,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":125,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":155,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":211,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":22,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":216,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":318,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":129,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":5,"org.easymock.tests.ReplayStateInvalidUsageTest.times":369,"org.easymock.tests2.DependencyTest.testClassMocking":289,"org.easymock.tests2.AnswerTest.answer":167,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":62,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":330,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":254,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":388,"org.easymock.tests2.CaptureTest.testAnd":110,"org.easymock.tests2.UsageTest.strictResetToDefault":256,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":60,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":283,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":398,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":228,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":351,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":50,"org.easymock.tests2.DelegateToTest.testDelegate":246,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":448,"org.easymock.tests.LimitationsTest.mockFinalMethod":375,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":130,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":406,"org.easymock.tests2.DependencyTest.testClassMockingSupport":290,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":460,"org.easymock.tests2.CaptureTest.testCapture1_2446744":114,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":280,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":447,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":252,"org.easymock.tests.UsageThrowableTest.throwError":463,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":364,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":390,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":23,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":206,"org.easymock.samples.PartialClassMockTest.testGetArea":293,"org.easymock.tests.MockingTest.testInterfaceMocking":476,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":365,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":126,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":395,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":439,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":422,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":193,"org.easymock.tests2.UsageTest.niceToStrict":257,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":316,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":215,"org.easymock.tests2.MockBuilderTest.testCreateMock":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":201,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":8,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":45,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":229,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":387,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":355,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":481,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":342,"org.easymock.tests.UsageOverloadedMethodTest.overloading":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":203,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":97,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":379,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":41,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":313,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":96,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":119,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":410,"org.easymock.tests.MockClassControlTest.testEquals":494,"org.easymock.tests2.EasyMockSupportClassTest.testAll":185,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":148,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":450,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":404,"org.easymock.tests2.CaptureTest.testCaptureAll":111,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":253,"org.easymock.tests.MockNameTest.defaultName":346,"org.easymock.tests2.UsageConstraintsTest.testMatches":98,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":400,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":362,"org.easymock.samples.ExampleTest.voteForRemovals":303,"org.easymock.tests.UsageVarargTest.allKinds":136,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":77,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":405,"org.easymock.samples.BasicClassMockTest.testPrintContent":307,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":469,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":173,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":19,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":245,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":312,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":156,"org.easymock.tests2.UsageConstraintsTest.greaterThan":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":186,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":350,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":286,"org.easymock.samples.ExampleTest.voteForRemoval":300,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":361,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":180,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":287,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":392,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":279,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":255,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":347,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":164,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":53,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":226,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":465,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":183,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":308,"org.easymock.tests2.CaptureTest.testCaptureFirst":123,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":241,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":322,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":227,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":262,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":382,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":429,"org.easymock.tests2.CaptureTest.testCapture2_2446744":122,"org.easymock.tests2.UsageTest.moreThanOneArgument":68,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":85,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":221,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":331,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":417,"org.easymock.tests.GenericTest.testBridgedEquals":150,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":488,"org.easymock.tests.UsageExpectAndReturnTest.longType":426,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":402,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":224,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":451,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":105,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":348,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":449,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":397,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":56,"org.easymock.tests.UsageCallCountTest.tooManyCalls":489,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":483,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":202,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":39,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":10,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":442,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":468,"org.easymock.tests.MockingTest.testNiceClassMocking":480,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":264,"org.easymock.tests.MockingTest.testClassMocking":472,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":482,"org.easymock.tests2.UsageConstraintsTest.testContains":95,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":239,"org.easymock.tests2.UsageConstraintsTest.testFind":27,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":315,"org.easymock.tests.MockTypeTest.fromEasyMockClass":389,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":87,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":337,"org.easymock.tests.UsageExpectAndReturnTest.object":430,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":124,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":9,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":232,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":412,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":152,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":420,"org.easymock.tests.UsageTest.exactCallCountByLastCall":457,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":139,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":321,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":458,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":383,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":166,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":434,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":407,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":378,"org.easymock.tests.MockClassControlTest.testHashCode":32,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":13,"org.easymock.tests2.EasyMockSupportTest.testVerify":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":195,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":459,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":354,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":376,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":251,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":223,"org.easymock.tests.UsageVarargTest.varargCharAccepted":411,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":174,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":336,"org.easymock.tests2.UsageTest.openCallCountByLastCall":258,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":235,"org.easymock.tests.DefaultClassInstantiatorTest.object":356,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":353,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":419,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":444,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":196,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":466,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":3,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":12,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":493,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":284,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":443,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":435,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":55,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":492,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":204,"org.easymock.tests2.UsageTest.resumeIfFailure":261,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":386,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":311,"org.easymock.tests2.StubTest.stubWithReturnValue":273,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":163,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":106,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":40,"org.easymock.tests2.SerializationTest.testAllMockedMethod":178,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":29,"org.easymock.samples.SupportTest.voteForRemovals":297,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":146,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":15,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":446,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":335,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":168,"org.easymock.tests.UsageExpectAndThrowTest.object":445,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":385,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":103,"org.easymock.tests2.DelegateToTest.testWrongClass":244,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":137,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":138,"org.easymock.tests.UsageStrictMockTest.range":36,"org.easymock.samples.ConstructorCalledMockTest.testTax":294,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":249,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":231,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":263,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":46,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":182,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":54,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":83,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":343,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":396,"org.easymock.tests2.CaptureTest.testCaptureNone":118,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":142,"org.easymock.tests.UsageUnorderedTest.message":80,"org.easymock.tests.UsageVerifyTest.twoReturns":79,"org.easymock.tests.UsageVarargTest.varargByteAccepted":416,"org.easymock.tests2.ThreadingTest.testThreadSafe":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":199,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":486,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":421,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":306,"org.easymock.tests2.CaptureTest.testCapture_2617107":112,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":462,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":134,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":333,"org.easymock.tests2.UsageConstraintsTest.any":93,"org.easymock.tests2.StubTest.stub":272,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":368,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":57,"org.easymock.tests.UsageExpectAndThrowTest.longType":441,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":334,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":51,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":160,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":175,"org.easymock.tests2.SerializationTest.testClass":161,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":17,"org.easymock.tests.LimitationsTest.mockNativeMethod":374,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":437,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":149,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":2,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":176,"org.easymock.tests2.NameTest.nameForMocksControl":67,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":4,"org.easymock.tests2.MockedExceptionTest.testMockedException":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":187,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":456,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":477,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":43,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":207,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":274,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":218,"org.easymock.tests.MockingTest.testNicePartialClassMocking":475,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":278,"org.easymock.tests2.CaptureTest.testCaptureLast":117,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":0,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":461,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":59,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":270,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":104,"org.easymock.tests.MockingTest.testTwoMocks":473,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":271,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":423,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":44,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":70,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":108,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":144,"org.easymock.samples.ExampleTest.removeNonExistingDocument":304,"org.easymock.tests.UsageStrictMockTest.differentMethods":37,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":7,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":366,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":14,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":358,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":157,"org.easymock.tests2.MockBuilderTest.testCreateMockString":222,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":31,"org.easymock.tests.UsageExpectAndThrowTest.floatType":440,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":189,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":184,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":170,"org.easymock.tests.UsageVerifyTest.twoThrows":78,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":198,"org.easymock.samples.ExampleTest.voteAgainstRemoval":301,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":325,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":285,"org.easymock.tests.LimitationsTest.privateConstructor":373,"org.easymock.tests2.UsageConstraintsTest.testNotNull":107,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":470,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":237,"org.easymock.tests2.UsageTest.defaultResetToNice":260,"org.easymock.samples.ExampleTest.voteAgainstRemovals":298,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":433,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":326,"org.easymock.tests.UsageVarargTest.differentLength":413,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":1,"org.easymock.tests2.CallbackTest.callback":208,"org.easymock.tests2.UsageConstraintsTest.equals":210,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":281,"org.easymock.tests.UsageTest.openCallCountByLastCall":455,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":88,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":133,"org.easymock.tests.UsageCallCountTest.tooFewCalls":484,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":266,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":345,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":143,"org.easymock.tests.UsageThrowableTest.throwCheckedException":467,"org.easymock.tests.MockingTest.testStrictClassMocking":471,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":140,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":269,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":6,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":265,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":370,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":268,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":172,"org.easymock.tests.ObjectMethodsTest.testHashCode":30,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":154,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":181,"org.easymock.tests2.NameTest.nameForNiceMock":66,"org.easymock.tests2.DependencyTest.testInterfaceMocking":291,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":153,"org.easymock.samples.ExampleTest.addDocument":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":205,"org.easymock.tests2.DelegateToTest.testStubDelegate":243,"org.easymock.tests2.AnswerTest.stubAnswer":171,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":76,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":219,"org.easymock.tests.UsageVarargTest.varargLongAccepted":415,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":340,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":323,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":436,"org.easymock.tests.UsageExpectAndReturnTest.floatType":425,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":165,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":295,"org.easymock.tests.UsageThrowableTest.noUpperLimit":464,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":101,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":21,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":380,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":89,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":247,"org.easymock.tests2.SerializationTest.test":177,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":115,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":52,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":357,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":424,"org.easymock.tests2.UsageConstraintsTest.testSame":91,"org.easymock.samples.SupportTest.addDocument":296,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":267,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":190,"org.easymock.tests.GenericTest.testPackageScope":147,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":49,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":320,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":20,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":478,"org.easymock.tests2.NameTest.nameForMock":64,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":431,"org.easymock.tests2.UsageStrictMockTest.differentMethods":34,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":282,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":38,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":47,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":418,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":352,"org.easymock.tests2.MockedExceptionTest.testRealException":240,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":393,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":250,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":328,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":63,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":327,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":132,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":371,"org.easymock.tests2.NameTest.nameForStrictMock":65,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":214,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":86,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":159,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":248,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":102,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":73,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":359,"org.easymock.tests.ErrorMessageTest.testGetters":28,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":212,"org.easymock.tests2.UsageStrictMockTest.range":33,"org.easymock.tests2.UsageConstraintsTest.lessThan":109,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":16,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":162,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":35,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":225,"org.easymock.tests2.CaptureTest.testCaptureRightOne":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":194,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":141,"org.easymock.tests2.UsageConstraintsTest.testOr":61,"org.easymock.tests.UsageRangeTest.combination":349,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":275,"org.easymock.tests.UsageTest.wrongArguments":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":191,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":490,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":427,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":317,"org.easymock.tests.UsageVarargTest.varargShortAccepted":414,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":360,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":487,"org.easymock.tests2.UsageConstraintsTest.cmpTo":94,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":169,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":319,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":259,"org.easymock.tests2.CaptureTest.testCaptureFromStub":121,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":363,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":213,"org.easymock.tests.UsageTest.unexpectedCallWithArray":454,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":75,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":485,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":145,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":42,"org.easymock.tests2.UsageConstraintsTest.constraints":58,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":339,"org.easymock.samples.ExampleTest.addAndChangeDocument":305,"org.easymock.tests.UsageStrictMockTest.testVerify":341,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":25,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":338,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":403,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":116,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":127,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":428,"org.easymock.tests.LimitationsTest.abstractClass":372,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":128,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":381,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":408,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":74,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":230}}]
