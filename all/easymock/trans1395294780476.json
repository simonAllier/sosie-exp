[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[79,80,45],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","failures":[81,82,83,84,85,86,87,46,88,89,47,90,91,92,93,94,95,96,97,98,48,99,100,101,102,103,49,104,105,106,54,58,107,108,109,110,111,112,113,77,114],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1277","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[115,116,117,118,119,120],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:51","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:48","sourceCode":"if (org.easymock.internal.MocksControl != null) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\n} else {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"failures":[121,122,123],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"failures":[124,125],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:57","sourceCode":"java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[126,127,128,129],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"transplant":{"position":"org.easymock.internal.matchers.Same:43","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[115,116,117,118,119,120],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.Invocation:135","sourceCode":"final java.lang.Class<?>[] java.lang.Class<?>[] = java.lang.reflect.Method.getParameterTypes()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[130,131,132,133,134,5,135,136,137,36,37,38,81,81,82,82,138,139,44,46,47,48,49,106,140,52,53,54,55,57,58,141,142,59,143,60,124,61,62,144,63,145,146,64,65,67,68,69,125,70,147,71,72,73,148,77,149],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:153","failures":[150,151,152,153,154,155,156,157,158,159,148,160],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:42","sourceCode":"return false","type":"CtReturnImpl"},"failures":[161],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1065","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[162,163,164,165],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[166],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,126,183,184,127,185,186,128,129,187,188,189,190,191,130,192,193,194,195,196,197,0,1,2,3,198,199,131,132,133,200,201,121,202,203,204,205,206,207,4,208,150,209,210,211,134,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,79,249,250,251,252,253,254,255,256,257,258,259,260,261,151,152,153,154,155,156,262,157,263,264,265,266,267,268,122,269,270,271,272,273,274,5,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,117,6,297,7,8,298,299,9,10,11,12,13,14,15,16,17,18,19,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,20,21,22,23,24,25,323,324,26,27,325,28,29,30,326,31,32,33,34,35,135,327,328,329,330,136,331,332,333,334,137,36,37,335,38,336,337,338,339,340,341,342,123,343,344,118,345,346,347,348,349,350,351,39,81,82,40,352,41,42,353,43,354,355,138,139,356,357,44,80,358,45,359,360,361,85,86,87,46,88,89,47,90,91,92,93,94,95,96,97,98,48,99,100,101,102,103,49,104,105,362,363,364,365,106,366,140,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,50,51,52,53,54,55,410,56,57,58,107,411,412,413,414,415,416,417,418,419,420,421,422,423,141,108,59,143,109,424,60,124,61,110,62,425,111,144,63,113,146,64,65,66,67,68,69,125,426,70,427,428,147,71,72,73,429,430,431,432,74,433,75,76,434,435,158,159,148,160,77,114,436,437,438,439,78,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,166,465,466,467,468,469,470,163,471,472,473,474,475,164,476,477,478,479,480,481,482,483,484,485,486,165,487,488,489,490,491,492,493,494,495,496,497,498,499],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[500],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[199],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"failures":[203],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,183,184,185,186,129,189,190,130,193,194,195,131,132,150,209,211,134,212,213,214,215,216,217,220,221,223,228,233,238,263,264,265,266,267,5,277,286,287,288,289,290,291,292,293,294,295,296,117,6,297,7,8,298,299,300,301,302,303,304,305,306,307,308,309,310,312,313,314,315,316,317,318,319,22,23,25,325,31,36,37,38,339,340,341,342,118,345,348,349,350,351,39,40,352,41,42,353,43,354,355,138,139,356,357,44,358,359,46,47,48,49,362,363,364,365,106,366,140,372,384,391,392,393,394,396,397,398,399,400,401,404,405,407,50,51,52,53,54,55,56,57,58,411,412,413,414,415,416,417,418,419,420,421,422,423,141,59,60,124,61,62,144,63,146,64,65,66,67,68,69,125,70,147,72,431,432,74,433,75,76,434,435,158,159,148,77,78,440,441,442,452,453,454,455,456,459,166,470,163,472,473,475,477,480,481,482,483,484,487,488,490,491,492,495,496,497,499],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[84],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[130,199,131,132,200,211,134,212,213,214,215,216,217,273,274,5,275,277,278,279,280,281,282,284,333,334,137,36,37,38,338,81,82,138,139,44,85,46,89,90,91,94,97,99,100,103,140,52,53,54,55,57,58,64,65,67,68,69,125,70,428,147,71,72,73,429,430,158,159,148,444,448],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[201,121,202,122],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:85","failures":[467,471,480,485],"status":-1,"binaryOperator":"(java.util.Stack<org.easymock.IArgumentMatcher> != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[171,179,180,181,182,183,184,185,129,188,189,190,130,0,1,2,3,198,131,132,4,208,150,209,210,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,151,152,153,154,155,156,262,157,5,288,289,290,291,293,294,296,117,6,297,7,8,298,9,11,12,13,14,15,16,17,18,19,300,301,302,303,304,305,306,307,308,309,310,312,313,315,316,317,318,319,20,21,22,23,24,25,323,324,26,27,325,28,29,30,326,31,32,33,34,35,36,37,38,343,344,345,346,347,348,349,350,40,352,41,42,353,43,355,358,45,359,361,106,366,140,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,407,50,53,54,57,58,60,64,65,66,67,68,69,70,72,432,74,433,75,76,434,158,159,148,160,77,437,438,439,78,440,441,442,443,456,459,460,461,462,463,464,166,466,467,468,469,470,163,472,473,474,475,164,476,477,478,479,480,481,482,483,484,485,486,165,487,488,489,490,491,492,493,494,496,497,498,499],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,126,183,184,127,185,186,128,129,187,188,189,190,130,192,193,194,195,196,197,0,1,2,3,198,199,131,132,133,200,201,121,202,203,204,205,206,207,4,208,150,209,210,211,134,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,79,249,250,251,252,253,254,255,256,257,258,259,260,261,151,152,153,154,155,156,262,157,263,264,265,266,267,268,122,269,270,271,272,273,274,5,275,277,278,279,280,281,282,284,285,286,287,288,289,290,291,292,293,294,295,296,117,6,297,7,8,298,299,9,10,11,12,13,14,15,16,17,18,19,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,20,21,22,23,24,25,323,324,26,27,325,28,29,30,326,31,32,33,34,35,135,327,328,329,330,136,331,332,333,334,137,36,37,335,38,336,337,338,339,340,341,342,123,343,344,118,345,346,347,348,349,350,351,39,81,82,40,352,41,42,353,43,354,355,138,139,356,357,44,80,358,45,359,360,361,85,86,87,46,88,89,47,90,91,92,93,94,95,96,97,98,48,99,100,101,102,103,49,104,105,362,363,364,365,106,366,140,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,50,51,52,53,54,55,410,56,57,58,107,411,412,413,414,415,416,417,418,419,420,421,422,423,141,59,143,424,60,124,61,62,425,111,144,63,146,64,65,66,67,68,69,125,426,70,427,428,147,71,72,73,429,430,431,432,74,433,75,76,434,435,158,159,148,160,77,114,437,438,439,78,440,441,442,443,444,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,166,465,466,467,468,469,470,163,471,472,473,474,475,164,476,477,478,479,480,481,482,483,484,485,486,165,487,488,489,490,491,492,493,494,495,496,497,498,499],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[501,106,366,140],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"primitiveType"}},{"transplant":{"position":"org.easymock.EasyMock:556","sourceCode":"final org.easymock.internal.MocksControl org.easymock.internal.MocksControl = org.easymock.internal.LastControl.org.easymock.internal.LastControl.lastControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[320,321,322],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:85","failures":[467,471,480,485],"status":-1,"binaryOperator":"(java.util.Stack<org.easymock.IArgumentMatcher> != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":166,"org.easymock.tests2.UsageTest.argumentsOrdered":497,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":343,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":421,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":373,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":79,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":492,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":356,"org.easymock.tests2.DelegateToTest.testReturnException":358,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":152,"org.easymock.tests.MockingTest.testPartialClassMocking":36,"org.easymock.tests.MockClassControlTest.testToString":212,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":451,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":122,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":430,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":93,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":47,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":218,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":51,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":163,"org.easymock.tests2.UsageTest.wrongArguments":490,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":4,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":390,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":341,"org.easymock.samples.ExampleTest.answerVsDelegate":352,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":136,"org.easymock.tests2.UsageConstraintsTest.testNull":467,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":337,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":67,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":420,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":217,"org.easymock.tests2.CaptureTest.testPrimitive":394,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":210,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":237,"org.easymock.tests.UsageTest.moreThanOneArgument":344,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":66,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":2,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":203,"org.easymock.tests.UsageTest.argumentsOrdered":349,"org.easymock.tests.UsageVarargTest.varargIntAccepted":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":253,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":15,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":141,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":446,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":377,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":124,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":241,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":19,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":384,"org.easymock.tests.ReplayStateInvalidUsageTest.times":175,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":500,"org.easymock.tests2.DependencyTest.testClassMocking":408,"org.easymock.tests2.AnswerTest.answer":456,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":471,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":255,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":365,"org.easymock.tests2.CaptureTest.testAnd":391,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":328,"org.easymock.tests2.UsageTest.strictResetToDefault":488,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":147,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":109,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":1,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":415,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":11,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":207,"org.easymock.tests2.DelegateToTest.testDelegate":361,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":233,"org.easymock.tests.LimitationsTest.mockFinalMethod":275,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":155,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":267,"org.easymock.tests2.DependencyTest.testClassMockingSupport":409,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":128,"org.easymock.tests2.CaptureTest.testCapture1_2446744":395,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":426,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":231,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":363,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":169,"org.easymock.tests.UsageThrowableTest.throwError":300,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":330,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":191,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":378,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":198,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":105,"org.easymock.samples.PartialClassMockTest.testGetArea":44,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":170,"org.easymock.tests.MockingTest.testInterfaceMocking":335,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":16,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":121,"org.easymock.tests2.UsageTest.niceToStrict":491,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":94,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":197,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":239,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":60,"org.easymock.tests2.MockBuilderTest.testCreateMock":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":101,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":387,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":119,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":227,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":416,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":327,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":272,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":286,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":339,"org.easymock.tests.UsageOverloadedMethodTest.overloading":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":98,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":184,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":164,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":179,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":28,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":475,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":400,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":311,"org.easymock.tests2.EasyMockSupportClassTest.testAll":46,"org.easymock.tests.MockClassControlTest.testEquals":216,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":132,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":235,"org.easymock.tests2.CaptureTest.testCaptureAll":392,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":265,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":364,"org.easymock.tests.MockNameTest.defaultName":285,"org.easymock.tests2.UsageConstraintsTest.testMatches":476,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":167,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":3,"org.easymock.samples.ExampleTest.voteForRemovals":43,"org.easymock.tests.UsageVarargTest.allKinds":319,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":188,"org.easymock.samples.BasicClassMockTest.testPrintContent":139,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":266,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":306,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":431,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":156,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":360,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":374,"org.easymock.tests2.UsageConstraintsTest.greaterThan":478,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":88,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":10,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":73,"org.easymock.samples.ExampleTest.voteForRemoval":41,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":284,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":438,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":429,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":331,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":447,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":125,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":487,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":130,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":111,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":246,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":413,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":86,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":151,"org.easymock.tests2.CaptureTest.testCaptureFirst":404,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":80,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":245,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":414,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":499,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":186,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":324,"org.easymock.tests2.UsageTest.moreThanOneArgument":489,"org.easymock.tests2.CaptureTest.testCapture2_2446744":403,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":78,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":63,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":256,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":318,"org.easymock.tests.GenericTest.testBridgedEquals":200,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":293,"org.easymock.tests.UsageExpectAndReturnTest.longType":23,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":411,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":263,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":145,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":236,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":483,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":123,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":234,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":0,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":321,"org.easymock.tests.UsageCallCountTest.tooManyCalls":294,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":288,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":102,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":26,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":389,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":223,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":305,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":53,"org.easymock.tests.MockingTest.testNiceClassMocking":338,"org.easymock.tests.MockingTest.testClassMocking":334,"org.easymock.tests2.UsageConstraintsTest.testContains":474,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":142,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":287,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":148,"org.easymock.tests2.UsageConstraintsTest.testFind":466,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":181,"org.easymock.tests.MockTypeTest.fromEasyMockClass":329,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":407,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":295,"org.easymock.tests.UsageExpectAndReturnTest.object":325,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":70,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":388,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":419,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":313,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":195,"org.easymock.tests.UsageTest.exactCallCountByLastCall":350,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":262,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":244,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":204,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":268,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":114,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":32,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":308,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":183,"org.easymock.tests.MockClassControlTest.testHashCode":215,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":368,"org.easymock.tests2.EasyMockSupportTest.testVerify":423,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":96,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":205,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":182,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":271,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":362,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":435,"org.easymock.tests.UsageVarargTest.varargCharAccepted":312,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":276,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":261,"org.easymock.tests2.UsageTest.openCallCountByLastCall":493,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":422,"org.easymock.tests.DefaultClassInstantiatorTest.object":277,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":270,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":193,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":97,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":225,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":303,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":382,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":367,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":71,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":214,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":224,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":33,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":320,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":49,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":213,"org.easymock.tests2.UsageTest.resumeIfFailure":498,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":135,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":445,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":154,"org.easymock.tests2.StubTest.stubWithReturnValue":443,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":110,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":484,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":27,"org.easymock.tests2.SerializationTest.testAllMockedMethod":140,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":254,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":120,"org.easymock.samples.SupportTest.voteForRemovals":39,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":199,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":370,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":230,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":501,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":260,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":457,"org.easymock.tests.UsageExpectAndThrowTest.object":228,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":269,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":481,"org.easymock.tests2.DelegateToTest.testWrongClass":359,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":13,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":14,"org.easymock.tests.UsageStrictMockTest.range":7,"org.easymock.samples.ConstructorCalledMockTest.testTax":81,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":449,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":418,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":52,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":229,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":61,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":85,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":348,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":340,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":115,"org.easymock.tests2.CaptureTest.testCaptureNone":399,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":202,"org.easymock.tests.UsageUnorderedTest.message":238,"org.easymock.tests.UsageVerifyTest.twoReturns":190,"org.easymock.tests.UsageVarargTest.varargByteAccepted":317,"org.easymock.tests2.ThreadingTest.testThreadSafe":437,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":99,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":291,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":138,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":196,"org.easymock.tests2.CaptureTest.testCapture_2617107":393,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":187,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":209,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":258,"org.easymock.tests2.UsageConstraintsTest.any":472,"org.easymock.tests2.StubTest.stub":442,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":174,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":322,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":153,"org.easymock.tests.UsageExpectAndThrowTest.longType":221,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":259,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":281,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":173,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":433,"org.easymock.tests2.SerializationTest.testClass":106,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":372,"org.easymock.tests.LimitationsTest.mockNativeMethod":5,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":133,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":35,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":381,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":434,"org.easymock.tests2.NameTest.nameForMocksControl":455,"org.easymock.tests2.MockedExceptionTest.testMockedException":159,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":89,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":347,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":406,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":38,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":222,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":64,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":62,"org.easymock.tests.MockingTest.testNicePartialClassMocking":37,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":69,"org.easymock.tests2.CompareToTest.testNotComparable":161,"org.easymock.tests2.CaptureTest.testCaptureLast":398,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":379,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":129,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":470,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":58,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":482,"org.easymock.tests.MockingTest.testTwoMocks":137,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":107,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":20,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":226,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":496,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":486,"org.easymock.samples.ExampleTest.removeNonExistingDocument":354,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":386,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":171,"org.easymock.tests.UsageStrictMockTest.differentMethods":8,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":369,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":279,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":439,"org.easymock.tests2.MockBuilderTest.testCreateMockString":146,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":90,"org.easymock.tests.UsageExpectAndThrowTest.floatType":220,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":477,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":87,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":459,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":436,"org.easymock.tests.UsageVerifyTest.twoThrows":189,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":48,"org.easymock.samples.ExampleTest.voteAgainstRemoval":42,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":201,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":249,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":72,"org.easymock.tests.LimitationsTest.privateConstructor":274,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":84,"org.easymock.tests2.UsageConstraintsTest.testNotNull":485,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":158,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":307,"org.easymock.tests2.UsageTest.defaultResetToNice":495,"org.easymock.samples.ExampleTest.voteAgainstRemovals":40,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":31,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":250,"org.easymock.tests.UsageVarargTest.differentLength":314,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":380,"org.easymock.tests2.CallbackTest.callback":441,"org.easymock.tests2.UsageConstraintsTest.equals":465,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":427,"org.easymock.tests.UsageTest.openCallCountByLastCall":346,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":462,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":150,"org.easymock.tests.UsageCallCountTest.tooFewCalls":289,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":55,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":342,"org.easymock.tests.UsageThrowableTest.throwCheckedException":304,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":116,"org.easymock.tests.MockingTest.testStrictClassMocking":333,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":157,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":57,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":385,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":54,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":176,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":56,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":461,"org.easymock.tests2.CompareToTest.testGreateOrEqual":162,"org.easymock.tests.ObjectMethodsTest.testHashCode":194,"org.easymock.tests2.NameTest.nameForNiceMock":454,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":440,"org.easymock.tests2.DependencyTest.testInterfaceMocking":50,"org.easymock.samples.ExampleTest.addDocument":353,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":104,"org.easymock.tests2.DelegateToTest.testStubDelegate":45,"org.easymock.tests2.AnswerTest.stubAnswer":460,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":6,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":425,"org.easymock.tests.UsageVarargTest.varargLongAccepted":316,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":298,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":248,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":34,"org.easymock.tests.UsageExpectAndReturnTest.floatType":22,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":77,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":82,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":479,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":127,"org.easymock.tests.UsageThrowableTest.noUpperLimit":301,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":376,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":463,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":444,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":396,"org.easymock.tests2.SerializationTest.test":366,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":278,"org.easymock.tests2.UsageConstraintsTest.testSame":468,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":21,"org.easymock.samples.SupportTest.addDocument":351,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":410,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":91,"org.easymock.tests.GenericTest.testPackageScope":131,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":206,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":243,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":375,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":336,"org.easymock.tests2.NameTest.nameForMock":452,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":29,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":113,"org.easymock.tests2.UsageStrictMockTest.differentMethods":76,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":428,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":24,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":232,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":192,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":12,"org.easymock.tests2.MockedExceptionTest.testRealException":160,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":332,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":450,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":252,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":74,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":251,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":178,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":208,"org.easymock.tests2.NameTest.nameForStrictMock":453,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":424,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":405,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":68,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":448,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":480,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":280,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":59,"org.easymock.tests2.UsageStrictMockTest.range":75,"org.easymock.tests2.UsageConstraintsTest.lessThan":165,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":371,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":412,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":247,"org.easymock.tests2.CaptureTest.testCaptureRightOne":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":95,"org.easymock.tests2.UsageConstraintsTest.testOr":469,"org.easymock.tests.UsageRangeTest.combination":9,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":65,"org.easymock.tests.UsageTest.wrongArguments":345,"org.easymock.tests2.MockBuilderTest.testWithConstructor":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":92,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":134,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":25,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":30,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":240,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":282,"org.easymock.tests.UsageVarargTest.varargShortAccepted":315,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":292,"org.easymock.tests2.UsageConstraintsTest.cmpTo":473,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":458,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":242,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":494,"org.easymock.tests2.CaptureTest.testCaptureFromStub":402,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":168,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":143,"org.easymock.tests.UsageTest.unexpectedCallWithArray":118,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":117,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":290,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":112,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":326,"org.easymock.tests2.UsageConstraintsTest.constraints":464,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":297,"org.easymock.samples.ExampleTest.addAndChangeDocument":355,"org.easymock.tests.UsageStrictMockTest.testVerify":299,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":357,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":296,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":264,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":397,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":149,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":17,"org.easymock.tests.LimitationsTest.abstractClass":273,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":323,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":185,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":18,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":417,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":309}}]
