[{"transplant":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[2,3,4,5],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:61","failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"returnedType"}},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:58","sourceCode":"java.lang.String[][int] = java.lang.Class<?>[][int].getName()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:72","sourceCode":"java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","type":"CtAssignmentImpl"},"failures":[2,3,4,5],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[2,3,4,5],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[73],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplant":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:67","sourceCode":"return org.easymock.Mock.java.lang.String()","type":"CtReturnImpl"},"failures":[74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,6,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,8,135,12,14,17,18,20,21,23,26,29,30,31,32,33,34,136,137,138,39,40,41,42,44,45,46,47,48,49,52,139,140,141,142,143,144,145,146,147,148,149,150,2,3,4,151,152,153,154,155,156,157,158,159,160,161,53,162,163,164,165,166,167,56,168,169,170,57,58,171,172,173,174,175,176,177,178,179,180,181,182,183,184,60,61,62,63,185,186,187,188,189,190,191,192,193,194,195,196,197,198,72,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[220,221,57,222,223,224],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:122","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[103,2,225,226,227,228,229,153,230,154,155,231,232,233,234,235,236,237,238],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[99,100,103,239,240,241,242,104,105,243,244,109,110,111,112,114,115,245,246,247,248,131,249,132,250,251,252,253,254,255,256,133,257,258,259,260,261,134,2,4,226,262,228,229,263,264,153,230,154,265,155,266,231,232,267,234,156,157,159,160,161,235,53,268,269,0,270,162,271,272,273,274,166,167,236,275,237,238,276,277,179,278,180,279,280,281,212,213,214,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[298,299,300,301],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[302],"status":-1,"binaryOperator":"((((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number)) + \")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:105","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[153,233],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:128","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:36","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Character.java.lang.Class<java.lang.Character>.getName(), java.lang.Character.java.lang.Class<java.lang.Character>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:268","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[239,239,240,240,303,268],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[304,305,157,273],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.RecordState:280","failures":[92,306,136,307,137,308,138,182],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[275],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"type"}},{"position":"org.easymock.EasyMock:1052","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockStatement:42","sourceCode":"org.easymock.EasyMockSupport.org.easymock.EasyMockSupport.injectMocks(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"test"}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.And:47","sourceCode":"java.lang.StringBuffer.append(\"and(\")","type":"CtInvocationImpl"},"failures":[309],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:178","failures":[155,237],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[310],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[311,312],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:59","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Byte.java.lang.Class<java.lang.Byte>, java.lang.Byte.java.lang.Byte)","type":"CtInvocationImpl"},"failures":[91,93,94,96,102,67],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:246","sourceCode":"final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1608","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[2,3,4,5],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[313],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[241,242,104,314,315,316,317,318,319,320,59,321,322,62,71,73,323,324],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[92,136,137,138,182],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[325,326,327],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[292,296],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(this.java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"value":"key","properties":"properties","key":"key"}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[328],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1847","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EqualsWithDelta(float , float))","type":"CtInvocationImpl"},"failures":[28],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if ((this.java.lang.Object) == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"failures":[61,72],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"o":"expected","this":"actual"}},{"transplant":{"position":"org.easymock.internal.Invocation:183","sourceCode":"final java.lang.SecurityException java.lang.SecurityException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1092","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Contains(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":12,"org.easymock.tests2.UsageTest.argumentsOrdered":129,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":148,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":320,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":127,"org.easymock.tests2.StubTest.stubWithReturnValue":315,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":265,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":90,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":33,"org.easymock.tests2.SerializationTest.testAllMockedMethod":4,"org.easymock.tests2.DelegateToTest.testReturnException":136,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":318,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":1,"org.easymock.tests.MockingTest.testPartialClassMocking":212,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":221,"org.easymock.samples.SupportTest.voteForRemovals":102,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":274,"org.easymock.tests.MockClassControlTest.testToString":285,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":304,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":273,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":5,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":132,"org.easymock.tests.UsageExpectAndThrowTest.object":210,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":30,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":108,"org.easymock.tests2.DelegateToTest.testWrongClass":137,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":54,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":55,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":18,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":60,"org.easymock.tests2.UsageTest.wrongArguments":125,"org.easymock.samples.ConstructorCalledMockTest.testTax":239,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":81,"org.easymock.tests.UsageStrictMockTest.range":172,"org.easymock.samples.ExampleTest.answerVsDelegate":92,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":238,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":109,"org.easymock.tests2.UsageConstraintsTest.testNull":14,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":159,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":290,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":147,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":154,"org.easymock.tests2.CaptureTest.testPrimitive":42,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":64,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":247,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":176,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":158,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":223,"org.easymock.tests2.CaptureTest.testCaptureNone":47,"org.easymock.tests.UsageUnorderedTest.message":56,"org.easymock.tests.UsageVerifyTest.twoReturns":169,"org.easymock.tests.UsageVarargTest.varargByteAccepted":197,"org.easymock.tests.UsageTest.argumentsOrdered":177,"org.easymock.tests.UsageVarargTest.varargIntAccepted":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":257,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":217,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":99,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":65,"org.easymock.tests2.CaptureTest.testCapture_2617107":41,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":226,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":88,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":63,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":230,"org.easymock.tests2.UsageConstraintsTest.any":20,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":324,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":69,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":319,"org.easymock.tests.UsageExpectAndThrowTest.longType":208,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":295,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":118,"org.easymock.tests2.SerializationTest.testClass":2,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":116,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":106,"org.easymock.tests.LimitationsTest.mockNativeMethod":179,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":236,"org.easymock.tests2.AnswerTest.answer":151,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":19,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":301,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":75,"org.easymock.tests2.CaptureTest.testAnd":39,"org.easymock.tests2.UsageTest.strictResetToDefault":124,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":263,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":0,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":121,"org.easymock.tests2.MockedExceptionTest.testMockedException":242,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":249,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":143,"org.easymock.tests2.DelegateToTest.testDelegate":138,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":328,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":214,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":156,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":155,"org.easymock.tests.MockingTest.testNicePartialClassMocking":213,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":211,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":161,"org.easymock.tests.LimitationsTest.mockFinalMethod":278,"org.easymock.tests2.CaptureTest.testCaptureLast":46,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":59,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":17,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":115,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":31,"org.easymock.tests.MockingTest.testTwoMocks":281,"org.easymock.tests2.CaptureTest.testCapture1_2446744":43,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":128,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":35,"org.easymock.tests.UsageThrowableTest.throwError":199,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":77,"org.easymock.tests.UsageStrictMockTest.differentMethods":173,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":83,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":312,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":293,"org.easymock.tests2.ConstraintsToStringTest.andToString":309,"org.easymock.tests2.MockBuilderTest.testCreateMockString":234,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":89,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":250,"org.easymock.tests.UsageExpectAndThrowTest.floatType":207,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":26,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":152,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":244,"org.easymock.tests.UsageVerifyTest.twoThrows":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":133,"org.easymock.samples.PartialClassMockTest.testGetArea":103,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":310,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":66,"org.easymock.samples.ExampleTest.voteAgainstRemoval":94,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":253,"org.easymock.tests2.UsageTest.niceToStrict":126,"org.easymock.tests.LimitationsTest.privateConstructor":277,"org.easymock.tests2.UsageConstraintsTest.testNotNull":34,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":241,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":206,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":327,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":153,"org.easymock.tests2.MockBuilderTest.testCreateMock":231,"org.easymock.samples.ExampleTest.voteAgainstRemovals":91,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":259,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":74,"org.easymock.tests2.CallbackTest.callback":122,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":268,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":78,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":220,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":144,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":9,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":62,"org.easymock.tests.UsageCallCountTest.tooFewCalls":215,"org.easymock.tests.UsageOverloadedMethodTest.overloading":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":261,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":24,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":183,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":112,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":163,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":23,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":48,"org.easymock.tests.UsageThrowableTest.throwCheckedException":203,"org.easymock.tests.MockClassControlTest.testEquals":289,"org.easymock.tests2.EasyMockSupportClassTest.testAll":131,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":167,"org.easymock.tests.MockingTest.testStrictClassMocking":279,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":224,"org.easymock.tests2.CaptureTest.testCaptureAll":40,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":71,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":114,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":111,"org.easymock.tests2.UsageConstraintsTest.testMatches":25,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":113,"org.easymock.samples.ExampleTest.voteForRemovals":96,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":135,"org.easymock.tests.UsageVarargTest.allKinds":72,"org.easymock.tests2.DependencyTest.testInterfaceMocking":107,"org.easymock.samples.BasicClassMockTest.testPrintContent":100,"org.easymock.samples.ExampleTest.addDocument":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":258,"org.easymock.tests2.DelegateToTest.testStubDelegate":307,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":205,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":321,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":308,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":85,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":58,"org.easymock.tests2.UsageConstraintsTest.greaterThan":27,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":299,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":271,"org.easymock.tests.UsageVarargTest.varargLongAccepted":196,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":174,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":297,"org.easymock.samples.ExampleTest.voteForRemoval":93,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":272,"org.easymock.tests.UsageExpectAndReturnTest.floatType":185,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":235,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":105,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":240,"org.easymock.tests.UsageThrowableTest.noUpperLimit":200,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":87,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":28,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":10,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":123,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":180,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":245,"org.easymock.tests2.SerializationTest.test":3,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":44,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":266,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":316,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":292,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":141,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":201,"org.easymock.tests2.UsageConstraintsTest.testSame":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":248,"org.easymock.samples.SupportTest.addDocument":101,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":317,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":306,"org.easymock.tests2.CaptureTest.testCaptureFirst":52,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":313,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":142,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":251,"org.easymock.tests.GenericTest.testPackageScope":166,"org.easymock.tests2.CaptureTest.testCapture2_2446744":51,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":8,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":232,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":86,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":198,"org.easymock.tests.GenericTest.testBridgedEquals":275,"org.easymock.tests2.NameTest.nameForMock":305,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":218,"org.easymock.tests.UsageExpectAndReturnTest.longType":186,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":139,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":233,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":32,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":267,"org.easymock.tests2.UsageStrictMockTest.differentMethods":120,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":323,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":269,"org.easymock.tests.UsageCallCountTest.tooManyCalls":219,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":300,"org.easymock.tests2.MockedExceptionTest.testRealException":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":260,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":80,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":209,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":6,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":204,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":61,"org.easymock.tests.MockingTest.testNiceClassMocking":282,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":110,"org.easymock.tests.MockingTest.testClassMocking":280,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":227,"org.easymock.tests2.UsageConstraintsTest.testContains":22,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":104,"org.easymock.tests2.UsageConstraintsTest.testFind":13,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":264,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":326,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":37,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":160,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":38,"org.easymock.tests.UsageExpectAndReturnTest.object":188,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":246,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":294,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":29,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":53,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":228,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":79,"org.easymock.tests2.UsageStrictMockTest.range":119,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":302,"org.easymock.tests2.UsageConstraintsTest.lessThan":36,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":146,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":194,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":84,"org.easymock.tests.UsageTest.exactCallCountByLastCall":178,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":70,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":254,"org.easymock.tests2.CaptureTest.testCaptureRightOne":49,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":311,"org.easymock.tests2.UsageConstraintsTest.testOr":16,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":243,"org.easymock.tests.UsageRangeTest.combination":165,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":157,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":190,"org.easymock.tests.UsageTest.wrongArguments":175,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":182,"org.easymock.tests2.MockBuilderTest.testWithConstructor":262,"org.easymock.tests.MockClassControlTest.testHashCode":288,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":252,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":284,"org.easymock.tests2.EasyMockSupportTest.testVerify":150,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":255,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":296,"org.easymock.tests.UsageVarargTest.varargShortAccepted":195,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":181,"org.easymock.tests2.UsageConstraintsTest.cmpTo":21,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":7,"org.easymock.tests.UsageVarargTest.varargCharAccepted":193,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":117,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":325,"org.easymock.tests.DefaultClassInstantiatorTest.object":291,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":149,"org.easymock.tests2.CaptureTest.testCaptureFromStub":50,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":229,"org.easymock.tests.UsageTest.unexpectedCallWithArray":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":256,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":202,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":57,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":216,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":303,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":287,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":270,"org.easymock.tests2.UsageConstraintsTest.constraints":11,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":171,"org.easymock.samples.ExampleTest.addAndChangeDocument":97,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":73,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":98,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":134,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":170,"org.easymock.tests2.UsageTest.resumeIfFailure":298,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":45,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":225,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":67,"org.easymock.tests.LimitationsTest.abstractClass":276,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":237,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":68,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":184,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":145,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":191}}]
