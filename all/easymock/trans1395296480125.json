[{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"failures":[2,3],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[5,6,7,8],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[9,10],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[11,12,13,14,15],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:183","failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,11,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,1,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,12,115,13,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,10,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:41","sourceCode":"org.easymock.IArgumentMatcher.appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[233],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[18,234,235],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[236],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[91,97,103,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,146,154,156,157,158,159,160,161,237,209,212,238,215,217],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[239,240,241],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>).append(\")\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[242,243,244,245,246,247,248],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[18,19,20,249],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[18,48,242,243,234,250,251,244,245,246,252,247,253],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[18,20,36,254,45,46,47,48,76,255,78,256,79,257,258,259,260,261,262,83,84,85,86,88,89,263,264,265,266,94,267,95,96,268,269,270,271,272,273,137,274,275,162,276,277,163,164,165,278,279,208,221,222,224,280,280,281,281],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:364","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[282,283],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[11,40,97,102,103,104,149,209,211,212,213,216,218],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[284,285],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:229","sourceCode":"org.easymock.internal.Injection org.easymock.internal.Injection = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[286],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[287],"status":-1,"binaryOperator":"(\"eq(\" + (java.lang.Number))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[42,9,288,151,10,217,218],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[33,34],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:148","sourceCode":"for (final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.Class<T>.getDeclaredConstructors()) {\n    if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n        if (java.lang.reflect.Constructor<T> != null) {\n            throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n        } \n        java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n    } \n}","type":"CtForEachImpl"},"failures":[18,48,242,243,234,244,245,246,252,253],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"failures":[289],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:42","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[290,291,292],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"expected"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[293,294,295,296,297,298],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[250,235,251,247,248],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[299],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"removeConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[18,300,301,302,303,304,254,305,306,45,307,308,309,310,311,312,313,314,315,46,316,317,318,319,320,47,321,322,48,242,85,89,323,324,325,243,234,326,327,280,281],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:222","failures":[328,236,329,330],"status":-1,"binaryOperator":"(\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:185","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:56","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"parameterTypes":"paramTypes","i":"i"}},{"transplant":{"position":"org.easymock.internal.RecordState:251","sourceCode":"java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:212","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[331,332,333,334,335,16,336,17,337,338,339,340,18,19,20,341,21,22,23,24,342,25,26,27,28,29,30,343,344,31,11,345,346,32,33,34,347,348,349,350,351,35,352,353,354,355,356,357,358,359,36,360,37,361,362,363,364,365,38,366,367,368,369,370,371,372,39,40,41,42,43,44,302,303,304,254,305,306,45,307,308,309,310,311,312,313,314,315,46,316,317,318,319,320,47,321,322,48,242,373,374,375,376,377,378,49,50,51,52,379,53,54,55,56,57,58,380,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,255,77,78,256,79,257,381,258,382,383,259,260,261,262,384,385,80,386,0,1,81,82,83,84,85,86,387,87,88,89,323,388,90,91,2,3,92,93,263,265,266,389,94,267,95,96,390,234,268,269,271,97,98,99,391,100,101,102,103,392,393,394,395,104,105,396,106,107,108,109,397,398,110,111,112,113,114,399,12,115,13,400,116,401,402,403,404,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,137,5,6,7,427,282,428,4,429,138,139,140,430,141,142,431,8,432,433,434,435,286,436,437,438,439,440,441,442,443,444,284,445,446,447,285,448,143,144,145,146,147,449,450,451,452,453,148,295,149,150,151,152,153,454,154,155,156,157,158,159,160,161,455,274,456,457,458,459,460,461,462,275,162,276,463,464,465,466,467,468,328,236,469,470,471,277,163,164,472,165,473,474,475,476,477,478,479,237,480,278,481,482,483,484,279,485,486,487,488,489,490,166,491,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,492,190,191,493,192,193,194,195,196,494,495,197,198,199,200,496,201,202,497,283,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,10,203,204,205,206,207,520,521,208,522,209,210,298,523,211,212,524,525,213,14,329,15,238,330,526,527,528,214,215,529,530,531,532,533,534,535,536,537,538,539,216,217,218,219,220,221,222,223,224,225,280,281,226,227,228,229,230,231,540,232],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1277","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:612","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[328,236,277,329,330,526],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[57],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[360,238],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[242,243,244,245,246,247,248],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:353","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][0]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:194","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bounds":"genericParameters"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":52,"org.easymock.tests2.UsageTest.argumentsOrdered":394,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":209,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":112,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":366,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":506,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":101,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":223,"org.easymock.tests2.DelegateToTest.testReturnException":12,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":477,"org.easymock.tests.MockingTest.testPartialClassMocking":163,"org.easymock.tests.MockClassControlTest.testToString":456,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":331,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":515,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":310,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":117,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":45,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":93,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":426,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":244,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":58,"org.easymock.tests2.UsageTest.wrongArguments":391,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":143,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":357,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":403,"org.easymock.samples.ExampleTest.answerVsDelegate":227,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":279,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":474,"org.easymock.tests2.UsageConstraintsTest.testNull":54,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":78,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":461,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":111,"org.easymock.tests2.CaptureTest.testPrimitive":24,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":147,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":136,"org.easymock.tests.UsageTest.moreThanOneArgument":210,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":77,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":466,"org.easymock.tests.UsageTest.argumentsOrdered":525,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":427,"org.easymock.tests.UsageVarargTest.varargIntAccepted":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":511,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":203,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":248,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":263,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":370,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":375,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":267,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":498,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":207,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":410,"org.easymock.tests.ReplayStateInvalidUsageTest.times":440,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":35,"org.easymock.tests2.DependencyTest.testClassMocking":2,"org.easymock.tests2.AnswerTest.answer":11,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":380,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":513,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":340,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":482,"org.easymock.tests2.CaptureTest.testAnd":21,"org.easymock.tests2.UsageTest.strictResetToDefault":98,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":259,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":325,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":465,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":141,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":108,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":429,"org.easymock.tests2.DelegateToTest.testDelegate":116,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":409,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":132,"org.easymock.tests.LimitationsTest.mockFinalMethod":522,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":237,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":533,"org.easymock.tests2.DependencyTest.testClassMockingSupport":3,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":328,"org.easymock.tests2.CaptureTest.testCapture1_2446744":342,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":381,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":130,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":338,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":435,"org.easymock.tests.UsageThrowableTest.throwError":154,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":484,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":371,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":468,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":322,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":413,"org.easymock.samples.PartialClassMockTest.testGetArea":224,"org.easymock.tests.MockingTest.testInterfaceMocking":472,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":286,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":204,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":6,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":539,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":118,"org.easymock.tests2.UsageTest.niceToStrict":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":311,"org.easymock.tests2.ThreadingTest.testChangeDefault":386,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":497,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":239,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":94,"org.easymock.tests2.MockBuilderTest.testCreateMock":268,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":318,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":354,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":126,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":293,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":109,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":481,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":490,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":494,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":401,"org.easymock.tests.UsageOverloadedMethodTest.overloading":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":320,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":63,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":238,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":528,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":178,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":62,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":29,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":492,"org.easymock.tests.MockClassControlTest.testEquals":460,"org.easymock.tests2.EasyMockSupportClassTest.testAll":254,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":162,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":134,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":292,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":272,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":531,"org.easymock.tests2.CaptureTest.testCaptureAll":22,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":339,"org.easymock.tests.MockNameTest.defaultName":487,"org.easymock.tests2.UsageConstraintsTest.testMatches":64,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":467,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":433,"org.easymock.samples.ExampleTest.voteForRemovals":231,"org.easymock.tests.UsageVarargTest.allKinds":196,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":216,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":532,"org.easymock.samples.BasicClassMockTest.testPrintContent":222,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":160,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":372,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":480,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":400,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":367,"org.easymock.tests2.UsageConstraintsTest.greaterThan":66,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":305,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":430,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":262,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":414,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":448,"org.easymock.samples.ExampleTest.voteForRemoval":228,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":384,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":0,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":485,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":257,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":406,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":137,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":97,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":234,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":503,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":106,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":303,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":476,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":399,"org.easymock.tests2.CaptureTest.testCaptureFirst":31,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":502,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":107,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":104,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":527,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":174,"org.easymock.tests2.UsageTest.moreThanOneArgument":99,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":81,"org.easymock.tests2.CaptureTest.testCapture2_2446744":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":514,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":269,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":195,"org.easymock.tests.GenericTest.testBridgedEquals":463,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":201,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":289,"org.easymock.tests.UsageExpectAndReturnTest.longType":170,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":529,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":105,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":135,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":270,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":449,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":71,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":133,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":464,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":451,"org.easymock.tests.UsageCallCountTest.tooManyCalls":202,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":319,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":175,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":356,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":122,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":159,"org.easymock.tests.MockingTest.testNiceClassMocking":475,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":84,"org.easymock.tests.MockingTest.testClassMocking":471,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":495,"org.easymock.tests2.UsageConstraintsTest.testContains":61,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":264,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":36,"org.easymock.tests2.UsageConstraintsTest.testFind":53,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":215,"org.easymock.tests.MockTypeTest.fromEasyMockClass":483,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":453,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":17,"org.easymock.tests.UsageExpectAndReturnTest.object":177,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":258,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":355,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":287,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":110,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":191,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":245,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":537,"org.easymock.tests.UsageTest.exactCallCountByLastCall":213,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":166,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":501,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":431,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":282,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":242,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":187,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":183,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":15,"org.easymock.tests.MockClassControlTest.testHashCode":459,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":362,"org.easymock.tests2.EasyMockSupportTest.testVerify":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":313,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":290,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":428,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":489,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":14,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":337,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":341,"org.easymock.tests.UsageVarargTest.varargCharAccepted":190,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":39,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":519,"org.easymock.tests2.UsageTest.openCallCountByLastCall":102,"org.easymock.tests.DefaultClassInstantiatorTest.object":444,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":113,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":240,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":488,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":535,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":314,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":157,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":350,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":361,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":458,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":412,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":260,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":123,"org.easymock.tests.ReplayStateInvalidCallsTest.times":418,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":184,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":450,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":419,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":457,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":47,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":291,"org.easymock.tests2.UsageTest.resumeIfFailure":395,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":278,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":374,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":479,"org.easymock.tests2.StubTest.stubWithReturnValue":91,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":243,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":176,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":72,"org.easymock.tests2.SerializationTest.testAllMockedMethod":20,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":512,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":235,"org.easymock.samples.SupportTest.voteForRemovals":220,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":294,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":462,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":364,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":129,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":249,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":518,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":345,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":432,"org.easymock.tests.UsageExpectAndThrowTest.object":127,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":69,"org.easymock.tests2.DelegateToTest.testWrongClass":13,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":416,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":138,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":139,"org.easymock.tests.UsageStrictMockTest.range":151,"org.easymock.samples.ConstructorCalledMockTest.testTax":280,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":377,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":398,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":83,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":128,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":95,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":524,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":442,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":302,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":402,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":296,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":408,"org.easymock.tests2.CaptureTest.testCaptureNone":28,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":7,"org.easymock.tests.UsageUnorderedTest.message":10,"org.easymock.tests.UsageVerifyTest.twoReturns":218,"org.easymock.tests.UsageVarargTest.varargByteAccepted":194,"org.easymock.tests2.ThreadingTest.testThreadSafe":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":316,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":200,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":538,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":221,"org.easymock.tests2.CaptureTest.testCapture_2617107":23,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":469,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":516,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":146,"org.easymock.tests2.UsageConstraintsTest.any":59,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":439,"org.easymock.tests2.StubTest.stub":90,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":452,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":517,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":478,"org.easymock.tests.UsageExpectAndThrowTest.longType":120,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":447,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":438,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":41,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":38,"org.easymock.tests2.SerializationTest.testClass":18,"org.easymock.tests.LimitationsTest.mockNativeMethod":208,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":186,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":276,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":349,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":424,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":44,"org.easymock.tests2.NameTest.nameForMocksControl":335,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":351,"org.easymock.tests2.MockedExceptionTest.testMockedException":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":306,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":212,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":165,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":121,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":336,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":76,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":96,"org.easymock.tests.MockingTest.testNicePartialClassMocking":164,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":79,"org.easymock.tests2.CaptureTest.testCaptureLast":27,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":251,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":347,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":236,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":423,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":57,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":89,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":70,"org.easymock.tests.MockingTest.testTwoMocks":277,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":420,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":323,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":167,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":125,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":393,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":74,"org.easymock.samples.ExampleTest.removeNonExistingDocument":540,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":436,"org.easymock.tests.UsageStrictMockTest.differentMethods":152,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":353,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":363,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":445,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":388,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":1,"org.easymock.tests2.MockBuilderTest.testCreateMockString":271,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":455,"org.easymock.tests.UsageExpectAndThrowTest.floatType":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":307,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":304,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":32,"org.easymock.tests.UsageVerifyTest.twoThrows":217,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":46,"org.easymock.samples.ExampleTest.voteAgainstRemoval":229,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":507,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":5,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":261,"org.easymock.tests.LimitationsTest.privateConstructor":521,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":301,"org.easymock.tests2.UsageConstraintsTest.testNotNull":73,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":161,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":358,"org.easymock.tests2.UsageTest.defaultResetToNice":392,"org.easymock.samples.ExampleTest.voteAgainstRemovals":226,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":508,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":182,"org.easymock.tests.UsageVarargTest.differentLength":493,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":348,"org.easymock.tests2.CallbackTest.callback":37,"org.easymock.tests2.UsageConstraintsTest.equals":379,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":382,"org.easymock.tests.UsageTest.openCallCountByLastCall":211,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":49,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":145,"org.easymock.tests.UsageCallCountTest.tooFewCalls":198,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":86,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":404,"org.easymock.tests.UsageThrowableTest.throwCheckedException":158,"org.easymock.tests.MockingTest.testStrictClassMocking":470,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":297,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":491,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":88,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":85,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":352,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":441,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":87,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":34,"org.easymock.tests.ObjectMethodsTest.testHashCode":536,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":247,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":422,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":82,"org.easymock.tests2.NameTest.nameForNiceMock":334,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":417,"org.easymock.tests2.DependencyTest.testInterfaceMocking":92,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":246,"org.easymock.samples.ExampleTest.addDocument":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":317,"org.easymock.tests2.DelegateToTest.testStubDelegate":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":321,"org.easymock.tests2.AnswerTest.stubAnswer":33,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":149,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":390,"org.easymock.tests.UsageVarargTest.varargLongAccepted":193,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":153,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":505,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":185,"org.easymock.tests.UsageExpectAndReturnTest.floatType":169,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":48,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":281,"org.easymock.tests.UsageThrowableTest.noUpperLimit":155,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":67,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":330,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":369,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":50,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":373,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":25,"org.easymock.tests2.SerializationTest.test":19,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":299,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":284,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":168,"org.easymock.tests2.UsageConstraintsTest.testSame":55,"org.easymock.samples.SupportTest.addDocument":219,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":387,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":407,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":437,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":308,"org.easymock.tests.GenericTest.testPackageScope":275,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":4,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":500,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":368,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":473,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":405,"org.easymock.tests2.NameTest.nameForMock":332,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":179,"org.easymock.tests2.UsageStrictMockTest.differentMethods":43,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":327,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":383,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":171,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":131,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":534,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":142,"org.easymock.tests2.MockedExceptionTest.testRealException":360,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":486,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":510,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":378,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":250,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":509,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":40,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":443,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":144,"org.easymock.tests2.NameTest.nameForStrictMock":333,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":389,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":16,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":241,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":256,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":376,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":446,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":9,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":68,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":265,"org.easymock.tests2.UsageStrictMockTest.range":42,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":411,"org.easymock.tests2.UsageConstraintsTest.lessThan":75,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":365,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":504,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":396,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":252,"org.easymock.tests2.CaptureTest.testCaptureRightOne":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":312,"org.easymock.tests2.UsageConstraintsTest.testOr":56,"org.easymock.tests.UsageRangeTest.combination":140,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":255,"org.easymock.tests.UsageTest.wrongArguments":523,"org.easymock.tests2.MockBuilderTest.testWithConstructor":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":309,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":274,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":172,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":180,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":283,"org.easymock.tests.UsageVarargTest.varargShortAccepted":192,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":285,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":496,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":425,"org.easymock.tests2.UsageConstraintsTest.cmpTo":60,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":346,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":499,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":103,"org.easymock.tests2.CaptureTest.testCaptureFromStub":343,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":434,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":266,"org.easymock.tests.UsageTest.unexpectedCallWithArray":298,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":421,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":295,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":199,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":326,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":181,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":150,"org.easymock.tests2.UsageConstraintsTest.constraints":51,"org.easymock.samples.ExampleTest.addAndChangeDocument":232,"org.easymock.tests2.ConstraintsToStringTest.notToString":233,"org.easymock.tests.UsageStrictMockTest.testVerify":454,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":225,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":148,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":530,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":26,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":205,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":273,"org.easymock.tests.LimitationsTest.abstractClass":520,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":173,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":526,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":206,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":397,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":188,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":288}}]
