[{"position":"org.easymock.internal.ReflectionUtils:150","failures":[0,1,2,3,4,5,6,7,8],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[9,10,11,12,13,14,15,16,0,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,7,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if (org.easymock.ConstructorArgs != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:204","sourceCode":"try {\n    java.lang.reflect.Constructor<?>.setAccessible(true);\n    T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException());\n}","type":"CtTryImpl"},"failures":[265,265,266,266,0,267,268,269,270,271,272,2,98,273,104,274,107,109,7,8],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"args"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Matches:40","sourceCode":"java.lang.StringBuffer.append(((\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[275],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"type","type":"type"}},{"position":"org.easymock.EasyMock:2124","failures":[10,19,20,47,48,49],"status":-1,"binaryOperator":"org.easymock.internal.Invocation == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:2000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:229","sourceCode":"org.easymock.internal.Injection org.easymock.internal.Injection = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[23,29],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1235","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"failures":[276],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,277,6,7,8],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[278,55,57,58,59,60,61,62,64,279,65,66,68],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"failures":[23,24,26,28,29,280,40,44,55,57,65],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[81,87,88,123,281,186,187,190,191,216,217,282,238,241,244],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[283,284,285],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"failures":[265,266,0,286,287,1,2,288,289,290,291,292,273,7,8],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1832","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:214","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[23,24,26,28,29,280,40,44,55,57,65],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:253","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:92","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","type":"CtLocalVariableImpl"},"failures":[293,0,294,295,93,296,297,95,298,96,299,300,105,301,302,162,303,304],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cls":"clazz"}},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[9,10,11,12,13,14,305,15,16,0,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,306,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,295,93,94,307,95,96,97,98,99,100,101,102,299,103,104,300,105,274,106,107,108,109,110,111,112,113,114,7,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,308,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,309,310,311,158,159,160,161,312,162,313,314,315,316,317,318,163,164,165,166,167,168,169,319,170,171,172,173,174,175,176,177,320,321,322,323,178,324,325,326,327,328,329,330,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,331,213,214,215,216,217,218,219,220,221,222,223,224,225,226,332,333,334,335,227,282,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,336,337,338],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"failures":[339,3,4,5,340,341,6,7],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:210","failures":[265,265,266,266,0,342,2,273,7,8],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"failures":[218,221],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[0,17,18,343],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[24],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[344,345],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[21,38,43,346],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[347,348],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1518","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(float))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1470","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(boolean))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[126,182],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((this.org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[265,265,266,266,0,342,2,273,7,8],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[348],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:159","failures":[265,266,286,288,349,289,273],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[350,351],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":24,"org.easymock.tests2.UsageTest.argumentsOrdered":88,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":184,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":251,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":83,"org.easymock.tests2.StubTest.stubWithReturnValue":127,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":1,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":43,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":146,"org.easymock.tests2.SerializationTest.testAllMockedMethod":18,"org.easymock.tests2.DelegateToTest.testReturnException":74,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":249,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":292,"org.easymock.tests.MockingTest.testPartialClassMocking":134,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":347,"org.easymock.tests.MockClassControlTest.testToString":313,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":269,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":343,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":193,"org.easymock.tests.UsageExpectAndThrowTest.object":203,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":41,"org.easymock.tests2.DelegateToTest.testWrongClass":76,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":3,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":175,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":176,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":30,"org.easymock.tests2.UsageTest.wrongArguments":81,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":179,"org.easymock.samples.ConstructorCalledMockTest.testTax":265,"org.easymock.tests.UsageStrictMockTest.range":244,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":130,"org.easymock.samples.ExampleTest.answerVsDelegate":10,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":304,"org.easymock.tests2.UsageConstraintsTest.testNull":26,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":204,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":100,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":318,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":296,"org.easymock.tests2.CaptureTest.testPrimitive":58,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":183,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":329,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":212,"org.easymock.tests.UsageTest.moreThanOneArgument":185,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":190,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":99,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":129,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":256,"org.easymock.tests2.CaptureTest.testCaptureNone":63,"org.easymock.tests.UsageUnorderedTest.message":238,"org.easymock.tests.UsageVerifyTest.twoReturns":217,"org.easymock.tests.UsageVarargTest.varargByteAccepted":172,"org.easymock.tests2.ThreadingTest.testThreadSafe":69,"org.easymock.tests.UsageTest.argumentsOrdered":191,"org.easymock.tests.UsageVarargTest.varargIntAccepted":167,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":264,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":228,"org.easymock.tests2.CaptureTest.testCapture_2617107":57,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":341,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":92,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":182,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":94,"org.easymock.tests2.UsageConstraintsTest.any":31,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":326,"org.easymock.tests2.StubTest.stub":126,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":232,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":250,"org.easymock.tests.UsageExpectAndThrowTest.longType":196,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":325,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":122,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests.ReplayStateInvalidUsageTest.times":327,"org.easymock.tests.LimitationsTest.mockNativeMethod":226,"org.easymock.tests2.AnswerTest.answer":47,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":156,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":280,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":54,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":302,"org.easymock.tests2.CaptureTest.testAnd":55,"org.easymock.tests2.UsageTest.strictResetToDefault":79,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":287,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":104,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":125,"org.easymock.tests2.NameTest.nameForMocksControl":114,"org.easymock.tests2.MockedExceptionTest.testMockedException":116,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":255,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":160,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":189,"org.easymock.tests2.DelegateToTest.testDelegate":77,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":197,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":136,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":97,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":297,"org.easymock.tests.MockingTest.testNicePartialClassMocking":135,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":208,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":102,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":339,"org.easymock.tests2.CaptureTest.testCaptureLast":62,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":252,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":157,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":29,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":109,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":237,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":42,"org.easymock.tests2.CaptureTest.testCapture1_2446744":59,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":276,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":137,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":206,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":201,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":52,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":87,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":45,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":322,"org.easymock.tests.UsageThrowableTest.throwError":218,"org.easymock.samples.ExampleTest.removeNonExistingDocument":305,"org.easymock.tests.UsageStrictMockTest.differentMethods":245,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":178,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":345,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":71,"org.easymock.tests2.MockBuilderTest.testCreateMockString":96,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":312,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":258,"org.easymock.tests.UsageExpectAndThrowTest.floatType":195,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":267,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":48,"org.easymock.tests.UsageVerifyTest.twoThrows":216,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":333,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":272,"org.easymock.samples.PartialClassMockTest.testGetArea":293,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":323,"org.easymock.tests2.CompareToTest.testLessOrEqual":346,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":229,"org.easymock.samples.ExampleTest.voteAgainstRemoval":12,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":105,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":194,"org.easymock.tests2.UsageTest.niceToStrict":82,"org.easymock.tests2.UsageConstraintsTest.testNotNull":44,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":225,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":115,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":283,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":93,"org.easymock.tests2.MockBuilderTest.testCreateMock":307,"org.easymock.tests2.UsageTest.defaultResetToNice":86,"org.easymock.samples.ExampleTest.voteAgainstRemovals":9,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":152,"org.easymock.tests.UsageVarargTest.differentLength":319,"org.easymock.tests2.CallbackTest.callback":16,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":273,"org.easymock.tests.UsageTest.openCallCountByLastCall":188,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":202,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":21,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":259,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":128,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":181,"org.easymock.tests.UsageCallCountTest.tooFewCalls":262,"org.easymock.tests.UsageOverloadedMethodTest.overloading":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":270,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":335,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":35,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":331,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":148,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":34,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":64,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":131,"org.easymock.tests.UsageThrowableTest.throwCheckedException":222,"org.easymock.tests.MockClassControlTest.testEquals":317,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":164,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":210,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":349,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":235,"org.easymock.tests2.CaptureTest.testCaptureAll":56,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":53,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":108,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":133,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":107,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":328,"org.easymock.tests2.UsageConstraintsTest.testMatches":36,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":50,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":320,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":257,"org.easymock.tests.ObjectMethodsTest.testHashCode":310,"org.easymock.samples.ExampleTest.voteForRemovals":14,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":340,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":275,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":73,"org.easymock.tests2.NameTest.nameForNiceMock":113,"org.easymock.tests.UsageVarargTest.allKinds":174,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":215,"org.easymock.tests2.DependencyTest.testInterfaceMocking":110,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":5,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":236,"org.easymock.samples.ExampleTest.addDocument":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":271,"org.easymock.tests2.DelegateToTest.testStubDelegate":75,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":224,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":119,"org.easymock.tests2.AnswerTest.stubAnswer":49,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":253,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":242,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":6,"org.easymock.tests2.UsageConstraintsTest.greaterThan":38,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":268,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":159,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":274,"org.easymock.tests.UsageVarargTest.varargLongAccepted":171,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":246,"org.easymock.samples.ExampleTest.voteForRemoval":11,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":70,"org.easymock.tests.UsageExpectAndReturnTest.floatType":139,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":155,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":299,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":7,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":266,"org.easymock.tests.UsageThrowableTest.noUpperLimit":219,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":39,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":78,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":22,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":177,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":60,"org.easymock.tests2.SerializationTest.test":17,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":2,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":350,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":220,"org.easymock.tests2.UsageConstraintsTest.testSame":27,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":138,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":248,"org.easymock.tests2.CaptureTest.testCaptureFirst":68,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":90,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":324,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":282,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":144,"org.easymock.tests.GenericTest.testPackageScope":163,"org.easymock.tests2.UsageTest.moreThanOneArgument":80,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":72,"org.easymock.tests2.CaptureTest.testCapture2_2446744":67,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":95,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":173,"org.easymock.tests.GenericTest.testBridgedEquals":348,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":337,"org.easymock.tests2.NameTest.nameForMock":111,"org.easymock.tests.UsageExpectAndReturnTest.longType":140,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":233,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":298,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":211,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":149,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":306,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":289,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":209,"org.easymock.tests2.UsageStrictMockTest.differentMethods":124,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":254,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":141,"org.easymock.tests.UsageCallCountTest.tooManyCalls":338,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":207,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":161,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":261,"org.easymock.tests2.MockedExceptionTest.testRealException":118,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":145,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":291,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":198,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":121,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":330,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":223,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":180,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":106,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":294,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":260,"org.easymock.tests2.UsageConstraintsTest.testContains":33,"org.easymock.tests2.NameTest.nameForStrictMock":112,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":117,"org.easymock.tests2.UsageConstraintsTest.testFind":25,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":214,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":285,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":19,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":101,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":239,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":20,"org.easymock.tests.UsageExpectAndReturnTest.object":147,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":40,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":103,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":295,"org.easymock.tests2.UsageStrictMockTest.range":123,"org.easymock.tests2.UsageConstraintsTest.lessThan":46,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":4,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":169,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":311,"org.easymock.tests.UsageTest.exactCallCountByLastCall":192,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":132,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":277,"org.easymock.tests2.CaptureTest.testCaptureRightOne":65,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":344,"org.easymock.tests2.UsageConstraintsTest.testOr":28,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":8,"org.easymock.tests.UsageRangeTest.combination":158,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":98,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":153,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":165,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":334,"org.easymock.tests.UsageTest.wrongArguments":187,"org.easymock.tests2.MockBuilderTest.testWithConstructor":286,"org.easymock.tests.MockClassControlTest.testHashCode":316,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":162,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":142,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":150,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":351,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":332,"org.easymock.tests.UsageVarargTest.varargShortAccepted":170,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":336,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":51,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":91,"org.easymock.tests2.UsageConstraintsTest.cmpTo":32,"org.easymock.tests.UsageVarargTest.varargCharAccepted":168,"org.easymock.tests2.CaptureTest.testCaptureMultiple":278,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":120,"org.easymock.tests2.UsageTest.openCallCountByLastCall":84,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":85,"org.easymock.tests.DefaultClassInstantiatorTest.object":308,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":284,"org.easymock.tests2.CaptureTest.testCaptureFromStub":66,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":321,"org.easymock.tests.UsageTest.unexpectedCallWithArray":186,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":309,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":281,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":200,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":241,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":221,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":263,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":288,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":151,"org.easymock.tests2.CaptureTest.testCapture":279,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":315,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":300,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":243,"org.easymock.tests2.UsageConstraintsTest.constraints":23,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":199,"org.easymock.samples.ExampleTest.addAndChangeDocument":15,"org.easymock.tests.UsageStrictMockTest.testVerify":247,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":154,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":314,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":240,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":234,"org.easymock.tests2.UsageTest.resumeIfFailure":89,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":61,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":301,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":230,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":303,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":143,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":231,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":227,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":166}}]
