[{"transplant":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[1,2,3,4,5,6,7,8,9,10,11,12],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[13],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:99","failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,1,59,3,4,7,60,8,10,61,12,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,13,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[14,15,16,176,177,178,179,180,181,182,17,183,18,19,184,185,186,20,21,22,187,23,188,24,25,26,189,190,27,28,29,30,31,32,33,34,35,36,37,38,39,40,191,192,41,42,43,44,45,46,47,48,49,50,51,52,193,53,194,54,55,195,56,57,196,58,197,1,59,2,3,4,5,6,7,60,8,10,11,61,12,62,63,64,65,66,67,198,68,0,69,70,71,72,73,74,75,76,77,78,79,13,80,81,82,83,84,85,86,87,88,89,90,91,92,199,93,94,95,96,200,201,97,202,98,203,99,204,205,100,101,102,103,104,206,207,105,208,106,107,209,210,108,211,109,212,110,111,213,112,214,215,216,217,113,218,219,114,220,115,116,117,221,222,223,224,118,119,225,226,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,227,141,142,228,229,143,144,230,231,145,232,233,234,235,236,237,238,146,147,148,149,150,239,151,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,152,260,153,154,155,156,157,158,159,160,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,161,278,163,279,164,280,281,282,283,284,285,286,287,288,289,290,291,292,293,166,168,169,294,295,296,170,297,171,172,298,173,174,175],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.EqualsWithDelta:40","failures":[89],"status":-1,"binaryOperator":"(((java.lang.Number.doubleValue()) - (java.lang.Number.doubleValue())) <= (java.lang.Number.doubleValue())) && ((java.lang.Number.doubleValue()) <= ((java.lang.Number.doubleValue()) + (java.lang.Number.doubleValue())))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1987","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Byte>(org.easymock.Capture<java.lang.Byte>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:93","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.LinkedList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[14,15,16,181,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,1,59,2,3,4,7,60,8,10,61,12,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,13,80,81,82,83,84,85,86,87,88,89,90,91,92,199,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,220,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,239,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,170,171,172,173,174,175],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.Range:36","failures":[299,300,301,302,303,14,304,305,306,307,308,309,15,16,176,177,178,179,180,181,310,311,182,17,183,312,313,18,19,184,185,186,20,21,22,187,23,188,24,25,26,189,190,27,28,314,315,316,317,318,319,320,29,30,31,32,33,34,35,36,37,38,39,40,191,192,41,42,43,44,321,45,46,47,322,48,323,324,325,326,327,49,328,329,50,330,331,332,333,334,335,336,337,338,51,339,340,341,342,343,52,344,345,346,347,348,349,350,193,53,194,351,54,352,353,354,55,195,56,355,57,356,357,196,58,358,197,359,1,59,2,3,4,5,6,7,60,8,10,11,61,12,62,63,64,65,66,67,198,360,68,361,362,0,69,70,71,363,364,72,73,74,75,365,76,77,78,79,13,80,366,81,82,83,84,85,86,87,88,89,90,91,92,199,93,94,95,96,200,201,97,202,367,368,369,370,371,98,372,373,374,375,376,377,378,203,99,204,379,205,100,101,102,103,104,206,207,105,208,106,107,209,210,108,211,109,212,110,111,213,112,380,214,215,216,217,113,218,219,381,382,383,114,220,115,116,117,221,222,223,224,384,118,119,225,226,120,385,386,387,388,389,390,391,392,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,227,141,142,228,229,143,144,230,231,145,393,394,395,396,397,232,233,234,235,236,237,238,146,147,148,149,150,239,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,151,422,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,423,424,425,152,260,153,154,155,156,157,158,159,160,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,261,262,263,264,265,266,267,268,269,459,270,271,272,273,274,275,276,277,460,161,278,162,461,462,463,464,465,466,467,468,469,163,279,164,280,281,282,283,284,285,470,286,287,471,165,288,472,473,474,475,289,290,291,292,293,166,167,168,169,294,295,296,170,297,171,172,298,476,477,478,479,173,174,480,175,481,482,483,484,485,486,487,488],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:212","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType) : org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtLocalVariableImpl"},"failures":[57,385],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[15,16,176,489],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[299,300,301,302,303,14,304,305,306,307,308,309,15,16,176,177,178,179,180,181,310,311,182,17,183,312,313,18,19,184,185,186,20,21,22,187,23,188,24,25,26,189,190,27,28,314,318,319,320,29,30,31,32,33,34,35,36,37,38,39,40,191,192,41,42,43,44,45,46,47,48,323,325,326,327,49,328,329,50,330,331,332,333,334,335,336,337,338,51,339,340,341,342,343,52,344,345,346,347,348,349,350,193,53,194,54,352,354,55,195,56,57,357,196,58,197,1,59,2,3,4,5,6,7,60,8,10,11,61,12,62,63,64,65,66,67,198,360,68,361,362,0,69,70,71,363,364,72,73,74,75,365,76,77,78,79,13,80,366,81,82,83,84,85,86,87,88,89,90,91,92,199,93,94,95,96,200,201,97,202,367,368,369,370,371,98,372,373,374,375,376,377,378,203,99,204,379,205,100,101,102,103,104,206,207,105,208,106,107,209,210,108,211,109,212,110,111,213,112,380,214,215,216,216,217,217,113,218,219,381,382,383,114,220,115,116,117,221,222,223,224,384,118,119,225,226,120,385,388,389,390,391,392,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,227,141,142,228,229,143,144,230,231,145,393,394,395,396,397,232,233,234,235,236,237,238,146,147,148,149,150,239,399,400,401,402,403,404,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,151,422,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,423,424,425,152,260,153,154,155,156,157,158,159,160,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,261,262,263,264,265,266,267,268,269,459,270,271,272,273,274,275,276,277,460,161,278,162,461,462,463,464,465,466,467,468,469,163,279,164,280,281,282,283,284,285,470,286,287,471,165,288,472,473,474,289,290,291,292,293,166,167,168,169,294,295,296,170,297,171,172,298,476,477,478,479,173,174,480,175,481,482,483,484,485,486,487,488],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:189","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, new net.sf.cglib.proxy.Callback[]{ org.easymock.internal.ClassProxyFactory.MockMethodInterceptor })","type":"CtInvocationImpl"},"failures":[15,176,318,41,42,43,44,46,47,48,49,50,51,52,194,54,352,354,55,195,56,57,196,58,197,62,63,65,66,67,198,68,362,0,69,70,71,363,364,72,200,201,97,216,216,217,217,113,218,219,385,390,227,399,151,161,278,162,462,463,464,465,466,467,468,469,477,478,479,173,174,175,483],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[13],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[353],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[187,189,190,106,228,229,230,231,239,279,164,288,490,296,171],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[15,16,176,489],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:373","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[415,443],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:336","sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"failures":[184,186,199,94],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:127","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[15,16,176],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stream":"stream"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[239,491],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[1,2,10,74,75,77,79,13,366,90,94],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:288","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[379,428],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[323,355,492,493,494,495,496],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[14,16,176,181,182,17,183,18,19,184,186,20,21,22,23,188,24,25,189,27,28,29,30,31,32,33,34,35,37,38,39,40,191,192,41,44,45,49,193,53,1,59,2,3,4,5,6,7,60,8,10,11,61,12,62,63,64,65,66,67,68,72,73,74,75,76,77,78,79,13,80,81,82,83,84,85,86,87,88,89,90,91,92,199,93,94,95,96,200,201,97,202,98,203,99,204,205,100,101,102,103,104,207,105,208,106,107,209,210,108,211,109,212,110,111,213,112,214,215,218,219,114,220,115,116,117,118,119,225,226,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,227,141,142,143,144,230,145,232,233,234,235,237,238,146,147,148,149,150,239,151,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,152,260,153,154,155,156,157,158,159,160,453,456,261,262,263,264,265,266,267,268,269,270,271,273,274,275,276,277,161,278,461,468,469,163,279,164,280,281,282,283,284,285,286,287,166,168,169,295,170,297,171,172,298,485,486],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[497],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[15,176,314,318,41,42,43,44,46,47,48,323,325,326,327,49,328,329,50,330,331,332,333,334,335,336,337,338,51,339,340,341,342,343,52,344,345,194,498,54,352,354,55,195,56,57,357,196,58,499,197,500,62,63,65,66,67,198,68,361,362,0,69,70,71,363,364,200,201,97,216,216,217,217,113,218,219,385,390,227,399,400,401,402,403,404,406,420,421,151,422,458,460,161,278,162,461,462,463,464,465,466,467,468,469,477,478,479,173,174,175,483],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:159","failures":[351,501,358,361,216,217],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:117","failures":[181,182,183,184,186,192,212,285],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1776","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Find(java.lang.String))","type":"CtInvocationImpl"},"failures":[76],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1052","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"failures":[48,502,492,493,494,495,496,503],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[504,505,228,506,507,296],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[299,300,301,302,303,14,304,305,306,307,308,309,15,16,176,177,178,179,180,181,310,311,182,17,183,312,313,18,19,184,185,186,20,21,22,187,23,188,24,25,26,189,190,27,28,314,315,316,317,318,319,320,29,30,31,32,33,34,35,36,37,38,39,40,191,192,41,42,43,44,321,45,46,47,322,48,323,324,325,326,327,49,328,329,50,330,331,332,333,334,335,336,337,338,51,339,340,341,342,343,52,344,345,346,347,348,349,350,193,53,194,351,54,352,353,354,55,195,56,355,57,356,357,196,58,358,197,359,1,59,2,3,4,5,6,7,60,8,10,11,61,12,62,63,64,65,66,67,198,360,68,361,362,0,69,70,71,363,364,72,73,74,75,365,76,77,78,79,13,80,366,81,82,83,84,85,86,87,88,89,90,91,92,199,93,94,95,96,200,201,97,202,367,368,369,370,371,98,372,373,374,375,376,377,378,203,99,204,379,205,100,101,102,103,104,206,207,105,208,106,107,209,210,108,211,109,212,110,111,213,112,380,214,215,216,217,113,218,219,381,382,383,114,220,115,116,117,221,222,223,224,384,118,119,225,226,120,385,386,387,388,389,390,391,392,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,227,141,142,228,229,143,144,230,231,145,393,394,395,396,397,232,233,234,235,236,237,238,146,147,148,149,150,239,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,151,422,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,423,424,425,152,260,153,154,155,156,157,158,159,160,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,261,262,263,264,265,266,267,268,269,459,270,271,272,273,274,275,276,277,460,161,278,162,461,462,463,464,465,466,467,468,469,163,279,164,280,281,282,283,284,285,470,286,287,471,165,288,472,473,474,475,289,290,291,292,293,166,167,168,169,294,295,296,170,297,171,172,298,476,477,478,479,173,174,480,175,481,482,483,484,485,486,487,488],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:318","failures":[152,154],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.RecordState:99","failures":[14,15,16,181,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,1,59,3,4,7,60,8,10,61,12,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,13,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:83","sourceCode":"throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())))","type":"CtThrowImpl"},"failures":[508],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[193,226],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:113","sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.reflect.Method>.size()) ; int++) {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(int);\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[356],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"failures":[20,25,53,200,201,97,202,220,117,225,226,141,144,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,153,157,158,261,262,263,264,265,266,287],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[15,43,47,322,48,323,325,326,327,49,328,329,50,330,331,332,333,334,335,336,337,338,51,339,340,341,342,343,52,344,345,351,353,355,357,501,358,509,510,216,217],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[487],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[356,501,358,497,511,361,216,217],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"ret":"constructor","clazz":"toMock"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":75,"org.easymock.tests2.UsageTest.argumentsOrdered":190,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":141,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":39,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":436,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":188,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":211,"org.easymock.tests2.DelegateToTest.testReturnException":203,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":262,"org.easymock.tests.MockingTest.testPartialClassMocking":173,"org.easymock.tests.MockClassControlTest.testToString":464,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":346,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":445,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":333,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":50,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":240,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":19,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":492,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":80,"org.easymock.tests2.UsageTest.wrongArguments":187,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":118,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":309,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":223,"org.easymock.samples.ExampleTest.answerVsDelegate":212,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":390,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":482,"org.easymock.tests2.UsageConstraintsTest.testNull":77,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":65,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":469,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":38,"org.easymock.tests2.CaptureTest.testPrimitive":3,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":120,"org.easymock.tests.UsageTest.moreThanOneArgument":142,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":259,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":64,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":282,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":484,"org.easymock.tests.UsageTest.argumentsOrdered":231,"org.easymock.tests.UsageVarargTest.varargIntAccepted":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":441,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":146,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":496,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":194,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":316,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":376,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":195,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":428,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":150,"org.easymock.tests.ReplayStateInvalidUsageTest.times":416,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":14,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":511,"org.easymock.tests2.DependencyTest.testClassMocking":312,"org.easymock.tests2.AnswerTest.answer":181,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":366,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":443,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":180,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":387,"org.easymock.tests2.CaptureTest.testAnd":1,"org.easymock.tests2.UsageTest.strictResetToDefault":21,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":0,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":353,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":281,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":168,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":33,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":488,"org.easymock.tests2.DelegateToTest.testDelegate":205,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":255,"org.easymock.tests.LimitationsTest.mockFinalMethod":422,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":265,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":293,"org.easymock.tests2.DependencyTest.testClassMockingSupport":313,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":423,"org.easymock.tests2.CaptureTest.testCapture1_2446744":4,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":360,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":253,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":178,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":410,"org.easymock.tests.UsageThrowableTest.throwError":152,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":389,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":475,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":377,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":284,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":497,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":509,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":345,"org.easymock.samples.PartialClassMockTest.testGetArea":113,"org.easymock.tests.MockingTest.testInterfaceMocking":480,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":411,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":147,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":382,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":458,"org.easymock.tests2.UsageTest.niceToStrict":23,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":334,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":426,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":55,"org.easymock.tests2.MockBuilderTest.testCreateMock":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":341,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":306,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":504,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":249,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":34,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":386,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":474,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":396,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":221,"org.easymock.tests.UsageOverloadedMethodTest.overloading":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":343,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":85,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":287,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":132,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":115,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":84,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":8,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":459,"org.easymock.tests.MockClassControlTest.testEquals":468,"org.easymock.tests2.EasyMockSupportClassTest.testAll":49,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":278,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":257,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":179,"org.easymock.tests2.CaptureTest.testCaptureAll":59,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":291,"org.easymock.tests.MockNameTest.defaultName":407,"org.easymock.tests2.UsageConstraintsTest.testMatches":86,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":408,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":283,"org.easymock.samples.ExampleTest.voteForRemovals":112,"org.easymock.tests.UsageVarargTest.allKinds":277,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":163,"org.easymock.samples.BasicClassMockTest.testPrintContent":219,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":292,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":157,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":206,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":266,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":373,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":379,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":503,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":405,"org.easymock.tests2.UsageConstraintsTest.greaterThan":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":328,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":167,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":71,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":406,"org.easymock.samples.ExampleTest.voteForRemoval":110,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":101,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":363,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":391,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":317,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":198,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":20,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":227,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":357,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":433,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":31,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":326,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":261,"org.easymock.tests2.CaptureTest.testCaptureFirst":12,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":378,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":432,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":32,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":28,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":288,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":128,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":103,"org.easymock.tests2.UsageTest.moreThanOneArgument":22,"org.easymock.tests2.CaptureTest.testCapture2_2446744":61,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":444,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":58,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":276,"org.easymock.tests.GenericTest.testBridgedEquals":461,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":237,"org.easymock.tests.UsageExpectAndReturnTest.longType":124,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":29,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":289,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":499,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":258,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":384,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":199,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":256,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":394,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":280,"org.easymock.tests.UsageCallCountTest.tooManyCalls":238,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":342,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":129,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":308,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":245,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":156,"org.easymock.tests.MockingTest.testNiceClassMocking":483,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":42,"org.easymock.tests.MockingTest.testClassMocking":478,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":498,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":397,"org.easymock.tests2.UsageConstraintsTest.testContains":83,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":97,"org.easymock.tests2.UsageConstraintsTest.testFind":76,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":117,"org.easymock.tests.MockTypeTest.fromEasyMockClass":388,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":186,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":294,"org.easymock.tests.UsageExpectAndReturnTest.object":131,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":68,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":307,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":37,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":493,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":271,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":456,"org.easymock.tests.UsageTest.exactCallCountByLastCall":145,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":114,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":431,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":485,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":450,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":323,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":137,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":267,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":286,"org.easymock.tests.MockClassControlTest.testHashCode":467,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":368,"org.easymock.tests2.EasyMockSupportTest.testVerify":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":336,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":486,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":473,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":285,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":177,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":359,"org.easymock.tests.UsageVarargTest.varargCharAccepted":270,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":398,"org.easymock.tests2.CaptureTest.testCaptureMultiple":508,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":207,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":449,"org.easymock.tests2.UsageTest.openCallCountByLastCall":24,"org.easymock.tests.DefaultClassInstantiatorTest.object":399,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":40,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":472,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":454,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":490,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":337,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":154,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":302,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":367,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":466,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":69,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":246,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":138,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":393,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":465,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":52,"org.easymock.tests2.UsageTest.resumeIfFailure":27,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":385,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":315,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":264,"org.easymock.tests2.StubTest.stubWithReturnValue":53,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":355,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":130,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":93,"org.easymock.tests2.SerializationTest.testAllMockedMethod":176,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":442,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":505,"org.easymock.samples.SupportTest.voteForRemovals":108,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":460,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":370,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":252,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":489,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":448,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":310,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":452,"org.easymock.tests.UsageExpectAndThrowTest.object":250,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":91,"org.easymock.tests2.DelegateToTest.testWrongClass":204,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":159,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":160,"org.easymock.tests.UsageStrictMockTest.range":171,"org.easymock.samples.ConstructorCalledMockTest.testTax":216,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":319,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":36,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":41,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":251,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":56,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":418,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":325,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":222,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":506,"org.easymock.tests2.CaptureTest.testCaptureNone":60,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":383,"org.easymock.tests.UsageUnorderedTest.message":239,"org.easymock.tests.UsageVerifyTest.twoReturns":164,"org.easymock.tests.UsageVarargTest.varargByteAccepted":275,"org.easymock.tests2.ThreadingTest.testThreadSafe":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":339,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":235,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":457,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":218,"org.easymock.tests2.CaptureTest.testCapture_2617107":2,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":425,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":446,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":226,"org.easymock.tests2.UsageConstraintsTest.any":81,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":415,"org.easymock.tests2.StubTest.stub":193,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":395,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":447,"org.easymock.tests.UsageExpectAndThrowTest.longType":243,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":263,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":403,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":414,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":208,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":98,"org.easymock.tests2.SerializationTest.testClass":15,"org.easymock.tests.LimitationsTest.mockNativeMethod":151,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":162,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":140,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":301,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":209,"org.easymock.tests2.NameTest.nameForMocksControl":350,"org.easymock.tests2.MockedExceptionTest.testMockedException":201,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":303,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":329,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":144,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":185,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":175,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":244,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":62,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":57,"org.easymock.tests.MockingTest.testNicePartialClassMocking":174,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":67,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":502,"org.easymock.tests2.CaptureTest.testCaptureLast":7,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":299,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":424,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":47,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":13,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":92,"org.easymock.tests.MockingTest.testTwoMocks":479,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":322,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":121,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":248,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":189,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":95,"org.easymock.samples.ExampleTest.removeNonExistingDocument":380,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":412,"org.easymock.tests.UsageStrictMockTest.differentMethods":172,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":305,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":369,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":401,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":102,"org.easymock.tests2.MockBuilderTest.testCreateMockString":197,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":462,"org.easymock.tests.UsageExpectAndThrowTest.floatType":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":330,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":327,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":182,"org.easymock.tests.UsageVerifyTest.twoThrows":279,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":324,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":470,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":51,"org.easymock.samples.ExampleTest.voteAgainstRemoval":111,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":437,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":381,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":70,"org.easymock.tests.LimitationsTest.privateConstructor":421,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":510,"org.easymock.tests2.UsageConstraintsTest.testNotNull":94,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":158,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":200,"org.easymock.tests2.UsageTest.defaultResetToNice":26,"org.easymock.samples.ExampleTest.voteAgainstRemovals":109,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":438,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":136,"org.easymock.tests.UsageVarargTest.differentLength":272,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":300,"org.easymock.tests2.CallbackTest.callback":192,"org.easymock.tests2.UsageConstraintsTest.equals":365,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":361,"org.easymock.tests.UsageTest.openCallCountByLastCall":143,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":72,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":225,"org.easymock.tests.UsageCallCountTest.tooFewCalls":233,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":44,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":224,"org.easymock.tests.UsageThrowableTest.throwCheckedException":155,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":507,"org.easymock.tests.MockingTest.testStrictClassMocking":477,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":46,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":220,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":43,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":304,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":417,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":45,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":183,"org.easymock.tests.ObjectMethodsTest.testHashCode":455,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":495,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":104,"org.easymock.tests2.NameTest.nameForNiceMock":349,"org.easymock.tests2.DependencyTest.testInterfaceMocking":18,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":494,"org.easymock.samples.ExampleTest.addDocument":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":340,"org.easymock.tests2.DelegateToTest.testStubDelegate":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":344,"org.easymock.tests2.AnswerTest.stubAnswer":17,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":170,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":356,"org.easymock.tests.UsageVarargTest.varargLongAccepted":274,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":298,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":435,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":139,"org.easymock.tests.UsageExpectAndReturnTest.floatType":123,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":48,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":217,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":471,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":89,"org.easymock.tests.UsageThrowableTest.noUpperLimit":260,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":375,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":73,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":314,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":5,"org.easymock.tests2.SerializationTest.test":16,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":400,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":122,"org.easymock.tests2.UsageConstraintsTest.testSame":78,"org.easymock.samples.SupportTest.addDocument":210,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":321,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":413,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":331,"org.easymock.tests.GenericTest.testPackageScope":161,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":430,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":374,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":481,"org.easymock.tests2.NameTest.nameForMock":347,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":133,"org.easymock.tests2.UsageStrictMockTest.differentMethods":107,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":358,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":362,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":125,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":254,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":453,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":169,"org.easymock.tests2.MockedExceptionTest.testRealException":202,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":392,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":440,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":320,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":439,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":105,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":419,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":119,"org.easymock.tests2.NameTest.nameForStrictMock":348,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":354,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":184,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":66,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":318,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":491,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":402,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":90,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":54,"org.easymock.tests2.UsageStrictMockTest.range":106,"org.easymock.tests2.UsageConstraintsTest.lessThan":96,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":371,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":434,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":30,"org.easymock.tests2.CaptureTest.testCaptureRightOne":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":335,"org.easymock.tests2.UsageConstraintsTest.testOr":79,"org.easymock.tests.UsageRangeTest.combination":166,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":63,"org.easymock.tests.UsageTest.wrongArguments":229,"org.easymock.tests2.MockBuilderTest.testWithConstructor":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":332,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":463,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":126,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":427,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":134,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":404,"org.easymock.tests.UsageVarargTest.varargShortAccepted":273,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":236,"org.easymock.tests2.UsageConstraintsTest.cmpTo":82,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":311,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":429,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":25,"org.easymock.tests2.CaptureTest.testCaptureFromStub":11,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":409,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":352,"org.easymock.tests.UsageTest.unexpectedCallWithArray":228,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":296,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":234,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":501,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":135,"org.easymock.tests2.CaptureTest.testCapture":9,"org.easymock.tests2.UsageConstraintsTest.constraints":74,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":297,"org.easymock.samples.ExampleTest.addAndChangeDocument":214,"org.easymock.tests.UsageStrictMockTest.testVerify":476,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":215,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":295,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":290,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":6,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":500,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":148,"org.easymock.tests.LimitationsTest.abstractClass":420,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":127,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":165,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":149,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":35,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":268}}]
