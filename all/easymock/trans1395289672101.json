[{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,183,184,184,185,186,187,188,189,190,191,192,193,194,195,196,197,1,198,2,3,4,5,6,7,199,8,10,11,200,12,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[152,205,252,296],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:83","failures":[36,39,330,120,121,124,125,162,163,170,171,223,294,300,301],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"failures":[331],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[332,333,13,334,335,336,337,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,338,339,340,34,35,36,37,38,39,40,41,42,341,342,343,344,345,43,44,45,46,47,48,49,50,51,52,53,54,55,56,346,347,348,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,349,350,351,352,82,83,353,354,84,85,86,87,355,88,89,90,356,357,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,358,112,113,114,115,116,117,359,360,361,118,119,120,121,122,123,124,125,126,362,363,364,127,128,365,129,366,367,368,130,131,132,133,134,369,370,371,372,373,374,135,136,137,375,138,139,140,141,142,143,144,145,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,146,147,148,149,150,151,152,153,154,155,156,157,400,158,401,159,160,402,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,403,404,405,180,181,182,183,183,184,184,185,186,187,188,189,190,191,192,193,194,195,196,197,1,198,2,3,4,5,6,7,199,8,10,11,200,12,201,202,203,204,205,206,207,208,406,407,209,210,211,212,408,213,214,409,219,220,221,222,223,224,225,226,410,227,228,229,230,411,412,413,414,415,416,231,417,418,419,420,421,422,423,232,424,233,425,426,427,428,429,430,234,431,432,235,433,434,236,237,238,239,435,240,241,242,243,244,245,436,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,437,263,264,265,438,266,267,268,269,270,271,272,273,439,440,441,442,443,274,444,445,446,447,448,449,275,276,277,279,280,282,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,450,305,451,452,453,454,308,309,310,311,314,455,315,316,317,456,319,322,323,324,325,326,457,458,327,328,329],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[459,288,289,290],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:708","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"failures":[460,461,147,185,186,202,209,212,462,409,215,216,217,218,412,413,414,416,231,417,418,419,422,463,464,465,439,440,441,443,274,444,445,446,449,278,281,283,306],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[459,288,289,290],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:288","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[378,438],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[459,288,289,290],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"failures":[236,253,256,466],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:183","sourceCode":"throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" seems to have vanished\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:104","sourceCode":"throw new java.lang.IllegalStateException(java.lang.String)","type":"CtThrowImpl"},"failures":[436],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"methodName":"message"}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[236,253,259,331],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[332,467,339,353,354,370,374,180,181,182,183,183,184,184,201,204,205,206,207,208,407,210,211,408,462,410,468,469,470,423,471,472,232,473,424,233,463,425,426,474,464,427,428,429,430,234,465,431,475,476,432,235,433,434,288,290,451,452,306,309,477,313,314,478,455,315,316,317,318,319,320,479,321,323,324],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"searchType"}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[326],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1543","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"failures":[480,481],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[332,333,13,334,467,339,352,82,83,353,354,357,91,92,93,94,95,96,97,98,362,363,364,127,128,129,368,134,369,370,371,372,373,374,172,180,181,182,183,183,184,184,201,202,204,205,206,207,208,406,407,209,210,211,212,408,462,226,410,482,423,471,472,232,473,424,233,463,425,426,474,464,427,428,429,430,234,465,431,475,476,432,235,433,434,288,290,451,452,306,307,308,309,311,312,313,483,314,478,455,315,316,317,318,456,319,320,484,321,322,323,324],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"result","name":"name","method":"method","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[14,15,18,20,21,22,23,25,26,27,28,30,31,32,33,39,40,45,62,63,66,68,69,70,71,73,74,75,76,78,79,80,81,84,85,86,87,101,103,118,119,122,123,163,169,196,197,198,2,4,5,7,199,200,12,213,223,224,236,237,238,240,241,242,243,248,249,250,251,253,254,261,262,266,269,270,271,293,296,297,298,302,304,305],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[13,336,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,37,39,40,57,58,61,349,350,351,82,353,84,85,86,87,99,100,101,102,104,105,106,107,108,109,110,118,119,122,123,126,127,128,129,161,169,171,173,174,175,176,177,178,179,180,188,189,191,192,194,1,198,3,4,7,199,8,10,200,12,201,202,203,204,205,206,208,210,211,212,214,221,223,224,226,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,259,260,261,262,264,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,288,289,291,292,293,295,297,298,299,302,303,306,307,308,309,310,311,312,314,315,317,318,320,324,326,328],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1291","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"org.easymock.internal.AndroidSupport.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"org.easymock.internal.AndroidSupport.boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"failures":[238,245,250,262,485],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[12],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[37,118,122,123,126,169,171,221,291,297,298,303,326],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[486,487,488],"status":-1,"binaryOperator":"java.lang.String == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[369,373],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[332,333,13,334,335,336,337,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,467,489,490,338,460,339,461,340,34,35,36,37,38,39,40,41,42,341,342,343,344,345,43,44,45,46,47,48,49,50,51,52,53,54,55,56,346,347,348,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,349,350,351,352,82,83,353,354,84,85,86,87,355,88,89,90,356,357,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,358,112,113,114,115,116,117,359,360,361,118,119,120,121,122,123,124,125,126,362,363,364,127,128,365,129,366,367,368,130,131,132,133,491,134,369,370,371,372,373,492,374,135,136,137,375,138,139,140,141,142,143,144,145,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,146,147,148,149,150,151,152,153,154,155,156,157,400,158,401,159,160,402,161,162,163,164,165,166,167,168,169,170,171,172,173,174,493,175,176,177,178,179,403,404,405,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,1,198,2,3,4,5,6,7,199,8,10,11,200,12,201,202,203,204,205,206,207,486,208,406,407,209,210,211,212,408,462,213,214,409,215,216,217,218,219,220,221,222,223,224,225,226,410,494,227,228,229,230,411,412,413,414,415,416,231,417,418,419,420,421,422,423,471,472,232,473,424,233,463,425,426,474,464,427,428,429,430,234,465,431,475,476,432,235,433,434,236,237,238,239,435,240,241,242,243,244,245,436,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,437,263,264,265,438,266,495,496,267,268,269,270,271,272,273,439,440,441,442,443,274,444,445,446,447,448,449,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,450,305,451,497,498,499,452,453,454,306,307,308,309,500,310,311,312,501,313,502,314,478,503,455,315,316,317,504,318,505,456,319,320,506,321,322,323,324,325,326,457,458,327,328,329],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:194","failures":[410,507,508,509,510,511,504],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:93","sourceCode":"while (java.lang.Class<?> != null) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    java.lang.reflect.Method java.lang.reflect.Method = null;\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n            continue;\n        } \n        if (java.lang.reflect.Method.isBridge()) {\n            continue;\n        } \n        if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n            if (java.lang.Class<?>[] == null) {\n                if (java.lang.reflect.Method != null) {\n                    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n                } \n                java.lang.reflect.Method = java.lang.reflect.Method;\n            } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n                return java.lang.reflect.Method;\n            } \n        } \n    }\n    if (java.lang.reflect.Method != null) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:412","sourceCode":"while ((!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) && (java.lang.Class<?> != null)) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.isInterface() ? java.lang.Class<?>.getMethods() : java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n            return java.lang.reflect.Method;\n        } \n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[459,288,289,290],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[158,190,197,304,305,326,327,329],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","failures":[1,2,10,238,239,241,243,244,436,255,260],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1555","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":239,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":118,"org.easymock.tests2.UsageTest.argumentsOrdered":301,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":285,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":444,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":386,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":296,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":186,"org.easymock.tests2.DelegateToTest.testReturnException":263,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":113,"org.easymock.tests.MockingTest.testPartialClassMocking":127,"org.easymock.tests.MockClassControlTest.testToString":93,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":409,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":336,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":462,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":395,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":474,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":62,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":233,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":268,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":507,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":245,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":57,"org.easymock.tests2.UsageTest.wrongArguments":294,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":422,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":132,"org.easymock.samples.ExampleTest.answerVsDelegate":190,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":339,"org.easymock.tests2.UsageConstraintsTest.testNull":241,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":367,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":204,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":98,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":284,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":468,"org.easymock.tests2.CaptureTest.testPrimitive":3,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":61,"org.easymock.tests.UsageTest.moreThanOneArgument":119,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":81,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":203,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":166,"org.easymock.tests.UsageTest.argumentsOrdered":125,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":341,"org.easymock.tests.UsageVarargTest.varargIntAccepted":137,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":391,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":175,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":511,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":313,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":498,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":448,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":316,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":378,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":179,"org.easymock.tests.ReplayStateInvalidUsageTest.times":154,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":231,"org.easymock.tests2.DependencyTest.testClassMocking":495,"org.easymock.tests2.AnswerTest.answer":326,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":393,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":230,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":490,"org.easymock.tests2.CaptureTest.testAnd":1,"org.easymock.tests2.UsageTest.strictResetToDefault":292,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":503,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":209,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":165,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":86,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":279,"org.easymock.tests2.DelegateToTest.testDelegate":266,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":345,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":77,"org.easymock.tests.LimitationsTest.mockFinalMethod":334,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":116,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":56,"org.easymock.tests2.DependencyTest.testClassMockingSupport":496,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":346,"org.easymock.tests2.CaptureTest.testCapture1_2446744":4,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":486,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":75,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":228,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":148,"org.easymock.tests.UsageThrowableTest.throwError":102,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":460,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":493,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":449,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":434,"org.easymock.samples.PartialClassMockTest.testGetArea":180,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":149,"org.easymock.tests.MockingTest.testInterfaceMocking":365,"org.easymock.tests2.CompareToTest.testLessOrEqual":331,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":176,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":464,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":63,"org.easymock.tests2.UsageTest.niceToStrict":295,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":357,"org.easymock.tests2.ThreadingTest.testChangeDefault":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":376,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":315,"org.easymock.tests2.MockBuilderTest.testCreateMock":319,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":475,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":419,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":71,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":280,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":489,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":361,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":43,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":130,"org.easymock.tests.UsageOverloadedMethodTest.overloading":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":432,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":430,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":160,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":250,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":99,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":25,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":249,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":8,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":375,"org.easymock.tests.MockClassControlTest.testEquals":97,"org.easymock.tests2.EasyMockSupportClassTest.testAll":232,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":83,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":79,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":469,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":54,"org.easymock.tests2.CaptureTest.testCaptureAll":198,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":229,"org.easymock.tests.MockNameTest.defaultName":400,"org.easymock.tests2.UsageConstraintsTest.testMatches":251,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":167,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":146,"org.easymock.samples.ExampleTest.voteForRemovals":194,"org.easymock.tests.UsageVarargTest.allKinds":145,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":169,"org.easymock.samples.BasicClassMockTest.testPrintContent":182,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":55,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":108,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":219,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":445,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":438,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":117,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":492,"org.easymock.tests2.UsageConstraintsTest.greaterThan":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":473,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":85,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":212,"org.easymock.samples.ExampleTest.voteForRemoval":191,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":374,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":408,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":270,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":479,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":461,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":499,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":207,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":172,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":291,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":456,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":383,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":277,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":104,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":471,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":112,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":437,"org.easymock.tests2.CaptureTest.testCaptureFirst":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":382,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":278,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":303,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":162,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":21,"org.easymock.tests2.CaptureTest.testCapture2_2446744":200,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":272,"org.easymock.tests2.UsageTest.moreThanOneArgument":293,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":394,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":320,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":144,"org.easymock.tests.GenericTest.testBridgedEquals":354,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":50,"org.easymock.tests.UsageExpectAndReturnTest.longType":17,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":52,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":275,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":484,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":80,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":258,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":358,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":78,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":404,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":164,"org.easymock.tests.UsageCallCountTest.tooManyCalls":51,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":45,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":476,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":22,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":421,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":67,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":107,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":307,"org.easymock.tests.MockingTest.testNiceClassMocking":368,"org.easymock.tests.MockingTest.testClassMocking":363,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":483,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":44,"org.easymock.tests2.UsageConstraintsTest.testContains":248,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":324,"org.easymock.tests2.UsageConstraintsTest.testFind":240,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":101,"org.easymock.tests.MockTypeTest.fromEasyMockClass":338,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":34,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":305,"org.easymock.tests.UsageExpectAndReturnTest.object":24,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":208,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":420,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":283,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":508,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":139,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":90,"org.easymock.tests.UsageTest.exactCallCountByLastCall":126,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":110,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":381,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":335,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":342,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":410,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":135,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":30,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":159,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":440,"org.easymock.tests.MockClassControlTest.testHashCode":96,"org.easymock.tests2.EasyMockSupportTest.testVerify":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":428,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":343,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":158,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":360,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":227,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":411,"org.easymock.tests.UsageVarargTest.varargCharAccepted":138,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":491,"org.easymock.tests2.CaptureTest.testCaptureMultiple":0,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":220,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":399,"org.easymock.tests2.UsageTest.openCallCountByLastCall":297,"org.easymock.tests.DefaultClassInstantiatorTest.object":134,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":286,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":359,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":88,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":429,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":69,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":470,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":105,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":415,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":439,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":95,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":210,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":68,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":31,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":403,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":94,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":235,"org.easymock.tests2.UsageTest.resumeIfFailure":302,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":467,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":497,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":115,"org.easymock.tests2.StubTest.stubWithReturnValue":214,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":504,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":23,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":259,"org.easymock.tests2.SerializationTest.testAllMockedMethod":290,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":392,"org.easymock.samples.SupportTest.voteForRemovals":188,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":352,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":442,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":74,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":459,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":398,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":457,"org.easymock.tests.UsageExpectAndThrowTest.object":72,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":337,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":256,"org.easymock.tests2.DelegateToTest.testWrongClass":265,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":173,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":174,"org.easymock.samples.ConstructorCalledMockTest.testTax":183,"org.easymock.tests.UsageStrictMockTest.range":39,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":453,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":282,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":306,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":73,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":423,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":156,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":124,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":131,"org.easymock.tests2.CaptureTest.testCaptureNone":199,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":351,"org.easymock.tests.UsageUnorderedTest.message":163,"org.easymock.tests.UsageVerifyTest.twoReturns":171,"org.easymock.tests.UsageVarargTest.varargByteAccepted":143,"org.easymock.tests2.ThreadingTest.testThreadSafe":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":465,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":48,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":181,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":356,"org.easymock.tests2.CaptureTest.testCapture_2617107":2,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":348,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":396,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":60,"org.easymock.tests2.UsageConstraintsTest.any":246,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":153,"org.easymock.tests2.StubTest.stub":213,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":405,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":397,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":114,"org.easymock.tests.UsageExpectAndThrowTest.longType":65,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":372,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":152,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":222,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":274,"org.easymock.tests2.SerializationTest.testClass":288,"org.easymock.tests.LimitationsTest.mockNativeMethod":13,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":33,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":353,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":414,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":225,"org.easymock.tests2.NameTest.nameForMocksControl":218,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":416,"org.easymock.tests2.MockedExceptionTest.testMockedException":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":424,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":123,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":450,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":129,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":66,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":201,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":318,"org.easymock.tests.MockingTest.testNicePartialClassMocking":128,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":206,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":412,"org.easymock.tests2.CaptureTest.testCaptureLast":7,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":347,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":244,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":312,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":257,"org.easymock.tests.MockingTest.testTwoMocks":364,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":501,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":14,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":70,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":300,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":261,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":488,"org.easymock.samples.ExampleTest.removeNonExistingDocument":195,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":418,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":150,"org.easymock.tests.UsageStrictMockTest.differentMethods":40,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":441,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":481,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":370,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":271,"org.easymock.tests2.MockBuilderTest.testCreateMockString":321,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":463,"org.easymock.tests.UsageExpectAndThrowTest.floatType":64,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":472,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":327,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":494,"org.easymock.tests.UsageVerifyTest.twoThrows":170,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":234,"org.easymock.samples.ExampleTest.voteAgainstRemoval":192,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":387,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":349,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":211,"org.easymock.tests.LimitationsTest.privateConstructor":333,"org.easymock.tests2.UsageConstraintsTest.testNotNull":260,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":109,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":322,"org.easymock.tests2.UsageTest.defaultResetToNice":299,"org.easymock.samples.ExampleTest.voteAgainstRemovals":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":388,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":29,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":413,"org.easymock.tests.UsageVarargTest.differentLength":140,"org.easymock.tests2.CallbackTest.callback":197,"org.easymock.tests2.UsageConstraintsTest.equals":435,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":406,"org.easymock.tests.UsageTest.openCallCountByLastCall":122,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":236,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":59,"org.easymock.tests.UsageCallCountTest.tooFewCalls":46,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":309,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":133,"org.easymock.tests.UsageThrowableTest.throwCheckedException":106,"org.easymock.tests.MockingTest.testStrictClassMocking":362,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":111,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":311,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":417,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":308,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":155,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":310,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":329,"org.easymock.tests2.CompareToTest.testGreateOrEqual":485,"org.easymock.tests.ObjectMethodsTest.testHashCode":89,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":510,"org.easymock.tests2.NameTest.nameForNiceMock":217,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":273,"org.easymock.tests2.DependencyTest.testInterfaceMocking":267,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":509,"org.easymock.samples.ExampleTest.addDocument":193,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":431,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":433,"org.easymock.tests2.DelegateToTest.testStubDelegate":264,"org.easymock.tests2.AnswerTest.stubAnswer":328,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":37,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":505,"org.easymock.tests.UsageVarargTest.varargLongAccepted":142,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":41,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":385,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":32,"org.easymock.tests.UsageExpectAndReturnTest.floatType":16,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":226,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":184,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":447,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":402,"org.easymock.tests.UsageThrowableTest.noUpperLimit":103,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":254,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":237,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":451,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":5,"org.easymock.tests2.SerializationTest.test":289,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":369,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":15,"org.easymock.tests2.UsageConstraintsTest.testSame":242,"org.easymock.samples.SupportTest.addDocument":187,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":500,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":425,"org.easymock.tests.GenericTest.testPackageScope":82,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":380,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":446,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":366,"org.easymock.tests2.NameTest.nameForMock":215,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":26,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":506,"org.easymock.tests2.UsageStrictMockTest.differentMethods":224,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":407,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":18,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":76,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":355,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":87,"org.easymock.tests2.MockedExceptionTest.testRealException":325,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":340,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":454,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":390,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":389,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":221,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":157,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":58,"org.easymock.tests2.NameTest.nameForStrictMock":216,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":455,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":304,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":205,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":452,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":255,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":371,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":314,"org.easymock.tests2.UsageStrictMockTest.range":223,"org.easymock.tests2.UsageConstraintsTest.lessThan":262,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":443,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":477,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":384,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":276,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":427,"org.easymock.tests2.CaptureTest.testCaptureRightOne":10,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":480,"org.easymock.tests2.UsageConstraintsTest.testOr":243,"org.easymock.tests.UsageRangeTest.combination":84,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":202,"org.easymock.tests.UsageTest.wrongArguments":121,"org.easymock.tests2.MockBuilderTest.testWithConstructor":502,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":426,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":92,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":19,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":27,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":377,"org.easymock.tests.UsageVarargTest.varargShortAccepted":141,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":373,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":49,"org.easymock.tests2.UsageConstraintsTest.cmpTo":247,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":458,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":379,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":298,"org.easymock.tests2.CaptureTest.testCaptureFromStub":11,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":147,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":478,"org.easymock.tests.UsageTest.unexpectedCallWithArray":120,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":36,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":47,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":28,"org.easymock.tests2.CaptureTest.testCapture":9,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":38,"org.easymock.tests2.UsageConstraintsTest.constraints":238,"org.easymock.samples.ExampleTest.addAndChangeDocument":196,"org.easymock.tests.UsageStrictMockTest.testVerify":42,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":185,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":35,"org.easymock.tests2.CompareToTest.testGreateThan":466,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":53,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":6,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":482,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":177,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":20,"org.easymock.tests.LimitationsTest.abstractClass":332,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":178,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":161,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":136,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":281}}]
