[{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[0,1,2,3],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:37","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(int.int, java.lang.Integer.java.lang.Integer)","type":"CtInvocationImpl"},"failures":[5,6,7,8,9,10,11,12,13],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[14,15,16,17,18],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,0,1,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,14,95,96,97,98,99,100,15,101,102,16,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,4,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,17,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,2,3,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[305],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:45","sourceCode":"return org.easymock.internal.matchers.CompareTo<T>.matchResult(((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Comparable<T>))","type":"CtReturnImpl"},"failures":[49,51,58,60,63,66,69,70,72,75,306,307,308,309,310,100],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[92,93],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1361","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:43","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"equals\", new java.lang.Class[]{ java.lang.Object.java.lang.Object })","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:52","sourceCode":"return int == int","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:193","sourceCode":"if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[5,6,8,9,10,11,12],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"minimum":"i","maximum":"i"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[20,37,38,90,91,93,165,301],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[5,6,8,9,10,13],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:613","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[59,60,217,218],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"failures":[311,312],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[313],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"m","method":"m"}},{"transplant":{"position":"org.easymock.internal.Invocation:187","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"failures":[314,315],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[51,57,76,78,86],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[51,52,53,54,55,56,57,58,316,59,68,69,73,74,76,77,78,79,86,87],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[26,26,27,27,29,33,34,94,14,96,97,98,99,100,15,101,102,16,103,122,317,123,318,124,125,126,127,128,129,319,130,145,148,149,17,150,152,153,154,156,157,158,159,160,320,321,322,172,173,323,324,219,220,221,325,326,226,327,259],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1163","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:592","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[59,217],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[328],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[68],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:215","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[29,94,95,96,98,103,107,123,124,126,127,129,148,149,17,150,151,152,153,157,158,159,160,162,219,220,221,226,255],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[329],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"failures":[26,27,330,331,332,333],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":52,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":234,"org.easymock.tests2.UsageTest.argumentsOrdered":140,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":119,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":208,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":135,"org.easymock.tests2.StubTest.stubWithReturnValue":167,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":6,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":194,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":72,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":30,"org.easymock.tests2.SerializationTest.testAllMockedMethod":156,"org.easymock.tests2.DelegateToTest.testReturnException":161,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":206,"org.easymock.tests.MockingTest.testPartialClassMocking":219,"org.easymock.samples.SupportTest.voteForRemovals":32,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":328,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":284,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":272,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":158,"org.easymock.tests.UsageExpectAndThrowTest.object":282,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":69,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":36,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":8,"org.easymock.tests2.DelegateToTest.testWrongClass":163,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":265,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":266,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":58,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":260,"org.easymock.tests2.UsageTest.wrongArguments":134,"org.easymock.tests.UsageStrictMockTest.range":2,"org.easymock.samples.ConstructorCalledMockTest.testTax":26,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":170,"org.easymock.samples.ExampleTest.answerVsDelegate":20,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":116,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":326,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":148,"org.easymock.tests2.UsageConstraintsTest.testNull":54,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":283,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":96,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":118,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":126,"org.easymock.tests2.CaptureTest.testPrimitive":79,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":264,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":291,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":240,"org.easymock.tests.UsageTest.moreThanOneArgument":235,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":95,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":169,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":176,"org.easymock.tests2.CaptureTest.testCaptureNone":84,"org.easymock.tests.UsageUnorderedTest.message":292,"org.easymock.tests.UsageVerifyTest.twoReturns":216,"org.easymock.tests.UsageVarargTest.varargByteAccepted":251,"org.easymock.tests2.ThreadingTest.testThreadSafe":104,"org.easymock.tests.UsageTest.argumentsOrdered":241,"org.easymock.tests.UsageVarargTest.varargIntAccepted":245,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":230,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":33,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":254,"org.easymock.tests2.CaptureTest.testCapture_2617107":78,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":12,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":122,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":263,"org.easymock.tests2.UsageConstraintsTest.any":59,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":125,"org.easymock.tests2.StubTest.stub":166,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":258,"org.easymock.tests.UsageExpectAndThrowTest.longType":275,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":207,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":311,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":42,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":147,"org.easymock.tests2.SerializationTest.testClass":154,"org.easymock.tests.LimitationsTest.mockNativeMethod":226,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":48,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":323,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":204,"org.easymock.tests2.AnswerTest.answer":90,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":316,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":47,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":322,"org.easymock.tests2.CaptureTest.testAnd":76,"org.easymock.tests2.UsageTest.strictResetToDefault":132,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":15,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":43,"org.easymock.tests2.MockedExceptionTest.testMockedException":144,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":175,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":212,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":113,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":239,"org.easymock.tests2.DelegateToTest.testDelegate":164,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":276,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":221,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":94,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":127,"org.easymock.tests.MockingTest.testNicePartialClassMocking":220,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":287,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":98,"org.easymock.tests2.CompareToTest.testCompareEqual":308,"org.easymock.tests2.CaptureTest.testCaptureLast":83,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":209,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":57,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":153,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":271,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":70,"org.easymock.tests.MockingTest.testTwoMocks":324,"org.easymock.tests2.CaptureTest.testCapture1_2446744":80,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":18,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":185,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":285,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":280,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":45,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":139,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":74,"org.easymock.tests.UsageThrowableTest.throwError":293,"org.easymock.tests.UsageStrictMockTest.differentMethods":3,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":106,"org.easymock.tests2.MockBuilderTest.testCreateMockString":130,"org.easymock.tests.UsageExpectAndThrowTest.floatType":274,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":178,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":65,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":91,"org.easymock.tests.UsageVerifyTest.twoThrows":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":159,"org.easymock.samples.PartialClassMockTest.testGetArea":29,"org.easymock.tests2.CompareToTest.testLessOrEqual":310,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":255,"org.easymock.samples.ExampleTest.voteAgainstRemoval":22,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":329,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":102,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":273,"org.easymock.tests2.UsageTest.niceToStrict":4,"org.easymock.tests2.UsageConstraintsTest.testNotNull":73,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":300,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":143,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":124,"org.easymock.tests2.MockBuilderTest.testCreateMock":128,"org.easymock.tests2.UsageTest.defaultResetToNice":138,"org.easymock.samples.ExampleTest.voteAgainstRemovals":19,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":200,"org.easymock.tests.UsageVarargTest.differentLength":248,"org.easymock.tests2.CallbackTest.callback":165,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":330,"org.easymock.tests.UsageTest.openCallCountByLastCall":238,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":281,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":114,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":49,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":262,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":168,"org.easymock.tests.UsageCallCountTest.tooFewCalls":228,"org.easymock.tests.UsageOverloadedMethodTest.overloading":224,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":303,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":63,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":223,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":196,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":150,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":62,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":85,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":171,"org.easymock.tests.UsageThrowableTest.throwCheckedException":297,"org.easymock.tests2.EasyMockSupportClassTest.testAll":157,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":173,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":289,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":320,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":269,"org.easymock.tests2.CaptureTest.testCaptureAll":77,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":46,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":218,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":152,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":17,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":305,"org.easymock.tests2.UsageConstraintsTest.testMatches":64,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":151,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":93,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":177,"org.easymock.tests2.CompareToTest.testGreateOrEqual":309,"org.easymock.samples.ExampleTest.voteForRemovals":24,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":11,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":108,"org.easymock.tests.UsageVarargTest.allKinds":253,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":214,"org.easymock.tests2.DependencyTest.testInterfaceMocking":35,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":10,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":270,"org.easymock.samples.BasicClassMockTest.testPrintContent":34,"org.easymock.samples.ExampleTest.addDocument":23,"org.easymock.tests2.DelegateToTest.testStubDelegate":162,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":299,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":39,"org.easymock.tests2.AnswerTest.stubAnswer":92,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":315,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":210,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":182,"org.easymock.tests2.UsageConstraintsTest.greaterThan":66,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":13,"org.easymock.tests.UsageVarargTest.varargLongAccepted":250,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":16,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":184,"org.easymock.samples.ExampleTest.voteForRemoval":21,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":105,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":203,"org.easymock.tests.UsageExpectAndReturnTest.floatType":187,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":99,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":103,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":27,"org.easymock.tests.UsageThrowableTest.noUpperLimit":294,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":67,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":259,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":50,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":131,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":81,"org.easymock.tests2.SerializationTest.test":155,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":312,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":111,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":295,"org.easymock.tests2.UsageConstraintsTest.testSame":55,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":186,"org.easymock.samples.SupportTest.addDocument":31,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":205,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":314,"org.easymock.tests2.CaptureTest.testCaptureFirst":89,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":112,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":142,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":304,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":192,"org.easymock.tests.GenericTest.testPackageScope":172,"org.easymock.tests2.CaptureTest.testCapture2_2446744":88,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":107,"org.easymock.tests2.UsageTest.moreThanOneArgument":133,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":129,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":252,"org.easymock.tests.GenericTest.testBridgedEquals":313,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":232,"org.easymock.tests.UsageExpectAndReturnTest.longType":188,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":267,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":109,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":319,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":290,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":197,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":71,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":333,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":288,"org.easymock.tests2.UsageStrictMockTest.differentMethods":1,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":174,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":189,"org.easymock.tests.UsageCallCountTest.tooManyCalls":233,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":286,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":213,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":227,"org.easymock.tests2.MockedExceptionTest.testRealException":146,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":193,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":7,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":277,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":41,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":298,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":261,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":149,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":317,"org.easymock.tests2.UsageConstraintsTest.testContains":61,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":145,"org.easymock.tests2.UsageConstraintsTest.testFind":53,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":225,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":37,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":97,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":38,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":179,"org.easymock.tests.UsageExpectAndReturnTest.object":195,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":68,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":100,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":123,"org.easymock.tests2.UsageStrictMockTest.range":0,"org.easymock.tests2.UsageConstraintsTest.lessThan":75,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":117,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":247,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":9,"org.easymock.tests.UsageTest.exactCallCountByLastCall":242,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":217,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":110,"org.easymock.tests2.CaptureTest.testCaptureRightOne":86,"org.easymock.tests2.UsageConstraintsTest.testOr":56,"org.easymock.tests.UsageRangeTest.combination":211,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":5,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":243,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":201,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":14,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":302,"org.easymock.tests.UsageTest.wrongArguments":237,"org.easymock.tests2.MockBuilderTest.testWithConstructor":331,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":327,"org.easymock.tests2.EasyMockSupportTest.testVerify":121,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":190,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":198,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":301,"org.easymock.tests.UsageVarargTest.varargShortAccepted":249,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":231,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":44,"org.easymock.tests2.UsageConstraintsTest.cmpTo":60,"org.easymock.tests.UsageVarargTest.varargCharAccepted":246,"org.easymock.tests2.CompareToTest.testLessThan":306,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":40,"org.easymock.tests2.UsageTest.openCallCountByLastCall":136,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":137,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":120,"org.easymock.tests2.CaptureTest.testCaptureFromStub":87,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":318,"org.easymock.tests.UsageTest.unexpectedCallWithArray":236,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":279,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":296,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":181,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":229,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":332,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":199,"org.easymock.tests2.UsageConstraintsTest.constraints":51,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":101,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":183,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":278,"org.easymock.samples.ExampleTest.addAndChangeDocument":25,"org.easymock.tests.CapturesMatcherTest.test":222,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":202,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":160,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":180,"org.easymock.tests2.CompareToTest.testGreateThan":307,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":268,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":82,"org.easymock.tests2.UsageTest.resumeIfFailure":141,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":321,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":256,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":325,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":191,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":257,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":244,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":115}}]
