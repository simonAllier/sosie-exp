[{"position":"org.easymock.internal.LastControl:70","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\")","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"failures":[35,37],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1373","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[0,1,2,3,69,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,70,71,72,73,74,75,76,28,29,30,31,32,33,34,35,36,37,38,39,40,41,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,42,43,121,122,44,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,45,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,46,169,47,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,48,190,191,192,193,194,195,196,197,49,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,50,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,51,52,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,53,54,55,56,57,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,58,59,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,60,61,62,63,64,336,337,338,339,65,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,66,374,375,376,377,378,379,380,381,382,383,384,67,68,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[9,15,27,453],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"failures":[454],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"method"}},{"transplant":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:61","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>);\n} ","type":"CtIfImpl"},"failures":[2,3,5,7,8,25,28,29,30,35,36,38,41,54,55,56,66],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ErrorMessage:50","failures":[124,50,277,278,299,455,456],"status":-1,"binaryOperator":"int == 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[27,457],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:130","failures":[220],"status":-1,"binaryOperator":"(((!(java.lang.reflect.Method.isBridge())) && (!(java.lang.reflect.Method.equals(java.lang.reflect.Method)))) && (java.lang.reflect.Method.getName().equals(java.lang.reflect.Method.getName())))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,71,72,73,75,76,28,29,30,31,32,33,34,35,36,37,38,39,40,41,77,79,80,82,85,86,87,92,93,99,106,107,108,109,110,111,112,114,115,116,117,118,42,43,121,122,44,123,124,125,126,127,128,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,45,152,160,167,168,46,47,172,186,187,188,189,48,190,191,192,193,218,219,221,50,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,51,52,244,247,53,54,55,56,57,276,277,278,289,290,291,292,294,295,296,297,58,59,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,325,327,328,330,331,332,333,334,335,60,61,62,63,64,336,337,338,339,65,340,341,343,344,345,347,348,362,363,364,365,367,368,369,370,371,372,373,66,383,384,67,68,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,409,410,439,440,441,442,443,444,446,447,448,449,450,451,452],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"position":"org.easymock.EasyMock:1039","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[49],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[44,125,126,129,276,277,278,59,300,301,328,350,361],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"mock"}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"failures":[458],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"failures":[35,37,459],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:51","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,70,71,72,73,74,75,76,28,29,30,31,32,33,34,35,36,37,38,39,40,41,77,80,82,83,84,85,86,87,88,89,90,91,92,99,100,106,107,108,109,110,111,112,113,114,115,116,117,118,42,43,121,122,44,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,142,160,161,167,168,46,47,172,186,187,188,189,48,190,191,192,193,210,211,212,213,214,215,216,50,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,51,52,239,240,242,243,245,246,248,53,54,55,56,57,271,272,273,274,275,276,277,278,286,287,289,290,291,292,293,294,295,296,297,58,59,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,327,328,329,330,331,332,333,334,335,60,61,62,63,64,336,337,338,339,65,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,363,364,365,367,368,369,370,371,372,373,66,374,375,376,377,67,68,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,406,408,409,410,411,412,429,435,437,439,440,441,442,443,444,446,447,448,449,450],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"position":"org.easymock.internal.matchers.Compare:52","failures":[17],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:135","sourceCode":"java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:127","sourceCode":"try {\n    java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n}","type":"CtTryImpl"},"failures":[460,461],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[99,44,124,125,129,130,136,137,160,196,50,239,243,245,248,276,277,278,58,59,299,300,328,329,330,333,334,359,360,437],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"proxy":"proxy"}},{"position":"org.easymock.internal.Range:44","failures":[0,1,2,3,69,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,70,71,72,73,74,75,76,28,29,30,31,32,33,34,35,36,37,38,39,40,41,77,78,462,79,463,80,464,465,81,82,83,84,85,86,87,88,89,90,91,466,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,42,43,121,122,44,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,45,467,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,46,169,47,170,171,468,172,469,173,174,175,176,470,471,177,472,473,178,474,179,180,181,182,183,184,185,475,476,477,478,479,186,187,188,189,48,190,191,192,193,194,480,481,482,195,196,197,49,198,483,199,200,484,201,202,203,204,485,205,486,487,206,207,488,208,209,210,211,212,213,214,215,216,217,218,219,220,221,50,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,51,52,238,489,490,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,53,54,55,56,57,271,272,273,274,275,276,277,278,279,280,281,491,492,282,493,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,58,59,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,60,61,62,63,64,336,337,338,339,65,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,494,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,66,374,375,376,377,378,379,380,381,382,383,384,67,68,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,495,496,439,440,441,442,443,444,445,446,447,448,449,450,451,452],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,70,71,72,73,74,75,76,28,29,30,31,32,33,34,35,36,37,38,39,40,41,77,78,462,79,80,464,465,82,83,84,85,86,87,88,89,90,91,466,92,93,99,106,107,108,109,110,111,112,113,114,115,116,117,118,121,122,44,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,45,149,150,151,152,160,167,168,46,47,172,174,179,185,477,186,187,188,189,190,191,192,193,198,199,202,203,204,205,206,207,208,210,211,212,213,214,215,216,218,219,220,50,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,51,52,245,246,247,251,259,260,261,262,263,264,265,266,267,268,269,270,53,54,55,56,57,271,272,273,274,275,276,277,278,281,491,492,493,286,287,288,289,290,291,292,293,294,295,296,297,58,59,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,325,327,328,329,330,331,332,333,334,335,60,61,62,63,64,336,337,338,339,65,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,362,363,364,365,367,368,369,370,371,372,373,66,374,375,376,377,378,379,380,381,382,383,384,67,68,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,406,408,409,410,411,412,429,435,438,495,495,496,496,439,440,441,442,443,444,445,446,447,448,449,450,451,452],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[497],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1647","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:682","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:786","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"this.org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[17,132,144,265],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","threadSafe":"value"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:411","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:253","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"cls"}},{"transplant":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:45","sourceCode":"return org.easymock.internal.matchers.CompareTo<T>.matchResult(((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Comparable<T>))","type":"CtReturnImpl"},"failures":[0,2,9,12,15,18,21,22,24,27,457,458,454,453,498,45],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:222","failures":[346,349,359,360],"status":-1,"binaryOperator":"(\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[499,500,501,502,503,504,505,462,465,81,478,506,483,484,485,507,488],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"paramType"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:357","sourceCode":"java.lang.reflect.Type = java.lang.reflect.Type","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:115","sourceCode":"return org.easymock.IAnswer<?>.toString()","type":"CtReturnImpl"},"failures":[508,509,510],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[17,132,144],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:572","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:42","sourceCode":"if (org.easymock.internal.IMocksBehavior.isThreadSafe()) {\n    java.util.concurrent.locks.ReentrantLock.lock();\n    try {\n        return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n    } finally {\n        java.util.concurrent.locks.ReentrantLock.unlock();\n    }\n} ","type":"CtIfImpl"},"failures":[1,3,5,7,9,12,14,16,18,20,22,24,26,70,73,76,29,31,33,35,37,39,41,78,79,464,82,86,88,90,93,106,108,110,111,113,115,117,118,44,124,126,128,130,131,132,133,135,137,139,141,142,144,145,45,149,151,152,167,46,172,179,477,188,190,192,199,203,205,207,210,220,222,224,226,228,230,232,234,236,51,245,55,57,272,274,276,277,278,281,492,290,292,294,296,58,298,300,304,308,310,312,315,318,320,322,328,330,332,334,60,62,64,337,339,340,342,344,346,349,352,356,358,363,369,66,68,386,390,392,394,397,400,402,404,495,495,440,442,445,447,451],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[8],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:136","failures":[0,1,4,5,6,7,13,15,16,18,19,25,26,27,39,44,233,234,235,236,237,51,52,53,54,57,59,60,61,62,63,64,67,495,495,496,496],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:55","sourceCode":"try {\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object);\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)));\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[77,78,462,79,464,465,466,93,140,141,143,144,145,146,45,149,150,151,152,154,172,174,179,185,477,192,198,199,200,202,203,204,205,206,207,208,218,219,220,221,238,241,249,281,491,492,493,325,362,377,378,379,380,381,382,383,384,438,495,495,496,496,451,452],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[44,124,125,129,511,512,513,514,515,516,50,276,277,278,59,299,300,328,346,349,350,351,359,360,517,518,519],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1445","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:40","failures":[44,124,125,129,511,512,513,514,515,520,516,50,276,277,278,58,59,299,300,328,329,359,360,521,517,518,519],"status":-1,"binaryOperator":"java.lang.Object instanceof java.lang.Character","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[522,523,506],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.Contains:40","failures":[524],"status":-1,"binaryOperator":"(\"contains(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:38","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[14],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"expected"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":3,"org.easymock.tests2.UsageTest.argumentsOrdered":137,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":327,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":116,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":100,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":423,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":132,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":448,"org.easymock.tests2.DelegateToTest.testReturnException":71,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":337,"org.easymock.tests.MockingTest.testPartialClassMocking":491,"org.easymock.tests.MockClassControlTest.testToString":379,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":209,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":406,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":432,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":471,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":174,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":303,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":43,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":9,"org.easymock.tests2.UsageTest.wrongArguments":130,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":53,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":166,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":357,"org.easymock.samples.ExampleTest.answerVsDelegate":440,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":241,"org.easymock.tests2.UsageConstraintsTest.testNull":5,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":284,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":143,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":384,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":115,"org.easymock.tests2.CaptureTest.testPrimitive":31,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":57,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":322,"org.easymock.tests.UsageTest.moreThanOneArgument":328,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":142,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":235,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":408,"org.easymock.tests.UsageTest.argumentsOrdered":334,"org.easymock.tests.UsageVarargTest.varargIntAccepted":365,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":516,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":428,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":60,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":198,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":481,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":104,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":203,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":415,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":64,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":160,"org.easymock.tests.ReplayStateInvalidUsageTest.times":267,"org.easymock.tests2.DependencyTest.testClassMocking":119,"org.easymock.tests2.AnswerTest.answer":82,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":430,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":91,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":490,"org.easymock.tests2.CaptureTest.testAnd":28,"org.easymock.tests2.UsageTest.strictResetToDefault":128,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":484,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":149,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":234,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":110,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":343,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":412,"org.easymock.tests2.DelegateToTest.testDelegate":75,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":318,"org.easymock.tests.LimitationsTest.mockFinalMethod":326,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":65,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":275,"org.easymock.tests2.DependencyTest.testClassMockingSupport":120,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":359,"org.easymock.tests2.CaptureTest.testCapture1_2446744":32,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":147,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":316,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":89,"org.easymock.tests.UsageThrowableTest.throwError":225,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":261,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":240,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":494,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":105,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":237,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":499,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":476,"org.easymock.samples.PartialClassMockTest.testGetArea":438,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":262,"org.easymock.tests.MockingTest.testInterfaceMocking":282,"org.easymock.tests2.CompareToTest.testLessOrEqual":498,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":61,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":353,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":177,"org.easymock.tests2.UsageTest.niceToStrict":131,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":249,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":304,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":522,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":413,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":202,"org.easymock.tests2.MockBuilderTest.testCreateMock":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":182,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":163,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":512,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":312,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":111,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":489,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":216,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":287,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":355,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":503,"org.easymock.tests.UsageOverloadedMethodTest.overloading":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":474,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":184,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":15,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":348,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":396,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":222,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":14,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":37,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":366,"org.easymock.tests2.EasyMockSupportClassTest.testAll":172,"org.easymock.tests.MockClassControlTest.testEquals":383,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":219,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":320,"org.easymock.tests2.CaptureTest.testCaptureAll":29,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":90,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":273,"org.easymock.tests.MockNameTest.defaultName":437,"org.easymock.tests2.UsageConstraintsTest.testMatches":16,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":236,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":259,"org.easymock.samples.ExampleTest.voteForRemovals":444,"org.easymock.tests.UsageVarargTest.allKinds":66,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":276,"org.easymock.samples.BasicClassMockTest.testPrintContent":452,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":274,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":231,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":121,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":101,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":74,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":340,"org.easymock.tests2.UsageConstraintsTest.greaterThan":18,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":469,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":342,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":152,"org.easymock.samples.ExampleTest.voteForRemoval":441,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":258,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":187,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":153,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":242,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":482,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":146,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":127,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":362,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":420,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":108,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":171,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":336,"org.easymock.tests2.CaptureTest.testCaptureFirst":41,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":70,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":419,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":109,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":139,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":351,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":392,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":189,"org.easymock.tests2.UsageTest.moreThanOneArgument":129,"org.easymock.tests2.CaptureTest.testCapture2_2446744":40,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":431,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":207,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":373,"org.easymock.tests.GenericTest.testBridgedEquals":221,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":504,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":501,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":294,"org.easymock.tests.UsageExpectAndReturnTest.longType":388,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":106,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":271,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":321,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":23,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":286,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":319,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":233,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":375,"org.easymock.tests.UsageCallCountTest.tooManyCalls":295,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":289,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":183,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":393,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":165,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":308,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":230,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":78,"org.easymock.tests.MockingTest.testNiceClassMocking":285,"org.easymock.tests.MockingTest.testClassMocking":280,"org.easymock.tests2.UsageConstraintsTest.testContains":13,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":288,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":192,"org.easymock.tests2.UsageConstraintsTest.testFind":4,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":224,"org.easymock.tests.MockTypeTest.fromEasyMockClass":239,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":47,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":296,"org.easymock.tests.UsageExpectAndReturnTest.object":395,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":45,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":164,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":114,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":368,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":247,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":505,"org.easymock.tests.UsageTest.exactCallCountByLastCall":335,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":67,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":418,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":409,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":405,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":478,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":401,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":363,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":347,"org.easymock.tests.ResultTest.createThrowResultToString":510,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":95,"org.easymock.tests.MockClassControlTest.testHashCode":382,"org.easymock.tests2.EasyMockSupportTest.testVerify":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":473,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":410,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":215,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":345,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":88,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":49,"org.easymock.tests.UsageVarargTest.varargCharAccepted":367,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":250,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":122,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":436,"org.easymock.tests2.UsageTest.openCallCountByLastCall":133,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":523,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":117,"org.easymock.tests.DefaultClassInstantiatorTest.object":251,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":214,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":245,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":519,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":178,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":310,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":228,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":158,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":94,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":150,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":381,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":309,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":402,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":374,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":514,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":185,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":380,"org.easymock.tests2.UsageTest.resumeIfFailure":138,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":238,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":480,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":339,"org.easymock.tests2.StubTest.stubWithReturnValue":168,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":485,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":394,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":24,"org.easymock.tests2.SerializationTest.testAllMockedMethod":93,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":429,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":520,"org.easymock.samples.SupportTest.voteForRemovals":450,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":217,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":97,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":315,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":435,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":83,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":407,"org.easymock.tests.UsageExpectAndThrowTest.object":313,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":21,"org.easymock.tests2.DelegateToTest.testWrongClass":73,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":51,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":52,"org.easymock.samples.ConstructorCalledMockTest.testTax":495,"org.easymock.tests.UsageStrictMockTest.range":299,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":196,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":113,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":77,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":502,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":314,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":170,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":269,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":333,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":356,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":521,"org.easymock.tests2.CaptureTest.testCaptureNone":36,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":354,"org.easymock.tests.UsageUnorderedTest.message":50,"org.easymock.tests.UsageVerifyTest.twoReturns":278,"org.easymock.tests.UsageVarargTest.varargByteAccepted":372,"org.easymock.tests2.ThreadingTest.testThreadSafe":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":180,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":292,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":451,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":248,"org.easymock.tests2.CaptureTest.testCapture_2617107":30,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":433,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":56,"org.easymock.tests2.UsageConstraintsTest.any":11,"org.easymock.tests2.StubTest.stub":167,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":266,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":434,"org.easymock.tests.UsageExpectAndThrowTest.longType":306,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":338,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":255,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":265,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":123,"org.easymock.tests2.SerializationTest.testClass":466,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":99,"org.easymock.tests.LimitationsTest.mockNativeMethod":325,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":404,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":220,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":157,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":126,"org.easymock.tests2.NameTest.nameForMocksControl":213,"org.easymock.tests2.MockedExceptionTest.testMockedException":191,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":173,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":332,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":493,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":169,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":307,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":140,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":205,"org.easymock.tests.MockingTest.testNicePartialClassMocking":492,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":145,"org.easymock.tests2.CompareToTest.testCompareEqual":454,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":155,"org.easymock.tests2.CaptureTest.testCaptureLast":35,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":360,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":465,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":8,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":22,"org.easymock.tests.MockingTest.testTwoMocks":281,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":81,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":385,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":311,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":136,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":26,"org.easymock.samples.ExampleTest.removeNonExistingDocument":445,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":162,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":263,"org.easymock.tests.UsageStrictMockTest.differentMethods":300,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":96,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":461,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":253,"org.easymock.tests2.ConstraintsToStringTest.andToString":515,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":188,"org.easymock.tests2.MockBuilderTest.testCreateMockString":208,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":175,"org.easymock.tests.UsageExpectAndThrowTest.floatType":305,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":468,"org.easymock.tests.ResultTest.createReturnResultToString":509,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":85,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":479,"org.easymock.tests.UsageVerifyTest.twoThrows":277,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":179,"org.easymock.tests.ResultTest.createDelegateResultToString":508,"org.easymock.samples.ExampleTest.voteAgainstRemoval":442,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":424,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":352,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":151,"org.easymock.tests.LimitationsTest.privateConstructor":324,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":500,"org.easymock.tests2.UsageConstraintsTest.testNotNull":25,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":190,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":232,"org.easymock.tests2.UsageTest.defaultResetToNice":135,"org.easymock.samples.ExampleTest.voteAgainstRemovals":439,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":425,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":400,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":156,"org.easymock.tests.UsageVarargTest.differentLength":369,"org.easymock.tests2.CallbackTest.callback":76,"org.easymock.tests2.UsageConstraintsTest.equals":69,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":467,"org.easymock.tests.UsageTest.openCallCountByLastCall":331,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":0,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":55,"org.easymock.tests.UsageCallCountTest.tooFewCalls":290,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":79,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":358,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":497,"org.easymock.tests.UsageThrowableTest.throwCheckedException":229,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":517,"org.easymock.tests.MockingTest.testStrictClassMocking":279,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":464,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":68,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":462,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":161,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":268,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":80,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":87,"org.easymock.tests2.CompareToTest.testGreateOrEqual":453,"org.easymock.tests.ObjectMethodsTest.testHashCode":246,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":48,"org.easymock.tests2.NameTest.nameForNiceMock":212,"org.easymock.tests2.DependencyTest.testInterfaceMocking":42,"org.easymock.samples.ExampleTest.addDocument":443,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":181,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":475,"org.easymock.tests2.DelegateToTest.testStubDelegate":72,"org.easymock.tests2.AnswerTest.stubAnswer":86,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":59,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":486,"org.easymock.tests.UsageVarargTest.varargLongAccepted":371,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":301,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":422,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":403,"org.easymock.tests.UsageExpectAndReturnTest.floatType":387,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":477,"org.easymock.tests2.ConstraintsToStringTest.orToString":511,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":496,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":103,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":19,"org.easymock.tests.UsageThrowableTest.noUpperLimit":226,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":349,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":1,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":194,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":33,"org.easymock.tests2.SerializationTest.test":92,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":252,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":386,"org.easymock.tests2.UsageConstraintsTest.testSame":6,"org.easymock.samples.SupportTest.addDocument":449,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":463,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":176,"org.easymock.tests.GenericTest.testPackageScope":218,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":411,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":417,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":102,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":283,"org.easymock.tests2.NameTest.nameForMock":210,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":397,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":488,"org.easymock.tests2.UsageStrictMockTest.differentMethods":125,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":148,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":389,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":317,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":244,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":344,"org.easymock.tests2.MockedExceptionTest.testRealException":193,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":427,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":197,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":518,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":426,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":44,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":54,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":270,"org.easymock.tests2.NameTest.nameForStrictMock":211,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":201,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":506,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":46,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":144,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":195,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":455,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":20,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":254,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":199,"org.easymock.tests2.UsageStrictMockTest.range":124,"org.easymock.tests2.UsageConstraintsTest.lessThan":27,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":98,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":421,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":472,"org.easymock.tests2.CaptureTest.testCaptureRightOne":38,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":460,"org.easymock.tests2.UsageConstraintsTest.testOr":7,"org.easymock.tests.UsageRangeTest.combination":341,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":141,"org.easymock.tests.UsageTest.wrongArguments":330,"org.easymock.tests2.MockBuilderTest.testWithConstructor":483,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":470,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":378,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":390,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":414,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":398,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":256,"org.easymock.tests.UsageVarargTest.varargShortAccepted":370,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":293,"org.easymock.tests2.UsageConstraintsTest.cmpTo":12,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":84,"org.easymock.tests2.CompareToTest.testLessThan":457,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":416,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":134,"org.easymock.tests2.CaptureTest.testCaptureFromStub":39,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":260,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":200,"org.easymock.tests.UsageTest.unexpectedCallWithArray":329,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":58,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":291,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":507,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":399,"org.easymock.tests2.CaptureTest.testCapture":459,"org.easymock.tests2.UsageConstraintsTest.constraints":2,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":298,"org.easymock.samples.ExampleTest.addAndChangeDocument":446,"org.easymock.tests2.ConstraintsToStringTest.notToString":513,"org.easymock.tests2.ConstraintsToStringTest.containsToString":524,"org.easymock.tests.UsageStrictMockTest.testVerify":302,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":447,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":297,"org.easymock.tests2.CompareToTest.testGreateThan":458,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":272,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":34,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":62,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":391,"org.easymock.tests.LimitationsTest.abstractClass":323,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":63,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":350,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":456,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":112,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":364}}]
