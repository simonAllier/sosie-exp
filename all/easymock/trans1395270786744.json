[{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[22,23,25,27,28,30,40,45,52,54,62],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:210","failures":[66,66,67,67,68,69,70,71,72,73],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1051","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[42],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[74],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[75,76,77],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:90","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[78],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:933","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[79,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[34],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:47","sourceCode":"this.T = T","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[80,52,53,54,55,56,57,58,59,61,62,63,64,65],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"failures":[81,82],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[83,84,85,86,87,88,89,90,91,92,93,94,95,66,66,67,67,96,97,98,81,99,100,101,102,103,104,105,106,82,107,108,109,110,111,112,113,19,114,115,116,117,118,119,120,121,71,122,72,123,124,125,126,127,128,129,130,131,132],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1530","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(int))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"failures":[60,62],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[133,134],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[66,66,67,67,135,70],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1149","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[136],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:217","failures":[137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,0,85,188,189,190,191,192,193,194,195,196,1,2,86,87,88,89,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,3,4,5,6,7,8,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,90,91,92,249,250,251,252,9,253,93,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,10,11,278,279,280,281,282,12,13,283,284,136,285,286,287,288,289,290,291,94,292,293,294,295,296,297,14,15,16,17,18,298,95,299,300,301,302,303,304,305,306,307,66,66,67,67,96,97,308,309,310,133,311,312,313,314,315,316,317,318,319,320,321,98,99,101,102,103,104,105,106,107,322,323,108,109,324,110,111,112,113,19,114,115,116,117,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,325,326,327,328,329,330,331,332,333,334,335,336,118,337,48,49,338,339,340,50,341,342,343,344,345,346,347,348,349,71,350,122,72,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,123,124,125,126,368,369,370,51,371,372,373,374,375,376,377,127,128,129,130,378,131,132,52,53,54,55,56,57,58,59,60,61,62,63,64,65],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[69,379,380,381,382,383,75,71,76,77,384,385,386,123,387,388,124,389,390,391,392,393,394,395,396,397,125,398,399,400,401,402,126,403,404],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:51","sourceCode":"if ((java.lang.String.length()) != 0) {\n    org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String);\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n} else {\n    java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection);\n}","type":"CtIfImpl"},"failures":[298,299,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if (java.lang.Object == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"position":"org.easymock.internal.Range:44","failures":[137,138,139,140,141,142,143,144,145,146,147,148,149,150,427,151,428,83,429,430,431,432,84,433,434,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,435,181,182,183,184,185,186,187,0,85,188,189,190,191,192,193,194,195,196,436,1,2,437,438,86,87,88,439,89,440,441,442,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,443,3,4,5,6,7,8,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,444,90,91,92,445,249,250,251,252,9,253,446,447,93,448,254,255,256,257,258,259,260,261,262,263,264,265,449,266,450,451,452,453,454,455,456,457,458,459,460,461,462,463,74,464,465,466,467,468,469,470,471,267,472,473,474,475,476,268,477,269,270,271,272,478,273,274,275,479,480,276,277,10,11,278,279,280,281,282,12,13,283,284,136,285,286,287,288,289,290,481,291,94,292,293,294,295,296,297,14,15,16,17,18,298,95,299,300,301,302,303,304,305,306,307,66,67,96,97,308,309,310,133,311,312,313,314,315,316,317,318,319,320,321,98,482,99,100,483,484,101,102,103,485,104,68,69,105,106,486,107,487,488,322,323,108,109,324,110,111,112,113,489,19,70,134,114,115,116,117,490,491,20,21,22,23,492,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,325,326,327,328,329,330,331,332,333,334,335,336,118,337,48,493,49,338,339,340,50,341,342,405,406,407,408,409,343,410,411,412,413,414,415,344,345,346,347,348,349,71,350,122,72,73,494,351,352,353,354,355,356,357,358,359,360,361,362,363,495,364,365,366,367,496,497,498,499,500,501,502,384,385,386,123,387,388,124,389,390,391,392,393,394,395,396,397,125,398,399,400,401,402,126,403,404,416,417,418,419,420,368,421,422,423,424,425,426,369,370,51,371,372,373,374,375,376,377,127,128,129,130,503,378,131,132,504,52,53,54,55,56,57,58,59,60,61,62,63,64,65],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:613","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[40],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:85","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[137,138,139,140,141,142,143,144,145,146,147,148,149,150,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,185,186,187,0,85,188,189,190,191,192,193,1,2,87,88,89,197,198,199,200,206,209,210,212,3,4,5,6,7,8,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,90,91,249,250,251,252,9,253,93,258,269,270,271,272,276,277,10,11,278,279,280,281,282,12,13,94,14,15,16,17,18,300,301,302,303,304,305,307,310,133,311,312,313,314,315,316,317,318,319,320,321,98,101,102,106,107,322,108,109,324,110,111,112,19,114,116,20,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,325,328,329,330,331,332,333,334,335,336,118,337,48,49,338,339,340,50,341,342,345,346,347,349,71,350,122,72,364,365,366,367,369,370,51,371,372,373,374,375,376,377,127,128,129,131,132,52,53,54,55,56,57,58,59,60,61,62,63,64,65],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[137,138,139,140,141,142,143,145,146,147,148,149,150,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,0,85,190,191,192,193,195,196,1,2,197,199,200,201,203,204,208,209,210,3,4,5,6,7,8,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,90,91,445,249,250,251,252,9,253,93,478,275,276,277,10,11,278,279,280,281,282,12,13,287,288,296,297,14,15,16,17,18,298,299,300,301,302,303,304,305,307,96,97,308,309,310,133,311,312,313,314,315,316,318,319,320,321,322,323,108,109,324,110,111,112,19,117,20,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,325,328,329,330,335,336,118,337,48,49,338,339,340,50,341,342,343,345,346,347,349,350,122,351,352,353,354,355,356,357,359,360,361,362,363,123,368,369,370,51,371,372,373,374,375,376,127,130,378,52,53,54,55,56,57,58,59,60,61,62,63,64,65],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"position":"org.easymock.internal.MockBuilder:210","failures":[66,66,67,67,69,70,71,72,73],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[495],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:85","failures":[137,138,139,140,141,142,143,144,145,146,147,148,149,150,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,0,85,188,189,190,191,192,193,194,195,196,1,2,87,88,89,197,198,199,200,201,203,204,206,207,208,209,210,3,4,5,6,7,8,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,90,91,249,250,251,252,9,253,93,254,255,256,257,258,259,260,261,262,263,264,265,266,269,270,271,272,273,274,275,276,277,10,11,278,279,280,281,282,12,13,291,94,292,293,294,295,296,297,14,15,16,17,18,298,95,299,300,301,302,303,304,305,306,307,66,66,67,67,96,97,308,309,310,133,311,312,313,314,315,316,317,318,319,320,321,98,99,101,102,103,104,105,106,107,322,323,108,109,324,110,111,112,113,19,114,115,116,117,20,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,325,328,329,330,331,332,333,334,335,336,118,337,48,49,338,339,340,50,341,342,343,345,346,347,349,71,350,122,72,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,123,124,125,126,368,369,370,51,371,372,373,374,375,376,127,128,129,130,378,131,132,52,53,54,55,56,57,58,59,60,61,62,63,64,65],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:71","failures":[83,84,92,95,98,99,100,101,102,103,104,105,106,107,113,115,116,491,71,124,125,126],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if (org.easymock.ConstructorArgs == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[482,483,485,135,486,505,506,73,129,132,504],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"failures":[81,82],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MocksControl:189","failures":[142,144,145,148,149,150,3,214,215,276,10,278,279,280,310,312,314,318,319,321,106,107,22,369,371,372,373],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ExpectedInvocation:75","failures":[37,43,53,54,56,57,58,59,60,65],"status":-1,"binaryOperator":"(((this.java.util.List<org.easymock.IArgumentMatcher>) != null) && (this.java.util.List<org.easymock.IArgumentMatcher>.equals(org.easymock.internal.ExpectedInvocation.java.util.List<org.easymock.IArgumentMatcher>)))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1052","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:40","sourceCode":"java.lang.StringBuffer.append(\"notNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[80],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[69,379,380,381,382,383,75,71,76,77,384,385,386,123,387,388,124,389,390,391,392,393,394,395,396,397,125,398,399,400,401,402,126,403,404],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[75],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnValue":"arg","returnedType":"paramType"}},{"position":"org.easymock.EasyMock:1940","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[143,188,190,191,213,214,215,11,280,281,311,364,365,366,367,51,373,374],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":23,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":142,"org.easymock.tests2.UsageTest.argumentsOrdered":319,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":361,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":466,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":314,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":299,"org.easymock.tests2.DelegateToTest.testReturnException":345,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":250,"org.easymock.tests.MockingTest.testPartialClassMocking":87,"org.easymock.tests.MockClassControlTest.testToString":292,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":495,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":151,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":474,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":392,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":158,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":124,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":323,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":29,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":4,"org.easymock.tests2.UsageTest.wrongArguments":312,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":426,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":271,"org.easymock.samples.ExampleTest.answerVsDelegate":301,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":84,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":441,"org.easymock.tests2.UsageConstraintsTest.testNull":25,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":110,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":297,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":360,"org.easymock.tests2.CaptureTest.testPrimitive":55,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":8,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":177,"org.easymock.tests.UsageTest.moreThanOneArgument":143,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":324,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":139,"org.easymock.tests.UsageTest.argumentsOrdered":149,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":286,"org.easymock.tests.UsageVarargTest.varargIntAccepted":180,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":471,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":14,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":98,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":498,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":414,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":102,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":459,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":18,"org.easymock.tests.ReplayStateInvalidUsageTest.times":262,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":368,"org.easymock.tests2.DependencyTest.testClassMocking":487,"org.easymock.tests2.AnswerTest.answer":325,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":30,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":472,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":334,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":430,"org.easymock.tests2.CaptureTest.testAnd":52,"org.easymock.tests2.UsageTest.strictResetToDefault":133,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":483,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":114,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":138,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":199,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":355,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":290,"org.easymock.tests2.DelegateToTest.testDelegate":349,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":173,"org.easymock.tests.LimitationsTest.mockFinalMethod":448,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":9,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":248,"org.easymock.tests2.DependencyTest.testClassMockingSupport":488,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":211,"org.easymock.tests2.CaptureTest.testCapture1_2446744":56,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":489,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":171,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":332,"org.easymock.tests.UsageThrowableTest.throwError":236,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":256,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":432,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":481,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":415,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":141,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":505,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":404,"org.easymock.samples.PartialClassMockTest.testGetArea":95,"org.easymock.tests.MockingTest.testInterfaceMocking":439,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":257,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":15,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":284,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":480,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":393,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":159,"org.easymock.tests2.UsageTest.niceToStrict":313,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":457,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":75,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":101,"org.easymock.tests2.MockBuilderTest.testCreateMock":105,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":400,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":423,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":167,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":356,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":429,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":157,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":188,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":269,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":381,"org.easymock.tests.UsageOverloadedMethodTest.overloading":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":402,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":397,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":35,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":204,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":208,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":227,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":34,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":61,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":435,"org.easymock.tests2.EasyMockSupportClassTest.testAll":123,"org.easymock.tests.MockClassControlTest.testEquals":296,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":91,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":175,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":119,"org.easymock.tests2.CaptureTest.testCaptureAll":53,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":246,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":333,"org.easymock.tests.MockNameTest.defaultName":436,"org.easymock.tests2.UsageConstraintsTest.testMatches":36,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":140,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":254,"org.easymock.samples.ExampleTest.voteForRemovals":305,"org.easymock.tests.UsageVarargTest.allKinds":0,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":213,"org.easymock.samples.BasicClassMockTest.testPrintContent":97,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":247,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":242,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":369,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":411,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":253,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":348,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":455,"org.easymock.tests2.UsageConstraintsTest.greaterThan":38,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":387,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":198,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":117,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":456,"org.easymock.samples.ExampleTest.voteForRemoval":302,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":490,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":339,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":433,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":499,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":113,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":85,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":310,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":69,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":74,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":353,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":385,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":249,"org.easymock.tests2.CaptureTest.testCaptureFirst":65,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":463,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":354,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":321,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":207,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":223,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":50,"org.easymock.tests2.CaptureTest.testCapture2_2446744":64,"org.easymock.tests2.UsageTest.moreThanOneArgument":311,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":473,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":106,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":187,"org.easymock.tests.GenericTest.testBridgedEquals":445,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":382,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":195,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":379,"org.easymock.tests.UsageExpectAndReturnTest.longType":219,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":244,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":351,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":176,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":82,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":43,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":285,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":174,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":153,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":137,"org.easymock.tests.UsageCallCountTest.tooManyCalls":196,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":401,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":224,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":425,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":163,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":241,"org.easymock.tests.MockingTest.testNiceClassMocking":442,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":128,"org.easymock.tests.MockingTest.testClassMocking":438,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":189,"org.easymock.tests2.UsageConstraintsTest.testContains":33,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":81,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":118,"org.easymock.tests2.UsageConstraintsTest.testFind":24,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":210,"org.easymock.tests.MockTypeTest.fromEasyMockClass":431,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":49,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":276,"org.easymock.tests.UsageExpectAndReturnTest.object":226,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":19,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":424,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":359,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":182,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":275,"org.easymock.tests.UsageTest.exactCallCountByLastCall":150,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":383,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":462,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":427,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":287,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":73,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":178,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":232,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":203,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":406,"org.easymock.tests.MockClassControlTest.testHashCode":295,"org.easymock.tests2.EasyMockSupportTest.testVerify":363,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":395,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":288,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":156,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":201,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":331,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":377,"org.easymock.tests.UsageVarargTest.varargCharAccepted":181,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":449,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":370,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":477,"org.easymock.tests2.UsageTest.openCallCountByLastCall":315,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":76,"org.easymock.tests.DefaultClassInstantiatorTest.object":266,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":362,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":155,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":273,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":396,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":165,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":239,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":419,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":405,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":115,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":294,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":164,"org.easymock.tests.CapturesMatcherTest.test":80,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":233,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":126,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":293,"org.easymock.tests2.UsageTest.resumeIfFailure":320,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":83,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":497,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":252,"org.easymock.tests2.StubTest.stubWithReturnValue":376,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":485,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":44,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":225,"org.easymock.tests2.SerializationTest.testAllMockedMethod":122,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":267,"org.easymock.samples.SupportTest.voteForRemovals":309,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":444,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":408,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":170,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":268,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":326,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":428,"org.easymock.tests.UsageExpectAndThrowTest.object":168,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":41,"org.easymock.tests2.DelegateToTest.testWrongClass":347,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":12,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":13,"org.easymock.samples.ConstructorCalledMockTest.testTax":66,"org.easymock.tests.UsageStrictMockTest.range":279,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":501,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":358,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":127,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":380,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":169,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":384,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":148,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":264,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":270,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":136,"org.easymock.tests2.CaptureTest.testCaptureNone":60,"org.easymock.tests.UsageUnorderedTest.message":3,"org.easymock.tests.UsageVerifyTest.twoReturns":215,"org.easymock.tests.UsageVarargTest.varargByteAccepted":186,"org.easymock.tests2.ThreadingTest.testThreadSafe":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":398,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":193,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":479,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":96,"org.easymock.tests2.CaptureTest.testCapture_2617107":54,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":443,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":475,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":7,"org.easymock.tests2.UsageConstraintsTest.any":31,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":261,"org.easymock.tests2.StubTest.stub":375,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":154,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":476,"org.easymock.tests.UsageExpectAndThrowTest.longType":161,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":251,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":453,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":260,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":371,"org.easymock.tests2.SerializationTest.testClass":71,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":343,"org.easymock.tests.LimitationsTest.mockNativeMethod":93,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":92,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":235,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":418,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":121,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":374,"org.easymock.tests2.NameTest.nameForMocksControl":367,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":420,"org.easymock.tests2.MockedExceptionTest.testMockedException":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":388,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":147,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":493,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":162,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":89,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":108,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":104,"org.easymock.tests.MockingTest.testNicePartialClassMocking":88,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":112,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":416,"org.easymock.tests2.CaptureTest.testCaptureLast":59,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":212,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":132,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":28,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":42,"org.easymock.tests.MockingTest.testTwoMocks":86,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":504,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":216,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":166,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":318,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":46,"org.easymock.samples.ExampleTest.removeNonExistingDocument":306,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":422,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":258,"org.easymock.tests.UsageStrictMockTest.differentMethods":280,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":407,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":451,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":340,"org.easymock.tests2.MockBuilderTest.testCreateMockString":107,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":389,"org.easymock.tests.UsageExpectAndThrowTest.floatType":160,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":386,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":328,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":494,"org.easymock.tests.UsageVerifyTest.twoThrows":214,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":202,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":125,"org.easymock.samples.ExampleTest.voteAgainstRemoval":303,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":467,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":283,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":116,"org.easymock.tests.LimitationsTest.privateConstructor":447,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":506,"org.easymock.tests2.UsageConstraintsTest.testNotNull":45,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":243,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":335,"org.easymock.tests2.UsageTest.defaultResetToNice":317,"org.easymock.samples.ExampleTest.voteAgainstRemovals":300,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":468,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":231,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":417,"org.easymock.tests.UsageVarargTest.differentLength":183,"org.easymock.tests2.CallbackTest.callback":342,"org.easymock.tests2.UsageConstraintsTest.equals":492,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":70,"org.easymock.tests.UsageTest.openCallCountByLastCall":146,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":20,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":6,"org.easymock.tests.UsageCallCountTest.tooFewCalls":191,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":130,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":272,"org.easymock.tests.UsageThrowableTest.throwCheckedException":240,"org.easymock.tests.MockingTest.testStrictClassMocking":437,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":131,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":2,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":421,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":129,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":263,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":378,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":330,"org.easymock.tests.ObjectMethodsTest.testHashCode":274,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":341,"org.easymock.tests2.NameTest.nameForNiceMock":366,"org.easymock.tests2.DependencyTest.testInterfaceMocking":322,"org.easymock.samples.ExampleTest.addDocument":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":403,"org.easymock.tests2.DelegateToTest.testStubDelegate":346,"org.easymock.tests2.AnswerTest.stubAnswer":329,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":11,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":68,"org.easymock.tests.UsageVarargTest.varargLongAccepted":185,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":465,"org.easymock.tests.UsageExpectAndReturnTest.floatType":218,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":234,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":72,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":67,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":413,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":39,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":205,"org.easymock.tests.UsageThrowableTest.noUpperLimit":237,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":21,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":496,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":57,"org.easymock.tests2.SerializationTest.test":350,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":450,"org.easymock.tests2.UsageConstraintsTest.testSame":26,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":217,"org.easymock.samples.SupportTest.addDocument":308,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":503,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":390,"org.easymock.tests.GenericTest.testPackageScope":90,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":289,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":461,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":412,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":440,"org.easymock.tests2.NameTest.nameForMock":364,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":228,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":486,"org.easymock.tests2.UsageStrictMockTest.differentMethods":373,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":134,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":220,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":172,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":478,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":200,"org.easymock.tests2.MockedExceptionTest.testRealException":337,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":434,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":502,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":470,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":469,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":51,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":5,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":265,"org.easymock.tests2.NameTest.nameForStrictMock":365,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":484,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":48,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":77,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":111,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":500,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":452,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":40,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":79,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":99,"org.easymock.tests2.UsageStrictMockTest.range":372,"org.easymock.tests2.UsageConstraintsTest.lessThan":47,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":409,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":78,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":464,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":352,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":394,"org.easymock.tests2.CaptureTest.testCaptureRightOne":62,"org.easymock.tests2.UsageConstraintsTest.testOr":27,"org.easymock.tests.UsageRangeTest.combination":197,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":109,"org.easymock.tests.UsageTest.wrongArguments":145,"org.easymock.tests2.MockBuilderTest.testWithConstructor":482,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":391,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":94,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":221,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":458,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":229,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":454,"org.easymock.tests.UsageVarargTest.varargShortAccepted":184,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":194,"org.easymock.tests2.UsageConstraintsTest.cmpTo":32,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":327,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":460,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":316,"org.easymock.tests2.CaptureTest.testCaptureFromStub":63,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":255,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":100,"org.easymock.tests.UsageTest.unexpectedCallWithArray":144,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":10,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":192,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":135,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":230,"org.easymock.tests2.UsageConstraintsTest.constraints":22,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":278,"org.easymock.samples.ExampleTest.addAndChangeDocument":307,"org.easymock.tests.UsageStrictMockTest.testVerify":282,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":298,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":277,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":245,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":58,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":120,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":16,"org.easymock.tests.LimitationsTest.abstractClass":446,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":222,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":17,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":206,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":179,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":357}}]
