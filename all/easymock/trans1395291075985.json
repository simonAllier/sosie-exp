[{"position":"org.easymock.internal.Range:70","failures":[0,1,2,3],"status":-1,"binaryOperator":"(\"between \" + (int))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","constructorArgs":"constructorArgs","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[5,6,7,8],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1494","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(char))","type":"CtInvocationImpl"},"failures":[9,10,11],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[41,42],"status":-1,"binaryOperator":"int > 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:53","failures":[43,44,45],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[46,9,47,10,48,11,49,50,51],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:37","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:63","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Long.java.lang.Class<java.lang.Long>, java.lang.Long.java.lang.Long)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[10],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:112","sourceCode":"if (!(org.easymock.Capture<T>.hasCaptured())) {\n    this.java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[52,53,54,55,56,57,58],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values","value":"value","this":"this"}},{"position":"org.easymock.ConstructorArgs:54","failures":[59,60,14,61,62,63,64,65,66,67,68,69,5,23,27,70,71,72,73,32,74,75,33,76,77,78,79,80,81,82,83,84,34,85,86,87,88,89,35,90,91],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"failures":[92,93],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:94","failures":[46,9,94,95,96,47,10,97,48,98,11,99,100,101,49,53,50,102,51,103],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int)","name":"math","type":"mutation"},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[104],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","name":"name","this":"this"}},{"transplantationPoint":{"position":"org.easymock.Capture:109","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[52,53,103,57,58],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"failures":[105],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:305","sourceCode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","type":"CtReturnImpl"},"failures":[106,107,108,109,110,111,112,113,114,115,116,12,117,118,119,120,121,13,122,123,124,125,126,127,128,129,130,131,46,9,94,95,96,47,10,97,48,98,132,133,134,135,136,137,41,138,11,99,139,140,141,100,101,142,143,144,14,145,146,147,148,15,16,17,18,19,149,20,150,151,49,53,50,102,152,153,154,54,55,56,51,57,155,5,6,7,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,44,182,183,184,21,22,23,24,25,26,27,185,186,187,188,0,1,189,28,104,29,30,190,31,191,192,193,194,195,32,33,34,35,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,36,37,38,219,220,221,39,222,223,224,40,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,45,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,93,287,288,289,290,291,292,293,294,295,296,297,298,299,2,3,300,301,302,303,304,305,306,307,308,309],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[59,60,14,61,62,63,64,65,66,67,68,69,5,23,27,70,71,72,73,32,74,75,33,76,77,78,79,80,81,82,83,84,34,85,86,87,88,89,35,90,91],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:52","sourceCode":"return int == int","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"failures":[41,42],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"minimum":"result","maximum":"result"}},{"transplant":{"position":"org.easymock.EasyMock:1709","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:188","sourceCode":"try {\n    net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, new net.sf.cglib.proxy.Callback[]{ org.easymock.internal.ClassProxyFactory.MockMethodInterceptor });\n    if (org.easymock.ConstructorArgs != null) {\n        java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?>;\n        try {\n            java.lang.reflect.Constructor<?> = java.lang.Class<?>.getDeclaredConstructor(org.easymock.ConstructorArgs.getConstructor().getParameterTypes());\n        } catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n            throw new java.lang.RuntimeException(\"Fail to find constructor for param types\" , java.lang.NoSuchMethodException);\n        }\n        T T;\n        try {\n            java.lang.reflect.Constructor<?>.setAccessible(true);\n            T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())));\n        } catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n            throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException);\n        } catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n            throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException);\n        } catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n            throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException());\n        }\n        return T;\n    } else {\n        net.sf.cglib.proxy.Factory net.sf.cglib.proxy.Factory;\n        try {\n            net.sf.cglib.proxy.Factory = ((net.sf.cglib.proxy.Factory)(org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getInstantiator().newInstance(java.lang.Class<?>)));\n        } catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n            throw new java.lang.RuntimeException(((((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM())) + \" JVM\"));\n        }\n        net.sf.cglib.proxy.Factory.getCallback(0);\n        return ((T)(net.sf.cglib.proxy.Factory));\n    }\n} finally {\n    net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, null);\n}","type":"CtTryImpl"},"failures":[115,116,12,59,59,60,60,310,311,127,14,61,312,313,64,15,314,65,315,16,316,17,66,18,67,317,19,69,318,5,7,21,22,23,24,26,27,28,104,30,190,31,319,191,320,321,4,192,193,194,322,323,195,324,325,71,72,73,32,74,75,33,76,77,78,79,80,81,82,83,84,34,85,86,87,88,89,35,90,91,326,327,328,36,37,38,329,330,219,220,331,332,333,40,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,273],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cached":"cached"}},{"transplant":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[107,149,150,353,151,292,354],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[41,42],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:720","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[97],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[61,355,356,357,358,359,66],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:280","failures":[107,149,20,150,151,292],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return java.lang.Object == java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[134],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"actual"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:108","sourceCode":"org.easymock.internal.Invocation.validateCaptures()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"failures":[360],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"actual":"result"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:75","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[332],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"m","bridgeMethod":"m"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"failures":[361,58],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"failures":[121],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:124","failures":[106,107,108,109,110,111,112,113,114,115,116,12,117,118,59,60,119,120,121,13,122,310,311,127,362,128,129,130,131,46,9,94,95,96,47,10,97,98,132,133,134,135,136,137,41,138,11,99,139,140,141,100,101,142,143,144,14,363,364,365,366,145,146,147,148,313,15,16,316,17,18,317,19,318,149,20,150,151,49,53,50,102,152,153,154,54,55,56,51,103,57,155,5,6,7,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,44,182,183,184,21,22,23,24,25,26,27,185,186,187,188,0,1,189,28,104,29,30,190,31,319,191,4,192,193,194,195,32,33,34,35,367,368,369,370,196,371,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,36,37,38,219,220,221,39,222,223,224,40,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,372,373,374,375,376,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,377,378,379,380,381,382,383,384,385,266,267,386,268,269,270,45,271,272,273,275,276,277,278,387,279,280,281,282,283,284,285,58,58,93,287,289,290,291,292,293,388,295,296,297,298,299,2,3,300,302,303,304,305,306,307,308,309],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[10],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:72","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"failures":[128,129,140,100],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":9,"org.easymock.tests2.UsageTest.argumentsOrdered":182,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":266,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":168,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":178,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":113,"org.easymock.tests2.DelegateToTest.testReturnException":149,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":368,"org.easymock.tests.MockingTest.testPartialClassMocking":36,"org.easymock.tests.MockClassControlTest.testToString":336,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":79,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":33,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":199,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":144,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":355,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":97,"org.easymock.tests2.UsageTest.wrongArguments":176,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":281,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":384,"org.easymock.samples.ExampleTest.answerVsDelegate":107,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":343,"org.easymock.tests2.UsageConstraintsTest.testNull":95,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":30,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":167,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":341,"org.easymock.tests2.CaptureTest.testPrimitive":102,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":285,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":218,"org.easymock.tests.UsageTest.moreThanOneArgument":267,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":29,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":374,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":105,"org.easymock.tests.UsageTest.argumentsOrdered":271,"org.easymock.tests.UsageVarargTest.varargIntAccepted":249,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":221,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":313,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":359,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":316,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":354,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":224,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":195,"org.easymock.tests2.AnswerTest.answer":145,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":48,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":366,"org.easymock.tests2.CaptureTest.testAnd":49,"org.easymock.tests2.UsageTest.strictResetToDefault":174,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":4,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":65,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":373,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":162,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":289,"org.easymock.tests2.DelegateToTest.testDelegate":151,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":214,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":196,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":381,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":286,"org.easymock.tests2.CaptureTest.testCapture1_2446744":152,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":212,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":364,"org.easymock.tests.UsageThrowableTest.throwError":258,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":376,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":91,"org.easymock.samples.PartialClassMockTest.testGetArea":12,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":39,"org.easymock.tests2.UsageTest.niceToStrict":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":80,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":200,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":16,"org.easymock.tests2.MockBuilderTest.testCreateMock":317,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":87,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":208,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":163,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":274,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":382,"org.easymock.tests.UsageOverloadedMethodTest.overloading":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":84,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":89,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":135,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":293,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":236,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":307,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":134,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":56,"org.easymock.tests2.EasyMockSupportClassTest.testAll":32,"org.easymock.tests.MockClassControlTest.testEquals":340,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":220,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":216,"org.easymock.tests2.CaptureTest.testCaptureAll":53,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":365,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":379,"org.easymock.tests2.UsageConstraintsTest.testMatches":136,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":375,"org.easymock.samples.ExampleTest.voteForRemovals":111,"org.easymock.tests.UsageVarargTest.allKinds":257,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":302,"org.easymock.samples.BasicClassMockTest.testPrintContent":116,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":380,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":264,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":185,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":353,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":371,"org.easymock.tests2.UsageConstraintsTest.greaterThan":41,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":74,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":288,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":194,"org.easymock.samples.ExampleTest.voteForRemoval":108,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":352,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":120,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":322,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":319,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":173,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":273,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":67,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":160,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":72,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":367,"org.easymock.tests2.CaptureTest.testCaptureFirst":155,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":161,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":184,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":388,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":232,"org.easymock.tests2.UsageTest.moreThanOneArgument":175,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":13,"org.easymock.tests2.CaptureTest.testCapture2_2446744":57,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":19,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":256,"org.easymock.tests.GenericTest.testBridgedEquals":332,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":279,"org.easymock.tests.UsageExpectAndReturnTest.longType":228,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":158,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":377,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":217,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":140,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":215,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":372,"org.easymock.tests.UsageCallCountTest.tooManyCalls":280,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":88,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":233,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":204,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":263,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":22,"org.easymock.tests.MockingTest.testNiceClassMocking":329,"org.easymock.tests.MockingTest.testClassMocking":327,"org.easymock.tests2.UsageConstraintsTest.testContains":133,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":127,"org.easymock.tests2.UsageConstraintsTest.testFind":94,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":309,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":129,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":295,"org.easymock.tests.UsageExpectAndReturnTest.object":235,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":191,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":166,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":251,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":356,"org.easymock.tests.UsageTest.exactCallCountByLastCall":272,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":197,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":245,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":61,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":241,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":247,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":292,"org.easymock.tests.MockClassControlTest.testHashCode":339,"org.easymock.tests2.EasyMockSupportTest.testVerify":170,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":82,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":246,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":291,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":363,"org.easymock.tests.UsageVarargTest.varargCharAccepted":250,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":344,"org.easymock.tests2.CaptureTest.testCaptureMultiple":52,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":186,"org.easymock.tests2.UsageTest.openCallCountByLastCall":179,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":169,"org.easymock.tests.DefaultClassInstantiatorTest.object":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":83,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":206,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":261,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":192,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":338,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":205,"org.easymock.tests.CapturesMatcherTest.test":58,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":35,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":337,"org.easymock.tests2.UsageTest.resumeIfFailure":183,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":342,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":370,"org.easymock.tests2.StubTest.stubWithReturnValue":157,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":66,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":141,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":234,"org.easymock.tests2.SerializationTest.testAllMockedMethod":7,"org.easymock.samples.SupportTest.voteForRemovals":118,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":330,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":211,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":8,"org.easymock.tests.UsageExpectAndThrowTest.object":209,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":99,"org.easymock.tests2.DelegateToTest.testWrongClass":150,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":305,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":306,"org.easymock.tests.UsageStrictMockTest.range":2,"org.easymock.samples.ConstructorCalledMockTest.testTax":59,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":165,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":21,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":210,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":17,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":45,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":71,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":383,"org.easymock.tests2.CaptureTest.testCaptureNone":55,"org.easymock.tests.UsageUnorderedTest.message":93,"org.easymock.tests.UsageVerifyTest.twoReturns":304,"org.easymock.tests.UsageVarargTest.varargByteAccepted":255,"org.easymock.tests2.ThreadingTest.testThreadSafe":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":85,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":278,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":115,"org.easymock.tests2.CaptureTest.testCapture_2617107":50,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":284,"org.easymock.tests2.UsageConstraintsTest.any":98,"org.easymock.tests2.StubTest.stub":156,"org.easymock.tests.UsageExpectAndThrowTest.longType":202,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":369,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":349,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":188,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":172,"org.easymock.tests2.SerializationTest.testClass":5,"org.easymock.tests.LimitationsTest.mockNativeMethod":40,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":244,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":331,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":189,"org.easymock.tests2.NameTest.nameForMocksControl":126,"org.easymock.tests2.MockedExceptionTest.testMockedException":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":75,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":270,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":38,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":203,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":360,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":28,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":18,"org.easymock.tests.MockingTest.testNicePartialClassMocking":37,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":31,"org.easymock.tests2.CaptureTest.testCaptureLast":54,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":27,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":10,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":139,"org.easymock.tests.MockingTest.testTwoMocks":328,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":70,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":225,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":207,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":44,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":101,"org.easymock.tests.UsageStrictMockTest.differentMethods":3,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":347,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":121,"org.easymock.tests2.MockBuilderTest.testCreateMockString":318,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":76,"org.easymock.tests.UsageExpectAndThrowTest.floatType":201,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":73,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":146,"org.easymock.tests.UsageVerifyTest.twoThrows":303,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":312,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":34,"org.easymock.samples.ExampleTest.voteAgainstRemoval":109,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":193,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":63,"org.easymock.tests2.UsageConstraintsTest.testNotNull":100,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":265,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":310,"org.easymock.tests2.UsageTest.defaultResetToNice":181,"org.easymock.samples.ExampleTest.voteAgainstRemovals":106,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":240,"org.easymock.tests.UsageVarargTest.differentLength":252,"org.easymock.tests2.CallbackTest.callback":171,"org.easymock.tests2.UsageConstraintsTest.equals":43,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":320,"org.easymock.tests.UsageTest.openCallCountByLastCall":269,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":130,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":283,"org.easymock.tests.UsageCallCountTest.tooFewCalls":276,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":24,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":385,"org.easymock.tests.UsageThrowableTest.throwCheckedException":262,"org.easymock.tests.MockingTest.testStrictClassMocking":326,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":26,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":198,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":23,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":25,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":148,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":358,"org.easymock.tests2.NameTest.nameForNiceMock":125,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":122,"org.easymock.tests2.DependencyTest.testInterfaceMocking":143,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":357,"org.easymock.samples.ExampleTest.addDocument":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":86,"org.easymock.tests2.DelegateToTest.testStubDelegate":20,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":90,"org.easymock.tests2.AnswerTest.stubAnswer":147,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":298,"org.easymock.tests.UsageVarargTest.varargLongAccepted":254,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":300,"org.easymock.tests.UsageExpectAndReturnTest.floatType":227,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":243,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":14,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":60,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":138,"org.easymock.tests.UsageThrowableTest.noUpperLimit":259,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":131,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":324,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":153,"org.easymock.tests2.SerializationTest.test":6,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":346,"org.easymock.tests2.UsageConstraintsTest.testSame":96,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":226,"org.easymock.samples.SupportTest.addDocument":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":77,"org.easymock.tests.GenericTest.testPackageScope":219,"org.easymock.tests2.NameTest.nameForMock":123,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":237,"org.easymock.tests2.UsageStrictMockTest.differentMethods":1,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":69,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":321,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":229,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":213,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":290,"org.easymock.tests2.MockedExceptionTest.testRealException":362,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":187,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":282,"org.easymock.tests2.NameTest.nameForStrictMock":124,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":315,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":128,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":190,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":325,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":11,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":92,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":348,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":15,"org.easymock.tests2.UsageStrictMockTest.range":0,"org.easymock.tests2.UsageConstraintsTest.lessThan":142,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":159,"org.easymock.tests2.CaptureTest.testCaptureRightOne":51,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":81,"org.easymock.tests2.UsageConstraintsTest.testOr":47,"org.easymock.tests.UsageRangeTest.combination":287,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":104,"org.easymock.tests.UsageTest.wrongArguments":268,"org.easymock.tests2.MockBuilderTest.testWithConstructor":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":78,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":335,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":230,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":238,"org.easymock.tests.UsageVarargTest.varargShortAccepted":253,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":350,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":387,"org.easymock.tests2.UsageConstraintsTest.cmpTo":132,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":180,"org.easymock.tests2.CaptureTest.testCaptureFromStub":103,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":314,"org.easymock.tests.UsageTest.unexpectedCallWithArray":386,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":297,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":277,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":68,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":239,"org.easymock.tests2.CaptureTest.testCapture":361,"org.easymock.tests2.UsageConstraintsTest.constraints":46,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":299,"org.easymock.samples.ExampleTest.addAndChangeDocument":112,"org.easymock.tests.UsageStrictMockTest.testVerify":301,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":114,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":296,"org.easymock.tests2.CompareToTest.testGreateThan":42,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":378,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":154,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":222,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":231,"org.easymock.tests.LimitationsTest.abstractClass":333,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":223,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":294,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":164,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":248}}]
