[{"position":"org.easymock.internal.ReflectionUtils:106","failures":[0,1,1,2,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57],"status":-1,"binaryOperator":"java.lang.Class<?>[] == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:77","failures":[58,59],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:54","failures":[60],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[61],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[62,63],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:205","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"failures":[0,6,8,9,64,10,11,12,13,14,15,17,23,26,27,65,66,41,42,43,50,51,67,55],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[68,69,70,71,72,73,74],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[114,115,116,117,118,119],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:325","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[120,121,122,123],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:55","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:109","sourceCode":"org.easymock.internal.Invocation.clearCaptures()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[124,125,126,127,128,129,130,131,132,133,113,134,135,136],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[137],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[138],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:92","failures":[139,140,141,142,121,122,143,144,145],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,1,1,2,2,146,147,148,149,150,151,152,153,154,3,4,155,156,157,5,68,158,159,160,161,162,163,164,165,166,167,168,139,140,60,169,120,170,141,142,171,121,172,173,174,175,176,177,178,179,180,122,181,182,183,184,123,185,63,186,187,188,189,6,190,8,9,191,64,10,11,12,69,13,192,14,15,193,17,143,194,144,195,196,197,198,199,200,201,145,202,203,204,18,19,205,20,21,22,23,206,24,207,208,25,26,27,28,209,65,210,211,212,213,214,66,215,29,216,217,218,219,220,221,222,223,224,225,226,227,228,75,229,230,124,231,232,233,234,235,125,126,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,76,30,31,32,33,267,34,35,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,40,284,285,41,286,287,288,289,290,291,292,293,294,42,295,296,297,298,299,43,300,301,302,303,304,305,306,307,308,309,310,311,127,312,313,44,314,45,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,315,316,317,318,319,320,114,321,322,323,324,325,115,326,327,328,329,330,331,116,117,332,333,334,335,46,47,48,336,49,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,118,353,354,355,50,356,357,51,358,359,360,361,362,97,363,364,365,366,367,368,369,370,371,372,373,98,374,129,130,375,376,131,132,377,52,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,133,99,100,101,397,398,399,102,400,103,104,105,106,107,108,67,53,54,55,61,401,402,109,403,404,405,110,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,56,439,440,441,442,443,444,445,446,57,447,448,449,450,111,451,452,453,454,455,456,457,458,459,119,460,461,462,463,464,465,466,467,468,469,470,471,472,112,473,474,113,134,475,476,477,478,479,480,481,482,483,484,485,486,487,135,488,489,136,490,491,492,493,494,495],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[44,314,45,496],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[68,69,70,71,72,73,74],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[139,140,120,141,142,121,122,123,143,144,145],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[497,498,499,500,129,135],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:72","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = org.easymock.internal.IClassInstantiator","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[493],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[389,390,391,392,394,396],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[34,501,47,48,49],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.EasyMock:1543","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[306,307],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:613","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:93","sourceCode":"while (java.lang.Class<?> != null) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    java.lang.reflect.Method java.lang.reflect.Method = null;\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if (java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n            continue;\n        } \n        if (java.lang.reflect.Method.isBridge()) {\n            continue;\n        } \n        if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n            if (java.lang.Class<?>[] == null) {\n                if (java.lang.reflect.Method != null) {\n                    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n                } \n                java.lang.reflect.Method = java.lang.reflect.Method;\n            } else if (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n                return java.lang.reflect.Method;\n            } \n        } \n    }\n    if (java.lang.reflect.Method != null) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:412","sourceCode":"while ((!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) && (java.lang.Class<?> != null)) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.isInterface() ? java.lang.Class<?>.getMethods() : java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n            return java.lang.reflect.Method;\n        } \n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"name","searchType":"searchType","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:312","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[303,408],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"failures":[123],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:125","sourceCode":"java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>()","type":"CtAssignmentImpl"},"failures":[0,1,2,146,147,148,149,150,151,153,154,3,4,155,156,157,5,164,166,167,168,139,140,169,120,170,141,142,171,172,173,174,175,176,177,178,179,180,122,181,182,183,184,123,185,63,186,187,188,189,6,8,10,11,12,13,14,15,17,143,194,144,195,196,197,198,199,200,201,145,202,203,204,18,19,205,20,21,22,23,24,25,26,27,28,210,211,212,213,214,66,215,29,216,222,75,229,230,124,231,232,233,234,235,125,126,236,237,240,241,242,249,257,258,259,261,266,76,30,31,32,33,267,34,35,268,269,270,271,272,273,274,275,276,277,278,279,280,40,41,42,43,302,305,306,307,308,309,310,311,127,312,313,44,314,45,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,318,319,320,114,321,322,323,324,325,115,326,327,328,329,330,331,116,117,332,333,47,48,49,352,118,353,354,355,360,362,97,365,370,372,373,98,374,129,130,375,376,131,132,377,52,383,384,385,386,387,133,397,398,102,400,103,104,105,106,107,108,53,54,401,402,109,426,427,428,430,431,432,433,434,435,436,437,502,502,57,448,449,450,111,451,452,453,454,455,456,457,458,459,119,469,470,471,472,112,473,474,113,134,477,478,479,480,481,482,483,484,485,486,487,135,488,489,136,490,491],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[503],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"methodName"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[178,21,232,346],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":140,"org.easymock.tests2.UsageTest.argumentsOrdered":126,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":98,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":278,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":412,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":232,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":154,"org.easymock.tests2.DelegateToTest.testReturnException":257,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":470,"org.easymock.tests.MockingTest.testPartialClassMocking":47,"org.easymock.tests.MockClassControlTest.testToString":439,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":159,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":461,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":421,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":289,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":41,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":77,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":241,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":70,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":171,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":448,"org.easymock.tests2.UsageTest.wrongArguments":124,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":255,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":454,"org.easymock.samples.ExampleTest.answerVsDelegate":147,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":51,"org.easymock.tests2.UsageConstraintsTest.testNull":120,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":338,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":20,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":444,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":277,"org.easymock.tests2.CaptureTest.testPrimitive":195,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":451,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":96,"org.easymock.tests.UsageTest.moreThanOneArgument":374,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":205,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":353,"org.easymock.tests.UsageTest.argumentsOrdered":132,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":378,"org.easymock.tests.UsageVarargTest.varargIntAccepted":428,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":417,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":456,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":6,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":74,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":227,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":405,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":119,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":249,"org.easymock.tests.ReplayStateInvalidUsageTest.times":348,"org.easymock.tests2.DependencyTest.testClassMocking":238,"org.easymock.tests2.AnswerTest.answer":302,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":121,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":419,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":189,"org.easymock.tests2.CaptureTest.testAnd":143,"org.easymock.tests2.UsageTest.strictResetToDefault":229,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":191,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":25,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":118,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":272,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":372,"org.easymock.tests2.DelegateToTest.testDelegate":261,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":382,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":92,"org.easymock.tests.LimitationsTest.mockFinalMethod":447,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":112,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":387,"org.easymock.tests2.DependencyTest.testClassMockingSupport":239,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":366,"org.easymock.tests2.CaptureTest.testCapture1_2446744":196,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":206,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":90,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":187,"org.easymock.tests.UsageThrowableTest.throwError":102,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":342,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":357,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":228,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":355,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":301,"org.easymock.samples.PartialClassMockTest.testGetArea":0,"org.easymock.tests.MockingTest.testInterfaceMocking":336,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":343,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":457,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":494,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":468,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":78,"org.easymock.tests2.UsageTest.niceToStrict":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":290,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":403,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":59,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":10,"org.easymock.tests2.MockBuilderTest.testCreateMock":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":297,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":252,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":497,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":86,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":273,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":101,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":475,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":452,"org.easymock.tests.UsageOverloadedMethodTest.overloading":402,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":299,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":176,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":97,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":401,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":327,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":175,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":201,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":429,"org.easymock.tests.MockClassControlTest.testEquals":443,"org.easymock.tests2.EasyMockSupportClassTest.testAll":40,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":54,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":94,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":36,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":385,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":188,"org.easymock.tests2.CaptureTest.testCaptureAll":194,"org.easymock.tests.MockNameTest.defaultName":399,"org.easymock.tests2.UsageConstraintsTest.testMatches":177,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":340,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":354,"org.easymock.samples.ExampleTest.voteForRemovals":151,"org.easymock.tests.UsageVarargTest.allKinds":437,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":474,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":386,"org.easymock.samples.BasicClassMockTest.testPrintContent":4,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":107,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":308,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":473,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":224,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":260,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":395,"org.easymock.tests2.UsageConstraintsTest.greaterThan":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":284,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":371,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":28,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":396,"org.easymock.samples.ExampleTest.voteForRemoval":148,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":209,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":211,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":358,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":23,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":52,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":75,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":192,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":409,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":270,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":282,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":469,"org.easymock.tests2.CaptureTest.testCaptureFirst":204,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":256,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":408,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":271,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":237,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":365,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":324,"org.easymock.tests2.CaptureTest.testCapture2_2446744":203,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":213,"org.easymock.tests2.UsageTest.moreThanOneArgument":230,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":420,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":15,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":436,"org.easymock.tests.GenericTest.testBridgedEquals":61,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":482,"org.easymock.tests.UsageExpectAndReturnTest.longType":114,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":268,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":383,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":16,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":95,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":183,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":369,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":93,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":316,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":352,"org.easymock.tests.UsageCallCountTest.tooManyCalls":483,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":477,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":298,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":325,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":254,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":82,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":106,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":31,"org.easymock.tests.MockingTest.testNiceClassMocking":339,"org.easymock.tests.MockingTest.testClassMocking":335,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":476,"org.easymock.tests2.UsageConstraintsTest.testContains":174,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":7,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":29,"org.easymock.tests2.UsageConstraintsTest.testFind":169,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":109,"org.easymock.tests.MockTypeTest.fromEasyMockClass":356,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":486,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":166,"org.easymock.tests.UsageExpectAndReturnTest.object":326,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":24,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":253,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":276,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":431,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":71,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":466,"org.easymock.tests.UsageTest.exactCallCountByLastCall":377,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":397,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":407,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":460,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":379,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":68,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":426,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":116,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":362,"org.easymock.tests.MockClassControlTest.testHashCode":442,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":218,"org.easymock.tests2.EasyMockSupportTest.testVerify":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":292,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":380,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":100,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":360,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":186,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":243,"org.easymock.tests.UsageVarargTest.varargCharAccepted":430,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":388,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":309,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":425,"org.easymock.tests2.UsageTest.openCallCountByLastCall":233,"org.easymock.tests.DefaultClassInstantiatorTest.object":389,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":279,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":99,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":464,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":128,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":84,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":293,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":104,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":39,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":247,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":217,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":441,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":26,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":83,"org.easymock.tests.CapturesMatcherTest.test":502,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":117,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":315,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":440,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":43,"org.easymock.tests2.UsageTest.resumeIfFailure":236,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":50,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":472,"org.easymock.tests2.StubTest.stubWithReturnValue":76,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":69,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":184,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":115,"org.easymock.tests2.SerializationTest.testAllMockedMethod":45,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":418,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":498,"org.easymock.samples.SupportTest.voteForRemovals":157,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":67,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":220,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":89,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":496,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":424,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":303,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":462,"org.easymock.tests.UsageExpectAndThrowTest.object":87,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":181,"org.easymock.tests2.DelegateToTest.testWrongClass":259,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":484,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":485,"org.easymock.tests.UsageStrictMockTest.range":136,"org.easymock.samples.ConstructorCalledMockTest.testTax":1,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":264,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":275,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":30,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":88,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":12,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":281,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":350,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":453,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":499,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":495,"org.easymock.tests2.CaptureTest.testCaptureNone":200,"org.easymock.tests.UsageUnorderedTest.message":133,"org.easymock.tests.UsageVerifyTest.twoReturns":134,"org.easymock.tests.UsageVarargTest.varargByteAccepted":435,"org.easymock.tests2.ThreadingTest.testThreadSafe":210,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":295,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":480,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":467,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":3,"org.easymock.tests2.CaptureTest.testCapture_2617107":144,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":368,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":422,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":111,"org.easymock.tests2.UsageConstraintsTest.any":172,"org.easymock.tests2.StubTest.stub":266,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":347,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":317,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":471,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":423,"org.easymock.tests.UsageExpectAndThrowTest.longType":80,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":393,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":346,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":311,"org.easymock.tests2.SerializationTest.testClass":44,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":222,"org.easymock.tests.LimitationsTest.mockNativeMethod":57,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":55,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":333,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":38,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":246,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":313,"org.easymock.tests2.NameTest.nameForMocksControl":163,"org.easymock.tests2.MockedExceptionTest.testMockedException":215,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":248,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":285,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":376,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":165,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":49,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":81,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":18,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":13,"org.easymock.tests.MockingTest.testNicePartialClassMocking":48,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":22,"org.easymock.tests2.CaptureTest.testCaptureLast":199,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":244,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":367,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":142,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":35,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":182,"org.easymock.tests.MockingTest.testTwoMocks":46,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":501,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":318,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":85,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":125,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":185,"org.easymock.samples.ExampleTest.removeNonExistingDocument":152,"org.easymock.tests.UsageStrictMockTest.differentMethods":490,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":251,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":344,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":219,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":391,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":212,"org.easymock.tests2.MockBuilderTest.testCreateMockString":17,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":438,"org.easymock.tests.UsageExpectAndThrowTest.floatType":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":286,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":283,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":305,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":158,"org.easymock.tests.UsageVerifyTest.twoThrows":113,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":42,"org.easymock.samples.ExampleTest.voteAgainstRemoval":149,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":493,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":413,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":27,"org.easymock.tests.LimitationsTest.privateConstructor":446,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":58,"org.easymock.tests2.UsageConstraintsTest.testNotNull":123,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":108,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":66,"org.easymock.tests2.UsageTest.defaultResetToNice":235,"org.easymock.samples.ExampleTest.voteAgainstRemovals":146,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":414,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":331,"org.easymock.tests.UsageVarargTest.differentLength":432,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":245,"org.easymock.tests2.CallbackTest.callback":242,"org.easymock.tests2.UsageConstraintsTest.equals":60,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":207,"org.easymock.tests.UsageTest.openCallCountByLastCall":375,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":167,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":450,"org.easymock.tests.UsageCallCountTest.tooFewCalls":478,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":33,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":455,"org.easymock.tests.UsageThrowableTest.throwCheckedException":105,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":500,"org.easymock.tests.MockingTest.testStrictClassMocking":334,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":398,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":34,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":32,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":250,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":349,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":267,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":307,"org.easymock.tests.ObjectMethodsTest.testHashCode":465,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":73,"org.easymock.tests2.NameTest.nameForNiceMock":162,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":214,"org.easymock.tests2.DependencyTest.testInterfaceMocking":240,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":72,"org.easymock.samples.ExampleTest.addDocument":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":296,"org.easymock.tests2.DelegateToTest.testStubDelegate":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":300,"org.easymock.tests2.AnswerTest.stubAnswer":306,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":488,"org.easymock.tests.UsageVarargTest.varargLongAccepted":434,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":411,"org.easymock.tests.UsageExpectAndReturnTest.floatType":320,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":332,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":5,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":2,"org.easymock.tests.UsageThrowableTest.noUpperLimit":400,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":180,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":226,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":363,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":168,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":262,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":197,"org.easymock.tests2.SerializationTest.test":314,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":137,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":390,"org.easymock.tests2.UsageConstraintsTest.testSame":170,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":319,"org.easymock.samples.SupportTest.addDocument":156,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":287,"org.easymock.tests.GenericTest.testPackageScope":53,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":381,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":406,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":225,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":337,"org.easymock.tests2.NameTest.nameForMock":160,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":328,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":193,"org.easymock.tests2.UsageStrictMockTest.differentMethods":312,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":208,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":321,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":91,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":463,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":373,"org.easymock.tests2.MockedExceptionTest.testRealException":216,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":359,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":416,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":265,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":415,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":310,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":449,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":351,"org.easymock.tests2.NameTest.nameForStrictMock":161,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":64,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":164,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":21,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":263,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":392,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":122,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":8,"org.easymock.tests2.UsageStrictMockTest.range":127,"org.easymock.tests2.UsageConstraintsTest.lessThan":63,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":221,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":503,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":410,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":269,"org.easymock.tests2.CaptureTest.testCaptureRightOne":145,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":291,"org.easymock.tests2.UsageConstraintsTest.testOr":141,"org.easymock.tests.UsageRangeTest.combination":370,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":19,"org.easymock.tests.UsageTest.wrongArguments":130,"org.easymock.tests2.MockBuilderTest.testWithConstructor":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":288,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":56,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":322,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":404,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":329,"org.easymock.tests.UsageVarargTest.varargShortAccepted":433,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":394,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":481,"org.easymock.tests2.UsageConstraintsTest.cmpTo":173,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":304,"org.easymock.tests2.CompareToTest.testLessThan":62,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":110,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":234,"org.easymock.tests2.CaptureTest.testCaptureFromStub":202,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":341,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":9,"org.easymock.tests.UsageTest.unexpectedCallWithArray":129,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":135,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":479,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":330,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":489,"org.easymock.tests2.UsageConstraintsTest.constraints":139,"org.easymock.samples.ExampleTest.addAndChangeDocument":153,"org.easymock.tests.UsageStrictMockTest.testVerify":492,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":155,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":487,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":384,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":198,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":458,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":37,"org.easymock.tests.LimitationsTest.abstractClass":445,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":323,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":459,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":364,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":427,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":274}}]
