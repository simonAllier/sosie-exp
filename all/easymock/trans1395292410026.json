[{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[0],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:180","sourceCode":"if ((java.lang.Class<?>[].int) != (java.lang.Object[].int)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[1,2,3,4,5,6],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:126","failures":[7,8,9,10,11],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,1,64,65,66,67,68,4,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,7,117,8,118,9,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,5,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,10,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,0,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,11,480,481,482,483,484,485,486,487,488,489,490],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[72,103,110,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,386,388,389,390,391,392,393,446,451,452,457,480,489],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[491,492,493],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MocksControl:189","failures":[12,13,14,15,26,29,30,31,38,47,49,50,52,53,103,106,107,108,111,112,113,115,122,160,165,171,178,179,180,184,186,192,259,295,297,299,300,301,419,420,421,422,423,446,447,452,454,455,458,459,460,461,462,463,464],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"failures":[124],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[103,110,388,446,452,457],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:90","sourceCode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","type":"CtIfImpl"},"failures":[494],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[1,495,496,497,3,498,5],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMockSupport:530","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.createNiceControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl() : org.easymock.EasyMockSupport.createControl()","type":"CtLocalVariableImpl"},"failures":[186,209,219,238,239,243],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[499,500,297,501,502,454],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:36","sourceCode":"try {\n    if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n        org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n    } \n    return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]));\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace();\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace();\n} catch (final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper) {\n    throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace();\n}","type":"CtTryImpl"},"failures":[12,13,14,15,18,19,20,21,22,23,24,25,26,28,29,30,31,32,38,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,65,66,68,4,69,71,72,73,74,75,76,78,79,80,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,7,117,8,118,9,120,121,122,123,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,154,155,156,157,158,159,160,162,165,166,167,168,171,173,177,178,179,180,183,184,186,192,199,200,201,202,206,209,219,225,231,10,232,233,235,237,238,238,239,239,241,243,259,272,273,274,275,276,277,278,279,280,281,282,284,286,295,297,298,299,300,301,302,304,305,306,309,332,338,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,372,378,379,380,382,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,417,419,420,421,422,423,424,425,426,427,428,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,476,477,478,479,11,480,481,482,483,484,485,486,487,488,489,490],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:58","sourceCode":"java.lang.String[][int] = java.lang.Class<?>[][int].getName()","type":"CtAssignmentImpl"},"failures":[4,69,70,503],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:94","sourceCode":"return org.easymock.internal.MockInvocationHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])","type":"CtReturnImpl"},"failures":[12,13,14,15,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,38,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,68,4,69,70,71,72,73,74,75,76,78,79,80,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,7,117,8,118,9,120,121,122,123,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,152,153,154,155,156,157,158,159,160,162,165,166,167,168,171,173,177,178,179,180,183,184,186,192,199,200,201,202,206,209,219,225,228,229,230,231,10,232,233,234,235,237,238,238,239,239,240,241,242,243,259,272,273,274,275,276,277,278,279,280,281,282,284,285,286,295,296,297,298,299,300,301,302,303,304,305,306,307,309,310,311,312,313,314,315,332,338,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,372,378,379,380,382,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,417,419,420,421,422,423,424,425,426,427,428,429,430,431,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,476,477,478,479,11,480,481,482,483,484,485,486,487,488,489,490],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[504,148],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:230","sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[505],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"(((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \") + (org.easymock.LogicalOperator.getSymbol()))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"failures":[28,29,30,31,32,38,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,63,65,66,68,4,69,70,71,72,73,74,75,76,78,79,80,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,7,117,8,118,9,120,121,122,123,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,152,153,154,155,156,157,158,159,160,162,165,166,167,168,171,173,177,178,179,180,183,184,186,192,199,200,201,202,206,209,219,225,228,229,230,231,10,232,233,234,235,236,237,238,238,239,239,240,241,242,243,245,246,247,251,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,332,338,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,372,378,379,380,382,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,417,419,420,421,422,423,424,425,426,427,428,429,430,431,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,476,477,478,479,11,480,481,482,483,484,485,486,487,488,489,490],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MocksControl:105","failures":[12,13,14,15,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,65,66,67,68,69,71,72,78,81,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,7,117,8,118,9,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,156,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,228,231,10,232,233,234,235,236,237,240,241,242,244,245,246,247,248,249,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,375,381,383,384,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,471,472,474,475,476,477,478,479,11,480,481,482,483,485,486,487,488,489,490],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[325,327,336,337,339],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1976","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[506,139],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:53","failures":[112,124,458],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:50","failures":[30,259,300,507,508,446,447],"status":-1,"binaryOperator":"int == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1940","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[12,13,14,15,18,19,20,23,24,25,26,27,28,29,30,31,32,38,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,68,4,69,70,71,72,73,74,75,76,78,79,80,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,7,117,8,9,120,121,122,123,125,126,127,128,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,154,155,156,157,158,159,160,162,165,166,167,168,171,173,177,178,179,180,183,184,186,192,199,200,201,202,206,209,219,225,228,229,230,231,10,232,233,234,235,237,238,239,240,241,242,243,259,275,276,277,278,279,284,285,295,296,297,298,299,300,301,302,309,310,311,312,313,314,315,340,341,342,343,344,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,372,379,380,382,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,419,420,421,422,423,424,425,426,427,428,429,430,431,433,434,435,436,437,438,439,440,441,443,444,445,446,447,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,476,477,478,11,480,483,484,485,486,487,488,489,490],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:42","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"expected"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":123,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":452,"org.easymock.tests2.UsageTest.argumentsOrdered":113,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":55,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":193,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":326,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":108,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":242,"org.easymock.tests2.DelegateToTest.testReturnException":7,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":486,"org.easymock.tests.MockingTest.testPartialClassMocking":379,"org.easymock.tests.MockClassControlTest.testToString":289,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":149,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":417,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":170,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":335,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":213,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":209,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":350,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":19,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":495,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":130,"org.easymock.tests2.UsageTest.wrongArguments":106,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":340,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":44,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":463,"org.easymock.samples.ExampleTest.answerVsDelegate":10,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":473,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":384,"org.easymock.tests2.UsageConstraintsTest.testNull":126,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":157,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":54,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":294,"org.easymock.tests2.CaptureTest.testPrimitive":92,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":344,"org.easymock.tests.UsageTest.moreThanOneArgument":453,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":369,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":156,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":277,"org.easymock.tests.UsageTest.argumentsOrdered":459,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":345,"org.easymock.tests.UsageVarargTest.varargIntAccepted":431,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":505,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":331,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":424,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":498,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":171,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":84,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":197,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":178,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":318,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":428,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":38,"org.easymock.tests.ReplayStateInvalidUsageTest.times":268,"org.easymock.tests2.DependencyTest.testClassMocking":16,"org.easymock.tests2.AnswerTest.answer":20,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":131,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":333,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":15,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":470,"org.easymock.tests2.CaptureTest.testAnd":89,"org.easymock.tests2.UsageTest.strictResetToDefault":104,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":175,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":165,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":276,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":443,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":49,"org.easymock.tests2.DelegateToTest.testDelegate":9,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":349,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":365,"org.easymock.tests.LimitationsTest.mockFinalMethod":373,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":489,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":423,"org.easymock.tests2.DependencyTest.testClassMockingSupport":17,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":465,"org.easymock.tests2.CaptureTest.testCapture1_2446744":93,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":161,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":363,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":13,"org.easymock.tests.UsageThrowableTest.throwError":386,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":262,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":472,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":198,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":374,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":227,"org.easymock.samples.PartialClassMockTest.testGetArea":243,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":263,"org.easymock.tests.MockingTest.testInterfaceMocking":381,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":425,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":305,"org.easymock.tests2.UsageTest.niceToStrict":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":214,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":249,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":351,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":493,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":316,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":177,"org.easymock.tests2.MockBuilderTest.testCreateMock":183,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":222,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":41,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":499,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":359,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":50,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":469,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":274,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":307,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":461,"org.easymock.tests.UsageOverloadedMethodTest.overloading":450,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":224,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":480,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":136,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":449,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":405,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":135,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":98,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":432,"org.easymock.tests2.EasyMockSupportClassTest.testAll":206,"org.easymock.tests.MockClassControlTest.testEquals":293,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":285,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":367,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":421,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":14,"org.easymock.tests2.CaptureTest.testCaptureAll":90,"org.easymock.tests.MockNameTest.defaultName":375,"org.easymock.tests2.UsageConstraintsTest.testMatches":137,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":260,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":278,"org.easymock.samples.ExampleTest.voteForRemovals":235,"org.easymock.tests.UsageVarargTest.allKinds":440,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":445,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":422,"org.easymock.samples.BasicClassMockTest.testPrintContent":230,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":392,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":26,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":490,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":118,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":194,"org.easymock.tests2.UsageConstraintsTest.greaterThan":139,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":207,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":442,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":168,"org.easymock.samples.ExampleTest.voteForRemoval":232,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":258,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":169,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":59,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":474,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":85,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":160,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":484,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":103,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":182,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":323,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":47,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":204,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":485,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":116,"org.easymock.tests2.CaptureTest.testCaptureFirst":102,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":322,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":48,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":115,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":483,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":401,"org.easymock.tests2.UsageTest.moreThanOneArgument":105,"org.easymock.tests2.CaptureTest.testCapture2_2446744":101,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":61,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":184,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":334,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":439,"org.easymock.tests.GenericTest.testBridgedEquals":0,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":314,"org.easymock.tests.UsageExpectAndReturnTest.longType":397,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":419,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":45,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":368,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":448,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":144,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":366,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":275,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":281,"org.easymock.tests.UsageCallCountTest.tooManyCalls":315,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":223,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":402,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":43,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":355,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":391,"org.easymock.tests.MockingTest.testNiceClassMocking":385,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":74,"org.easymock.tests.MockingTest.testClassMocking":377,"org.easymock.tests2.UsageConstraintsTest.testContains":134,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":308,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":201,"org.easymock.tests2.UsageConstraintsTest.testFind":125,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":451,"org.easymock.tests.MockTypeTest.fromEasyMockClass":471,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":68,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":295,"org.easymock.tests.UsageExpectAndReturnTest.object":404,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":162,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":42,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":53,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":496,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":434,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":247,"org.easymock.tests.UsageTest.exactCallCountByLastCall":460,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":414,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":321,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":416,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":346,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":1,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":429,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":410,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":11,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":188,"org.easymock.tests.MockClassControlTest.testHashCode":292,"org.easymock.tests2.EasyMockSupportTest.testVerify":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":216,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":347,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":478,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":273,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":12,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":119,"org.easymock.tests.UsageVarargTest.varargCharAccepted":433,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":250,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":27,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":339,"org.easymock.tests2.UsageTest.openCallCountByLastCall":109,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":491,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":56,"org.easymock.tests.DefaultClassInstantiatorTest.object":251,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":272,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":245,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":494,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":217,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":357,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":389,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":36,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":187,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":166,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":291,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":356,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":411,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":225,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":290,"org.easymock.tests2.UsageTest.resumeIfFailure":114,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":468,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":83,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":488,"org.easymock.tests2.StubTest.stubWithReturnValue":72,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":5,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":403,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":145,"org.easymock.tests2.SerializationTest.testAllMockedMethod":70,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":332,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":500,"org.easymock.samples.SupportTest.voteForRemovals":241,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":283,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":190,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":362,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":503,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":338,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":21,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":418,"org.easymock.tests.UsageExpectAndThrowTest.object":360,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":142,"org.easymock.tests2.DelegateToTest.testWrongClass":8,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":476,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":477,"org.easymock.samples.ConstructorCalledMockTest.testTax":238,"org.easymock.tests.UsageStrictMockTest.range":300,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":87,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":52,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":73,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":361,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":179,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":458,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":203,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":270,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":462,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":501,"org.easymock.tests2.CaptureTest.testCaptureNone":97,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":306,"org.easymock.tests.UsageUnorderedTest.message":259,"org.easymock.tests.UsageVerifyTest.twoReturns":447,"org.easymock.tests.UsageVarargTest.varargByteAccepted":438,"org.easymock.tests2.ThreadingTest.testThreadSafe":58,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":220,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":312,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":229,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":248,"org.easymock.tests2.CaptureTest.testCapture_2617107":91,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":467,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":336,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":343,"org.easymock.tests2.UsageConstraintsTest.any":132,"org.easymock.tests2.StubTest.stub":71,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":267,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":282,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":337,"org.easymock.tests.UsageExpectAndThrowTest.longType":353,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":255,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":266,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":29,"org.easymock.tests2.SerializationTest.testClass":4,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":192,"org.easymock.tests.LimitationsTest.mockNativeMethod":372,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":413,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":286,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":35,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":32,"org.easymock.tests2.NameTest.nameForMocksControl":153,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":37,"org.easymock.tests2.MockedExceptionTest.testMockedException":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":208,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":457,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":67,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":354,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":382,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":154,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":180,"org.easymock.tests.MockingTest.testNicePartialClassMocking":380,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":159,"org.easymock.tests2.CaptureTest.testCaptureLast":96,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":33,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":2,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":466,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":129,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":80,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":143,"org.easymock.tests.MockingTest.testTwoMocks":378,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":81,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":394,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":358,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":112,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":147,"org.easymock.samples.ExampleTest.removeNonExistingDocument":236,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":40,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":264,"org.easymock.tests.UsageStrictMockTest.differentMethods":301,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":189,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":253,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":60,"org.easymock.tests2.MockBuilderTest.testCreateMockString":186,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":210,"org.easymock.tests.UsageExpectAndThrowTest.floatType":352,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":205,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":23,"org.easymock.tests.UsageVerifyTest.twoThrows":446,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":64,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":479,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":219,"org.easymock.samples.ExampleTest.voteAgainstRemoval":233,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":304,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":327,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":167,"org.easymock.tests.LimitationsTest.privateConstructor":371,"org.easymock.tests2.UsageConstraintsTest.testNotNull":146,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":393,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":199,"org.easymock.tests2.UsageTest.defaultResetToNice":111,"org.easymock.samples.ExampleTest.voteAgainstRemovals":231,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":409,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":328,"org.easymock.tests.UsageVarargTest.differentLength":435,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":34,"org.easymock.tests2.CallbackTest.callback":65,"org.easymock.tests2.UsageConstraintsTest.equals":124,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":163,"org.easymock.tests.UsageTest.openCallCountByLastCall":456,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":120,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":342,"org.easymock.tests.UsageCallCountTest.tooFewCalls":310,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":76,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":464,"org.easymock.tests.UsageThrowableTest.throwCheckedException":390,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":502,"org.easymock.tests.MockingTest.testStrictClassMocking":376,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":415,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":79,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":39,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":75,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":269,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":78,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":25,"org.easymock.tests.ObjectMethodsTest.testHashCode":246,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":3,"org.easymock.tests2.NameTest.nameForNiceMock":152,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":62,"org.easymock.tests2.DependencyTest.testInterfaceMocking":18,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":497,"org.easymock.samples.ExampleTest.addDocument":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":221,"org.easymock.tests2.DelegateToTest.testStubDelegate":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":226,"org.easymock.tests2.AnswerTest.stubAnswer":24,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":298,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":181,"org.easymock.tests.UsageVarargTest.varargLongAccepted":437,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":302,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":325,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":412,"org.easymock.tests.UsageExpectAndReturnTest.floatType":396,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":63,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":239,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":481,"org.easymock.tests.UsageThrowableTest.noUpperLimit":387,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":140,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":196,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":121,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":82,"org.easymock.tests2.SerializationTest.test":69,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":94,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":252,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":395,"org.easymock.tests2.UsageConstraintsTest.testSame":127,"org.easymock.samples.SupportTest.addDocument":240,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":77,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":211,"org.easymock.tests.GenericTest.testPackageScope":284,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":348,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":320,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":195,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":383,"org.easymock.tests2.NameTest.nameForMock":150,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":406,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":185,"org.easymock.tests2.UsageStrictMockTest.differentMethods":31,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":164,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":398,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":364,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":244,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":444,"org.easymock.tests2.MockedExceptionTest.testRealException":202,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":475,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":88,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":330,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":6,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":28,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":329,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":271,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":341,"org.easymock.tests2.NameTest.nameForStrictMock":151,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":176,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":492,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":66,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":158,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":86,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":507,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":141,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":254,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":173,"org.easymock.tests2.UsageStrictMockTest.range":30,"org.easymock.tests2.UsageConstraintsTest.lessThan":148,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":191,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":46,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":324,"org.easymock.tests2.CaptureTest.testCaptureRightOne":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":215,"org.easymock.tests2.UsageConstraintsTest.testOr":128,"org.easymock.tests.UsageRangeTest.combination":441,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":155,"org.easymock.tests.UsageTest.wrongArguments":455,"org.easymock.tests2.MockBuilderTest.testWithConstructor":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":212,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":288,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":399,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":407,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":317,"org.easymock.tests.UsageVarargTest.varargShortAccepted":436,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":256,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":313,"org.easymock.tests2.UsageConstraintsTest.cmpTo":133,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":22,"org.easymock.tests2.CompareToTest.testLessThan":504,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":319,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":110,"org.easymock.tests2.CaptureTest.testCaptureFromStub":100,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":261,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":174,"org.easymock.tests.UsageTest.unexpectedCallWithArray":454,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":297,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":311,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":408,"org.easymock.tests2.UsageConstraintsTest.constraints":122,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":299,"org.easymock.samples.ExampleTest.addAndChangeDocument":237,"org.easymock.tests.UsageStrictMockTest.testVerify":303,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":228,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":296,"org.easymock.tests2.CompareToTest.testGreateThan":506,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":420,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":95,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":426,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":400,"org.easymock.tests.LimitationsTest.abstractClass":370,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":482,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":427,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":508,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":430,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":51}}]
