[{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,0,1,38,2,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,3,4,110,111,112,113,114,115,116,117,5,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,7,236,237,238,239,240,241,242,243,244,245,246,247,248,249],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:773","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:155","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Class<?>.getDeclaredField(\"serialVersionUID\");\n    final int int = (java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int);\n    if (((java.lang.reflect.Field.getModifiers()) & int) == int) {\n        java.lang.reflect.Field.setAccessible(true);\n        return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null));\n    } \n} catch (final java.lang.NoSuchFieldException java.lang.NoSuchFieldException) {\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\");\n}","type":"CtTryImpl"},"failures":[250],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[50,57,75],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[114,115,116,251],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[16,17,252,18,19,20,21,22,24,25,26,27,28,29,30,31,33,34,35,36,37,0,1,38,39,40,253,254,41,44,46,47,48,49,50,51,255,52,53,54,55,56,57,256,58,60,62,63,64,65,66,257,67,68,258,69,70,259,260,261,262,72,263,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,264,95,96,97,98,99,100,101,102,103,104,105,106,107,265,266,108,109,3,4,110,111,112,113,114,115,116,117,5,118,119,267,120,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,268,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,269,270,191,192,193,271,199,200,272,273,274,275,276,201,203,204,6,277,278,205,210,212,213,216,217,218,219,279,280,281,220,282,283,284,285,286,287,221,222,223,224,225,288,226,289,290,227,228,230,231,291,292,232,293,233,234,235,7,236,237,238,239,240,241,242,245,246,247,248,249],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[271,272],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:77","failures":[294,295],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:52","failures":[89],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"position":"org.easymock.EasyMock:840","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[296,297],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[298],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[296,297],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[296],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[17,252,19,20,21,299,22,300,301,23,302,24,303,304,305,42,43,44,59,306,307,308,309,60,61,62,63,310,311,312,313,314,99,100,101,102,104,105,315,316,317,318,319,320,321,322,323,324,110,325,326,111,327,328,329,330,331,332,333,334,335,112,336,337,338,339,340,113,341,342,114,116,117,343,344,122,345,346,347,348,349,350,351,352,353,143,354,296,144,145,355,297,356,357,358,359,360,221,222,223,361,224,362,363,364,365,366,367,368,241,242,243,243,244,244,245],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"result","paramTypes":"paramTypes","this":"this"}},{"position":"org.easymock.EasyMock:1065","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[369],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:103","sourceCode":"continue","type":"CtContinueImpl"},"failures":[355],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[259,260,80,91,266,108,370,269,270,191,199,201,216,283,284,290,227,234],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"failures":[83],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:314","failures":[371,372,373,374],"status":-1,"binaryOperator":"java.lang.Throwable instanceof java.lang.RuntimeException","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"failures":[296,297],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[375,376,377,378,379,288],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[380],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return this.boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:36","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"matching"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[90,381],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:63","sourceCode":"java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[301,69],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplantationPoint":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"failures":[382],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":76,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":281,"org.easymock.tests2.UsageTest.argumentsOrdered":262,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":35,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":209,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":70,"org.easymock.tests2.StubTest.stubWithReturnValue":66,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":249,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":95,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":132,"org.easymock.tests2.SerializationTest.testAllMockedMethod":116,"org.easymock.tests2.DelegateToTest.testReturnException":118,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":207,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":298,"org.easymock.tests.MockingTest.testPartialClassMocking":221,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":376,"org.easymock.samples.SupportTest.voteForRemovals":248,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":296,"org.easymock.tests.MockClassControlTest.testToString":345,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":305,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":330,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":251,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":111,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":155,"org.easymock.tests.UsageExpectAndThrowTest.object":165,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":93,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":47,"org.easymock.tests2.DelegateToTest.testWrongClass":267,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":212,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":213,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":82,"org.easymock.tests2.UsageTest.wrongArguments":258,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":230,"org.easymock.tests.UsageStrictMockTest.range":290,"org.easymock.samples.ConstructorCalledMockTest.testTax":243,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":153,"org.easymock.samples.ExampleTest.answerVsDelegate":7,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":32,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":357,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":99,"org.easymock.tests2.UsageConstraintsTest.testNull":78,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":19,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":166,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":350,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":62,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":34,"org.easymock.tests2.CaptureTest.testPrimitive":51,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":322,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":285,"org.easymock.tests.UsageTest.moreThanOneArgument":220,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":174,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":18,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":152,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":377,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":188,"org.easymock.tests2.CaptureTest.testCaptureNone":55,"org.easymock.tests.UsageUnorderedTest.message":268,"org.easymock.tests.UsageVerifyTest.twoReturns":193,"org.easymock.tests.UsageVarargTest.varargByteAccepted":182,"org.easymock.tests2.ThreadingTest.testThreadSafe":39,"org.easymock.tests.UsageTest.argumentsOrdered":286,"org.easymock.tests.UsageVarargTest.varargIntAccepted":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":336,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":219,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":241,"org.easymock.tests2.CaptureTest.testCapture_2617107":50,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":146,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":59,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":121,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":292,"org.easymock.tests2.UsageConstraintsTest.any":83,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":61,"org.easymock.tests2.StubTest.stub":65,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":374,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":150,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":208,"org.easymock.tests.UsageExpectAndThrowTest.longType":158,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":366,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":265,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":16,"org.easymock.tests2.SerializationTest.testClass":114,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":64,"org.easymock.tests.LimitationsTest.mockNativeMethod":143,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":380,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":355,"org.easymock.tests2.AnswerTest.answer":0,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":142,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":15,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":318,"org.easymock.tests2.CaptureTest.testAnd":48,"org.easymock.tests2.UsageTest.strictResetToDefault":67,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":23,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":109,"org.easymock.tests2.NameTest.nameForMocksControl":11,"org.easymock.tests2.MockedExceptionTest.testMockedException":43,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":326,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":203,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":29,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":284,"org.easymock.tests2.DelegateToTest.testDelegate":120,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":223,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":159,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":17,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":63,"org.easymock.tests.MockingTest.testNicePartialClassMocking":222,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":170,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":21,"org.easymock.tests.LimitationsTest.mockFinalMethod":354,"org.easymock.tests2.CaptureTest.testCaptureLast":54,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":210,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":81,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":105,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":198,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":94,"org.easymock.tests.MockingTest.testTwoMocks":360,"org.easymock.tests2.CaptureTest.testCapture1_2446744":255,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":123,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":168,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":13,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":163,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":261,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":97,"org.easymock.tests.UsageThrowableTest.throwError":271,"org.easymock.tests.UsageStrictMockTest.differentMethods":227,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":364,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":253,"org.easymock.tests2.MockBuilderTest.testCreateMockString":314,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":327,"org.easymock.tests.UsageExpectAndThrowTest.floatType":157,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":190,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":324,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":1,"org.easymock.tests.UsageVerifyTest.twoThrows":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":112,"org.easymock.samples.PartialClassMockTest.testGetArea":245,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":147,"org.easymock.samples.ExampleTest.voteAgainstRemoval":237,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":24,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":331,"org.easymock.tests2.UsageTest.niceToStrict":69,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":156,"org.easymock.tests.LimitationsTest.privateConstructor":353,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":294,"org.easymock.tests2.UsageConstraintsTest.testNotNull":96,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":276,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":42,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":295,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":60,"org.easymock.tests2.MockBuilderTest.testCreateMock":311,"org.easymock.tests2.UsageTest.defaultResetToNice":71,"org.easymock.samples.ExampleTest.voteAgainstRemovals":235,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":338,"org.easymock.tests2.CallbackTest.callback":5,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":300,"org.easymock.tests.UsageTest.openCallCountByLastCall":283,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":375,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":164,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":30,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":73,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":372,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":214,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":291,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":151,"org.easymock.tests.UsageCallCountTest.tooFewCalls":217,"org.easymock.tests.UsageOverloadedMethodTest.overloading":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":340,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":335,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":278,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":87,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":293,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":102,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":134,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":250,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":86,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":56,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":154,"org.easymock.tests.UsageThrowableTest.throwCheckedException":273,"org.easymock.tests.MockClassControlTest.testEquals":349,"org.easymock.tests2.EasyMockSupportClassTest.testAll":110,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":145,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":378,"org.easymock.tests.MockingTest.testStrictClassMocking":358,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":172,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":315,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":196,"org.easymock.tests2.CaptureTest.testCaptureAll":49,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":14,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":104,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":101,"org.easymock.tests2.UsageConstraintsTest.testMatches":88,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":103,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":2,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":189,"org.easymock.samples.ExampleTest.voteForRemovals":239,"org.easymock.tests2.NameTest.nameForNiceMock":10,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":41,"org.easymock.tests.UsageVarargTest.allKinds":184,"org.easymock.tests2.DependencyTest.testInterfaceMocking":46,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":191,"org.easymock.samples.BasicClassMockTest.testPrintContent":242,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":197,"org.easymock.samples.ExampleTest.addDocument":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":341,"org.easymock.tests2.DelegateToTest.testStubDelegate":119,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":275,"org.easymock.tests2.AnswerTest.stubAnswer":38,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":211,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":226,"org.easymock.tests2.UsageConstraintsTest.greaterThan":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":325,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":202,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":303,"org.easymock.tests.UsageVarargTest.varargLongAccepted":181,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":228,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":368,"org.easymock.samples.ExampleTest.voteForRemoval":236,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":304,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":40,"org.easymock.tests.UsageExpectAndReturnTest.floatType":125,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":141,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":299,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":117,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":244,"org.easymock.tests.UsageThrowableTest.noUpperLimit":199,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":91,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":257,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":224,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":74,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":320,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":52,"org.easymock.tests2.SerializationTest.test":115,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":310,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":363,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":27,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":200,"org.easymock.tests2.UsageConstraintsTest.testSame":79,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":323,"org.easymock.samples.SupportTest.addDocument":247,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":206,"org.easymock.tests2.CaptureTest.testCaptureFirst":58,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":28,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":263,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":328,"org.easymock.tests.GenericTest.testPackageScope":144,"org.easymock.tests2.CaptureTest.testCapture2_2446744":256,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":254,"org.easymock.tests2.UsageTest.moreThanOneArgument":68,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":312,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":183,"org.easymock.tests.GenericTest.testBridgedEquals":297,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":279,"org.easymock.tests2.NameTest.nameForMock":8,"org.easymock.tests.UsageExpectAndReturnTest.longType":126,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":194,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":25,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":313,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":135,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":173,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":264,"org.easymock.tests2.UsageStrictMockTest.differentMethods":108,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":171,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":373,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":186,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":301,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":127,"org.easymock.tests.UsageCallCountTest.tooManyCalls":280,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":169,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":204,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":339,"org.easymock.tests2.MockedExceptionTest.testRealException":45,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":131,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":107,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":160,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":274,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":231,"org.easymock.tests.MockingTest.testNiceClassMocking":361,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":100,"org.easymock.tests.MockingTest.testClassMocking":359,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":306,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":215,"org.easymock.tests2.UsageConstraintsTest.testContains":85,"org.easymock.tests2.NameTest.nameForStrictMock":9,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":44,"org.easymock.tests2.UsageConstraintsTest.testFind":77,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":234,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":309,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":3,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":20,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":4,"org.easymock.tests.UsageExpectAndReturnTest.object":133,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":321,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":365,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":92,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":22,"org.easymock.tests.ErrorMessageTest.testGetters":369,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":307,"org.easymock.tests2.UsageStrictMockTest.range":266,"org.easymock.tests2.UsageConstraintsTest.lessThan":98,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":316,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":33,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":179,"org.easymock.tests.UsageTest.exactCallCountByLastCall":287,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":185,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":332,"org.easymock.tests2.CaptureTest.testCaptureRightOne":57,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":269,"org.easymock.tests2.UsageConstraintsTest.testOr":80,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":343,"org.easymock.tests.UsageRangeTest.combination":201,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":252,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":139,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":175,"org.easymock.tests.UsageTest.wrongArguments":282,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":277,"org.easymock.tests.MockClassControlTest.testHashCode":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":329,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":122,"org.easymock.tests2.EasyMockSupportTest.testVerify":37,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":128,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":370,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":333,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":270,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":371,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":367,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":6,"org.easymock.tests.UsageVarargTest.varargShortAccepted":180,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":12,"org.easymock.tests2.UsageConstraintsTest.cmpTo":84,"org.easymock.tests.UsageVarargTest.varargCharAccepted":178,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":106,"org.easymock.tests2.UsageTest.openCallCountByLastCall":259,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":260,"org.easymock.tests.DefaultClassInstantiatorTest.object":362,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":36,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":308,"org.easymock.tests.UsageTest.unexpectedCallWithArray":379,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":334,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":162,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":319,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":288,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":272,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":218,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":137,"org.easymock.tests2.CaptureTest.testCapture":382,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":347,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":302,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":289,"org.easymock.tests2.UsageConstraintsTest.constraints":75,"org.easymock.samples.ExampleTest.addAndChangeDocument":240,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":161,"org.easymock.tests.UsageStrictMockTest.testVerify":229,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":140,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":246,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":346,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":113,"org.easymock.tests2.CompareToTest.testGreateThan":381,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":195,"org.easymock.tests2.UsageTest.resumeIfFailure":72,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":53,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":317,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":148,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":356,"org.easymock.tests.LimitationsTest.abstractClass":352,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":129,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":205,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":149,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":31,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":176}}]
