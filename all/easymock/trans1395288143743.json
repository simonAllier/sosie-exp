[{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[61,62,63,64,65,66,67,68,69,70],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"clazz":"parameterType"}},{"position":"org.easymock.internal.MockBuilder:159","failures":[71,72,73,74,75,76,77],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[1,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,76,76,77,77,93,94,95,96,97,41,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[115,1,116,117,118,119,41,45,47,120,121,122,123],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:320","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[124,125],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1205","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"failures":[126,127,128,129,130,131,115,132,133,134,1,2,3,4,135,136,137,6,138,139,7,140,8,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,9,10,157,158,11,12,159,160,161,162,163,164,165,166,78,167,168,116,169,13,170,117,118,171,172,119,173,174,175,176,79,80,177,178,81,82,83,84,179,180,181,182,85,183,86,87,184,88,89,185,186,187,188,90,91,92,189,21,190,191,192,193,194,195,22,196,197,27,28,31,198,199,200,201,202,203,204,205,206,76,77,207,208,93,94,95,96,97,209,41,42,43,103,104,210,211,105,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,106,263,264,265,266,267,107,108,109,110,111,268,269,270,45,46,47,271,272,273,120,48,121,122,123,274,275,276,277,113,114,278,279,280,281,282,283,284,285,286],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"failures":[87],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:50","sourceCode":"if (int != int) {\n    throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:113","sourceCode":"if (java.lang.Class<?>[][int].isPrimitive()) {\n    java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n} else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"failures":[287,288],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"length":"i","initArgs":"methodArgs","paramTypes":"methodTypes"}},{"position":"org.easymock.internal.ReflectionUtils:106","failures":[149,289,290,291,292,153,293,156,9,10,157,11,12,189,21,191,192,193,194,195,22,294,196,23,25,295,296,26,197,297,27,28,298,29,299,30,198,300,199,200,201,301,302,76,76,77,77,208,209,303,304,305,232,306,233,234,235,55,58,307],"status":-1,"binaryOperator":"java.lang.Class<?>[] == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[308,92],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MocksControl:189","failures":[126,127,128,129,309,310,2,3,4,137,138,139,140,8,116,14,170,311,171,15,16,119,177,194,22,25,297,27,28,29,30,31,36,312,40,313,42,43,264,265,266,314,267,46,47,120,49,50,51,52,123,274,275,276,277],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[315],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[153,154,293,316],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[177,179],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:149","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[317,318,319],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"failures":[320],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if (org.easymock.ConstructorArgs == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"this"}},{"position":"org.easymock.EasyMock:721","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:305","failures":[130,131,115,133,134,1,2,3,4,135,136,137,6,138,139,7,140,8,141,142,143,144,145,146,147,148,149,150,153,154,155,156,9,10,157,158,11,12,159,160,321,161,162,163,164,165,166,167,168,116,169,13,170,117,118,171,172,119,173,174,175,176,79,80,177,178,81,82,83,84,179,180,181,182,85,183,86,87,184,88,89,185,186,187,322,188,90,91,92,189,21,190,191,192,193,195,294,196,23,296,197,27,28,29,31,198,300,199,200,201,202,203,204,205,206,207,208,209,41,42,43,323,103,104,105,324,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,106,263,107,108,109,110,111,325,268,326,269,270,45,46,47,271,272,273,120,48,121,122,123,53,54,113,114,278,279,280,327,285],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:98","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"result"}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[328],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:959","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[329],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:41","sourceCode":"org.easymock.IArgumentMatcher.appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[330],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[151,331],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:92","failures":[159,321,166,177,178,82,84,179,332,185,90],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:160","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"failures":[333,334,335],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[130,131,115,133,1,2,3,4,135,136,137,6,138,139,7,140,8,141,142,143,144,145,146,147,148,149,153,154,155,156,9,10,157,158,11,12,159,160,161,162,163,164,165,166,167,168,116,169,13,170,117,118,171,172,119,174,79,80,177,178,81,82,83,84,179,180,181,182,85,183,86,87,184,88,89,185,186,187,188,90,91,92,189,21,190,191,192,193,195,294,196,23,296,197,27,28,29,31,198,300,199,200,201,202,204,205,206,207,208,209,304,41,42,43,336,337,338,339,340,341,342,343,103,104,105,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,106,344,107,108,109,110,111,268,326,269,270,45,47,271,272,273,120,48,121,122,123,113,114,327],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[61,62,63,64,66,67,69],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[61,62,63,64,66,67,69],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[23],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":178,"org.easymock.tests2.UsageTest.argumentsOrdered":16,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":120,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":142,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":284,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":32,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":125,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":311,"org.easymock.tests2.StubTest.stubWithReturnValue":155,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":69,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":252,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":188,"org.easymock.tests2.SerializationTest.testAllMockedMethod":293,"org.easymock.tests2.DelegateToTest.testReturnException":173,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":323,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":282,"org.easymock.tests.MockingTest.testPartialClassMocking":233,"org.easymock.samples.SupportTest.voteForRemovals":207,"org.easymock.tests.MockClassControlTest.testToString":37,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":344,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":224,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":24,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":102,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":316,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":212,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":199,"org.easymock.tests.UsageExpectAndThrowTest.object":222,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":131,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":186,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":62,"org.easymock.tests2.DelegateToTest.testWrongClass":175,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":113,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":114,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":180,"org.easymock.tests2.UsageTest.wrongArguments":14,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":103,"org.easymock.samples.ConstructorCalledMockTest.testTax":76,"org.easymock.tests.UsageStrictMockTest.range":42,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":276,"org.easymock.samples.ExampleTest.answerVsDelegate":203,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":140,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":58,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":156,"org.easymock.tests2.UsageConstraintsTest.testNull":82,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":223,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":191,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":27,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":141,"org.easymock.tests2.CaptureTest.testPrimitive":161,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":105,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":231,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":51,"org.easymock.tests.UsageTest.moreThanOneArgument":48,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":275,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":190,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":95,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":338,"org.easymock.tests2.CaptureTest.testCaptureNone":164,"org.easymock.tests.UsageUnorderedTest.message":36,"org.easymock.tests.UsageVerifyTest.twoReturns":47,"org.easymock.tests2.ThreadingTest.testThreadSafe":144,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":324,"org.easymock.tests.UsageTest.argumentsOrdered":52,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":301,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":34,"org.easymock.tests2.CaptureTest.testCapture_2617107":321,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":107,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":67,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":25,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":341,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":334,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":211,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":297,"org.easymock.tests2.UsageConstraintsTest.any":181,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":111,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":342,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":283,"org.easymock.tests.UsageExpectAndThrowTest.longType":215,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":317,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":310,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":31,"org.easymock.tests2.SerializationTest.testClass":153,"org.easymock.tests.LimitationsTest.mockNativeMethod":232,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":4,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":315,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":304,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":262,"org.easymock.tests2.AnswerTest.answer":115,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":332,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":129,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":291,"org.easymock.tests2.CaptureTest.testAnd":159,"org.easymock.tests2.UsageTest.strictResetToDefault":169,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":22,"org.easymock.tests2.NameTest.nameForMocksControl":20,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":94,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":269,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":138,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":122,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":320,"org.easymock.tests2.DelegateToTest.testDelegate":176,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":331,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":235,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":216,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":189,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":28,"org.easymock.tests.MockingTest.testNicePartialClassMocking":234,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":227,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":193,"org.easymock.tests2.CaptureTest.testCaptureLast":163,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":285,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":54,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":12,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":179,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":267,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":187,"org.easymock.tests.MockingTest.testTwoMocks":306,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":53,"org.easymock.tests2.CaptureTest.testCapture1_2446744":162,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":243,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":225,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":220,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":127,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":15,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":91,"org.easymock.tests.UsageThrowableTest.throwError":236,"org.easymock.tests.UsageStrictMockTest.differentMethods":43,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":57,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":146,"org.easymock.tests2.MockBuilderTest.testCreateMockString":30,"org.easymock.tests.UsageExpectAndThrowTest.floatType":214,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":97,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":184,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":132,"org.easymock.tests.UsageVerifyTest.twoThrows":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":200,"org.easymock.samples.PartialClassMockTest.testGetArea":208,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":0,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":108,"org.easymock.samples.ExampleTest.voteAgainstRemoval":205,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":340,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":337,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":336,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":196,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":213,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":35,"org.easymock.tests2.UsageTest.niceToStrict":170,"org.easymock.tests2.UsageConstraintsTest.testNotNull":90,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":242,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":98,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":197,"org.easymock.tests2.MockBuilderTest.testCreateMock":298,"org.easymock.tests2.UsageTest.defaultResetToNice":171,"org.easymock.samples.ExampleTest.voteAgainstRemovals":202,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":258,"org.easymock.tests2.CallbackTest.callback":150,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":71,"org.easymock.tests.UsageTest.openCallCountByLastCall":121,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":221,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":139,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":79,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":274,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":210,"org.easymock.tests.UsageOverloadedMethodTest.overloading":272,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":280,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":86,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":271,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":254,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":157,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":318,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":183,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":165,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":277,"org.easymock.tests.UsageThrowableTest.throwCheckedException":239,"org.easymock.tests2.EasyMockSupportClassTest.testAll":300,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":303,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":229,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":289,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":266,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":74,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":128,"org.easymock.tests2.CaptureTest.testCaptureAll":160,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":263,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":11,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":5,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":10,"org.easymock.tests.MockNameTest.defaultName":44,"org.easymock.tests2.UsageConstraintsTest.testMatches":87,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":158,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":134,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":96,"org.easymock.samples.ExampleTest.voteForRemovals":206,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":66,"org.easymock.tests2.NameTest.nameForNiceMock":19,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":148,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":45,"org.easymock.tests2.DependencyTest.testInterfaceMocking":130,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":64,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":314,"org.easymock.samples.BasicClassMockTest.testPrintContent":302,"org.easymock.tests2.DelegateToTest.testStubDelegate":174,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":241,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":309,"org.easymock.tests2.AnswerTest.stubAnswer":133,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":286,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":41,"org.easymock.tests2.UsageConstraintsTest.greaterThan":88,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":68,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":326,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":23,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":339,"org.easymock.samples.ExampleTest.voteForRemoval":204,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":145,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":261,"org.easymock.tests.UsageExpectAndReturnTest.floatType":245,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":59,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":335,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":194,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":149,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":77,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":89,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":307,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":80,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":116,"org.easymock.tests2.SerializationTest.test":154,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":319,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":287,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":137,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":237,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":244,"org.easymock.tests2.UsageConstraintsTest.testSame":83,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":281,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":124,"org.easymock.tests2.CaptureTest.testCaptureFirst":168,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":6,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":119,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":250,"org.easymock.tests.GenericTest.testPackageScope":209,"org.easymock.tests2.UsageTest.moreThanOneArgument":13,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":147,"org.easymock.tests2.CaptureTest.testCapture2_2446744":167,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":29,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":99,"org.easymock.tests.GenericTest.testBridgedEquals":329,"org.easymock.tests2.NameTest.nameForMock":17,"org.easymock.tests.UsageExpectAndReturnTest.longType":246,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":264,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":135,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":299,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":255,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":230,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":322,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":112,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":228,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":75,"org.easymock.tests2.UsageStrictMockTest.differentMethods":3,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":93,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":247,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":226,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":270,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":251,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":60,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":101,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":70,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":217,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":1,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":240,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":104,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":9,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":295,"org.easymock.tests2.UsageConstraintsTest.testContains":85,"org.easymock.tests2.NameTest.nameForStrictMock":18,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":198,"org.easymock.tests2.UsageConstraintsTest.testFind":81,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":273,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":151,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":192,"org.easymock.tests.MockTypeTest.fromEasyMockClass":56,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":312,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":152,"org.easymock.tests.UsageExpectAndReturnTest.object":253,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":185,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":195,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":296,"org.easymock.tests2.UsageStrictMockTest.range":2,"org.easymock.tests2.UsageConstraintsTest.lessThan":92,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":8,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":63,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":328,"org.easymock.tests.UsageTest.exactCallCountByLastCall":123,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":106,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":100,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":65,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":136,"org.easymock.tests2.CaptureTest.testCaptureRightOne":166,"org.easymock.tests2.UsageConstraintsTest.testOr":84,"org.easymock.tests.UsageRangeTest.combination":268,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":61,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":325,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":259,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":21,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":279,"org.easymock.tests.UsageTest.wrongArguments":50,"org.easymock.tests2.MockBuilderTest.testWithConstructor":72,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":305,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":248,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":256,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":288,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":278,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":126,"org.easymock.tests2.UsageConstraintsTest.cmpTo":182,"org.easymock.tests2.CompareToTest.testLessThan":308,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":343,"org.easymock.tests2.UsageTest.openCallCountByLastCall":117,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":118,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":143,"org.easymock.tests2.CaptureTest.testCaptureFromStub":78,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":26,"org.easymock.tests.UsageTest.unexpectedCallWithArray":49,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":33,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":219,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":292,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":238,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":40,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":73,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":257,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":313,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":294,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":39,"org.easymock.tests2.UsageConstraintsTest.constraints":177,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":218,"org.easymock.tests2.ConstraintsToStringTest.notToString":330,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":201,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":38,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":265,"org.easymock.tests2.UsageTest.resumeIfFailure":172,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":290,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":109,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":249,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":55,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":327,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":110,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":7,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":333}}]
