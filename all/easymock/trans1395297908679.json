[{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[1,2,3,4],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:556","sourceCode":"final org.easymock.internal.MocksControl org.easymock.internal.MocksControl = org.easymock.internal.LastControl.org.easymock.internal.LastControl.lastControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[5,6,7],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1976","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[8,9,1,10,0,2,3,4,11,12,13],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[14,15,16,17,18],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"failures":[19,20,21,22],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[23,24,25,26,26,27,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,21,64,65,66,67,68,69,70,71,72,73,74,22,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:971","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[131],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.matchers.Null:35","failures":[132,1,133,134],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[26,26,27,27,135,136,137,1,138,10,139,140,141,142,143,3,4,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:42","sourceCode":"return false","type":"CtReturnImpl"},"failures":[173],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:93","failures":[23,24,25,26,26,27,27,30,31,174,33,175,34,35,36,37,39,40,41,42,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,66,67,22,77,87,93,98,99,100,101,104,105,106,110,113,120,121,130],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:274","failures":[176,177,178,179,180,181,182,183,184,185,186],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[32,187,188,189,190,191,192],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:94","sourceCode":"return org.easymock.internal.MockInvocationHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[193,194,195,196,197,198],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[32,187,188,189,190,191,192],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:189","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, new net.sf.cglib.proxy.Callback[]{ org.easymock.internal.ClassProxyFactory.MockMethodInterceptor })","type":"CtInvocationImpl"},"failures":[23,24,25,26,26,27,27,28,29,30,31,34,36,37,38,39,40,41,42,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,21,64,65,66,67,68,69,199,71,22,77,87,93,96,97,98,99,100,101,102,104,105,106,110,112,113,114,115,116,117,118,119,120,121,123,130],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:131","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[200,201],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:89","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object)","type":"CtReturnImpl"},"failures":[202,203,204,205,8,206,34,36,37,41,42,44,45,47,207,208,209,210,211,212,185,213,214,215,216,217,218,219,220,221,222,223,51,52,54,55,224,148,225,226,227,228,57,64,67,69,199,229,230,114,115,116,231,120,232,233,121,234,235,236,237,197,238,239,240,241,242,243,122,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,198,165,259,260,261,262,263,264,265],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:92","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[35,39],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[26,27,266,267,268,63],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:148","sourceCode":"for (final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.Class<T>.getDeclaredConstructors()) {\n    if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n        if (java.lang.reflect.Constructor<T> != null) {\n            throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n        } \n        java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n    } \n}","type":"CtForEachImpl"},"failures":[31,32,269,270,187,188,189,271,190,191,272,192,43,273,274,48],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"clazz","this":"this","constructor":"ret"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:55","sourceCode":"try {\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object);\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)));\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[23,24,25,26,26,27,27,30,31,34,36,37,39,40,41,42,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,66,67,69,22,77,87,93,98,99,100,101,104,105,106,107,110,112,113,114,115,116,117,118,119,120,121,122,130],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[11,275,12,276,277,278,279,280,281,282,13,146,283,284,201],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[285,193,286,287,288,289,216,148,226,227,196,290,291,237,250,251,252,254,255,256,257,165,260,261,263,264,265],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[147,215,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,236,321,322,323,324,325,264,326,327],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:721","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:63","sourceCode":"java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:70","sourceCode":"java.io.InputStream.close()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"in":"in"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:85","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object));\n} ","type":"CtIfImpl"},"failures":[112,117,328],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:255","failures":[107],"status":-1,"binaryOperator":"java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:157","failures":[],"status":0,"binaryOperator":"(((java.lang.StackTraceElement[].int) > 2) && (java.lang.StackTraceElement[][2].getClassName().equals(org.easymock.internal.MockInvocationHandler.org.easymock.internal.MockInvocationHandler.getName())))","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":9,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":236,"org.easymock.tests2.UsageTest.argumentsOrdered":221,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":214,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":219,"org.easymock.tests2.StubTest.stubWithReturnValue":147,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":192,"org.easymock.tests2.SerializationTest.testAllMockedMethod":49,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":274,"org.easymock.tests.MockingTest.testPartialClassMocking":99,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":194,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":103,"org.easymock.tests.MockClassControlTest.testToString":114,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":306,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":69,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":81,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":294,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":77,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":18,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":180,"org.easymock.tests.UsageExpectAndThrowTest.object":304,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":131,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":187,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":166,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":167,"org.easymock.tests2.UsageTest.wrongArguments":217,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":161,"org.easymock.tests.UsageStrictMockTest.range":260,"org.easymock.samples.ConstructorCalledMockTest.testTax":26,"org.easymock.samples.ExampleTest.answerVsDelegate":176,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":50,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":121,"org.easymock.tests2.UsageConstraintsTest.testNull":1,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":305,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":58,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":212,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":41,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":119,"org.easymock.tests2.CaptureTest.testPrimitive":276,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":163,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":313,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":239,"org.easymock.tests.UsageTest.moreThanOneArgument":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":72,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":195,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":157,"org.easymock.tests2.CaptureTest.testCaptureNone":281,"org.easymock.tests.UsageUnorderedTest.message":252,"org.easymock.tests.UsageVerifyTest.twoReturns":265,"org.easymock.tests.UsageTest.argumentsOrdered":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":88,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":243,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":23,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":289,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":17,"org.easymock.tests2.CaptureTest.testCapture_2617107":12,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":150,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":34,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":191,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":16,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":40,"org.easymock.tests2.StubTest.stub":14,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":154,"org.easymock.tests.UsageExpectAndThrowTest.longType":297,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":127,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":225,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":213,"org.easymock.tests2.SerializationTest.testClass":48,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":199,"org.easymock.tests.LimitationsTest.mockNativeMethod":110,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":106,"org.easymock.tests2.AnswerTest.answer":179,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":2,"org.easymock.tests2.CaptureTest.testAnd":11,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":175,"org.easymock.tests2.UsageTest.strictResetToDefault":20,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":228,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":64,"org.easymock.tests2.NameTest.nameForMocksControl":205,"org.easymock.tests2.MockedExceptionTest.testMockedException":29,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":76,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":321,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":298,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":101,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":56,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":42,"org.easymock.tests.MockingTest.testNicePartialClassMocking":100,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":309,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":60,"org.easymock.tests.LimitationsTest.mockFinalMethod":111,"org.easymock.tests2.CompareToTest.testNotComparable":173,"org.easymock.tests2.CaptureTest.testCaptureLast":280,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":270,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":293,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":251,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":55,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":0,"org.easymock.tests.MockingTest.testTwoMocks":98,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":250,"org.easymock.tests2.CaptureTest.testCapture1_2446744":277,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":307,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":302,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":220,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":144,"org.easymock.tests.UsageThrowableTest.throwError":314,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":15,"org.easymock.tests.UsageStrictMockTest.differentMethods":261,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":233,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":125,"org.easymock.tests2.ConstraintsToStringTest.andToString":288,"org.easymock.tests2.MockBuilderTest.testCreateMockString":47,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":112,"org.easymock.tests.UsageExpectAndThrowTest.floatType":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":78,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":159,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":74,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":182,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":269,"org.easymock.tests.UsageVerifyTest.twoThrows":264,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":268,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":87,"org.easymock.samples.PartialClassMockTest.testGetArea":25,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":151,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":66,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":295,"org.easymock.tests2.UsageTest.niceToStrict":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":82,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":122,"org.easymock.tests.LimitationsTest.privateConstructor":109,"org.easymock.tests2.UsageConstraintsTest.testNotNull":4,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":320,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":28,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":168,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":39,"org.easymock.tests2.MockBuilderTest.testCreateMock":44,"org.easymock.tests.UsageVarargTest.differentLength":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":90,"org.easymock.tests2.CallbackTest.callback":185,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":63,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":303,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":193,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":209,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":135,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":324,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":244,"org.easymock.tests.UsageCallCountTest.tooFewCalls":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":92,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":86,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":325,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":140,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":53,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":282,"org.easymock.tests.UsageThrowableTest.throwCheckedException":317,"org.easymock.tests2.EasyMockSupportClassTest.testAll":22,"org.easymock.tests.MockClassControlTest.testEquals":118,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":105,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":311,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":196,"org.easymock.tests.MockingTest.testStrictClassMocking":96,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":174,"org.easymock.tests2.CaptureTest.testCaptureAll":275,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":54,"org.easymock.tests.MockNameTest.defaultName":231,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":229,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":52,"org.easymock.tests2.UsageConstraintsTest.testMatches":141,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":184,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":158,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":160,"org.easymock.tests.ObjectMethodsTest.testHashCode":328,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":190,"org.easymock.tests2.NameTest.nameForNiceMock":204,"org.easymock.tests.UsageVarargTest.allKinds":134,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":263,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":189,"org.easymock.samples.BasicClassMockTest.testPrintContent":24,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":94,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":319,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":224,"org.easymock.tests2.AnswerTest.stubAnswer":183,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":165,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":272,"org.easymock.tests2.UsageConstraintsTest.greaterThan":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":75,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":67,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":262,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":129,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":68,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":234,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":61,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":31,"org.easymock.tests2.ConstraintsToStringTest.orToString":285,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":27,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":255,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":143,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":215,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":130,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":136,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":70,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":278,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":43,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":124,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":315,"org.easymock.tests2.UsageConstraintsTest.testSame":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":73,"org.easymock.tests2.CaptureTest.testCaptureFirst":284,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":208,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":223,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":79,"org.easymock.tests.GenericTest.testPackageScope":104,"org.easymock.tests2.CaptureTest.testCapture2_2446744":283,"org.easymock.tests2.UsageTest.moreThanOneArgument":216,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":132,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":45,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":169,"org.easymock.tests.GenericTest.testBridgedEquals":107,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":248,"org.easymock.tests2.NameTest.nameForMock":202,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":19,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":312,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":46,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":133,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":164,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":310,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":267,"org.easymock.tests2.UsageStrictMockTest.differentMethods":227,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":155,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":21,"org.easymock.tests.UsageCallCountTest.tooManyCalls":249,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":308,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":91,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":235,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":171,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":290,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":273,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":299,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":148,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":318,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":162,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":51,"org.easymock.tests.MockingTest.testNiceClassMocking":102,"org.easymock.tests.MockingTest.testClassMocking":97,"org.easymock.tests2.NameTest.nameForStrictMock":203,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":35,"org.easymock.tests2.UsageConstraintsTest.testContains":139,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":30,"org.easymock.tests2.UsageConstraintsTest.testFind":137,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":326,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":38,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":6,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":177,"org.easymock.tests.MockTypeTest.fromEasyMockClass":232,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":59,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":258,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":178,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":71,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":3,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":126,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":62,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":36,"org.easymock.tests2.UsageStrictMockTest.range":226,"org.easymock.tests2.UsageConstraintsTest.lessThan":145,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":211,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":188,"org.easymock.tests.UsageTest.exactCallCountByLastCall":241,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":149,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":170,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":271,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":83,"org.easymock.tests2.CaptureTest.testCaptureRightOne":13,"org.easymock.tests2.UsageConstraintsTest.testOr":10,"org.easymock.tests.UsageRangeTest.combination":253,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":32,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":57,"org.easymock.tests.UsageTest.wrongArguments":238,"org.easymock.tests.MockClassControlTest.testHashCode":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":80,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":84,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":323,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":128,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":186,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":247,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":181,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":327,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":292,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":5,"org.easymock.tests.DefaultClassInstantiatorTest.object":123,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":322,"org.easymock.tests2.CaptureTest.testCaptureFromStub":146,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":37,"org.easymock.tests.UsageTest.unexpectedCallWithArray":197,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":242,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":291,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":85,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":316,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":198,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":266,"org.easymock.tests2.CaptureTest.testCapture":200,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":259,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":65,"org.easymock.tests2.UsageConstraintsTest.constraints":8,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":116,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":300,"org.easymock.tests2.ConstraintsToStringTest.notToString":286,"org.easymock.tests.CapturesMatcherTest.test":201,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":93,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":115,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":279,"org.easymock.tests2.UsageTest.resumeIfFailure":222,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":33,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":152,"org.easymock.tests.LimitationsTest.abstractClass":108,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":120,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":256,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":153,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":210}}]
