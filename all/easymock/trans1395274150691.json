[{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:270","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[0,1,2,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[4,5,6,7],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:327","sourceCode":"return false","type":"CtReturnImpl"},"failures":[1,2,8,9],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,4,5,6,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,0,1,2,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,3,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,8,9,476,477,478,479,480,481,482,483,484,485,486,487,488],"status":-1,"binaryOperator":"(int >= 1)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[147,148],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:958","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[158],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[32,52,57,58,489,490,213,216,221,491,227],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.StartsWith:40","failures":[492],"status":-1,"binaryOperator":"(\"startsWith(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[493,494,495,496,497,498,499,500,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,4,224],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:66","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)))","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[477,478,479,480,482,484],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:354","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.lang.reflect.Type = java.lang.reflect.Type;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:346","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[288,388,391,392],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:53","sourceCode":"return true","type":"CtReturnImpl"},"failures":[179,180,181,182,183,184,185,186,187,188,189,190,191,192,501],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[75,76,288,309,310,372,376,377,379,382,421,425,426,428,431],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.Range:44","failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,4,5,6,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,0,1,2,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,3,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,8,9,476,477,478,479,480,481,482,483,484,485,486,487,488],"status":-1,"binaryOperator":"(int >= 1)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[75,87,93,94,277,279,280,306,309,315,316,319,320,502],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"failures":[27,28,29,30,84,91,98,248,313,318,326,327,328,329,330,331,354,360,361,394,410,414,415,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1433","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[25,26,31,489,490],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg","this":"this","paramType":"paramType"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:89","sourceCode":"return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object)","type":"CtReturnImpl"},"failures":[39,40,51,52,56,57,64,65,71,73,74,75,76,77,83,84,86,87,88,89,93,94,95,96,138,154,166,167,168,169,194,196,198,199,201,202,212,214,215,220,222,225,226,228,230,240,243,245,253,262,265,266,267,268,269,277,278,279,280,304,306,307,308,309,310,311,313,314,315,316,319,320,321,334,337,338,352,355,356,357,401,407,450,452,453,456,457,458,461,462,463,486,487],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:35","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(short.short, java.lang.Short.java.lang.Short)","type":"CtInvocationImpl"},"failures":[503],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[11,13,14,16,23,24,29,31,39,48,49,50,51,52,53,55,56,57,64,73,75,76,84,85,86,88,90,91,92,95,96,98,109,112,122,128,131,132,133,134,135,136,137,138,139,141,142,143,144,145,146,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,175,179,180,182,183,186,187,188,189,191,192,193,194,195,196,197,198,199,200,201,202,203,204,4,5,206,210,214,218,220,222,226,229,230,231,232,233,234,237,241,242,243,246,247,248,253,254,255,256,258,260,275,276,278,280,289,291,300,301,303,307,309,310,313,314,317,318,321,324,356,358,359,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,393,408,410,411,412,413,414,415,438,439,443,444,446,468],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:354","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[85],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[92],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1080","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.AssertionErrorWrapper:32","sourceCode":"return java.lang.AssertionError","type":"CtReturnImpl"},"failures":[71,73,74,75,76,77,83,84,86,87,88,89,93,94,95,96,133,138,154,166,167,168,169,194,198,199,202,214,225,226,228,230,241,243,253,277,278,279,280,304,306,307,308,309,310,311,313,314,315,316,319,320,321,401,450,452,453,456,457,458],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1039","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[504],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:70","failures":[73,78,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,170,172,179,180,181,182,183,184,185,186,187,188,189,190,191,192,237,275,276,277,306,307,330,358,359,360,361,362,363,364,365,366,367,393,394,406],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"failures":[505,506,504,507],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"propertyFileName","key":"propertyFileName"}},{"transplant":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[287,349,475,8,9],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:67","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"))","type":"CtThrowImpl"},"failures":[505],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[493,494,500],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1832","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:42","sourceCode":"throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()","type":"CtThrowImpl"},"failures":[486],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[145,179,181,189],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[478,482],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:67","sourceCode":"for (int int = 0 ; int < (java.lang.String[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.get(java.lang.String[][int]);\n    if (java.lang.Class<?> != null) {\n        java.lang.Class<?>[][int] = java.lang.Class<?>;\n    } else {\n        java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n    }\n}","type":"CtForImpl"},"failures":[4,5,6,7],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (this.org.easymock.Capture<T>.hasCaptured()) {\n    this.org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[179,180,181,182,183,184,185,186,188,189,190,191,192,501],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"capture"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":139,"org.easymock.tests2.UsageTest.argumentsOrdered":94,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":313,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":203,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":65,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":290,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":89,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":10,"org.easymock.tests2.DelegateToTest.testReturnException":174,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":327,"org.easymock.tests.MockingTest.testPartialClassMocking":443,"org.easymock.tests.MockClassControlTest.testToString":461,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":165,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":468,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":245,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":116,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":417,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":112,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":49,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":146,"org.easymock.tests2.UsageTest.wrongArguments":87,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":358,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":45,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":251,"org.easymock.samples.ExampleTest.answerVsDelegate":12,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":267,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":448,"org.easymock.tests2.UsageConstraintsTest.testNull":142,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":232,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":466,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":202,"org.easymock.tests2.CaptureTest.testPrimitive":182,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":362,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":436,"org.easymock.tests.UsageTest.moreThanOneArgument":314,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":231,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":472,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":388,"org.easymock.tests.UsageTest.argumentsOrdered":320,"org.easymock.tests.UsageVarargTest.varargIntAccepted":397,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":295,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":363,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":212,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":101,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":69,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":283,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":367,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":39,"org.easymock.tests.ReplayStateInvalidUsageTest.times":347,"org.easymock.tests2.DependencyTest.testClassMocking":46,"org.easymock.tests2.AnswerTest.answer":206,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":297,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":82,"org.easymock.tests2.CaptureTest.testAnd":179,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":264,"org.easymock.tests2.UsageTest.strictResetToDefault":85,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":216,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":240,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":471,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":197,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":255,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":392,"org.easymock.tests2.DelegateToTest.testDelegate":178,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":432,"org.easymock.tests.LimitationsTest.mockFinalMethod":325,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":330,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":274,"org.easymock.tests2.DependencyTest.testClassMockingSupport":47,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":486,"org.easymock.tests2.CaptureTest.testCapture1_2446744":183,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":236,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":430,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":80,"org.easymock.tests.UsageThrowableTest.throwError":408,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":341,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":266,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":485,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":70,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":474,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":489,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":130,"org.easymock.samples.PartialClassMockTest.testGetArea":24,"org.easymock.tests.MockingTest.testInterfaceMocking":445,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":342,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":364,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":438,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":117,"org.easymock.tests2.UsageTest.niceToStrict":88,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":338,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":500,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":281,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":218,"org.easymock.tests2.MockBuilderTest.testCreateMock":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":125,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":42,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":426,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":198,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":263,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":2,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":450,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":249,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":497,"org.easymock.tests.UsageOverloadedMethodTest.overloading":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":121,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":152,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":354,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":246,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":379,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":151,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":188,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":398,"org.easymock.tests.MockClassControlTest.testEquals":465,"org.easymock.tests2.EasyMockSupportClassTest.testAll":109,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":259,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":434,"org.easymock.tests2.CaptureTest.testCaptureAll":180,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":81,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":272,"org.easymock.tests.MockNameTest.defaultName":407,"org.easymock.tests2.UsageConstraintsTest.testMatches":153,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":473,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":339,"org.easymock.samples.ExampleTest.voteForRemovals":16,"org.easymock.tests.UsageVarargTest.allKinds":406,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":278,"org.easymock.samples.BasicClassMockTest.testPrintContent":21,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":273,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":414,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":71,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":177,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":66,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":331,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":503,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":483,"org.easymock.tests2.UsageConstraintsTest.greaterThan":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":110,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":254,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":243,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":484,"org.easymock.samples.ExampleTest.voteForRemoval":13,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":132,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":244,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":268,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":102,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":235,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":84,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":332,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":287,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":195,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":410,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":107,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":326,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":173,"org.easymock.tests2.CaptureTest.testCaptureFirst":192,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":286,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":196,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":96,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":357,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":375,"org.easymock.tests2.CaptureTest.testCapture2_2446744":191,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":134,"org.easymock.tests2.UsageTest.moreThanOneArgument":86,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":226,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":298,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":405,"org.easymock.tests.GenericTest.testBridgedEquals":261,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":498,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":495,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":457,"org.easymock.tests.UsageExpectAndReturnTest.longType":371,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":193,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":270,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":435,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":416,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":160,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":433,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":470,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":8,"org.easymock.tests.UsageCallCountTest.tooManyCalls":458,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":452,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":126,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":376,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":44,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":422,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":413,"org.easymock.tests.MockingTest.testNiceClassMocking":449,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":51,"org.easymock.tests.MockingTest.testClassMocking":441,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":451,"org.easymock.tests2.UsageConstraintsTest.testContains":150,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":29,"org.easymock.tests2.UsageConstraintsTest.testFind":141,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":248,"org.easymock.tests.MockTypeTest.fromEasyMockClass":265,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":172,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":304,"org.easymock.tests.UsageExpectAndReturnTest.object":378,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":237,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":43,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":201,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":400,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":336,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":499,"org.easymock.tests.UsageTest.exactCallCountByLastCall":321,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":393,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":285,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":467,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":389,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":32,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":395,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":384,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":353,"org.easymock.tests.MockClassControlTest.testHashCode":464,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":60,"org.easymock.tests2.EasyMockSupportTest.testVerify":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":119,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":390,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":1,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":351,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":79,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":78,"org.easymock.tests.UsageVarargTest.varargCharAccepted":399,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":476,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":72,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":303,"org.easymock.tests2.UsageTest.openCallCountByLastCall":90,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":493,"org.easymock.tests.DefaultClassInstantiatorTest.object":477,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":204,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":0,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":334,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":502,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":424,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":120,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":411,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":37,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":59,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":463,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":241,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":423,"org.easymock.tests.CapturesMatcherTest.test":501,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":385,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":475,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":462,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":128,"org.easymock.tests2.UsageTest.resumeIfFailure":95,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":262,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":100,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":329,"org.easymock.tests2.StubTest.stubWithReturnValue":98,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":221,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":161,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":377,"org.easymock.tests2.SerializationTest.testAllMockedMethod":6,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":296,"org.easymock.samples.SupportTest.voteForRemovals":23,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":257,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":62,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":429,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":7,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":302,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":207,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":469,"org.easymock.tests.UsageExpectAndThrowTest.object":427,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":158,"org.easymock.tests2.DelegateToTest.testWrongClass":176,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":275,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":276,"org.easymock.samples.ConstructorCalledMockTest.testTax":25,"org.easymock.tests.UsageStrictMockTest.range":309,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":104,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":200,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":50,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":496,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":428,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":106,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":319,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":349,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":250,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":439,"org.easymock.tests2.CaptureTest.testCaptureNone":187,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":506,"org.easymock.tests.UsageUnorderedTest.message":277,"org.easymock.tests.UsageVerifyTest.twoReturns":280,"org.easymock.tests.UsageVarargTest.varargByteAccepted":404,"org.easymock.tests2.ThreadingTest.testThreadSafe":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":123,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":455,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":20,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":337,"org.easymock.tests2.CaptureTest.testCapture_2617107":181,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":488,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":300,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":361,"org.easymock.tests2.UsageConstraintsTest.any":148,"org.easymock.tests2.StubTest.stub":97,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":346,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":9,"org.easymock.tests.UsageExpectAndThrowTest.longType":420,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":301,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":328,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":481,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":345,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":74,"org.easymock.tests2.SerializationTest.testClass":4,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":64,"org.easymock.tests.LimitationsTest.mockNativeMethod":324,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":387,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":260,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":36,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":77,"org.easymock.tests2.NameTest.nameForMocksControl":169,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":38,"org.easymock.tests2.MockedExceptionTest.testMockedException":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":111,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":318,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":446,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":421,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":171,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":229,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":222,"org.easymock.tests.MockingTest.testNicePartialClassMocking":444,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":234,"org.easymock.tests2.CaptureTest.testCaptureLast":186,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":34,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":487,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":145,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":57,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":159,"org.easymock.tests.MockingTest.testTwoMocks":442,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":58,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":368,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":425,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":93,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":163,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":507,"org.easymock.samples.ExampleTest.removeNonExistingDocument":17,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":41,"org.easymock.tests.UsageStrictMockTest.differentMethods":310,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":343,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":61,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":479,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":133,"org.easymock.tests2.MockBuilderTest.testCreateMockString":228,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":459,"org.easymock.tests.UsageExpectAndThrowTest.floatType":419,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":113,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":108,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":209,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":33,"org.easymock.tests.UsageVerifyTest.twoThrows":279,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":352,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":122,"org.easymock.samples.ExampleTest.voteAgainstRemoval":14,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":437,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":291,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":242,"org.easymock.tests.LimitationsTest.privateConstructor":323,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":490,"org.easymock.tests2.UsageConstraintsTest.testNotNull":162,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":415,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":27,"org.easymock.tests2.UsageTest.defaultResetToNice":92,"org.easymock.samples.ExampleTest.voteAgainstRemovals":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":292,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":383,"org.easymock.tests.UsageVarargTest.differentLength":401,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":35,"org.easymock.tests2.CallbackTest.callback":83,"org.easymock.tests2.UsageConstraintsTest.equals":140,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":238,"org.easymock.tests.UsageTest.openCallCountByLastCall":317,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":492,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":136,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":360,"org.easymock.tests.UsageCallCountTest.tooFewCalls":453,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":53,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":252,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":504,"org.easymock.tests.UsageThrowableTest.throwCheckedException":412,"org.easymock.tests.MockingTest.testStrictClassMocking":440,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":394,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":56,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":40,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":52,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":348,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":55,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":211,"org.easymock.tests.ObjectMethodsTest.testHashCode":335,"org.easymock.tests2.NameTest.nameForNiceMock":168,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":135,"org.easymock.tests2.DependencyTest.testInterfaceMocking":48,"org.easymock.samples.ExampleTest.addDocument":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":124,"org.easymock.tests2.DelegateToTest.testStubDelegate":175,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":129,"org.easymock.tests2.AnswerTest.stubAnswer":210,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":307,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":223,"org.easymock.tests.UsageVarargTest.varargLongAccepted":403,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":311,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":289,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":386,"org.easymock.tests.UsageExpectAndReturnTest.floatType":370,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":31,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":26,"org.easymock.tests.UsageThrowableTest.noUpperLimit":409,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":156,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":68,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":355,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":137,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":99,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":184,"org.easymock.tests2.SerializationTest.test":5,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":478,"org.easymock.tests2.UsageConstraintsTest.testSame":143,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":369,"org.easymock.samples.SupportTest.addDocument":22,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":54,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":114,"org.easymock.tests.GenericTest.testPackageScope":258,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":391,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":284,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":67,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":447,"org.easymock.tests2.NameTest.nameForMock":166,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":380,"org.easymock.tests2.UsageStrictMockTest.differentMethods":76,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":227,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":239,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":372,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":431,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":333,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":256,"org.easymock.tests2.MockedExceptionTest.testRealException":30,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":269,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":105,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":294,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":73,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":293,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":350,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":359,"org.easymock.tests2.NameTest.nameForStrictMock":167,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":217,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":494,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":170,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":233,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":103,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":480,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":157,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":214,"org.easymock.tests2.UsageStrictMockTest.range":75,"org.easymock.tests2.UsageConstraintsTest.lessThan":164,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":63,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":194,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":288,"org.easymock.tests2.CaptureTest.testCaptureRightOne":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":118,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":505,"org.easymock.tests2.UsageConstraintsTest.testOr":144,"org.easymock.tests.UsageRangeTest.combination":253,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":230,"org.easymock.tests.UsageTest.wrongArguments":316,"org.easymock.tests2.MockBuilderTest.testWithConstructor":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":115,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":460,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":373,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":282,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":381,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":482,"org.easymock.tests.UsageVarargTest.varargShortAccepted":402,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":456,"org.easymock.tests2.UsageConstraintsTest.cmpTo":149,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":208,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":3,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":91,"org.easymock.tests2.CaptureTest.testCaptureFromStub":190,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":340,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":215,"org.easymock.tests.UsageTest.unexpectedCallWithArray":315,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":306,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":454,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":491,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":382,"org.easymock.tests2.UsageConstraintsTest.constraints":138,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":308,"org.easymock.samples.ExampleTest.addAndChangeDocument":18,"org.easymock.tests.UsageStrictMockTest.testVerify":312,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":19,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":305,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":271,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":185,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":365,"org.easymock.tests.LimitationsTest.abstractClass":322,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":374,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":356,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":366,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":396,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":199}}]
