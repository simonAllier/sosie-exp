[{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.EasyMock:933","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[24,25,36,37,38,39,32,33],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.Equals:53","failures":[40,41,42],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[43,44,45,46,47,48],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1291","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[49,50,51,52,53,54],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:36","sourceCode":"return true","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,55,56,6,7,57,58,8,14,15,16,59,19,26,37,60,61,62,63],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[64,65,66],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[67],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:314","failures":[68,69,70,71],"status":-1,"binaryOperator":"java.lang.Throwable instanceof java.lang.RuntimeException","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[72],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[72],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:95","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.util.Stack<org.easymock.IArgumentMatcher>.pop();\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[73,74,75,76,77],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack"}},{"position":"org.easymock.internal.Range:40","failures":[78,79,80,0,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,72,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,1,2,3,4,5,146,147,148,149,55,150,56,6,7,57,58,8,9,10,11,12,13,151,68,69,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,40,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,14,15,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,16,59,249,49,50,51,52,250,53,251,54,252,253,254,255,70,71,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,17,18,302,303,304,305,306,307,308,309,19,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,20,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,21,22,73,391,41,23,24,25,26,74,392,36,37,393,27,394,28,29,395,30,31,38,39,396,397,398,32,33,34,399,47,400,401,402,403,404,405,406,407,408,409,42,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,48,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,75,60,76,490,491,492,493,61,62,494,77,35,495,63],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[17,18,320,325,326,331,399,47,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,457,460,48,467,496,470,497,498],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[111,72,112,113,114,115,178,183,189,190,191,192,193,194,195,196,197,202,203,204,205,49,50,51,52,250,53,54,280,281,282,283,284,286,289,17,17,18,18,302,303,307,314,315,316,499,500,501,502,318,319,320,321,324,325,331,333,399,47,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,442,443,444,445,447,448,449,450,451,452,453,454,455,503,456,504,458,459,461,462,463,464,465,467,468,469,505,506,471,472,476],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[80,166,507,508,509,510],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[331,332,333],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[320,325,326,47,65,457,460,48,496,470,497,498,511,512,513,514],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnValue":"arg","returnedType":"paramType"}},{"position":"org.easymock.ConstructorArgs:60","failures":[320,325,326,47,457,460,48,496,470,497,498],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1013","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[80,82,56,166,167,40,170,515,242,243,311,404,42,410],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:45","sourceCode":"try {\n    return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n} finally {\n    java.util.concurrent.locks.ReentrantLock.unlock();\n}","type":"CtTryImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:278","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"failures":[516,517],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:251","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:573","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[112,113,114,178,183,190,197,204,282,283,284,286,17,17,18,18,302,303,307,316,501,318,319,320,321,324,325,331,333,399,417,420,430,436,439,440,442,443,444,445,447,450,451,452,453,456,504,458,459,462,463,464,465,468,469,506,471],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[78,79,80,0,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,72,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,1,2,3,4,5,146,147,148,149,55,150,56,6,7,57,58,8,9,10,11,12,13,151,68,69,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,40,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,14,15,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,16,59,249,49,50,51,52,250,53,251,54,252,253,254,255,70,71,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,17,18,302,303,304,305,306,307,308,309,19,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,20,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,21,22,73,391,41,23,24,25,26,74,392,36,37,393,27,394,28,29,395,30,31,38,39,396,397,398,32,33,34,399,47,400,401,402,403,404,405,406,407,408,409,42,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,48,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,75,60,76,490,491,492,493,61,62,494,77,35,495,63],"status":-1,"binaryOperator":"(int >= 1)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:60","failures":[320,325,326,47,457,460,48,496,470,497,498],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[43,44,45,518,46,331,399,47,48,467],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1902","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[440],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:933","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[519,331,332,333],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[80,82,83,166,311,312],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:34","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:33","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>.getName(), java.lang.Boolean.java.lang.Class<java.lang.Boolean>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:134","failures":[67,520],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[391,26,36],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[391],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[519,331,332,333],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":391,"org.easymock.tests2.UsageTest.argumentsOrdered":410,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":164,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":360,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":369,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":266,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":406,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":293,"org.easymock.tests2.DelegateToTest.testReturnException":344,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":147,"org.easymock.tests.MockingTest.testPartialClassMocking":283,"org.easymock.tests.MockClassControlTest.testToString":191,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":479,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":253,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":455,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":424,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":420,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":221,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":337,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":43,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":392,"org.easymock.tests2.UsageTest.wrongArguments":404,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":6,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":390,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":119,"org.easymock.samples.ExampleTest.answerVsDelegate":295,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":183,"org.easymock.tests2.UsageConstraintsTest.testNull":24,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":288,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":442,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":196,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":359,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":499,"org.easymock.tests2.CaptureTest.testPrimitive":490,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":8,"org.easymock.tests.UsageTest.moreThanOneArgument":165,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":240,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":441,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":11,"org.easymock.tests.UsageTest.argumentsOrdered":170,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":244,"org.easymock.tests.UsageVarargTest.varargIntAccepted":208,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":271,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":1,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":456,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":474,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":373,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":463,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":258,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":5,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":384,"org.easymock.tests.ReplayStateInvalidUsageTest.times":160,"org.easymock.tests2.DependencyTest.testClassMocking":334,"org.easymock.tests2.AnswerTest.answer":484,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":36,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":273,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":330,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":180,"org.easymock.tests2.CaptureTest.testAnd":75,"org.easymock.tests2.UsageTest.strictResetToDefault":402,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":460,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":450,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":10,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":200,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":354,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":248,"org.easymock.tests2.DelegateToTest.testDelegate":348,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":236,"org.easymock.tests.LimitationsTest.mockFinalMethod":205,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":55,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":176,"org.easymock.tests2.DependencyTest.testClassMockingSupport":335,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":218,"org.easymock.tests2.CaptureTest.testCapture1_2446744":491,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":446,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":234,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":328,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":154,"org.easymock.tests.UsageThrowableTest.throwError":137,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":182,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":145,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":374,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":13,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":497,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":438,"org.easymock.samples.PartialClassMockTest.testGetArea":307,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":155,"org.easymock.tests.MockingTest.testInterfaceMocking":285,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":2,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":425,"org.easymock.tests2.UsageTest.niceToStrict":405,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":111,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":222,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":66,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":256,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":462,"org.easymock.tests2.MockBuilderTest.testCreateMock":468,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":433,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":387,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":509,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":230,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":355,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":179,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":69,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":128,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":117,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":512,"org.easymock.tests.UsageOverloadedMethodTest.overloading":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":435,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":429,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":124,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":28,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":97,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":290,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":394,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":494,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":209,"org.easymock.tests2.EasyMockSupportClassTest.testAll":417,"org.easymock.tests.MockClassControlTest.testEquals":195,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":113,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":238,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":500,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":174,"org.easymock.tests2.CaptureTest.testCaptureAll":60,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":329,"org.easymock.tests.MockNameTest.defaultName":177,"org.easymock.tests2.UsageConstraintsTest.testMatches":29,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":152,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":12,"org.easymock.samples.ExampleTest.voteForRemovals":299,"org.easymock.tests.UsageVarargTest.allKinds":217,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":241,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":175,"org.easymock.samples.BasicClassMockTest.testPrintContent":303,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":143,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":308,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":150,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":347,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":370,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":46,"org.easymock.tests2.UsageConstraintsTest.greaterThan":30,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":418,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":199,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":453,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":54,"org.easymock.samples.ExampleTest.voteForRemoval":296,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":454,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":339,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":505,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":184,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":475,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":445,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":401,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":197,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":467,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":263,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":352,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":139,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":415,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":146,"org.easymock.tests2.CaptureTest.testCaptureFirst":63,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":262,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":353,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":412,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":127,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":93,"org.easymock.tests2.CaptureTest.testCapture2_2446744":495,"org.easymock.tests2.UsageTest.moreThanOneArgument":403,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":341,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":469,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":274,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":216,"org.easymock.tests.GenericTest.testBridgedEquals":115,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":513,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":135,"org.easymock.tests.UsageExpectAndReturnTest.longType":89,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":172,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":350,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":506,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":239,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":397,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":116,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":237,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":9,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":70,"org.easymock.tests.UsageCallCountTest.tooManyCalls":136,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":434,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":94,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":389,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":226,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":142,"org.easymock.tests.MockingTest.testNiceClassMocking":289,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":319,"org.easymock.tests.MockingTest.testClassMocking":281,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":504,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":129,"org.easymock.tests2.UsageConstraintsTest.testContains":27,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":316,"org.easymock.tests2.UsageConstraintsTest.testFind":23,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":292,"org.easymock.tests.MockTypeTest.fromEasyMockClass":181,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":78,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":378,"org.easymock.tests.UsageExpectAndReturnTest.object":96,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":447,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":388,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":358,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":44,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":211,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":109,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":514,"org.easymock.tests.UsageTest.exactCallCountByLastCall":171,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":16,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":261,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":245,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":252,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":47,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":102,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":206,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":123,"org.easymock.tests.MockClassControlTest.testHashCode":194,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":364,"org.easymock.tests2.EasyMockSupportTest.testVerify":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":427,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":246,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":121,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":68,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":327,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":413,"org.easymock.tests.UsageVarargTest.varargCharAccepted":210,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":249,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":309,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":279,"org.easymock.tests2.UsageTest.openCallCountByLastCall":407,"org.easymock.tests.DefaultClassInstantiatorTest.object":49,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":64,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":361,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":151,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":107,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":515,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":428,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":228,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":502,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":140,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":382,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":363,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":451,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":193,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":227,"org.easymock.tests.CapturesMatcherTest.test":67,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":103,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":436,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":192,"org.easymock.tests2.UsageTest.resumeIfFailure":411,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":178,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":473,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":149,"org.easymock.tests2.StubTest.stubWithReturnValue":20,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":48,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":398,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":95,"org.easymock.tests2.SerializationTest.testAllMockedMethod":333,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":272,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":510,"org.easymock.samples.SupportTest.voteForRemovals":306,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":72,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":366,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":233,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":519,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":278,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":485,"org.easymock.tests.UsageExpectAndThrowTest.object":231,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":254,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":39,"org.easymock.tests2.DelegateToTest.testWrongClass":346,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":14,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":15,"org.easymock.samples.ConstructorCalledMockTest.testTax":17,"org.easymock.tests.UsageStrictMockTest.range":82,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":477,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":357,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":318,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":511,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":232,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":464,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":414,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":162,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":40,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":118,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":507,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":188,"org.easymock.tests2.CaptureTest.testCaptureNone":62,"org.easymock.tests.UsageUnorderedTest.message":56,"org.easymock.tests.UsageVerifyTest.twoReturns":243,"org.easymock.tests.UsageVarargTest.varargByteAccepted":215,"org.easymock.tests2.ThreadingTest.testThreadSafe":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":431,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":133,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":110,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":302,"org.easymock.tests2.CaptureTest.testCapture_2617107":76,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":220,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":58,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":276,"org.easymock.tests2.UsageConstraintsTest.any":37,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":159,"org.easymock.tests2.StubTest.stub":375,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":71,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":148,"org.easymock.tests.UsageExpectAndThrowTest.longType":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":277,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":250,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":158,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":310,"org.easymock.tests2.SerializationTest.testClass":331,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":368,"org.easymock.tests.LimitationsTest.mockNativeMethod":204,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":114,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":105,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":381,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":313,"org.easymock.tests2.NameTest.nameForMocksControl":483,"org.easymock.tests2.MockedExceptionTest.testMockedException":315,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":419,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":169,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":225,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":286,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":377,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":439,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":465,"org.easymock.tests.MockingTest.testNicePartialClassMocking":284,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":444,"org.easymock.tests2.CaptureTest.testCaptureLast":61,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":379,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":219,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":74,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":325,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":396,"org.easymock.tests.MockingTest.testTwoMocks":282,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":326,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":86,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":229,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":42,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":33,"org.easymock.samples.ExampleTest.removeNonExistingDocument":300,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":386,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":156,"org.easymock.tests.UsageStrictMockTest.differentMethods":83,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":365,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":517,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":51,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":340,"org.easymock.tests2.MockBuilderTest.testCreateMockString":471,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":421,"org.easymock.tests.UsageExpectAndThrowTest.floatType":223,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":395,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":416,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":487,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":400,"org.easymock.tests.UsageVerifyTest.twoThrows":242,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":122,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":430,"org.easymock.samples.ExampleTest.voteAgainstRemoval":297,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":186,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":267,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":452,"org.easymock.tests.LimitationsTest.privateConstructor":203,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":498,"org.easymock.tests2.UsageConstraintsTest.testNotNull":32,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":144,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":314,"org.easymock.tests2.UsageTest.defaultResetToNice":409,"org.easymock.samples.ExampleTest.voteAgainstRemovals":294,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":101,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":268,"org.easymock.tests.UsageVarargTest.differentLength":212,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":380,"org.easymock.tests2.CallbackTest.callback":349,"org.easymock.tests2.UsageConstraintsTest.equals":41,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":448,"org.easymock.tests.UsageTest.openCallCountByLastCall":168,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":21,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":57,"org.easymock.tests.UsageCallCountTest.tooFewCalls":131,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":321,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":120,"org.easymock.tests.UsageThrowableTest.throwCheckedException":141,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":508,"org.easymock.tests.MockingTest.testStrictClassMocking":280,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":59,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":324,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":385,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":320,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":161,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":323,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":489,"org.easymock.tests.ObjectMethodsTest.testHashCode":108,"org.easymock.tests2.NameTest.nameForNiceMock":482,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":342,"org.easymock.tests2.DependencyTest.testInterfaceMocking":336,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":45,"org.easymock.samples.ExampleTest.addDocument":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":432,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":437,"org.easymock.tests2.DelegateToTest.testStubDelegate":345,"org.easymock.tests2.AnswerTest.stubAnswer":488,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":0,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":466,"org.easymock.tests.UsageVarargTest.varargLongAccepted":214,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":84,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":265,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":104,"org.easymock.tests.UsageExpectAndReturnTest.floatType":88,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":399,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":18,"org.easymock.tests.UsageThrowableTest.noUpperLimit":138,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":125,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":31,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":372,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":22,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":472,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":492,"org.easymock.tests2.SerializationTest.test":332,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":50,"org.easymock.tests2.UsageConstraintsTest.testSame":25,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":87,"org.easymock.samples.SupportTest.addDocument":305,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":322,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":422,"org.easymock.tests.GenericTest.testPackageScope":112,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":247,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":260,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":371,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":287,"org.easymock.tests2.NameTest.nameForMock":480,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":98,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":470,"org.easymock.tests2.UsageStrictMockTest.differentMethods":312,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":449,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":90,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":235,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":106,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":201,"org.easymock.tests2.MockedExceptionTest.testRealException":317,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":185,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":478,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":270,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":19,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":269,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":163,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":7,"org.easymock.tests2.NameTest.nameForStrictMock":481,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":461,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":65,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":376,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":443,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":476,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":38,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":52,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":458,"org.easymock.tests2.UsageStrictMockTest.range":311,"org.easymock.tests2.UsageConstraintsTest.lessThan":34,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":367,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":503,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":518,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":264,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":426,"org.easymock.tests2.CaptureTest.testCaptureRightOne":77,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":516,"org.easymock.tests2.UsageConstraintsTest.testOr":26,"org.easymock.tests.UsageRangeTest.combination":198,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":440,"org.easymock.tests.UsageTest.wrongArguments":167,"org.easymock.tests2.MockBuilderTest.testWithConstructor":457,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":423,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":190,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":91,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":99,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":257,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":53,"org.easymock.tests.UsageVarargTest.varargShortAccepted":213,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":134,"org.easymock.tests2.UsageConstraintsTest.cmpTo":393,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":486,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":259,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":408,"org.easymock.tests2.CaptureTest.testCaptureFromStub":35,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":153,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":459,"org.easymock.tests.UsageTest.unexpectedCallWithArray":166,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":80,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":132,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":496,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":100,"org.easymock.tests2.CaptureTest.testCapture":520,"org.easymock.tests2.UsageConstraintsTest.constraints":73,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":81,"org.easymock.samples.ExampleTest.addAndChangeDocument":301,"org.easymock.tests.UsageStrictMockTest.testVerify":85,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":304,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":79,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":173,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":493,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":501,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":3,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":92,"org.easymock.tests.LimitationsTest.abstractClass":202,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":126,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":4,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":207,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":356}}]
