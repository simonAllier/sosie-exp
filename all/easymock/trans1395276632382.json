[{"transplant":{"position":"org.easymock.internal.AndroidSupport:28","sourceCode":"final java.lang.ClassNotFoundException java.lang.ClassNotFoundException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.StartsWith:40","sourceCode":"java.lang.StringBuffer.append(((\"startsWith(\\\"\" + (java.lang.String)) + \"\\\")\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[0,1,2,3,4,5,6,7,8],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:78","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[9,9,10,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:98","failures":[71,0,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,20,21,22,25,26,27,28,29,31,37,40,41,43,44,46,47,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,54,107,57,58,59,108,109,110,111,112,113,114,115,116,117,118,68,119,120,69,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140],"status":-1,"binaryOperator":"(java.lang.String) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[141],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnValue":"arg","returnedType":"paramType"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[14,142,15,143],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"this.org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[144],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"threadSafe"}},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:149","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[145,146,147],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[148,149,150,151,152,153,154],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:176","failures":[155,149,150,151,152,153,156,48],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.LastControl:124","failures":[9,10,157,158,159,160,161,162,163,11,12,164,165,13,166,167,71,14,142,15,16,17,18,19,168,169,170,171,0,1,172,173,174,2,3,175,176,177,178,179,180,181,72,182,183,5,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,6,199,7,200,201,202,203,204,205,206,8,207,208,209,210,211,212,213,214,215,216,217,218,73,219,74,75,76,77,220,221,222,78,79,80,81,223,82,224,83,225,84,85,226,86,87,227,228,229,20,21,23,24,25,26,27,28,29,30,31,230,32,33,34,35,36,37,38,39,40,42,43,44,45,231,46,47,232,233,88,48,94,234,235,49,236,96,237,97,98,99,100,101,238,239,240,241,242,243,244,245,51,52,53,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,107,266,267,63,64,268,269,270,271,272,108,273,274,275,276,277,278,279,67,280,281,282,283,284,109,110,111,112,285,286,113,114,115,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,116,117,118,310,310,311,312,313,314,315,316,317,318,70,319,320,321,126,322,323,324,325,326,327,328,329,330,331,127,128,332,129,130,131,132,133,134,333,334,335,336,337,338,339,340,341,342,343,136,137,344,345,138,139,140],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[9,10,157,158,159,160,161,162,346,163,11,12,164,165,13,166,167,71,14,142,15,347,348,349,350,351,352,353,354,355,356,16,357,358,17,359,360,361,362,363,364,365,366,367,18,368,369,370,371,372,19,373,374,168,375,169,170,171,0,1,376,172,173,174,2,3,175,4,176,177,178,179,180,181,72,182,183,5,184,185,186,187,188,189,190,191,377,378,192,193,194,195,196,197,198,6,199,7,200,201,202,203,204,205,206,8,207,208,209,210,211,212,213,214,379,215,216,217,380,218,73,219,74,75,76,77,220,221,222,78,79,80,81,223,82,224,83,225,84,85,226,86,87,227,228,229,381,20,382,21,22,383,384,23,24,25,148,26,385,386,27,28,387,29,30,31,230,32,33,34,35,388,36,389,390,37,38,39,40,391,41,42,43,44,45,392,231,46,47,393,394,395,232,233,396,397,398,399,400,88,89,401,402,403,404,405,406,90,91,92,93,48,154,407,408,409,410,411,412,94,95,413,414,415,416,417,234,235,49,236,96,237,97,98,99,100,101,238,239,240,241,242,243,102,244,245,418,419,420,421,422,145,423,424,425,426,427,50,51,52,428,53,429,430,431,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,103,104,432,433,105,434,435,106,54,107,436,266,267,55,56,57,58,59,60,61,62,437,63,64,65,66,438,439,440,268,269,270,441,271,272,108,273,274,275,276,277,278,279,442,443,67,444,445,446,144,447,448,449,450,451,452,453,454,280,281,282,283,284,109,110,111,112,285,286,113,114,115,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,116,117,118,455,456,457,68,458,459,119,120,69,121,122,460,461,462,311,312,313,314,315,316,317,318,463,464,70,465,319,123,320,321,124,125,126,322,323,324,325,326,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,327,328,329,330,331,490,491,492,127,128,332,129,130,131,132,133,134,493,333,334,335,336,337,338,494,495,496,497,498,339,340,341,342,343,135,499,136,137,344,345,138,139,140],"status":-1,"binaryOperator":"(int <= int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[222],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1747","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1482","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(byte))","type":"CtInvocationImpl"},"failures":[1,3,5],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:67","sourceCode":"return !(java.util.List<T>.isEmpty())","type":"CtReturnImpl"},"failures":[202,203,204,206,500,209],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[481],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[157,158,159,160,161,162,163,11,12,164,165,13,166,167,71,14,142,15,16,17,18,19,1,173,3,175,176,177,179,72,5,184,185,186,187,188,191,192,6,199,7,200,202,203,204,205,206,8,209,213,214,215,217,218,73,219,75,76,77,78,79,81,223,82,224,83,225,84,85,86,87,227,228,229,23,25,26,30,31,230,32,33,34,36,39,42,43,44,45,231,46,47,232,233,88,48,94,49,237,97,98,99,100,101,51,52,53,248,249,251,256,261,107,63,64,268,269,270,271,272,273,274,275,276,277,67,280,281,282,283,112,113,114,115,289,290,292,297,302,307,308,117,118,311,312,313,314,315,316,317,318,70,319,320,321,125,127,332,129,130,131,132,133,134,137,344,345,139,140],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:70","failures":[168,169,170,171,0,1,172,173,174,2,3,175,4,176,177,178,179,180,181,72,182,183,5,184,185,186,187,188,189,190,6,199,7,200,201,202,203,204,205,206,8,207,208,209,381,36,97,244,245,277,278,279,280,281,282,283,284,322,323,324,325,326,127,129,130,337],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:119","sourceCode":"if (java.lang.String == null) {\n    return ((java.lang.String)(java.util.Properties.remove(java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[501,388,36,389,390,37,38,39,40,391,41,42,43,44,45,46,47,48,154,234,235,49,419,420,421,422,145,423,425,426,427,50,51,52,53,431,55,56,57,58,59,60,61,62,437,63,64,65,66,67,68,69,463,464,70,465],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:60","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.ArrayList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:77","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()","type":"CtLocalVariableImpl"},"failures":[157,158,159,160,161,162,163,11,12,164,165,166,167,71,14,142,168,169,170,171,0,1,172,173,174,2,3,175,4,176,177,178,179,180,181,72,182,183,5,184,185,186,187,188,189,190,191,377,378,192,193,194,6,199,7,200,201,202,203,204,205,206,8,207,208,209,210,211,212,213,214,379,215,216,217,380,218,73,219,74,75,76,77,220,221,222,78,79,80,81,223,82,224,83,225,84,85,226,86,87,227,228,229,23,25,26,31,33,36,37,38,39,40,232,233,88,94,96,237,97,98,99,100,101,238,239,244,245,419,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,103,104,64,439,268,269,270,271,272,108,273,274,275,276,277,278,279,443,67,280,281,282,283,284,109,110,111,112,285,286,113,114,115,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,116,117,118,456,457,460,461,462,311,312,313,314,315,316,317,318,319,123,320,321,124,125,322,323,324,325,326,482,488,490,491,492,127,128,332,129,130,131,132,133,134,493,333,334,335,336,337,338,339,340,341,342,343,135],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[146,147],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:217","failures":[157,158,159,160,161,162,163,11,12,164,165,13,166,167,71,14,142,15,16,17,18,19,1,173,3,175,176,177,179,72,5,184,185,186,187,188,191,192,6,199,7,200,202,203,204,205,206,8,209,213,214,215,217,218,73,219,75,76,77,78,79,81,223,82,224,83,225,84,85,86,87,227,228,229,23,25,26,30,31,230,32,33,34,36,39,42,43,44,45,231,46,47,232,233,88,48,94,49,237,97,98,99,100,101,51,52,53,248,249,251,256,261,103,104,107,63,64,268,269,270,271,272,273,274,275,276,277,67,280,281,282,283,112,113,114,115,289,290,292,297,302,307,308,117,118,311,312,313,314,315,316,317,318,70,319,320,321,125,127,332,129,130,131,132,133,134,137,344,345,139,140],"status":-1,"binaryOperator":"(boolean) && ((org.easymock.internal.Result) == null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[239,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,309,117,311,314,315,316,317,318,321,469,490,491,492,337],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[420,423],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:181","sourceCode":"return false","type":"CtReturnImpl"},"failures":[14,148,155,149,150,151,152,153,156,154],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[9,9,10,10,11,12,13,14,15,347,351,354,355,356,16,357,358,17,359,360,361,362,363,364,365,366,367,18,368,369,370,371,372,19,373,374,502,20,21,22,384,23,24,25,26,386,27,28,503,29,30,31,32,33,34,35,36,389,390,37,38,39,40,391,41,42,43,44,45,46,47,504,505,506,48,154,234,235,49,419,420,421,422,145,423,425,426,427,50,51,52,53,431,55,57,58,59,60,61,62,437,63,64,65,66,67,68,69,463,464,70,465],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[158,71,168,169,191,192,194,319],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:262","failures":[73,221,234,235,49,236,239,245,282,283,109,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,309,117,460,461,462,311,313,314,315,316,317,318,321,490,491,492,333,334,335,336,337,338],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:148","sourceCode":"final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1803","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[383],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:166","sourceCode":"java.lang.StringBuilder.append(\"\\n  Expectation failure on verify:\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[127,507],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"transplant":{"position":"org.easymock.EasyMock:666","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:414","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[11,12,166,354,16,226,227,229,395,233],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[14,142,15,143],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[9,10,11,12,13,14,15,347,351,354,355,16,358,17,359,360,361,363,364,365,366,18,368,369,370,371,372,19,20,382,21,22,383,384,23,24,25,148,26,386,27,28,387,29,30,31,32,33,34,35,36,389,390,37,38,39,40,391,41,42,43,44,45,46,47,48,154,407,234,235,49,419,420,421,422,145,423,425,426,427,50,51,52,53,431,55,56,57,58,59,60,61,62,437,63,64,65,66,67,68,69,463,464,70,465],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:230","sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[508],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:131","failures":[437,63,64,65,66],"status":-1,"binaryOperator":"((java.lang.reflect.Method.getParameterTypes().int) == (java.lang.reflect.Method.getParameterTypes().int))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.InjectionPlan:51","failures":[164,165,396,397,398,399,400,88,89,401,402,403,404,405,408,409,410,411,412,94,95,413,414,415,416,417],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1107","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":1,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":109,"org.easymock.tests2.UsageTest.argumentsOrdered":79,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":227,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":95,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":476,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":77,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":165,"org.easymock.tests2.DelegateToTest.testReturnException":215,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":334,"org.easymock.tests.MockingTest.testPartialClassMocking":51,"org.easymock.tests.MockClassControlTest.testToString":57,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":406,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":439,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":485,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":362,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":17,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":287,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":233,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":149,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":175,"org.easymock.tests2.UsageTest.wrongArguments":75,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":280,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":405,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":242,"org.easymock.samples.ExampleTest.answerVsDelegate":158,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":69,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":430,"org.easymock.tests2.UsageConstraintsTest.testNull":173,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":32,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":62,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":87,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":504,"org.easymock.tests2.CaptureTest.testPrimitive":200,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":284,"org.easymock.tests.UsageTest.moreThanOneArgument":110,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":306,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":230,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":341,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":494,"org.easymock.tests.UsageTest.argumentsOrdered":114,"org.easymock.tests.UsageVarargTest.varargIntAccepted":270,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":508,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":481,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":322,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":153,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":20,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":416,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":349,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":24,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":468,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":326,"org.easymock.tests.ReplayStateInvalidUsageTest.times":451,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":88,"org.easymock.tests2.DependencyTest.testClassMocking":394,"org.easymock.tests2.AnswerTest.answer":191,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":4,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":483,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":198,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":459,"org.easymock.tests2.CaptureTest.testAnd":6,"org.easymock.tests2.UsageTest.strictResetToDefault":219,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":37,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":383,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":340,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":225,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":266,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":498,"org.easymock.tests2.DelegateToTest.testDelegate":218,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":302,"org.easymock.tests.LimitationsTest.mockFinalMethod":465,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":337,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":331,"org.easymock.tests2.DependencyTest.testClassMockingSupport":395,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":103,"org.easymock.tests2.CaptureTest.testCapture1_2446744":201,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":388,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":300,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":196,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":446,"org.easymock.tests.UsageThrowableTest.throwError":311,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":120,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":442,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":417,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":374,"org.easymock.samples.PartialClassMockTest.testGetArea":13,"org.easymock.tests.MockingTest.testInterfaceMocking":428,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":144,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":323,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":456,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":54,"org.easymock.tests2.UsageTest.niceToStrict":76,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":288,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":363,"org.easymock.tests2.ThreadingTest.testChangeDefault":501,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":466,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":141,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":23,"org.easymock.tests2.MockBuilderTest.testCreateMock":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":370,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":402,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":296,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":84,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":458,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":492,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":135,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":240,"org.easymock.tests.UsageOverloadedMethodTest.overloading":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":372,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":180,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":321,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":257,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":307,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":179,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":146,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":206,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":441,"org.easymock.tests2.EasyMockSupportClassTest.testAll":16,"org.easymock.tests.MockClassControlTest.testEquals":61,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":64,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":304,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":505,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":197,"org.easymock.tests2.CaptureTest.testCaptureAll":199,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":329,"org.easymock.tests.MockNameTest.defaultName":102,"org.easymock.tests2.UsageConstraintsTest.testMatches":181,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":444,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":342,"org.easymock.samples.ExampleTest.voteForRemovals":162,"org.easymock.tests.UsageVarargTest.allKinds":277,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":116,"org.easymock.samples.BasicClassMockTest.testPrintContent":12,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":330,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":317,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":96,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":413,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":338,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":380,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":424,"org.easymock.tests2.UsageConstraintsTest.greaterThan":182,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":357,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":436,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":40,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":425,"org.easymock.samples.ExampleTest.voteForRemoval":159,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":391,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":211,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":503,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":121,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":350,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":35,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":67,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":73,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":386,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":473,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":224,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":355,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":333,"org.easymock.tests2.CaptureTest.testCaptureFirst":209,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":379,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":472,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":83,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":81,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":126,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":253,"org.easymock.tests2.UsageTest.moreThanOneArgument":74,"org.easymock.tests2.CaptureTest.testCapture2_2446744":208,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":213,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":484,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":28,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":276,"org.easymock.tests.GenericTest.testBridgedEquals":66,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":139,"org.easymock.tests.UsageExpectAndReturnTest.longType":249,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":223,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":327,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":305,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":443,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":186,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":303,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":461,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":339,"org.easymock.tests.UsageCallCountTest.tooManyCalls":140,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":371,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":254,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":404,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":292,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":316,"org.easymock.tests.MockingTest.testNiceClassMocking":431,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":43,"org.easymock.tests.MockingTest.testClassMocking":427,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":499,"org.easymock.tests2.UsageConstraintsTest.testContains":178,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":49,"org.easymock.tests2.UsageConstraintsTest.testFind":172,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":309,"org.easymock.tests.MockTypeTest.fromEasyMockClass":119,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":169,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":128,"org.easymock.tests.UsageExpectAndReturnTest.object":256,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":36,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":403,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":86,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":150,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":272,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":435,"org.easymock.tests.UsageTest.exactCallCountByLastCall":115,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":471,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":495,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":438,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":154,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":262,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":268,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":320,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":409,"org.easymock.tests.MockClassControlTest.testHashCode":60,"org.easymock.tests2.EasyMockSupportTest.testVerify":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":365,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":496,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":491,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":319,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":195,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":381,"org.easymock.tests.UsageVarargTest.varargCharAccepted":271,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":418,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":237,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":489,"org.easymock.tests2.UsageTest.openCallCountByLastCall":220,"org.easymock.tests.DefaultClassInstantiatorTest.object":419,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":228,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":490,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":105,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":366,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":506,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":314,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":399,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":408,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":38,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":59,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":293,"org.easymock.tests.CapturesMatcherTest.test":310,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":263,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":460,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":19,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":58,"org.easymock.tests2.UsageTest.resumeIfFailure":80,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":68,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":348,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":336,"org.easymock.tests2.StubTest.stubWithReturnValue":239,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":148,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":187,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":255,"org.easymock.tests2.SerializationTest.testAllMockedMethod":15,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":482,"org.easymock.samples.SupportTest.voteForRemovals":167,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":437,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":411,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":299,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":143,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":488,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":377,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":440,"org.easymock.tests.UsageExpectAndThrowTest.object":297,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":184,"org.easymock.tests2.DelegateToTest.testWrongClass":217,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":278,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":279,"org.easymock.tests.UsageStrictMockTest.range":132,"org.easymock.samples.ConstructorCalledMockTest.testTax":9,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":352,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":226,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":42,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":298,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":25,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":453,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":354,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":241,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":457,"org.easymock.tests2.CaptureTest.testCaptureNone":205,"org.easymock.tests.UsageUnorderedTest.message":127,"org.easymock.tests.UsageVerifyTest.twoReturns":118,"org.easymock.tests.UsageVarargTest.varargByteAccepted":275,"org.easymock.tests2.ThreadingTest.testThreadSafe":210,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":368,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":345,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":106,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":11,"org.easymock.tests2.CaptureTest.testCapture_2617107":7,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":486,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":283,"org.easymock.tests2.UsageConstraintsTest.any":176,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":450,"org.easymock.tests2.StubTest.stub":238,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":462,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":487,"org.easymock.tests.UsageExpectAndThrowTest.longType":290,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":335,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":145,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":449,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":98,"org.easymock.tests2.SerializationTest.testClass":14,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":94,"org.easymock.tests.LimitationsTest.mockNativeMethod":70,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":65,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":265,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":398,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":101,"org.easymock.tests2.NameTest.nameForMocksControl":93,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":400,"org.easymock.tests2.MockedExceptionTest.testMockedException":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":358,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":286,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":53,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":291,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":375,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":30,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":26,"org.easymock.tests.MockingTest.testNicePartialClassMocking":52,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":34,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":396,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":155,"org.easymock.tests2.CaptureTest.testCaptureLast":204,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":104,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":47,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":3,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":185,"org.easymock.tests.MockingTest.testTwoMocks":50,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":393,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":246,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":295,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":78,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":189,"org.easymock.samples.ExampleTest.removeNonExistingDocument":346,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":447,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":401,"org.easymock.tests.UsageStrictMockTest.differentMethods":133,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":410,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":421,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":212,"org.easymock.tests2.MockBuilderTest.testCreateMockString":29,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":55,"org.easymock.tests.UsageExpectAndThrowTest.floatType":289,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":359,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":356,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":192,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":407,"org.easymock.tests.UsageVerifyTest.twoThrows":117,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":18,"org.easymock.samples.ExampleTest.voteAgainstRemoval":160,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":477,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":455,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":39,"org.easymock.tests.LimitationsTest.privateConstructor":464,"org.easymock.tests2.UsageConstraintsTest.testNotNull":188,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":234,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":318,"org.easymock.tests2.UsageTest.defaultResetToNice":222,"org.easymock.samples.ExampleTest.voteAgainstRemovals":157,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":478,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":261,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":397,"org.easymock.tests.UsageVarargTest.differentLength":108,"org.easymock.tests2.CallbackTest.callback":71,"org.easymock.tests2.UsageConstraintsTest.equals":376,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":389,"org.easymock.tests.UsageTest.openCallCountByLastCall":285,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":170,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":282,"org.easymock.tests.UsageCallCountTest.tooFewCalls":137,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":45,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":243,"org.easymock.tests.UsageThrowableTest.throwCheckedException":315,"org.easymock.tests.MockingTest.testStrictClassMocking":426,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":46,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":245,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":44,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":89,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":452,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":231,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":194,"org.easymock.tests.ObjectMethodsTest.testHashCode":434,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":152,"org.easymock.tests2.NameTest.nameForNiceMock":92,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":214,"org.easymock.tests2.DependencyTest.testInterfaceMocking":232,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":151,"org.easymock.samples.ExampleTest.addDocument":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":369,"org.easymock.tests2.DelegateToTest.testStubDelegate":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":373,"org.easymock.tests2.AnswerTest.stubAnswer":193,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":130,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":385,"org.easymock.tests.UsageVarargTest.varargLongAccepted":274,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":134,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":475,"org.easymock.tests.UsageExpectAndReturnTest.floatType":248,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":264,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":48,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":10,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":415,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":183,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":124,"org.easymock.tests.UsageThrowableTest.noUpperLimit":312,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":171,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":347,"org.easymock.tests2.SerializationTest.test":142,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":202,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":147,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":420,"org.easymock.tests2.UsageConstraintsTest.testSame":174,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":247,"org.easymock.samples.SupportTest.addDocument":166,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":392,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":448,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":360,"org.easymock.tests.GenericTest.testPackageScope":63,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":497,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":470,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":414,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":429,"org.easymock.tests2.NameTest.nameForMock":90,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":258,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":387,"org.easymock.tests2.UsageStrictMockTest.differentMethods":100,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":390,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":250,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":301,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":433,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":267,"org.easymock.tests2.MockedExceptionTest.testRealException":236,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":122,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":480,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":353,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":479,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":97,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":454,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":281,"org.easymock.tests2.NameTest.nameForStrictMock":91,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":384,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":168,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":33,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":351,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":507,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":422,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":5,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":21,"org.easymock.tests2.UsageStrictMockTest.range":99,"org.easymock.tests2.UsageConstraintsTest.lessThan":190,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":412,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":502,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":474,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":82,"org.easymock.tests2.CaptureTest.testCaptureRightOne":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":364,"org.easymock.tests2.UsageConstraintsTest.testOr":2,"org.easymock.tests.UsageRangeTest.combination":107,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":31,"org.easymock.tests.UsageTest.wrongArguments":112,"org.easymock.tests2.MockBuilderTest.testWithConstructor":382,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":361,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":56,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":467,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":259,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":423,"org.easymock.tests.UsageVarargTest.varargShortAccepted":273,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":138,"org.easymock.tests2.UsageConstraintsTest.cmpTo":177,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":378,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":469,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":221,"org.easymock.tests2.CaptureTest.testCaptureFromStub":207,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":445,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":22,"org.easymock.tests.UsageTest.unexpectedCallWithArray":111,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":129,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":344,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":260,"org.easymock.tests2.CaptureTest.testCapture":500,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":131,"org.easymock.tests2.UsageConstraintsTest.constraints":0,"org.easymock.samples.ExampleTest.addAndChangeDocument":163,"org.easymock.tests.UsageStrictMockTest.testVerify":493,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":164,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":332,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":328,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":203,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":324,"org.easymock.tests.LimitationsTest.abstractClass":463,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":252,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":125,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":325,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":85,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":269}}]
