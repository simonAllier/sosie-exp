[{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"return java.lang.reflect.Field.getType().isAssignableFrom(org.easymock.internal.Injection.getMock().getClass())","type":"CtReturnImpl"},"failures":[6,7,8,9],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[27],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"expected"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[28],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[29,30,31,32,33,34],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[35,36,37,38],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1149","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:852","sourceCode":"org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Integer>(int))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:113","sourceCode":"if (java.lang.Class<?>[][int].isPrimitive()) {\n    java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n} else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"failures":[39,40,41],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"i","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[42,43,44,45,46,47,48],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:83","sourceCode":"return int == int","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"failures":[49,50],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"maximum":"result","java.lang.Integer.MAX_VALUE":"result"}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[51,52,53,54],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[55,56,57],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:103","sourceCode":"continue","type":"CtContinueImpl"},"failures":[58],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.Capture:82","failures":[59,60,61,62,63,64,65,66,67,68,69,70,71],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:261","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[72,73,74,75,76,77,78,79,80],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[81],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:67","sourceCode":"for (int int = 0 ; int < (java.lang.String[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.get(java.lang.String[][int]);\n    if (java.lang.Class<?> != null) {\n        java.lang.Class<?>[][int] = java.lang.Class<?>;\n    } else {\n        java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n    }\n}","type":"CtForImpl"},"failures":[35,36,37,38],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,41,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,14,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,1,2,4,195,196,197,198,199,200,201,36,37,38,202,203,204,28,205,51,206,207,27,208,209,210,211,212,213,214,215,50,216,53,217,218,219,54,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,23,258,259,260,261,262,263,56,57,264,265,266,267,60,268,61,62,64,65,66,269,67,69,71,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,81,285,286,287,288,289,290,291,292,33,34,293,294,5,295,296,297,298,299,300],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[28],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[195,301,36,237,241,302,29,303,304,305,30,31,306,307,308,309,310,275,311,312,276,313,314,315,316,317,318,319,320,321,277,322,323,324,325,326,278,327,328,33,34],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:110","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[329,254],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:318","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    final java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    final java.lang.reflect.TypeVariable<?>[] java.lang.reflect.TypeVariable<?>[] = ((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getTypeParameters();\n    for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n        final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int];\n        final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = java.lang.reflect.TypeVariable<?>[][int];\n        if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n            final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n            java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n            if (java.lang.reflect.Type == null) {\n                java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n            } \n            if (java.lang.reflect.Type != null) {\n                java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n            } \n        } \n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"type","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"failures":[330,331],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:70","sourceCode":"java.lang.Class<?>[][int] = java.lang.Class<?>","type":"CtAssignmentImpl"},"failures":[35,36,37],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[82,83,84,332,333,334,13,110,335,111,336,337,338,14,15,16,17,18,339,340,194,197,199,341,200,23,24,25,26,342],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"proxy":"proxy"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[82,84,85,86,87,88,89,90,91,41,343,107,108,110,335,111,114,115,116,117,118,344,126,345,346,347,348,349,127,128,129,350,14,351,352,353,157,58,163,164,165,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,2,195,197,199,341,200,36,37,202,203,204,28,205,51,206,207,27,208,209,210,211,212,213,214,215,50,216,53,217,218,219,54,220,221,222,223,224,225,226,227,228,229,230,231,232,233,235,236,237,238,239,240,241,354,247,249,250,355,253,356,257,23,258,357,358,260,261,359,262,56,60,268,62,63,66,269,67,69,360,71,271,272,273,361,362,274,275,276,277,278,279,363,280,281,282,283,284,364,285,365,286,287,289,293,294,295,296,298],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1963","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Float>(org.easymock.Capture<java.lang.Float>))","type":"CtInvocationImpl"},"failures":[62],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ExpectedInvocation:85","failures":[88,41,208,209,212,215,216,53,217,218,219,224,231,355],"status":-1,"binaryOperator":"((this.org.easymock.internal.Invocation.getMock().equals(org.easymock.internal.Invocation.getMock())) && (this.org.easymock.internal.Invocation.getMethod().equals(org.easymock.internal.Invocation.getMethod())))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:41","sourceCode":"new java.util.Properties()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[366,204,208,213,221],"status":-1,"binaryOperator":"int >= 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:98","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String)","type":"CtInvocationImpl"},"failures":[247,249,250,331,293],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[35,36,37,38],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[337,338,367,368],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[82,83,84,369,370,371,85,86,372,87,373,374,375,376,377,378,379,380,88,89,90,91,92,93,94,95,96,42,381,382,383,43,44,384,385,386,72,387,73,388,389,45,390,391,392,393,46,74,75,394,76,395,396,39,397,398,399,40,400,401,41,402,77,78,79,332,97,98,99,403,100,101,404,102,103,104,105,106,405,343,107,108,47,406,333,407,408,334,409,410,109,13,110,411,335,111,112,113,114,115,116,117,118,119,120,121,122,123,124,344,125,126,345,346,347,348,349,127,128,412,413,129,336,414,415,416,337,338,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,350,14,15,16,351,352,17,18,353,151,152,153,154,155,156,417,418,419,420,157,158,58,421,422,423,424,339,425,426,427,340,159,160,161,162,48,428,429,430,431,432,433,434,435,436,437,438,163,164,439,440,165,441,166,167,168,169,170,171,442,443,444,445,172,446,447,448,449,450,451,452,80,453,454,367,0,329,368,173,455,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,6,456,457,458,459,194,460,7,461,462,463,464,465,1,2,3,466,4,195,301,467,196,8,468,469,470,471,197,472,9,473,474,475,476,477,198,199,478,341,200,201,36,37,38,202,203,204,28,479,205,51,206,207,27,208,52,209,210,211,212,213,214,215,50,216,53,217,218,480,219,54,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,481,239,240,241,302,242,243,244,245,246,29,354,482,303,483,247,248,249,304,250,484,305,485,355,31,486,251,252,253,254,487,255,488,256,356,257,23,24,258,259,357,358,260,25,26,261,359,262,55,489,263,56,57,490,264,265,266,267,60,268,61,62,63,64,65,66,269,67,69,70,360,71,270,271,272,273,361,362,274,308,309,310,275,311,312,276,313,314,315,316,317,318,319,320,321,277,322,323,324,325,326,278,327,328,279,363,280,281,282,283,491,492,284,32,493,81,364,285,365,494,495,496,497,286,287,498,499,500,501,502,342,503,288,289,290,291,292,33,34,293,294,5,295,296,297,298,504,299,300],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:117","failures":[454,196,255,256,262,263,57,5],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[505],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"position":"org.easymock.EasyMock:1319","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:305","failures":[82,83,84,85,86,87,88,89,90,91,391,41,402,343,107,108,110,335,111,114,115,116,117,118,344,126,345,346,347,348,349,127,128,129,337,338,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,350,14,351,352,353,157,163,164,165,170,454,0,329,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,1,2,3,4,195,196,197,199,341,200,36,37,202,203,204,28,205,51,206,207,27,208,209,210,211,212,213,214,215,50,216,53,217,218,480,219,54,220,221,222,223,224,225,226,227,228,229,230,231,232,233,235,236,237,238,239,240,241,354,247,249,250,355,253,356,257,23,258,357,358,260,261,359,262,56,57,60,268,61,62,63,66,269,67,69,360,71,271,272,273,361,362,274,275,276,277,278,279,363,280,281,282,283,284,364,285,365,286,287,289,293,294,5,295,296,298],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":28,"org.easymock.tests2.UsageTest.argumentsOrdered":26,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":350,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":232,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":460,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":387,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":259,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":292,"org.easymock.tests2.DelegateToTest.testReturnException":1,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":167,"org.easymock.tests.MockingTest.testPartialClassMocking":85,"org.easymock.tests.MockClassControlTest.testToString":446,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":490,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":80,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":495,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":316,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":131,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":276,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":287,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":208,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":127,"org.easymock.tests2.UsageTest.wrongArguments":24,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":476,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":161,"org.easymock.samples.ExampleTest.answerVsDelegate":5,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":426,"org.easymock.tests2.UsageConstraintsTest.testNull":51,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":374,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":281,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":451,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":231,"org.easymock.tests2.CaptureTest.testPrimitive":62,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":129,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":150,"org.easymock.tests.UsageTest.moreThanOneArgument":14,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":280,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":121,"org.easymock.tests.UsageTest.argumentsOrdered":18,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":376,"org.easymock.tests.UsageVarargTest.varargIntAccepted":99,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":390,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":114,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":246,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":500,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":463,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":248,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":382,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":118,"org.easymock.tests.ReplayStateInvalidUsageTest.times":435,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":197,"org.easymock.tests2.DependencyTest.testClassMocking":496,"org.easymock.tests2.AnswerTest.answer":262,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":52,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":392,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":245,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":424,"org.easymock.tests2.CaptureTest.testAnd":60,"org.easymock.tests2.UsageTest.strictResetToDefault":257,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":81,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":303,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":120,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":90,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":226,"org.easymock.tests2.DelegateToTest.testDelegate":4,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":380,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":146,"org.easymock.tests.LimitationsTest.mockFinalMethod":441,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":170,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":96,"org.easymock.tests2.DependencyTest.testClassMockingSupport":497,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":337,"org.easymock.tests2.CaptureTest.testCapture1_2446744":63,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":492,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":144,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":243,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":429,"org.easymock.tests.UsageThrowableTest.throwError":344,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":425,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":464,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":405,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":123,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":328,"org.easymock.samples.PartialClassMockTest.testGetArea":293,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":430,"org.easymock.tests.MockingTest.testInterfaceMocking":372,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":115,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":78,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":409,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":132,"org.easymock.tests2.UsageTest.niceToStrict":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":317,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":42,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":247,"org.easymock.tests2.MockBuilderTest.testCreateMock":485,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":324,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":473,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":140,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":19,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":227,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":423,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":444,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":151,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":159,"org.easymock.tests.UsageOverloadedMethodTest.overloading":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":326,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":213,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":329,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":185,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":343,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":212,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":67,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":403,"org.easymock.tests.MockClassControlTest.testEquals":450,"org.easymock.tests2.EasyMockSupportClassTest.testAll":275,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":158,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":148,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":20,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":94,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":244,"org.easymock.tests2.CaptureTest.testCaptureAll":268,"org.easymock.tests.MockNameTest.defaultName":336,"org.easymock.tests2.UsageConstraintsTest.testMatches":214,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":122,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":48,"org.easymock.samples.ExampleTest.voteForRemovals":298,"org.easymock.tests.UsageVarargTest.allKinds":106,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":82,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":95,"org.easymock.samples.BasicClassMockTest.testPrintContent":291,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":348,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":477,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":466,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":171,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":7,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":400,"org.easymock.tests2.UsageConstraintsTest.greaterThan":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":311,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":89,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":365,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":401,"org.easymock.samples.ExampleTest.voteForRemoval":295,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":494,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":273,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":427,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":501,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":491,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":124,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":356,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":305,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":385,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":224,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":309,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":166,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":465,"org.easymock.tests2.CaptureTest.testCaptureFirst":71,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":384,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":225,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":359,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":455,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":181,"org.easymock.tests2.UsageTest.moreThanOneArgument":23,"org.easymock.tests2.CaptureTest.testCapture2_2446744":360,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":362,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":393,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":355,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":105,"org.easymock.tests.GenericTest.testBridgedEquals":421,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":418,"org.easymock.tests.UsageExpectAndReturnTest.longType":177,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":92,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":222,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":149,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":331,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":480,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":47,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":147,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":415,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":119,"org.easymock.tests.UsageCallCountTest.tooManyCalls":419,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":325,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":182,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":475,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":136,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":347,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":236,"org.easymock.tests.MockingTest.testNiceClassMocking":375,"org.easymock.tests.MockingTest.testClassMocking":370,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":152,"org.easymock.tests2.UsageConstraintsTest.testContains":211,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":330,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":253,"org.easymock.tests2.UsageConstraintsTest.testFind":205,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":108,"org.easymock.tests.MockTypeTest.fromEasyMockClass":339,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":410,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":256,"org.easymock.tests.UsageExpectAndReturnTest.object":184,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":284,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":474,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":230,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":101,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":408,"org.easymock.tests.UsageTest.exactCallCountByLastCall":353,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":41,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":44,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":452,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":377,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":12,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":301,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":190,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":97,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":0,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":456,"org.easymock.tests.MockClassControlTest.testHashCode":449,"org.easymock.tests2.EasyMockSupportTest.testVerify":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":319,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":378,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":454,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":443,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":242,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":487,"org.easymock.tests.UsageVarargTest.varargCharAccepted":100,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":395,"org.easymock.tests2.CaptureTest.testCaptureMultiple":59,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":76,"org.easymock.tests2.UsageTest.openCallCountByLastCall":357,"org.easymock.tests.DefaultClassInstantiatorTest.object":396,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":233,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":442,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":333,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":320,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":345,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":470,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":6,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":448,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":364,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":137,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":191,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":414,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":447,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":278,"org.easymock.tests2.UsageTest.resumeIfFailure":261,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":422,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":499,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":169,"org.easymock.tests2.StubTest.stubWithReturnValue":271,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":304,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":183,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":219,"org.easymock.tests2.SerializationTest.testAllMockedMethod":38,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":391,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":21,"org.easymock.samples.SupportTest.voteForRemovals":289,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":420,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":458,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":143,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":35,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":394,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":55,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":453,"org.easymock.tests.UsageExpectAndThrowTest.object":141,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":217,"org.easymock.tests2.DelegateToTest.testWrongClass":3,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":163,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":164,"org.easymock.samples.ConstructorCalledMockTest.testTax":33,"org.easymock.tests.UsageStrictMockTest.range":335,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":342,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":229,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":235,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":142,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":249,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":437,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":308,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":160,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":10,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":79,"org.easymock.tests2.CaptureTest.testCaptureNone":269,"org.easymock.tests.UsageUnorderedTest.message":332,"org.easymock.tests.UsageVerifyTest.twoReturns":84,"org.easymock.tests.UsageVarargTest.varargByteAccepted":104,"org.easymock.tests2.ThreadingTest.testThreadSafe":272,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":322,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":156,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":290,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":334,"org.easymock.tests2.CaptureTest.testCapture_2617107":61,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":22,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":130,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":413,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":74,"org.easymock.tests2.UsageConstraintsTest.any":209,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":434,"org.easymock.tests2.StubTest.stub":270,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":416,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":168,"org.easymock.tests.UsageExpectAndThrowTest.longType":134,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":75,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":399,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":433,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":478,"org.easymock.tests2.SerializationTest.testClass":36,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":194,"org.easymock.tests.LimitationsTest.mockNativeMethod":165,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":58,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":193,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":469,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":201,"org.easymock.tests2.NameTest.nameForMocksControl":267,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":471,"org.easymock.tests2.MockedExceptionTest.testMockedException":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":312,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":352,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":488,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":135,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":87,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":279,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":250,"org.easymock.tests.MockingTest.testNicePartialClassMocking":86,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":283,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":8,"org.easymock.tests2.CaptureTest.testCaptureLast":66,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":338,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":27,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":241,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":218,"org.easymock.tests.MockingTest.testTwoMocks":371,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":302,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":174,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":139,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":25,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":220,"org.easymock.samples.ExampleTest.removeNonExistingDocument":504,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":431,"org.easymock.tests.UsageStrictMockTest.differentMethods":111,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":9,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":457,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":397,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":361,"org.easymock.tests2.MockBuilderTest.testCreateMockString":486,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":445,"org.easymock.tests.UsageExpectAndThrowTest.floatType":133,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":313,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":310,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":263,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":467,"org.easymock.tests.UsageVerifyTest.twoThrows":83,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":277,"org.easymock.samples.ExampleTest.voteAgainstRemoval":296,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":73,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":77,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":285,"org.easymock.tests.LimitationsTest.privateConstructor":440,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":307,"org.easymock.tests2.UsageConstraintsTest.testNotNull":54,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":251,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":349,"org.easymock.tests2.UsageTest.defaultResetToNice":260,"org.easymock.samples.ExampleTest.voteAgainstRemovals":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":388,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":189,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":468,"org.easymock.tests.UsageVarargTest.differentLength":404,"org.easymock.tests2.CallbackTest.callback":196,"org.easymock.tests2.UsageConstraintsTest.equals":479,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":32,"org.easymock.tests.UsageTest.openCallCountByLastCall":351,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":202,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":412,"org.easymock.tests.UsageCallCountTest.tooFewCalls":154,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":238,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":162,"org.easymock.tests.UsageThrowableTest.throwCheckedException":346,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":11,"org.easymock.tests.MockingTest.testStrictClassMocking":369,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":402,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":240,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":472,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":237,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":436,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":239,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":57,"org.easymock.tests.ObjectMethodsTest.testHashCode":407,"org.easymock.tests2.CompareToTest.testGreateOrEqual":366,"org.easymock.tests2.NameTest.nameForNiceMock":266,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":274,"org.easymock.tests2.DependencyTest.testInterfaceMocking":286,"org.easymock.samples.ExampleTest.addDocument":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":323,"org.easymock.tests2.DelegateToTest.testStubDelegate":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":327,"org.easymock.tests2.AnswerTest.stubAnswer":56,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":110,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":484,"org.easymock.tests.UsageVarargTest.varargLongAccepted":103,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":112,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":72,"org.easymock.tests.UsageExpectAndReturnTest.floatType":176,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":192,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":195,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":34,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":462,"org.easymock.tests.UsageThrowableTest.noUpperLimit":125,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":216,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":368,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":203,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":498,"org.easymock.tests2.SerializationTest.test":37,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":64,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":505,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":39,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":175,"org.easymock.tests2.UsageConstraintsTest.testSame":206,"org.easymock.samples.SupportTest.addDocument":288,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":481,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":432,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":314,"org.easymock.tests.GenericTest.testPackageScope":157,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":379,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":43,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":461,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":373,"org.easymock.tests2.NameTest.nameForMock":264,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":186,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":31,"org.easymock.tests2.UsageStrictMockTest.differentMethods":200,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":493,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":178,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":145,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":406,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":91,"org.easymock.tests2.MockedExceptionTest.testRealException":254,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":340,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":503,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":45,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":389,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":199,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":438,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":128,"org.easymock.tests2.NameTest.nameForStrictMock":265,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":483,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":255,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":282,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":502,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":398,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":53,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":354,"org.easymock.tests2.UsageStrictMockTest.range":341,"org.easymock.tests2.UsageConstraintsTest.lessThan":221,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":459,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":386,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":223,"org.easymock.tests2.CaptureTest.testCaptureRightOne":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":318,"org.easymock.tests2.UsageConstraintsTest.testOr":207,"org.easymock.tests.UsageRangeTest.combination":88,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":363,"org.easymock.tests.UsageTest.wrongArguments":16,"org.easymock.tests2.MockBuilderTest.testWithConstructor":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":315,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":172,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":179,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":187,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":381,"org.easymock.tests.UsageVarargTest.varargShortAccepted":102,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":40,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":417,"org.easymock.tests2.UsageConstraintsTest.cmpTo":210,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":489,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":383,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":358,"org.easymock.tests2.CaptureTest.testCaptureFromStub":70,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":428,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":482,"org.easymock.tests.UsageTest.unexpectedCallWithArray":15,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":13,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":155,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":30,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":188,"org.easymock.tests2.CaptureTest.testCapture":68,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":411,"org.easymock.tests2.UsageConstraintsTest.constraints":204,"org.easymock.samples.ExampleTest.addAndChangeDocument":299,"org.easymock.tests.UsageStrictMockTest.testVerify":113,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":300,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":109,"org.easymock.tests2.CompareToTest.testGreateThan":49,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":93,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":65,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":116,"org.easymock.tests.LimitationsTest.abstractClass":439,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":180,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":173,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":117,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":98,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":228}}]
