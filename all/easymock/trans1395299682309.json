[{"transplant":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,106,107,107],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"method","this":"this"}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:296","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[108,109,110,111,112,113,114],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[84],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[115],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"methodName","key":"methodName"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:322","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[116,117,118,119,120,121],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[0,31,122,63,123,124,125,126,127],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[2,3,4,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[70,71,72,73,75,76],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[173,174,175,176,118,177,178,179,121,180,181,182,172,183],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"failures":[128,170],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:52","sourceCode":"return (int) == (int)","type":"CtReturnImpl"},"failures":[173,184,185,186,177,187,188],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"maximum"}},{"position":"org.easymock.internal.RecordState:190","failures":[0,189,190,191,192,193,194,195,196,197,198,199,200,201,202,4,203,204,173,184,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,35,37,40,44,45,46,231,232,233,234,129,235,236,59,130,237,238,239,240,131,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,109,266,177,187,154,155,156,157,158,159,160,267,268,269,270,271,272,273,274,275,276,277,278,168,279,280,169,281,282,283,171,188,183],"status":-1,"binaryOperator":"(java.lang.Object instanceof java.lang.Number)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:773","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[71,72,73,75,76],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:312","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[284,285],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[286,287],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:46","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Byte.java.lang.Class<java.lang.Byte>, java.lang.Byte.java.lang.Byte.valueOf(((byte)(0))))","type":"CtInvocationImpl"},"failures":[288,289,290,291,292,293,294,295,296,297,298,299,0,189,1,300,190,191,301,192,193,302,303,194,195,196,197,198,199,200,201,284,304,305,306,307,308,309,310,311,312,202,313,314,315,316,317,318,2,3,4,128,319,320,321,322,323,324,203,325,326,327,328,329,330,331,332,204,333,173,184,334,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,335,32,33,336,337,205,206,207,208,338,209,210,211,212,213,214,339,215,216,217,218,219,220,221,222,223,224,225,226,340,227,228,229,230,34,35,341,36,37,38,39,342,40,41,42,43,44,45,46,47,48,231,232,233,343,234,49,50,51,52,344,345,53,54,346,347,129,348,349,235,236,55,350,56,57,351,58,59,60,61,122,62,352,63,64,65,353,66,130,237,238,174,239,354,240,131,241,175,176,242,243,244,245,246,247,248,249,250,251,252,253,254,255,355,356,357,358,359,360,361,362,363,364,365,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,69,366,256,257,367,185,186,368,369,370,371,258,259,260,261,372,262,373,108,374,375,376,377,378,379,380,381,382,383,384,385,70,71,72,73,74,75,386,76,263,264,152,153,265,109,387,388,389,390,391,118,266,392,177,187,393,394,154,395,155,156,157,158,159,160,77,396,78,79,80,81,82,83,84,85,86,87,88,397,398,267,399,268,400,401,402,89,90,91,92,93,403,94,404,405,95,161,162,163,164,165,166,96,406,407,408,409,97,410,411,412,413,414,415,269,167,416,417,418,419,420,270,271,272,421,422,273,274,275,276,277,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,110,449,450,451,111,112,285,452,453,454,455,456,457,458,113,459,460,461,462,114,463,464,465,466,179,467,468,469,278,470,98,99,100,101,168,279,121,180,280,169,181,182,281,471,472,473,170,474,282,475,476,283,171,477,478,479,480,481,482,483,484,485,486,102,188,172,183,487,488,103,104,489,105,490,106,107,491,492,493,494,495,496,497,498],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1952","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[288,289,290,291,292,293,294,295,296,297,298,299,0,189,1,190,191,301,192,193,302,303,194,195,196,197,198,199,200,201,284,304,305,306,307,308,309,310,311,312,202,313,314,315,316,317,318,2,3,4,128,319,320,321,322,323,324,203,325,326,327,328,329,330,331,332,204,333,173,184,334,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,336,337,205,206,207,208,338,209,210,211,212,213,214,339,215,216,217,218,219,220,221,222,223,224,225,226,340,227,228,229,230,34,35,341,36,37,38,39,342,40,41,42,43,44,45,46,47,48,231,232,233,343,234,49,50,51,52,345,53,54,347,129,348,349,235,236,55,56,57,58,59,60,61,62,63,64,65,66,130,237,238,174,239,354,240,131,241,175,176,242,243,244,245,246,247,248,249,250,251,252,253,254,255,355,356,357,358,359,360,361,362,363,364,365,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,69,366,256,257,367,185,186,368,369,370,371,258,259,260,261,372,262,373,108,374,375,376,377,378,379,380,381,382,383,384,70,71,72,73,74,75,76,263,264,152,153,265,109,387,388,389,390,391,118,266,392,177,187,393,394,154,395,155,156,157,158,159,160,77,396,78,79,80,81,82,83,84,85,86,87,88,397,398,267,399,268,400,401,402,89,90,91,92,93,403,94,404,405,95,161,162,163,164,165,166,96,408,409,97,410,411,412,413,414,415,269,167,416,417,418,419,420,270,271,272,421,422,273,274,275,276,277,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,110,449,450,451,111,112,285,452,453,454,455,456,457,458,113,459,460,461,462,114,463,464,465,466,179,467,468,469,278,470,98,99,100,101,168,279,121,180,280,169,181,182,281,471,472,473,170,474,282,475,476,283,171,477,478,479,480,481,482,483,484,485,486,102,188,172,183,487,488,103,104,489,105,490,106,106,107,107,491,492,493,494,495,496,497,498],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.matchers.Compare:52","failures":[221],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1149","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:37","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>.getName(), java.lang.Integer.java.lang.Class<java.lang.Integer>)","type":"CtInvocationImpl"},"failures":[0,189,499],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Equals:53","failures":[338,175,181],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,154,156,157,158,159,160,165,413,414,415,170,171,172],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[293,295,0,189,1,190,191,301,192,193,302,303,194,195,196,197,199,200,201,305,306,202,4,319,203,332,204,333,173,184,334,8,11,21,27,30,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,340,227,228,229,230,34,35,341,36,37,38,40,45,231,232,233,343,234,49,50,51,52,345,53,54,347,129,235,236,59,61,62,130,237,238,174,239,354,240,131,175,176,242,243,244,245,246,247,248,249,250,252,253,254,255,355,357,358,359,361,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,69,185,186,370,371,258,260,261,263,264,152,153,265,391,118,266,392,177,187,393,154,395,155,156,157,158,159,160,85,86,92,93,94,165,269,416,417,418,419,420,270,271,272,421,422,273,274,275,276,277,423,424,425,426,427,428,429,430,432,433,435,436,437,438,439,442,443,444,445,447,448,179,467,468,469,278,470,100,168,279,180,280,169,181,182,281,471,473,170,282,476,283,171,188,172,183,487,488,103,104,489,105,490,491,492,493,494,495,496,498],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.EasyMock:665","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:298","sourceCode":"return ","type":"CtReturnImpl"},"failures":[347,153],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[233,382],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[210,339,224,228],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[343,49,372,373,378],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[351],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:41","sourceCode":"new java.util.Properties()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:63","sourceCode":"java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[224],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[173,174,175,176,118,177,178,179,121,180,181,182,172,183],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1790","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1877","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.CompareEqual<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[216,40],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":208,"org.easymock.tests2.UsageTest.argumentsOrdered":176,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":168,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":254,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":325,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":455,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":354,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":489,"org.easymock.tests2.DelegateToTest.testReturnException":357,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":162,"org.easymock.tests.MockingTest.testPartialClassMocking":92,"org.easymock.tests.MockClassControlTest.testToString":78,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":288,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":262,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":114,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":15,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":132,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":11,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":236,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":123,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":214,"org.easymock.tests2.UsageTest.wrongArguments":174,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":263,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":318,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":364,"org.easymock.samples.ExampleTest.answerVsDelegate":492,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":97,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":405,"org.easymock.tests2.UsageConstraintsTest.testNull":210,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":36,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":83,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":253,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":67,"org.easymock.tests2.CaptureTest.testPrimitive":192,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":265,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":151,"org.easymock.tests.UsageTest.moreThanOneArgument":279,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":341,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":267,"org.easymock.tests.UsageTest.argumentsOrdered":182,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":367,"org.easymock.tests.UsageVarargTest.varargIntAccepted":430,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":459,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":467,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":127,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":55,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":329,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":60,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":450,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":470,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":202,"org.easymock.tests.ReplayStateInvalidUsageTest.times":381,"org.easymock.tests2.DependencyTest.testClassMocking":348,"org.easymock.tests2.AnswerTest.answer":201,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":339,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":461,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":299,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":407,"org.easymock.tests2.CaptureTest.testAnd":190,"org.easymock.tests2.UsageTest.strictResetToDefault":237,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":43,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":351,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":398,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":248,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":260,"org.easymock.tests2.DelegateToTest.testDelegate":361,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":369,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":147,"org.easymock.tests.LimitationsTest.mockFinalMethod":101,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":165,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":481,"org.easymock.tests2.DependencyTest.testClassMockingSupport":349,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":400,"org.easymock.tests2.CaptureTest.testCapture1_2446744":193,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":342,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":145,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":297,"org.easymock.tests.UsageThrowableTest.throwError":154,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":375,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":409,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":330,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":268,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":29,"org.easymock.samples.PartialClassMockTest.testGetArea":105,"org.easymock.tests.MockingTest.testInterfaceMocking":403,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":376,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":468,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":256,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":133,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":102,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":16,"org.easymock.tests2.UsageTest.niceToStrict":239,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":110,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":59,"org.easymock.tests2.MockBuilderTest.testCreateMock":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":24,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":315,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":141,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":116,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":249,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":406,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":415,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":440,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":362,"org.easymock.tests.UsageOverloadedMethodTest.overloading":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":20,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":170,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":219,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":476,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":274,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":218,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":286,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":196,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":431,"org.easymock.tests2.EasyMockSupportClassTest.testAll":8,"org.easymock.tests.MockClassControlTest.testEquals":82,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":86,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":149,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":479,"org.easymock.tests2.CaptureTest.testCaptureAll":191,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":298,"org.easymock.tests.MockNameTest.defaultName":412,"org.easymock.tests2.UsageConstraintsTest.testMatches":220,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":399,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":108,"org.easymock.samples.ExampleTest.voteForRemovals":496,"org.easymock.tests.UsageVarargTest.allKinds":439,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":188,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":480,"org.easymock.samples.BasicClassMockTest.testPrintContent":104,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":159,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":331,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":166,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":326,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":360,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":386,"org.easymock.tests2.UsageConstraintsTest.greaterThan":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":9,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":259,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":46,"org.easymock.samples.ExampleTest.voteForRemoval":493,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":76,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":47,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":232,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":410,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":39,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":130,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":69,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":63,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":452,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":246,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":6,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":161,"org.easymock.tests2.CaptureTest.testCaptureFirst":200,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":356,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":285,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":247,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":243,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":475,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":272,"org.easymock.tests2.CaptureTest.testCapture2_2446744":199,"org.easymock.tests2.UsageTest.moreThanOneArgument":238,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":462,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":65,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":438,"org.easymock.tests.GenericTest.testBridgedEquals":88,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":447,"org.easymock.tests.UsageExpectAndReturnTest.longType":419,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":477,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":244,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":150,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":109,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":340,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":148,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":397,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":388,"org.easymock.tests.UsageCallCountTest.tooManyCalls":448,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":442,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":25,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":421,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":317,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":137,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":158,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":50,"org.easymock.tests.MockingTest.testNiceClassMocking":95,"org.easymock.tests.MockingTest.testClassMocking":90,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":441,"org.easymock.tests2.UsageConstraintsTest.testContains":217,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":4,"org.easymock.tests2.UsageConstraintsTest.testFind":209,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":171,"org.easymock.tests.MockTypeTest.fromEasyMockClass":408,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":390,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":295,"org.easymock.tests.UsageExpectAndReturnTest.object":273,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":40,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":316,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":252,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":433,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":124,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":485,"org.easymock.tests.UsageTest.exactCallCountByLastCall":281,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":112,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":185,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":372,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":31,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":428,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":424,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":473,"org.easymock.tests.MockClassControlTest.testHashCode":81,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":321,"org.easymock.tests2.EasyMockSupportTest.testVerify":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":18,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":186,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":471,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":414,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":296,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":300,"org.easymock.tests.UsageVarargTest.varargCharAccepted":432,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":385,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":332,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":466,"org.easymock.tests2.UsageTest.openCallCountByLastCall":240,"org.easymock.tests.DefaultClassInstantiatorTest.object":70,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":255,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":413,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":483,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":178,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":139,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":19,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":156,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":68,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":311,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":320,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":44,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":80,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":138,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":425,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":27,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":79,"org.easymock.tests2.UsageTest.resumeIfFailure":242,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":96,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":164,"org.easymock.tests2.StubTest.stubWithReturnValue":129,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":122,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":422,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":227,"org.easymock.tests2.SerializationTest.testAllMockedMethod":1,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":460,"org.easymock.samples.SupportTest.voteForRemovals":488,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":117,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":84,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":323,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":144,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":499,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":465,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":284,"org.easymock.tests.UsageExpectAndThrowTest.object":142,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":373,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":225,"org.easymock.tests2.DelegateToTest.testWrongClass":359,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":370,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":371,"org.easymock.tests.UsageStrictMockTest.range":177,"org.easymock.samples.ConstructorCalledMockTest.testTax":106,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":336,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":251,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":49,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":143,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":61,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":181,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":5,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":383,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":363,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":119,"org.easymock.tests2.CaptureTest.testCaptureNone":195,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":257,"org.easymock.tests.UsageUnorderedTest.message":179,"org.easymock.tests.UsageVerifyTest.twoReturns":183,"org.easymock.tests.UsageVarargTest.varargByteAccepted":437,"org.easymock.tests2.ThreadingTest.testThreadSafe":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":22,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":445,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":486,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":103,"org.easymock.tests2.CaptureTest.testCapture_2617107":301,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":402,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":463,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":153,"org.easymock.tests2.UsageConstraintsTest.any":215,"org.easymock.tests2.StubTest.stub":347,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":380,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":389,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":464,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":163,"org.easymock.tests.UsageExpectAndThrowTest.longType":135,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":74,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":379,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":333,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":203,"org.easymock.tests.LimitationsTest.mockNativeMethod":100,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":427,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":87,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":310,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":334,"org.easymock.tests2.NameTest.nameForMocksControl":292,"org.easymock.tests2.MockedExceptionTest.testMockedException":3,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":312,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":10,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":169,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":136,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":94,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":294,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":34,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":62,"org.easymock.tests.MockingTest.testNicePartialClassMocking":93,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":38,"org.easymock.tests2.CaptureTest.testCaptureLast":194,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":308,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":401,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":54,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":213,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":226,"org.easymock.tests.MockingTest.testTwoMocks":91,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":346,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":416,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":140,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":175,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":229,"org.easymock.samples.ExampleTest.removeNonExistingDocument":497,"org.easymock.tests.UsageStrictMockTest.differentMethods":187,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":314,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":377,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":322,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":72,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":233,"org.easymock.tests2.MockBuilderTest.testCreateMockString":66,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":77,"org.easymock.tests.UsageExpectAndThrowTest.floatType":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":12,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":7,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":305,"org.easymock.tests.UsageVerifyTest.twoThrows":172,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":335,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":472,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":21,"org.easymock.samples.ExampleTest.voteAgainstRemoval":494,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":456,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":366,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":45,"org.easymock.tests.LimitationsTest.privateConstructor":99,"org.easymock.tests2.UsageConstraintsTest.testNotNull":228,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":160,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":2,"org.easymock.tests2.UsageTest.defaultResetToNice":241,"org.easymock.samples.ExampleTest.voteAgainstRemovals":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":457,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":423,"org.easymock.tests.UsageVarargTest.differentLength":434,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":309,"org.easymock.tests2.CallbackTest.callback":319,"org.easymock.tests2.UsageConstraintsTest.equals":338,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":41,"org.easymock.tests.UsageTest.openCallCountByLastCall":280,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":205,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":152,"org.easymock.tests.UsageCallCountTest.tooFewCalls":443,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":52,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":365,"org.easymock.tests.UsageThrowableTest.throwCheckedException":157,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":120,"org.easymock.tests.MockingTest.testStrictClassMocking":89,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":167,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":53,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":51,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":313,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":382,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":345,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":307,"org.easymock.tests.ObjectMethodsTest.testHashCode":484,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":126,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":234,"org.easymock.tests2.NameTest.nameForNiceMock":291,"org.easymock.tests2.DependencyTest.testInterfaceMocking":235,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":125,"org.easymock.samples.ExampleTest.addDocument":495,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":28,"org.easymock.tests2.DelegateToTest.testStubDelegate":358,"org.easymock.tests2.AnswerTest.stubAnswer":306,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":266,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":352,"org.easymock.tests.UsageVarargTest.varargLongAccepted":436,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":393,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":454,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":426,"org.easymock.tests.UsageExpectAndReturnTest.floatType":418,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":30,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":107,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":474,"org.easymock.tests.UsageThrowableTest.noUpperLimit":395,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":223,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":328,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":206,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":32,"org.easymock.tests2.SerializationTest.test":189,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":302,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":287,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":71,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":417,"org.easymock.tests2.UsageConstraintsTest.testSame":211,"org.easymock.samples.SupportTest.addDocument":487,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":344,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":13,"org.easymock.tests.GenericTest.testPackageScope":85,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":368,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":111,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":327,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":404,"org.easymock.tests2.NameTest.nameForMock":289,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":275,"org.easymock.tests2.UsageStrictMockTest.differentMethods":184,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":353,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":42,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":420,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":146,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":482,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":261,"org.easymock.tests2.MockedExceptionTest.testRealException":128,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":411,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":113,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":458,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":204,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":384,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":264,"org.easymock.tests2.NameTest.nameForStrictMock":290,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":58,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":293,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":37,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":33,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":73,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":224,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":56,"org.easymock.tests2.UsageStrictMockTest.range":173,"org.easymock.tests2.UsageConstraintsTest.lessThan":230,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":324,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":115,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":453,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":17,"org.easymock.tests2.CaptureTest.testCaptureRightOne":197,"org.easymock.tests2.UsageConstraintsTest.testOr":212,"org.easymock.tests.UsageRangeTest.combination":258,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":35,"org.easymock.tests.UsageTest.wrongArguments":180,"org.easymock.tests2.MockBuilderTest.testWithConstructor":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":14,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":396,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":270,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":449,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":276,"org.easymock.tests.UsageVarargTest.varargShortAccepted":435,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":75,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":446,"org.easymock.tests2.UsageConstraintsTest.cmpTo":216,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":304,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":451,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":131,"org.easymock.tests2.CaptureTest.testCaptureFromStub":198,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":374,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":57,"org.easymock.tests.UsageTest.unexpectedCallWithArray":121,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":118,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":444,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":277,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":392,"org.easymock.tests2.UsageConstraintsTest.constraints":207,"org.easymock.samples.ExampleTest.addAndChangeDocument":498,"org.easymock.tests.UsageStrictMockTest.testVerify":394,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":490,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":391,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":478,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":303,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":469,"org.easymock.tests.LimitationsTest.abstractClass":98,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":271,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":278,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":282,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":429,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":250}}]
