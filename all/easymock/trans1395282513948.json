[{"position":"org.easymock.EasyMock:1135","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"in":"in"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[6,7,8,9],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[7,10,11,12,13,14,15,16,17,18],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[19,20,21,22,23,24],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,21,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,22,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,7,8,9,372,373,374,375,376,377,378,379,380,10,381,382,11,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,12,13,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[504,505,506],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[61,64],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[371,507],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[122,123,124,125,128,129,130,132,197,198,199,200,201,203,206,214,215,216,217,218,219,221,247,248,249,250,251,252,253,254,255,272,281,282,287,288,289,290,292,293,294,295,297,299,300,301,302,303,304,305,306,309,311,313,314,317,320,323,324,327,331,332,333,334,337,338,9,400,404,460,461,462],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:183","failures":[30,31,32,33,35,36,52,53,61,62,63,64,65,66,67,68,86,87,89,90,91,92,93,99,100,102,103,106,107,108,109,111,112,114,115,116,117,118,124,126,130,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,200,201,203,207,208,209,210,211,212,234,236,237,255,256,257,258,265,266,267,268,269,270,272,273,274,275,276,277,278,280,283,284,285,286,287,288,289,291,292,294,312,322,328,331,332,333,334,336,337,338,340,342,343,344,345,346,348,349,350,351,352,353,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,7,8,9,378,380,381,387,388,389,391,392,393,394,399,407,410,411,412,422,429,431,432,433,434,437,438,439,440,441,452,12,462,464,465,467,468,469,470,471,474,475,477,478,479,481,482,483,484,485,487,488,489,490,491,492,495,498,499,500,501,502,503],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:172","failures":[45,380],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.LastControl:85","failures":[],"status":0,"binaryOperator":"(java.util.Stack<org.easymock.IArgumentMatcher> != null)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:71","failures":[40,45,131,272,295,301,302,305,312,322,328,7,372,374,375,378,379,380,381,383,384,386],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[40,45,122,123,124,125,128,129,130,131,132,197,198,199,200,201,203,206,214,215,216,217,218,219,221,247,248,249,250,251,252,253,254,255,272,287,288,289,290,292,293,294,295,297,299,300,301,302,303,304,305,306,307,309,311,312,313,314,315,317,318,319,320,322,323,324,325,326,327,328,331,332,334,337,9,372,374,375,377,378,379,380,381,383,384,386,400,404,460,461,462],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[508,21,101,104,105,207,257,258,22,268,390,396,397,501],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"failures":[48],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[148,155,211,224,470],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[79,81,407,477,479],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[245],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[200],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,21,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,214,215,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,22,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,7,8,9,372,374,375,377,378,379,380,381,11,383,384,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,12,13,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,497,498,499,500,501,502,503],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[85,508,21,101,104,105,207,257,258,22,268,390,396,397,501],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[10,13,14,15,16,509,510],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:251","sourceCode":"java.lang.Class<?> java.lang.Class<?> = this.org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:212","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"lastInvocation":"lastInvocation"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[148],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[511],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:92","failures":[345,346,351,352,354,364,482,484,492],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:183","failures":[30,31,32,33,35,36,52,53,61,62,63,64,65,66,67,68,86,87,89,90,91,92,93,99,100,102,103,106,107,108,109,111,112,114,115,116,117,118,124,126,130,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,200,201,203,207,208,209,210,211,212,234,236,237,255,256,257,258,265,266,267,268,269,270,272,273,274,275,276,277,278,280,283,284,285,286,287,288,289,291,292,294,312,322,328,331,332,333,334,336,337,338,340,342,343,344,345,346,348,349,350,351,352,353,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,7,8,9,378,380,381,387,388,389,391,392,393,394,399,407,410,411,412,422,429,431,432,433,434,437,438,439,440,441,452,12,462,464,465,467,468,469,470,471,474,475,477,478,479,481,482,483,484,485,487,488,489,490,491,492,495,498,499,500,501,502,503],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[132],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[281,282,298,382,512,385,513,514],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"ret":"constructor","clazz":"toMock"}},{"position":"org.easymock.internal.LastControl:92","failures":[345,346,351,352,354,364,482,484,492],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[358],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:85","failures":[349,354,364,369],"status":-1,"binaryOperator":"(java.util.Stack<org.easymock.IArgumentMatcher> != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:556","sourceCode":"final org.easymock.internal.MocksControl org.easymock.internal.MocksControl = org.easymock.internal.LastControl.org.easymock.internal.LastControl.lastControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:140","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[358],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1568","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(T))","type":"CtInvocationImpl"},"failures":[346,349,352,354,369,482,492],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[128],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[6,7,8,9],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[],"status":0,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[226,245],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[40,45,124,129,130,131,199,200,201,203,248,255,272,281,281,282,282,287,288,289,290,292,293,294,295,297,300,301,302,303,309,312,322,328,331,332,333,334,337,338,7,9,372,515,374,375,378,379,380,381,383,384,516,386,12,517,518,519,462],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":346,"org.easymock.tests2.UsageTest.argumentsOrdered":397,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":99,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":439,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":143,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":392,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":283,"org.easymock.tests2.DelegateToTest.testReturnException":477,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":74,"org.easymock.tests.MockingTest.testPartialClassMocking":200,"org.easymock.tests.MockClassControlTest.testToString":249,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":442,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":120,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":152,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":316,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":157,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":312,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":475,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":14,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":353,"org.easymock.tests2.UsageTest.wrongArguments":390,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":208,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":458,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":71,"org.easymock.samples.ExampleTest.answerVsDelegate":274,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":45,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":205,"org.easymock.tests2.UsageConstraintsTest.testNull":349,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":292,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":438,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":254,"org.easymock.tests2.CaptureTest.testPrimitive":485,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":212,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":176,"org.easymock.tests.UsageTest.moreThanOneArgument":100,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":291,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":240,"org.easymock.tests.UsageTest.argumentsOrdered":105,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":259,"org.easymock.tests.UsageVarargTest.varargIntAccepted":109,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":148,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":89,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":510,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":372,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":427,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":402,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":379,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":135,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":93,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":452,"org.easymock.tests.ReplayStateInvalidUsageTest.times":230,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":514,"org.easymock.tests2.DependencyTest.testClassMocking":472,"org.easymock.tests2.AnswerTest.answer":407,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":354,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":150,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":416,"org.easymock.tests2.CaptureTest.testAnd":482,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":42,"org.easymock.tests2.UsageTest.strictResetToDefault":388,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":300,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":376,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":239,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":433,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":236,"org.easymock.tests2.DelegateToTest.testDelegate":481,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":263,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":172,"org.easymock.tests.LimitationsTest.mockFinalMethod":125,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":77,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":98,"org.easymock.tests2.DependencyTest.testClassMockingSupport":473,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":244,"org.easymock.tests2.CaptureTest.testCapture1_2446744":486,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":296,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":170,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":414,"org.easymock.tests.UsageThrowableTest.throwError":61,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":224,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":44,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":428,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":88,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":242,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":513,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":330,"org.easymock.samples.PartialClassMockTest.testGetArea":272,"org.easymock.tests.MockingTest.testInterfaceMocking":202,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":225,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":90,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":49,"org.easymock.tests2.UsageTest.niceToStrict":391,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":158,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":59,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":317,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":504,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":133,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":378,"org.easymock.tests2.MockBuilderTest.testCreateMock":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":325,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":455,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":166,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":23,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":434,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":41,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":27,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":28,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":69,"org.easymock.tests.UsageOverloadedMethodTest.overloading":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":327,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":82,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":359,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":188,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":51,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":358,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":491,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":110,"org.easymock.tests.MockClassControlTest.testEquals":253,"org.easymock.tests2.EasyMockSupportClassTest.testAll":309,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":130,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":174,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":517,"org.easymock.tests2.CaptureTest.testCaptureAll":483,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":415,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":96,"org.easymock.tests.MockNameTest.defaultName":60,"org.easymock.tests2.UsageConstraintsTest.testMatches":360,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":222,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":241,"org.easymock.samples.ExampleTest.voteForRemovals":278,"org.easymock.tests.UsageVarargTest.allKinds":118,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":256,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":97,"org.easymock.samples.BasicClassMockTest.testPrintContent":288,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":67,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":497,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":480,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":424,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":78,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":18,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":220,"org.easymock.tests2.UsageConstraintsTest.greaterThan":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":310,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":235,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":303,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":221,"org.easymock.samples.ExampleTest.voteForRemoval":275,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":466,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":304,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":46,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":403,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":295,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":387,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":255,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":140,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":431,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":307,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":73,"org.easymock.tests2.CaptureTest.testCaptureFirst":495,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":476,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":139,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":432,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":399,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":85,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":184,"org.easymock.tests2.CaptureTest.testCapture2_2446744":494,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":468,"org.easymock.tests2.UsageTest.moreThanOneArgument":389,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":384,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":151,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":117,"org.easymock.tests.GenericTest.testBridgedEquals":132,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":35,"org.easymock.tests.UsageExpectAndReturnTest.longType":180,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":429,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":94,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":516,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":175,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":243,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":367,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":173,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":38,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":238,"org.easymock.tests.UsageCallCountTest.tooManyCalls":36,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":326,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":185,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":457,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":162,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":66,"org.easymock.tests.MockingTest.testNiceClassMocking":206,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":332,"org.easymock.tests.MockingTest.testClassMocking":198,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":515,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":29,"org.easymock.tests2.UsageConstraintsTest.testContains":357,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":462,"org.easymock.tests2.UsageConstraintsTest.testFind":348,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":53,"org.easymock.tests.MockTypeTest.fromEasyMockClass":43,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":264,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":342,"org.easymock.tests.UsageExpectAndReturnTest.object":187,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":297,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":456,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":437,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":112,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":15,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":57,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":511,"org.easymock.tests.UsageTest.exactCallCountByLastCall":106,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":126,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":138,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":119,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":260,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":13,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":107,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":193,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":81,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":418,"org.easymock.tests.MockClassControlTest.testHashCode":252,"org.easymock.tests2.EasyMockSupportTest.testVerify":441,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":319,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":261,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":26,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":79,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":413,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":496,"org.easymock.tests.UsageVarargTest.varargCharAccepted":111,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":213,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":498,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":156,"org.easymock.tests2.UsageTest.openCallCountByLastCall":393,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":505,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":440,"org.easymock.tests.DefaultClassInstantiatorTest.object":214,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":25,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":55,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":508,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":320,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":64,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":450,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":417,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":251,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":301,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":163,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":194,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":37,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":328,"org.easymock.tests2.UsageTest.resumeIfFailure":398,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":40,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":401,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":76,"org.easymock.tests2.StubTest.stubWithReturnValue":471,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":10,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":186,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":368,"org.easymock.tests2.SerializationTest.testAllMockedMethod":9,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":149,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":24,"org.easymock.samples.SupportTest.voteForRemovals":286,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":128,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":420,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":169,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":6,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":155,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":408,"org.easymock.tests.UsageExpectAndThrowTest.object":167,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":121,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":365,"org.easymock.tests2.DelegateToTest.testWrongClass":479,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":86,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":87,"org.easymock.tests.UsageStrictMockTest.range":268,"org.easymock.samples.ConstructorCalledMockTest.testTax":281,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":405,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":436,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":331,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":168,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":380,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":104,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":306,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":70,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":19,"org.easymock.tests2.CaptureTest.testCaptureNone":490,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":50,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":1,"org.easymock.tests.UsageUnorderedTest.message":207,"org.easymock.tests.UsageVerifyTest.twoReturns":258,"org.easymock.tests.UsageVarargTest.varargByteAccepted":116,"org.easymock.tests2.ThreadingTest.testThreadSafe":465,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":323,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":33,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":58,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":287,"org.easymock.tests2.CaptureTest.testCapture_2617107":484,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":246,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":153,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":211,"org.easymock.tests2.UsageConstraintsTest.any":355,"org.easymock.tests2.StubTest.stub":470,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":229,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":39,"org.easymock.tests.UsageExpectAndThrowTest.longType":160,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":154,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":75,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":218,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":228,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":500,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":422,"org.easymock.tests2.SerializationTest.testClass":7,"org.easymock.tests.LimitationsTest.mockNativeMethod":124,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":131,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":196,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":519,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":449,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":503,"org.easymock.tests2.NameTest.nameForMocksControl":446,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":2,"org.easymock.tests2.MockedExceptionTest.testMockedException":461,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":451,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":311,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":103,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":161,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":203,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":341,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":289,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":381,"org.easymock.tests.MockingTest.testNicePartialClassMocking":201,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":294,"org.easymock.tests2.CaptureTest.testCaptureLast":489,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":447,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":245,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":338,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":352,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":366,"org.easymock.tests.MockingTest.testTwoMocks":199,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":339,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":177,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":165,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":396,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":370,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":5,"org.easymock.samples.ExampleTest.removeNonExistingDocument":279,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":454,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":226,"org.easymock.tests.UsageStrictMockTest.differentMethods":269,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":419,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":4,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":216,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":467,"org.easymock.tests2.MockBuilderTest.testCreateMockString":386,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":247,"org.easymock.tests.UsageExpectAndThrowTest.floatType":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":313,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":308,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":410,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":459,"org.easymock.tests.UsageVerifyTest.twoThrows":257,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":322,"org.easymock.samples.ExampleTest.voteAgainstRemoval":276,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":144,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":48,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":302,"org.easymock.tests.LimitationsTest.privateConstructor":123,"org.easymock.tests2.UsageConstraintsTest.testNotNull":369,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":460,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":68,"org.easymock.tests2.UsageTest.defaultResetToNice":395,"org.easymock.samples.ExampleTest.voteAgainstRemovals":273,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":145,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":192,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":448,"org.easymock.tests.UsageVarargTest.differentLength":113,"org.easymock.tests2.CallbackTest.callback":464,"org.easymock.tests2.UsageConstraintsTest.equals":347,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":298,"org.easymock.tests.UsageTest.openCallCountByLastCall":102,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":343,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":210,"org.easymock.tests.UsageCallCountTest.tooFewCalls":31,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":334,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":72,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":3,"org.easymock.tests.UsageThrowableTest.throwCheckedException":65,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":20,"org.easymock.tests.MockingTest.testStrictClassMocking":197,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":127,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":337,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":453,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":333,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":231,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":336,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":412,"org.easymock.tests.ObjectMethodsTest.testHashCode":56,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":509,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":469,"org.easymock.tests2.NameTest.nameForNiceMock":445,"org.easymock.tests2.DependencyTest.testInterfaceMocking":474,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":16,"org.easymock.samples.ExampleTest.addDocument":277,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":324,"org.easymock.tests2.DelegateToTest.testStubDelegate":478,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":329,"org.easymock.tests2.AnswerTest.stubAnswer":411,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":266,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":382,"org.easymock.tests.UsageVarargTest.varargLongAccepted":115,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":270,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":142,"org.easymock.tests.UsageExpectAndReturnTest.floatType":179,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":195,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":12,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":282,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":426,"org.easymock.tests.UsageThrowableTest.noUpperLimit":62,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":83,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":363,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":344,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":400,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":487,"org.easymock.tests2.SerializationTest.test":8,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":215,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":178,"org.easymock.tests2.UsageConstraintsTest.testSame":350,"org.easymock.samples.SupportTest.addDocument":285,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":335,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":314,"org.easymock.tests.GenericTest.testPackageScope":129,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":262,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":137,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":425,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":204,"org.easymock.tests2.NameTest.nameForMock":443,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":189,"org.easymock.tests2.UsageStrictMockTest.differentMethods":502,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":385,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":299,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":181,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":171,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":54,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":237,"org.easymock.tests2.MockedExceptionTest.testRealException":463,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":47,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":406,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":147,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":499,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":146,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":209,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":233,"org.easymock.tests2.NameTest.nameForStrictMock":444,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":377,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":506,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":340,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":293,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":404,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":217,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":364,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":374,"org.easymock.tests2.UsageStrictMockTest.range":501,"org.easymock.tests2.UsageConstraintsTest.lessThan":371,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":421,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":430,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":141,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":17,"org.easymock.tests2.CaptureTest.testCaptureRightOne":492,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":318,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":0,"org.easymock.tests2.UsageConstraintsTest.testOr":351,"org.easymock.tests.UsageRangeTest.combination":234,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":290,"org.easymock.tests.UsageTest.wrongArguments":101,"org.easymock.tests2.MockBuilderTest.testWithConstructor":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":315,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":248,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":182,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":190,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":134,"org.easymock.tests.UsageVarargTest.varargShortAccepted":114,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":219,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":34,"org.easymock.tests2.UsageConstraintsTest.cmpTo":356,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":409,"org.easymock.tests2.CompareToTest.testLessThan":507,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":136,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":394,"org.easymock.tests2.CaptureTest.testCaptureFromStub":493,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":223,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":375,"org.easymock.tests.UsageTest.unexpectedCallWithArray":21,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":22,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":32,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":512,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":191,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":267,"org.easymock.tests2.UsageConstraintsTest.constraints":345,"org.easymock.samples.ExampleTest.addAndChangeDocument":280,"org.easymock.tests.UsageStrictMockTest.testVerify":271,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":284,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":265,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":95,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":488,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":518,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":91,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":183,"org.easymock.tests.LimitationsTest.abstractClass":122,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":84,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":92,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":435,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":108}}]
