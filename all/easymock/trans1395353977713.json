[{"position":"org.easymock.EasyMock:773","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:205","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1581","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(boolean[]))","type":"CtInvocationImpl"},"failures":[13],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:148","sourceCode":"for (final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.Class<T>.getDeclaredConstructors()) {\n    if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n        if (java.lang.reflect.Constructor<T> != null) {\n            throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n        } \n        java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n    } \n}","type":"CtForEachImpl"},"failures":[4,6,14,15,16,17,18,19,20,21,22,23,9,10,11,12],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"clazz","this":"this","constructor":"ret"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[24,25,26],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,0,0,1,1,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,9,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,13,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,12,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:83","failures":[29,30,33,34,74,350,351,114,115,116,170,173,212,218,219,301],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","threadSafe":"threadSafe"}},{"transplant":{"position":"org.easymock.internal.MocksControl:233","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:50","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Long.java.lang.Class<java.lang.Long>, java.lang.Long.java.lang.Long.valueOf(0))","type":"CtInvocationImpl"},"failures":[57,79,86,92,99,100,120,151,157,164,165,190,352],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1803","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:95","sourceCode":"return java.lang.StringBuilder.toString()","type":"CtReturnImpl"},"failures":[29,30,33,34,350,351,114,115,116,170,173,174,353,354,212,218,219,301,302],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:47","sourceCode":"java.lang.StringBuffer.append(\"and(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[355,356,28,357,358,73,74,359,360,351,113,114,115,116,171,173,174,211,361,362,363,364,365,366,299,301,302],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:160","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"failures":[367,368,369],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[370],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:92","sourceCode":"for (final org.easymock.internal.Range org.easymock.internal.Range : java.util.LinkedList<org.easymock.internal.Range>) {\n    int += org.easymock.internal.Range.getMinimum();\n    if ((org.easymock.internal.Range.hasOpenCount()) || (int == (java.lang.Integer.int))) {\n        int = java.lang.Integer.int;\n    } else {\n        int += org.easymock.internal.Range.getMaximum();\n    }\n}","type":"CtForEachImpl"},"failures":[27,28,30,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,60,73,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,108,110,111,112,113,114,115,116,117,118,125,126,127,128,129,142,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,179,180,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,204,205,206,207,208,209,210,211,212,213,214,218,219,220,221,223,224,226,227,229,231,232,233,234,235,236,237,238,239,240,241,242,243,245,247,248,249,250,251,252,253,254,255,260,261,262,263,9,264,265,268,271,273,274,275,276,277,278,279,281,282,283,284,285,286,287,288,289,290,291,292,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,13,317,318,319,320,321,322,323,324,326,327,328,329,330,331,12,332,333,334,335,336,337,339,340,341,342,343,344,347,348,349],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[371,372,373],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:169","sourceCode":"org.easymock.internal.ErrorMessage.appendTo(java.lang.StringBuilder, 0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[27,35,52,110,111,114,115,116,172,173,374,375,209,221,286,300,301,319],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"errorMessage":"buffer","m":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[173,174,246,301,302],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:330","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    if (java.lang.reflect.Type == null) {\n        java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n    } \n    if (java.lang.reflect.Type != null) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } \n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:324","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    if (java.lang.reflect.Type == null) {\n        java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n    } \n    if (java.lang.reflect.Type != null) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","actualTypeArgument":"actualTypeArgument","variable":"variable","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[12,332,333],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[356,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,357,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,196,197,198,199,200,201,202,203,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,228,229,230,232,233,236,237,238,239,240,241,242,243,244,245,246,247,248,249,256,257,258,259,260,261,262,263,9,264,265,266,267,268,269,270,271,272,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,13,317,318,319,320,321,322,323,324,325,326,327,328,329,330,12,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[376],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[239],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:36","sourceCode":"try {\n    if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n        org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n    } \n    return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]));\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace();\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace();\n} catch (final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper) {\n    throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace();\n}","type":"CtTryImpl"},"failures":[355,356,27,28,29,30,31,32,33,34,35,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,70,357,71,72,358,73,74,377,378,379,380,75,76,77,78,79,381,382,383,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,105,384,385,386,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,387,127,128,129,142,143,144,145,146,147,388,389,390,391,392,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,170,171,172,173,174,175,178,179,180,181,182,183,184,185,186,187,188,189,190,191,393,394,395,352,193,195,0,0,1,1,196,197,198,199,201,203,206,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,396,397,261,262,263,9,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,286,398,291,292,293,399,294,295,296,297,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,400,314,315,316,13,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,12,332,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"failures":[401,402,403,404,405,406,407,408,355,356,409,27,28,29,30,31,32,33,34,35,36,37,38,410,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,357,71,72,358,73,74,377,378,379,411,380,412,75,76,77,78,79,381,382,383,413,80,81,82,414,415,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,416,417,370,418,419,420,421,422,423,424,425,426,427,428,429,430,384,431,432,433,434,435,385,436,386,437,438,112,439,113,114,115,116,117,118,119,120,121,122,123,124,125,126,440,441,387,127,128,442,129,443,444,445,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,388,389,390,391,392,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,469,470,471,472,473,474,178,179,180,181,182,183,184,185,186,187,188,189,190,475,191,192,393,476,394,395,352,193,194,195,0,1,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,477,478,479,480,481,482,483,367,368,484,485,486,222,223,487,488,224,225,226,227,5,6,228,229,230,231,232,233,234,489,235,236,237,490,238,239,240,241,242,243,244,491,245,8,492,246,247,248,249,493,494,495,496,497,498,499,250,500,501,502,503,504,505,506,507,508,251,509,510,252,511,512,513,514,515,516,517,518,519,253,520,521,522,523,524,254,525,526,527,528,529,530,531,255,532,533,534,535,536,537,256,257,258,259,260,396,397,261,262,263,538,9,10,264,539,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,540,287,288,289,290,398,291,292,293,399,294,295,296,297,298,299,300,301,302,303,304,305,306,307,541,308,309,310,311,312,313,400,314,315,316,13,317,318,319,320,321,322,323,324,325,326,327,328,329,542,543,330,331,12,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,544,349],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[265,266],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[132],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[31,32,52,417,113,126,389,390,173,174,215,216,301,302,305,306,308,310,311,316,318,321,328],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[0,1,2,545,7,8],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[322],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:243","failures":[47,52,53,54,55,380,83,84,85,86,87,88,91,92,94,95,96,98,99,100,101,102,386,112,117,118,119,120,121,122,124,127,128,129,171,173,174,186,187,188,189,190,191,393,395,352,195,196,198,199,201,206,223,224,226,227,229,231,232,233,234,235,236,237,238,239,240,241,242,243,245,247,248,249,251,252,253,254,9,267,292,299,301,302,330,331],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[546,547,548,373],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[13],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[292],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:193","sourceCode":"java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1659","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(long[]))","type":"CtInvocationImpl"},"failures":[13],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":307,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":27,"org.easymock.tests2.UsageTest.argumentsOrdered":219,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":283,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":532,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":425,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":214,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":208,"org.easymock.tests2.DelegateToTest.testReturnException":291,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":57,"org.easymock.tests.MockingTest.testPartialClassMocking":127,"org.easymock.tests.MockClassControlTest.testToString":64,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":540,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":380,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":494,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":433,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":514,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":148,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":252,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":331,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":467,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":17,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":313,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":47,"org.easymock.tests2.UsageTest.wrongArguments":212,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":505,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":146,"org.easymock.samples.ExampleTest.answerVsDelegate":197,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":406,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":444,"org.easymock.tests2.UsageConstraintsTest.testNull":309,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":241,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":69,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":282,"org.easymock.tests2.CaptureTest.testPrimitive":337,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":51,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":167,"org.easymock.tests.UsageTest.moreThanOneArgument":28,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":240,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":121,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":388,"org.easymock.tests.UsageTest.argumentsOrdered":34,"org.easymock.tests.UsageVarargTest.varargIntAccepted":38,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":430,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":366,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":186,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":22,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":222,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":536,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":368,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":225,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":370,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":190,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":451,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":26,"org.easymock.tests.ReplayStateInvalidUsageTest.times":138,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":250,"org.easymock.tests2.DependencyTest.testClassMocking":542,"org.easymock.tests2.AnswerTest.answer":260,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":400,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":431,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":259,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":403,"org.easymock.tests2.CaptureTest.testAnd":334,"org.easymock.tests2.UsageTest.strictResetToDefault":210,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":3,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":246,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":120,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":54,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":277,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":392,"org.easymock.tests2.DelegateToTest.testDelegate":294,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":450,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":163,"org.easymock.tests.LimitationsTest.mockFinalMethod":439,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":60,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":79,"org.easymock.tests2.DependencyTest.testClassMockingSupport":543,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":355,"org.easymock.tests2.CaptureTest.testCapture1_2446744":338,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":491,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":161,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":257,"org.easymock.tests.UsageThrowableTest.throwError":178,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":132,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":405,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":537,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":354,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":526,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":454,"org.easymock.samples.PartialClassMockTest.testGetArea":206,"org.easymock.tests.MockingTest.testInterfaceMocking":442,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":133,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":187,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":395,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":515,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":415,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":149,"org.easymock.tests2.UsageTest.niceToStrict":213,"org.easymock.tests2.ThreadingTest.testChangeDefault":539,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":416,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":371,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":224,"org.easymock.tests2.MockBuilderTest.testCreateMock":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":522,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":502,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":157,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":362,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":278,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":402,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":383,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":103,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":144,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":546,"org.easymock.tests.UsageOverloadedMethodTest.overloading":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":524,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":519,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":72,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":317,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":124,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":94,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":13,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":343,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":410,"org.easymock.tests.MockClassControlTest.testEquals":68,"org.easymock.tests2.EasyMockSupportClassTest.testAll":251,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":192,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":165,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":77,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":258,"org.easymock.tests2.CaptureTest.testCaptureAll":335,"org.easymock.tests.MockNameTest.defaultName":468,"org.easymock.tests2.UsageConstraintsTest.testMatches":318,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":130,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":122,"org.easymock.samples.ExampleTest.voteForRemovals":201,"org.easymock.tests.UsageVarargTest.allKinds":46,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":113,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":78,"org.easymock.samples.BasicClassMockTest.testPrintContent":205,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":184,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":297,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":533,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":399,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":61,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":23,"org.easymock.tests2.UsageConstraintsTest.greaterThan":320,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":509,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":53,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":249,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":455,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":474,"org.easymock.samples.ExampleTest.voteForRemoval":198,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":493,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":265,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":407,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":369,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":244,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":447,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":193,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":209,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":422,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":275,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":507,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":56,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":398,"org.easymock.tests2.CaptureTest.testCaptureFirst":347,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":421,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":276,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":221,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":74,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":90,"org.easymock.tests2.UsageTest.moreThanOneArgument":211,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":267,"org.easymock.tests2.CaptureTest.testCapture2_2446744":346,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":432,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":229,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":45,"org.easymock.tests.GenericTest.testBridgedEquals":476,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":547,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":110,"org.easymock.tests.UsageExpectAndReturnTest.longType":86,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":75,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":273,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":166,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":386,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":325,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":164,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":119,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":378,"org.easymock.tests.UsageCallCountTest.tooManyCalls":111,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":24,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":105,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":523,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":91,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":504,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":153,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":183,"org.easymock.tests.MockingTest.testNiceClassMocking":445,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":232,"org.easymock.tests.MockingTest.testClassMocking":441,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":104,"org.easymock.tests2.UsageConstraintsTest.testContains":316,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":271,"org.easymock.tests2.UsageConstraintsTest.testFind":308,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":126,"org.easymock.tests.MockTypeTest.fromEasyMockClass":404,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":168,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":349,"org.easymock.tests.UsageExpectAndReturnTest.object":93,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":245,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":503,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":281,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":40,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":18,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":82,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":548,"org.easymock.tests.UsageTest.exactCallCountByLastCall":35,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":142,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":420,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":411,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":389,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":10,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":99,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":36,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":71,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":528,"org.easymock.tests.MockClassControlTest.testHashCode":67,"org.easymock.tests2.EasyMockSupportTest.testVerify":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":517,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":25,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":390,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":70,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":382,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":256,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":350,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":538,"org.easymock.tests.UsageVarargTest.varargCharAccepted":39,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":298,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":436,"org.easymock.tests2.UsageTest.openCallCountByLastCall":215,"org.easymock.tests.DefaultClassInstantiatorTest.object":177,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":284,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":372,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":381,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":80,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":518,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":155,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":181,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":498,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":527,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":453,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":66,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":247,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":154,"org.easymock.tests.ReplayStateInvalidCallsTest.times":459,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":100,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":377,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":460,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":254,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":364,"org.easymock.tests2.UsageTest.resumeIfFailure":220,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":401,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":367,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":59,"org.easymock.tests2.StubTest.stubWithReturnValue":296,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":4,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":92,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":326,"org.easymock.tests2.SerializationTest.testAllMockedMethod":333,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":384,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":15,"org.easymock.samples.SupportTest.voteForRemovals":195,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":475,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":530,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":160,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":385,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":396,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":412,"org.easymock.tests.UsageExpectAndThrowTest.object":158,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":323,"org.easymock.tests2.DelegateToTest.testWrongClass":293,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":457,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":117,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":118,"org.easymock.tests.UsageStrictMockTest.range":173,"org.easymock.samples.ConstructorCalledMockTest.testTax":0,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":485,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":280,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":231,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":159,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":506,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":140,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":33,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":145,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":449,"org.easymock.tests2.CaptureTest.testCaptureNone":342,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":352,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":478,"org.easymock.tests.UsageUnorderedTest.message":116,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":353,"org.easymock.tests.UsageVerifyTest.twoReturns":115,"org.easymock.tests.UsageVarargTest.varargByteAccepted":44,"org.easymock.tests2.ThreadingTest.testThreadSafe":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":520,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":108,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":414,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":204,"org.easymock.tests2.CaptureTest.testCapture_2617107":336,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":409,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":434,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":50,"org.easymock.tests2.UsageConstraintsTest.any":314,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":137,"org.easymock.tests2.StubTest.stub":295,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":379,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":435,"org.easymock.tests.UsageExpectAndThrowTest.longType":151,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":58,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":472,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":136,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":300,"org.easymock.tests2.SerializationTest.testClass":12,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":255,"org.easymock.tests.LimitationsTest.mockNativeMethod":112,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":393,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":102,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":497,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":465,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":303,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":479,"org.easymock.tests2.NameTest.nameForMocksControl":290,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":499,"org.easymock.tests2.MockedExceptionTest.testMockedException":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":510,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":32,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":544,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":152,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":129,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":238,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":227,"org.easymock.tests.MockingTest.testNicePartialClassMocking":128,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":243,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":495,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":16,"org.easymock.tests2.CaptureTest.testCaptureLast":341,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":356,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":464,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":237,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":312,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":324,"org.easymock.tests.MockingTest.testTwoMocks":387,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":461,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":490,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":83,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":156,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":218,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":328,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":482,"org.easymock.samples.ExampleTest.removeNonExistingDocument":202,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":501,"org.easymock.tests.UsageStrictMockTest.differentMethods":174,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":134,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":529,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":481,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":470,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":266,"org.easymock.tests2.ConstraintsToStringTest.andToString":365,"org.easymock.tests2.MockBuilderTest.testCreateMockString":230,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":511,"org.easymock.tests.UsageExpectAndThrowTest.floatType":150,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":319,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":508,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":261,"org.easymock.tests.UsageVerifyTest.twoThrows":114,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":11,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":357,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":253,"org.easymock.samples.ExampleTest.voteAgainstRemoval":199,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":426,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":394,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":248,"org.easymock.tests.LimitationsTest.privateConstructor":438,"org.easymock.tests2.UsageConstraintsTest.testNotNull":327,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":185,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":269,"org.easymock.tests2.UsageTest.defaultResetToNice":217,"org.easymock.samples.ExampleTest.voteAgainstRemovals":196,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":427,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":98,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":496,"org.easymock.tests.UsageVarargTest.differentLength":41,"org.easymock.tests2.CallbackTest.callback":286,"org.easymock.tests2.UsageConstraintsTest.equals":541,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":8,"org.easymock.tests.UsageTest.openCallCountByLastCall":31,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":304,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":49,"org.easymock.tests.UsageCallCountTest.tooFewCalls":106,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":234,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":147,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":480,"org.easymock.tests.UsageThrowableTest.throwCheckedException":182,"org.easymock.tests.MockingTest.testStrictClassMocking":440,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":359,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":143,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":236,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":500,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":233,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":139,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":235,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":263,"org.easymock.tests.ObjectMethodsTest.testHashCode":81,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":21,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":463,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":268,"org.easymock.tests2.NameTest.nameForNiceMock":289,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":458,"org.easymock.tests2.DependencyTest.testInterfaceMocking":330,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":19,"org.easymock.samples.ExampleTest.addDocument":200,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":521,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":525,"org.easymock.tests2.DelegateToTest.testStubDelegate":292,"org.easymock.tests2.AnswerTest.stubAnswer":262,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":171,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":5,"org.easymock.tests.UsageVarargTest.varargLongAccepted":43,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":175,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":424,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":101,"org.easymock.tests.UsageExpectAndReturnTest.floatType":85,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":9,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":1,"org.easymock.tests2.ConstraintsToStringTest.orToString":361,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":535,"org.easymock.tests.UsageThrowableTest.noUpperLimit":179,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":321,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":358,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":305,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":483,"org.easymock.tests2.SerializationTest.test":332,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":339,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":469,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":84,"org.easymock.tests2.UsageConstraintsTest.testSame":310,"org.easymock.samples.SupportTest.addDocument":194,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":489,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":448,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":512,"org.easymock.tests.GenericTest.testPackageScope":191,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":391,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":419,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":534,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":443,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":446,"org.easymock.tests2.NameTest.nameForMock":287,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":95,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":7,"org.easymock.tests2.UsageStrictMockTest.differentMethods":302,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":492,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":87,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":162,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":413,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":55,"org.easymock.tests2.MockedExceptionTest.testRealException":272,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":408,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":486,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":429,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":360,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":14,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":428,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":299,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":141,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":48,"org.easymock.tests2.NameTest.nameForStrictMock":288,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":488,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":348,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":373,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":242,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":484,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":471,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":322,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":374,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":223,"org.easymock.tests2.UsageStrictMockTest.range":301,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":452,"org.easymock.tests2.UsageConstraintsTest.lessThan":329,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":531,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":423,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":20,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":516,"org.easymock.tests2.CaptureTest.testCaptureRightOne":344,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":477,"org.easymock.tests2.UsageConstraintsTest.testOr":311,"org.easymock.tests.UsageRangeTest.combination":52,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":239,"org.easymock.tests.UsageTest.wrongArguments":30,"org.easymock.tests2.MockBuilderTest.testWithConstructor":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":513,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":63,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":88,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":417,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":96,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":473,"org.easymock.tests.UsageVarargTest.varargShortAccepted":42,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":109,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":466,"org.easymock.tests2.UsageConstraintsTest.cmpTo":315,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":397,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":456,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":418,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":216,"org.easymock.tests2.CaptureTest.testCaptureFromStub":345,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":131,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":487,"org.easymock.tests.UsageTest.unexpectedCallWithArray":29,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":462,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":170,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":107,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":545,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":97,"org.easymock.tests2.CaptureTest.testCapture":376,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":172,"org.easymock.tests2.UsageConstraintsTest.constraints":306,"org.easymock.samples.ExampleTest.addAndChangeDocument":203,"org.easymock.tests2.ConstraintsToStringTest.notToString":363,"org.easymock.tests.UsageStrictMockTest.testVerify":176,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":207,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":169,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":76,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":340,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":188,"org.easymock.tests.LimitationsTest.abstractClass":437,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":89,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":189,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":73,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":37,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":279,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":375}}]
