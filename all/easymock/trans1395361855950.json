[{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[475,476,477,478,261,468],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value"}},{"transplant":{"position":"org.easymock.internal.Invocation:180","sourceCode":"try {\n    java.lang.Object.getClass().getDeclaredMethod(\"toString\", ((java.lang.Class[])(null))).getModifiers();\n    return true;\n} catch (final java.lang.SecurityException java.lang.SecurityException) {\n    return false;\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    return false;\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[150],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"o":"actual"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,9,12,13,14,15,16,20,21,27,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,60,61,62,63,64,65,66,67,68,69,70,73,74,75,76,77,78,79,82,86,87,88,96,103,115,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,138,140,141,142,144,145,146,147,148,150,151,153,154,156,157,158,159,160,161,165,166,167,168,169,172,174,176,179,181,182,185,191,192,194,195,196,199,200,201,203,207,210,220,226,238,239,240,241,242,243,244,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,288,298,301,302,303,305,306,308,309,314,315,317,322,327,344,346,347,349,353,354,356,361,366,371,374,381,382,389,390,391,392,393,394,395,397,398,399,401,402,403,404,405,406,407,408,409,410,419,420,422,434,462,469,472,473,474],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:295","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[479],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:127","sourceCode":"try {\n    java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n}","type":"CtTryImpl"},"failures":[480,481],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:59","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Byte.java.lang.Class<java.lang.Byte>, java.lang.Byte.java.lang.Byte)","type":"CtInvocationImpl"},"failures":[1,2,4,5,7,242],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[88],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,9,12,13,14,15,16,17,18,19,20,21,27,36,37,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,82,87,91,93,96,103,115,116,117,119,120,121,122,123,124,125,126,128,129,130,131,132,133,134,135,136,137,138,140,141,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,169,172,173,179,181,182,191,192,193,194,195,196,197,198,200,201,202,203,207,210,220,226,237,238,239,240,241,242,243,244,251,252,253,254,255,256,257,258,260,261,262,263,264,265,266,288,300,301,302,303,305,306,308,309,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,344,346,347,349,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,374,377,378,381,389,390,391,392,393,394,395,396,397,398,399,401,402,404,405,406,407,408,409,410,419,420,422,434,462,464,465,466,467,469,470,471,472,473,474],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[1,2,4,5,7,13,17,18,19,20,21,27,36,37,38,42,44,45,47,48,51,52,53,54,56,57,58,60,61,63,64,67,68,69,70,72,73,74,75,76,77,78,79,82,86,87,88,96,103,116,120,121,122,123,124,125,126,127,128,129,130,131,134,135,136,137,138,140,141,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,158,160,161,162,163,169,173,176,179,181,182,185,191,192,193,195,197,198,199,202,203,207,210,220,226,231,232,237,239,240,241,242,243,244,246,251,253,254,255,256,257,258,262,264,265,308,310,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,349,374,381,389,390,393,394,395,396,409,410,419,420,422,462,463,464,465,466,467,470,471,474],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"this.org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[10,11,42,71,134,135,136,140,141,142,143,149,151,152,154,155,161,162,163,229,240,241,242,243,244,262,332,381,389,390,393,409,410,411,412,413,414,415,438,442,443,452,457],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","answer":"value"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[138],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[150],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1249","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[10,11,83,482,483,484],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1249","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:318","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    final java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    final java.lang.reflect.TypeVariable<?>[] java.lang.reflect.TypeVariable<?>[] = ((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getTypeParameters();\n    for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n        final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int];\n        final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = java.lang.reflect.TypeVariable<?>[][int];\n        if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n            final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n            java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n            if (java.lang.reflect.Type == null) {\n                java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n            } \n            if (java.lang.reflect.Type != null) {\n                java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n            } \n        } \n    }\n} ","type":"CtIfImpl"},"failures":[307],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:104","sourceCode":"throw new java.lang.IllegalStateException(java.lang.String)","type":"CtThrowImpl"},"failures":[146],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"message"}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[78,153],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:305","failures":[1,2,3,4,5,7,13,17,18,19,20,21,27,36,37,38,42,44,45,47,48,50,51,52,53,54,56,57,58,60,61,62,63,64,67,68,69,70,72,73,74,75,76,77,78,79,82,86,87,88,96,103,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,134,135,136,137,138,140,141,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,169,173,174,176,179,181,182,185,191,192,193,195,197,198,199,202,203,207,210,220,226,237,238,239,240,241,242,243,244,248,249,251,253,254,255,256,257,258,262,264,265,288,308,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,344,346,347,349,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,374,381,382,389,390,393,394,395,396,409,410,419,420,422,454,462,463,464,465,466,467,470,471,474],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[10,10,11,11,13,14,15,38,47,49,51,52,53,54,57,58,485,486,74,75,77,78,79,80,82,85,86,87,88,96,175,487,176,177,179,180,181,182,184,185,488,186,207,210,220,226,290,295,308,309,310,374,418,419,420,422,427,434],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[13,20,38,51,52,53,54,56,57,58,74,76,77,79,116,176,179,181,182,185,207,210,220,226,241,374,419,420,422],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:906","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[157],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:206","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[40,44,45,50,55,85,121,125,126,129,185,195,259,264,265,417,419,420,421,424,425,462],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:159","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:130","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, java.lang.Object);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[12,16,22,23,24,27,30,33,98,99,100,103,106,109],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[47,48,49],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":138,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":466,"org.easymock.tests2.UsageTest.argumentsOrdered":201,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":130,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":104,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":448,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":196,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":12,"org.easymock.tests2.DelegateToTest.testReturnException":115,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":285,"org.easymock.tests.MockingTest.testPartialClassMocking":419,"org.easymock.tests.MockClassControlTest.testToString":428,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":164,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":246,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":457,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":214,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":210,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":351,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":37,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":145,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":389,"org.easymock.tests2.UsageTest.wrongArguments":194,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":33,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":235,"org.easymock.samples.ExampleTest.answerVsDelegate":3,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":295,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":424,"org.easymock.tests2.UsageConstraintsTest.testNull":141,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":77,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":433,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":129,"org.easymock.tests2.CaptureTest.testPrimitive":63,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":393,"org.easymock.tests.UsageTest.moreThanOneArgument":467,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":370,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":76,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":413,"org.easymock.tests.UsageTest.argumentsOrdered":473,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":376,"org.easymock.tests.UsageVarargTest.varargIntAccepted":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":453,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":240,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":175,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":108,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":180,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":440,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":244,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":27,"org.easymock.tests.ReplayStateInvalidUsageTest.times":340,"org.easymock.tests2.DependencyTest.testClassMocking":34,"org.easymock.tests2.AnswerTest.answer":169,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":146,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":455,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":113,"org.easymock.tests2.CaptureTest.testAnd":60,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":292,"org.easymock.tests2.UsageTest.strictResetToDefault":192,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":85,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":412,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":464,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":124,"org.easymock.tests2.DelegateToTest.testDelegate":119,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":380,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":366,"org.easymock.tests.LimitationsTest.mockFinalMethod":375,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":288,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":388,"org.easymock.tests2.DependencyTest.testClassMockingSupport":35,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":248,"org.easymock.tests2.CaptureTest.testCapture1_2446744":64,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":81,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":364,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":111,"org.easymock.tests.UsageThrowableTest.throwError":251,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":334,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":294,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":109,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":415,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":228,"org.easymock.samples.PartialClassMockTest.testGetArea":13,"org.easymock.tests.MockingTest.testInterfaceMocking":421,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":335,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":241,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":231,"org.easymock.tests2.UsageTest.niceToStrict":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":215,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":283,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":352,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":438,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":179,"org.easymock.tests2.MockBuilderTest.testCreateMock":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":223,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":30,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":475,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":360,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":125,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":291,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":437,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":298,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":233,"org.easymock.tests.UsageOverloadedMethodTest.overloading":395,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":225,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":151,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":347,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":394,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":323,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":150,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":69,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":400,"org.easymock.tests.MockClassControlTest.testEquals":432,"org.easymock.tests2.EasyMockSupportClassTest.testAll":207,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":309,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":368,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":485,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":386,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":112,"org.easymock.tests2.CaptureTest.testCaptureAll":61,"org.easymock.tests.MockNameTest.defaultName":383,"org.easymock.tests2.UsageConstraintsTest.testMatches":152,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":414,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":332,"org.easymock.samples.ExampleTest.voteForRemovals":7,"org.easymock.tests.UsageVarargTest.allKinds":408,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":237,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":387,"org.easymock.samples.BasicClassMockTest.testPrintContent":15,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":257,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":40,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":118,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":105,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":289,"org.easymock.tests2.UsageConstraintsTest.greaterThan":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":208,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":463,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":88,"org.easymock.samples.ExampleTest.voteForRemoval":4,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":277,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":18,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":89,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":296,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":80,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":434,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":191,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":183,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":445,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":122,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":205,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":284,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":114,"org.easymock.tests2.CaptureTest.testCaptureFirst":73,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":444,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":123,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":203,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":350,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":319,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":20,"org.easymock.tests2.CaptureTest.testCapture2_2446744":72,"org.easymock.tests2.UsageTest.moreThanOneArgument":193,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":456,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":185,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":407,"org.easymock.tests.GenericTest.testBridgedEquals":311,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":305,"org.easymock.tests.UsageExpectAndReturnTest.longType":315,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":384,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":120,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":488,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":369,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":159,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":229,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":367,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":411,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":269,"org.easymock.tests.UsageCallCountTest.tooManyCalls":306,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":224,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":320,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":32,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":356,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":256,"org.easymock.tests.MockingTest.testNiceClassMocking":425,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":52,"org.easymock.tests.MockingTest.testClassMocking":417,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":487,"org.easymock.tests2.UsageConstraintsTest.testContains":149,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":299,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":96,"org.easymock.tests2.UsageConstraintsTest.testFind":140,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":396,"org.easymock.tests.MockTypeTest.fromEasyMockClass":293,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":93,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":259,"org.easymock.tests.UsageExpectAndReturnTest.object":322,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":82,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":31,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":128,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":402,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":281,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":479,"org.easymock.tests.UsageTest.exactCallCountByLastCall":474,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":381,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":443,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":245,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":377,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":39,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":397,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":328,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":346,"org.easymock.tests.MockClassControlTest.testHashCode":431,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":99,"org.easymock.tests2.EasyMockSupportTest.testVerify":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":217,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":378,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":436,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":344,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":110,"org.easymock.tests.UsageVarargTest.varargCharAccepted":401,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":41,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":461,"org.easymock.tests2.UsageTest.openCallCountByLastCall":197,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":131,"org.easymock.tests.DefaultClassInstantiatorTest.object":271,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":435,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":218,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":358,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":254,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":25,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":98,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":430,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":86,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":357,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":329,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":268,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":429,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":226,"org.easymock.tests2.UsageTest.resumeIfFailure":202,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":290,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":287,"org.easymock.tests2.StubTest.stubWithReturnValue":134,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":160,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":321,"org.easymock.tests2.SerializationTest.testAllMockedMethod":49,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":454,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":476,"org.easymock.samples.SupportTest.voteForRemovals":1,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":307,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":101,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":363,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":460,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":170,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":247,"org.easymock.tests.UsageExpectAndThrowTest.object":361,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":157,"org.easymock.tests2.DelegateToTest.testWrongClass":117,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":409,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":410,"org.easymock.samples.ConstructorCalledMockTest.testTax":10,"org.easymock.tests.UsageStrictMockTest.range":264,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":189,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":127,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":51,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":362,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":181,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":472,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":204,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":342,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":234,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":477,"org.easymock.tests2.CaptureTest.testCaptureNone":68,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":232,"org.easymock.tests.UsageUnorderedTest.message":371,"org.easymock.tests.UsageVerifyTest.twoReturns":239,"org.easymock.tests.UsageVarargTest.varargByteAccepted":406,"org.easymock.tests2.ThreadingTest.testThreadSafe":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":221,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":303,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":14,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":282,"org.easymock.tests2.CaptureTest.testCapture_2617107":62,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":250,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":458,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":392,"org.easymock.tests2.UsageConstraintsTest.any":147,"org.easymock.tests2.StubTest.stub":133,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":339,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":270,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":459,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":286,"org.easymock.tests.UsageExpectAndThrowTest.longType":354,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":275,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":338,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":43,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":103,"org.easymock.tests2.SerializationTest.testClass":47,"org.easymock.tests.LimitationsTest.mockNativeMethod":374,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":310,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":331,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":24,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":46,"org.easymock.tests2.NameTest.nameForMocksControl":168,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":26,"org.easymock.tests2.MockedExceptionTest.testMockedException":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":209,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":471,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":422,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":92,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":355,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":74,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":182,"org.easymock.tests.MockingTest.testNicePartialClassMocking":420,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":79,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":22,"org.easymock.tests2.CaptureTest.testCaptureLast":67,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":249,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":144,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":58,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":158,"org.easymock.tests.MockingTest.testTwoMocks":418,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":59,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":312,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":359,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":200,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":162,"org.easymock.samples.ExampleTest.removeNonExistingDocument":8,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":29,"org.easymock.tests.UsageStrictMockTest.differentMethods":265,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":336,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":100,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":481,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":273,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":19,"org.easymock.tests2.MockBuilderTest.testCreateMockString":186,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":426,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":211,"org.easymock.tests.UsageExpectAndThrowTest.floatType":353,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":206,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":172,"org.easymock.tests.UsageVerifyTest.twoThrows":238,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":220,"org.easymock.samples.ExampleTest.voteAgainstRemoval":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":449,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":230,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":87,"org.easymock.tests.LimitationsTest.privateConstructor":373,"org.easymock.tests2.UsageConstraintsTest.testNotNull":161,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":94,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":258,"org.easymock.tests2.UsageTest.defaultResetToNice":199,"org.easymock.samples.ExampleTest.voteAgainstRemovals":2,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":450,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":327,"org.easymock.tests.UsageVarargTest.differentLength":403,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":23,"org.easymock.tests2.CallbackTest.callback":50,"org.easymock.tests2.UsageConstraintsTest.equals":139,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":83,"org.easymock.tests.UsageTest.openCallCountByLastCall":470,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":135,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":391,"org.easymock.tests.UsageCallCountTest.tooFewCalls":301,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":54,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":236,"org.easymock.tests.UsageThrowableTest.throwCheckedException":255,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":478,"org.easymock.tests.MockingTest.testStrictClassMocking":416,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":57,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":382,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":28,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":53,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":341,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":56,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":174,"org.easymock.tests.ObjectMethodsTest.testHashCode":280,"org.easymock.tests2.NameTest.nameForNiceMock":167,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":21,"org.easymock.tests2.DependencyTest.testInterfaceMocking":36,"org.easymock.samples.ExampleTest.addDocument":6,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":222,"org.easymock.tests2.DelegateToTest.testStubDelegate":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":227,"org.easymock.tests2.AnswerTest.stubAnswer":173,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":262,"org.easymock.tests.UsageVarargTest.varargLongAccepted":405,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":266,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":447,"org.easymock.tests.UsageExpectAndReturnTest.floatType":314,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":330,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":38,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":11,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":155,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":107,"org.easymock.tests.UsageThrowableTest.noUpperLimit":252,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":348,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":136,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":187,"org.easymock.tests2.SerializationTest.test":48,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":65,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":272,"org.easymock.tests2.UsageConstraintsTest.testSame":142,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":313,"org.easymock.samples.SupportTest.addDocument":0,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":55,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":212,"org.easymock.tests.GenericTest.testPackageScope":308,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":379,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":442,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":106,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":423,"org.easymock.tests2.NameTest.nameForMock":165,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":324,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":484,"org.easymock.tests2.UsageStrictMockTest.differentMethods":45,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":84,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":316,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":365,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":278,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":465,"org.easymock.tests2.MockedExceptionTest.testRealException":97,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":297,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":452,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":190,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":451,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":42,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":390,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":343,"org.easymock.tests2.NameTest.nameForStrictMock":166,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":178,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":91,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":78,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":188,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":156,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":274,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":176,"org.easymock.tests2.UsageStrictMockTest.range":44,"org.easymock.tests2.UsageConstraintsTest.lessThan":163,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":102,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":446,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":121,"org.easymock.tests2.CaptureTest.testCaptureRightOne":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":216,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":480,"org.easymock.tests2.UsageConstraintsTest.testOr":143,"org.easymock.tests.UsageRangeTest.combination":462,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":75,"org.easymock.tests.UsageTest.wrongArguments":469,"org.easymock.tests2.MockBuilderTest.testWithConstructor":482,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":213,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":427,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":317,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":439,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":325,"org.easymock.tests.UsageVarargTest.varargShortAccepted":404,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":276,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":304,"org.easymock.tests2.UsageConstraintsTest.cmpTo":148,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":171,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":441,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":198,"org.easymock.tests2.CaptureTest.testCaptureFromStub":71,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":333,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":177,"org.easymock.tests.UsageTest.unexpectedCallWithArray":468,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":261,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":302,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":483,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":326,"org.easymock.tests2.UsageConstraintsTest.constraints":137,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":263,"org.easymock.samples.ExampleTest.addAndChangeDocument":9,"org.easymock.tests.UsageStrictMockTest.testVerify":267,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":16,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":260,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":385,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":66,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":486,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":242,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":318,"org.easymock.tests.LimitationsTest.abstractClass":372,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":243,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":349,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":398,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":126}}]
