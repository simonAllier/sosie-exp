[{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[0,1,2,3],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,1,307,308,309,310,311,2,312,313,314,315,316,317,318,319,320,321,322,3,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[5,6,69,489,95,98,155,156,159,160,232,291,377,383,384],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:52","failures":[313],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (this.org.easymock.Capture<T>.hasCaptured()) {\n    this.org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[490,398,399,400,401,402,403,404,405,407,408,409,410,411],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"capture"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:582","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[64,308],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:274","failures":[226,274,371,373,387,388,389,390,391,392,481],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:355","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[19,49],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:138","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[60,491,492],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:310","sourceCode":"return java.lang.Class<?>.equals(java.lang.Void.java.lang.Class<java.lang.Void>)","type":"CtReturnImpl"},"failures":[4,6,10,11,13,22,23,24,25,47,53,64,67,68,83,84,85,86,96,98,99,102,103,104,105,106,107,108,109,110,111,113,115,116,117,118,119,120,121,122,125,130,131,153,154,157,158,161,172,174,200,201,204,224,231,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,258,267,271,280,289,291,292,294,295,297,298,299,300,302,303,304,305,306,1,308,309,310,311,2,312,313,314,315,316,317,318,320,321,322,3,323,324,325,326,327,328,329,330,331,332,333,334,336,337,338,339,341,342,343,351,355,357,359,363,368,374,375,376,378,380,381,382,385,386,387,391,398,399,401,402,405,406,407,408,409,410,411,413,414,415,416,417,418,422,425,435,441,444,445,446,447,448,449,452,456,457,458,463,464,473,477,477,478,478,479,480,482,483,485],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.UnorderedBehavior:44","sourceCode":"final org.easymock.internal.Results org.easymock.internal.Results = new org.easymock.internal.Results()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1482","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(byte))","type":"CtInvocationImpl"},"failures":[300,306,316],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:213","sourceCode":"return org.easymock.internal.RecordState.createNumberObject(java.lang.Object, java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"expected":"o"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ClassProxyFactory:157","failures":[],"status":0,"binaryOperator":"(((java.lang.StackTraceElement[].int) > 2) && (java.lang.StackTraceElement[][2].getClassName().equals(org.easymock.internal.MockInvocationHandler.org.easymock.internal.MockInvocationHandler.getName())))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[4,5,6,10,11,13,22,23,24,25,26,27,28,29,30,64,70,71,72,74,75,77,78,79,80,81,84,85,94,96,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,121,122,125,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,154,162,163,164,165,166,167,172,173,184,185,186,187,200,201,204,206,207,208,209,210,211,216,231,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,266,267,270,271,274,288,289,292,293,294,295,296,297,298,299,300,302,303,304,305,306,1,308,309,310,311,2,312,313,314,315,316,317,318,320,321,322,3,337,338,342,343,345,346,347,348,349,355,356,366,367,368,369,371,373,375,376,378,379,382,385,387,390,391,392,394,395,396,397,398,399,400,401,403,404,405,406,407,408,411,412,413,414,415,418,444,446,447,448,449,452,455,457,463,480,481,482,483,484,485,487],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[493,294,295,296],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[494,495,95,155,496,497],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[4,5,6,95,96,98,99,154,156,159,160,498,289,291,292,376,377,383,384,394,395,396,397],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:50","failures":[271,272,294,338,343,344,350,353,358,361,499,364,500,501,502,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,477,478],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[226,274,371,373,387,389,390,392,481],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:126","sourceCode":"java.lang.ClassLoader java.lang.ClassLoader = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:320","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[41,265],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:163","failures":[391,392],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:612","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[64,308],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:38","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[311],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:257","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andReturn(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[33,228,266,268,269,270,481],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"answer"}},{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[10,11,13,103,204,267,271,336,337,338,339,341,342,343,351,355,357,359,363,417,422,425,435,441,444,446,447,449,479],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:36","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"this.org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[416],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","threadSafe":"shouldBeUsedInOneThread"}},{"transplant":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[104,473,480,482,483,485],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:71","failures":[174,176,181,294,349,351,352,355,356,357,359,362,363,365,425,435,441,450,456,457,460,479],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[313,379,448],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"name","method":"method","paramTypes":"paramTypes","this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:131","failures":[],"status":0,"binaryOperator":"((java.lang.reflect.Method.getParameterTypes().int) == (java.lang.reflect.Method.getParameterTypes().int))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.StartsWith:40","failures":[503],"status":-1,"binaryOperator":"(\"startsWith(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:48","failures":[],"status":0,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[4,5,6,10,11,13,22,23,24,25,26,27,28,29,30,64,65,69,70,71,72,74,75,77,78,79,80,81,84,85,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,172,173,184,185,186,187,189,191,192,194,197,199,200,201,204,206,207,208,209,210,211,216,231,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,258,266,267,268,270,271,274,280,287,288,289,290,291,292,293,294,295,296,297,298,299,300,302,303,304,305,306,1,308,309,310,311,2,312,313,314,315,316,317,318,320,321,322,3,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,341,342,343,345,346,347,348,349,355,356,357,359,363,365,366,367,368,369,370,371,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,390,391,392,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,422,425,435,441,444,445,446,447,448,449,452,455,457,463,464,472,473,474,475,476,477,477,478,478,479,480,481,482,483,484,485,487,488],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[493,294,295,296],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[81,95,311],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[504],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[226,274,371,373,387,389,390,392,481],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[493,294,295,296],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":300,"org.easymock.tests2.UsageTest.argumentsOrdered":384,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":153,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":333,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":259,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":41,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":379,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":476,"org.easymock.tests2.DelegateToTest.testReturnException":266,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":207,"org.easymock.tests.MockingTest.testPartialClassMocking":10,"org.easymock.tests.MockClassControlTest.testToString":217,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":393,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":224,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":460,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":429,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":425,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":133,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":498,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":464,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":1,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":121,"org.easymock.tests2.UsageTest.wrongArguments":377,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":286,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":186,"org.easymock.samples.ExampleTest.answerVsDelegate":481,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":181,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":15,"org.easymock.tests2.UsageConstraintsTest.testNull":303,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":447,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":222,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":332,"org.easymock.tests2.CaptureTest.testPrimitive":401,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":125,"org.easymock.tests.UsageTest.moreThanOneArgument":154,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":152,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":446,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":109,"org.easymock.tests.UsageTest.argumentsOrdered":160,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":17,"org.easymock.tests.UsageVarargTest.varargIntAccepted":72,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":46,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":102,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":349,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":467,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":263,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":356,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":33,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":106,"org.easymock.tests.ReplayStateInvalidUsageTest.times":196,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":280,"org.easymock.tests2.DependencyTest.testClassMocking":461,"org.easymock.tests2.AnswerTest.answer":387,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":307,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":48,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":348,"org.easymock.tests2.CaptureTest.testAnd":398,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":178,"org.easymock.tests2.UsageTest.strictResetToDefault":375,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":455,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":353,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":108,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":24,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":327,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":21,"org.easymock.tests2.DelegateToTest.testDelegate":270,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":148,"org.easymock.tests.LimitationsTest.mockFinalMethod":205,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":210,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":30,"org.easymock.tests2.DependencyTest.testClassMockingSupport":462,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":130,"org.easymock.tests2.CaptureTest.testCapture1_2446744":402,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":451,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":146,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":346,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":190,"org.easymock.tests.UsageThrowableTest.throwError":113,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":180,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":82,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":264,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":111,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":500,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":443,"org.easymock.samples.PartialClassMockTest.testGetArea":479,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":191,"org.easymock.tests.MockingTest.testInterfaceMocking":12,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":103,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":67,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":430,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":134,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":92,"org.easymock.tests2.UsageTest.niceToStrict":378,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":31,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":355,"org.easymock.tests2.MockBuilderTest.testCreateMock":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":438,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":283,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":496,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":142,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":328,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":177,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":214,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":162,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":184,"org.easymock.tests.UsageOverloadedMethodTest.overloading":84,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":440,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":434,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":2,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":229,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":83,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":244,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":491,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":311,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":407,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":73,"org.easymock.tests2.EasyMockSupportClassTest.testAll":422,"org.easymock.tests.MockClassControlTest.testEquals":221,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":173,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":150,"org.easymock.tests2.CaptureTest.testCaptureAll":399,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":28,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":347,"org.easymock.tests.MockNameTest.defaultName":126,"org.easymock.tests2.UsageConstraintsTest.testMatches":312,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":188,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":110,"org.easymock.samples.ExampleTest.voteForRemovals":485,"org.easymock.tests.UsageVarargTest.allKinds":81,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":4,"org.easymock.samples.BasicClassMockTest.testPrintContent":475,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":29,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":119,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":287,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":211,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":260,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":269,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":62,"org.easymock.tests2.UsageConstraintsTest.greaterThan":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":423,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":23,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":458,"org.easymock.samples.ExampleTest.voteForRemoval":482,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":63,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":459,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":415,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":182,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":468,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":450,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":112,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":374,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":38,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":325,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":420,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":206,"org.easymock.tests2.CaptureTest.testCaptureFirst":411,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":265,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":37,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":326,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":386,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":232,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":240,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":417,"org.easymock.tests2.CaptureTest.testCapture2_2446744":410,"org.easymock.tests2.UsageTest.moreThanOneArgument":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":49,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":363,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":80,"org.easymock.tests.GenericTest.testBridgedEquals":175,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":169,"org.easymock.tests.UsageExpectAndReturnTest.longType":236,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":26,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":323,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":151,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":86,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":319,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":149,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":128,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":107,"org.easymock.tests.UsageCallCountTest.tooManyCalls":170,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":439,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":241,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":285,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":138,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":118,"org.easymock.tests.MockingTest.testNiceClassMocking":16,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":337,"org.easymock.tests.MockingTest.testClassMocking":8,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":163,"org.easymock.tests2.UsageConstraintsTest.testContains":310,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":368,"org.easymock.tests2.UsageConstraintsTest.testFind":302,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":85,"org.easymock.tests.MockTypeTest.fromEasyMockClass":179,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":93,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":373,"org.easymock.tests.UsageExpectAndReturnTest.object":243,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":452,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":284,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":331,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":75,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":90,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":502,"org.easymock.tests.UsageTest.exactCallCountByLastCall":161,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":64,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":36,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":18,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":223,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":272,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":70,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":249,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":228,"org.easymock.tests.MockClassControlTest.testHashCode":220,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":254,"org.easymock.tests2.EasyMockSupportTest.testVerify":335,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":432,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":19,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":213,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":226,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":345,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":370,"org.easymock.tests.UsageVarargTest.varargCharAccepted":74,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":55,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":288,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":54,"org.easymock.tests2.UsageTest.openCallCountByLastCall":380,"org.easymock.tests.DefaultClassInstantiatorTest.object":56,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":334,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":212,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":88,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":489,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":433,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":140,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":116,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":278,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":253,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":456,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":219,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":139,"org.easymock.tests.CapturesMatcherTest.test":490,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":250,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":441,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":218,"org.easymock.tests2.UsageTest.resumeIfFailure":385,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":176,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":466,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":209,"org.easymock.tests2.StubTest.stubWithReturnValue":413,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":358,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":242,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":320,"org.easymock.tests2.SerializationTest.testAllMockedMethod":296,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":47,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":497,"org.easymock.samples.SupportTest.voteForRemovals":473,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":171,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":256,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":145,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":493,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":53,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":388,"org.easymock.tests.UsageExpectAndThrowTest.object":143,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":225,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":317,"org.easymock.tests2.DelegateToTest.testWrongClass":268,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":200,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":201,"org.easymock.samples.ConstructorCalledMockTest.testTax":477,"org.easymock.tests.UsageStrictMockTest.range":98,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":470,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":330,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":336,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":144,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":357,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":419,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":159,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":198,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":185,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":494,"org.easymock.tests2.CaptureTest.testCaptureNone":406,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":68,"org.easymock.tests.UsageUnorderedTest.message":69,"org.easymock.tests.UsageVerifyTest.twoReturns":6,"org.easymock.tests.UsageVarargTest.varargByteAccepted":79,"org.easymock.tests2.ThreadingTest.testThreadSafe":414,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":436,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":167,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":474,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":91,"org.easymock.tests2.CaptureTest.testCapture_2617107":400,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":132,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":124,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":51,"org.easymock.tests2.UsageConstraintsTest.any":308,"org.easymock.tests2.StubTest.stub":412,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":195,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":129,"org.easymock.tests.UsageExpectAndThrowTest.longType":136,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":52,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":208,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":60,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":194,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":290,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":258,"org.easymock.tests2.SerializationTest.testClass":294,"org.easymock.tests.LimitationsTest.mockNativeMethod":204,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":174,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":252,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":277,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":293,"org.easymock.tests2.NameTest.nameForMocksControl":397,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":279,"org.easymock.tests2.MockedExceptionTest.testMockedException":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":424,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":158,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":137,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":13,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":372,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":444,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":359,"org.easymock.tests.MockingTest.testNicePartialClassMocking":11,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":449,"org.easymock.tests2.CaptureTest.testCaptureLast":405,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":275,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":131,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":306,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":343,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":318,"org.easymock.tests.MockingTest.testTwoMocks":9,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":344,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":233,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":141,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":383,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":322,"org.easymock.samples.ExampleTest.removeNonExistingDocument":486,"org.easymock.tests.UsageStrictMockTest.differentMethods":99,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":192,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":282,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":255,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":58,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":416,"org.easymock.tests2.MockBuilderTest.testCreateMockString":365,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":426,"org.easymock.tests.UsageExpectAndThrowTest.floatType":135,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":421,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":390,"org.easymock.tests.UsageVerifyTest.twoThrows":5,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":273,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":435,"org.easymock.samples.ExampleTest.voteAgainstRemoval":483,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":42,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":66,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":457,"org.easymock.tests.LimitationsTest.privateConstructor":203,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":501,"org.easymock.tests2.UsageConstraintsTest.testNotNull":321,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":120,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":366,"org.easymock.tests2.UsageTest.defaultResetToNice":382,"org.easymock.samples.ExampleTest.voteAgainstRemovals":480,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":43,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":248,"org.easymock.tests.UsageVarargTest.differentLength":76,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":276,"org.easymock.tests2.CallbackTest.callback":274,"org.easymock.tests2.UsageConstraintsTest.equals":301,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":453,"org.easymock.tests.UsageTest.openCallCountByLastCall":157,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":503,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":297,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":123,"org.easymock.tests.UsageCallCountTest.tooFewCalls":165,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":339,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":187,"org.easymock.tests.UsageThrowableTest.throwCheckedException":117,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":495,"org.easymock.tests.MockingTest.testStrictClassMocking":7,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":65,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":342,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":281,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":338,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":197,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":341,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":392,"org.easymock.tests2.CompareToTest.testGreateOrEqual":0,"org.easymock.tests.ObjectMethodsTest.testHashCode":89,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":418,"org.easymock.tests2.NameTest.nameForNiceMock":396,"org.easymock.tests2.DependencyTest.testInterfaceMocking":463,"org.easymock.samples.ExampleTest.addDocument":484,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":437,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":442,"org.easymock.tests2.DelegateToTest.testStubDelegate":267,"org.easymock.tests2.AnswerTest.stubAnswer":391,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":96,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":360,"org.easymock.tests.UsageVarargTest.varargLongAccepted":78,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":100,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":40,"org.easymock.tests.UsageExpectAndReturnTest.floatType":235,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":251,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":271,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":478,"org.easymock.tests.UsageThrowableTest.noUpperLimit":114,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":230,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":262,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":315,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":298,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":465,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":403,"org.easymock.tests2.SerializationTest.test":295,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":492,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":57,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":234,"org.easymock.tests2.UsageConstraintsTest.testSame":304,"org.easymock.samples.SupportTest.addDocument":472,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":340,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":193,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":427,"org.easymock.tests.GenericTest.testPackageScope":172,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":20,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":35,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":261,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":14,"org.easymock.tests2.NameTest.nameForMock":394,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":245,"org.easymock.tests2.UsageStrictMockTest.differentMethods":292,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":364,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":454,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":237,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":147,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":87,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":25,"org.easymock.tests2.MockedExceptionTest.testRealException":369,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":183,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":471,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":45,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":44,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":289,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":122,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":199,"org.easymock.tests2.NameTest.nameForStrictMock":395,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":354,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":371,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":448,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":469,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":59,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":316,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":351,"org.easymock.tests2.UsageStrictMockTest.range":291,"org.easymock.tests2.UsageConstraintsTest.lessThan":3,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":257,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":39,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":431,"org.easymock.tests2.CaptureTest.testCaptureRightOne":408,"org.easymock.tests2.UsageConstraintsTest.testOr":305,"org.easymock.tests.UsageRangeTest.combination":22,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":445,"org.easymock.tests.UsageTest.wrongArguments":156,"org.easymock.tests2.MockBuilderTest.testWithConstructor":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":428,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":216,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":238,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":32,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":246,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":61,"org.easymock.tests.UsageVarargTest.varargShortAccepted":77,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":168,"org.easymock.tests2.UsageConstraintsTest.cmpTo":309,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":389,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":34,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":381,"org.easymock.tests2.CaptureTest.testCaptureFromStub":409,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":189,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":352,"org.easymock.tests.UsageTest.unexpectedCallWithArray":155,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":95,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":166,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":499,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":247,"org.easymock.tests2.CaptureTest.testCapture":504,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":97,"org.easymock.tests2.UsageConstraintsTest.constraints":299,"org.easymock.samples.ExampleTest.addAndChangeDocument":487,"org.easymock.tests.UsageStrictMockTest.testVerify":101,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":488,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":94,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":27,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":404,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":104,"org.easymock.tests.LimitationsTest.abstractClass":202,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":239,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":105,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":231,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":71,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":329}}]
