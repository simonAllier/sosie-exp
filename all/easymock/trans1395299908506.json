[{"position":"org.easymock.EasyMock:1543","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:48","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"toString\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:81","sourceCode":"while (java.lang.Class<?> != (java.lang.Object.java.lang.Object)) {\n    org.easymock.internal.Injector.org.easymock.internal.Injector.injectMocksOnClass(java.lang.Class<?>, java.lang.Object, org.easymock.internal.InjectionPlan);\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:213","failures":[18,19],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[20],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[18,21,22,23,19,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,54,55,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"method":"result"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[130,131,132,133],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[134,135,136,137,138,139],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:99","failures":[140,21,23,141,142,143,26,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,33,34,35,185,186,187,188,189,190,135,136,137,191,192,193,194,195,196,56,197,198,199,200,201,202,203,204,63,64,65,66,205,67,68,206,20,207,208,209,210,211,139,212,71,213,214,215,216,217,72,76,79,81,82,85,91,94,104,110,113,114,218,115,116,117,119,123,124,125,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,130,131,247,248,249,250,132,133,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,128,267],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:288","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","sourceCode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:138","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[72,73,268,269],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[140,270,271,272,273,274,275,276,277,278,279,280,281,282,18,21,22,23,19,141,142,283,284,143,285,286,287,288,289,290,291,292,293,294,295,296,297,24,25,26,27,298,299,300,144,301,145,146,302,303,147,304,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,305,306,307,308,309,310,174,175,311,312,176,177,313,314,178,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,134,332,333,334,335,336,337,338,339,340,28,179,180,181,182,183,341,342,343,344,345,346,347,348,349,350,184,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,29,372,30,31,32,33,34,373,35,374,375,36,376,377,378,379,380,381,382,383,384,385,386,37,387,388,38,389,390,185,186,391,39,40,41,42,43,44,45,46,187,188,189,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,190,135,136,137,191,412,192,413,414,415,416,417,47,48,49,50,51,52,418,53,419,420,421,422,423,193,424,194,195,425,196,426,427,54,54,55,55,56,0,1,57,58,428,197,2,3,4,429,5,198,6,7,8,430,431,9,432,433,199,200,434,435,201,436,202,203,437,138,204,61,62,438,439,63,64,65,66,205,67,68,206,20,207,440,208,441,209,210,211,442,443,139,212,69,70,71,444,213,214,215,216,217,72,73,445,446,447,448,449,450,74,451,76,77,452,78,79,80,81,268,82,83,84,85,453,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,218,115,116,117,118,454,119,120,121,122,123,124,125,126,127,219,455,456,457,220,458,459,460,461,462,463,221,464,465,466,222,223,467,224,225,468,469,226,227,228,229,470,230,231,232,233,234,235,236,237,238,239,240,241,242,243,471,472,10,11,12,473,13,244,14,15,16,474,475,17,476,477,478,479,245,246,130,131,480,247,248,249,250,132,133,481,251,252,253,254,255,256,257,258,259,260,261,262,482,263,264,265,266,128,267,129,483],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","constructorArgs":"constructorArgs","this":"this"}},{"position":"org.easymock.EasyMock:1445","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:613","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[140,21,23,141,142,143,26,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,309,174,175,176,177,178,179,180,181,182,183,184,365,366,33,34,35,185,186,187,188,189,190,135,136,137,191,192,193,194,195,196,56,197,198,199,200,201,202,203,204,63,64,65,66,205,67,68,206,20,207,208,209,210,211,139,212,71,213,214,215,216,217,72,76,79,81,82,85,91,94,104,110,113,114,218,115,116,117,119,123,124,125,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,130,131,247,248,249,250,132,133,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,128,267],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.EasyMock:972","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[140,270,271,272,273,274,275,276,277,278,279,280,281,282,18,21,22,23,19,484,141,142,283,284,143,285,286,287,288,289,290,291,292,293,294,295,296,297,24,25,26,27,298,299,300,144,301,145,146,302,303,147,304,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,305,306,307,308,309,310,174,175,311,312,176,177,313,314,178,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,134,332,333,334,335,336,337,338,339,340,28,179,180,181,182,183,341,342,343,344,345,346,347,348,349,350,184,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,29,372,30,31,32,33,34,373,35,374,375,36,376,377,378,379,380,381,382,383,384,385,386,37,485,486,387,388,38,389,390,185,186,391,39,40,41,42,43,44,45,46,187,188,189,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,190,135,136,137,191,412,192,413,414,415,416,417,47,48,49,50,51,52,418,53,419,420,421,422,423,193,424,194,195,425,196,426,427,54,55,56,0,1,57,58,428,197,2,3,4,429,5,198,6,7,8,430,431,9,432,433,199,200,434,435,201,436,202,203,437,138,204,61,487,488,489,62,438,439,63,64,65,66,490,205,67,68,491,206,20,207,440,208,441,209,210,211,442,443,139,212,69,70,71,444,213,214,215,216,217,72,73,445,446,447,448,449,450,74,451,76,77,452,78,79,80,81,268,82,492,83,84,85,453,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,218,115,116,117,118,454,119,120,121,122,123,124,125,126,127,219,455,456,457,220,458,459,460,461,462,463,221,464,465,466,222,223,467,224,225,468,469,226,227,228,229,470,230,231,232,233,234,235,236,237,238,239,240,241,242,243,471,472,10,11,12,473,13,244,14,15,16,474,475,17,476,477,478,479,245,246,130,131,480,247,248,249,250,132,133,481,251,252,253,254,255,256,257,258,259,260,261,262,482,263,264,265,266,128,267,129,483],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[128,267,129],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[140,270,271,272,273,274,275,276,277,278,279,280,281,282,18,21,22,23,19,141,142,283,284,143,285,286,287,288,289,290,291,292,293,294,295,296,297,24,25,26,27,298,299,300,144,301,145,146,302,303,147,304,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,305,306,307,308,309,310,174,175,311,312,176,177,313,314,178,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,134,332,333,334,335,336,337,338,339,340,28,179,180,181,182,183,341,342,343,344,345,346,347,348,349,350,184,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,29,372,30,31,32,33,34,373,35,374,375,36,376,377,378,379,380,381,382,383,384,385,386,387,38,390,185,186,391,39,40,41,42,43,44,45,46,187,188,189,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,190,135,136,137,191,412,192,413,414,415,416,47,48,49,50,51,52,53,419,420,421,422,423,193,424,194,195,425,196,426,427,54,54,55,55,56,0,1,57,58,428,197,2,3,4,429,5,198,6,7,8,430,431,9,199,200,434,435,201,436,202,203,437,138,204,61,62,438,439,65,66,205,67,206,20,207,440,208,441,209,210,211,442,443,139,212,69,70,71,444,213,214,215,216,217,72,73,446,76,78,79,80,81,83,84,88,91,93,94,96,97,100,101,102,103,104,106,109,110,111,112,113,114,218,115,116,117,118,119,120,121,122,123,124,125,126,219,455,456,457,220,458,459,460,461,462,463,221,464,465,466,222,223,467,224,225,468,469,226,227,228,229,470,230,231,232,233,234,236,237,239,241,242,243,471,472,10,11,12,473,13,244,14,15,16,474,475,17,476,477,478,479,245,246,130,131,480,247,248,249,250,132,133,481,251,252,253,254,255,256,257,258,259,260,261,262,482,263,264,265,266,128,267,129,483],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:126","sourceCode":"if (java.lang.Object != java.lang.Object) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[493],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"otherArgument":"actual","myArgument":"actual"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[328,346,424,219,456,458,483],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:34","failures":[285,300,144,145,146,305,306,494,495,496,497,498,499,175,311,312,313,314,347,350,184,351,191,412,192,201,202,203,207,440,442,443,500,501,502,503,504,505,506,507,508,509,510],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"clazz"}},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[511,454,512],"status":-1,"binaryOperator":"java.lang.String == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:43","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[300,501],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[140,270,271,272,273,274,275,276,277,278,279,280,281,282,18,21,22,23,19,141,142,283,284,143,285,286,287,288,289,290,291,292,293,294,295,296,297,24,25,26,27,298,299,300,144,301,145,146,302,303,147,304,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,305,306,307,308,309,310,174,175,311,312,176,177,313,314,178,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,134,332,333,334,335,336,337,338,339,340,28,179,180,181,182,183,341,342,343,344,345,346,347,348,349,350,184,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,29,372,30,31,32,373,374,375,36,376,377,378,379,380,381,382,383,384,385,386,37,387,388,38,389,390,185,186,391,39,40,41,42,43,44,45,46,187,188,189,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,190,135,136,137,191,412,192,413,414,415,416,417,47,48,49,50,51,52,418,53,419,420,421,422,423,193,424,194,195,425,196,426,427,56,0,1,57,58,428,197,2,3,4,429,5,198,6,7,8,430,431,9,432,433,199,200,434,435,201,436,202,203,437,138,204,61,62,438,439,63,64,66,205,491,206,20,207,440,208,441,209,210,211,442,443,139,212,69,70,71,444,213,214,215,216,217,446,447,448,449,450,74,76,77,78,79,80,81,82,84,85,87,88,89,91,93,94,95,96,99,102,104,105,106,107,108,109,110,113,114,218,115,116,117,118,454,119,121,122,123,124,125,126,127,219,455,456,457,220,458,459,460,461,462,463,221,464,465,466,222,223,467,224,225,468,469,226,227,228,229,470,230,231,232,233,234,235,236,237,238,239,240,241,242,243,471,472,10,11,12,473,13,244,14,15,16,474,475,17,476,477,478,479,245,246,130,131,480,247,248,249,250,132,133,481,251,252,253,254,255,256,257,258,259,260,261,262,482,263,264,265,266,267,129,483],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[325,462,221],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"failures":[54,55,451,513,453,120],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:55","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:49","sourceCode":"java.lang.StringBuffer.append((((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:305","sourceCode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","type":"CtReturnImpl"},"failures":[140,270,274,276,277,278,279,281,282,21,22,141,142,283,284,143,285,26,298,299,300,144,301,145,146,302,303,147,304,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,312,176,177,313,314,178,28,179,180,181,182,183,341,346,348,349,184,352,353,354,356,357,358,359,360,361,362,363,364,33,34,35,380,383,384,185,186,39,187,188,189,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,190,135,136,137,191,412,192,193,424,194,195,425,196,427,56,0,1,57,58,428,197,198,199,200,434,435,201,436,202,203,437,138,204,63,64,65,66,205,67,68,206,20,207,440,208,441,209,210,211,442,443,139,212,71,213,214,215,216,217,72,447,448,449,450,76,79,81,82,85,91,94,104,110,113,114,218,115,116,117,119,123,124,125,219,457,220,458,459,461,463,221,464,466,222,223,467,224,225,468,469,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,471,244,245,246,130,131,247,248,249,250,132,133,481,251,252,253,254,255,256,257,258,259,260,261,262,482,263,264,265,266,128,267,129,483],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:305","failures":[140,270,21,141,142,143,285,26,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,305,306,174,175,176,177,178,331,179,180,181,182,183,341,346,348,349,184,33,34,35,380,185,186,39,187,188,189,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,190,135,136,137,191,412,192,193,424,194,195,196,56,197,198,199,200,201,202,203,204,63,64,65,66,205,67,68,206,20,207,208,209,210,211,139,212,71,213,214,215,216,217,72,76,79,81,82,85,91,94,104,110,113,114,218,115,116,117,119,123,124,125,219,220,458,463,221,464,466,222,223,467,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,130,131,247,248,249,250,132,133,251,252,253,254,255,256,257,258,259,260,261,262,482,263,264,265,266,128,267,483],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[300,494,496,311,501,508],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[147,149],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[222,223,467,224,229,470,130,131,247,248,249,250,132,133,481,251,260,261,264,265],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:933","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[277,278,279,281,282,21,22,141,142,283,284,285,26,299,300,144,301,145,146,302,147,304,148,149,150,151,152,153,156,157,159,164,169,312,313,314,178,28,346,348,349,184,352,353,354,356,357,359,360,361,362,363,33,34,35,187,188,394,395,397,402,407,190,412,192,193,424,194,195,425,196,427,56,0,1,57,58,428,197,198,199,200,435,201,436,202,203,437,63,64,65,66,205,67,68,206,20,440,208,441,442,443,212,71,216,217,72,79,81,82,91,94,104,110,113,114,218,115,116,117,119,124,219,457,463,464,466,222,223,467,224,468,469,226,227,228,229,231,232,233,234,235,236,237,238,240,241,242,243,471,244,131,248,132,133,251,252,254,257,260,261,262,482,263,264,128,267,129,483],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[369,39,44],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:39","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Float.java.lang.Class<java.lang.Float>.getName(), java.lang.Float.java.lang.Class<java.lang.Float>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[514,515,516,517,518,519,520,72,73,268,83,269,521,128],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[222,467,229,130,131,248,250,132,481,260,264],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:233","sourceCode":"if ((org.easymock.internal.ExpectedInvocation) == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,134,332,333,334,335,337],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[72,73],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.internal.MockBuilder:229","failures":[76,85,94,123,127],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":131,"org.easymock.tests2.UsageTest.argumentsOrdered":443,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":174,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":242,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":325,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":441,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":0,"org.easymock.tests2.DelegateToTest.testReturnException":463,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":377,"org.easymock.tests.MockingTest.testPartialClassMocking":33,"org.easymock.tests.MockClassControlTest.testToString":41,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":446,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":309,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":127,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":98,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":392,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":94,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":200,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":515,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":133,"org.easymock.tests2.UsageTest.wrongArguments":440,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":141,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":17,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":415,"org.easymock.samples.ExampleTest.answerVsDelegate":424,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":38,"org.easymock.tests2.UsageConstraintsTest.testNull":248,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":375,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":115,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":46,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":241,"org.easymock.tests2.CaptureTest.testPrimitive":224,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":143,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":411,"org.easymock.tests.UsageTest.moreThanOneArgument":175,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":218,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":421,"org.easymock.tests.UsageTest.argumentsOrdered":314,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":382,"org.easymock.tests.UsageVarargTest.varargIntAccepted":354,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":509,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":330,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":179,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":519,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":74,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":488,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":431,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":80,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":317,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":183,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":504,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":244,"org.easymock.tests.ReplayStateInvalidUsageTest.times":294,"org.easymock.tests2.DependencyTest.testClassMocking":432,"org.easymock.tests2.AnswerTest.answer":219,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":481,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":134,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":479,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":486,"org.easymock.tests2.CaptureTest.testAnd":222,"org.easymock.tests2.UsageTest.strictResetToDefault":20,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":452,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":122,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":420,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":136,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":236,"org.easymock.tests2.DelegateToTest.testDelegate":466,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":386,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":407,"org.easymock.tests.LimitationsTest.mockFinalMethod":27,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":380,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":345,"org.easymock.tests2.DependencyTest.testClassMockingSupport":433,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":305,"org.easymock.tests2.CaptureTest.testCapture1_2446744":225,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":454,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":405,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":477,"org.easymock.tests.UsageThrowableTest.throwError":147,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":288,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":388,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":484,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":9,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":423,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":112,"org.easymock.samples.PartialClassMockTest.testGetArea":56,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":289,"org.easymock.tests.MockingTest.testInterfaceMocking":373,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":180,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":365,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":99,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":29,"org.easymock.tests2.UsageTest.niceToStrict":208,"org.easymock.tests2.ThreadingTest.testChangeDefault":511,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":315,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":79,"org.easymock.tests2.MockBuilderTest.testCreateMock":84,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":107,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":16,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":501,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":401,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":237,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":485,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":273,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":274,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":413,"org.easymock.tests.UsageOverloadedMethodTest.overloading":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":103,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":255,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":349,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":187,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":165,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":254,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":228,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":355,"org.easymock.tests.MockClassControlTest.testEquals":45,"org.easymock.tests2.EasyMockSupportClassTest.testAll":91,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":22,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":506,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":409,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":478,"org.easymock.tests2.CaptureTest.testCaptureAll":223,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":343,"org.easymock.tests.MockNameTest.defaultName":391,"org.easymock.tests2.UsageConstraintsTest.testMatches":256,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":422,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":286,"org.easymock.samples.ExampleTest.voteForRemovals":196,"org.easymock.tests.UsageVarargTest.allKinds":363,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":191,"org.easymock.samples.BasicClassMockTest.testPrintContent":58,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":344,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":152,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":434,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":465,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":7,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":381,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":520,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":418,"org.easymock.tests2.UsageConstraintsTest.greaterThan":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":92,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":135,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":125,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":53,"org.easymock.samples.ExampleTest.voteForRemoval":194,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":126,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":214,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":389,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":489,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":118,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":28,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":206,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":83,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":322,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":234,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":89,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":376,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":462,"org.easymock.tests2.CaptureTest.testCaptureFirst":231,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":321,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":235,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":212,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":351,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":161,"org.easymock.tests2.UsageTest.moreThanOneArgument":207,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":216,"org.easymock.tests2.CaptureTest.testCapture2_2446744":230,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":332,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":362,"org.easymock.tests.GenericTest.testBridgedEquals":19,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":281,"org.easymock.tests.UsageExpectAndReturnTest.longType":157,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":232,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":341,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":410,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":86,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":482,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":372,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":408,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":419,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":339,"org.easymock.tests.UsageCallCountTest.tooManyCalls":282,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":495,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":276,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":108,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":162,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":475,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":397,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":151,"org.easymock.tests.MockingTest.testNiceClassMocking":36,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":64,"org.easymock.tests.MockingTest.testClassMocking":31,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":75,"org.easymock.tests2.UsageConstraintsTest.testContains":253,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":275,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":71,"org.easymock.tests2.UsageConstraintsTest.testFind":247,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":189,"org.easymock.tests.MockTypeTest.fromEasyMockClass":387,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":461,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":298,"org.easymock.tests.UsageExpectAndReturnTest.object":164,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":119,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":474,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":240,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":516,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":357,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":370,"org.easymock.tests.UsageTest.exactCallCountByLastCall":178,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":140,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":320,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":308,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":383,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":498,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":73,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":170,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":352,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":348,"org.easymock.tests.MockClassControlTest.testHashCode":44,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":3,"org.easymock.tests2.EasyMockSupportTest.testVerify":471,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":101,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":503,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":384,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":272,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":346,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":476,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":472,"org.easymock.tests.UsageVarargTest.varargCharAccepted":356,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":417,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":435,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":337,"org.easymock.tests2.UsageTest.openCallCountByLastCall":209,"org.easymock.tests.DefaultClassInstantiatorTest.object":47,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":243,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":271,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":368,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":499,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":102,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":149,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":473,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":2,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":123,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":43,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":398,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":171,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":338,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":505,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":110,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":42,"org.easymock.tests2.UsageTest.resumeIfFailure":139,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":37,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":487,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":379,"org.easymock.tests2.StubTest.stubWithReturnValue":204,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":268,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":163,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":263,"org.easymock.tests2.SerializationTest.testAllMockedMethod":129,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":331,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":521,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":508,"org.easymock.samples.SupportTest.voteForRemovals":197,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":18,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":429,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":404,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":336,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":455,"org.easymock.tests.UsageExpectAndThrowTest.object":402,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":310,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":261,"org.easymock.tests2.DelegateToTest.testWrongClass":464,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":185,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":186,"org.easymock.tests.UsageStrictMockTest.range":145,"org.easymock.samples.ConstructorCalledMockTest.testTax":54,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":438,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":239,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":63,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":403,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":88,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":296,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":313,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":414,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":494,"org.easymock.tests2.CaptureTest.testCaptureNone":227,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":366,"org.easymock.tests.UsageUnorderedTest.message":285,"org.easymock.tests.UsageVerifyTest.twoReturns":192,"org.easymock.tests.UsageVarargTest.varargByteAccepted":361,"org.easymock.tests2.ThreadingTest.testThreadSafe":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":105,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":279,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":57,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":371,"org.easymock.tests2.CaptureTest.testCapture_2617107":467,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":510,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":307,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":284,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":334,"org.easymock.tests2.UsageConstraintsTest.any":251,"org.easymock.tests2.StubTest.stub":138,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":293,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":340,"org.easymock.tests.UsageExpectAndThrowTest.longType":395,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":335,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":378,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":51,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":292,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":436,"org.easymock.tests2.SerializationTest.testClass":128,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":198,"org.easymock.tests.LimitationsTest.mockNativeMethod":26,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":173,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":23,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":12,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":437,"org.easymock.tests2.NameTest.nameForMocksControl":450,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":13,"org.easymock.tests2.MockedExceptionTest.testMockedException":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":93,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":177,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":460,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":396,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":35,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":113,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":82,"org.easymock.tests.MockingTest.testNicePartialClassMocking":34,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":117,"org.easymock.tests2.CompareToTest.testNotComparable":493,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":514,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":10,"org.easymock.tests2.CaptureTest.testCaptureLast":226,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":306,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":132,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":68,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":262,"org.easymock.tests.MockingTest.testTwoMocks":32,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":491,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":154,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":400,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":442,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":265,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":512,"org.easymock.samples.ExampleTest.removeNonExistingDocument":426,"org.easymock.tests.UsageStrictMockTest.differentMethods":146,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":15,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":290,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":4,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":49,"org.easymock.tests2.ConstraintsToStringTest.andToString":507,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":215,"org.easymock.tests2.MockBuilderTest.testCreateMockString":87,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":39,"org.easymock.tests.UsageExpectAndThrowTest.floatType":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":95,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":90,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":457,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":445,"org.easymock.tests.UsageVerifyTest.twoThrows":412,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":104,"org.easymock.samples.ExampleTest.voteAgainstRemoval":195,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":326,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":364,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":124,"org.easymock.tests.LimitationsTest.privateConstructor":25,"org.easymock.tests2.UsageConstraintsTest.testNotNull":264,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":153,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":69,"org.easymock.tests2.UsageTest.defaultResetToNice":211,"org.easymock.samples.ExampleTest.voteAgainstRemovals":193,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":169,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":327,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":11,"org.easymock.tests.UsageVarargTest.differentLength":358,"org.easymock.tests2.CallbackTest.callback":483,"org.easymock.tests2.UsageConstraintsTest.equals":480,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":120,"org.easymock.tests.UsageTest.openCallCountByLastCall":176,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":245,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":283,"org.easymock.tests.UsageCallCountTest.tooFewCalls":277,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":66,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":416,"org.easymock.tests.UsageThrowableTest.throwCheckedException":150,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":496,"org.easymock.tests.MockingTest.testStrictClassMocking":30,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":67,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":270,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":14,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":65,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":295,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":205,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":458,"org.easymock.tests.ObjectMethodsTest.testHashCode":369,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":518,"org.easymock.tests2.NameTest.nameForNiceMock":449,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":217,"org.easymock.tests2.DependencyTest.testInterfaceMocking":199,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":517,"org.easymock.samples.ExampleTest.addDocument":425,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":111,"org.easymock.tests2.DelegateToTest.testStubDelegate":221,"org.easymock.tests2.AnswerTest.stubAnswer":220,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":144,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":492,"org.easymock.tests.UsageVarargTest.varargLongAccepted":360,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":302,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":324,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":172,"org.easymock.tests.UsageExpectAndReturnTest.floatType":156,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":72,"org.easymock.tests2.ConstraintsToStringTest.orToString":500,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":55,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":430,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":259,"org.easymock.tests.UsageThrowableTest.noUpperLimit":304,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":350,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":246,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":61,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":468,"org.easymock.tests2.SerializationTest.test":267,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":48,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":155,"org.easymock.tests2.UsageConstraintsTest.testSame":249,"org.easymock.samples.SupportTest.addDocument":428,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":490,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":96,"org.easymock.tests.GenericTest.testPackageScope":21,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":385,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":319,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":8,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":374,"org.easymock.tests2.NameTest.nameForMock":447,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":166,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":453,"org.easymock.tests2.UsageStrictMockTest.differentMethods":203,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":121,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":158,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":406,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":367,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":137,"org.easymock.tests2.MockedExceptionTest.testRealException":444,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":390,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":439,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":329,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":497,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":269,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":201,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":328,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":142,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":297,"org.easymock.tests2.NameTest.nameForStrictMock":448,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":78,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":459,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":116,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":62,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":50,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":260,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":76,"org.easymock.tests2.UsageStrictMockTest.range":202,"org.easymock.tests2.UsageConstraintsTest.lessThan":266,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":59,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":5,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":233,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":100,"org.easymock.tests2.CaptureTest.testCaptureRightOne":229,"org.easymock.tests2.UsageConstraintsTest.testOr":250,"org.easymock.tests.UsageRangeTest.combination":190,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":114,"org.easymock.tests.UsageTest.wrongArguments":312,"org.easymock.tests2.MockBuilderTest.testWithConstructor":451,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":97,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":40,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":159,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":167,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":316,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":52,"org.easymock.tests.UsageVarargTest.varargShortAccepted":359,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":280,"org.easymock.tests2.UsageConstraintsTest.cmpTo":252,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":456,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":318,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":210,"org.easymock.tests2.CaptureTest.testCaptureFromStub":470,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":287,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":77,"org.easymock.tests.UsageTest.unexpectedCallWithArray":311,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":300,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":278,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":513,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":168,"org.easymock.tests2.UsageConstraintsTest.constraints":130,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":301,"org.easymock.samples.ExampleTest.addAndChangeDocument":427,"org.easymock.tests2.ConstraintsToStringTest.notToString":502,"org.easymock.tests.UsageStrictMockTest.testVerify":303,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":1,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":299,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":342,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":469,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":181,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":60,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":160,"org.easymock.tests.LimitationsTest.abstractClass":24,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":184,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":182,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":238,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":353}}]
