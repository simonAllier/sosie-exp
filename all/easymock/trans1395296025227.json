[{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:124","failures":[0],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:137","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[1,2,3],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:209","sourceCode":"if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"exception":"candidateParameter","throwableClass":"candidateParameter"}},{"position":"org.easymock.internal.LastControl:92","failures":[4],"status":-1,"binaryOperator":"(\"\" + int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[5,6,7,8],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:178","failures":[9,10],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"this.org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"failures":[11,12,13,14,15,16,17,6,18,19,20,21,22],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.EasyMock:1803","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:39","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.vm.vendor\")","type":"CtReturnImpl"},"failures":[23],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,4,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,0,87],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1277","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:36","failures":[24,25,88,89,90,91,92,93,94,95,96,97,98,35,99,100,101,58,102,103,104,105,106,107,108,109,110,111,112,113],"status":-1,"binaryOperator":"java.lang.Object instanceof java.lang.String","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[1,2,3],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"matched"}},{"position":"org.easymock.internal.matchers.Find:41","failures":[114],"status":-1,"binaryOperator":"((\"find(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:182","sourceCode":"if (java.lang.reflect.Proxy.java.lang.reflect.Proxy.isProxyClass(V.getClass())) {\n    return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]));\n} ","type":"CtIfImpl"},"failures":[115,116,24,25,88,89,90,91,117,118,97,98,119,120,121,122,35,99,100,101,58,102,103,123,124,113,125,126,127,128],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[17,129,130,131,132,133],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"parameterType"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:102","sourceCode":"if (!boolean) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove();\n    throw new java.lang.IllegalStateException(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"message","key":"message"}},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[134,76],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method"}},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,25,157,88,89,158,159,160,161,162,163,164,165,166,26,27,28,29,30,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,31,32,208,209,210,211,33,212,213,97,214,215,120,216,217,218,219,220,221,222,223,224,225,34,226,227,228,35,229,230,231,232,233,99,100,101,234,36,37,38,39,40,41,42,235,236,237,238,239,240,241,242,243,244,245,246,247,248,43,44,45,46,47,48,49,50,51,52,53,54,55,56,249,250,251,252,134,253,57,254,255,256,58,257,102,103,258,123,259,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,260,261,262,263,264,265,266,267,268,269,270,124,271,272,273,274,275,276,277,278,279,280,281,282,7,8,283,284,113,285,286,287,288,126,289,290,0,87,291,292,293,294,295,296,297,298,299,300,301],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.Capture:82","failures":[302,43,45,46,47,48,49,50,52,303,53,54,56],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:230","sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[304],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"method"}},{"position":"org.easymock.ConstructorArgs:54","failures":[305,306,16,17,307,308,309,259,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,6,331,332,333,334,335,133,20,336,337,338,339],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[305,306,16,17,307,308,309,259,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,6,331,332,333,334,335,133,20,336,337,338,339],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:152","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[79],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[5,6,7,8],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[5,6,7,8],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:198","failures":[16,17,129,130,131,340,132,6,133,20],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:91","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[43,44,45,46,53,54,62,63,64,65,66,67,68,69,4,70,79,80,84,85],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[43,45,53,62,63,65,67,68,4,79,84],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[135,136,137,138,139,140,141,144,145,147,148,149,151,152,153,154,155,25,88,89,26,190,341,191,192,342,343,344,229,230,231,232,36,37,38,39,40,41,42,345,240,241,243,244,246,249,250,251,252,134,253,57,346,14,347,58,102,103,16,259,312,322,328,261,264,265,269,291,348,331,292,293,349,332,350,18,351,10,352],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"type":"returnedType"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[135,9,353,187,188,12,354,355,342,343,344,234,345,235,236,305,305,306,306,249,250,252,134,253,356,57,357,346,14,347,16,358,259,312,322,328,6,8,291,348,331,292,349,332,359,360,350,361,18,362,351,10,21,352,363,22,296],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:296","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:82","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])));\n} ","type":"CtIfImpl"},"failures":[135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,364,156,24,25,157,88,89,158,365,159,160,161,162,163,164,165,166,26,27,28,29,30,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,31,32,208,209,210,211,33,212,213,97,119,214,215,120,121,216,217,218,219,220,221,366,222,223,224,225,34,226,227,228,35,229,230,231,232,233,99,100,101,234,36,37,38,39,40,41,42,235,236,237,238,239,240,241,242,243,244,245,246,247,248,43,44,45,46,47,48,49,50,51,52,53,54,55,56,249,250,251,252,134,253,57,347,254,255,367,256,58,257,102,103,258,123,259,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,260,261,262,263,264,265,266,267,268,269,270,124,271,272,273,274,275,276,277,278,279,280,281,282,7,8,283,284,113,125,285,286,287,288,126,127,289,290,0,368,87,291,292,293,294,295,296,297,298,299,300,301],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[24,92,94,98,105,111],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:288","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[369,370],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[16,17,129,130,131,340,132,6,133,20],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:786","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.UnorderedBehavior:41","sourceCode":"return ","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\")","type":"CtInvocationImpl"},"failures":[371],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:60","sourceCode":"if (!(java.util.Set<java.lang.String>.add(java.lang.String))) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String));\n} ","type":"CtIfImpl"},"failures":[372,373],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:90","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[374,375,376],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[24,92,94,98,105,111],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:70","sourceCode":"java.io.InputStream.close()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[377,378,379,380],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:557","failures":[135,381,382,383,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,25,88,89,384,159,160,385,386,161,91,26,27,28,29,30,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,387,388,389,187,12,190,341,191,192,197,198,199,200,201,202,203,204,205,206,207,31,32,390,208,209,210,211,33,212,391,392,393,213,97,214,215,216,342,343,344,394,395,396,226,227,228,397,35,229,230,231,232,233,99,100,101,234,36,37,38,39,40,41,42,398,399,400,345,305,305,306,306,240,241,242,243,244,246,247,248,43,44,46,47,50,51,52,53,54,55,56,249,250,251,252,134,253,57,346,14,347,254,255,58,102,103,16,123,259,312,322,328,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,401,260,261,262,370,263,264,265,266,267,268,269,270,124,271,272,273,274,275,276,277,402,278,279,280,281,6,7,283,284,113,285,287,288,403,289,290,0,87,291,348,331,292,293,349,332,350,18,351,10,352,294,295,296,297,298,404,405,299,300,301],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":63,"org.easymock.tests.ClassInstantiatorFactoryTest.getJVM":23,"org.easymock.tests2.UsageTest.argumentsOrdered":127,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":213,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":280,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":376,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":286,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":238,"org.easymock.tests2.DelegateToTest.testReturnException":260,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":209,"org.easymock.tests.MockingTest.testPartialClassMocking":342,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":382,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":316,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":167,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":312,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":265,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":129,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":69,"org.easymock.tests2.UsageTest.wrongArguments":125,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":26,"org.easymock.samples.ExampleTest.answerVsDelegate":242,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":353,"org.easymock.tests2.UsageConstraintsTest.testNull":65,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":252,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":196,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":279,"org.easymock.tests2.CaptureTest.testPrimitive":46,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":30,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":186,"org.easymock.tests.UsageTest.moreThanOneArgument":97,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":251,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":231,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":384,"org.easymock.tests.UsageTest.argumentsOrdered":121,"org.easymock.tests.UsageVarargTest.varargIntAccepted":219,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":304,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":112,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":38,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":359,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":362,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":369,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":42,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":108,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":123,"org.easymock.tests2.AnswerTest.answer":298,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":4,"org.easymock.tests2.CaptureTest.testAnd":43,"org.easymock.tests2.UsageTest.strictResetToDefault":284,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":335,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":357,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":230,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":191,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":275,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":386,"org.easymock.tests2.DelegateToTest.testDelegate":263,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":182,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":33,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":90,"org.easymock.tests2.CaptureTest.testCapture1_2446744":47,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":180,"org.easymock.tests.UsageThrowableTest.throwError":200,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":374,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":233,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":330,"org.easymock.samples.PartialClassMockTest.testGetArea":345,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":39,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":388,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":168,"org.easymock.tests2.UsageTest.niceToStrict":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":317,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":18,"org.easymock.tests2.MockBuilderTest.testCreateMock":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":325,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":176,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":105,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":276,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":393,"org.easymock.tests.UsageOverloadedMethodTest.overloading":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":327,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":74,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":228,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":147,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":197,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":2,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":73,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":52,"org.easymock.tests.MockClassControlTest.testEquals":195,"org.easymock.tests2.EasyMockSupportClassTest.testAll":259,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":188,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":184,"org.easymock.tests2.CaptureTest.testCaptureAll":44,"org.easymock.tests.MockNameTest.defaultName":122,"org.easymock.tests2.UsageConstraintsTest.testMatches":75,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":232,"org.easymock.samples.ExampleTest.voteForRemovals":246,"org.easymock.tests.UsageVarargTest.allKinds":34,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":99,"org.easymock.samples.BasicClassMockTest.testPrintContent":236,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":206,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":367,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":212,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":370,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":132,"org.easymock.tests2.UsageConstraintsTest.greaterThan":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":310,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":341,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":347,"org.easymock.samples.ExampleTest.voteForRemoval":243,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":267,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":356,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":234,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":283,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":20,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":273,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":202,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":308,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":208,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":401,"org.easymock.tests2.CaptureTest.testCaptureFirst":56,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":274,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":290,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":143,"org.easymock.tests2.UsageTest.moreThanOneArgument":113,"org.easymock.tests2.CaptureTest.testCapture2_2446744":55,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":269,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":352,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":225,"org.easymock.tests.GenericTest.testBridgedEquals":189,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":165,"org.easymock.tests.UsageExpectAndReturnTest.longType":139,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":271,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":185,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":363,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":390,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":82,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":183,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":399,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":229,"org.easymock.tests.UsageCallCountTest.tooManyCalls":166,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":93,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":326,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":144,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":172,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":205,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":348,"org.easymock.tests2.UsageConstraintsTest.testContains":72,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":360,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":296,"org.easymock.tests2.UsageConstraintsTest.testFind":64,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":199,"org.easymock.tests.MockTypeTest.fromEasyMockClass":115,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":87,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":364,"org.easymock.tests.UsageExpectAndReturnTest.object":146,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":57,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":278,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":130,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":221,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":194,"org.easymock.tests.UsageTest.exactCallCountByLastCall":216,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":31,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":159,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":381,"org.easymock.tests2.ConstraintsToStringTest.findToString":114,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":17,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":152,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":217,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":227,"org.easymock.tests2.EasyMockSupportTest.testVerify":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":319,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":107,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":160,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":392,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":226,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":59,"org.easymock.tests.UsageVarargTest.varargCharAccepted":220,"org.easymock.tests2.CaptureTest.testCaptureMultiple":302,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":256,"org.easymock.tests2.UsageTest.openCallCountByLastCall":287,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":281,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":391,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":117,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":96,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":320,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":203,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":372,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":346,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":173,"org.easymock.tests.CapturesMatcherTest.test":371,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":153,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":398,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":328,"org.easymock.tests2.UsageTest.resumeIfFailure":289,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":9,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":211,"org.easymock.tests2.StubTest.stubWithReturnValue":255,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":133,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":145,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":83,"org.easymock.tests2.SerializationTest.testAllMockedMethod":8,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":394,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":111,"org.easymock.samples.SupportTest.voteForRemovals":240,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":11,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":373,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":179,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":5,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":395,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":404,"org.easymock.tests.UsageExpectAndThrowTest.object":177,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":383,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":80,"org.easymock.tests2.DelegateToTest.testWrongClass":262,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":36,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":37,"org.easymock.tests.UsageStrictMockTest.range":88,"org.easymock.samples.ConstructorCalledMockTest.testTax":305,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":128,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":402,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":291,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":178,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":351,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":307,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":92,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":389,"org.easymock.tests2.CaptureTest.testCaptureNone":51,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":378,"org.easymock.tests.UsageUnorderedTest.message":35,"org.easymock.tests.UsageVerifyTest.twoReturns":101,"org.easymock.tests.UsageVarargTest.varargByteAccepted":224,"org.easymock.tests2.ThreadingTest.testThreadSafe":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":323,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":164,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":118,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":235,"org.easymock.tests2.CaptureTest.testCapture_2617107":45,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":29,"org.easymock.tests2.UsageConstraintsTest.any":70,"org.easymock.tests2.StubTest.stub":254,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":400,"org.easymock.tests.UsageExpectAndThrowTest.longType":170,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":210,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":1,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":257,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":124,"org.easymock.tests2.SerializationTest.testClass":6,"org.easymock.tests.LimitationsTest.mockNativeMethod":135,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":155,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":12,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":258,"org.easymock.tests2.MockedExceptionTest.testMockedException":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":311,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":215,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":171,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":344,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":368,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":249,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":10,"org.easymock.tests.MockingTest.testNicePartialClassMocking":343,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":253,"org.easymock.tests2.CaptureTest.testCaptureLast":50,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":91,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":68,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":332,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":81,"org.easymock.tests.MockingTest.testTwoMocks":355,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":333,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":136,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":175,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":126,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":85,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":380,"org.easymock.tests.UsageStrictMockTest.differentMethods":89,"org.easymock.tests2.ConstraintsToStringTest.andToString":110,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":268,"org.easymock.tests2.MockBuilderTest.testCreateMockString":22,"org.easymock.tests.UsageExpectAndThrowTest.floatType":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":313,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":309,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":299,"org.easymock.tests.UsageVerifyTest.twoThrows":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":322,"org.easymock.samples.ExampleTest.voteAgainstRemoval":244,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":387,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":14,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":339,"org.easymock.tests2.UsageConstraintsTest.testNotNull":84,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":207,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":294,"org.easymock.tests2.UsageTest.defaultResetToNice":403,"org.easymock.samples.ExampleTest.voteAgainstRemovals":241,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":151,"org.easymock.tests.UsageVarargTest.differentLength":366,"org.easymock.tests2.CallbackTest.callback":248,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":13,"org.easymock.tests.UsageTest.openCallCountByLastCall":214,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":60,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":28,"org.easymock.tests.UsageCallCountTest.tooFewCalls":162,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":292,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":379,"org.easymock.tests.UsageThrowableTest.throwCheckedException":204,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":94,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":32,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":349,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":331,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":375,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":293,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":301,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":270,"org.easymock.tests2.DependencyTest.testInterfaceMocking":264,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":131,"org.easymock.samples.ExampleTest.addDocument":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":324,"org.easymock.tests2.DelegateToTest.testStubDelegate":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":329,"org.easymock.tests2.AnswerTest.stubAnswer":300,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":25,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":19,"org.easymock.tests.UsageVarargTest.varargLongAccepted":223,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":158,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":154,"org.easymock.tests.UsageExpectAndReturnTest.floatType":138,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":16,"org.easymock.tests2.ConstraintsToStringTest.orToString":104,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":306,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":78,"org.easymock.tests.UsageThrowableTest.noUpperLimit":201,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":61,"org.easymock.tests2.SerializationTest.test":7,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":48,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":3,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":137,"org.easymock.tests2.UsageConstraintsTest.testSame":66,"org.easymock.samples.SupportTest.addDocument":239,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":314,"org.easymock.tests.GenericTest.testPackageScope":187,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":385,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":148,"org.easymock.tests2.UsageStrictMockTest.differentMethods":103,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":337,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":140,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":181,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":193,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":192,"org.easymock.tests2.MockedExceptionTest.testRealException":297,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":116,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":95,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":58,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":27,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":0,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":134,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":79,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":350,"org.easymock.tests2.UsageStrictMockTest.range":102,"org.easymock.tests2.UsageConstraintsTest.lessThan":86,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":272,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":340,"org.easymock.tests2.CaptureTest.testCaptureRightOne":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":318,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":377,"org.easymock.tests2.UsageConstraintsTest.testOr":67,"org.easymock.tests.UsageRangeTest.combination":190,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":250,"org.easymock.tests.UsageTest.wrongArguments":119,"org.easymock.tests2.MockBuilderTest.testWithConstructor":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":315,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":354,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":141,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":149,"org.easymock.tests.UsageVarargTest.varargShortAccepted":222,"org.easymock.tests2.UsageConstraintsTest.cmpTo":71,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":405,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":288,"org.easymock.tests2.CaptureTest.testCaptureFromStub":54,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":361,"org.easymock.tests.UsageTest.unexpectedCallWithArray":98,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":24,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":163,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":336,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":150,"org.easymock.tests2.CaptureTest.testCapture":303,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":157,"org.easymock.tests2.UsageConstraintsTest.constraints":62,"org.easymock.samples.ExampleTest.addAndChangeDocument":247,"org.easymock.tests2.ConstraintsToStringTest.notToString":106,"org.easymock.tests.UsageStrictMockTest.testVerify":365,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":237,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":156,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":49,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":40,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":358,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":142,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":397,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":41,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":218,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":277}}]
