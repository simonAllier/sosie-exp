[{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[1,2,3,4,5],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,1,2,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,3,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,4,5,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((this.org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[21,21,22,22,23,39,96,97,222,223],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[411,414],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:197","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:572","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[130],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,32,33,34,35,38,41,43,49,50,51,53,54,57,58,59,60,61,62,63,64,65,68,69,70,84,92,93,94,95,96,100,101,104,106,107,109,110,113,116,118,119,120,121,123,124,125,126,127,128,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,2,164,165,166,167,168,170,171,172,177,180,190,196,204,211,217,218,219,221,228,229,230,231,233,234,235,236,237,238,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,261,262,264,268,269,270,271,272,273,274,276,277,279,280,281,282,283,3,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,317,319,320,321,324,327,328,330,340,342,343,344,345,346,347,352,353,354,355,356,357,358,360,361,374,376,5,378,379,380,381,382,383,384,389,418,419,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,486,487],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"failures":[489,228,230,231,232,233,234,235,237,490,238,239,241],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[31],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"position":"org.easymock.internal.Range:44","failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,1,2,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,3,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,4,5,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:83","failures":[54,58,70,92,93,94,95,101,105,107,108,111,112,114,115,117,124,130,136,144,162,163,1,2,229,230,232,233,234,235,236,241,242,256,283,3,284,285,321,324,326,329,330,332,333,334,335,336,337,353,375,376,377,4,5,419],"status":-1,"binaryOperator":"(int) == (java.lang.Integer.int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[491,118,137,140],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[23,96,97,220,223,492,493,494,495,496],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[0,497,498,499,500],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:919","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Double>(double))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1831","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EqualsWithDelta(double , double))","type":"CtInvocationImpl"},"failures":[138],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[38,41,51,53,54,67,69,71,84,118,119,120,121,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,162,163,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,256,257,283,3,320,321,322,323,324,326,327,328,329,375,376,487,488],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[491,137],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"failures":[286,287,294,301,328,383],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"candidateMethod"}},{"position":"org.easymock.internal.RecordState:183","failures":[6,7,8,9,10,11,12,13,14,15,16,17,19,20,23,24,25,30,32,33,35,49,50,51,53,54,57,58,59,62,64,66,67,68,69,70,84,96,100,101,102,104,105,106,107,109,110,111,112,117,118,119,120,121,123,124,125,126,127,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,151,152,155,156,157,158,159,161,162,163,1,2,164,165,166,167,168,170,171,172,180,190,196,204,217,219,221,228,229,230,231,233,234,235,236,237,238,241,242,243,244,245,246,247,248,250,251,261,262,264,272,273,274,276,277,279,280,281,282,283,3,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,319,320,321,322,323,324,326,327,328,329,330,333,334,337,340,344,345,346,347,349,350,352,353,361,374,376,377,4,5,378,417,418,419,420,421,422,423,424,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,487],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[31,41,44,167,173],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:65","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Double.java.lang.Class<java.lang.Double>, java.lang.Double.java.lang.Double)","type":"CtInvocationImpl"},"failures":[286,287,294,301,328,383],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[501,146],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:147","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:146","sourceCode":"try {\n    return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory();\n} catch (final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError) {\n    throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError);\n}","type":"CtTryImpl"},"failures":[47,48],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[0,497,498,499,500],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:162","sourceCode":"final java.lang.NoSuchFieldException java.lang.NoSuchFieldException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[8,11,12,13,14,15,17,19,21,21,22,22,23,24,30,31,32,33,34,35,38,42,43,44,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,84,96,99,100,101,102,103,104,105,106,107,109,111,112,113,116,117,118,119,120,121,123,124,125,126,127,128,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,162,1,2,165,166,167,168,170,171,172,177,180,190,196,204,213,217,219,221,225,228,229,231,232,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,261,262,264,3,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,307,308,309,310,311,312,314,315,317,319,320,321,322,323,324,325,326,327,328,329,330,333,334,337,340,344,351,352,353,360,362,376,4,5,380,381,382,383,384,386,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,442,448,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,485,487,488],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[8,11,12,14,15,17,30,31,32,33,34,35,38,42,43,44,49,50,67,96,101,162,1,2,165,166,167,168,170,171,172,177,180,190,196,213,217,219,221,225,243,244,245,246,247,248,249,250,251,261,262,264,286,287,288,289,290,291,294,295,297,298,299,301,302,303,304,305,320,327,328,340,376,4,5,380,381,382,383],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:109","sourceCode":"org.easymock.internal.Invocation.clearCaptures()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,41,42,43,44,49,50,51,53,54,57,58,59,60,61,62,63,64,65,66,67,68,69,70,84,96,100,101,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,125,126,127,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,1,2,164,165,166,167,168,170,171,172,177,180,190,196,204,211,213,217,218,219,221,224,225,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,250,251,252,253,254,255,256,257,261,262,264,268,269,270,271,272,273,274,276,277,278,279,280,281,282,283,3,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,312,314,315,318,319,320,321,322,323,324,326,327,328,329,330,331,332,333,334,335,336,337,340,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,360,361,373,374,375,376,377,4,5,378,380,381,382,383,384,417,418,419,420,421,422,423,424,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,487,488],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"invocation"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[19,51,53,64,65,66,69,104,107,110,111,112,116,118,119,120,123,124,125,126,132,133,134,135,137,138,145,146,1,2,229,230,232,233,235,236,240,241,242,248,249,250,251,3,286,287,290,292,293,294,295,297,298,299,300,302,303,304,305,326,329,330,333,334,344,353,4,5,418,450,451,454,456,457,458,459,461,462,463,464,466,467,468,469],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[501,146],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[120,121,124,126,127,129,139,144,228,230,238],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,1,2,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,3,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,4,5,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[363],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"failures":[12,13,14,15,16,17,18,19,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,40,41,42,43,44,45,49,51,53,54,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,78,84,92,93,94,95,96,100,101,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,125,126,127,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,160,161,162,163,1,2,164,166,167,171,172,211,213,214,216,217,218,224,225,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,276,277,278,279,280,281,282,283,3,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,312,313,314,315,317,318,319,320,321,322,323,324,326,327,328,329,330,331,332,333,334,335,336,337,340,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,360,361,365,373,374,375,376,377,4,5,378,379,380,381,382,383,384,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,417,418,419,420,421,422,423,424,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,473,474,475,476,477,479,480,481,485,486,487,488],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":121,"org.easymock.tests2.UsageTest.argumentsOrdered":115,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":329,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":157,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":436,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":110,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":6,"org.easymock.tests2.DelegateToTest.testReturnException":100,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":253,"org.easymock.tests.MockingTest.testPartialClassMocking":261,"org.easymock.tests.MockClassControlTest.testToString":390,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":91,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":386,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":445,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":184,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":450,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":180,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":50,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":492,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":128,"org.easymock.tests2.UsageTest.wrongArguments":108,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":320,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":210,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":270,"org.easymock.samples.ExampleTest.answerVsDelegate":13,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":475,"org.easymock.tests2.UsageConstraintsTest.testNull":124,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":266,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":33,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":395,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":156,"org.easymock.tests2.CaptureTest.testPrimitive":231,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":324,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":469,"org.easymock.tests.UsageTest.moreThanOneArgument":330,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":32,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":382,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":307,"org.easymock.tests.UsageTest.argumentsOrdered":336,"org.easymock.tests.UsageVarargTest.varargIntAccepted":274,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":441,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":243,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":500,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":211,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":74,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":89,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":218,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":428,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":247,"org.easymock.tests.ReplayStateInvalidUsageTest.times":404,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":204,"org.easymock.tests2.DependencyTest.testClassMocking":47,"org.easymock.tests2.AnswerTest.answer":54,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":129,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":443,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":29,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":472,"org.easymock.tests2.CaptureTest.testAnd":228,"org.easymock.tests2.UsageTest.strictResetToDefault":106,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":41,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":215,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":381,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":151,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":250,"org.easymock.tests2.DelegateToTest.testDelegate":104,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":311,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":465,"org.easymock.tests.LimitationsTest.mockFinalMethod":341,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":256,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":358,"org.easymock.tests2.DependencyTest.testClassMockingSupport":48,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":484,"org.easymock.tests2.CaptureTest.testCapture1_2446744":232,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":37,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":463,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":27,"org.easymock.tests.UsageThrowableTest.throwError":417,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":398,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":474,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":425,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":90,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":384,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":198,"org.easymock.samples.PartialClassMockTest.testGetArea":11,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":399,"org.easymock.tests.MockingTest.testInterfaceMocking":263,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":244,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":409,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":483,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":451,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":185,"org.easymock.tests2.UsageTest.niceToStrict":109,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":426,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":217,"org.easymock.tests2.MockBuilderTest.testCreateMock":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":193,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":207,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":459,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":152,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":471,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":416,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":342,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":268,"org.easymock.tests.UsageOverloadedMethodTest.overloading":352,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":195,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":134,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":315,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":297,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":351,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":133,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":237,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":275,"org.easymock.tests.MockClassControlTest.testEquals":394,"org.easymock.tests2.EasyMockSupportClassTest.testAll":177,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":361,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":467,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":28,"org.easymock.tests2.CaptureTest.testCaptureAll":229,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":356,"org.easymock.tests.MockNameTest.defaultName":306,"org.easymock.tests2.UsageConstraintsTest.testMatches":135,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":396,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":383,"org.easymock.samples.ExampleTest.voteForRemovals":17,"org.easymock.tests.UsageVarargTest.allKinds":283,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":3,"org.easymock.samples.BasicClassMockTest.testPrintContent":10,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":357,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":423,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":160,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":103,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":86,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":257,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":496,"org.easymock.tests2.UsageConstraintsTest.greaterThan":137,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":371,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":178,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":249,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":44,"org.easymock.samples.ExampleTest.voteForRemoval":14,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":372,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":45,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":65,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":476,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":75,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":36,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":105,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":319,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":433,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":149,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":419,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":175,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":252,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":99,"org.easymock.tests2.CaptureTest.testCaptureFirst":241,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":432,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":150,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":117,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":318,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":293,"org.easymock.tests2.UsageTest.moreThanOneArgument":107,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":67,"org.easymock.tests2.CaptureTest.testCapture2_2446744":240,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":444,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":225,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":282,"org.easymock.tests.GenericTest.testBridgedEquals":363,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":349,"org.easymock.tests.UsageExpectAndReturnTest.longType":289,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":147,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":354,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":468,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":142,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":325,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":466,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":412,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":380,"org.easymock.tests.UsageCallCountTest.tooManyCalls":350,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":344,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":194,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":294,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":209,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":455,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":422,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":166,"org.easymock.tests.MockingTest.testNiceClassMocking":267,"org.easymock.tests.MockingTest.testClassMocking":259,"org.easymock.tests2.UsageConstraintsTest.testContains":132,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":343,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":62,"org.easymock.tests2.UsageConstraintsTest.testFind":123,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":353,"org.easymock.tests.MockTypeTest.fromEasyMockClass":473,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":53,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":373,"org.easymock.tests.UsageExpectAndReturnTest.object":296,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":38,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":208,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":155,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":493,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":277,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":481,"org.easymock.tests.UsageTest.exactCallCountByLastCall":337,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":431,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":385,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":308,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":97,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":272,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":302,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":314,"org.easymock.tests.MockClassControlTest.testHashCode":393,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":80,"org.easymock.tests2.EasyMockSupportTest.testVerify":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":187,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":309,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":415,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":312,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":26,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":71,"org.easymock.tests.UsageVarargTest.varargCharAccepted":276,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":364,"org.easymock.tests2.CaptureTest.testCaptureMultiple":489,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":161,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":449,"org.easymock.tests2.UsageTest.openCallCountByLastCall":111,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":158,"org.easymock.tests.DefaultClassInstantiatorTest.object":365,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":414,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":479,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":457,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":188,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":420,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":202,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":79,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":392,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":42,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":456,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":303,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":411,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":391,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":196,"org.easymock.tests2.UsageTest.resumeIfFailure":116,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":470,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":73,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":255,"org.easymock.tests2.StubTest.stubWithReturnValue":70,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":220,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":143,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":295,"org.easymock.tests2.SerializationTest.testAllMockedMethod":25,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":442,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":497,"org.easymock.samples.SupportTest.voteForRemovals":8,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":359,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":82,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":462,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":448,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":55,"org.easymock.tests.UsageExpectAndThrowTest.object":460,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":387,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":140,"org.easymock.tests2.DelegateToTest.testWrongClass":102,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":327,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":328,"org.easymock.tests.UsageStrictMockTest.range":4,"org.easymock.samples.ConstructorCalledMockTest.testTax":21,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":77,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":154,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":165,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":461,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":219,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":174,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":335,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":269,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":410,"org.easymock.tests2.CaptureTest.testCaptureNone":236,"org.easymock.tests.UsageUnorderedTest.message":326,"org.easymock.tests.UsageVerifyTest.twoReturns":285,"org.easymock.tests.UsageVarargTest.varargByteAccepted":281,"org.easymock.tests2.ThreadingTest.testThreadSafe":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":191,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":347,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":482,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":9,"org.easymock.tests2.CaptureTest.testCapture_2617107":230,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":486,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":446,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":323,"org.easymock.tests2.UsageConstraintsTest.any":130,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":403,"org.easymock.tests2.StubTest.stub":69,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":413,"org.easymock.tests.UsageExpectAndThrowTest.longType":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":447,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":254,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":369,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":402,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":163,"org.easymock.tests2.SerializationTest.testClass":23,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":84,"org.easymock.tests.LimitationsTest.mockNativeMethod":340,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":305,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":362,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":201,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":164,"org.easymock.tests2.NameTest.nameForMocksControl":95,"org.easymock.tests2.MockedExceptionTest.testMockedException":61,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":203,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":179,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":334,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":454,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":52,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":264,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":30,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":221,"org.easymock.tests.MockingTest.testNicePartialClassMocking":262,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":35,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":498,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":199,"org.easymock.tests2.CaptureTest.testCaptureLast":235,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":485,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":172,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":127,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":141,"org.easymock.tests.MockingTest.testTwoMocks":260,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":173,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":286,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":458,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":114,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":145,"org.easymock.samples.ExampleTest.removeNonExistingDocument":18,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":400,"org.easymock.tests.UsageStrictMockTest.differentMethods":5,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":206,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":81,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":367,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":66,"org.easymock.tests2.MockBuilderTest.testCreateMockString":227,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":388,"org.easymock.tests.UsageExpectAndThrowTest.floatType":452,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":181,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":176,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":57,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":98,"org.easymock.tests.UsageVerifyTest.twoThrows":284,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":190,"org.easymock.samples.ExampleTest.voteAgainstRemoval":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":437,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":408,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":43,"org.easymock.tests.LimitationsTest.privateConstructor":339,"org.easymock.tests2.UsageConstraintsTest.testNotNull":144,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":424,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":60,"org.easymock.tests2.UsageTest.defaultResetToNice":113,"org.easymock.samples.ExampleTest.voteAgainstRemovals":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":438,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":301,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":200,"org.easymock.tests.UsageVarargTest.differentLength":278,"org.easymock.tests2.CallbackTest.callback":242,"org.easymock.tests2.UsageConstraintsTest.equals":122,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":39,"org.easymock.tests.UsageTest.openCallCountByLastCall":333,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":118,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":322,"org.easymock.tests.UsageCallCountTest.tooFewCalls":345,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":168,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":271,"org.easymock.tests.UsageThrowableTest.throwCheckedException":421,"org.easymock.tests.MockingTest.testStrictClassMocking":258,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":488,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":171,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":167,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":205,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":405,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":170,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":59,"org.easymock.tests.ObjectMethodsTest.testHashCode":480,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":499,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":68,"org.easymock.tests2.NameTest.nameForNiceMock":94,"org.easymock.tests2.DependencyTest.testInterfaceMocking":49,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":494,"org.easymock.samples.ExampleTest.addDocument":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":192,"org.easymock.tests2.DelegateToTest.testStubDelegate":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":197,"org.easymock.tests2.AnswerTest.stubAnswer":58,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":376,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":222,"org.easymock.tests.UsageVarargTest.varargLongAccepted":280,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":378,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":435,"org.easymock.tests.UsageExpectAndReturnTest.floatType":288,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":304,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":96,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":22,"org.easymock.tests.UsageThrowableTest.noUpperLimit":418,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":138,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":88,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":316,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":119,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":72,"org.easymock.tests2.SerializationTest.test":24,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":233,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":366,"org.easymock.tests2.UsageConstraintsTest.testSame":125,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":287,"org.easymock.samples.SupportTest.addDocument":7,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":169,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":182,"org.easymock.tests.GenericTest.testPackageScope":360,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":430,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":87,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":265,"org.easymock.tests2.NameTest.nameForMock":92,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":298,"org.easymock.tests2.UsageStrictMockTest.differentMethods":2,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":226,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":40,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":290,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":464,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":478,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":251,"org.easymock.tests2.MockedExceptionTest.testRealException":63,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":477,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":440,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":78,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":439,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":162,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":407,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":321,"org.easymock.tests2.NameTest.nameForStrictMock":93,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":216,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":51,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":34,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":76,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":139,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":368,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":213,"org.easymock.tests2.UsageStrictMockTest.range":1,"org.easymock.tests2.UsageConstraintsTest.lessThan":146,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":83,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":495,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":434,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":186,"org.easymock.tests2.CaptureTest.testCaptureRightOne":238,"org.easymock.tests2.UsageConstraintsTest.testOr":126,"org.easymock.tests.UsageRangeTest.combination":248,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":31,"org.easymock.tests.UsageTest.wrongArguments":332,"org.easymock.tests2.MockBuilderTest.testWithConstructor":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":183,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":389,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":291,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":427,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":299,"org.easymock.tests.UsageVarargTest.varargShortAccepted":279,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":370,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":348,"org.easymock.tests2.UsageConstraintsTest.cmpTo":131,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":56,"org.easymock.tests2.CompareToTest.testLessThan":501,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":429,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":112,"org.easymock.tests2.CaptureTest.testCaptureFromStub":239,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":397,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":214,"org.easymock.tests.UsageTest.unexpectedCallWithArray":331,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":375,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":346,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":300,"org.easymock.tests2.CaptureTest.testCapture":490,"org.easymock.tests2.UsageConstraintsTest.constraints":120,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":377,"org.easymock.samples.ExampleTest.addAndChangeDocument":19,"org.easymock.tests.UsageStrictMockTest.testVerify":379,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":20,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":374,"org.easymock.tests2.CompareToTest.testGreateThan":491,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":355,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":234,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":245,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":292,"org.easymock.tests.LimitationsTest.abstractClass":338,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":246,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":317,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":153,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":273}}]
