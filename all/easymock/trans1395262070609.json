[{"position":"org.easymock.internal.ReflectionUtils:184","failures":[0,1,2,3,4,5,6,7,8],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,21,22,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,0,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,6,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,7,175,8,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1107","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[96],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[130,149,152,174,304,305,306,334,484,458],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"proxy":"proxy"}},{"transplant":{"position":"org.easymock.EasyMock:1026","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[78,79,278,294,295],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"this.org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[181,410],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[84,89,92],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[9,10,12,15,17,21,21,22,22,27,28,29,30,31,32,33,35,38,39,40,41,44,54,61,62,63,64,67,68,74,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,109,115,123,124,125,127,6,128,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,165,166,172,173,174,175,176,177,179,180,184,185,186,187,188,189,190,192,193,194,195,196,197,198,199,202,203,208,209,210,211,216,219,229,235,242,243,244,245,246,247,248,249,250,251,253,262,278,279,280,284,285,286,287,288,289,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,315,317,318,319,320,322,323,324,325,328,330,331,332,335,336,337,338,339,340,341,346,351,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,377,378,380,384,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,450,451,452,453,454,463,465,466,467,468,469,470,471,472,473,474,475],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:50","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"finalize\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:174","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:217","failures":[9,10,11,12,13,14,16,17,18,19,20,23,24,25,27,28,29,30,31,32,35,40,44,54,63,67,68,75,76,77,78,79,80,84,87,90,91,93,94,96,99,102,103,104,105,106,107,115,123,125,127,6,128,129,134,135,136,137,138,139,140,142,143,144,145,146,147,148,149,150,151,152,153,154,158,159,172,174,175,180,183,186,187,189,190,191,195,196,198,199,200,201,202,204,205,206,207,208,209,212,216,219,229,235,241,247,248,262,263,266,267,268,270,271,273,274,275,276,277,279,280,290,291,292,293,294,295,296,298,314,315,317,319,320,322,324,325,326,327,335,348,349,350,352,353,356,357,359,364,369,377,378,380,384,385,386,387,388,389,390,391,430,431,433,438,443,463,468,471,472,473],"status":-1,"binaryOperator":"(boolean) && ((org.easymock.internal.Result) == null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[90],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:986","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[104],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.Capture:83","failures":[485],"status":-1,"binaryOperator":"(\"More than one value captured: \" + org.easymock.Capture<T>.(getValues()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[83,84,87,89,90,92,102,107,199,201,209],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:337","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[400,416,420],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:280","failures":[10,123,124,125,127,319],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MocksControl:189","failures":[33,38,54,74,77,78,79,83,115,136,138,139,141,142,160,161,162,163,166,173,174,175,177,179,186,189,190,191,194,195,196,198,242,243,244,245,246,279,280,289,291,293,294,295,310,311,312,313,335,465,467,468,471,472,473],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,0,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,6,128,129,130,486,487,488,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,489,151,152,153,490,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,7,175,491,8,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,484,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,492,493,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"qualifier","key":"qualifier"}},{"position":"org.easymock.internal.ArgumentToString:34","failures":[494,495,496,497,498,499,500,501,502,503,504,76,78,79,99,188,189,195,196,505,506,507,508,509,510,511,278,279,280,291,292,294,295,314,315,318,321,322,323,335,466,467,468,471,472],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[17,19,20,21,21,22,22,27,28,30,31,32,33,35,38,39,40,41,44,63,512,513,514,6,129,147,148,149,150,152,153,166,515,168,169,172,173,174,175,176,177,516,179,216,219,229,235,241,262,263,264,303,376,377,378,380,455,458,463],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:127","sourceCode":"try {\n    java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1249","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[426],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[184,185],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.ReflectionUtils:93","failures":[17,19,20,21,21,22,22,27,28,30,31,32,33,35,38,39,40,41,44,63,512,513,514,6,129,147,148,149,150,152,153,166,515,168,169,172,173,174,175,176,177,516,179,216,219,229,235,241,262,263,264,303,376,377,378,380,455,458,463],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[517,518,519],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"injection":"injection"}},{"transplant":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:171","sourceCode":"net.sf.cglib.proxy.Enhancer.setCallbackType(org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.getClass())","type":"CtInvocationImpl"},"failures":[17,19,20,21,21,22,22,27,28,30,31,32,33,35,36,37,38,39,40,41,42,43,44,0,61,62,63,6,129,130,131,147,148,149,150,152,153,166,168,169,171,172,173,174,175,8,176,177,179,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,241,253,254,255,256,257,258,260,261,262,263,264,265,302,303,304,305,306,307,308,309,374,375,376,377,378,380,383,455,458,461,462,463,464],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MocksControl:105","failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,21,22,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,0,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,6,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,171,172,173,174,175,8,176,177,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,253,254,255,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483],"status":-1,"binaryOperator":"(java.lang.Class<T>.isInterface()) && (java.lang.reflect.Method[] != null)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Same:37","failures":[88],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1177","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[476],"status":-1,"binaryOperator":"(int >= 1)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:127","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[6,128,129],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:54","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[495,500,502,504,188,189,195,196,505,507,510,291,466,467,468,471,472],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"toStringMethod","method":"toStringMethod"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,21,22,22,23,24,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,0,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,6,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,171,172,173,174,175,8,176,177,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,253,254,255,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[520],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"o":"actual","this":"actual"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:159","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method)","type":"CtLocalVariableImpl"},"failures":[261],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:189","failures":[74,77,78,79,83,177,179,186,189,191,195,196,198,279,280,289,291,293,294,295,335,465,467,468,471,472,473],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[78,79,82,83,86,88,89,95,98,101,108,192,193,249,278,294,295,298,347,385,405,469,470,477,478],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[87,92,102,107],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[495,502,505,507,291,467],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if (org.easymock.ConstructorArgs == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"this"}},{"position":"org.easymock.internal.MockBuilder:205","failures":[17,21,22,33,36,39,40,43,44,0,45,61,6,166,167,168,169,170,171,172,173,174,7,175,491,8,176,177,178,179,219,229,235,261,264,455,458],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":84,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":465,"org.easymock.tests2.UsageTest.argumentsOrdered":196,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":144,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":55,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":414,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":191,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":25,"org.easymock.tests2.DelegateToTest.testReturnException":123,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":337,"org.easymock.tests.MockingTest.testPartialClassMocking":377,"org.easymock.tests.MockClassControlTest.testToString":304,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":69,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":239,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":423,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":223,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":219,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":354,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":68,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":1,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":91,"org.easymock.tests2.UsageTest.wrongArguments":189,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":324,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":121,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":312,"org.easymock.samples.ExampleTest.answerVsDelegate":10,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":458,"org.easymock.tests2.UsageConstraintsTest.testNull":87,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":382,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":30,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":143,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":309,"org.easymock.tests2.CaptureTest.testPrimitive":202,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":328,"org.easymock.tests.UsageTest.moreThanOneArgument":466,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":373,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":29,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":286,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":476,"org.easymock.tests.UsageTest.argumentsOrdered":472,"org.easymock.tests.UsageVarargTest.varargIntAccepted":268,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":503,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":419,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":450,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":166,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":5,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":487,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":59,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":173,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":406,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":454,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":498,"org.easymock.tests.ReplayStateInvalidUsageTest.times":400,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":115,"org.easymock.tests2.DependencyTest.testClassMocking":65,"org.easymock.tests2.AnswerTest.answer":180,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":92,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":421,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":163,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":493,"org.easymock.tests2.CaptureTest.testAnd":199,"org.easymock.tests2.UsageTest.strictResetToDefault":187,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":170,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":38,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":285,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":138,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":300,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":480,"org.easymock.tests2.DelegateToTest.testDelegate":127,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":369,"org.easymock.tests.LimitationsTest.mockFinalMethod":464,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":340,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":246,"org.easymock.tests2.DependencyTest.testClassMockingSupport":66,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":314,"org.easymock.tests2.CaptureTest.testCapture1_2446744":203,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":34,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":367,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":161,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":394,"org.easymock.tests.UsageThrowableTest.throwError":384,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":457,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":484,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":60,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":288,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":237,"org.easymock.samples.PartialClassMockTest.testGetArea":17,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":395,"org.easymock.tests.MockingTest.testInterfaceMocking":379,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":451,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":482,"org.easymock.tests2.UsageTest.niceToStrict":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":224,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":334,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":355,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":404,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":172,"org.easymock.tests2.MockBuilderTest.testCreateMock":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":232,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":118,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":495,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":363,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":139,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":492,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":344,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":345,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":310,"org.easymock.tests.UsageOverloadedMethodTest.overloading":248,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":234,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":97,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":320,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":439,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":247,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":96,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":208,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":269,"org.easymock.tests2.EasyMockSupportClassTest.testAll":216,"org.easymock.tests.MockClassControlTest.testEquals":308,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":263,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":500,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":371,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":512,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":162,"org.easymock.tests2.CaptureTest.testCaptureAll":200,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":244,"org.easymock.tests.MockNameTest.defaultName":448,"org.easymock.tests2.UsageConstraintsTest.testMatches":98,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":392,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":287,"org.easymock.samples.ExampleTest.voteForRemovals":14,"org.easymock.tests.UsageVarargTest.allKinds":277,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":278,"org.easymock.samples.BasicClassMockTest.testPrintContent":20,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":245,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":390,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":74,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":126,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":56,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":341,"org.easymock.tests2.UsageConstraintsTest.greaterThan":100,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":217,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":299,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":41,"org.easymock.samples.ExampleTest.voteForRemoval":11,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":260,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":156,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":42,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":459,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":488,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":33,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":186,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":241,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":411,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":136,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":386,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":214,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":336,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":122,"org.easymock.tests2.CaptureTest.testCaptureFirst":212,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":410,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":137,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":198,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":323,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":435,"org.easymock.tests2.UsageTest.moreThanOneArgument":188,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":158,"org.easymock.tests2.CaptureTest.testCapture2_2446744":211,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":422,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":177,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":276,"org.easymock.tests.GenericTest.testBridgedEquals":265,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":352,"org.easymock.tests.UsageExpectAndReturnTest.longType":431,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":134,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":242,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":516,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":372,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":449,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":105,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":370,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":282,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":284,"org.easymock.tests.UsageCallCountTest.tooManyCalls":353,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":506,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":233,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":436,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":120,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":359,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":389,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":148,"org.easymock.tests.MockingTest.testNiceClassMocking":383,"org.easymock.tests.MockingTest.testClassMocking":375,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":515,"org.easymock.tests2.UsageConstraintsTest.testContains":95,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":346,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":63,"org.easymock.tests2.UsageConstraintsTest.testFind":86,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":249,"org.easymock.tests.MockTypeTest.fromEasyMockClass":456,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":48,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":289,"org.easymock.tests.UsageExpectAndReturnTest.object":438,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":35,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":119,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":142,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":2,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":271,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":332,"org.easymock.tests.UsageTest.exactCallCountByLastCall":473,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":250,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":409,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":477,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":238,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":510,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":0,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":444,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":266,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":319,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":50,"org.easymock.tests.MockClassControlTest.testHashCode":307,"org.easymock.tests2.EasyMockSupportTest.testVerify":146,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":226,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":497,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":478,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":317,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":343,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":160,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":26,"org.easymock.tests.UsageVarargTest.varargCharAccepted":270,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":252,"org.easymock.tests2.CaptureTest.testCaptureMultiple":485,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":75,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":427,"org.easymock.tests2.UsageTest.openCallCountByLastCall":192,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":145,"org.easymock.tests.DefaultClassInstantiatorTest.object":253,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":342,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":330,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":511,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":227,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":361,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":387,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":113,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":49,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":39,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":306,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":360,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":445,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":281,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":499,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":235,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":305,"org.easymock.tests2.UsageTest.resumeIfFailure":197,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":455,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":486,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":339,"org.easymock.tests2.StubTest.stubWithReturnValue":165,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":7,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":437,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":106,"org.easymock.tests2.SerializationTest.testAllMockedMethod":129,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":420,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":502,"org.easymock.samples.SupportTest.voteForRemovals":24,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":261,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":52,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":366,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":426,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":181,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":240,"org.easymock.tests.UsageExpectAndThrowTest.object":364,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":103,"org.easymock.tests2.DelegateToTest.testWrongClass":125,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":474,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":475,"org.easymock.samples.ConstructorCalledMockTest.testTax":21,"org.easymock.tests.UsageStrictMockTest.range":294,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":132,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":141,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":147,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":365,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":174,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":471,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":402,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":213,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":311,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":505,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":483,"org.easymock.tests2.CaptureTest.testCaptureNone":207,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":518,"org.easymock.tests.UsageUnorderedTest.message":335,"org.easymock.tests.UsageVerifyTest.twoReturns":280,"org.easymock.tests.UsageVarargTest.varargByteAccepted":275,"org.easymock.tests2.ThreadingTest.testThreadSafe":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":230,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":350,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":19,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":333,"org.easymock.tests2.CaptureTest.testCapture_2617107":201,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":504,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":316,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":424,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":327,"org.easymock.tests2.UsageConstraintsTest.any":93,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":399,"org.easymock.tests2.StubTest.stub":164,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":283,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":425,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":338,"org.easymock.tests.UsageExpectAndThrowTest.longType":357,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":257,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":398,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":77,"org.easymock.tests2.SerializationTest.testClass":6,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":54,"org.easymock.tests.LimitationsTest.mockNativeMethod":463,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":447,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":264,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":514,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":112,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":80,"org.easymock.tests2.NameTest.nameForMocksControl":73,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":114,"org.easymock.tests2.MockedExceptionTest.testMockedException":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":218,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":470,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":47,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":358,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":380,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":27,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":175,"org.easymock.tests.MockingTest.testNicePartialClassMocking":378,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":32,"org.easymock.tests2.CompareToTest.testNotComparable":520,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":110,"org.easymock.tests2.CaptureTest.testCaptureLast":206,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":315,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":153,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":90,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":104,"org.easymock.tests.MockingTest.testTwoMocks":376,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":490,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":428,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":362,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":195,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":108,"org.easymock.samples.ExampleTest.removeNonExistingDocument":15,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":396,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":117,"org.easymock.tests.UsageStrictMockTest.differentMethods":295,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":51,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":519,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":255,"org.easymock.tests2.ConstraintsToStringTest.andToString":501,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":157,"org.easymock.tests2.MockBuilderTest.testCreateMockString":179,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":220,"org.easymock.tests.UsageExpectAndThrowTest.floatType":356,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":215,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":183,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":45,"org.easymock.tests.UsageVerifyTest.twoThrows":279,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":229,"org.easymock.samples.ExampleTest.voteAgainstRemoval":12,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":481,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":415,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":40,"org.easymock.tests.LimitationsTest.privateConstructor":462,"org.easymock.tests2.UsageConstraintsTest.testNotNull":107,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":391,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":61,"org.easymock.tests2.UsageTest.defaultResetToNice":194,"org.easymock.samples.ExampleTest.voteAgainstRemovals":9,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":443,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":416,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":111,"org.easymock.tests.UsageVarargTest.differentLength":272,"org.easymock.tests2.CallbackTest.callback":154,"org.easymock.tests2.UsageConstraintsTest.equals":85,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":508,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":36,"org.easymock.tests.UsageTest.openCallCountByLastCall":469,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":81,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":326,"org.easymock.tests.UsageCallCountTest.tooFewCalls":348,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":150,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":313,"org.easymock.tests.UsageThrowableTest.throwCheckedException":388,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":507,"org.easymock.tests.MockingTest.testStrictClassMocking":374,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":152,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":251,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":149,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":116,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":401,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":151,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":185,"org.easymock.tests.ObjectMethodsTest.testHashCode":331,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":4,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":159,"org.easymock.tests2.NameTest.nameForNiceMock":72,"org.easymock.tests2.DependencyTest.testInterfaceMocking":67,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":3,"org.easymock.samples.ExampleTest.addDocument":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":231,"org.easymock.tests2.DelegateToTest.testStubDelegate":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":236,"org.easymock.tests2.AnswerTest.stubAnswer":184,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":292,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":491,"org.easymock.tests.UsageVarargTest.varargLongAccepted":274,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":296,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":413,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":446,"org.easymock.tests.UsageExpectAndReturnTest.floatType":430,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":44,"org.easymock.tests2.ConstraintsToStringTest.orToString":494,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":22,"org.easymock.tests.UsageThrowableTest.noUpperLimit":385,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":101,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":58,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":321,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":82,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":130,"org.easymock.tests2.SerializationTest.test":128,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":204,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":254,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":429,"org.easymock.tests2.UsageConstraintsTest.testSame":88,"org.easymock.samples.SupportTest.addDocument":23,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":489,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":221,"org.easymock.tests.GenericTest.testPackageScope":262,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":479,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":408,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":57,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":381,"org.easymock.tests2.NameTest.nameForMock":70,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":440,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":178,"org.easymock.tests2.UsageStrictMockTest.differentMethods":79,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":37,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":432,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":368,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":329,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":301,"org.easymock.tests2.MockedExceptionTest.testRealException":64,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":460,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":418,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":133,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":509,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":417,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":76,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":403,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":325,"org.easymock.tests2.NameTest.nameForStrictMock":71,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":171,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":46,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":31,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":131,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":102,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":256,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":168,"org.easymock.tests2.UsageStrictMockTest.range":78,"org.easymock.tests2.UsageConstraintsTest.lessThan":109,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":53,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":412,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":135,"org.easymock.tests2.CaptureTest.testCaptureRightOne":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":225,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":517,"org.easymock.tests2.UsageConstraintsTest.testOr":89,"org.easymock.tests.UsageRangeTest.combination":298,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":28,"org.easymock.tests.UsageTest.wrongArguments":468,"org.easymock.tests2.MockBuilderTest.testWithConstructor":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":222,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":303,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":433,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":441,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":405,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":258,"org.easymock.tests.UsageVarargTest.varargShortAccepted":273,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":351,"org.easymock.tests2.UsageConstraintsTest.cmpTo":94,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":182,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":407,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":193,"org.easymock.tests2.CaptureTest.testCaptureFromStub":210,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":393,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":169,"org.easymock.tests.UsageTest.unexpectedCallWithArray":467,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":291,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":349,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":442,"org.easymock.tests2.UsageConstraintsTest.constraints":83,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":293,"org.easymock.samples.ExampleTest.addAndChangeDocument":16,"org.easymock.tests2.ConstraintsToStringTest.notToString":496,"org.easymock.tests.UsageStrictMockTest.testVerify":297,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":18,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":290,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":243,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":205,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":513,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":452,"org.easymock.tests.LimitationsTest.abstractClass":461,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":434,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":453,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":322,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":140,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":267}}]
