[{"position":"org.easymock.internal.ArgumentToString:89","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[49,50,51,52,45],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"failures":[53],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[54,55,56,57,58],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[3,59,21],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"mock"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[60,1,3,4,5,61,11,62,63,64,65,66,67,68,69,70,71,72,73,74,23,24,25,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,28,29,30,90,91,92,33,34,35,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,45,46,47,48,108],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"position":"org.easymock.EasyMock:1107","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:131","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"))","type":"CtThrowImpl"},"failures":[109],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:40","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(double.double, java.lang.Double.java.lang.Double)","type":"CtInvocationImpl"},"failures":[110],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[111,112,60,113],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:233","failures":[114,111,112,60,115,116,117,118,119,120,121,122,123,124,0,125,126,1,2,3,127,128,129,4,5,6,7,130,8,131,61,132,9,10,133,134,11,62,63,64,12,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,13,65,153,154,15,155,66,67,156,157,68,69,70,71,158,159,160,161,72,162,17,163,164,59,165,166,18,167,19,168,169,20,170,171,172,173,174,175,176,177,178,179,180,181,182,183,21,184,185,186,187,188,73,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,22,74,209,23,24,25,75,76,77,78,79,210,80,81,82,83,84,85,211,211,212,212,213,86,87,214,215,216,217,218,219,220,221,222,223,224,88,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,89,26,247,28,248,249,29,30,31,250,251,252,253,254,90,91,92,33,34,255,256,257,258,259,35,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,95,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,96,97,98,99,100,36,101,102,103,104,105,321,106,322,323,37,38,324,325,326,327,328,329,330,331,332,333,334,335,43,336,337,338,44,107,45,339,46,47,48,108,340,341,342,343,344,345],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1445","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","delegateTo":"delegateTo"}},{"position":"org.easymock.internal.LastControl:95","failures":[155,67,159,20,170,172,174,175,177,186,190],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[346,347,348,349,350,114,351,352,353,354,355,356,111,112,60,357,358,359,360,115,116,117,118,119,120,361,362,121,122,123,363,124,0,125,126,1,2,3,127,128,129,4,5,6,7,364,365,366,367,368,369,370,130,8,131,61,132,9,10,133,134,11,62,63,64,12,135,136,137,138,371,139,140,141,372,142,373,374,375,376,377,143,378,379,144,380,381,382,383,384,385,386,387,388,145,389,390,391,392,393,146,394,395,396,147,148,149,150,151,152,397,398,13,399,400,401,65,402,153,403,154,404,405,14,15,406,16,407,155,66,67,156,157,68,69,70,71,158,159,160,161,72,162,17,163,164,59,165,408,109,166,409,410,411,18,167,19,412,413,168,169,20,170,53,171,172,173,174,175,176,177,178,179,180,181,182,183,21,184,185,186,187,188,73,189,190,191,192,193,194,195,196,414,415,416,417,418,197,419,420,421,422,423,424,198,199,200,201,202,203,204,205,206,207,208,22,74,209,23,24,25,75,76,77,78,79,210,80,81,82,83,425,84,85,211,212,213,86,87,214,215,216,217,218,219,220,221,426,427,428,429,222,223,224,88,225,226,430,431,432,433,434,435,436,437,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,89,26,247,27,28,248,249,29,30,31,250,251,252,253,438,254,90,91,92,32,33,34,255,256,257,258,259,35,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,260,463,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,93,94,464,281,95,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,465,314,466,467,468,469,470,471,472,315,316,317,318,319,320,96,97,98,473,99,100,36,101,102,103,104,105,474,321,106,322,475,476,477,478,479,480,481,482,483,323,37,38,324,325,326,327,328,329,484,330,331,485,332,486,333,334,335,40,487,488,489,490,491,43,336,337,338,44,107,45,339,46,47,48,108,340,492,493,494,341,342,495,343,496,497,498,499,344,345,500,501],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[1,4,5,24,27,28,29,30,35,37,38,486,42,45,47],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Any:40","sourceCode":"java.lang.StringBuffer.append(\"<any>\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[49,50,27,51,52,45],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:39","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Float.java.lang.Class<java.lang.Float>.getName(), java.lang.Float.java.lang.Class<java.lang.Float>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[111,112,60,113],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[49,50,27,51,52,45],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[111,112,60,113],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:142","sourceCode":"return true","type":"CtReturnImpl"},"failures":[475],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:946","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:83","sourceCode":"return (int) == (java.lang.Integer.int)","type":"CtReturnImpl"},"failures":[115,119,0,126,1,127,128,4,5,7,12,147,148,149,150,152,66,67,157,68,69,70,71,72,172,178,21,190,200,209,23,24,25,221,224,226,26,247,28,248,249,29,30,31,35,282,319,105,323,37,38,45,339,46,47,48],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"maximum"}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[115],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2123","sourceCode":"final org.easymock.internal.Invocation org.easymock.internal.Invocation = org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:324","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    if (java.lang.reflect.Type == null) {\n        java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n    } \n    if (java.lang.reflect.Type != null) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[111,142,373,403,405,502,503,504,505,110],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:160","sourceCode":"if (boolean) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:217","sourceCode":"if ((boolean) && ((org.easymock.internal.Result) == null)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[115,0,7,209,31,282,37,38,339],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[346,347,348,349,350,114,351,352,353,354,355,356,111,112,60,357,358,359,360,115,116,117,118,119,120,361,362,121,122,123,363,124,0,125,126,1,2,3,127,128,129,4,5,6,7,364,365,366,367,368,369,370,130,8,131,61,132,9,10,133,134,11,62,63,64,12,135,136,137,138,371,139,140,141,372,142,373,374,375,376,377,143,378,379,144,380,381,382,383,384,385,386,387,388,145,389,390,391,392,393,146,394,395,396,147,148,149,150,151,152,397,398,13,399,400,401,65,402,153,403,154,404,405,14,15,406,16,407,155,66,67,156,157,68,69,70,71,158,159,160,161,72,162,17,163,164,59,165,408,109,166,409,410,411,18,167,19,412,413,168,169,20,170,53,171,172,173,174,175,176,177,178,179,180,181,182,183,21,184,185,186,187,188,73,189,190,191,192,193,194,195,196,414,415,416,417,418,197,419,420,421,422,423,424,198,199,200,201,202,203,204,205,206,207,208,22,74,209,23,24,25,75,76,77,78,79,210,80,81,82,83,425,84,85,211,212,213,86,87,214,215,216,217,218,219,220,221,426,427,428,429,222,223,224,88,225,226,430,431,432,433,434,435,436,437,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,89,26,247,27,28,248,249,29,30,31,250,251,252,253,438,254,90,91,92,32,33,34,255,256,257,258,259,35,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,260,463,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,93,94,464,281,95,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,465,314,466,467,468,469,470,471,472,315,316,317,318,319,320,96,97,98,473,99,100,36,101,102,103,104,105,474,321,106,322,475,476,477,478,479,480,481,482,483,323,37,38,324,325,326,327,328,329,484,330,331,485,332,486,333,334,335,40,487,488,489,490,491,43,336,337,338,44,107,45,339,46,47,48,108,340,492,493,494,341,342,495,343,496,497,498,499,344,345,500,501],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1999","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Character>(org.easymock.Capture<java.lang.Character>))","type":"CtInvocationImpl"},"failures":[156],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"failures":[444,506,507],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[508,509,510],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[296],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1277","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:853","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:572","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"failures":[253,450,452,454,456,458,460],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[181,105,45],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"expected","this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[114,111,112,60,357,358,359,360,115,118,119,120,121,122,123,124,0,125,126,1,2,3,127,128,129,4,5,6,7,130,8,131,61,132,9,10,133,134,11,62,63,64,12,135,136,137,138,139,140,141,142,143,144,145,146,151,152,397,13,65,402,153,154,14,15,16,155,66,67,156,157,68,69,70,71,158,159,160,161,72,162,17,163,164,59,165,408,166,411,18,167,19,168,169,20,170,171,172,173,174,175,176,178,179,180,181,182,183,21,184,185,186,187,188,73,189,190,191,192,193,194,195,196,197,199,200,201,203,204,205,206,207,208,22,74,209,23,24,25,75,76,77,78,79,210,80,81,82,83,84,85,211,212,213,86,87,217,218,219,220,221,426,427,428,429,223,224,88,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,89,26,247,27,28,248,249,29,30,31,254,90,91,92,32,33,34,255,256,257,258,259,35,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,95,282,283,284,285,286,287,288,289,315,316,317,318,319,320,96,97,98,99,100,36,101,102,103,104,105,321,106,323,37,38,324,325,326,327,328,329,330,331,486,487,488,489,490,491,43,337,338,511,511,44,107,45,339,46,47,48,108,341,342,343],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:39","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"failures":[126,1,4,5,49,512,50,513,247,27,28,29,30,51,52,514,45],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[77,79,80,81,83,257],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[412,206,452],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:54","sourceCode":"return java.lang.Object[] == null ? this.java.lang.Object[] : java.lang.Object[]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:94","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.Invocation.NO_ARGS":"initArgs","args":"initArgs"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[474],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"failures":[364,137,140,153,435,472,478,479,480,40],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"proxy":"proxy"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1763","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"failures":[190],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":170,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":26,"org.easymock.tests2.UsageTest.argumentsOrdered":5,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":62,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":419,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":300,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":3,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":78,"org.easymock.tests2.DelegateToTest.testReturnException":199,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":316,"org.easymock.tests.MockingTest.testPartialClassMocking":341,"org.easymock.tests.MockClassControlTest.testToString":478,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":396,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":314,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":413,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":383,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":144,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":261,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":122,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":502,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":176,"org.easymock.tests2.UsageTest.wrongArguments":1,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":223,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":356,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":428,"org.easymock.samples.ExampleTest.answerVsDelegate":210,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":435,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":497,"org.easymock.tests2.UsageConstraintsTest.testNull":172,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":164,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":483,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":11,"org.easymock.tests2.CaptureTest.testPrimitive":156,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":226,"org.easymock.tests.UsageTest.moreThanOneArgument":247,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":280,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":163,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":326,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":499,"org.easymock.tests.UsageTest.argumentsOrdered":30,"org.easymock.tests.UsageVarargTest.varargIntAccepted":98,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":305,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":255,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":397,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":58,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":423,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":366,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":402,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":292,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":259,"org.easymock.tests.ReplayStateInvalidUsageTest.times":457,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":114,"org.easymock.tests2.DependencyTest.testClassMocking":361,"org.easymock.tests2.AnswerTest.answer":115,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":177,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":307,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":360,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":432,"org.easymock.tests2.CaptureTest.testAnd":155,"org.easymock.tests2.UsageTest.strictResetToDefault":125,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":411,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":400,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":325,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":132,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":337,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":501,"org.easymock.tests2.DelegateToTest.testDelegate":203,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":276,"org.easymock.tests.LimitationsTest.mockFinalMethod":463,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":319,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":491,"org.easymock.tests2.DependencyTest.testClassMockingSupport":362,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":93,"org.easymock.tests2.CaptureTest.testCapture1_2446744":157,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":109,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":274,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":358,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":451,"org.easymock.tests.UsageThrowableTest.throwError":281,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":434,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":424,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":40,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":395,"org.easymock.samples.PartialClassMockTest.testGetArea":213,"org.easymock.tests.MockingTest.testInterfaceMocking":495,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":452,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":256,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":215,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":472,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":384,"org.easymock.tests2.UsageTest.niceToStrict":2,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":262,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":510,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":290,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":65,"org.easymock.tests2.MockBuilderTest.testCreateMock":14,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":391,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":353,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":49,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":270,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":9,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":431,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":335,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":253,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":426,"org.easymock.tests.UsageOverloadedMethodTest.overloading":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":388,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":182,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":331,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":219,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":238,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":506,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":181,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":158,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":473,"org.easymock.tests.MockClassControlTest.testEquals":482,"org.easymock.tests2.EasyMockSupportClassTest.testAll":143,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":106,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":512,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":278,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":489,"org.easymock.tests2.CaptureTest.testCaptureAll":66,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":359,"org.easymock.tests.MockNameTest.defaultName":448,"org.easymock.tests2.UsageConstraintsTest.testMatches":183,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":449,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":327,"org.easymock.samples.ExampleTest.voteForRemovals":83,"org.easymock.tests.UsageVarargTest.allKinds":105,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":323,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":490,"org.easymock.samples.BasicClassMockTest.testPrintContent":87,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":286,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":22,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":420,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":202,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":320,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":446,"org.easymock.tests2.UsageConstraintsTest.greaterThan":184,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":378,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":336,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":19,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":447,"org.easymock.samples.ExampleTest.voteForRemoval":80,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":412,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":205,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":436,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":367,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":408,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":0,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":89,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":405,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":297,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":131,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":376,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":315,"org.easymock.tests2.CaptureTest.testCaptureFirst":72,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":198,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":296,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":61,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":7,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":486,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":234,"org.easymock.tests2.CaptureTest.testCapture2_2446744":161,"org.easymock.tests2.UsageTest.moreThanOneArgument":126,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":207,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":308,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":104,"org.easymock.tests.GenericTest.testBridgedEquals":475,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":33,"org.easymock.tests.UsageExpectAndReturnTest.longType":230,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":487,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":130,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":279,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":73,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":222,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":277,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":251,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":324,"org.easymock.tests.UsageCallCountTest.tooManyCalls":34,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":392,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":235,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":355,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":266,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":285,"org.easymock.tests.MockingTest.testNiceClassMocking":498,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":136,"org.easymock.tests.MockingTest.testClassMocking":493,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":438,"org.easymock.tests2.UsageConstraintsTest.testContains":180,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":195,"org.easymock.tests2.UsageConstraintsTest.testFind":171,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":221,"org.easymock.tests.MockTypeTest.fromEasyMockClass":433,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":124,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":44,"org.easymock.tests.UsageExpectAndReturnTest.object":237,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":166,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":354,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":134,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":503,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":100,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":470,"org.easymock.tests.UsageTest.exactCallCountByLastCall":31,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":217,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":295,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":465,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":344,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":514,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":373,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":96,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":243,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":330,"org.easymock.tests.MockClassControlTest.testHashCode":481,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":415,"org.easymock.tests2.EasyMockSupportTest.testVerify":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":386,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":345,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":329,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":334,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":41,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":357,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":407,"org.easymock.tests.UsageVarargTest.varargCharAccepted":99,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":439,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":74,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":313,"org.easymock.tests2.UsageTest.openCallCountByLastCall":127,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":508,"org.easymock.tests.DefaultClassInstantiatorTest.object":440,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":63,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":333,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":468,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":387,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":268,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":283,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":349,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":414,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":480,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":18,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":267,"org.easymock.tests.CapturesMatcherTest.test":511,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":244,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":250,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":479,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":146,"org.easymock.tests2.UsageTest.resumeIfFailure":6,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":430,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":365,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":318,"org.easymock.tests2.StubTest.stubWithReturnValue":152,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":403,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":189,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":236,"org.easymock.tests2.SerializationTest.testAllMockedMethod":60,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":306,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":55,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":50,"org.easymock.samples.SupportTest.voteForRemovals":77,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":474,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":417,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":273,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":113,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":312,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":116,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":466,"org.easymock.tests.UsageExpectAndThrowTest.object":271,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":187,"org.easymock.tests2.DelegateToTest.testWrongClass":201,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":288,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":289,"org.easymock.tests.UsageStrictMockTest.range":47,"org.easymock.samples.ConstructorCalledMockTest.testTax":211,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":369,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":133,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":135,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":272,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":153,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":459,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":375,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":427,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":51,"org.easymock.tests2.CaptureTest.testCaptureNone":71,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":216,"org.easymock.tests.UsageUnorderedTest.message":35,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":39,"org.easymock.tests.UsageVerifyTest.twoReturns":38,"org.easymock.tests.UsageVarargTest.varargByteAccepted":103,"org.easymock.tests2.ThreadingTest.testThreadSafe":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":389,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":92,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":471,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":86,"org.easymock.tests2.CaptureTest.testCapture_2617107":67,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":513,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":464,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":225,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":310,"org.easymock.tests2.UsageConstraintsTest.any":178,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":456,"org.easymock.tests2.StubTest.stub":151,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":252,"org.easymock.tests.UsageExpectAndThrowTest.longType":264,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":311,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":317,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":444,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":455,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":23,"org.easymock.tests2.SerializationTest.testClass":111,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":197,"org.easymock.tests.LimitationsTest.mockNativeMethod":260,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":246,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":322,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":348,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":75,"org.easymock.tests2.NameTest.nameForMocksControl":150,"org.easymock.tests2.MockedExceptionTest.testMockedException":194,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":379,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":249,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":265,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":343,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":363,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":162,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":154,"org.easymock.tests.MockingTest.testNicePartialClassMocking":342,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":165,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":56,"org.easymock.tests2.CaptureTest.testCaptureLast":70,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":346,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":94,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":175,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":141,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":188,"org.easymock.tests.MockingTest.testTwoMocks":494,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":372,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":227,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":269,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":4,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":191,"org.easymock.samples.ExampleTest.removeNonExistingDocument":425,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":453,"org.easymock.tests.UsageStrictMockTest.differentMethods":48,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":352,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":416,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":442,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":206,"org.easymock.tests2.MockBuilderTest.testCreateMockString":16,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":476,"org.easymock.tests.UsageExpectAndThrowTest.floatType":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":380,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":377,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":118,"org.easymock.tests.UsageVerifyTest.twoThrows":37,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":374,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":484,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":145,"org.easymock.samples.ExampleTest.voteAgainstRemoval":81,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":214,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":301,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":167,"org.easymock.tests.LimitationsTest.privateConstructor":462,"org.easymock.tests2.UsageConstraintsTest.testNotNull":190,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":193,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":287,"org.easymock.tests2.UsageTest.defaultResetToNice":129,"org.easymock.samples.ExampleTest.voteAgainstRemovals":79,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":242,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":302,"org.easymock.tests.UsageVarargTest.differentLength":36,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":347,"org.easymock.tests2.CallbackTest.callback":12,"org.easymock.tests2.UsageConstraintsTest.equals":53,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":409,"org.easymock.tests.UsageTest.openCallCountByLastCall":248,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":168,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":88,"org.easymock.tests.UsageCallCountTest.tooFewCalls":90,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":138,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":429,"org.easymock.tests.UsageThrowableTest.throwCheckedException":284,"org.easymock.tests.MockingTest.testStrictClassMocking":492,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":52,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":140,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":218,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":137,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":351,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":458,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":139,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":120,"org.easymock.tests.ObjectMethodsTest.testHashCode":469,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":57,"org.easymock.tests2.NameTest.nameForNiceMock":149,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":208,"org.easymock.tests2.DependencyTest.testInterfaceMocking":121,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":504,"org.easymock.samples.ExampleTest.addDocument":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":394,"org.easymock.tests2.DelegateToTest.testStubDelegate":200,"org.easymock.tests2.AnswerTest.stubAnswer":119,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":339,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":404,"org.easymock.tests.UsageVarargTest.varargLongAccepted":102,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":108,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":299,"org.easymock.tests.UsageExpectAndReturnTest.floatType":229,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":245,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":142,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":212,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":485,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":422,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":185,"org.easymock.tests.UsageThrowableTest.noUpperLimit":95,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":169,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":364,"org.easymock.tests2.SerializationTest.test":112,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":68,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":507,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":441,"org.easymock.tests2.UsageConstraintsTest.testSame":173,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":228,"org.easymock.samples.SupportTest.addDocument":76,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":371,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":454,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":381,"org.easymock.tests.GenericTest.testPackageScope":321,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":500,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":294,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":421,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":496,"org.easymock.tests2.NameTest.nameForMock":147,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":239,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":406,"org.easymock.tests2.UsageStrictMockTest.differentMethods":25,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":410,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":231,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":275,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":467,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":338,"org.easymock.tests2.MockedExceptionTest.testRealException":196,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":437,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":304,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":370,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":54,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":209,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":303,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":460,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":224,"org.easymock.tests2.NameTest.nameForStrictMock":148,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":401,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":509,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":123,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":59,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":368,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":443,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":186,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":13,"org.easymock.tests2.UsageStrictMockTest.range":24,"org.easymock.tests2.UsageConstraintsTest.lessThan":192,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":418,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":505,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":385,"org.easymock.tests2.CaptureTest.testCaptureRightOne":159,"org.easymock.tests2.UsageConstraintsTest.testOr":174,"org.easymock.tests.UsageRangeTest.combination":43,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":17,"org.easymock.tests.UsageTest.wrongArguments":28,"org.easymock.tests2.MockBuilderTest.testWithConstructor":398,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":382,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":477,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":232,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":240,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":291,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":445,"org.easymock.tests.UsageVarargTest.varargShortAccepted":101,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":32,"org.easymock.tests2.UsageConstraintsTest.cmpTo":179,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":117,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":293,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":128,"org.easymock.tests2.CaptureTest.testCaptureFromStub":160,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":450,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":399,"org.easymock.tests.UsageTest.unexpectedCallWithArray":27,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":45,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":91,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":241,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":46,"org.easymock.tests2.UsageConstraintsTest.constraints":20,"org.easymock.samples.ExampleTest.addAndChangeDocument":84,"org.easymock.tests.UsageStrictMockTest.testVerify":340,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":85,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":107,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":488,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":69,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":257,"org.easymock.tests.LimitationsTest.abstractClass":461,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":233,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":258,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":332,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":97,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":10}}]
