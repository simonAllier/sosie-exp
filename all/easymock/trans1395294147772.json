[{"position":"org.easymock.internal.LastControl:92","failures":[0,1,2,3,4,5,6,7,8,9,10],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[11,12,13,14,14,15,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"result"}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[14,14,15,15,122,123,124,125,126,5,127,6,128,129,130,131,132,10,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:38","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(long.long, java.lang.Long.java.lang.Long)","type":"CtInvocationImpl"},"failures":[159,160,161,162,163,164],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:41","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:65","sourceCode":"if (org.easymock.internal.Range.hasFixedCount()) {\n    return \"\" + (int);\n} else if (org.easymock.internal.Range.hasOpenCount()) {\n    return \"at least \" + (int);\n} else {\n    return ((\"between \" + (int)) + \" and \") + (int);\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:104","sourceCode":"throw new java.lang.IllegalStateException(java.lang.String)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))","type":"CtThrowImpl"},"failures":[165],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"message":"org.easymock.internal.EasyMockProperties.PREFIX"}},{"position":"org.easymock.EasyMock:573","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[65],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1725","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"failures":[5],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:42","sourceCode":"return false","type":"CtReturnImpl"},"failures":[166],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[11,167,168,169,170,171,172,173,1,174,175,176,177,178,179,2,180,181,4,5,7,182,183,184,185,9,186,187,188,189,10,190,191,192,193,194,54,56,64,195,196,135,197,198,199,200,201,202,203,204,205,206,207,208,209,210,78,84,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,152,233,234,235,236,237,238,239,240,241,242,153,154,243],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.InjectionPlan:51","failures":[244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:194","sourceCode":"try {\n    java.lang.reflect.Constructor<?> = java.lang.Class<?>.getDeclaredConstructor(org.easymock.ConstructorArgs.getConstructor().getParameterTypes());\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"Fail to find constructor for param types\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"mockClass"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[270,193,194,198,217,271,272,273,228,229,274,234,241,275,276],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:50","failures":[198,217,277,278,234,241,275],"status":-1,"binaryOperator":"int == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:50","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"mock"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:83","sourceCode":"if (java.lang.Object[] == null) {\n    java.lang.Object[] = new java.lang.Object[0];\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:93","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]))","type":"CtInvocationImpl"},"failures":[270,193,194,198,217,271,272,273,228,229,274,234,241,275,276],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[279,280,281],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:87","sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:233","sourceCode":"if ((org.easymock.internal.ExpectedInvocation) == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[141,282,283,284,142,143,285,286,287,288,289,290,291,292,144,293,294,295,145,296,297,298],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"method":"result"}},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[23,24,26,27,251,252,299,270,193,194,54,62,65,67,135,198,199,204,206,300,301,302,303,304,263,264,73,76,80,81,84,86,217,87,305,306,88,307,308,102,103,104,309,272,273,228,229,274,152,234,235,310,241,275,242,311,312,313,121,314],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"return java.lang.reflect.Field.getType().isAssignableFrom(org.easymock.internal.Injection.getMock().getClass())","type":"CtReturnImpl"},"failures":[246,253,258,265],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:147","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cached":"org.easymock.internal.MocksControl.classProxyFactory"}},{"position":"org.easymock.EasyMock:747","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:137","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[93,315,316],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[16,317,17,318],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[184],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[198,278,234,241,275],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:324","failures":[213,214,241],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.matchers.Captures:53","failures":[0,173,1,174,319,175,176,177,178,179,2,122,320,180,321],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1482","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(byte))","type":"CtInvocationImpl"},"failures":[4,7,9],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[11,244,167,322,168,169,323,170,324,171,325,172,12,13,245,14,15,0,173,1,174,319,175,176,177,178,179,2,122,320,180,16,317,17,326,327,328,329,330,181,331,123,18,19,124,125,3,4,332,126,5,127,6,7,182,8,183,333,128,184,129,130,185,131,132,9,186,187,188,189,10,133,134,20,334,335,21,336,337,22,23,24,25,338,339,26,27,340,341,342,343,344,345,346,246,247,248,249,250,251,252,253,254,255,256,257,347,348,349,350,351,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,352,190,299,270,191,192,353,354,355,193,194,356,357,358,53,54,359,55,56,57,58,360,59,60,61,62,63,64,65,66,67,361,362,363,364,365,366,195,196,135,197,198,199,200,367,368,369,370,201,202,203,204,371,205,206,372,300,207,208,209,373,374,301,302,303,304,210,375,376,377,378,258,259,260,261,262,263,264,265,266,267,268,269,70,71,72,379,73,75,76,77,78,79,80,81,380,82,83,84,86,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,211,404,405,212,213,214,215,216,217,87,406,407,305,306,88,307,308,89,90,91,92,93,94,95,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,96,97,98,99,218,219,220,430,221,222,431,223,224,225,226,227,432,433,434,435,436,437,100,101,102,103,104,105,106,107,136,137,138,139,140,141,282,283,284,142,143,285,286,287,288,289,290,291,292,144,293,438,294,295,145,296,297,439,298,440,309,272,273,441,442,228,229,443,444,445,446,447,448,108,109,110,111,112,449,113,450,451,114,230,452,453,454,455,456,457,458,146,147,148,149,150,459,460,461,462,463,464,151,465,231,232,274,152,233,234,235,236,466,115,116,117,118,119,120,467,237,468,469,470,471,472,473,474,475,476,238,477,239,478,479,240,310,241,275,480,481,482,483,484,485,276,486,487,488,489,490,491,242,311,492,493,494,495,496,497,498,499,500,501,502,503,504,153,154,243,505,155,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,156,157,158,526,312,527,528,313,121,314],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[342,345,346,285],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"failures":[529],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[89,90,91,92,94,95],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[380],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":4,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":440,"org.easymock.tests2.UsageTest.argumentsOrdered":194,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":208,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":264,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":289,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":192,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":244,"org.easymock.tests2.DelegateToTest.testReturnException":327,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":433,"org.easymock.tests.MockingTest.testPartialClassMocking":111,"org.easymock.tests.MockClassControlTest.testToString":102,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":374,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":463,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":145,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":67,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":38,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":506,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":34,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":370,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":429,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":159,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":182,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":153,"org.easymock.tests2.UsageTest.wrongArguments":270,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":257,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":457,"org.easymock.samples.ExampleTest.answerVsDelegate":322,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":88,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":451,"org.easymock.tests2.UsageConstraintsTest.testNull":5,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":55,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":107,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":207,"org.easymock.tests2.CaptureTest.testPrimitive":174,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":155,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":525,"org.easymock.tests.UsageTest.moreThanOneArgument":309,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":359,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":138,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":469,"org.easymock.tests.UsageTest.argumentsOrdered":229,"org.easymock.tests.UsageVarargTest.varargIntAccepted":220,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":293,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":146,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":163,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":73,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":268,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":335,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":79,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":283,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":150,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":413,"org.easymock.tests.ReplayStateInvalidUsageTest.times":501,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":251,"org.easymock.tests2.DependencyTest.testClassMocking":367,"org.easymock.tests2.AnswerTest.answer":341,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":294,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":378,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":407,"org.easymock.tests2.CaptureTest.testAnd":0,"org.easymock.tests2.UsageTest.strictResetToDefault":190,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":62,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":137,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":453,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":371,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":473,"org.easymock.tests2.DelegateToTest.testDelegate":181,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":412,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":521,"org.easymock.tests.LimitationsTest.mockFinalMethod":99,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":436,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":448,"org.easymock.tests2.DependencyTest.testClassMockingSupport":368,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":242,"org.easymock.tests2.CaptureTest.testCapture1_2446744":319,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":360,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":519,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":376,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":495,"org.easymock.tests.UsageThrowableTest.throwError":211,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":306,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":269,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":52,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":416,"org.easymock.samples.PartialClassMockTest.testGetArea":11,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":496,"org.easymock.tests.MockingTest.testInterfaceMocking":449,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":147,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":487,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":507,"org.easymock.tests2.UsageTest.niceToStrict":191,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":39,"org.easymock.tests2.ThreadingTest.testChangeDefault":362,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":141,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":281,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":78,"org.easymock.tests2.MockBuilderTest.testCreateMock":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":47,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":254,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":515,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":205,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":406,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":491,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":474,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":455,"org.easymock.tests.UsageOverloadedMethodTest.overloading":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":49,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":483,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":129,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":467,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":395,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":184,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":315,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":179,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":430,"org.easymock.tests.MockClassControlTest.testEquals":106,"org.easymock.tests2.EasyMockSupportClassTest.testAll":31,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":117,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":523,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":446,"org.easymock.tests2.CaptureTest.testCaptureAll":173,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":377,"org.easymock.tests.MockNameTest.defaultName":314,"org.easymock.tests2.UsageConstraintsTest.testMatches":130,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":493,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":139,"org.easymock.samples.ExampleTest.voteForRemovals":170,"org.easymock.tests.UsageVarargTest.allKinds":227,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":310,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":447,"org.easymock.samples.BasicClassMockTest.testPrintContent":13,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":215,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":195,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":437,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":265,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":330,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":164,"org.easymock.tests2.UsageConstraintsTest.greaterThan":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":32,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":452,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":65,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":417,"org.easymock.samples.ExampleTest.voteForRemoval":168,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":95,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":66,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":363,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":307,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":58,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":409,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":120,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":352,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":82,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":286,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":203,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":405,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":29,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":432,"org.easymock.tests2.CaptureTest.testCaptureFirst":180,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":326,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":285,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":204,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":357,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":276,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":391,"org.easymock.tests2.UsageTest.moreThanOneArgument":299,"org.easymock.tests2.CaptureTest.testCapture2_2446744":320,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":365,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":84,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":295,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":226,"org.easymock.tests.GenericTest.testBridgedEquals":119,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":479,"org.easymock.tests.UsageExpectAndReturnTest.longType":387,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":444,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":201,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":524,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":85,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":188,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":158,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":522,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":460,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":136,"org.easymock.tests.UsageCallCountTest.tooManyCalls":240,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":476,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":48,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":392,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":256,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":511,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":214,"org.easymock.tests.MockingTest.testNiceClassMocking":114,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":23,"org.easymock.tests.MockingTest.testClassMocking":109,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":475,"org.easymock.tests2.UsageConstraintsTest.testContains":128,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":74,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":72,"org.easymock.tests2.UsageConstraintsTest.testFind":126,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":468,"org.easymock.tests.MockTypeTest.fromEasyMockClass":305,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":231,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":383,"org.easymock.tests.UsageExpectAndReturnTest.object":394,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":59,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":255,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":300,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":160,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":222,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":528,"org.easymock.tests.UsageTest.exactCallCountByLastCall":443,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":151,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":143,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":470,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":462,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":19,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":400,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":218,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":482,"org.easymock.tests.MockClassControlTest.testHashCode":105,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":259,"org.easymock.tests2.EasyMockSupportTest.testVerify":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":41,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":471,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":490,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":480,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":375,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":358,"org.easymock.tests.UsageVarargTest.varargCharAccepted":221,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":196,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":298,"org.easymock.tests2.UsageTest.openCallCountByLastCall":353,"org.easymock.tests.DefaultClassInstantiatorTest.object":89,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":209,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":279,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":489,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":312,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":271,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":513,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":42,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":212,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":249,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":258,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":415,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":104,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":63,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":512,"org.easymock.tests.CapturesMatcherTest.test":321,"org.easymock.tests.ReplayStateInvalidCallsTest.times":421,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":401,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":459,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":422,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":103,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":50,"org.easymock.tests2.UsageTest.resumeIfFailure":356,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":87,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":334,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":435,"org.easymock.tests2.StubTest.stubWithReturnValue":123,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":393,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":189,"org.easymock.tests2.SerializationTest.testAllMockedMethod":17,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":438,"org.easymock.samples.SupportTest.voteForRemovals":172,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":115,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":261,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":518,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":318,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":439,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":342,"org.easymock.tests.UsageExpectAndThrowTest.object":516,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":464,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":186,"org.easymock.tests2.DelegateToTest.testWrongClass":329,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":419,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":156,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":157,"org.easymock.samples.ConstructorCalledMockTest.testTax":14,"org.easymock.tests.UsageStrictMockTest.range":234,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":336,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":372,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":22,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":517,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":80,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":503,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":28,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":228,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":456,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":411,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":488,"org.easymock.tests2.CaptureTest.testCaptureNone":178,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":348,"org.easymock.tests.UsageUnorderedTest.message":217,"org.easymock.tests.UsageVerifyTest.twoReturns":275,"org.easymock.tests.UsageVarargTest.varargByteAccepted":225,"org.easymock.tests2.ThreadingTest.testThreadSafe":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":45,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":239,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":12,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":313,"org.easymock.tests2.CaptureTest.testCapture_2617107":1,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":492,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":505,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":296,"org.easymock.tests2.UsageConstraintsTest.any":183,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":500,"org.easymock.tests2.StubTest.stub":331,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":461,"org.easymock.tests.UsageExpectAndThrowTest.longType":509,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":297,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":93,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":499,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":197,"org.easymock.tests2.SerializationTest.testClass":16,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":263,"org.easymock.tests.LimitationsTest.mockNativeMethod":98,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":403,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":118,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":248,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":427,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":200,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":165,"org.easymock.tests2.NameTest.nameForMocksControl":304,"org.easymock.tests2.MockedExceptionTest.testMockedException":71,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":33,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":442,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":510,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":113,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":382,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":53,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":81,"org.easymock.tests.MockingTest.testNicePartialClassMocking":112,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":57,"org.easymock.tests2.CompareToTest.testNotComparable":166,"org.easymock.tests2.CaptureTest.testCaptureLast":177,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":246,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":311,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":426,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":27,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":7,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":187,"org.easymock.tests.MockingTest.testTwoMocks":110,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":423,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":340,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":384,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":514,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":193,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":133,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":351,"org.easymock.samples.ExampleTest.removeNonExistingDocument":324,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":497,"org.easymock.tests.UsageStrictMockTest.differentMethods":235,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":253,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":260,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":91,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":350,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":364,"org.easymock.tests2.MockBuilderTest.testCreateMockString":86,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":100,"org.easymock.tests.UsageExpectAndThrowTest.floatType":508,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":35,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":30,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":344,"org.easymock.tests.UsageVerifyTest.twoThrows":241,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":481,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":44,"org.easymock.samples.ExampleTest.voteAgainstRemoval":169,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":486,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":290,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":64,"org.easymock.tests.LimitationsTest.privateConstructor":97,"org.easymock.tests2.UsageConstraintsTest.testNotNull":10,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":70,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":216,"org.easymock.tests2.UsageTest.defaultResetToNice":355,"org.easymock.samples.ExampleTest.voteAgainstRemovals":167,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":291,"org.easymock.tests.UsageVarargTest.differentLength":431,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":247,"org.easymock.tests2.CallbackTest.callback":210,"org.easymock.tests2.UsageConstraintsTest.equals":332,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":60,"org.easymock.tests.UsageTest.openCallCountByLastCall":441,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":124,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":243,"org.easymock.tests.UsageCallCountTest.tooFewCalls":238,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":25,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":458,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":349,"org.easymock.tests.UsageThrowableTest.throwCheckedException":213,"org.easymock.tests.MockingTest.testStrictClassMocking":108,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":465,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":26,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":24,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":252,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":502,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":339,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":346,"org.easymock.tests2.CompareToTest.testGreateOrEqual":529,"org.easymock.tests.ObjectMethodsTest.testHashCode":527,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":162,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":425,"org.easymock.tests2.NameTest.nameForNiceMock":303,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":366,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":420,"org.easymock.tests2.DependencyTest.testInterfaceMocking":369,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":161,"org.easymock.samples.ExampleTest.addDocument":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":51,"org.easymock.tests2.DelegateToTest.testStubDelegate":328,"org.easymock.tests2.AnswerTest.stubAnswer":345,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":152,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":380,"org.easymock.tests.UsageVarargTest.varargLongAccepted":224,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":236,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":288,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":402,"org.easymock.tests.UsageExpectAndReturnTest.floatType":386,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":18,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":15,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":484,"org.easymock.tests.UsageThrowableTest.noUpperLimit":404,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":132,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":267,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":125,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":20,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":175,"org.easymock.tests2.SerializationTest.test":317,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":316,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":90,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":385,"org.easymock.tests2.UsageConstraintsTest.testSame":127,"org.easymock.samples.SupportTest.addDocument":325,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":338,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":410,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":498,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":36,"org.easymock.tests.GenericTest.testPackageScope":116,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":472,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":142,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":266,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":450,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":408,"org.easymock.tests2.NameTest.nameForMock":301,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":396,"org.easymock.tests2.UsageStrictMockTest.differentMethods":199,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":61,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":388,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":520,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":526,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":454,"org.easymock.tests2.MockedExceptionTest.testRealException":379,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":308,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":144,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":337,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":135,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":292,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":504,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":154,"org.easymock.tests2.NameTest.nameForStrictMock":302,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":77,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":280,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":381,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":56,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":21,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":9,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":92,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":277,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":75,"org.easymock.tests2.UsageStrictMockTest.range":198,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":414,"org.easymock.tests2.UsageConstraintsTest.lessThan":134,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":68,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":262,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":202,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":40,"org.easymock.tests2.CaptureTest.testCaptureRightOne":2,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":347,"org.easymock.tests2.UsageConstraintsTest.testOr":6,"org.easymock.tests.UsageRangeTest.combination":230,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":54,"org.easymock.tests.UsageTest.wrongArguments":273,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":37,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":101,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":389,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":397,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":282,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":94,"org.easymock.tests.UsageVarargTest.varargShortAccepted":223,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":478,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":428,"org.easymock.tests2.UsageConstraintsTest.cmpTo":333,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":343,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":418,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":284,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":354,"org.easymock.tests2.CaptureTest.testCaptureFromStub":122,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":494,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":76,"org.easymock.tests.UsageTest.unexpectedCallWithArray":272,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":424,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":274,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":477,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":398,"org.easymock.tests2.UsageConstraintsTest.constraints":3,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":233,"org.easymock.samples.ExampleTest.addAndChangeDocument":171,"org.easymock.tests.UsageStrictMockTest.testVerify":466,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":245,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":232,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":445,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":176,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":148,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":69,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":390,"org.easymock.tests.LimitationsTest.abstractClass":96,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":485,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":149,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":206,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":219,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":278}}]
