[{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[1,2,3,4,5,6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[7],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"hashCodeMethod","equalsMethod":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:260","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:325","sourceCode":"java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:57","sourceCode":"java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:62","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>()","type":"CtAssignmentImpl"},"failures":[75,8,76,77,78,79,6,80,81,82,83,84,85,86,87,88,89,34,35,90,91,44,7,92,93,94,95,96,97,98,99,100,101,102,103,104,45,105,106,0,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,70],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:55","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:56","sourceCode":"java.util.List<org.easymock.internal.ExpectedInvocationAndResult>.add(new org.easymock.internal.ExpectedInvocationAndResult(org.easymock.internal.ExpectedInvocation , org.easymock.internal.Result))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1863","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:414","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[133,134,135,136,137,138,139,140,141,142],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[143,1,2,3,4,5,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,78,79,6,80,81,168,169,170,171,83,88,89,35,37,38,115,172,140,173,174,175,176,177,178,179,180,65,181,182,183,184,132,66,185,67,186,187,188,189,190,191,192,70,72,73,142,193,194,195],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"returnedType"}},{"transplant":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[196,197,198,199,200,201,202,130,131,68],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:52","sourceCode":"java.lang.InstantiationException java.lang.InstantiationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:159","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"failures":[203],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[204],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Captures:47","sourceCode":"this.T = T","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"potentialValue":"potentialValue"}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:39","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Float.java.lang.Class<java.lang.Float>.getName(), java.lang.Float.java.lang.Class<java.lang.Float>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1554","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(short))","type":"CtInvocationImpl"},"failures":[7,96,0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:356","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.lang.reflect.Type = java.lang.reflect.Type;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","this":"this","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[205,206,207],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[208,209,210,211],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:39","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.vm.vendor\")","type":"CtReturnImpl"},"failures":[212],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[44,7,96,97],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:865","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[110],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[217],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:612","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[218,219,220,221,75,222,223,16,224,77,225,226,227,228,229,24,85,86,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,57,256,257],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:183","failures":[133,134,258,259,135,1,2,3,4,260,5,261,262,263,264,265,266,267,268,8,269,270,271,272,273,274,275,276,277,278,279,82,85,280,36,37,38,39,281,43,137,282,138,109,117,118,121,122,123,124,129,211,175,61,283,284,71,72,73,74],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:89","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]));\n}","type":"CtForImpl"},"failures":[8,15,18,19,20,21,24,25,32,34,37,59,62,63,72],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":7,"org.easymock.tests.ClassInstantiatorFactoryTest.getJVM":212,"org.easymock.tests2.UsageTest.argumentsOrdered":63,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":16,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":137,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":221,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":61,"org.easymock.tests2.StubTest.stubWithReturnValue":257,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":258,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":110,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":159,"org.easymock.tests2.SerializationTest.testAllMockedMethod":211,"org.easymock.tests2.DelegateToTest.testReturnException":214,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":219,"org.easymock.tests.MockingTest.testPartialClassMocking":149,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":54,"org.easymock.samples.SupportTest.voteForRemovals":1,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":204,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":242,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":208,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":230,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":193,"org.easymock.tests.UsageExpectAndThrowTest.object":240,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":107,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":140,"org.easymock.tests2.DelegateToTest.testWrongClass":215,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":88,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":89,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":97,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":83,"org.easymock.tests2.UsageTest.wrongArguments":59,"org.easymock.tests.UsageStrictMockTest.range":37,"org.easymock.samples.ExampleTest.answerVsDelegate":196,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":136,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":186,"org.easymock.tests2.UsageConstraintsTest.testNull":93,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":241,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":182,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":43,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":176,"org.easymock.tests2.CaptureTest.testPrimitive":119,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":87,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":249,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":20,"org.easymock.tests.UsageTest.moreThanOneArgument":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":141,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":181,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":9,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":147,"org.easymock.tests2.CaptureTest.testCaptureNone":124,"org.easymock.tests.UsageUnorderedTest.message":8,"org.easymock.tests.UsageVerifyTest.twoReturns":25,"org.easymock.tests.UsageVarargTest.varargByteAccepted":278,"org.easymock.tests.UsageTest.argumentsOrdered":21,"org.easymock.tests.UsageVarargTest.varargIntAccepted":273,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":266,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":133,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":55,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":78,"org.easymock.tests2.CaptureTest.testCapture_2617107":118,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":56,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":86,"org.easymock.tests2.UsageConstraintsTest.any":99,"org.easymock.tests2.StubTest.stub":283,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":207,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":81,"org.easymock.tests.UsageExpectAndThrowTest.longType":233,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":220,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":50,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":71,"org.easymock.tests2.SerializationTest.testClass":209,"org.easymock.tests.LimitationsTest.mockNativeMethod":144,"org.easymock.tests2.AnswerTest.answer":199,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":167,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":98,"org.easymock.tests2.CaptureTest.testAnd":116,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":74,"org.easymock.tests2.MockedExceptionTest.testMockedException":253,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":146,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":170,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":224,"org.easymock.tests2.DelegateToTest.testDelegate":216,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":234,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":151,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":180,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":177,"org.easymock.tests.MockingTest.testNicePartialClassMocking":150,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":245,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":184,"org.easymock.tests2.CaptureTest.testCaptureLast":123,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":75,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":28,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":192,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":96,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":108,"org.easymock.tests2.DependencyTest.testClassMockingSupport":139,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":27,"org.easymock.tests2.CaptureTest.testCapture1_2446744":120,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":152,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":243,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":238,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":62,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":112,"org.easymock.tests.UsageThrowableTest.throwError":225,"org.easymock.tests.UsageStrictMockTest.differentMethods":38,"org.easymock.tests2.ConstraintsToStringTest.andToString":53,"org.easymock.tests.UsageExpectAndThrowTest.floatType":232,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":45,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":201,"org.easymock.tests.UsageVerifyTest.twoThrows":24,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":194,"org.easymock.samples.PartialClassMockTest.testGetArea":143,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":79,"org.easymock.samples.ExampleTest.voteAgainstRemoval":4,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":185,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":231,"org.easymock.tests2.UsageTest.niceToStrict":60,"org.easymock.tests2.UsageConstraintsTest.testNotNull":111,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":252,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":229,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":175,"org.easymock.samples.ExampleTest.voteAgainstRemovals":2,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":163,"org.easymock.tests.UsageVarargTest.differentLength":26,"org.easymock.tests2.CallbackTest.callback":68,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":12,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":239,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":47,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":41,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":90,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":251,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":85,"org.easymock.tests.UsageCallCountTest.tooFewCalls":264,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":250,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":103,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":160,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":189,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":203,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":102,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":125,"org.easymock.tests2.EasyMockSupportClassTest.testAll":142,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":262,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":247,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":52,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":11,"org.easymock.tests2.CaptureTest.testCaptureAll":117,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":77,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":191,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":188,"org.easymock.tests2.UsageConstraintsTest.testMatches":104,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":190,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":202,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":148,"org.easymock.samples.ExampleTest.voteForRemovals":5,"org.easymock.tests.UsageVarargTest.allKinds":82,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":23,"org.easymock.tests2.DependencyTest.testInterfaceMocking":172,"org.easymock.samples.BasicClassMockTest.testPrintContent":134,"org.easymock.samples.ExampleTest.addDocument":260,"org.easymock.tests2.DelegateToTest.testStubDelegate":173,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":228,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":69,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":222,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":35,"org.easymock.tests2.UsageConstraintsTest.greaterThan":105,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":169,"org.easymock.tests.UsageVarargTest.varargLongAccepted":277,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":67,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":39,"org.easymock.samples.ExampleTest.voteForRemoval":3,"org.easymock.tests.UsageExpectAndReturnTest.floatType":154,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":166,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":179,"org.easymock.tests2.ConstraintsToStringTest.orToString":46,"org.easymock.tests.UsageThrowableTest.noUpperLimit":270,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":30,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":106,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":269,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":91,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":57,"org.easymock.tests2.SerializationTest.test":210,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":121,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":226,"org.easymock.tests2.UsageConstraintsTest.testSame":94,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":153,"org.easymock.samples.SupportTest.addDocument":135,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":218,"org.easymock.tests2.CaptureTest.testCaptureFirst":129,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":281,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":64,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":32,"org.easymock.tests2.UsageTest.moreThanOneArgument":58,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":115,"org.easymock.tests2.CaptureTest.testCapture2_2446744":128,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":178,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":279,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":267,"org.easymock.tests.UsageExpectAndReturnTest.longType":155,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":248,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":161,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":217,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":109,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":246,"org.easymock.tests2.UsageStrictMockTest.differentMethods":73,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":206,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":145,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":156,"org.easymock.tests.UsageCallCountTest.tooManyCalls":268,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":244,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":10,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":171,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":263,"org.easymock.tests2.MockedExceptionTest.testRealException":255,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":158,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":13,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":235,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":198,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":70,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":84,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":187,"org.easymock.tests2.UsageConstraintsTest.testContains":101,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":254,"org.easymock.tests2.UsageConstraintsTest.testFind":92,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":223,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":130,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":183,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":33,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":131,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":0,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":132,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":174,"org.easymock.tests2.UsageStrictMockTest.range":72,"org.easymock.tests2.UsageConstraintsTest.lessThan":113,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":275,"org.easymock.tests.UsageTest.exactCallCountByLastCall":22,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":76,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":40,"org.easymock.tests2.CaptureTest.testCaptureRightOne":126,"org.easymock.tests2.UsageConstraintsTest.testOr":95,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":14,"org.easymock.tests.UsageRangeTest.combination":168,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":271,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":65,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":164,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":213,"org.easymock.tests.UsageTest.wrongArguments":19,"org.easymock.tests2.EasyMockSupportTest.testVerify":138,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":157,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":162,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":49,"org.easymock.tests.UsageVarargTest.varargShortAccepted":276,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":197,"org.easymock.tests2.UsageConstraintsTest.cmpTo":100,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":114,"org.easymock.tests.UsageVarargTest.varargCharAccepted":274,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":200,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":284,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":256,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":282,"org.easymock.tests2.CaptureTest.testCaptureFromStub":127,"org.easymock.tests.UsageTest.unexpectedCallWithArray":18,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":15,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":237,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":227,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":34,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":265,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":66,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":36,"org.easymock.tests2.UsageConstraintsTest.constraints":44,"org.easymock.samples.ExampleTest.addAndChangeDocument":261,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":236,"org.easymock.tests2.ConstraintsToStringTest.notToString":48,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":165,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":205,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":259,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":195,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":51,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":122,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":6,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":80,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":31,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":272,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":42}}]
