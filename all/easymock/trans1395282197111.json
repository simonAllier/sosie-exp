[{"position":"org.easymock.internal.matchers.Same:37","failures":[0],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[1,2,3,4,5,6,7,8,9,10,11],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:230","sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:44","sourceCode":"throw org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()","type":"CtThrowImpl"},"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,4,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.CompareTo:42","failures":[57],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:188","sourceCode":"try {\n    java.lang.Long = ((java.lang.Long)(java.lang.reflect.Method.invoke(null, new java.lang.Object[]{ java.lang.Class<?> })));\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" should have been accessible\"));\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.InternalError((((\"ObjectStreamClass.\" + java.lang.String) + \" failled to be called: \") + (java.lang.reflect.InvocationTargetException.getMessage())));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method","bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[58,33],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.RecordState:280","failures":[59,60,61,62,63,64],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:364","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[65,66],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[67,68,39,69,70,53],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"failures":[71,72],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:109","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[73,74,75,76,77],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:131","failures":[78,79,80,81,82],"status":-1,"binaryOperator":"((java.lang.reflect.Method.getParameterTypes().int) == (java.lang.reflect.Method.getParameterTypes().int))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:50","failures":[83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[125,126,127,128,129,130,131,132,133,134,135,136,83,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,12,156,157,13,14,15,158,159,160,16,17,18,19,161,162,163,164,165,166,167,168,20,169,170,171,21,22,172,173,23,174,175,176,24,177,178,84,179,180,181,182,85,86,87,88,183,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,184,185,186,187,188,189,190,191,114,25,192,115,193,194,71,195,116,196,197,117,26,27,119,28,198,1,74,2,199,200,201,202,203,204,205,3,75,76,206,207,29,208,209,210,211,72,212,213,214,215,216,30,217,31,218,219,220,221,4,5,222,223,6,0,7,8,224,9,225,226,227,228,229,230,32,231,232,10,233,234,235,236,11,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,59,60,61,256,62,257,58,33,258,259,34,260,261,35,36,37,262,263,264,265,266,63,267,268,269,270,271,272,273,123,124,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,38,324,39,40,325,326,41,42,43,327,328,329,330,331,332,333,334,335,44,45,46,336,337,338,339,340,47,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,65,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,48,444,445,446,447,448,78,79,80,81,82,449,450,451,452,453,454,455,456,457,49,50,458,459,460,461,462,463,464,64,465,466,467,468,469,470,471,472,473,474,475,476,477,51,478,479,480,52,481,53,482,54,55,56,483,484,485,486,487,488,489,490,491,492,493,494,495,66,496,497,498],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[83,138,161,165,177,178,84,179,182,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,191,499,25,192,193,194,71,195,196,117,26,27,500,28,501,207,29,209,210,211,72,213,214,215,216,30,217,31,218,219,239,240,241,123,123,124,124,274,275,276,295,300,323,342,343,344,345,346,347,349,363,364,365,366,431,78,79,80,81,82,449,450,451,452,453,454,455,456,485,486,487,488,489,491,494],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"(((java.util.Comparator<? super T>) + \"(\") + (T))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"position":"org.easymock.internal.ExpectedInvocation:85","failures":[147,13,14,15,16,17,20,169,170,171,21,22,173,23,174,175,24,190,27,1,74,2,199,200,201,202,203,205,3,75,76,206,220,221,4,5,223,0,7,8,224,225,227,228,229,230,32,231,232,10,233,234,236,237,238,34,261,36,37,280,283,290,293,40,41,42,390,391,393,394,395,396,397,49,51,52,53,482,55,56],"status":-1,"binaryOperator":"((this.org.easymock.internal.Invocation.getMock().equals(org.easymock.internal.Invocation.getMock())) && (this.org.easymock.internal.Invocation.getMethod().equals(org.easymock.internal.Invocation.getMethod()))) && org.easymock.internal.ExpectedInvocation.(matches(org.easymock.internal.Invocation.getArguments()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:246","sourceCode":"final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:111","sourceCode":"final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.createTypeVariableMap(java.lang.reflect.Method.getDeclaringClass())","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Null:35","failures":[6],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:35","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:27","sourceCode":"-7799769066534714634L","type":"CtUnaryOperatorImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[83,117],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:37","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.And:50","sourceCode":"if (java.util.Iterator<org.easymock.IArgumentMatcher>.hasNext()) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:334","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:222","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","typeVariableArgument":"tv"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String)","type":"CtInvocationImpl"},"failures":[157,13,16,17,185,186,187,188,261,36,37,324,40,41,42,47,502,503,504,457,49,50,53,482,55,56],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[95,191,71,72,219,239],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1789","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Matches(java.lang.String))","type":"CtInvocationImpl"},"failures":[230],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"regex"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[77],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[36,37,307,311,312,314,317,371,375,376,378,381,407,55,56,495,497,498],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:39","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.vm.vendor\")","type":"CtReturnImpl"},"failures":[505],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1291","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[88,116,506,507,508,509,510],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:124","failures":[130,83,137,138,139,140,141,142,143,146,147,148,151,152,153,155,12,156,157,13,14,15,158,159,160,16,17,18,19,168,20,169,170,171,21,22,172,173,23,174,175,176,24,177,178,84,179,181,182,85,87,92,95,105,111,189,190,191,25,194,71,195,196,26,27,28,1,74,2,199,200,201,202,203,204,205,3,75,76,206,207,29,208,209,210,211,72,213,216,30,217,31,220,221,4,5,223,6,0,7,8,224,225,226,227,228,229,230,32,231,232,10,233,234,235,236,11,237,238,239,240,241,242,248,59,60,61,62,257,58,33,258,259,34,260,261,35,36,37,262,263,264,265,266,63,267,268,269,270,272,273,123,124,274,275,276,280,281,282,283,284,285,286,287,288,290,291,292,293,294,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,38,324,39,40,325,326,41,42,43,332,333,334,335,44,45,46,336,337,338,339,340,47,365,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,390,391,392,393,394,395,396,397,398,399,432,433,434,435,436,437,438,439,440,442,443,48,444,445,446,447,448,79,80,457,49,50,458,459,460,461,462,463,64,465,468,473,474,475,476,477,51,479,480,77,77,52,481,53,482,54,55,56,483,488,489,491],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[511],"status":-1,"binaryOperator":"((((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number)) + \")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1107","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"failures":[147,123,123,124,124],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":5,"org.easymock.tests.ClassInstantiatorFactoryTest.getJVM":505,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":38,"org.easymock.tests2.UsageTest.argumentsOrdered":17,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":174,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":249,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":409,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":15,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":265,"org.easymock.tests2.DelegateToTest.testReturnException":59,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":433,"org.easymock.tests.MockingTest.testPartialClassMocking":488,"org.easymock.tests.MockClassControlTest.testToString":451,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":184,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":424,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":418,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":99,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":95,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":367,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":502,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":152,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":506,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":224,"org.easymock.tests2.UsageTest.wrongArguments":13,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":290,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":136,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":287,"org.easymock.samples.ExampleTest.answerVsDelegate":63,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":300,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":493,"org.easymock.tests2.UsageConstraintsTest.testNull":6,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":209,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":456,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":23,"org.easymock.tests2.CaptureTest.testPrimitive":199,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":294,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":386,"org.easymock.tests.UsageTest.moreThanOneArgument":324,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":208,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":460,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":495,"org.easymock.tests.UsageTest.argumentsOrdered":42,"org.easymock.tests.UsageVarargTest.varargIntAccepted":440,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":414,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":336,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":510,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":191,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":163,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":253,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":71,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":401,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":340,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":130,"org.easymock.tests.ReplayStateInvalidUsageTest.times":359,"org.easymock.tests2.DependencyTest.testClassMocking":149,"org.easymock.tests2.AnswerTest.answer":143,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":9,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":416,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":142,"org.easymock.tests2.CaptureTest.testAnd":1,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":297,"org.easymock.tests2.UsageTest.strictResetToDefault":156,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":115,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":216,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":459,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":479,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":171,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":498,"org.easymock.tests2.DelegateToTest.testDelegate":62,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":382,"org.easymock.tests.LimitationsTest.mockFinalMethod":366,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":436,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":477,"org.easymock.tests2.DependencyTest.testClassMockingSupport":150,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":387,"org.easymock.tests2.CaptureTest.testCapture1_2446744":200,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":212,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":380,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":140,"org.easymock.tests.UsageThrowableTest.throwError":390,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":353,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":299,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":472,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":254,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":462,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":113,"org.easymock.samples.PartialClassMockTest.testGetArea":274,"org.easymock.tests.MockingTest.testInterfaceMocking":490,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":354,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":337,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":278,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":431,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":100,"org.easymock.tests2.UsageTest.niceToStrict":14,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":368,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":400,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":194,"org.easymock.tests2.MockBuilderTest.testCreateMock":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":108,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":133,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":67,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":376,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":21,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":296,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":471,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":330,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":285,"org.easymock.tests.UsageOverloadedMethodTest.overloading":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":104,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":465,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":229,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":282,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":314,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":228,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":205,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":441,"org.easymock.tests.MockClassControlTest.testEquals":455,"org.easymock.tests2.EasyMockSupportClassTest.testAll":92,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":80,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":384,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":475,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":141,"org.easymock.tests2.CaptureTest.testCaptureAll":74,"org.easymock.tests.MockNameTest.defaultName":350,"org.easymock.tests2.UsageConstraintsTest.testMatches":230,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":461,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":351,"org.easymock.samples.ExampleTest.voteForRemovals":270,"org.easymock.tests.UsageVarargTest.allKinds":448,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":457,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":476,"org.easymock.samples.BasicClassMockTest.testPrintContent":276,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":396,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":34,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":437,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":250,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":256,"org.easymock.tests2.UsageConstraintsTest.greaterThan":231,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":93,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":478,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":31,"org.easymock.samples.ExampleTest.voteForRemoval":267,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":349,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":58,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":218,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":301,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":164,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":72,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":12,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":323,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":117,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":406,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":169,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":392,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":90,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":432,"org.easymock.tests2.CaptureTest.testCaptureFirst":206,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":255,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":405,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":170,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":19,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":468,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":310,"org.easymock.tests2.UsageTest.moreThanOneArgument":157,"org.easymock.tests2.CaptureTest.testCapture2_2446744":76,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":258,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":417,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":27,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":447,"org.easymock.tests.GenericTest.testBridgedEquals":82,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":45,"org.easymock.tests.UsageExpectAndReturnTest.longType":306,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":473,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":168,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":500,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":385,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":235,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":289,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":383,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":458,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":328,"org.easymock.tests.UsageCallCountTest.tooManyCalls":46,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":109,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":311,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":135,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":372,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":395,"org.easymock.tests.MockingTest.testNiceClassMocking":494,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":178,"org.easymock.tests.MockingTest.testClassMocking":486,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":499,"org.easymock.tests2.UsageConstraintsTest.testContains":227,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":331,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":241,"org.easymock.tests2.UsageConstraintsTest.testFind":223,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":284,"org.easymock.tests.MockTypeTest.fromEasyMockClass":298,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":155,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":52,"org.easymock.tests.UsageExpectAndReturnTest.object":313,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":213,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":134,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":511,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":173,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":507,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":443,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":429,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":122,"org.easymock.tests.UsageTest.exactCallCountByLastCall":43,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":280,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":404,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":423,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":66,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":88,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":438,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":319,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":64,"org.easymock.tests.MockClassControlTest.testHashCode":454,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":244,"org.easymock.tests2.EasyMockSupportTest.testVerify":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":102,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":496,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":470,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":463,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":139,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":198,"org.easymock.tests.UsageVarargTest.varargCharAccepted":442,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":341,"org.easymock.tests2.CaptureTest.testCaptureMultiple":73,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":260,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":422,"org.easymock.tests2.UsageTest.openCallCountByLastCall":158,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":175,"org.easymock.tests.DefaultClassInstantiatorTest.object":342,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":469,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":427,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":103,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":374,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":393,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":128,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":243,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":453,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":30,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":373,"org.easymock.tests.CapturesMatcherTest.test":77,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":320,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":327,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":452,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":111,"org.easymock.tests2.UsageTest.resumeIfFailure":18,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":295,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":162,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":435,"org.easymock.tests2.StubTest.stubWithReturnValue":190,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":116,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":236,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":312,"org.easymock.tests2.SerializationTest.testAllMockedMethod":138,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":415,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":68,"org.easymock.samples.SupportTest.voteForRemovals":264,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":78,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":246,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":379,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":421,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":144,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":425,"org.easymock.tests.UsageExpectAndThrowTest.object":377,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":233,"org.easymock.tests2.DelegateToTest.testWrongClass":61,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":398,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":399,"org.easymock.samples.ConstructorCalledMockTest.testTax":123,"org.easymock.tests.UsageStrictMockTest.range":55,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":166,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":172,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":177,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":378,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":195,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":89,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":361,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":286,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":69,"org.easymock.tests2.CaptureTest.testCaptureNone":204,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":279,"org.easymock.tests.UsageUnorderedTest.message":47,"org.easymock.tests.UsageVerifyTest.twoReturns":50,"org.easymock.tests.UsageVarargTest.varargByteAccepted":446,"org.easymock.tests2.ThreadingTest.testThreadSafe":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":106,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":335,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":430,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":275,"org.easymock.tests2.CaptureTest.testCapture_2617107":2,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":389,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":419,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":293,"org.easymock.tests2.UsageConstraintsTest.any":225,"org.easymock.tests2.StubTest.stub":189,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":358,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":329,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":420,"org.easymock.tests.UsageExpectAndThrowTest.longType":370,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":346,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":357,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":35,"org.easymock.tests2.SerializationTest.testClass":83,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":248,"org.easymock.tests.LimitationsTest.mockNativeMethod":365,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":81,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":322,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":127,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":262,"org.easymock.tests2.NameTest.nameForMocksControl":188,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":129,"org.easymock.tests2.MockedExceptionTest.testMockedException":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":94,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":326,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":491,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":154,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":371,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":207,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":196,"org.easymock.tests.MockingTest.testNicePartialClassMocking":489,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":211,"org.easymock.tests2.CompareToTest.testNotComparable":57,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":125,"org.easymock.tests2.CaptureTest.testCaptureLast":203,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":388,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":8,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":85,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":234,"org.easymock.tests.MockingTest.testTwoMocks":487,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":86,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":303,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":375,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":16,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":237,"org.easymock.samples.ExampleTest.removeNonExistingDocument":271,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":132,"org.easymock.tests.UsageStrictMockTest.differentMethods":56,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":355,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":245,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":344,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":33,"org.easymock.tests2.MockBuilderTest.testCreateMockString":28,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":449,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":96,"org.easymock.tests.UsageExpectAndThrowTest.floatType":369,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":91,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":146,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":183,"org.easymock.tests.UsageVerifyTest.twoThrows":49,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":464,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":105,"org.easymock.samples.ExampleTest.voteAgainstRemoval":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":410,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":277,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":217,"org.easymock.tests.LimitationsTest.privateConstructor":364,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":121,"org.easymock.tests2.UsageConstraintsTest.testNotNull":11,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":397,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":239,"org.easymock.tests2.UsageTest.defaultResetToNice":160,"org.easymock.samples.ExampleTest.voteAgainstRemovals":266,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":411,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":318,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":126,"org.easymock.tests.UsageVarargTest.differentLength":48,"org.easymock.tests2.CallbackTest.callback":24,"org.easymock.tests2.UsageConstraintsTest.equals":222,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":214,"org.easymock.tests.UsageTest.openCallCountByLastCall":325,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":220,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":292,"org.easymock.tests.UsageCallCountTest.tooFewCalls":333,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":179,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":288,"org.easymock.tests.UsageThrowableTest.throwCheckedException":394,"org.easymock.tests.MockingTest.testStrictClassMocking":485,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":70,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":182,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":281,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":131,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":84,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":360,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":181,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":148,"org.easymock.tests.ObjectMethodsTest.testHashCode":428,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":509,"org.easymock.tests2.NameTest.nameForNiceMock":187,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":259,"org.easymock.tests2.DependencyTest.testInterfaceMocking":151,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":508,"org.easymock.samples.ExampleTest.addDocument":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":112,"org.easymock.tests2.DelegateToTest.testStubDelegate":60,"org.easymock.tests2.AnswerTest.stubAnswer":147,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":482,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":197,"org.easymock.tests.UsageVarargTest.varargLongAccepted":445,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":483,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":408,"org.easymock.tests.UsageExpectAndReturnTest.floatType":305,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":321,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":87,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":124,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":466,"org.easymock.tests.UsageThrowableTest.noUpperLimit":391,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":232,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":252,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":221,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":161,"org.easymock.tests2.SerializationTest.test":137,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":201,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":343,"org.easymock.tests2.UsageConstraintsTest.testSame":0,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":304,"org.easymock.samples.SupportTest.addDocument":263,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":180,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":97,"org.easymock.tests.GenericTest.testPackageScope":79,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":497,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":403,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":251,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":492,"org.easymock.tests2.NameTest.nameForMock":185,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":315,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":119,"org.easymock.tests2.UsageStrictMockTest.differentMethods":37,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":215,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":307,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":381,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":426,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":480,"org.easymock.tests2.MockedExceptionTest.testRealException":242,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":302,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":413,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":167,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":412,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":261,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":291,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":362,"org.easymock.tests2.NameTest.nameForStrictMock":186,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":193,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":153,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":210,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":165,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":503,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":10,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":345,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":25,"org.easymock.tests2.UsageStrictMockTest.range":36,"org.easymock.tests2.UsageConstraintsTest.lessThan":238,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":247,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":407,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":20,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":101,"org.easymock.tests2.CaptureTest.testCaptureRightOne":3,"org.easymock.tests2.UsageConstraintsTest.testOr":7,"org.easymock.tests.UsageRangeTest.combination":51,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":29,"org.easymock.tests.UsageTest.wrongArguments":40,"org.easymock.tests2.MockBuilderTest.testWithConstructor":114,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":98,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":450,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":308,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":65,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":316,"org.easymock.tests.UsageVarargTest.varargShortAccepted":444,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":347,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":44,"org.easymock.tests2.UsageConstraintsTest.cmpTo":226,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":145,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":402,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":159,"org.easymock.tests2.CaptureTest.testCaptureFromStub":75,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":352,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":192,"org.easymock.tests.UsageTest.unexpectedCallWithArray":39,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":53,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":334,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":118,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":317,"org.easymock.tests2.UsageConstraintsTest.constraints":4,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":54,"org.easymock.samples.ExampleTest.addAndChangeDocument":272,"org.easymock.tests.UsageStrictMockTest.testVerify":484,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":273,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":481,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":474,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":202,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":501,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":338,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":309,"org.easymock.tests.LimitationsTest.abstractClass":363,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":467,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":339,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":504,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":439,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":22}}]
