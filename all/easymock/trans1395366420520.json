[{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:88","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:122","sourceCode":"final java.util.List<org.easymock.internal.ErrorMessage> java.util.List<org.easymock.internal.ErrorMessage> = new java.util.ArrayList<org.easymock.internal.ErrorMessage>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:42","sourceCode":"throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:34","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"failures":[0,1],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:603","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[50,51,52,53,54,55,39,56,57,58,59,60,61,62,63,64],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[2,11,12,13,14,15,16,65,66,67,43,46,47,48,49],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[68,69],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[70],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[71],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[72,2,3,4,5,6,7,8,9,73,74,75,76,77,78,17,51,79,18,80,52,53,54,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,55,56,113,114,115,116,117,118,42,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,43,139,140,44,68,61,141,142,45,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,62,63,64,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,71,197,48,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[220,221,222,223,224,225,226,72,2,3,227,4,5,6,7,8,9,228,229,10,77,11,12,13,14,15,16,230,231,232,233,234,235,236,237,238,239,240,78,241,242,50,243,17,51,244,79,18,245,246,80,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,247,248,249,52,250,53,54,251,252,81,82,253,254,255,256,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,109,110,111,112,55,39,56,113,114,40,41,115,257,258,259,260,261,262,263,117,118,42,119,264,120,121,265,122,266,267,268,123,269,270,271,130,131,132,133,134,272,135,273,274,275,43,139,140,44,68,61,276,141,277,142,45,278,279,144,145,146,147,148,149,150,151,152,155,280,156,157,158,159,160,161,162,164,165,166,167,281,282,283,62,284,63,64,285,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,196,71,286,197,287,46,47,48,49,198,200,288,201,204,205,289,208,290,291,209,210,211,212,213,292,293,214,215,216,217,294,218,219],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[295],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"return java.lang.reflect.Field.getType().isAssignableFrom(org.easymock.internal.Injection.getMock().getClass())","type":"CtReturnImpl"},"failures":[296,297,298,299],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"this.org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[300,301],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"transplant":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:893","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[188],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return this.java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[302,303,304],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"properties":"properties","defaultValue":"value","key":"value"}},{"transplant":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[2,4,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"position":"org.easymock.EasyMock:907","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[305,306,220,221,222,223,307,308,309,310,226,72,2,3,227,4,5,6,7,8,9,73,74,75,76,77,11,12,13,14,15,16,230,231,232,233,234,236,237,238,239,240,78,241,50,243,311,312,313,314,17,51,315,244,79,18,245,246,80,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,247,248,249,52,250,53,54,251,252,81,82,316,317,318,319,320,321,322,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,55,39,56,113,114,40,41,115,323,259,260,261,262,263,118,42,119,264,120,121,265,122,266,267,268,123,324,324,325,325,269,124,270,271,326,126,327,127,128,129,328,130,131,132,133,134,272,329,330,331,135,136,137,138,273,274,275,43,332,333,334,335,139,140,44,68,61,276,141,277,142,45,143,278,279,144,145,146,147,148,149,150,151,152,336,154,280,156,157,158,159,160,161,162,163,164,165,166,167,281,282,283,62,284,63,64,285,337,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,191,192,193,194,195,196,71,286,197,287,46,47,48,49,198,199,200,288,201,202,203,204,205,206,207,289,208,290,291,209,210,211,212,213,292,293,214,215,216,217,294,218,219],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[72,2,15,240,50,249,52,81,82,108,109,110,111,112,113,114,40,41,115,273,274,152,62,337,168,169,170,171,172,173,174,175,176,177,338,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,209,210,211,212,213,292,293,214,215,216,217,294,218,219],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[339],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[220,221,222,223,224,225,226,72,2,3,227,4,5,6,7,8,9,228,229,10,73,74,75,76,77,11,12,13,14,15,16,230,231,232,233,234,236,237,238,239,240,78,241,50,17,51,244,79,18,245,246,80,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,248,249,52,250,53,54,251,81,82,316,319,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,109,110,111,112,55,39,56,113,114,40,41,115,259,260,261,262,263,117,118,42,119,264,120,121,265,122,266,126,130,131,132,133,134,273,274,275,43,139,44,68,61,276,141,277,142,45,278,279,144,145,146,147,148,149,150,151,152,154,280,283,62,284,63,64,285,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,71,286,197,287,46,47,48,49,199,200,288,202,203,206,207,289,208,290,291,209,210,211,212,213,292,293,214,215,216,217,294,218,219],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:296","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[340,341,342,343,344,345,346],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[347],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:261","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[348,349,350,351,352,353,354,70,355],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:83","sourceCode":"return (int) == (java.lang.Integer.int)","type":"CtReturnImpl"},"failures":[305,220,221,222,223,224,225,226,72,3,227,4,5,6,7,8,9,228,229,10,73,74,75,76,77,15,230,231,232,233,234,235,236,237,238,239,240,78,241,50,17,51,244,79,18,245,246,80,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,247,248,249,52,250,53,54,251,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,55,39,56,113,114,40,41,115,117,118,42,119,264,120,121,265,122,266,267,268,123,269,124,270,271,125,126,127,128,129,130,131,132,133,134,135,136,137,138,273,274,275,43,332,333,334,335,139,140,44,68,61,276,141,277,142,45,278,279,144,145,146,147,148,149,150,151,152,153,154,155,280,156,157,158,159,160,161,162,164,165,166,167,281,282,283,62,284,63,64,285,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,71,286,197,287,48,198,199,200,288,201,202,203,204,205,206,207,289,208,290,291,209,210,211,212,213,292,293,214,215,216,217,218,219],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:54","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[51,315,244,245,246,249,356,357,358,61,276,278,279,359,360,361,362],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":171,"org.easymock.tests2.UsageTest.argumentsOrdered":279,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":17,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":166,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":14,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":277,"org.easymock.tests2.StubTest.stubWithReturnValue":43,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":269,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":93,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":191,"org.easymock.tests2.SerializationTest.testAllMockedMethod":288,"org.easymock.tests2.DelegateToTest.testReturnException":289,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":347,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":12,"org.easymock.tests.MockingTest.testPartialClassMocking":74,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":361,"org.easymock.samples.SupportTest.voteForRemovals":123,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":339,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":355,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":344,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":31,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":19,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":136,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":301,"org.easymock.tests.UsageExpectAndThrowTest.object":29,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":57,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":140,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":188,"org.easymock.tests2.DelegateToTest.testWrongClass":290,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":81,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":82,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":177,"org.easymock.tests2.UsageTest.wrongArguments":276,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":113,"org.easymock.samples.ConstructorCalledMockTest.testTax":324,"org.easymock.tests.UsageStrictMockTest.range":53,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":309,"org.easymock.samples.ExampleTest.answerVsDelegate":264,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":163,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":201,"org.easymock.tests2.UsageConstraintsTest.testNull":173,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":30,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":149,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":258,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":127,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":165,"org.easymock.tests2.CaptureTest.testPrimitive":212,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":115,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":245,"org.easymock.tests.UsageTest.moreThanOneArgument":51,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":38,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":308,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":148,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":356,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":261,"org.easymock.tests2.CaptureTest.testCaptureNone":215,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":70,"org.easymock.tests.UsageUnorderedTest.message":50,"org.easymock.tests.UsageVerifyTest.twoReturns":56,"org.easymock.tests.UsageVarargTest.varargByteAccepted":238,"org.easymock.tests2.ThreadingTest.testThreadSafe":130,"org.easymock.tests.UsageTest.argumentsOrdered":246,"org.easymock.tests.UsageVarargTest.varargIntAccepted":232,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":223,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":270,"org.easymock.tests2.CaptureTest.testCapture_2617107":211,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":108,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":362,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":326,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":350,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":41,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":327,"org.easymock.tests2.UsageConstraintsTest.any":178,"org.easymock.tests2.StubTest.stub":275,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":67,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":112,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":351,"org.easymock.tests.UsageExpectAndThrowTest.longType":22,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":13,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":320,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":284,"org.easymock.tests2.SerializationTest.testClass":199,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":198,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":196,"org.easymock.tests.LimitationsTest.mockNativeMethod":77,"org.easymock.tests2.AnswerTest.answer":71,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":103,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":338,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":331,"org.easymock.tests2.CaptureTest.testAnd":209,"org.easymock.tests2.UsageTest.strictResetToDefault":68,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":336,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":285,"org.easymock.tests2.NameTest.nameForMocksControl":335,"org.easymock.tests2.MockedExceptionTest.testMockedException":47,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":260,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":106,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":160,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":18,"org.easymock.tests2.DelegateToTest.testDelegate":291,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":76,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":23,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":146,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":128,"org.easymock.tests.MockingTest.testNicePartialClassMocking":75,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":34,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":151,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":296,"org.easymock.tests2.CaptureTest.testCaptureLast":214,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":15,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":316,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":207,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":176,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":314,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":189,"org.easymock.tests2.CaptureTest.testCapture1_2446744":213,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":303,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":84,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":32,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":329,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":27,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":278,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":193,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":304,"org.easymock.tests.UsageThrowableTest.throwError":3,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":319,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":297,"org.easymock.tests.UsageStrictMockTest.differentMethods":54,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":132,"org.easymock.tests2.MockBuilderTest.testCreateMockString":328,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":116,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":263,"org.easymock.tests.UsageExpectAndThrowTest.floatType":21,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":184,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":286,"org.easymock.tests.UsageVerifyTest.twoThrows":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":137,"org.easymock.samples.PartialClassMockTest.testGetArea":124,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":318,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":109,"org.easymock.samples.ExampleTest.voteAgainstRemoval":121,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":354,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":353,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":349,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":154,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":20,"org.easymock.tests2.UsageTest.niceToStrict":141,"org.easymock.tests2.ThreadingTest.testChangeDefault":302,"org.easymock.tests2.UsageConstraintsTest.testNotNull":192,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":9,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":46,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":340,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":126,"org.easymock.tests2.UsageTest.defaultResetToNice":143,"org.easymock.samples.ExampleTest.voteAgainstRemovals":119,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":99,"org.easymock.tests.UsageVarargTest.differentLength":235,"org.easymock.tests2.CallbackTest.callback":280,"org.easymock.tests.UsageTest.openCallCountByLastCall":79,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":359,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":28,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":161,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":168,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":305,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":307,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":40,"org.easymock.tests.UsageCallCountTest.tooFewCalls":221,"org.easymock.tests.UsageOverloadedMethodTest.overloading":118,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":10,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":182,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":204,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":95,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":117,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":181,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":216,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":310,"org.easymock.tests.UsageThrowableTest.throwCheckedException":6,"org.easymock.tests.MockClassControlTest.testEquals":257,"org.easymock.tests2.EasyMockSupportClassTest.testAll":135,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":241,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":360,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":357,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":36,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":330,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":312,"org.easymock.tests2.CaptureTest.testCaptureAll":210,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":206,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":2,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":203,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":321,"org.easymock.tests2.UsageConstraintsTest.testMatches":183,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":205,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":287,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":345,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":262,"org.easymock.samples.ExampleTest.voteForRemovals":122,"org.easymock.tests2.NameTest.nameForNiceMock":334,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":134,"org.easymock.tests.UsageVarargTest.allKinds":240,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":55,"org.easymock.tests2.DependencyTest.testInterfaceMocking":139,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":313,"org.easymock.samples.BasicClassMockTest.testPrintContent":271,"org.easymock.samples.ExampleTest.addDocument":265,"org.easymock.tests2.DelegateToTest.testStubDelegate":208,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":8,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":282,"org.easymock.tests2.AnswerTest.stubAnswer":197,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":299,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":16,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":52,"org.easymock.tests2.UsageConstraintsTest.greaterThan":185,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":105,"org.easymock.tests.UsageVarargTest.varargLongAccepted":237,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":155,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":251,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":348,"org.easymock.samples.ExampleTest.voteForRemoval":120,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":131,"org.easymock.tests.UsageExpectAndReturnTest.floatType":86,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":102,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":195,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":325,"org.easymock.tests.UsageThrowableTest.noUpperLimit":227,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":186,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":226,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":44,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":169,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":292,"org.easymock.tests2.SerializationTest.test":200,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":158,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":4,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":85,"org.easymock.tests2.UsageConstraintsTest.testSame":174,"org.easymock.samples.SupportTest.addDocument":268,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":11,"org.easymock.tests2.CaptureTest.testCaptureFirst":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":300,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":159,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":145,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":91,"org.easymock.tests.GenericTest.testPackageScope":78,"org.easymock.tests2.CaptureTest.testCapture2_2446744":218,"org.easymock.tests2.UsageTest.moreThanOneArgument":61,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":133,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":129,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":341,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":239,"org.easymock.tests.GenericTest.testBridgedEquals":242,"org.easymock.tests2.NameTest.nameForMock":332,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":224,"org.easymock.tests.UsageExpectAndReturnTest.longType":87,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":243,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":156,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":1,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":37,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":96,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":346,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":190,"org.easymock.tests2.UsageStrictMockTest.differentMethods":64,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":35,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":259,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":66,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":69,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":88,"org.easymock.tests.UsageCallCountTest.tooManyCalls":225,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":33,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":253,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":107,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":220,"org.easymock.tests2.MockedExceptionTest.testRealException":49,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":92,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":343,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":62,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":24,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":322,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":7,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":114,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":202,"org.easymock.tests2.NameTest.nameForStrictMock":333,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":306,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":0,"org.easymock.tests2.UsageConstraintsTest.testContains":180,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":48,"org.easymock.tests2.UsageConstraintsTest.testFind":172,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":42,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":273,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":150,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":274,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":247,"org.easymock.tests.UsageExpectAndReturnTest.object":94,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":58,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":187,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":152,"org.easymock.tests.ErrorMessageTest.testGetters":59,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":125,"org.easymock.tests2.UsageStrictMockTest.range":63,"org.easymock.tests2.UsageConstraintsTest.lessThan":194,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":164,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":234,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":254,"org.easymock.tests.UsageTest.exactCallCountByLastCall":80,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":72,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":342,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":157,"org.easymock.tests2.CaptureTest.testCaptureRightOne":217,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":255,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":358,"org.easymock.tests2.UsageConstraintsTest.testOr":175,"org.easymock.tests.UsageRangeTest.combination":104,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":230,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":100,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":147,"org.easymock.tests.UsageTest.wrongArguments":244,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":229,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":323,"org.easymock.tests2.EasyMockSupportTest.testVerify":281,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":89,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":97,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":256,"org.easymock.tests.UsageVarargTest.varargShortAccepted":236,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":228,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":272,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":337,"org.easymock.tests2.UsageConstraintsTest.cmpTo":179,"org.easymock.tests.UsageVarargTest.varargCharAccepted":233,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":283,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":352,"org.easymock.tests2.UsageTest.openCallCountByLastCall":142,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":45,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":167,"org.easymock.tests2.CaptureTest.testCaptureFromStub":294,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":317,"org.easymock.tests.UsageTest.unexpectedCallWithArray":315,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":83,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":26,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":249,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":5,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":222,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":298,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":98,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":250,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":153,"org.easymock.tests2.UsageConstraintsTest.constraints":170,"org.easymock.samples.ExampleTest.addAndChangeDocument":266,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":25,"org.easymock.tests.UsageStrictMockTest.testVerify":252,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":101,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":65,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":267,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":248,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":138,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":311,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":293,"org.easymock.tests2.UsageTest.resumeIfFailure":144,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":110,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":90,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":73,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":111,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":231,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":60,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":162}}]
