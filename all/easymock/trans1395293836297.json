[{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[6,7,8,9,9,10,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"equalsMethod","equalsMethod":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:51","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[68,69,70],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[71],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"actual","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1594","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(byte[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[72,73,74,75,76,8,11,77,78,79,80,81,82,83,84,85,86,12,13,14,15,16,17,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,71,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,19,20,21,22,142,23,24,26,28,30,31,33,143,144,35,36,145,37,38,39,41,43,44,45,146,147,148,149,150,151,48,152,153,154,155,156,157,158,159,160,161,162,163,50,51,52,164,165,53,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[9,10,11,213,214,215,216,12,217,218,13,219,220,221,222,223,224,225,226,227,14,228,229,230,231,232,15,233,234,235,236,17,21,24,237,238,239,240,241,242,243],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:233","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks can be assigned to \\'%s\\': %s and %s\", org.easymock.internal.InjectionTarget.getTargetField(), org.easymock.internal.Injection.getMock(), org.easymock.internal.Injection.getMock()))","type":"CtThrowImpl"},"failures":[244,245],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1976","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[246,247,248],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:78","sourceCode":"org.easymock.internal.ExpectedInvocation = new org.easymock.internal.ExpectedInvocation(org.easymock.internal.Invocation , java.util.List<org.easymock.IArgumentMatcher>)","type":"CtAssignmentImpl"},"failures":[72,249,73,74,250,75,251,252,76,253,6,7,8,9,9,10,10,254,11,77,78,79,255,80,256,81,82,83,257,258,84,85,259,86,12,13,14,15,260,261,16,262,263,264,17,87,18,88,89,90,91,92,93,94,95,96,97,98,99,265,266,267,100,268,269,270,101,102,103,104,105,106,107,108,109,110,271,111,112,113,71,114,115,116,117,118,119,120,121,272,122,123,124,125,273,274,126,275,127,128,276,277,278,279,280,129,281,282,283,130,284,131,132,285,133,134,286,287,135,136,137,138,288,139,140,289,141,19,20,21,22,142,23,24,26,28,30,31,33,143,144,35,36,145,37,38,39,41,43,44,45,146,147,148,149,150,151,47,48,152,153,154,155,156,157,290,158,159,291,292,160,161,162,293,294,163,295,50,51,52,164,165,53,54,55,166,296,297,298,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,299,188,189,190,191,192,193,300,301,302,303,304,194,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,5,195,338,196,197,339,340,341,342,343,344,345,198,199,346,200,347,348,349,350,351,352,201,202,203,204,205,206,207,208,209,353,354,355,210,211,212,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[371],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[72,249,73,74,250,75,372,251,252,76,253,6,7,8,9,10,254,11,213,373,77,78,79,255,80,256,81,82,83,257,258,84,85,374,259,86,214,215,216,12,217,218,13,219,220,221,222,223,224,225,226,227,14,228,229,230,231,232,15,233,234,260,261,16,262,263,375,264,17,87,18,88,89,90,91,92,93,94,95,96,97,98,99,265,266,267,100,268,269,270,101,102,103,104,376,105,106,107,108,109,110,271,111,112,113,71,114,115,116,117,118,119,120,121,272,122,123,124,125,273,274,126,275,127,128,276,377,277,278,279,280,129,281,282,283,130,284,131,132,285,133,134,286,287,135,136,137,138,288,139,140,378,379,380,381,289,382,383,384,385,386,141,244,387,388,389,390,391,19,20,21,22,392,142,23,24,237,25,238,26,27,239,393,28,29,30,240,31,394,241,32,33,243,34,395,396,143,144,397,398,399,400,401,402,403,35,36,145,37,38,39,40,404,41,405,406,42,43,44,45,407,46,408,409,410,411,412,146,245,413,414,415,416,417,147,148,149,150,151,47,418,419,48,420,421,422,423,424,425,152,426,427,428,429,430,431,153,154,155,156,157,2,290,158,159,291,292,160,161,162,293,294,163,295,432,433,49,50,51,434,52,435,436,437,164,165,438,53,54,55,56,166,296,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,297,456,457,458,459,460,298,461,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,462,463,464,465,466,467,468,469,470,471,472,473,187,299,188,189,190,191,192,193,300,301,302,303,304,194,305,474,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,57,475,476,477,478,58,479,480,326,327,328,329,481,330,331,332,333,482,334,335,336,337,5,195,338,196,197,339,340,341,342,343,344,345,198,483,199,346,200,484,485,486,487,488,489,490,491,492,347,348,349,350,351,352,201,202,203,204,205,206,207,208,209,353,354,355,210,211,212,356,493,357,358,494,495,359,360,361,496,362,363,364,365,366,367,368,369,497,370,498,499,500,59,60,61,62,63,64,65,66,67,501],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:411","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Matches:40","failures":[502],"status":-1,"binaryOperator":"(\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\")))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:233","failures":[72,249,73,74,250,75,251,252,76,253,6,7,8,9,9,10,10,254,11,77,78,79,255,80,256,81,82,83,257,258,84,85,259,86,12,13,14,15,260,261,16,262,263,264,17,87,18,88,89,90,91,92,93,94,95,96,97,98,99,265,266,267,100,268,269,270,101,102,103,104,105,106,107,108,109,110,271,111,112,113,71,114,115,116,117,118,119,120,121,272,122,123,124,125,273,274,126,275,127,128,276,277,278,279,280,129,281,282,283,130,284,131,132,285,133,134,286,287,135,136,137,138,288,139,140,289,141,19,20,21,22,142,23,24,26,28,30,31,33,143,144,35,36,145,37,38,39,41,43,44,45,146,147,148,149,150,151,47,48,152,153,154,155,156,157,290,158,159,291,292,160,161,162,293,294,163,295,50,51,52,164,165,53,54,55,297,298,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,299,188,189,190,191,192,193,300,301,302,303,304,194,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,5,195,338,196,197,339,340,341,343,344,198,199,346,200,347,348,349,350,351,352,201,202,203,204,205,206,207,208,209,353,354,355,210,211,212,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[486,490],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[11,213,503,504,505,506,507,17,240,241],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:96","sourceCode":"return java.lang.Class<?>.getConstructors()[0]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:89","sourceCode":"try {\n    return java.lang.Class<?>.getConstructor(new java.lang.Class[0]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    if ((java.lang.Class<?>.getConstructors().int) == 0) {\n        throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n    } \n    return java.lang.Class<?>.getConstructors()[0];\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"clazz"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[213,503,504,505,508,509,240],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:53","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[72,249,73,74,250,75,251,252,76,253,254,77,78,79,255,80,256,81,82,83,257,258,84,85,259,86,260,261,16,262,263,264,87,88,89,90,91,92,93,94,95,96,97,98,99,265,266,267,100,268,269,270,101,102,103,104,105,106,107,108,109,110,271,111,112,113,71,114,115,116,117,118,119,120,121,272,122,123,124,125,273,274,126,275,127,128,276,277,278,279,280,129,281,282,283,130,284,131,132,285,133,134,286,287,135,136,137,138,288,139,140,378,379,380,381,289,141,142,143,144,145,146,147,148,149,150,151,47,421,422,423,424,152,427,428,429,430,431,153,154,155,156,157,2,290,158,159,291,292,160,161,162,293,294,163,295,49,164,165,166,296,297,298,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,299,188,189,190,191,192,193,300,301,302,303,304,194,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,481,330,331,332,333,482,334,335,336,337,5,195,338,196,197,339,340,341,342,343,344,345,198,483,199,346,200,347,348,349,350,351,352,201,202,203,204,205,206,207,208,209,353,354,355,210,211,212,356,493,357,358,494,495,359,360,361,362,363,364,365,366,367,368,369,370],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[17,87,18,510],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:262","failures":[77,82,86,260,261,16,262,155,156,159,293,294,187,188,189,190,191,192,193,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,344,346,347,348,349,350,351,352,353,354,355],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:210","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1361","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[126,127,128,36,37,39,42,45,2,5,195,196,197,340],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:39","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.vm.vendor\")","type":"CtReturnImpl"},"failures":[511],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:90","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"bridgeMethod","equalsMethod":"result"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[104],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[103,104,106,108,109,271,119,123,131,285,138],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":104,"org.easymock.tests.ClassInstantiatorFactoryTest.getJVM":511,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":156,"org.easymock.tests2.UsageTest.argumentsOrdered":258,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":98,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":450,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":256,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":253,"org.easymock.tests2.DelegateToTest.testReturnException":267,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":348,"org.easymock.tests.MockingTest.testPartialClassMocking":50,"org.easymock.tests.MockClassControlTest.testToString":62,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":377,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":152,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":458,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":222,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":13,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":306,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":144,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":503,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":110,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":161,"org.easymock.tests2.UsageTest.wrongArguments":255,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":417,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":423,"org.easymock.samples.ExampleTest.answerVsDelegate":249,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":58,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":436,"org.easymock.tests2.UsageConstraintsTest.testNull":106,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":37,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":97,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":67,"org.easymock.tests2.CaptureTest.testPrimitive":133,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":163,"org.easymock.tests.UsageTest.moreThanOneArgument":157,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":325,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":145,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":302,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":493,"org.easymock.tests.UsageTest.argumentsOrdered":292,"org.easymock.tests.UsageVarargTest.varargIntAccepted":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":455,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":201,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":509,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":25,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":399,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":390,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":29,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":442,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":205,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":69,"org.easymock.tests.ReplayStateInvalidUsageTest.times":470,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":146,"org.easymock.tests2.DependencyTest.testClassMocking":395,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":371,"org.easymock.tests2.AnswerTest.answer":129,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":271,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":456,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":381,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":476,"org.easymock.tests2.CaptureTest.testAnd":131,"org.easymock.tests2.UsageTest.strictResetToDefault":78,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":42,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":239,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":301,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":92,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":208,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":495,"org.easymock.tests2.DelegateToTest.testDelegate":270,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":321,"org.easymock.tests.LimitationsTest.mockFinalMethod":420,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":351,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":431,"org.easymock.tests2.DependencyTest.testClassMockingSupport":396,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":166,"org.easymock.tests2.CaptureTest.testCapture1_2446744":134,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":404,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":319,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":379,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":464,"org.easymock.tests.UsageThrowableTest.throwError":187,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":478,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":501,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":391,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":304,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":234,"org.easymock.samples.PartialClassMockTest.testGetArea":8,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":465,"org.easymock.tests.MockingTest.testInterfaceMocking":434,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":202,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":211,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":59,"org.easymock.tests2.UsageTest.niceToStrict":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":223,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":307,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":440,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":248,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":28,"org.easymock.tests2.MockBuilderTest.testCreateMock":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":230,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":414,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":0,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":315,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":93,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":475,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":328,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":329,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":421,"org.easymock.tests.UsageOverloadedMethodTest.overloading":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":232,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":114,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":344,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":178,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":153,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":71,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":137,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":496,"org.easymock.tests2.EasyMockSupportClassTest.testAll":12,"org.easymock.tests.MockClassControlTest.testEquals":66,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":54,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":323,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":429,"org.easymock.tests2.CaptureTest.testCaptureAll":132,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":380,"org.easymock.tests.MockNameTest.defaultName":474,"org.easymock.tests2.UsageConstraintsTest.testMatches":115,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":462,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":303,"org.easymock.samples.ExampleTest.voteForRemovals":75,"org.easymock.tests.UsageVarargTest.allKinds":369,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":199,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":430,"org.easymock.samples.BasicClassMockTest.testPrintContent":7,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":192,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":273,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":387,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":269,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":352,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":507,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":491,"org.easymock.tests2.UsageConstraintsTest.greaterThan":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":217,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":207,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":45,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":492,"org.easymock.samples.ExampleTest.voteForRemoval":73,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":407,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":148,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":479,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":400,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":40,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":47,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":77,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":241,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":447,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":90,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":215,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":347,"org.easymock.tests2.CaptureTest.testCaptureFirst":140,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":266,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":446,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":91,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":85,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":483,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":174,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":150,"org.easymock.tests2.CaptureTest.testCapture2_2446744":139,"org.easymock.tests2.UsageTest.moreThanOneArgument":79,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":457,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":33,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":368,"org.easymock.tests.GenericTest.testBridgedEquals":56,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":334,"org.easymock.tests.UsageExpectAndReturnTest.longType":170,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":427,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":88,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":324,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":272,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":356,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":322,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":300,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":354,"org.easymock.tests.UsageCallCountTest.tooManyCalls":335,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":70,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":231,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":175,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":416,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":311,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":191,"org.easymock.tests.MockingTest.testNiceClassMocking":437,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":20,"org.easymock.tests.MockingTest.testClassMocking":433,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":481,"org.easymock.tests2.UsageConstraintsTest.testContains":113,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":16,"org.easymock.tests2.UsageConstraintsTest.testFind":105,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":155,"org.easymock.tests.MockTypeTest.fromEasyMockClass":477,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":264,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":336,"org.easymock.tests.UsageExpectAndReturnTest.object":177,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":41,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":415,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":96,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":504,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":363,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":499,"org.easymock.tests.UsageTest.exactCallCountByLastCall":160,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":194,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":445,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":425,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":357,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":213,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":183,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":359,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":343,"org.easymock.tests.MockClassControlTest.testHashCode":65,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":383,"org.easymock.tests2.EasyMockSupportTest.testVerify":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":225,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":68,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":358,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":327,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":341,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":378,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":374,"org.easymock.tests.UsageVarargTest.varargCharAccepted":362,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":484,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":274,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":461,"org.easymock.tests2.UsageTest.openCallCountByLastCall":81,"org.easymock.tests.DefaultClassInstantiatorTest.object":485,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":99,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":246,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":326,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":226,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":313,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":189,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":411,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":382,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":43,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":64,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":312,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":184,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":353,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":15,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":63,"org.easymock.tests2.UsageTest.resumeIfFailure":84,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":57,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":398,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":350,"org.easymock.tests2.StubTest.stubWithReturnValue":86,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":240,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":176,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":122,"org.easymock.tests2.SerializationTest.testAllMockedMethod":18,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":297,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":1,"org.easymock.samples.SupportTest.voteForRemovals":76,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":438,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":385,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":318,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":510,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":298,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":281,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":426,"org.easymock.tests.UsageExpectAndThrowTest.object":316,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":120,"org.easymock.tests2.DelegateToTest.testWrongClass":268,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":164,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":165,"org.easymock.samples.ConstructorCalledMockTest.testTax":9,"org.easymock.tests.UsageStrictMockTest.range":196,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":402,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":95,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":19,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":317,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":30,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":472,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":214,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":291,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":422,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":3,"org.easymock.tests2.CaptureTest.testCaptureNone":136,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":212,"org.easymock.tests.UsageUnorderedTest.message":295,"org.easymock.tests.UsageVerifyTest.twoReturns":200,"org.easymock.tests.UsageVarargTest.varargByteAccepted":367,"org.easymock.tests2.ThreadingTest.testThreadSafe":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":228,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":333,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":500,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":6,"org.easymock.tests2.CaptureTest.testCapture_2617107":285,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":439,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":459,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":294,"org.easymock.tests2.UsageConstraintsTest.any":111,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":469,"org.easymock.tests2.StubTest.stub":259,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":355,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":460,"org.easymock.tests.UsageExpectAndThrowTest.longType":309,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":349,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":489,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":468,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":275,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":141,"org.easymock.tests2.SerializationTest.testClass":17,"org.easymock.tests.LimitationsTest.mockNativeMethod":48,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":186,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":55,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":410,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":276,"org.easymock.tests2.NameTest.nameForMocksControl":280,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":412,"org.easymock.tests2.MockedExceptionTest.testMockedException":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":218,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":159,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":52,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":310,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":375,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":35,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":31,"org.easymock.tests.MockingTest.testNicePartialClassMocking":51,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":39,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":408,"org.easymock.tests2.CaptureTest.testCaptureLast":135,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":296,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":109,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":24,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":121,"org.easymock.tests.MockingTest.testTwoMocks":49,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":237,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":167,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":314,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":257,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":124,"org.easymock.samples.ExampleTest.removeNonExistingDocument":372,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":466,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":413,"org.easymock.tests.UsageStrictMockTest.differentMethods":197,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":384,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":487,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":149,"org.easymock.tests2.MockBuilderTest.testCreateMockString":34,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":219,"org.easymock.tests.UsageExpectAndThrowTest.floatType":308,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":216,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":283,"org.easymock.tests.UsageVerifyTest.twoThrows":346,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":373,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":14,"org.easymock.samples.ExampleTest.voteAgainstRemoval":74,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":451,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":210,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":44,"org.easymock.tests.LimitationsTest.privateConstructor":419,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":236,"org.easymock.tests2.UsageConstraintsTest.testNotNull":123,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":193,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":260,"org.easymock.tests2.UsageTest.defaultResetToNice":83,"org.easymock.samples.ExampleTest.voteAgainstRemovals":72,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":452,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":182,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":409,"org.easymock.tests.UsageVarargTest.differentLength":364,"org.easymock.tests2.CallbackTest.callback":289,"org.easymock.tests2.UsageConstraintsTest.equals":376,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":405,"org.easymock.tests.UsageTest.openCallCountByLastCall":158,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":101,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":293,"org.easymock.tests.UsageCallCountTest.tooFewCalls":331,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":22,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":424,"org.easymock.tests.UsageThrowableTest.throwCheckedException":190,"org.easymock.tests.MockingTest.testStrictClassMocking":432,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":4,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":23,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":305,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":21,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":245,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":471,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":142,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":284,"org.easymock.tests.ObjectMethodsTest.testHashCode":498,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":508,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":502,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":151,"org.easymock.tests2.NameTest.nameForNiceMock":279,"org.easymock.tests2.DependencyTest.testInterfaceMocking":143,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":505,"org.easymock.samples.ExampleTest.addDocument":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":229,"org.easymock.tests2.DelegateToTest.testStubDelegate":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":233,"org.easymock.tests2.AnswerTest.stubAnswer":130,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":195,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":394,"org.easymock.tests.UsageVarargTest.varargLongAccepted":366,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":339,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":449,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":185,"org.easymock.tests.UsageExpectAndReturnTest.floatType":169,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":11,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":10,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":389,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":118,"org.easymock.tests.UsageThrowableTest.noUpperLimit":299,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":345,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":102,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":397,"org.easymock.tests2.SerializationTest.test":87,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":286,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":486,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":168,"org.easymock.tests2.UsageConstraintsTest.testSame":107,"org.easymock.samples.SupportTest.addDocument":252,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":392,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":467,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":220,"org.easymock.tests.GenericTest.testPackageScope":53,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":494,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":444,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":388,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":435,"org.easymock.tests2.NameTest.nameForMock":277,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":179,"org.easymock.tests2.UsageStrictMockTest.differentMethods":128,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":243,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":406,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":171,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":320,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":497,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":209,"org.easymock.tests2.MockedExceptionTest.testRealException":262,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":480,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":454,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":403,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":453,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":126,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":473,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":162,"org.easymock.tests2.NameTest.nameForStrictMock":278,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":393,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":247,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":263,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":38,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":401,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":488,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":119,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":26,"org.easymock.tests2.UsageStrictMockTest.range":127,"org.easymock.tests2.UsageConstraintsTest.lessThan":125,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":386,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":506,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":448,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":89,"org.easymock.tests2.CaptureTest.testCaptureRightOne":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":224,"org.easymock.tests2.UsageConstraintsTest.testOr":108,"org.easymock.tests.UsageRangeTest.combination":206,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":36,"org.easymock.tests.UsageTest.wrongArguments":290,"org.easymock.tests2.MockBuilderTest.testWithConstructor":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":221,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":61,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":172,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":441,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":180,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":490,"org.easymock.tests.UsageVarargTest.varargShortAccepted":365,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":482,"org.easymock.tests2.UsageConstraintsTest.cmpTo":112,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":282,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":443,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":82,"org.easymock.tests2.CaptureTest.testCaptureFromStub":288,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":463,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":27,"org.easymock.tests.UsageTest.unexpectedCallWithArray":2,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":5,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":332,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":242,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":181,"org.easymock.tests2.UsageConstraintsTest.constraints":103,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":338,"org.easymock.samples.ExampleTest.addAndChangeDocument":251,"org.easymock.tests.UsageStrictMockTest.testVerify":340,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":254,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":337,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":428,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":287,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":203,"org.easymock.tests.LimitationsTest.abstractClass":418,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":173,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":198,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":204,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":94,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":360}}]
