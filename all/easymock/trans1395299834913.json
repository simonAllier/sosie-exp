[{"position":"org.easymock.internal.Range:40","failures":[0],"status":-1,"binaryOperator":"(int >= 0)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[1,2],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[3],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[4,5,6,7,3,8,9,10,11,12,13],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:93","sourceCode":"while (java.lang.Class<?> != null) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    java.lang.reflect.Method java.lang.reflect.Method = null;\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if (java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n            continue;\n        } \n        if (java.lang.reflect.Method.isBridge()) {\n            continue;\n        } \n        if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n            if (java.lang.Class<?>[] == null) {\n                if (java.lang.reflect.Method != null) {\n                    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n                } \n                java.lang.reflect.Method = java.lang.reflect.Method;\n            } else if (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n                return java.lang.reflect.Method;\n            } \n        } \n    }\n    if (java.lang.reflect.Method != null) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:412","sourceCode":"while ((!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) && (java.lang.Class<?> != null)) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.isInterface() ? java.lang.Class<?>.getMethods() : java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n            return java.lang.reflect.Method;\n        } \n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"name":"name","searchType":"searchType","paramTypes":"paramTypes","this":"this"}},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,4,5,66,6,67,7,3,68,69,70,71,72,73,74,75,76,77,9,78,79,80,81,10,82,1,83,84,85,86,87,88,89,90,91,92,11,93,12,94,95,96,97,98,99,100,13,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"failures":[249],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg"}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[14,15,16,17,18,19,250,20,21,22,23,24,25,251,26,27,28,29,252,30,31,32,33,253,34,254,35,36,255,37,38,256,257,39,258,259,260,261,262,263,264,265,266,267,268,269,270,40,41,42,43,44,271,45,46,47,48,49,50,51,52,53,54,272,55,56,57,58,59,273,60,61,62,274,63,64,65,4,5,275,66,6,67,7,3,68,8,69,70,71,72,73,74,75,76,77,9,78,79,80,81,10,82,1,276,83,84,85,86,87,88,277,278,279,280,281,89,282,283,90,91,92,11,93,12,94,95,96,97,98,99,100,13,101,102,103,284,285,286,287,104,288,289,290,291,292,105,293,294,295,296,297,298,106,299,107,108,300,301,302,303,304,305,306,307,308,309,310,311,312,313,109,110,314,315,316,317,111,112,113,114,115,116,318,319,117,320,321,322,323,324,325,326,327,328,329,330,331,118,332,333,334,335,336,337,119,120,121,122,123,124,338,339,125,340,341,342,343,344,345,346,347,348,349,350,351,352,126,127,128,129,130,353,354,131,132,133,355,134,135,136,137,138,139,140,356,357,358,359,360,361,362,141,142,363,143,144,364,145,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,392,393,394,395,396,397,398,399,400,401,402,403,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,404,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,405,406,407,408,409,410,411,412,413,414,415,201,202,203,204,416,205,206,417,207,418,208,209,210,211,212,419,213,420,214,215,421,422,423,216,217,218,424,425,426,427,428,429,430,431,432,219,220,221,222,223,224,225,226,227,228,229,230,433,231,232,434,435,436,437,438,439,440,441,233,234,0,442,235,236,237,443,238,239,444,240,241,242,243,244,245,445,446,246,447,448,449,450,451,452,453,454,247,248],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[455,46,47,456],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:305","sourceCode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","type":"CtReturnImpl"},"failures":[365,366,384],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1951","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Long>(org.easymock.Capture<java.lang.Long>))","type":"CtInvocationImpl"},"failures":[94],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[365,366,420,421],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:53","sourceCode":"return true","type":"CtReturnImpl"},"failures":[11,93,12,94,95,96,97,98,99,100,13,101,102,103,457],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:243","failures":[14,16,17,19,22,251,458,39,259,264,270,61,84,86,87,106,299,459,107,108,460,461,302,305,307,308,310,109,110,111,112,113,114,115,116,117,322,323,324,122,125,346,126,135,462,463,464,141,142,143,364,146,147,148,149,150,151,154,155,157,158,159,161,162,163,164,165,174,175,176,177,208,210,211,225,226,227,228,229,230,433,231,232,438,439,440],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[14,15,16,17,18,19,20,21,22,23,24,25,251,465,466,26,458,27,28,29,252,30,31,32,33,253,34,254,35,36,37,38,39,259,264,270,40,41,42,43,44,45,455,46,47,48,49,50,51,52,53,54,272,55,56,57,58,59,60,61,62,63,64,65,4,5,66,6,67,7,3,68,69,70,71,72,73,74,75,76,77,9,78,79,80,81,10,82,1,276,83,84,85,86,87,88,89,90,91,92,11,93,12,94,95,96,97,98,99,100,13,101,102,103,284,285,286,287,104,105,106,299,459,107,108,460,461,301,302,305,306,307,308,309,310,311,109,110,111,112,113,114,115,116,318,117,321,322,323,324,118,119,120,122,123,124,125,341,342,343,344,348,349,350,351,352,126,127,128,129,130,353,354,131,132,133,355,134,135,136,137,138,139,140,462,463,464,141,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,416,205,206,417,207,418,208,209,210,211,212,213,214,215,423,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,235,236,237,238,239,444,240,241,242,243,244],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"lock":"lock"}},{"position":"org.easymock.internal.ReflectionUtils:152","failures":[],"status":0,"binaryOperator":"(\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[64,76,81,467],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:180","sourceCode":"if ((java.lang.Class<?>[].int) != (java.lang.Object[].int)) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[468,469,470,455,471,472],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1039","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[68,73,1,473],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[37,138],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[455,46,47,456],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[455,46,47,456],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[6,8,9,10],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[252,34,254,86,353,354,133,355,140,474,418,210,423,217,218],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[14,15,16,17,18,19,20,21,22,23,24,25,251,465,466,26,458,27,28,29,252,30,31,32,33,253,34,254,35,36,37,38,39,259,264,270,40,41,42,43,44,45,455,46,47,48,49,50,51,52,53,54,272,55,56,57,58,59,60,61,62,63,64,65,4,5,66,6,67,7,3,68,69,70,71,72,73,74,75,76,77,9,78,79,80,81,10,82,1,276,83,84,85,86,87,88,89,90,91,92,11,93,12,94,95,96,97,98,99,100,13,101,102,103,284,285,286,287,104,105,106,299,459,107,108,460,461,301,302,305,306,307,308,309,310,311,109,110,111,112,113,114,115,116,318,117,321,322,323,324,118,119,120,121,122,123,124,125,341,342,343,344,348,349,350,351,352,126,127,128,129,130,353,354,131,132,133,355,134,135,136,137,138,139,140,462,463,464,141,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,416,205,206,417,207,418,208,209,210,211,212,213,214,215,423,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,235,236,237,238,239,444,240,241,242,243,244],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[363],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[363,145],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[9],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1039","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:336","sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:327","sourceCode":"return false","type":"CtReturnImpl"},"failures":[412,413,435,436],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[61],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[31,75,115],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":5,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":129,"org.easymock.tests2.UsageTest.argumentsOrdered":254,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":57,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":293,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":378,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":31,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":23,"org.easymock.tests2.DelegateToTest.testReturnException":60,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":220,"org.easymock.tests.MockingTest.testPartialClassMocking":462,"org.easymock.tests.MockClassControlTest.testToString":451,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":277,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":346,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":387,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":326,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":181,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":259,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":110,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":68,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":135,"org.easymock.tests2.UsageTest.wrongArguments":252,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":337,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":343,"org.easymock.samples.ExampleTest.answerVsDelegate":15,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":408,"org.easymock.tests2.UsageConstraintsTest.testNull":6,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":361,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":114,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":56,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":248,"org.easymock.tests2.CaptureTest.testPrimitive":94,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":139,"org.easymock.tests.UsageTest.moreThanOneArgument":130,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":200,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":113,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":176,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":441,"org.easymock.tests.UsageTest.argumentsOrdered":355,"org.easymock.tests.UsageVarargTest.varargIntAccepted":237,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":383,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":225,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":301,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":297,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":370,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":229,"org.easymock.tests.ReplayStateInvalidUsageTest.times":400,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":118,"org.easymock.tests2.DependencyTest.testClassMocking":312,"org.easymock.tests2.AnswerTest.answer":89,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":385,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":287,"org.easymock.tests2.CaptureTest.testAnd":11,"org.easymock.tests2.UsageTest.strictResetToDefault":28,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":321,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":175,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":52,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":231,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":442,"org.easymock.tests2.DelegateToTest.testDelegate":63,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":196,"org.easymock.tests.LimitationsTest.mockFinalMethod":340,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":223,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":352,"org.easymock.tests2.DependencyTest.testClassMockingSupport":313,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":365,"org.easymock.tests2.CaptureTest.testCapture1_2446744":95,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":319,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":194,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":285,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":394,"org.easymock.tests.UsageThrowableTest.throwError":166,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":407,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":298,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":178,"org.easymock.samples.PartialClassMockTest.testGetArea":251,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":395,"org.easymock.tests.MockingTest.testInterfaceMocking":359,"org.easymock.tests2.CompareToTest.testLessOrEqual":467,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":226,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":438,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":448,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":182,"org.easymock.tests2.UsageTest.niceToStrict":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":262,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":368,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":305,"org.easymock.tests2.MockBuilderTest.testCreateMock":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":267,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":334,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":190,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":53,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":413,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":414,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":341,"org.easymock.tests.UsageOverloadedMethodTest.overloading":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":269,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":73,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":215,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":157,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":126,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":72,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":100,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":443,"org.easymock.tests2.EasyMockSupportClassTest.testAll":39,"org.easymock.tests.MockClassControlTest.testEquals":247,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":144,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":198,"org.easymock.tests2.CaptureTest.testCaptureAll":93,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":286,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":350,"org.easymock.tests.MockNameTest.defaultName":404,"org.easymock.tests2.UsageConstraintsTest.testMatches":74,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":392,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":177,"org.easymock.samples.ExampleTest.voteForRemovals":19,"org.easymock.tests.UsageVarargTest.allKinds":244,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":216,"org.easymock.samples.BasicClassMockTest.testPrintContent":25,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":351,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":172,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":276,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":224,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":274,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":294,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":431,"org.easymock.tests2.UsageConstraintsTest.greaterThan":76,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":433,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":324,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":432,"org.easymock.samples.ExampleTest.voteForRemoval":16,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":120,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":325,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":409,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":318,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":124,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":27,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":375,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":50,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":257,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":219,"org.easymock.tests2.CaptureTest.testCaptureFirst":103,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":273,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":374,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":51,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":36,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":423,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":153,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":122,"org.easymock.tests2.CaptureTest.testCapture2_2446744":102,"org.easymock.tests2.UsageTest.moreThanOneArgument":29,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":386,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":310,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":243,"org.easymock.tests.GenericTest.testBridgedEquals":145,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":205,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":249,"org.easymock.tests.UsageExpectAndReturnTest.longType":149,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":48,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":348,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":199,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":440,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":80,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":197,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":435,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":174,"org.easymock.tests.UsageCallCountTest.tooManyCalls":206,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":268,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":154,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":336,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":186,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":171,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":299,"org.easymock.tests.MockingTest.testNiceClassMocking":362,"org.easymock.tests.MockingTest.testClassMocking":357,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":415,"org.easymock.tests2.UsageConstraintsTest.testContains":71,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":42,"org.easymock.tests2.UsageConstraintsTest.testFind":66,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":128,"org.easymock.tests.MockTypeTest.fromEasyMockClass":406,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":417,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":45,"org.easymock.tests.UsageExpectAndReturnTest.object":156,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":117,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":335,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":55,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":239,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":246,"org.easymock.tests.UsageTest.exactCallCountByLastCall":134,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":179,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":373,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":233,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":345,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":468,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":162,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":235,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":214,"org.easymock.tests.MockClassControlTest.testHashCode":454,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":289,"org.easymock.tests2.EasyMockSupportTest.testVerify":59,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":234,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":412,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":213,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":284,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":255,"org.easymock.tests.UsageVarargTest.varargCharAccepted":238,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":424,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":83,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":391,"org.easymock.tests2.UsageTest.openCallCountByLastCall":32,"org.easymock.tests.DefaultClassInstantiatorTest.object":425,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":58,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":411,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":445,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":474,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":263,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":169,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":330,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":288,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":453,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":322,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":187,"org.easymock.tests.CapturesMatcherTest.test":457,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":163,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":434,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":452,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":270,"org.easymock.tests2.UsageTest.resumeIfFailure":35,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":405,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":222,"org.easymock.tests2.StubTest.stubWithReturnValue":38,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":471,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":155,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":81,"org.easymock.tests2.SerializationTest.testAllMockedMethod":47,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":384,"org.easymock.samples.SupportTest.voteForRemovals":22,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":363,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":291,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":193,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":456,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":390,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":282,"org.easymock.tests.UsageExpectAndThrowTest.object":191,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":347,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":78,"org.easymock.tests2.DelegateToTest.testWrongClass":62,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":141,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":142,"org.easymock.samples.ConstructorCalledMockTest.testTax":465,"org.easymock.tests.UsageStrictMockTest.range":210,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":316,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":272,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":106,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":192,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":307,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":402,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":133,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":256,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":342,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":439,"org.easymock.tests2.CaptureTest.testCaptureNone":99,"org.easymock.tests.UsageUnorderedTest.message":140,"org.easymock.tests.UsageVerifyTest.twoReturns":218,"org.easymock.tests.UsageVarargTest.varargByteAccepted":242,"org.easymock.tests2.ThreadingTest.testThreadSafe":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":265,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":204,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":447,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":24,"org.easymock.tests2.CaptureTest.testCapture_2617107":12,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":367,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":388,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":138,"org.easymock.tests2.UsageConstraintsTest.any":69,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":399,"org.easymock.tests2.StubTest.stub":37,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":389,"org.easymock.tests.UsageExpectAndThrowTest.longType":184,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":221,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":429,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":398,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":85,"org.easymock.tests2.SerializationTest.testClass":455,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":105,"org.easymock.tests.LimitationsTest.mockNativeMethod":125,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":165,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":364,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":329,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":88,"org.easymock.tests2.NameTest.nameForMocksControl":281,"org.easymock.tests2.MockedExceptionTest.testMockedException":41,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":258,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":132,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":464,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":185,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":271,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":111,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":308,"org.easymock.tests.MockingTest.testNicePartialClassMocking":463,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":116,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":469,"org.easymock.tests2.CaptureTest.testCaptureLast":98,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":327,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":366,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":461,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":3,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":79,"org.easymock.tests.MockingTest.testTwoMocks":358,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":300,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":146,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":189,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":34,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":82,"org.easymock.samples.ExampleTest.removeNonExistingDocument":250,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":396,"org.easymock.tests.UsageStrictMockTest.differentMethods":211,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":333,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":290,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":427,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":121,"org.easymock.tests2.MockBuilderTest.testCreateMockString":311,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":449,"org.easymock.tests.UsageExpectAndThrowTest.floatType":183,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":260,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":75,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":90,"org.easymock.tests.UsageVerifyTest.twoThrows":217,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":420,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":264,"org.easymock.samples.ExampleTest.voteAgainstRemoval":17,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":437,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":379,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":323,"org.easymock.tests.LimitationsTest.privateConstructor":339,"org.easymock.tests2.UsageConstraintsTest.testNotNull":10,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":173,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":40,"org.easymock.tests2.UsageTest.defaultResetToNice":253,"org.easymock.samples.ExampleTest.voteAgainstRemovals":14,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":161,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":380,"org.easymock.tests.UsageVarargTest.differentLength":444,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":328,"org.easymock.tests2.CallbackTest.callback":104,"org.easymock.tests2.UsageConstraintsTest.equals":275,"org.easymock.tests.UsageTest.openCallCountByLastCall":131,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":64,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":137,"org.easymock.tests.UsageCallCountTest.tooFewCalls":202,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":107,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":344,"org.easymock.tests.UsageThrowableTest.throwCheckedException":170,"org.easymock.tests.MockingTest.testStrictClassMocking":356,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":460,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":180,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":459,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":332,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":401,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":108,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":92,"org.easymock.tests2.CompareToTest.testGreateOrEqual":473,"org.easymock.tests.ObjectMethodsTest.testHashCode":446,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":470,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":123,"org.easymock.tests2.NameTest.nameForNiceMock":280,"org.easymock.tests2.DependencyTest.testInterfaceMocking":109,"org.easymock.samples.ExampleTest.addDocument":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":266,"org.easymock.tests2.DelegateToTest.testStubDelegate":61,"org.easymock.tests2.AnswerTest.stubAnswer":91,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":208,"org.easymock.tests.UsageVarargTest.varargLongAccepted":241,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":212,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":377,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":164,"org.easymock.tests.UsageExpectAndReturnTest.floatType":148,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":458,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":466,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":421,"org.easymock.tests.UsageThrowableTest.noUpperLimit":167,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":77,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":296,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":65,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":314,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":96,"org.easymock.tests2.SerializationTest.test":46,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":426,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":147,"org.easymock.tests2.UsageConstraintsTest.testSame":67,"org.easymock.samples.SupportTest.addDocument":21,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":261,"org.easymock.tests.GenericTest.testPackageScope":143,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":372,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":295,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":360,"org.easymock.tests2.NameTest.nameForMock":278,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":158,"org.easymock.tests2.UsageStrictMockTest.differentMethods":87,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":320,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":150,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":195,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":245,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":232,"org.easymock.tests2.MockedExceptionTest.testRealException":43,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":410,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":317,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":382,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":472,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":84,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":381,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":403,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":136,"org.easymock.tests2.NameTest.nameForStrictMock":279,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":304,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":44,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":115,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":315,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":428,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":9,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":302,"org.easymock.tests2.UsageStrictMockTest.range":86,"org.easymock.tests2.UsageConstraintsTest.lessThan":1,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":292,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":49,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":376,"org.easymock.tests2.CaptureTest.testCaptureRightOne":13,"org.easymock.tests2.UsageConstraintsTest.testOr":7,"org.easymock.tests.UsageRangeTest.combination":230,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":112,"org.easymock.tests.UsageTest.wrongArguments":354,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":450,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":151,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":159,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":369,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":430,"org.easymock.tests.UsageVarargTest.varargShortAccepted":240,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":416,"org.easymock.tests2.UsageConstraintsTest.cmpTo":70,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":283,"org.easymock.tests2.CompareToTest.testLessThan":2,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":371,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":33,"org.easymock.tests2.CaptureTest.testCaptureFromStub":101,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":393,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":303,"org.easymock.tests.UsageTest.unexpectedCallWithArray":353,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":418,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":203,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":160,"org.easymock.tests2.UsageConstraintsTest.constraints":4,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":209,"org.easymock.samples.ExampleTest.addAndChangeDocument":20,"org.easymock.tests.UsageStrictMockTest.testVerify":419,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":26,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":207,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":349,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":97,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":227,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":152,"org.easymock.tests.LimitationsTest.abstractClass":338,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":422,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":228,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":54,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":236}}]
