[{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidClassProxyFactory:42","sourceCode":"if (org.easymock.ConstructorArgs != null) {\n    com.google.dexmaker.stock.ProxyBuilder<T>.constructorArgTypes(org.easymock.ConstructorArgs.getConstructor().getParameterTypes()).constructorArgValues(org.easymock.ConstructorArgs.getInitArgs());\n} else {\n    try {\n        org.easymock.internal.DefaultClassInstantiator org.easymock.internal.DefaultClassInstantiator = new org.easymock.internal.DefaultClassInstantiator();\n        java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> = org.easymock.internal.DefaultClassInstantiator.getConstructorToUse(java.lang.Class<T>);\n        java.lang.Object[] java.lang.Object[] = org.easymock.internal.DefaultClassInstantiator.getArgsForTypes(java.lang.reflect.Constructor<?>.getParameterTypes());\n        com.google.dexmaker.stock.ProxyBuilder<T>.constructorArgTypes(java.lang.reflect.Constructor<?>.getParameterTypes()).constructorArgValues(java.lang.Object[]);\n    } catch (java.lang.InstantiationException java.lang.InstantiationException) {\n        throw new java.lang.RuntimeException((\"Fail to instantiate mock for \" + java.lang.Class<T>));\n    }\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:160","sourceCode":"throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())))","type":"CtThrowImpl"},"failures":[0,1,2],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:235","failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:682","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"failures":[18],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:42","sourceCode":"return false","type":"CtReturnImpl"},"failures":[19],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"this.org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[20],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"answer"}},{"position":"org.easymock.internal.MockBuilder:163","failures":[3,4,5,10,14],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[11],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:573","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[21,22,23,24,25,26,27,28,29,30,31],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:157","failures":[],"status":0,"binaryOperator":"(((java.lang.StackTraceElement[].int) > 2) && (java.lang.StackTraceElement[][2].getClassName().equals(org.easymock.internal.MockInvocationHandler.org.easymock.internal.MockInvocationHandler.getName())))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:303","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:89","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]));\n}","type":"CtForImpl"},"failures":[32,33,34,35,36,37,38,39,40,41,42,43,44,45,46],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:346","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[47,48,49,50],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[],"status":0,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.EqualsWithDelta:40","failures":[51],"status":-1,"binaryOperator":"(((java.lang.Number.doubleValue()) - (java.lang.Number.doubleValue())) <= (java.lang.Number.doubleValue())) && ((java.lang.Number.doubleValue()) <= ((java.lang.Number.doubleValue()) + (java.lang.Number.doubleValue())))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:157","sourceCode":"final int int = (java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.JavaProxyFactory:30","sourceCode":"return java.lang.reflect.Proxy.((T)(java.lang.reflect.Proxy.newProxyInstance(java.lang.Class<T>.getClassLoader(), new java.lang.Class[]{ java.lang.Class<T> }, java.lang.reflect.InvocationHandler)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:305","failures":[52,53,54,55,56,57,58,34,59,60,61,62,63,64,65,66,67,68,69,39,40,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,21,147,22,148,149,150,151,152,23,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,43,169,170,171,172,173,174,175,176,177,24,25,178,26,179,27,28,180,181,182,183,184,185,186,187,188,51,30,189,190,191,192,31,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,15,232,233,234,235,236,237,238,239,240,16,241,242],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[165],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[52,53,54,55,57,243,244,245,246,247,248,249,58,59,250,251,252,253,254,255,61,256,65,66,67,68,257,69,39,40,258,259,260,261,262,263,264,265,266,267,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,268,269,270,271,92,272,273,274,275,276,277,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,127,128,129,130,131,132,278,279,280,281,282,283,134,140,141,142,143,284,144,285,21,147,22,148,286,287,150,151,152,23,154,288,155,289,290,157,158,161,162,163,164,167,291,168,169,292,293,171,294,175,176,177,24,25,178,26,179,27,28,180,181,182,183,184,185,186,187,188,51,30,189,190,192,31,193,194,196,197,198,295,201,202,204,205,207,296,297,221,298,222,224,225,226,227,228,299,230,15,232,300,301,302,303,304,234,305,235,236,306,307,308,309,16,241],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1803","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:2124","failures":[141,289,310,290,234,305,235],"status":-1,"binaryOperator":"org.easymock.internal.Invocation == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[21,22,23,24,25,26,27,28,29,30,31],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[55,58,65,66,67,273,274,275,276,277,311,312,313,314,315,102,103,127,128,129,130,131,3,4,316,155,168,176,177,178,26,179,27,183,185,186,188,51,31,193,194],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","delegateTo":"value"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:422","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"failures":[317,318,3,4,146,5,6,171,7,319,8,320,10,14,230,15,238,239,16,17,321],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:46","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:45","sourceCode":"try {\n    return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n} finally {\n    java.util.concurrent.locks.ReentrantLock.unlock();\n}","type":"CtTryImpl"},"failures":[],"status":-2,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:131","failures":[317,57,243,318,322],"status":-1,"binaryOperator":"((java.lang.reflect.Method.getParameterTypes().int) == (java.lang.reflect.Method.getParameterTypes().int))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:148","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[323,324,325],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[205],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[326,15,232,300],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MocksControl:189","failures":[244,245,246,247,248,32,327,33,328,34,59,252,253,254,255,60,35,36,37,38,64,39,40,329,330,43,169,293,294,172,173,174,331,24,195,44,198,295,201,45,46,203,208,211,213,214,216,217,332,299,233,301,302,303,304],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":25,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":60,"org.easymock.tests2.UsageTest.argumentsOrdered":46,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":219,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":271,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":295,"org.easymock.tests2.StubTest.stubWithReturnValue":155,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":7,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":192,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":113,"org.easymock.tests2.SerializationTest.testAllMockedMethod":300,"org.easymock.tests2.DelegateToTest.testReturnException":204,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":269,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":93,"org.easymock.tests.MockingTest.testPartialClassMocking":52,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":13,"org.easymock.samples.SupportTest.voteForRemovals":145,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":317,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":315,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":84,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":326,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":238,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":72,"org.easymock.tests.UsageExpectAndThrowTest.object":82,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":242,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":189,"org.easymock.tests2.DelegateToTest.testWrongClass":206,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":102,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":103,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":180,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":65,"org.easymock.tests2.UsageTest.wrongArguments":44,"org.easymock.samples.ConstructorCalledMockTest.testTax":3,"org.easymock.tests.UsageStrictMockTest.range":34,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":254,"org.easymock.samples.ExampleTest.answerVsDelegate":141,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":216,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":156,"org.easymock.tests2.UsageConstraintsTest.testNull":26,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":225,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":83,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":218,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":172,"org.easymock.tests2.CaptureTest.testPrimitive":148,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":67,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":91,"org.easymock.tests.UsageTest.moreThanOneArgument":61,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":37,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":253,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":224,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":275,"org.easymock.tests2.CaptureTest.testCaptureNone":151,"org.easymock.tests.UsageUnorderedTest.message":32,"org.easymock.tests.UsageVerifyTest.twoReturns":40,"org.easymock.tests.UsageVarargTest.varargByteAccepted":265,"org.easymock.tests2.ThreadingTest.testThreadSafe":163,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":48,"org.easymock.tests.UsageTest.argumentsOrdered":38,"org.easymock.tests.UsageVarargTest.varargIntAccepted":260,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":282,"org.easymock.tests2.CaptureTest.testCapture_2617107":22,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":127,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":293,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":1,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":294,"org.easymock.tests2.UsageConstraintsTest.any":181,"org.easymock.tests2.StubTest.stub":288,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":131,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":270,"org.easymock.tests.UsageExpectAndThrowTest.longType":75,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":323,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":330,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":208,"org.easymock.tests2.SerializationTest.testClass":15,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":233,"org.easymock.tests.LimitationsTest.mockNativeMethod":68,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":318,"org.easymock.tests2.AnswerTest.answer":234,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":123,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":29,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":304,"org.easymock.tests2.CaptureTest.testAnd":21,"org.easymock.tests2.UsageTest.strictResetToDefault":196,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":299,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":292,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":6,"org.easymock.tests2.NameTest.nameForMocksControl":309,"org.easymock.tests2.MockedExceptionTest.testMockedException":297,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":274,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":213,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":100,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":63,"org.easymock.tests2.DelegateToTest.testDelegate":207,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":50,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":310,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":76,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":54,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":222,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":173,"org.easymock.tests.MockingTest.testNicePartialClassMocking":53,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":87,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":227,"org.easymock.tests2.CompareToTest.testNotComparable":19,"org.easymock.tests2.CompareToTest.testCompareEqual":18,"org.easymock.tests2.CaptureTest.testCaptureLast":150,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":92,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":71,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":28,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":162,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":248,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":190,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":70,"org.easymock.tests2.CaptureTest.testCapture1_2446744":149,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":104,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":85,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":302,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":80,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":45,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":193,"org.easymock.tests.UsageThrowableTest.throwError":133,"org.easymock.tests.UsageStrictMockTest.differentMethods":59,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":165,"org.easymock.tests2.MockBuilderTest.testCreateMockString":331,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":277,"org.easymock.tests.UsageExpectAndThrowTest.floatType":74,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":187,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":305,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":321,"org.easymock.tests.UsageVerifyTest.twoThrows":39,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":239,"org.easymock.samples.PartialClassMockTest.testGetArea":146,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":128,"org.easymock.samples.ExampleTest.voteAgainstRemoval":143,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":230,"org.easymock.tests2.UsageTest.niceToStrict":198,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":73,"org.easymock.tests2.UsageConstraintsTest.testNotNull":31,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":296,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":139,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":311,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":171,"org.easymock.tests2.MockBuilderTest.testCreateMock":320,"org.easymock.tests2.UsageTest.defaultResetToNice":201,"org.easymock.samples.ExampleTest.voteAgainstRemovals":140,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":119,"org.easymock.tests2.CallbackTest.callback":175,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":14,"org.easymock.tests.UsageTest.openCallCountByLastCall":62,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":81,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":214,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":176,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":132,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":252,"org.easymock.tests.UsageCallCountTest.tooFewCalls":280,"org.easymock.tests.UsageOverloadedMethodTest.overloading":125,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":96,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":185,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":115,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":124,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":159,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":324,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":184,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":152,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":255,"org.easymock.tests.UsageThrowableTest.throwCheckedException":136,"org.easymock.tests2.EasyMockSupportClassTest.testAll":237,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":243,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":89,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":303,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":246,"org.easymock.tests2.CaptureTest.testCaptureAll":147,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":56,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":161,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":158,"org.easymock.tests2.UsageConstraintsTest.testMatches":186,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":160,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":236,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":276,"org.easymock.samples.ExampleTest.voteForRemovals":144,"org.easymock.tests2.NameTest.nameForNiceMock":308,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":167,"org.easymock.tests.UsageVarargTest.allKinds":267,"org.easymock.tests2.DependencyTest.testInterfaceMocking":241,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":69,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":247,"org.easymock.samples.ExampleTest.addDocument":284,"org.easymock.tests2.DelegateToTest.testStubDelegate":205,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":138,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":329,"org.easymock.tests2.AnswerTest.stubAnswer":235,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":272,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":58,"org.easymock.tests2.UsageConstraintsTest.greaterThan":188,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":319,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":99,"org.easymock.tests.UsageVarargTest.varargLongAccepted":264,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":231,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":250,"org.easymock.samples.ExampleTest.voteForRemoval":142,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":164,"org.easymock.tests.UsageExpectAndReturnTest.floatType":106,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":122,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":2,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":332,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":16,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":4,"org.easymock.tests.UsageThrowableTest.noUpperLimit":283,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":51,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":256,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":195,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":177,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":286,"org.easymock.tests2.SerializationTest.test":232,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":8,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":325,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":211,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":134,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":105,"org.easymock.tests2.UsageConstraintsTest.testSame":179,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":268,"org.easymock.tests2.CaptureTest.testCaptureFirst":154,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":20,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":212,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":203,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":42,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":111,"org.easymock.tests.GenericTest.testPackageScope":57,"org.easymock.tests2.UsageTest.moreThanOneArgument":197,"org.easymock.tests2.CaptureTest.testCapture2_2446744":153,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":166,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":49,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":174,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":312,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":266,"org.easymock.tests.GenericTest.testBridgedEquals":322,"org.easymock.tests2.NameTest.nameForMock":306,"org.easymock.tests.UsageExpectAndReturnTest.longType":107,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":244,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":209,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":90,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":116,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":191,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":88,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":10,"org.easymock.tests2.UsageStrictMockTest.differentMethods":169,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":273,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":108,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":86,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":101,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":279,"org.easymock.tests2.MockedExceptionTest.testRealException":298,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":112,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":314,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":12,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":77,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":168,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":66,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":137,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":157,"org.easymock.tests2.NameTest.nameForStrictMock":307,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":278,"org.easymock.tests2.UsageConstraintsTest.testContains":183,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":221,"org.easymock.tests2.UsageConstraintsTest.testFind":178,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":126,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":289,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":226,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":327,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":290,"org.easymock.tests.UsageExpectAndReturnTest.object":114,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":30,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":228,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":170,"org.easymock.tests2.UsageStrictMockTest.range":43,"org.easymock.tests2.UsageConstraintsTest.lessThan":194,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":217,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":262,"org.easymock.tests.UsageTest.exactCallCountByLastCall":64,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":55,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":313,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":210,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":47,"org.easymock.tests2.CaptureTest.testCaptureRightOne":23,"org.easymock.tests2.UsageConstraintsTest.testOr":27,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":17,"org.easymock.tests.UsageRangeTest.combination":98,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":258,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":223,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":120,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":95,"org.easymock.tests.UsageTest.wrongArguments":36,"org.easymock.tests2.MockBuilderTest.testWithConstructor":5,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":257,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":109,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":117,"org.easymock.tests.UsageVarargTest.varargShortAccepted":263,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":94,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":301,"org.easymock.tests2.UsageConstraintsTest.cmpTo":182,"org.easymock.tests.UsageVarargTest.varargCharAccepted":261,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":291,"org.easymock.tests2.UsageTest.openCallCountByLastCall":199,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":200,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":220,"org.easymock.tests2.CaptureTest.testCaptureFromStub":316,"org.easymock.tests.UsageTest.unexpectedCallWithArray":35,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":41,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":79,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":33,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":135,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":281,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":9,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":118,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":328,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":229,"org.easymock.tests2.UsageConstraintsTest.constraints":24,"org.easymock.samples.ExampleTest.addAndChangeDocument":285,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":78,"org.easymock.tests.UsageStrictMockTest.testVerify":251,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":121,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":240,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":245,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":287,"org.easymock.tests2.UsageTest.resumeIfFailure":202,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":129,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":110,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":97,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":130,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":259,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":215,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":0}}]
