[{"position":"org.easymock.internal.RecordState:126","failures":[0,1,2,3,4],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:223","failures":[5,6,7,8,9,10],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[11],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[12,13],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:75","sourceCode":"return \"expected: \" + org.easymock.internal.Range.(toString())","type":"CtReturnImpl"},"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[37,38,39,0,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,1,71,2,72,3,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,12,13,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,5,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,14,15,165,166,167,168,169,16,17,170,171,172,173,174,175,176,177,178,6,179,180,181,182,183,184,185,186,187,7,188,189,11,190,191,192,193,18,194,19,20,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,21,22,23,24,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,8,231,232,233,9,234,235,236,237,238,239,10,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,25,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,26,357,27,358,359,28,29,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,30,31,400,32,33,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,34,35,36,426,427,4,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[14,15,16,17,488,489,490,491,492,493,494,18,19,20,25,26,27,28,29,31,32,33,34,35,36,427,429,430,438,439],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"expected"}},{"transplant":{"position":"org.easymock.internal.MocksControl:142","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.AndroidClassProxyFactory()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"failures":[48,49,51,51,52,52,67,69,75,76,105,106,109,112,113,114,115,118,119,139,140,141,142,143,144,5,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,173,174,176,177,178,6,180,181,182,183,184,185,186,187,7,8,231,232,9,235,236,238,239,10,240,242,244,245,246,248,280,285,289,290,291,292,293,294,296,297,298,299,300,319,320,321,322,323,324,325,326,366,367,368,369,370,372,375,403,404,405,406,407,408],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[94,166,177,447],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"failures":[120],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"this.org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[70,342],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"delegateTo"}},{"position":"org.easymock.EasyMock:879","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[67,68,69,495],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:153","failures":[8,231,232,233,313,314,315,316,317,318,397,455],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[37,38,39,0,40,41,42,43,44,45,46,47,48,49,50,51,51,52,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,1,71,2,72,3,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,12,13,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,109,110,111,112,113,114,115,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,5,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,14,15,165,166,167,168,169,16,17,170,171,172,173,174,175,176,177,178,6,179,180,181,182,183,184,185,186,187,7,188,189,11,190,191,192,193,18,194,19,20,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,21,22,23,24,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,8,231,232,233,9,234,235,236,237,238,239,10,240,241,242,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,25,280,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,26,357,27,358,359,28,29,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,393,394,395,396,397,398,399,30,31,400,32,33,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,34,35,36,426,427,4,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[113,114,118,119,132,133,174,183,186,7,203,206,208,21,22,23,24,224,225,9,236,240,242,246,248,280,283,284,285,286,287,321,322,323,482,485,486,487],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"failures":[496],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[81],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[163,168,274,356,359,35],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ErrorMessage:50","failures":[25,497],"status":-1,"binaryOperator":"int == 1","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Null:35","failures":[84],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:99","failures":[37,39,40,41,43,47,53,54,56,57,60,61,62,63,65,66,67,68,71,74,75,78,79,80,81,83,84,85,86,87,88,13,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,112,113,114,115,117,118,119,125,132,142,5,154,160,163,164,14,165,167,168,169,170,171,173,174,175,176,177,178,180,184,185,186,188,189,11,190,191,18,19,20,198,199,200,201,202,203,204,205,206,207,208,209,210,211,224,232,235,239,240,242,246,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,274,275,276,277,278,279,299,356,26,358,359,360,369,370,372,376,377,378,379,384,385,386,387,388,396,31,32,33,404,406,409,410,411,34,36,430,453,454,457,478,479],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[53,55,63,87],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:721","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ErrorMessage:50","failures":[19,25,497,498,32,35,36],"status":-1,"binaryOperator":"int == 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[183],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:91","sourceCode":"java.lang.StringBuilder.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[25,497],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"buffer"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[87],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:42","sourceCode":"throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()","type":"CtThrowImpl"},"failures":[438],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[37,39,0,40,41,43,45,47,51,51,52,52,53,54,56,57,60,61,62,63,64,65,66,67,68,70,1,71,2,72,3,73,74,75,78,79,80,81,83,84,85,86,87,88,13,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,112,113,114,115,117,118,119,121,122,123,124,125,126,132,142,5,154,160,163,164,14,165,167,168,169,170,171,173,174,175,176,177,178,180,184,185,186,188,189,11,190,191,18,19,20,198,199,200,201,202,203,204,205,206,207,208,209,210,211,214,224,8,231,232,233,235,239,240,242,246,249,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,25,299,313,314,315,316,317,318,327,328,329,330,331,348,354,356,26,358,359,360,369,370,372,376,377,378,379,384,385,386,387,388,389,390,391,394,396,397,31,32,33,404,406,408,409,410,411,412,413,414,415,416,419,34,35,36,426,4,428,430,432,433,434,435,436,437,439,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"failures":[60,62],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[67,68,69,495],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[289,290,294],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[440],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[74,272,275,276,277,278,279,317,335,411,35,428,435,436,437,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[14,488,499,489,500,491,493,18,19,20,25,501,502,503,26,31,32,33,34,35,36,427,429,430,431,438,439],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[84,12,97,102],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:92","failures":[53,55,63,80,81,86,87,12,97],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[334],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[80,87],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:999","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[80,94,163,15,165,166,16,17,170,171,174,184,186,192,194,19,20,201,205,206,209,214,235,245,246,248,25,504,503,307,356,357,27,28,29,360,376,505,392,398,30,400,32,33,423,424,425,35,36],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[183],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[71],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[499,492,506,501,357,30],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[14,15,16,17,18,19,20,21,22,23,24,507,26,27,28,29,30,31,32,33,34,35,36],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:42","sourceCode":"return false","type":"CtReturnImpl"},"failures":[508],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[53,55,63,80,81,84,86,87,12,97,102],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":81,"org.easymock.tests2.UsageTest.argumentsOrdered":17,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":356,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":210,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":225,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":342,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":166,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":38,"org.easymock.tests2.DelegateToTest.testReturnException":1,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":314,"org.easymock.tests.MockingTest.testPartialClassMocking":369,"org.easymock.tests.MockClassControlTest.testToString":321,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":213,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":394,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":148,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":458,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":5,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":507,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":199,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":88,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":453,"org.easymock.tests2.UsageTest.wrongArguments":15,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":138,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":382,"org.easymock.samples.ExampleTest.answerVsDelegate":0,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":285,"org.easymock.tests2.UsageConstraintsTest.testNull":84,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":374,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":176,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":209,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":326,"org.easymock.tests2.CaptureTest.testPrimitive":56,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":457,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":477,"org.easymock.tests.UsageTest.moreThanOneArgument":26,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":175,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":329,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":412,"org.easymock.tests.UsageTest.argumentsOrdered":29,"org.easymock.tests.UsageVarargTest.varargIntAccepted":303,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":493,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":347,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":384,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":9,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":107,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":229,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":334,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":388,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":490,"org.easymock.tests.ReplayStateInvalidUsageTest.times":449,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":132,"org.easymock.tests2.DependencyTest.testClassMocking":196,"org.easymock.tests2.AnswerTest.answer":121,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":349,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":218,"org.easymock.tests2.CaptureTest.testAnd":53,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":282,"org.easymock.tests2.UsageTest.strictResetToDefault":164,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":183,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":237,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":328,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":204,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":378,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":416,"org.easymock.tests2.DelegateToTest.testDelegate":3,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":473,"org.easymock.tests.LimitationsTest.mockFinalMethod":300,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":317,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":365,"org.easymock.tests2.DependencyTest.testClassMockingSupport":197,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":438,"org.easymock.tests2.CaptureTest.testCapture1_2446744":57,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":179,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":471,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":216,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":443,"org.easymock.tests.UsageThrowableTest.throwError":272,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":284,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":392,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":230,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":162,"org.easymock.samples.PartialClassMockTest.testGetArea":37,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":444,"org.easymock.tests.MockingTest.testInterfaceMocking":371,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":385,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":433,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":486,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":459,"org.easymock.tests2.UsageTest.niceToStrict":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":149,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":332,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":239,"org.easymock.tests2.MockBuilderTest.testCreateMock":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":157,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":135,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":499,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":467,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":205,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":281,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":437,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":417,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":380,"org.easymock.tests.UsageOverloadedMethodTest.overloading":410,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":153,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":428,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":92,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":409,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":263,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":91,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":62,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":304,"org.easymock.tests2.EasyMockSupportClassTest.testAll":142,"org.easymock.tests.MockClassControlTest.testEquals":325,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":405,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":475,"org.easymock.tests2.CaptureTest.testCaptureAll":54,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":217,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":363,"org.easymock.tests.MockNameTest.defaultName":487,"org.easymock.tests2.UsageConstraintsTest.testMatches":93,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":441,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":330,"org.easymock.samples.ExampleTest.voteForRemovals":43,"org.easymock.tests.UsageVarargTest.allKinds":312,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":34,"org.easymock.samples.BasicClassMockTest.testPrintContent":49,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":364,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":278,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":192,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":72,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":226,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":318,"org.easymock.tests2.UsageConstraintsTest.greaterThan":95,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":143,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":377,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":186,"org.easymock.samples.ExampleTest.voteForRemoval":40,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":296,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":189,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":187,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":286,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":108,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":6,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":408,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":163,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":339,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":202,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":140,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":313,"org.easymock.tests2.CaptureTest.testCaptureFirst":66,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":70,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":338,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":203,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":171,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":431,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":259,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":190,"org.easymock.tests2.UsageTest.moreThanOneArgument":14,"org.easymock.tests2.CaptureTest.testCapture2_2446744":65,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":246,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":350,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":311,"org.easymock.tests.GenericTest.testBridgedEquals":407,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":424,"org.easymock.tests.UsageExpectAndReturnTest.longType":255,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":200,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":361,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":476,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":480,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":100,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":474,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":390,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":327,"org.easymock.tests.UsageCallCountTest.tooManyCalls":425,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":419,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":158,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":260,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":137,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":463,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":277,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":113,"org.easymock.tests.MockingTest.testNiceClassMocking":375,"org.easymock.tests.MockingTest.testClassMocking":367,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":418,"org.easymock.tests2.UsageConstraintsTest.testContains":90,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":232,"org.easymock.tests2.UsageConstraintsTest.testFind":83,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":411,"org.easymock.tests.MockTypeTest.fromEasyMockClass":283,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":398,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":251,"org.easymock.tests.UsageExpectAndReturnTest.object":262,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":180,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":136,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":208,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":306,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":484,"org.easymock.tests.UsageTest.exactCallCountByLastCall":360,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":396,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":337,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":413,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":393,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":76,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":268,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":301,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":4,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":220,"org.easymock.tests.MockClassControlTest.testHashCode":324,"org.easymock.tests2.EasyMockSupportTest.testVerify":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":151,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":414,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":436,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":426,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":504,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":215,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":172,"org.easymock.tests.UsageVarargTest.varargCharAccepted":305,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":288,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":193,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":355,"org.easymock.tests2.UsageTest.openCallCountByLastCall":167,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":211,"org.easymock.tests.DefaultClassInstantiatorTest.object":289,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":435,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":482,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":503,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":465,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":152,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":275,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":130,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":219,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":184,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":323,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":464,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":269,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":389,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":500,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":160,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":322,"org.easymock.tests2.UsageTest.resumeIfFailure":170,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":280,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":106,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":316,"org.easymock.tests2.StubTest.stubWithReturnValue":74,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":241,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":101,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":261,"org.easymock.tests2.SerializationTest.testAllMockedMethod":69,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":348,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":492,"org.easymock.samples.SupportTest.voteForRemovals":47,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":403,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":222,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":470,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":495,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":354,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":122,"org.easymock.tests.UsageExpectAndThrowTest.object":468,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":395,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":98,"org.easymock.tests2.DelegateToTest.testWrongClass":2,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":478,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":479,"org.easymock.tests.UsageStrictMockTest.range":32,"org.easymock.samples.ConstructorCalledMockTest.testTax":51,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":110,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":207,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":112,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":469,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":240,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":451,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":139,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":28,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":381,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":506,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":434,"org.easymock.tests2.CaptureTest.testCaptureNone":61,"org.easymock.tests.UsageUnorderedTest.message":25,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":505,"org.easymock.tests.UsageVerifyTest.twoReturns":36,"org.easymock.tests.UsageVarargTest.varargByteAccepted":310,"org.easymock.tests2.ThreadingTest.testThreadSafe":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":155,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":422,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":485,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":48,"org.easymock.tests2.CaptureTest.testCapture_2617107":55,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":494,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":440,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":456,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":352,"org.easymock.tests2.UsageConstraintsTest.any":13,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":448,"org.easymock.tests2.StubTest.stub":73,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":391,"org.easymock.tests.UsageExpectAndThrowTest.longType":461,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":315,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":353,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":293,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":447,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":194,"org.easymock.tests2.SerializationTest.testClass":67,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":224,"org.easymock.tests.LimitationsTest.mockNativeMethod":299,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":406,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":271,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":129,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":195,"org.easymock.tests2.NameTest.nameForMocksControl":24,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":131,"org.easymock.tests2.MockedExceptionTest.testMockedException":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":144,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":359,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":462,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":250,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":372,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":173,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":242,"org.easymock.tests.MockingTest.testNicePartialClassMocking":370,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":178,"org.easymock.tests2.CompareToTest.testNotComparable":508,"org.easymock.tests2.CompareToTest.testCompareEqual":496,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":127,"org.easymock.tests2.CaptureTest.testCaptureLast":60,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":439,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":119,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":87,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":99,"org.easymock.tests.MockingTest.testTwoMocks":368,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":120,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":252,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":466,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":16,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":103,"org.easymock.samples.ExampleTest.removeNonExistingDocument":44,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":445,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":134,"org.easymock.tests.UsageStrictMockTest.differentMethods":33,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":221,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":291,"org.easymock.tests2.ConstraintsToStringTest.andToString":491,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":11,"org.easymock.tests2.MockBuilderTest.testCreateMockString":248,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":319,"org.easymock.tests.UsageExpectAndThrowTest.floatType":460,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":145,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":94,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":141,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":124,"org.easymock.tests.UsageVerifyTest.twoThrows":35,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":77,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":427,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":154,"org.easymock.samples.ExampleTest.voteAgainstRemoval":41,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":343,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":185,"org.easymock.tests.LimitationsTest.privateConstructor":298,"org.easymock.tests2.UsageConstraintsTest.testNotNull":102,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":8,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":279,"org.easymock.tests2.UsageTest.defaultResetToNice":169,"org.easymock.samples.ExampleTest.voteAgainstRemovals":39,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":267,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":344,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":128,"org.easymock.tests.UsageVarargTest.differentLength":307,"org.easymock.tests2.CallbackTest.callback":214,"org.easymock.tests2.UsageConstraintsTest.equals":82,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":181,"org.easymock.tests.UsageTest.openCallCountByLastCall":358,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":78,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":455,"org.easymock.tests.UsageCallCountTest.tooFewCalls":420,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":115,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":383,"org.easymock.tests.UsageThrowableTest.throwCheckedException":276,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":501,"org.easymock.tests.MockingTest.testStrictClassMocking":366,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":397,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":118,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":133,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":114,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":450,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":117,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":126,"org.easymock.tests.ObjectMethodsTest.testHashCode":483,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":191,"org.easymock.tests2.NameTest.nameForNiceMock":23,"org.easymock.tests2.DependencyTest.testInterfaceMocking":198,"org.easymock.samples.ExampleTest.addDocument":42,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":161,"org.easymock.tests2.DelegateToTest.testStubDelegate":71,"org.easymock.tests2.AnswerTest.stubAnswer":125,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":31,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":243,"org.easymock.tests.UsageVarargTest.varargLongAccepted":309,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":401,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":341,"org.easymock.tests.UsageExpectAndReturnTest.floatType":254,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":270,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":75,"org.easymock.tests2.ConstraintsToStringTest.orToString":488,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":52,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":429,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":96,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":228,"org.easymock.tests.UsageThrowableTest.noUpperLimit":273,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":79,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":105,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":58,"org.easymock.tests2.SerializationTest.test":68,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":290,"org.easymock.tests2.UsageConstraintsTest.testSame":85,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":253,"org.easymock.samples.SupportTest.addDocument":46,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":116,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":446,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":146,"org.easymock.tests.GenericTest.testPackageScope":404,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":415,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":336,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":227,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":373,"org.easymock.tests2.NameTest.nameForMock":21,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":264,"org.easymock.tests2.UsageStrictMockTest.differentMethods":20,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":247,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":182,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":256,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":472,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":481,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":379,"org.easymock.tests2.MockedExceptionTest.testRealException":233,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":287,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":111,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":346,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":502,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":345,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":454,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":452,"org.easymock.tests2.NameTest.nameForStrictMock":22,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":238,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":249,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":177,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":109,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":497,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":97,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":292,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":235,"org.easymock.tests2.UsageStrictMockTest.range":19,"org.easymock.tests2.UsageConstraintsTest.lessThan":104,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":223,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":201,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":340,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":150,"org.easymock.tests2.CaptureTest.testCaptureRightOne":63,"org.easymock.tests2.UsageConstraintsTest.testOr":86,"org.easymock.tests.UsageRangeTest.combination":376,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":174,"org.easymock.tests.UsageTest.wrongArguments":27,"org.easymock.tests2.MockBuilderTest.testWithConstructor":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":147,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":320,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":257,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":265,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":333,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":294,"org.easymock.tests.UsageVarargTest.varargShortAccepted":308,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":423,"org.easymock.tests2.UsageConstraintsTest.cmpTo":89,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":123,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":335,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":168,"org.easymock.tests2.CaptureTest.testCaptureFromStub":64,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":442,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":236,"org.easymock.tests.UsageTest.unexpectedCallWithArray":357,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":30,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":421,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":266,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":400,"org.easymock.tests2.UsageConstraintsTest.constraints":80,"org.easymock.samples.ExampleTest.addAndChangeDocument":45,"org.easymock.tests2.ConstraintsToStringTest.notToString":489,"org.easymock.tests.UsageStrictMockTest.testVerify":402,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":50,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":399,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":362,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":59,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":386,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":258,"org.easymock.tests.LimitationsTest.abstractClass":297,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":430,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":387,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":498,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":206,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":302}}]
