[{"transplantationPoint":{"position":"org.easymock.EasyMock:1862","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Same(T))","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[1,2,3,4],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:602","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:169","sourceCode":"if (org.easymock.internal.InjectionTarget.accepts(org.easymock.internal.Injection)) {\n    org.easymock.internal.InjectionTarget.inject(java.lang.Object, org.easymock.internal.Injection);\n    java.util.List<java.lang.reflect.Field>.remove(org.easymock.internal.InjectionTarget.getTargetField());\n} ","type":"CtIfImpl"},"failures":[26,27],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"injection":"injection"}},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[28,29,30],"status":-1,"binaryOperator":"java.lang.String == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:95","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.util.Stack<org.easymock.IArgumentMatcher>.pop();\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[31,32,33,34,35,36,24,37,38,39,40],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:149","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[41,42,43],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:38","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"expected"}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[44,45,46,47,48,49],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:212","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:999","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Or:47","sourceCode":"java.lang.StringBuffer.append(\"or(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[50],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:237","sourceCode":"return org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.reflect.Method.getParameterTypes())","type":"CtReturnImpl"},"failures":[51],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,6,87,88,89,90,91,92,93,7,8,94,95,96,97,98,99,100,101,102,11,103,104,105,106,107,108,109,110,111,112,113,114,115,12,13,14,15,16,17,18,116,117,118,119,120,121,122,123,124,125,126,31,19,127,128,20,21,129,33,130,22,131,132,133,134,135,136,137,138,139,140,141,2,3,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,23,177,178,179,180,181,182,183,184,34,35,185,36,0,24,37,186,25,187,188,189,190,191,192,193,194,39,195,196,197,40,198,199,200],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:34","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:665","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[6,201,8,94,202,25],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[5,6,201,7,8,9,10,94,202,47,11,12,13,14,15,16,203,17,18,123,31,19,32,127,128,204,205,20,21,129,33,206,130,22,134,23,183,184,34,35,185,36,0,24,37,186,38,25,187,188,189,190,191,192,193,194,39,195,196,207,197,40,198,199,208,209],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:184","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[210],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"failures":[211,212,213,214,215,216,217],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[31,32,33,34,35,36,24,37,38,39,40],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[35],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MockBuilder:159","failures":[218,219,220,221,222,223,224],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[1,2,3,4],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:139","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[41,42,43],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[225,226],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[52,53,227,54,55,228,56,229,230,57,231,232,233,234,235,236,237,238,239,61,240,5,65,66,68,73,78,83,241,87,242,88,89,90,91,92,93,7,8,9,10,243,96,244,245,246,101,247,248,249,102,250,47,11,251,103,104,252,105,106,107,253,254,255,256,257,113,114,258,259,260,261,262,263,264,265,266,203,116,117,118,119,120,121,122,123,125,31,19,32,127,204,205,20,21,129,33,22,134,135,136,137,138,139,267,140,268,269,2,3,4,142,143,144,145,146,147,148,150,151,152,153,270,154,155,156,157,158,159,160,161,271,272,273,164,165,166,168,169,274,171,275,276,277,176,278,23,279,177,178,280,179,180,182,35,36,37,186,25,187,189,192,39,195,196,207,197,40,200],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:63","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[281,169],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"failures":[218,219,220,221,222,224],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[5,282,243,96,46,244,245,246,283,47,103,274,276,277,177],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[227,247,284,267,268,285,286],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:322","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:180","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[287,166],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:279","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[284,285],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:172","failures":[288,165],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[38],"status":-1,"binaryOperator":"(\"\" + int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[289,193],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[28,29,30],"status":-1,"binaryOperator":"java.lang.String == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:353","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][0]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:322","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bounds":"actualTypeArguments"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:337","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[290,291],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[292],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":35,"org.easymock.tests2.UsageTest.argumentsOrdered":277,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":97,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":152,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":275,"org.easymock.tests2.StubTest.stubWithReturnValue":181,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":216,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":234,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":197,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":72,"org.easymock.tests2.SerializationTest.testAllMockedMethod":4,"org.easymock.tests2.DelegateToTest.testReturnException":271,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":291,"org.easymock.tests.MockingTest.testPartialClassMocking":105,"org.easymock.samples.SupportTest.voteForRemovals":57,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":49,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":51,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":60,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":1,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":137,"org.easymock.tests.UsageExpectAndThrowTest.object":238,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":195,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":180,"org.easymock.tests2.DelegateToTest.testWrongClass":272,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":211,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":17,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":18,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":186,"org.easymock.tests2.UsageTest.wrongArguments":274,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":7,"org.easymock.samples.ConstructorCalledMockTest.testTax":218,"org.easymock.tests.UsageStrictMockTest.range":103,"org.easymock.samples.ExampleTest.answerVsDelegate":227,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":149,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":288,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":155,"org.easymock.tests2.UsageConstraintsTest.testNull":36,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":120,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":151,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":165,"org.easymock.tests2.CaptureTest.testPrimitive":127,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":94,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":245,"org.easymock.tests.UsageTest.moreThanOneArgument":98,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":119,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":44,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":59,"org.easymock.tests2.CaptureTest.testCaptureNone":21,"org.easymock.tests.UsageUnorderedTest.message":5,"org.easymock.tests.UsageVerifyTest.twoReturns":96,"org.easymock.tests.UsageVarargTest.varargByteAccepted":265,"org.easymock.tests2.ThreadingTest.testThreadSafe":131,"org.easymock.tests.UsageTest.argumentsOrdered":246,"org.easymock.tests.UsageVarargTest.varargIntAccepted":260,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":255,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":232,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":12,"org.easymock.tests2.CaptureTest.testCapture_2617107":32,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":215,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":110,"org.easymock.tests2.UsageConstraintsTest.any":25,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":16,"org.easymock.tests.UsageExpectAndThrowTest.longType":236,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":111,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":41,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":279,"org.easymock.tests2.SerializationTest.testClass":2,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":182,"org.easymock.tests.LimitationsTest.mockNativeMethod":116,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":154,"org.easymock.tests2.AnswerTest.answer":268,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":82,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":62,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":38,"org.easymock.tests2.CaptureTest.testAnd":31,"org.easymock.tests2.UsageTest.strictResetToDefault":169,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":280,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":85,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":146,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":100,"org.easymock.tests2.DelegateToTest.testDelegate":273,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":107,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":117,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":166,"org.easymock.tests.MockingTest.testNicePartialClassMocking":106,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":239,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":122,"org.easymock.tests2.CaptureTest.testCaptureLast":20,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":202,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":37,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":161,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":196,"org.easymock.tests2.CaptureTest.testCapture1_2446744":128,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":63,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":29,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":276,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":198,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":28,"org.easymock.tests.UsageThrowableTest.throwError":87,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":26,"org.easymock.tests.UsageStrictMockTest.differentMethods":104,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":133,"org.easymock.tests.UsageExpectAndThrowTest.floatType":235,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":192,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":269,"org.easymock.tests.UsageVerifyTest.twoThrows":243,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":138,"org.easymock.samples.PartialClassMockTest.testGetArea":52,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":13,"org.easymock.samples.ExampleTest.voteAgainstRemoval":55,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":58,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":109,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":125,"org.easymock.tests2.UsageTest.niceToStrict":171,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":292,"org.easymock.tests2.ThreadingTest.testChangeDefault":30,"org.easymock.tests2.UsageConstraintsTest.testNotNull":40,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":93,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":164,"org.easymock.tests2.UsageTest.defaultResetToNice":174,"org.easymock.samples.ExampleTest.voteAgainstRemovals":53,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":290,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":78,"org.easymock.tests2.CallbackTest.callback":267,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":220,"org.easymock.tests.UsageTest.openCallCountByLastCall":99,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":48,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":147,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":183,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":9,"org.easymock.tests.UsageCallCountTest.tooFewCalls":253,"org.easymock.tests.UsageOverloadedMethodTest.overloading":114,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":249,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":190,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":74,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":113,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":158,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":42,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":189,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":129,"org.easymock.tests.UsageThrowableTest.throwCheckedException":90,"org.easymock.tests2.EasyMockSupportClassTest.testAll":136,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":240,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":45,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":223,"org.easymock.tests2.CaptureTest.testCaptureAll":19,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":201,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":160,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":157,"org.easymock.tests2.UsageConstraintsTest.testMatches":191,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":159,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":286,"org.easymock.samples.ExampleTest.voteForRemovals":56,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":214,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":135,"org.easymock.tests.UsageVarargTest.allKinds":203,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":95,"org.easymock.tests2.DependencyTest.testInterfaceMocking":179,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":213,"org.easymock.samples.BasicClassMockTest.testPrintContent":233,"org.easymock.samples.ExampleTest.addDocument":228,"org.easymock.tests2.DelegateToTest.testStubDelegate":162,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":92,"org.easymock.tests2.AnswerTest.stubAnswer":141,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":27,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":11,"org.easymock.tests2.UsageConstraintsTest.greaterThan":193,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":84,"org.easymock.tests.UsageVarargTest.varargLongAccepted":264,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":126,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":252,"org.easymock.samples.ExampleTest.voteForRemoval":54,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":108,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":132,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":81,"org.easymock.tests.UsageExpectAndReturnTest.floatType":65,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":200,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":219,"org.easymock.tests.UsageThrowableTest.noUpperLimit":242,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":194,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":241,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":168,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":184,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":204,"org.easymock.tests2.SerializationTest.test":3,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":43,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":225,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":144,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":88,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":64,"org.easymock.tests2.UsageConstraintsTest.testSame":0,"org.easymock.samples.SupportTest.addDocument":230,"org.easymock.tests2.CaptureTest.testCaptureFirst":22,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":145,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":176,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":283,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":70,"org.easymock.tests.GenericTest.testPackageScope":61,"org.easymock.tests2.CaptureTest.testCapture2_2446744":130,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":134,"org.easymock.tests2.UsageTest.moreThanOneArgument":170,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":167,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":266,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":256,"org.easymock.tests.UsageExpectAndReturnTest.longType":66,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":142,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":75,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":207,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":224,"org.easymock.tests2.UsageStrictMockTest.differentMethods":178,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":281,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":67,"org.easymock.tests.UsageCallCountTest.tooManyCalls":257,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":86,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":71,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":284,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":237,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":23,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":91,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":8,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":156,"org.easymock.tests2.UsageConstraintsTest.testContains":188,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":140,"org.easymock.tests2.UsageConstraintsTest.testFind":185,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":115,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":210,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":208,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":121,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":209,"org.easymock.tests.UsageExpectAndReturnTest.object":73,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":39,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":123,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":163,"org.easymock.tests2.UsageStrictMockTest.range":177,"org.easymock.tests2.UsageConstraintsTest.lessThan":199,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":150,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":262,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":212,"org.easymock.tests.UsageTest.exactCallCountByLastCall":101,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":6,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":143,"org.easymock.tests2.CaptureTest.testCaptureRightOne":33,"org.easymock.tests2.UsageConstraintsTest.testOr":24,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":217,"org.easymock.tests.UsageRangeTest.combination":83,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":258,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":79,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":118,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":248,"org.easymock.tests.UsageTest.wrongArguments":244,"org.easymock.tests2.MockBuilderTest.testWithConstructor":221,"org.easymock.tests2.EasyMockSupportTest.testVerify":270,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":68,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":76,"org.easymock.tests.UsageVarargTest.varargShortAccepted":263,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":247,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":226,"org.easymock.tests2.UsageConstraintsTest.cmpTo":187,"org.easymock.tests.UsageVarargTest.varargCharAccepted":261,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":285,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":278,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":112,"org.easymock.tests2.UsageTest.openCallCountByLastCall":172,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":173,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":153,"org.easymock.tests2.CaptureTest.testCaptureFromStub":206,"org.easymock.tests.UsageTest.unexpectedCallWithArray":46,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":282,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":89,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":47,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":254,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":222,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":77,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":251,"org.easymock.tests2.UsageConstraintsTest.constraints":34,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":124,"org.easymock.samples.ExampleTest.addAndChangeDocument":229,"org.easymock.tests.CapturesMatcherTest.test":50,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":80,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":231,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":139,"org.easymock.tests2.CompareToTest.testGreateThan":289,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":205,"org.easymock.tests2.UsageTest.resumeIfFailure":175,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":14,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":287,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":69,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":15,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":102,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":259,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":148}}]
