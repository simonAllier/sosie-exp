[{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:189","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, new net.sf.cglib.proxy.Callback[]{ org.easymock.internal.ClassProxyFactory.MockMethodInterceptor })","type":"CtInvocationImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,26,27,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,4,138,139,5,6,7,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,10,11,12,13,182,183,184,185,186,187,15,188,189,190,191,192,193,194,195,196,197,198,199,24,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,25,217,218,219,220,221,222,223,26,26,27,27,224,225,226,227,28,29,30,31,228,32,33,34,36,38,39,40,41,44,45,46,47,48,49,50,51,229,52,53,230,231,232,233,234,1,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,54,259,55,56,57,60,62,63,65,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,68,69,70,71,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[336],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[105,337,218,230,231,273,275,276,278,299],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[114,4,11,12,13,25,30,228,32,34,44,45,46,47,48,49,50,51,229,52,53,57,60,62,63,65,68,303,311],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[72,73,74,75,338,76,77,78,79,339,80,81,82,83,84,2,340,341,3,342,343,85,86,87,88,89,90,344,345,346,347,348,349,350,91,92,93,94,95,96,97,98,351,352,353,354,99,100,101,102,103,104,105,106,107,108,109,110,355,111,112,113,114,115,116,117,356,357,358,359,360,118,119,361,120,121,122,123,124,125,126,127,128,362,129,130,131,132,133,134,135,136,363,137,364,365,366,4,367,138,139,368,5,6,7,369,370,371,372,373,374,375,376,377,378,379,380,381,382,337,383,384,140,385,386,387,388,389,141,390,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,8,9,10,391,392,393,14,182,183,184,185,186,187,394,15,395,396,397,398,399,400,401,402,403,404,336,405,406,407,408,409,410,411,412,188,189,190,191,192,193,194,195,196,197,198,199,413,16,17,18,19,20,21,22,23,24,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,25,217,218,219,220,221,222,414,223,224,225,226,227,28,29,30,31,228,32,33,34,35,415,36,37,38,39,40,41,42,43,416,417,44,418,45,419,420,421,422,46,423,424,425,426,427,47,48,49,51,229,428,230,429,231,232,233,234,1,430,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,55,56,57,58,59,60,61,62,63,64,65,66,260,261,262,263,264,265,266,267,268,269,270,271,272,431,67,432,433,273,274,275,276,277,278,434,435,436,437,438,439,440,441,442,279,443,444,445,446,447,448,280,281,282,283,284,285,286,287,288,289,290,291,292,449,293,294,295,296,450,451,452,453,454,297,455,456,457,458,459,460,69,70,71,298,299,300,301,302,303,304,305,306,461,462,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,463,329,330,331,332,333,334,335],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[76,77,78,79,80,81,88,89,90,344,347,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,108,111,112,113,114,115,116,117,118,119,121,122,123,125,126,127,128,129,130,132,133,134,135,136,4,138,139,5,6,369,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,190,191,192,193,194,195,196,22,23,24,200,201,202,204,205,209,211,212,213,214,215,217,218,219,220,221,222,223,224,225,226,227,28,29,30,31,228,32,33,34,36,44,48,51,229,230,231,232,233,234,1,235,236,237,238,239,240,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,55,260,261,262,264,265,266,267,269,271,272,273,276,277,278,279,280,281,282,283,284,285,286,288,289,290,291,292,297,69,70,71,298,299,300,301,302,303,304,305,306,307,308,310,311,312,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,330,331,332,333,334,335],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:557","failures":[72,73,74,76,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,108,110,111,112,113,114,115,116,117,118,119,121,122,125,363,137,364,4,138,139,5,7,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,11,12,13,182,183,184,185,186,187,406,188,189,190,191,192,193,194,195,196,197,199,24,200,201,202,203,204,205,206,207,211,213,214,25,217,218,219,220,222,223,26,26,27,27,227,30,31,228,32,33,34,36,39,40,41,44,45,46,47,48,49,50,51,229,52,53,230,231,232,233,234,1,235,236,237,238,239,240,242,243,244,245,246,247,248,249,250,251,252,253,255,256,257,258,54,259,57,60,62,63,65,260,261,262,264,266,267,268,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,297,68,69,70,71,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,318,319,322,323,324,325,326,327,328,331,333,334],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:108","failures":[90,91,93,94,95,96,97,98,103,108,118,122,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,186,201,260,267,306],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:52","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[72,73,74,75,76,77,78,79,339,80,81,82,83,84,340,341,342,343,85,86,87,88,89,90,345,348,350,91,92,93,94,95,96,97,98,351,352,353,354,99,100,101,102,103,104,105,106,107,108,109,110,355,111,112,113,114,115,116,117,356,357,358,359,360,118,119,361,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,5,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,15,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,1,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,54,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,434,435,436,437,279,443,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,455,69,70,71,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"toStringMethod","method":"toStringMethod"}},{"transplant":{"position":"org.easymock.internal.Range:75","sourceCode":"return \"expected: \" + org.easymock.internal.Range.(toString())","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[2,340,341,3,342,343,345,348,349,350,18,19,20,31,38,41,43,49,50,52,53,56,58,62,63,65,66,279,443,283,286,288,293,294,295,296,297,455],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[355,464,361,120,123,124,182,201,202,210,213,263,269,270,333],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:196","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:189","sourceCode":"org.easymock.internal.IMocksBehavior = new org.easymock.internal.MocksBehavior(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"type":"type","org.easymock.MockType.NICE":"type"}},{"position":"org.easymock.internal.RecordState:318","failures":[91,94],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[241],"status":-1,"binaryOperator":"(((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"type","type":"type"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"methodName"}},{"transplant":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[72,73,74,75,338,76,77,78,79,339,80,81,82,83,84,2,340,341,3,342,343,85,86,87,88,89,90,344,345,346,347,348,349,350,91,92,93,94,95,96,97,98,351,352,353,354,99,100,101,102,103,104,105,106,107,108,109,110,355,111,112,113,114,115,116,117,356,357,358,359,360,118,119,361,120,121,122,123,124,125,126,127,128,362,129,130,131,132,133,134,135,136,363,137,364,365,366,4,367,138,139,368,5,6,7,369,370,371,372,373,374,375,376,377,378,379,380,381,382,337,383,384,140,385,386,387,388,389,141,390,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,8,9,10,11,12,391,13,392,393,14,182,183,184,185,186,187,394,15,395,396,397,398,399,400,401,402,403,404,336,405,406,407,408,409,410,411,412,188,189,190,191,192,193,194,195,196,197,198,199,413,16,17,18,19,20,21,22,23,24,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,25,217,218,219,220,221,222,414,223,26,26,27,27,224,225,226,227,28,29,30,31,228,32,33,34,35,415,36,465,37,38,39,40,41,42,43,416,417,466,44,467,418,45,419,420,468,469,421,470,471,422,472,46,423,424,425,426,427,47,473,474,48,49,50,51,229,52,53,230,429,231,232,233,234,1,430,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,54,259,55,56,475,57,58,476,59,60,61,62,477,63,478,64,65,479,66,260,261,262,263,264,265,266,267,268,269,270,271,272,431,67,432,433,273,274,275,276,277,278,434,435,436,437,438,439,440,441,442,279,443,444,445,446,447,448,280,281,282,283,284,285,286,287,288,289,290,291,292,449,293,294,295,296,450,451,452,453,454,297,455,456,457,458,459,460,68,480,481,69,70,71,298,299,300,301,302,303,304,305,306,461,462,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,463,329,330,331,332,333,334,335],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[355,464,361,120,123,124,182,201,202,210,213,263,269,270,333],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:826","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[255],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:95","sourceCode":"int = java.lang.Integer.int","type":"CtAssignmentImpl"},"failures":[76,92,188,189,190,191,213,214,233,234,235,237,238,244,247,250,257,271,305,333,334],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"java.lang.Integer.MAX_VALUE":"max"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:73","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:237","sourceCode":"return org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.reflect.Method.getParameterTypes())","type":"CtReturnImpl"},"failures":[368],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod"}},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1915","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<T>(org.easymock.Capture<T>))","type":"CtInvocationImpl"},"failures":[315,317,319,320,321,324,325,326,327],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"captured"}},{"position":"org.easymock.EasyMock:1191","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:117","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[403,412],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[482],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[301,302],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[105,107,273,310,312],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[395,399],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[234,1,235,236,237,238,239,240,241,242,251,252,256,257,315,316,317,318,325,326],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[483,484,485],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[54,477,478,68,480,486,487,488,489,490],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[491,492,361,210,493,494],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[491,492,361,210,493,494],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[54,259,55],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:287","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[77,78,79,80,81,88,89,91,92,93,94,95,96,97,98,105,107,108,110,120,123,124,125,126,127,128,129,130,132,133,134,135,136,4,5,6,144,145,147,152,157,164,165,167,172,177,11,12,13,182,183,184,185,186,188,24,201,202,209,210,211,212,213,214,215,25,217,218,219,220,221,222,223,224,225,226,227,28,29,30,31,228,32,33,34,36,40,44,45,46,47,48,49,50,51,229,52,53,1,236,239,240,242,243,245,248,251,252,253,254,255,256,54,259,55,60,62,63,260,261,263,264,265,269,270,272,273,276,279,280,281,282,283,284,285,286,288,289,290,291,292,297,68,71,299,303,304,307,308,310,312,314,315,316,317,318,320,321,322,323,324,325,328,330,331,332,333,334,335],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[11],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":1,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":118,"org.easymock.tests2.UsageTest.argumentsOrdered":270,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":290,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":443,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":380,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":265,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":224,"org.easymock.tests2.DelegateToTest.testReturnException":310,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":100,"org.easymock.tests.MockingTest.testPartialClassMocking":11,"org.easymock.tests.MockClassControlTest.testToString":18,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":449,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":137,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":387,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":469,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":142,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":45,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":308,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":486,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":240,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":183,"org.easymock.tests2.UsageTest.wrongArguments":263,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":460,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":353,"org.easymock.samples.ExampleTest.answerVsDelegate":218,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":3,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":393,"org.easymock.tests2.UsageConstraintsTest.testNull":236,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":32,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":23,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":289,"org.easymock.tests2.CaptureTest.testPrimitive":318,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":187,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":161,"org.easymock.tests.UsageTest.moreThanOneArgument":119,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":228,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":194,"org.easymock.tests.UsageTest.argumentsOrdered":124,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":203,"org.easymock.tests.UsageVarargTest.varargIntAccepted":128,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":384,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":113,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":56,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":447,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":61,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":372,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":117,"org.easymock.tests.ReplayStateInvalidUsageTest.times":409,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":297,"org.easymock.tests2.DependencyTest.testClassMocking":461,"org.easymock.tests2.AnswerTest.answer":273,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":241,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":385,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":437,"org.easymock.tests2.CaptureTest.testAnd":315,"org.easymock.tests2.UsageTest.strictResetToDefault":261,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":476,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":38,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":193,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":190,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":284,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":207,"org.easymock.tests2.DelegateToTest.testDelegate":314,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":157,"org.easymock.tests.LimitationsTest.mockFinalMethod":367,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":103,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":360,"org.easymock.tests2.DependencyTest.testClassMockingSupport":462,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":198,"org.easymock.tests2.CaptureTest.testCapture1_2446744":319,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":415,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":155,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":435,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":404,"org.easymock.tests.UsageThrowableTest.throwError":91,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":341,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":448,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":474,"org.easymock.samples.PartialClassMockTest.testGetArea":25,"org.easymock.tests.MockingTest.testInterfaceMocking":391,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":336,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":114,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":421,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":143,"org.easymock.tests2.UsageTest.niceToStrict":264,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":349,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":370,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":60,"org.easymock.tests2.MockBuilderTest.testCreateMock":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":425,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":457,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":493,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":151,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":285,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":74,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":75,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":351,"org.easymock.tests.UsageOverloadedMethodTest.overloading":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":472,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":427,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":108,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":246,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":173,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":88,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":245,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":324,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":362,"org.easymock.tests2.EasyMockSupportClassTest.testAll":44,"org.easymock.tests.MockClassControlTest.testEquals":22,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":6,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":159,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":436,"org.easymock.tests2.CaptureTest.testCaptureAll":316,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":358,"org.easymock.tests.MockNameTest.defaultName":350,"org.easymock.tests2.UsageConstraintsTest.testMatches":247,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":402,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":195,"org.easymock.samples.ExampleTest.voteForRemovals":222,"org.easymock.tests.UsageVarargTest.allKinds":136,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":200,"org.easymock.samples.BasicClassMockTest.testPrintContent":29,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":359,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":97,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":329,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":444,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":104,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":313,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":490,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":400,"org.easymock.tests2.UsageConstraintsTest.greaterThan":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":467,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":189,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":41,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":401,"org.easymock.samples.ExampleTest.voteForRemoval":219,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":42,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":301,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":342,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":35,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":24,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":260,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":478,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":377,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":282,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":417,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":99,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":309,"org.easymock.tests2.CaptureTest.testCaptureFirst":328,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":376,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":283,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":272,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":355,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":169,"org.easymock.tests2.UsageTest.moreThanOneArgument":262,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":303,"org.easymock.tests2.CaptureTest.testCapture2_2446744":327,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":386,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":65,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":135,"org.easymock.tests.GenericTest.testBridgedEquals":369,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":80,"org.easymock.tests.UsageExpectAndReturnTest.longType":165,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":280,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":356,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":160,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":197,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":254,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":158,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":83,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":192,"org.easymock.tests.UsageCallCountTest.tooManyCalls":81,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":426,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":170,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":459,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":147,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":96,"org.easymock.tests.MockingTest.testNiceClassMocking":14,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":49,"org.easymock.tests.MockingTest.testClassMocking":9,"org.easymock.tests2.UsageConstraintsTest.testContains":244,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":338,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":71,"org.easymock.tests2.UsageConstraintsTest.testFind":235,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":90,"org.easymock.tests.MockTypeTest.fromEasyMockClass":340,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":208,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":231,"org.easymock.tests.UsageExpectAndReturnTest.object":172,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":36,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":458,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":288,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":487,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":130,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":347,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":482,"org.easymock.tests.UsageTest.exactCallCountByLastCall":125,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":138,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":375,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":204,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":363,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":480,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":178,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":126,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":107,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":439,"org.easymock.tests.MockClassControlTest.testHashCode":21,"org.easymock.tests2.EasyMockSupportTest.testVerify":292,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":471,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":205,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":105,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":73,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":434,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":463,"org.easymock.tests.UsageVarargTest.varargCharAccepted":129,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":394,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":330,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":390,"org.easymock.tests2.UsageTest.openCallCountByLastCall":266,"org.easymock.tests.DefaultClassInstantiatorTest.object":15,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":291,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":72,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":345,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":464,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":422,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":149,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":94,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":453,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":438,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":39,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":20,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":148,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":179,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":47,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":19,"org.easymock.tests2.UsageTest.resumeIfFailure":271,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":2,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":102,"org.easymock.tests2.StubTest.stubWithReturnValue":306,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":477,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":171,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":255,"org.easymock.tests2.SerializationTest.testAllMockedMethod":55,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":140,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":494,"org.easymock.samples.SupportTest.voteForRemovals":227,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":368,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":441,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":154,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":141,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":274,"org.easymock.tests.UsageExpectAndThrowTest.object":152,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":364,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":252,"org.easymock.tests2.DelegateToTest.testWrongClass":312,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":111,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":112,"org.easymock.samples.ConstructorCalledMockTest.testTax":26,"org.easymock.tests.UsageStrictMockTest.range":213,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":432,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":287,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":48,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":153,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":416,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":411,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":123,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":352,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":491,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":87,"org.easymock.tests2.CaptureTest.testCaptureNone":323,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":484,"org.easymock.tests.UsageUnorderedTest.message":182,"org.easymock.tests.UsageVerifyTest.twoReturns":202,"org.easymock.tests.UsageVarargTest.varargByteAccepted":134,"org.easymock.tests2.ThreadingTest.testThreadSafe":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":423,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":79,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":28,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":348,"org.easymock.tests2.CaptureTest.testCapture_2617107":317,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":413,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":388,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":186,"org.easymock.tests2.UsageConstraintsTest.any":242,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":408,"org.easymock.tests2.StubTest.stub":305,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":84,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":389,"org.easymock.tests.UsageExpectAndThrowTest.longType":145,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":101,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":398,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":407,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":332,"org.easymock.tests2.SerializationTest.testClass":54,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":279,"org.easymock.tests.LimitationsTest.mockNativeMethod":4,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":181,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":7,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":452,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":335,"org.easymock.tests2.NameTest.nameForMocksControl":296,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":454,"org.easymock.tests2.MockedExceptionTest.testMockedException":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":418,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":122,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":429,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":146,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":13,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":30,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":63,"org.easymock.tests.MockingTest.testNicePartialClassMocking":12,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":34,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":450,"org.easymock.tests2.CaptureTest.testCaptureLast":322,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":199,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":53,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":239,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":253,"org.easymock.tests.MockingTest.testTwoMocks":10,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":428,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":162,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":150,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":269,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":257,"org.easymock.samples.ExampleTest.removeNonExistingDocument":414,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":456,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":405,"org.easymock.tests.UsageStrictMockTest.differentMethods":214,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":440,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":485,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":396,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":302,"org.easymock.tests2.MockBuilderTest.testCreateMockString":66,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":419,"org.easymock.tests.UsageExpectAndThrowTest.floatType":144,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":248,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":466,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":276,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":481,"org.easymock.tests.UsageVerifyTest.twoThrows":201,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":46,"org.easymock.samples.ExampleTest.voteAgainstRemoval":220,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":381,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":40,"org.easymock.tests.LimitationsTest.privateConstructor":366,"org.easymock.tests2.UsageConstraintsTest.testNotNull":256,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":98,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":69,"org.easymock.tests2.UsageTest.defaultResetToNice":268,"org.easymock.samples.ExampleTest.voteAgainstRemovals":217,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":177,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":382,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":451,"org.easymock.tests.UsageVarargTest.differentLength":131,"org.easymock.tests2.CallbackTest.callback":299,"org.easymock.tests2.UsageConstraintsTest.equals":430,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":465,"org.easymock.tests.UsageTest.openCallCountByLastCall":121,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":232,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":185,"org.easymock.tests.UsageCallCountTest.tooFewCalls":77,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":51,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":354,"org.easymock.tests.UsageThrowableTest.throwCheckedException":95,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":492,"org.easymock.tests.MockingTest.testStrictClassMocking":8,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":139,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":52,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":455,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":50,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":410,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":229,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":278,"org.easymock.tests2.CompareToTest.testGreateOrEqual":0,"org.easymock.tests.ObjectMethodsTest.testHashCode":346,"org.easymock.tests2.NameTest.nameForNiceMock":295,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":304,"org.easymock.tests2.DependencyTest.testInterfaceMocking":307,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":488,"org.easymock.samples.ExampleTest.addDocument":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":424,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":473,"org.easymock.tests2.DelegateToTest.testStubDelegate":311,"org.easymock.tests2.AnswerTest.stubAnswer":277,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":211,"org.easymock.tests.UsageVarargTest.varargLongAccepted":133,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":215,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":379,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":180,"org.easymock.tests.UsageExpectAndReturnTest.floatType":164,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":68,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":27,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":446,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":109,"org.easymock.tests.UsageThrowableTest.noUpperLimit":92,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":250,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":233,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":431,"org.easymock.tests2.SerializationTest.test":259,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":320,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":395,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":163,"org.easymock.tests2.UsageConstraintsTest.testSame":237,"org.easymock.samples.SupportTest.addDocument":226,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":420,"org.easymock.tests.GenericTest.testPackageScope":5,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":206,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":374,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":445,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":392,"org.easymock.tests2.NameTest.nameForMock":293,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":174,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":479,"org.easymock.tests2.UsageStrictMockTest.differentMethods":334,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":37,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":166,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":156,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":344,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":191,"org.easymock.tests2.MockedExceptionTest.testRealException":298,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":343,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":433,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":383,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":331,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":337,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":412,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":184,"org.easymock.tests2.NameTest.nameForStrictMock":294,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":59,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":230,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":33,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":67,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":397,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":251,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":57,"org.easymock.tests2.UsageStrictMockTest.range":333,"org.easymock.tests2.UsageConstraintsTest.lessThan":258,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":442,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":489,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":470,"org.easymock.tests2.CaptureTest.testCaptureRightOne":325,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":483,"org.easymock.tests2.UsageConstraintsTest.testOr":238,"org.easymock.tests.UsageRangeTest.combination":188,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":31,"org.easymock.tests.UsageTest.wrongArguments":120,"org.easymock.tests2.MockBuilderTest.testWithConstructor":475,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":468,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":17,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":167,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":175,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":371,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":399,"org.easymock.tests.UsageVarargTest.varargShortAccepted":132,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":339,"org.easymock.tests2.UsageConstraintsTest.cmpTo":243,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":275,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":373,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":267,"org.easymock.tests2.CaptureTest.testCaptureFromStub":326,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":403,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":58,"org.easymock.tests.UsageTest.unexpectedCallWithArray":361,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":210,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":78,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":176,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":212,"org.easymock.tests2.UsageConstraintsTest.constraints":234,"org.easymock.samples.ExampleTest.addAndChangeDocument":223,"org.easymock.tests.UsageStrictMockTest.testVerify":216,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":225,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":209,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":357,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":321,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":115,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":168,"org.easymock.tests.LimitationsTest.abstractClass":365,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":116,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":110,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":127,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":286}}]
