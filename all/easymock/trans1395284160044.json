[{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:266","sourceCode":"return ","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:47","sourceCode":"this.T = T","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1471","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","delegateTo":"delegateTo"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"failures":[14,15,16,17],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[18],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,14,102,103,104,105,106,107,108,0,1,2,3,4,5,6,7,109,8,9,10,11,12,110,111,112,113,114,115,116,117,118,119,120,16,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,18,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,198,199,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:94","failures":[],"status":0,"binaryOperator":"(\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:33","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>.getName(), java.lang.Boolean.java.lang.Class<java.lang.Boolean>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"equalsMethod"}},{"transplant":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"this.org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[101,10,124,125,129,130,131,132,138,140,141,143,144,150,151,152,181,198,199,206,215,216,217,220,266,267,268,269,270,327,328,329,333,334,343,348,396,397,398,399,400,423],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","answer":"value"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[0,2,9,126,127,130,132,133,135,145,150],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[77,444,92,97,98,111,120,122],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[433],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.MockBuilder:235","failures":[31,81,82,445,446,447,106,448,449,450,451,452,118,198,199],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[453],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:152","sourceCode":"boolean boolean = true","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:185","sourceCode":"final boolean boolean = java.lang.reflect.Method.isAccessible()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:36","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:932","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[454,455,247,456,457,422],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[24,31,32,33,34,35,36,37,38,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,66,67,68,458,69,70,459,71,460,72,73,74,75,76,461,462,77,78,79,80,463,81,84,86,93,96,464,465,466,467,100,101,468,103,104,105,469,15,470,0,1,2,3,4,5,6,7,109,8,9,10,11,12,110,111,112,113,114,115,117,120,121,124,125,126,127,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,149,150,151,152,153,154,155,156,162,170,171,172,174,175,176,18,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,196,197,198,198,199,199,200,201,202,206,207,209,210,211,212,213,214,216,217,218,219,220,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,257,258,259,260,261,262,266,267,268,269,270,271,281,283,284,286,289,291,294,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,319,320,321,322,323,324,325,326,327,328,362,363,364,365,366,367,368,369,370,372,373,375,376,377,378,379,381,382,386,393,394,395,396,397,398,399,400,406,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,432,433,435],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[471,472,473],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:312","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[39,335],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[86,468,104,116,17,153],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:1530","sourceCode":"org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(int))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:117","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"failures":[280],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"i","this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:439","failures":[381,383,384],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[473],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"this.org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","delegateTo":"delegateTo"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:135","sourceCode":"java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:127","sourceCode":"try {\n    java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n}","type":"CtTryImpl"},"failures":[474,475],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[476,124,126],"status":-1,"binaryOperator":"int <= 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:209","sourceCode":"if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"exception":"candidateParameter","throwableClass":"candidateParameter"}},{"position":"org.easymock.Capture:82","failures":[0,2,3,4,5,6,7,8,477,9,10,12],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[108],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:148","sourceCode":"final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"failures":[478],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:94","sourceCode":"return org.easymock.internal.MockInvocationHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])","type":"CtReturnImpl"},"failures":[24,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,66,67,68,458,69,70,459,71,460,72,73,74,76,461,462,77,78,79,80,463,81,84,86,93,96,100,101,468,14,103,104,105,469,107,15,470,0,1,2,3,4,5,6,7,109,8,9,10,11,12,110,111,112,113,114,115,116,117,120,16,121,122,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,162,169,170,171,172,173,174,175,176,18,177,178,179,181,182,183,184,185,187,189,190,191,192,194,196,198,198,199,199,200,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,259,266,267,268,269,270,271,294,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,319,320,321,322,323,324,325,326,327,328,345,351,354,362,363,364,365,366,367,379,381,383,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,422,423,424,425,426,427,431,432,433,435,439,440,441,442,443],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[335],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"failures":[479,480,481],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[273,277],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:325","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))","type":"CtThrowImpl"},"failures":[482],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[380,384],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:345","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:234","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)))","type":"CtThrowImpl"},"failures":[329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,346,347,348,349,350,352],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":127,"org.easymock.tests2.UsageTest.argumentsOrdered":59,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":245,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":73,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":163,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":339,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":54,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":188,"org.easymock.tests2.DelegateToTest.testReturnException":170,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":363,"org.easymock.tests.MockingTest.testPartialClassMocking":432,"org.easymock.tests.MockClassControlTest.testToString":387,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":99,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":354,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":17,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":348,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":86,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":296,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":45,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":134,"org.easymock.tests2.UsageTest.wrongArguments":52,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":216,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":30,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":213,"org.easymock.samples.ExampleTest.answerVsDelegate":190,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":222,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":437,"org.easymock.tests2.UsageConstraintsTest.testNull":130,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":113,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":392,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":72,"org.easymock.tests2.CaptureTest.testPrimitive":3,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":220,"org.easymock.tests.UsageTest.moreThanOneArgument":246,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":315,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":112,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":398,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":439,"org.easymock.tests.UsageTest.argumentsOrdered":252,"org.easymock.tests.UsageVarargTest.varargIntAccepted":370,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":344,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":266,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":468,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":167,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":104,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":331,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":270,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":24,"org.easymock.tests.ReplayStateInvalidUsageTest.times":288,"org.easymock.tests2.AnswerTest.answer":38,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":135,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":346,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":37,"org.easymock.tests2.CaptureTest.testAnd":0,"org.easymock.tests2.UsageTest.strictResetToDefault":50,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":446,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":120,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":397,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":418,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":69,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":443,"org.easymock.tests2.DelegateToTest.testDelegate":174,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":311,"org.easymock.tests.LimitationsTest.mockFinalMethod":295,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":366,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":415,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":316,"org.easymock.tests2.CaptureTest.testCapture1_2446744":4,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":309,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":35,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":282,"org.easymock.tests.UsageThrowableTest.throwError":319,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":168,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":400,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":450,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":98,"org.easymock.samples.PartialClassMockTest.testGetArea":200,"org.easymock.tests.MockingTest.testInterfaceMocking":434,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":283,"org.easymock.tests2.CompareToTest.testLessOrEqual":476,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":267,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":204,"org.easymock.tests2.UsageTest.niceToStrict":53,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":297,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":361,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":473,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":329,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":103,"org.easymock.tests2.MockBuilderTest.testCreateMock":107,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":27,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":454,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":305,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":70,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":410,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":257,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":211,"org.easymock.tests.UsageOverloadedMethodTest.overloading":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":92,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":95,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":404,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":140,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":208,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":235,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":139,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":8,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":371,"org.easymock.tests.MockClassControlTest.testEquals":391,"org.easymock.tests2.EasyMockSupportClassTest.testAll":84,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":382,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":481,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":313,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":413,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":36,"org.easymock.tests2.CaptureTest.testCaptureAll":1,"org.easymock.tests.MockNameTest.defaultName":279,"org.easymock.tests2.UsageConstraintsTest.testMatches":141,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":399,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":280,"org.easymock.samples.ExampleTest.voteForRemovals":194,"org.easymock.tests.UsageVarargTest.allKinds":379,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":393,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":414,"org.easymock.samples.BasicClassMockTest.testPrintContent":202,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":325,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":179,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":173,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":164,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":367,"org.easymock.tests2.UsageConstraintsTest.greaterThan":143,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":417,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":122,"org.easymock.samples.ExampleTest.voteForRemoval":191,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":278,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":176,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":123,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":116,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":49,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":244,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":106,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":336,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":68,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":321,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":362,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":169,"org.easymock.tests2.CaptureTest.testCaptureFirst":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":335,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":458,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":61,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":407,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":231,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":177,"org.easymock.tests2.CaptureTest.testCapture2_2446744":11,"org.easymock.tests2.UsageTest.moreThanOneArgument":51,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":347,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":378,"org.easymock.tests.GenericTest.testBridgedEquals":384,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":264,"org.easymock.tests.UsageExpectAndReturnTest.longType":227,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":411,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":66,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":314,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":148,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":215,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":312,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":396,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":255,"org.easymock.tests.UsageCallCountTest.tooManyCalls":265,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":259,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":232,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":29,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":301,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":324,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":462,"org.easymock.tests.MockingTest.testNiceClassMocking":438,"org.easymock.tests.MockingTest.testClassMocking":430,"org.easymock.tests2.UsageConstraintsTest.testContains":138,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":258,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":155,"org.easymock.tests2.UsageConstraintsTest.testFind":129,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":210,"org.easymock.tests.MockTypeTest.fromEasyMockClass":221,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":420,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":48,"org.easymock.tests.UsageExpectAndReturnTest.object":234,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":117,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":28,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":460,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":373,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":359,"org.easymock.tests.UsageTest.exactCallCountByLastCall":253,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":206,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":334,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":440,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":353,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":82,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":240,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":368,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":403,"org.easymock.tests.MockClassControlTest.testHashCode":390,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":158,"org.easymock.tests2.EasyMockSupportTest.testVerify":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":90,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":479,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":441,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":409,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":401,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":34,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":108,"org.easymock.tests.UsageVarargTest.varargCharAccepted":372,"org.easymock.tests2.CaptureTest.testCaptureMultiple":453,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":180,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":352,"org.easymock.tests2.UsageTest.openCallCountByLastCall":55,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":471,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":74,"org.easymock.tests.DefaultClassInstantiatorTest.object":272,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":408,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":357,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":91,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":303,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":322,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":22,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":157,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":389,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":16,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":302,"org.easymock.tests.CapturesMatcherTest.test":13,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":241,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":254,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":480,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":96,"org.easymock.tests2.UsageTest.resumeIfFailure":60,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":365,"org.easymock.tests2.StubTest.stubWithReturnValue":101,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":447,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":149,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":233,"org.easymock.tests2.SerializationTest.testAllMockedMethod":33,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":345,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":452,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":455,"org.easymock.samples.SupportTest.voteForRemovals":187,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":380,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":160,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":308,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":351,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":39,"org.easymock.tests.UsageExpectAndThrowTest.object":306,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":355,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":146,"org.easymock.tests2.DelegateToTest.testWrongClass":172,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":327,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":328,"org.easymock.tests.UsageStrictMockTest.range":425,"org.easymock.samples.ConstructorCalledMockTest.testTax":198,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":64,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":71,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":461,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":307,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":105,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":83,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":251,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":290,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":212,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":456,"org.easymock.tests2.CaptureTest.testCaptureNone":109,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":205,"org.easymock.tests.UsageUnorderedTest.message":271,"org.easymock.tests.UsageVerifyTest.twoReturns":395,"org.easymock.tests.UsageVarargTest.varargByteAccepted":377,"org.easymock.tests2.ThreadingTest.testThreadSafe":175,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":262,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":201,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":360,"org.easymock.tests2.CaptureTest.testCapture_2617107":2,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":318,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":349,"org.easymock.tests2.UsageConstraintsTest.any":136,"org.easymock.tests2.StubTest.stub":100,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":287,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":256,"org.easymock.tests.UsageExpectAndThrowTest.longType":299,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":350,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":364,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":276,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":286,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":182,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":162,"org.easymock.tests2.SerializationTest.testClass":31,"org.easymock.tests.LimitationsTest.mockNativeMethod":294,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":243,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":383,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":21,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":185,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":482,"org.easymock.tests2.NameTest.nameForMocksControl":467,"org.easymock.tests2.MockedExceptionTest.testMockedException":154,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":85,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":250,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":435,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":47,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":300,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":110,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":469,"org.easymock.tests.MockingTest.testNicePartialClassMocking":433,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":115,"org.easymock.tests2.CaptureTest.testCaptureLast":7,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":19,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":317,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":463,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":133,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":147,"org.easymock.tests.MockingTest.testTwoMocks":431,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":444,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":224,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":304,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":58,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":151,"org.easymock.samples.ExampleTest.removeNonExistingDocument":195,"org.easymock.tests.UsageStrictMockTest.differentMethods":426,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":26,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":284,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":159,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":475,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":274,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":18,"org.easymock.tests2.MockBuilderTest.testCreateMockString":470,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":385,"org.easymock.tests.UsageExpectAndThrowTest.floatType":298,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":142,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":41,"org.easymock.tests.UsageVerifyTest.twoThrows":394,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":402,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":93,"org.easymock.samples.ExampleTest.voteAgainstRemoval":192,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":203,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":340,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":121,"org.easymock.tests.LimitationsTest.privateConstructor":293,"org.easymock.tests2.UsageConstraintsTest.testNotNull":150,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":153,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":326,"org.easymock.tests2.UsageTest.defaultResetToNice":57,"org.easymock.samples.ExampleTest.voteAgainstRemovals":189,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":239,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":341,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":20,"org.easymock.tests.UsageVarargTest.differentLength":374,"org.easymock.tests2.CallbackTest.callback":76,"org.easymock.tests2.UsageConstraintsTest.equals":128,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":118,"org.easymock.tests.UsageTest.openCallCountByLastCall":249,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":124,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":218,"org.easymock.tests.UsageCallCountTest.tooFewCalls":260,"org.easymock.tests2.ConstraintsToStringTest.nullToString":478,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":78,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":214,"org.easymock.tests.UsageThrowableTest.throwCheckedException":323,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":457,"org.easymock.tests.MockingTest.testStrictClassMocking":429,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":80,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":207,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":25,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":77,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":289,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":79,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":43,"org.easymock.tests.ObjectMethodsTest.testHashCode":358,"org.easymock.tests2.NameTest.nameForNiceMock":466,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":178,"org.easymock.tests2.DependencyTest.testInterfaceMocking":44,"org.easymock.samples.ExampleTest.addDocument":193,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":94,"org.easymock.tests2.DelegateToTest.testStubDelegate":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":97,"org.easymock.tests2.AnswerTest.stubAnswer":42,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":423,"org.easymock.tests.UsageVarargTest.varargLongAccepted":376,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":427,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":338,"org.easymock.tests.UsageExpectAndReturnTest.floatType":226,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":242,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":81,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":199,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":405,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":166,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":144,"org.easymock.tests.UsageThrowableTest.noUpperLimit":320,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":125,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":62,"org.easymock.tests2.SerializationTest.test":32,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":5,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":273,"org.easymock.tests2.UsageConstraintsTest.testSame":131,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":225,"org.easymock.samples.SupportTest.addDocument":186,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":87,"org.easymock.tests.GenericTest.testPackageScope":381,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":442,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":333,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":165,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":436,"org.easymock.tests2.NameTest.nameForMock":464,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":236,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":449,"org.easymock.tests2.UsageStrictMockTest.differentMethods":184,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":119,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":228,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":310,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":356,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":419,"org.easymock.tests2.MockedExceptionTest.testRealException":156,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":223,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":65,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":343,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":451,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":181,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":342,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":217,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":291,"org.easymock.tests2.NameTest.nameForStrictMock":465,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":102,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":472,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":46,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":114,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":63,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":145,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":275,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":14,"org.easymock.tests2.UsageStrictMockTest.range":183,"org.easymock.tests2.UsageConstraintsTest.lessThan":152,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":161,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":67,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":337,"org.easymock.tests2.CaptureTest.testCaptureRightOne":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":89,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":474,"org.easymock.tests2.UsageConstraintsTest.testOr":132,"org.easymock.tests.UsageRangeTest.combination":416,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":111,"org.easymock.tests.UsageTest.wrongArguments":248,"org.easymock.tests2.MockBuilderTest.testWithConstructor":445,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":88,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":386,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":229,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":237,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":330,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":277,"org.easymock.tests.UsageVarargTest.varargShortAccepted":375,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":263,"org.easymock.tests2.UsageConstraintsTest.cmpTo":137,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":40,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":332,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":56,"org.easymock.tests2.CaptureTest.testCaptureFromStub":10,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":281,"org.easymock.tests.UsageTest.unexpectedCallWithArray":247,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":422,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":261,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":448,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":238,"org.easymock.tests2.CaptureTest.testCapture":477,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":424,"org.easymock.tests2.UsageConstraintsTest.constraints":126,"org.easymock.samples.ExampleTest.addAndChangeDocument":196,"org.easymock.tests.UsageStrictMockTest.testVerify":428,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":197,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":421,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":412,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":6,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":268,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":230,"org.easymock.tests.LimitationsTest.abstractClass":292,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":406,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":269,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":459,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":369}}]
