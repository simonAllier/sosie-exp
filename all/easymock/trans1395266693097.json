[{"position":"org.easymock.internal.ArgumentToString:46","failures":[0,1,2,3,4,5],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[6,7],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[8],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","constructorArgs":"constructorArgs","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[9],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[53,54,55],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[56,57,58,59],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Results:39","sourceCode":"if (!(org.easymock.internal.Range.hasFixedCount())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[10,60,61,62,11,63,64,65,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,33,93,94,95,34,96,97,98,35,36,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,37,125,126,127,38,39,128,129,44,130,131,3,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,46,158,159,160,161,162,163,47,164,165,166,167,168,169,170,171,172,173,8,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,9,199,200,201,202,203,204,205,206,207,208,50,209,210,211,212,213,214,215,216,217,218,219,220,221,57,58,59,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,52,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastRange":"range"}},{"transplant":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[267,268,269,270,271,272,273,274,275,222],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[276,168,277,179,278,279],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[280,281,282,283,284,10,60,0,61,62,11,63,64,65,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,66,67,68,302,69,70,303,71,72,73,74,75,76,304,305,77,78,79,80,306,81,82,307,83,32,308,309,310,84,85,311,86,312,313,314,87,88,89,90,91,315,92,33,316,93,317,94,95,34,318,319,320,96,97,98,35,36,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,37,125,126,127,38,39,321,322,323,324,325,326,128,129,327,328,40,41,42,43,44,45,329,330,130,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,6,346,347,348,7,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,131,3,132,133,134,135,136,386,137,138,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,139,140,141,142,143,144,145,146,147,148,149,150,151,152,405,153,267,268,154,155,156,157,46,158,159,160,161,162,163,47,406,164,165,166,167,407,408,409,410,411,412,168,413,169,414,170,415,416,417,418,419,420,421,422,171,172,173,8,174,175,176,177,423,424,178,425,426,427,277,179,53,428,54,180,181,182,183,429,184,185,186,187,188,189,430,190,191,192,193,194,195,196,197,198,9,199,200,201,202,203,204,205,206,431,432,207,208,433,434,435,436,437,48,49,50,51,209,438,210,211,212,213,214,215,216,439,440,441,442,443,217,444,445,446,447,448,449,450,218,219,220,451,221,57,58,59,222,452,453,223,224,225,226,227,228,229,454,230,231,232,233,234,455,456,55,457,458,459,460,461,462,463,464,465,466,467,468,235,469,470,236,471,472,473,474,475,476,477,478,479,237,480,481,482,483,484,238,485,486,487,488,489,490,491,239,492,493,494,495,496,497,498,240,241,242,243,244,245,246,52,499,247,248,249,250,500,251,252,253,501,254,255,256,257,258,259,260,261,262,263,264,502,265,266],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[373],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[373,246],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[56,57,58,59],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[182,183,185,187,188,430,9,203,254,256,264],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:159","failures":[267,268,408,503,504,419,425],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[219],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[196],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[357,431,208,433],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:127","sourceCode":"try {\n    java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n}","type":"CtTryImpl"},"failures":[505,506],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1065","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:47","sourceCode":"java.lang.StringBuffer.append(\"and(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[507,508,509],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.MocksControl:345","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1848","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[414,510,511,512,513,452],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cls":"parameterType","type":"parameterType"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:206","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:214","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[267,268,408,411,414,416,419,425,57,222,452,453],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[296,297,298,342,358],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"position":"org.easymock.EasyMock:1952","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:147","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cached":"org.easymock.internal.MocksControl.classProxyFactory"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:422","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.JavaProxyFactory:34","sourceCode":"return java.lang.reflect.Proxy.java.lang.reflect.Proxy.getInvocationHandler(java.lang.Object)","type":"CtReturnImpl"},"failures":[280,281,282,283,284,10,60,0,61,62,11,63,64,65,291,292,294,295,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,66,67,68,69,70,303,71,72,73,74,75,304,305,77,78,79,80,306,81,82,83,32,311,312,313,87,88,89,90,91,315,92,33,93,317,94,95,34,319,320,96,97,98,35,36,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,37,125,126,127,38,39,321,322,323,324,325,40,41,42,43,44,45,332,333,334,335,336,337,338,339,340,341,342,343,375,376,377,378,380,381,382,385,131,3,132,133,134,135,136,386,137,138,139,140,141,142,143,147,148,149,150,151,152,405,153,46,158,159,160,161,162,163,47,406,164,165,166,167,171,174,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,9,199,200,201,202,203,204,205,206,207,208,433,434,435,436,437,48,49,50,51,209,210,211,212,213,214,215,216,218,219,220,221,58,456,55,457,458,462,465,498,240,241,242,243,244,245,246,52,499,247,254,255,256,257,258,259,260,261,262,263,264,502,265,266],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[56,57,58,59],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[288,293,76,308,309,310,84,85,86,314,326,128,129,327,328,329,330,130,331,345,6,346,347,348,7,350,384,397,398,399,400,401,402,403,404,145,267,267,268,268,154,155,407,276,409,410,412,168,413,169,170,416,417,418,514,420,173,8,175,176,177,423,178,425,426,427,277,179,53,428,54,48,49,50,278,515,516,279,517,57,59,222,452,459,463,466,467,468,235,469,470,236,471,472,473,474,475,476,477,478,479,237,480,481,482,483,484,238,485,486,247,248,249,250,252,253],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"name","method":"result","paramTypes":"paramTypes","this":"this"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[182,183,185,187,188,430,9,203,254,256,264],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[280,281,282,283,84,85,86,87,88,89,90,97,103,104,105,106,107,108,111,112,114,115,116,118,119,120,121,122,130,132,134,135,137,138,139,140,141,142,143,145,147,149,150,152,157,409,168,169,170,418,171,172,173,8,174,175,176,177,178,277,179,53,214,219,222,235,236,237,238,241,243,244,247,248,249,250,251,252,253],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"returnedType"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:50","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"mock"}},{"position":"org.easymock.EasyMock:933","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:55","sourceCode":"java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection)","type":"CtInvocationImpl"},"failures":[144,146,439,444,487,492],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1901","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Compare<T>(T , java.util.Comparator<? super T> , org.easymock.LogicalOperator))","type":"CtInvocationImpl"},"failures":[196],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[414,416,510,511,512,518,513,57,222,452],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[182,183,185,187,188,430,9,203,254,256,264],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"failures":[438],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[280,281,282,283,284,10,60,0,61,62,11,63,64,65,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,66,67,68,69,70,303,71,72,73,74,75,76,77,78,79,80,306,81,82,83,32,84,85,86,87,89,90,91,92,33,317,94,95,34,96,97,98,35,36,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,37,125,126,127,38,39,321,322,323,324,325,128,129,40,41,42,43,44,45,130,375,376,377,378,385,131,3,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,267,268,154,155,156,157,46,158,159,160,161,162,163,47,406,164,165,166,167,407,409,168,413,169,170,417,418,420,171,172,173,8,174,175,176,177,423,178,427,277,179,53,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,9,199,200,201,202,203,204,205,206,207,208,433,434,435,436,437,48,49,50,51,209,210,211,212,213,214,215,216,217,218,219,220,221,57,58,59,222,223,224,225,226,227,228,229,454,230,231,232,233,234,235,236,237,238,239,498,240,241,242,243,244,245,246,52,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,502,265,266],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"cls":"leafClass","type":"leafClass"}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[10,0,61,63,64,65,519,520,303,306,81,82,87,96,101,102,385,3,133,134,135,521,396,46,160,161,162,164,165,166,167,409,417,418,420,8,277,53,182,196,216,224,228,229,231,498,242,243,244],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:210","failures":[267,267,268,268,415,416,425,57,222,452],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":183,"org.easymock.tests2.UsageTest.argumentsOrdered":165,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":10,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":232,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":444,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":361,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":162,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":146,"org.easymock.tests2.DelegateToTest.testReturnException":218,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":41,"org.easymock.tests.MockingTest.testPartialClassMocking":84,"org.easymock.tests.MockClassControlTest.testToString":399,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":455,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":286,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":54,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":474,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":12,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":236,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":172,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":510,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":189,"org.easymock.tests2.UsageTest.wrongArguments":160,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":97,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":497,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":377,"org.easymock.samples.ExampleTest.answerVsDelegate":148,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":293,"org.easymock.tests2.UsageConstraintsTest.testNull":185,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":313,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":175,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":404,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":231,"org.easymock.tests2.CaptureTest.testPrimitive":257,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":99,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":31,"org.easymock.tests.UsageTest.moreThanOneArgument":60,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":174,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":282,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":391,"org.easymock.tests.UsageTest.argumentsOrdered":64,"org.easymock.tests.UsageVarargTest.varargIntAccepted":68,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":366,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":139,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":407,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":461,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":448,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":413,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":353,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":143,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":509,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":239,"org.easymock.tests.ReplayStateInvalidUsageTest.times":340,"org.easymock.tests2.DependencyTest.testClassMocking":421,"org.easymock.tests2.AnswerTest.answer":206,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":430,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":368,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":437,"org.easymock.tests2.CaptureTest.testAnd":254,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":290,"org.easymock.tests2.UsageTest.strictResetToDefault":158,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":427,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":411,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":281,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":89,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":227,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":395,"org.easymock.tests2.DelegateToTest.testDelegate":221,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":27,"org.easymock.tests.LimitationsTest.mockFinalMethod":331,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":44,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":325,"org.easymock.tests2.DependencyTest.testClassMockingSupport":422,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":318,"org.easymock.tests2.CaptureTest.testCapture1_2446744":258,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":424,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":25,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":435,"org.easymock.tests.UsageThrowableTest.throwError":123,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":334,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":292,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":449,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":396,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":284,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":486,"org.easymock.samples.PartialClassMockTest.testGetArea":145,"org.easymock.tests.MockingTest.testInterfaceMocking":311,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":335,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":140,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":475,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":384,"org.easymock.tests2.UsageTest.niceToStrict":161,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":13,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":275,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":351,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":168,"org.easymock.tests2.MockBuilderTest.testCreateMock":417,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":482,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":494,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":4,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":21,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":228,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":289,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":301,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":304,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":375,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":272,"org.easymock.tests.UsageOverloadedMethodTest.overloading":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":484,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":479,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":33,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":194,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":114,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":94,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":193,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":263,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":302,"org.easymock.tests.MockClassControlTest.testEquals":403,"org.easymock.tests2.EasyMockSupportClassTest.testAll":235,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":129,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":29,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":278,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":504,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":436,"org.easymock.tests2.CaptureTest.testCaptureAll":255,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":323,"org.easymock.tests.MockNameTest.defaultName":307,"org.easymock.tests2.UsageConstraintsTest.testMatches":195,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":283,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":332,"org.easymock.samples.ExampleTest.voteForRemovals":152,"org.easymock.tests.UsageVarargTest.allKinds":75,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":100,"org.easymock.samples.BasicClassMockTest.testPrintContent":155,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":324,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":38,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":498,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":451,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":445,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":45,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":513,"org.easymock.tests2.UsageConstraintsTest.greaterThan":197,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":469,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":88,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":53,"org.easymock.samples.ExampleTest.voteForRemoval":149,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":350,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":428,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":212,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":294,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":462,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":423,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":46,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":76,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":358,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":225,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":467,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":40,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":450,"org.easymock.tests2.CaptureTest.testCaptureFirst":266,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":357,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":226,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":167,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":317,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":110,"org.easymock.tests2.UsageTest.moreThanOneArgument":159,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":214,"org.easymock.tests2.CaptureTest.testCapture2_2446744":265,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":418,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":369,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":74,"org.easymock.tests.GenericTest.testBridgedEquals":328,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":273,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":81,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":270,"org.easymock.tests.UsageExpectAndReturnTest.longType":106,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":223,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":321,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":514,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":30,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":390,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":201,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":28,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":280,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":297,"org.easymock.tests.UsageCallCountTest.tooManyCalls":82,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":507,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":483,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":111,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":496,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":17,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":127,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":248,"org.easymock.tests.MockingTest.testNiceClassMocking":314,"org.easymock.tests.MockingTest.testClassMocking":309,"org.easymock.tests2.UsageConstraintsTest.testContains":192,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":276,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":305,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":50,"org.easymock.tests2.UsageConstraintsTest.testFind":184,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":34,"org.easymock.tests.MockTypeTest.fromEasyMockClass":291,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":385,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":210,"org.easymock.tests.UsageExpectAndReturnTest.object":113,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":178,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":495,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":230,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":511,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":70,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":382,"org.easymock.tests.UsageTest.exactCallCountByLastCall":65,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":274,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":83,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":356,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":392,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":285,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":452,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":119,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":66,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":92,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":440,"org.easymock.tests.MockClassControlTest.testHashCode":402,"org.easymock.tests2.EasyMockSupportTest.testVerify":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":477,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":508,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":393,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":91,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":300,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":519,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":434,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":499,"org.easymock.tests.UsageVarargTest.varargCharAccepted":69,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":344,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":240,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":374,"org.easymock.tests2.UsageTest.openCallCountByLastCall":163,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":233,"org.easymock.tests.DefaultClassInstantiatorTest.object":345,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":299,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":380,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":520,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":478,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":19,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":517,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":125,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":490,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":439,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":401,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":277,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":18,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":120,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":296,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":400,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":238,"org.easymock.tests2.UsageTest.resumeIfFailure":166,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":288,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":460,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":43,"org.easymock.tests2.StubTest.stubWithReturnValue":52,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":414,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":112,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":202,"org.easymock.tests2.SerializationTest.testAllMockedMethod":59,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":367,"org.easymock.samples.SupportTest.voteForRemovals":157,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":5,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":326,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":442,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":24,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":56,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":373,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":431,"org.easymock.tests.UsageExpectAndThrowTest.object":22,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":287,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":199,"org.easymock.tests2.DelegateToTest.testWrongClass":220,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":137,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":138,"org.easymock.tests.UsageStrictMockTest.range":134,"org.easymock.samples.ConstructorCalledMockTest.testTax":267,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":464,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":454,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":247,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":271,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":23,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":466,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":63,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":342,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":376,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":1,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":389,"org.easymock.tests2.CaptureTest.testCaptureNone":262,"org.easymock.tests.UsageUnorderedTest.message":96,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":521,"org.easymock.tests.UsageVerifyTest.twoReturns":102,"org.easymock.tests.UsageVarargTest.varargByteAccepted":73,"org.easymock.tests2.ThreadingTest.testThreadSafe":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":480,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":80,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":154,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":383,"org.easymock.tests2.CaptureTest.testCapture_2617107":256,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":320,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":36,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":371,"org.easymock.tests2.UsageConstraintsTest.any":190,"org.easymock.tests2.StubTest.stub":246,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":339,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":298,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":42,"org.easymock.tests.UsageExpectAndThrowTest.longType":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":372,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":348,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":338,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":242,"org.easymock.tests2.SerializationTest.testClass":57,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":217,"org.easymock.tests.LimitationsTest.mockNativeMethod":130,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":122,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":327,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":489,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":279,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":245,"org.easymock.tests2.NameTest.nameForMocksControl":458,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":491,"org.easymock.tests2.MockedExceptionTest.testMockedException":49,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":470,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":11,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":438,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":16,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":86,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":173,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":170,"org.easymock.tests.MockingTest.testNicePartialClassMocking":85,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":177,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":487,"org.easymock.tests2.CaptureTest.testCaptureLast":261,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":319,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":188,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":253,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":200,"org.easymock.tests.MockingTest.testTwoMocks":310,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":501,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":103,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":20,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":164,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":204,"org.easymock.samples.ExampleTest.removeNonExistingDocument":405,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":493,"org.easymock.tests.UsageStrictMockTest.differentMethods":135,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":336,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":441,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":506,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":346,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":213,"org.easymock.tests2.MockBuilderTest.testCreateMockString":420,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":471,"org.easymock.tests.UsageExpectAndThrowTest.floatType":14,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":468,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":207,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":453,"org.easymock.tests.UsageVerifyTest.twoThrows":101,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":315,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":237,"org.easymock.samples.ExampleTest.voteAgainstRemoval":150,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":387,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":362,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":179,"org.easymock.tests.LimitationsTest.privateConstructor":330,"org.easymock.tests2.UsageConstraintsTest.testNotNull":203,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":39,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":48,"org.easymock.tests2.UsageTest.defaultResetToNice":406,"org.easymock.samples.ExampleTest.voteAgainstRemovals":147,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":118,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":363,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":488,"org.easymock.tests.UsageVarargTest.differentLength":303,"org.easymock.tests2.CallbackTest.callback":216,"org.easymock.tests2.UsageConstraintsTest.equals":429,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":425,"org.easymock.tests.UsageTest.openCallCountByLastCall":62,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":180,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":35,"org.easymock.tests.UsageCallCountTest.tooFewCalls":78,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":250,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":378,"org.easymock.tests.UsageThrowableTest.throwCheckedException":126,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":2,"org.easymock.tests.MockingTest.testStrictClassMocking":308,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":32,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":252,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":492,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":249,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":341,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":251,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":433,"org.easymock.tests.ObjectMethodsTest.testHashCode":381,"org.easymock.tests2.NameTest.nameForNiceMock":457,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":215,"org.easymock.tests2.DependencyTest.testInterfaceMocking":171,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":512,"org.easymock.samples.ExampleTest.addDocument":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":481,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":485,"org.easymock.tests2.DelegateToTest.testStubDelegate":219,"org.easymock.tests2.AnswerTest.stubAnswer":208,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":132,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":415,"org.easymock.tests.UsageVarargTest.varargLongAccepted":72,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":136,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":360,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":121,"org.easymock.tests.UsageExpectAndReturnTest.floatType":105,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":222,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":268,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":447,"org.easymock.tests.UsageThrowableTest.noUpperLimit":124,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":198,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":316,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":181,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":459,"org.easymock.tests2.SerializationTest.test":58,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":259,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":6,"org.easymock.tests2.UsageConstraintsTest.testSame":186,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":104,"org.easymock.samples.SupportTest.addDocument":156,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":500,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":472,"org.easymock.tests.GenericTest.testPackageScope":128,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":355,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":446,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":312,"org.easymock.tests2.NameTest.nameForMock":456,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":115,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":419,"org.easymock.tests2.UsageStrictMockTest.differentMethods":244,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":426,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":107,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":26,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":379,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":90,"org.easymock.tests2.MockedExceptionTest.testRealException":51,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":295,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":465,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":365,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":241,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":364,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":98,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":343,"org.easymock.tests2.NameTest.nameForStrictMock":55,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":412,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":209,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":176,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":463,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":9,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":347,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":409,"org.easymock.tests2.UsageStrictMockTest.range":243,"org.easymock.tests2.UsageConstraintsTest.lessThan":205,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":515,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":443,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":518,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":476,"org.easymock.tests2.CaptureTest.testCaptureRightOne":264,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":505,"org.easymock.tests2.UsageConstraintsTest.testOr":187,"org.easymock.tests.UsageRangeTest.combination":87,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":8,"org.easymock.tests.UsageTest.wrongArguments":61,"org.easymock.tests2.MockBuilderTest.testWithConstructor":408,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":473,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":398,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":108,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":116,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":352,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":7,"org.easymock.tests.UsageVarargTest.varargShortAccepted":71,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":306,"org.easymock.tests2.UsageConstraintsTest.cmpTo":191,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":354,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":47,"org.easymock.tests2.CaptureTest.testCaptureFromStub":502,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":333,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":410,"org.easymock.tests.UsageTest.unexpectedCallWithArray":0,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":3,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":79,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":503,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":117,"org.easymock.tests2.UsageConstraintsTest.constraints":182,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":133,"org.easymock.samples.ExampleTest.addAndChangeDocument":153,"org.easymock.tests.UsageStrictMockTest.testVerify":386,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":144,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":131,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":322,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":260,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":516,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":141,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":109,"org.easymock.tests.LimitationsTest.abstractClass":329,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":142,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":93,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":67,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":229}}]
