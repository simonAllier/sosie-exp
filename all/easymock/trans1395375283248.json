[{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:50","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Long.java.lang.Class<java.lang.Long>, java.lang.Long.java.lang.Long.valueOf(0))","type":"CtInvocationImpl"},"failures":[126,249,154,161,185,189,195,202,203,212,218,225,226],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[37,250,38,251,109,111,113,252,253,133,254,134,136,255],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1530","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(int))","type":"CtInvocationImpl"},"failures":[3,5,7,8,19,23,82,87,88,91,180],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:136","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[256,257,258],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[208],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[32,259,35,92,260,261,235],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[0,1,2,3,262,4,5,6,7,8,9,263,10,11,12,13,14,15,16,17,18,19,20,21,264,22,23,24,25,265,266,267,268,269,270,26,27,271,272,28,273,29,274,275,276,277,30,278,279,280,281,282,31,32,283,259,33,34,35,284,36,37,285,250,38,39,40,41,286,287,288,289,290,42,291,292,293,294,295,296,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,297,298,62,63,299,300,301,64,65,66,67,302,303,304,305,68,69,306,70,71,307,308,72,309,310,73,311,312,74,75,313,314,76,78,79,81,82,83,84,315,85,86,87,88,89,90,316,317,91,92,318,319,320,321,322,93,323,324,325,326,327,328,329,94,95,97,98,330,101,102,103,104,105,331,106,107,251,108,109,110,111,332,333,112,334,113,335,114,252,336,337,338,115,116,117,118,339,340,341,342,343,344,345,119,346,347,348,349,350,351,352,353,120,354,355,356,357,358,359,360,361,362,363,364,365,366,367,121,368,369,122,123,260,370,371,372,373,124,374,125,126,127,128,129,130,131,375,132,253,133,376,254,134,135,136,137,138,139,377,378,249,379,380,381,382,383,384,385,386,387,388,389,390,391,143,144,392,393,145,146,147,148,149,394,395,396,397,398,399,400,401,402,403,404,405,406,261,407,408,409,410,411,412,413,414,415,416,150,151,152,153,154,417,155,255,418,419,420,421,422,423,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,424,425,426,427,428,429,430,431,432,433,171,172,173,434,174,175,435,176,177,178,179,180,181,182,183,184,185,436,437,438,439,440,441,256,442,443,444,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,445,446,208,447,448,449,450,451,452,453,454,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,455,229,230,456,457,458,459,460,461,231,232,462,463,233,234,235,236,237,238,239,464,240,241,242,243,244,245,248],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:48","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"toString\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:55","sourceCode":"try {\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object);\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)));\n    java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)));\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[28,29,30,31,45,63,299,300,64,65,66,67,302,303,304,77,79,80,94,95,96,97,99,100,107,251,109,110,111,332,112,113,335,114,252,337,344,345,119,346,347,348,349,350,351,120,131,384,140,141,142,428,431,231,232,462,463,243,244,246,246,247,247,248],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:44","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n        if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n            org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n        } \n    }\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,262,4,5,6,7,8,9,263,10,11,12,13,14,15,16,17,18,19,20,21,264,22,23,24,25,265,465,466,266,267,268,269,270,26,27,271,272,467,28,468,273,29,274,275,469,470,276,471,472,277,473,30,278,279,280,281,282,31,474,475,32,283,259,33,34,35,284,36,37,285,250,38,39,40,41,286,287,288,289,290,42,291,292,293,294,295,296,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,476,61,297,298,62,63,299,300,301,64,65,66,67,477,478,302,303,304,305,68,69,306,70,71,307,308,72,309,310,73,311,312,74,75,313,314,76,77,78,79,80,479,81,82,83,84,315,85,86,87,88,89,90,316,317,91,92,318,319,320,321,322,93,323,324,325,326,327,328,480,481,482,483,484,485,329,94,95,96,97,486,98,99,100,330,101,102,103,104,105,331,106,107,251,108,109,110,111,332,333,112,487,334,113,335,114,252,336,337,338,115,116,117,118,339,340,341,342,343,344,345,119,346,347,348,349,350,351,352,353,120,354,355,356,357,358,359,360,361,362,363,364,365,366,367,121,368,369,122,123,260,370,371,372,373,124,374,125,126,127,128,129,130,131,375,132,253,133,376,254,134,135,136,137,138,139,377,378,249,379,380,381,382,383,384,140,141,385,142,386,387,388,389,390,391,143,144,392,393,145,146,147,148,149,394,395,396,397,398,399,400,401,402,403,404,405,406,261,407,408,409,410,411,412,413,414,415,416,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,150,151,152,153,154,417,155,255,418,419,420,421,422,423,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,424,425,426,427,428,510,511,429,430,431,432,433,171,172,173,434,174,175,435,176,177,178,179,180,181,182,183,184,185,436,438,439,440,441,256,442,444,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,445,446,208,447,448,449,450,451,452,453,454,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,455,229,230,456,457,458,459,460,461,231,232,462,463,233,234,235,236,237,238,239,464,240,241,242,243,244,245,246,247,248],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:40","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(double.double, java.lang.Double.java.lang.Double)","type":"CtInvocationImpl"},"failures":[512],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:218","failures":[29,30,246,247,248],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return this.java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[476,485,333],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"properties":"properties","defaultValue":"key","key":"key"}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:43","sourceCode":"org.easymock.Capture<T>.this(org.easymock.CaptureType.org.easymock.CaptureType)","type":"CtInvocationImpl"},"failures":[81,83,84,315,85,86,89,513,90],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[16,71,110,361],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:38","sourceCode":"new java.util.HashSet<java.lang.String>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:270","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[379,380,381,397],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:197","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1483","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if (java.lang.reflect.Constructor<T> == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"failures":[514,478,77,80,479,515,516,517,518,512],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockStatement:42","sourceCode":"org.easymock.EasyMockSupport.org.easymock.EasyMockSupport.injectMocks(java.lang.Object)","type":"CtInvocationImpl"},"failures":[42,93,233,245],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[519],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[16,71,110,361],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"failures":[37,38,39,69,124,133,134,135,137,138,139,155],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.LastControl:93","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.LinkedList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:77","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()","type":"CtLocalVariableImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,263,10,11,12,13,14,15,16,17,18,19,20,21,264,22,23,24,25,26,27,28,32,283,259,33,34,284,36,37,285,250,38,39,40,41,42,47,48,49,50,51,52,53,54,55,56,57,58,60,61,297,298,62,63,64,66,67,305,68,69,306,70,71,307,308,72,309,310,73,311,312,74,75,313,314,76,77,78,81,82,83,84,315,85,86,87,88,89,90,316,317,91,92,93,105,106,107,251,110,112,113,335,114,252,121,368,369,122,123,260,370,371,372,373,124,374,125,126,127,128,129,130,375,132,253,133,376,254,134,135,136,137,138,139,378,249,379,380,381,390,143,144,392,393,145,146,409,415,417,155,418,419,420,421,422,423,160,161,162,163,164,427,171,172,173,174,175,435,176,177,178,179,180,181,182,183,184,185,436,438,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,445,446,447,448,449,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,455,229,230,456,457,458,459,460,232,233,234,235,236,237,238,239,240,241,242,243,244,245],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"failures":[520],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"java.lang.reflect.Field.getType()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"targetField":"targetField"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"org.easymock.internal.LastControl.NO_MATCHERS_FOUND"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((this.org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[477,478,77,80,479,487,246,246,247,247],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":3,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":417,"org.easymock.tests2.UsageTest.argumentsOrdered":310,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":57,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":291,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":404,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":71,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":245,"org.easymock.tests2.DelegateToTest.testReturnException":74,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":126,"org.easymock.tests.MockingTest.testPartialClassMocking":140,"org.easymock.tests.MockClassControlTest.testToString":346,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":338,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":390,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":412,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":470,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":29,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":209,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":27,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":509,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":515,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":9,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":143,"org.easymock.tests2.UsageTest.wrongArguments":306,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":328,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":158,"org.easymock.samples.ExampleTest.answerVsDelegate":235,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":431,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":387,"org.easymock.tests2.UsageConstraintsTest.testNull":5,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":109,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":56,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":351,"org.easymock.tests2.CaptureTest.testPrimitive":84,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":145,"org.easymock.tests.UsageTest.moreThanOneArgument":155,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":228,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":108,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":162,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":450,"org.easymock.tests.UsageTest.argumentsOrdered":422,"org.easymock.tests.UsageVarargTest.varargIntAccepted":173,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":408,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":181,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":63,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":466,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":295,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":65,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":396,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":185,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":493,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":93,"org.easymock.tests.ReplayStateInvalidUsageTest.times":363,"org.easymock.tests2.DependencyTest.testClassMocking":269,"org.easymock.tests2.AnswerTest.answer":32,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":263,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":410,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":104,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":511,"org.easymock.tests2.CaptureTest.testAnd":81,"org.easymock.tests2.UsageTest.strictResetToDefault":68,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":113,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":161,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":148,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":51,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":454,"org.easymock.tests2.DelegateToTest.testDelegate":76,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":492,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":224,"org.easymock.tests.LimitationsTest.mockFinalMethod":354,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":129,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":154,"org.easymock.tests2.DependencyTest.testClassMockingSupport":270,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":445,"org.easymock.tests2.CaptureTest.testCapture1_2446744":315,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":333,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":222,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":102,"org.easymock.tests.UsageThrowableTest.throwError":455,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":357,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":430,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":296,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":475,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":496,"org.easymock.samples.PartialClassMockTest.testGetArea":248,"org.easymock.tests.MockingTest.testInterfaceMocking":385,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":358,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":182,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":378,"org.easymock.tests2.UsageTest.niceToStrict":70,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":210,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":276,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":344,"org.easymock.tests2.ThreadingTest.testChangeDefault":476,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":394,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":64,"org.easymock.tests2.MockBuilderTest.testCreateMock":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":280,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":325,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":218,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":52,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":510,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":381,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":165,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":156,"org.easymock.tests.UsageOverloadedMethodTest.overloading":122,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":473,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":282,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":14,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":372,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":197,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":369,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":13,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":257,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":89,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":434,"org.easymock.tests2.EasyMockSupportClassTest.testAll":28,"org.easymock.tests.MockClassControlTest.testEquals":350,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":232,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":226,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":152,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":103,"org.easymock.tests2.CaptureTest.testCaptureAll":82,"org.easymock.tests.MockNameTest.defaultName":367,"org.easymock.tests2.UsageConstraintsTest.testMatches":15,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":163,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":355,"org.easymock.samples.ExampleTest.voteForRemovals":239,"org.easymock.tests.UsageVarargTest.allKinds":180,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":137,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":153,"org.easymock.samples.BasicClassMockTest.testPrintContent":244,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":459,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":284,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":130,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":292,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":314,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":512,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":443,"org.easymock.tests2.UsageConstraintsTest.greaterThan":17,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":468,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":147,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":252,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":497,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":444,"org.easymock.samples.ExampleTest.voteForRemoval":236,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":61,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":336,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":432,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":332,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":489,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":131,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":305,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":478,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":401,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":49,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":272,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":125,"org.easymock.tests2.CaptureTest.testCaptureFirst":91,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":312,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":400,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":50,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":311,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":374,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":193,"org.easymock.tests2.UsageTest.moreThanOneArgument":69,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":298,"org.easymock.tests2.CaptureTest.testCapture2_2446744":317,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":411,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":303,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":179,"org.easymock.tests.GenericTest.testBridgedEquals":463,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":425,"org.easymock.tests.UsageExpectAndReturnTest.longType":189,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":150,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":47,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":227,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":427,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":264,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":225,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":448,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":160,"org.easymock.tests.UsageCallCountTest.tooManyCalls":426,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":281,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":194,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":327,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":214,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":458,"org.easymock.tests.MockingTest.testNiceClassMocking":388,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":95,"org.easymock.tests.MockingTest.testClassMocking":383,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":166,"org.easymock.tests2.UsageConstraintsTest.testContains":12,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":45,"org.easymock.tests2.UsageConstraintsTest.testFind":4,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":123,"org.easymock.tests.MockTypeTest.fromEasyMockClass":429,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":106,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":375,"org.easymock.tests.UsageExpectAndReturnTest.object":196,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":112,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":326,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":55,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":516,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":175,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":342,"org.easymock.tests.UsageTest.exactCallCountByLastCall":423,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":121,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":399,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":451,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":389,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":479,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":171,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":202,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":371,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":287,"org.easymock.tests.MockClassControlTest.testHashCode":349,"org.easymock.tests2.EasyMockSupportTest.testVerify":59,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":472,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":452,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":260,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":380,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":101,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":329,"org.easymock.tests.UsageVarargTest.varargCharAccepted":174,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":437,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":36,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":416,"org.easymock.tests2.UsageTest.openCallCountByLastCall":307,"org.easymock.tests.DefaultClassInstantiatorTest.object":438,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":58,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":379,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":340,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":277,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":456,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":321,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":286,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":495,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":335,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":348,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":215,"org.easymock.tests.ReplayStateInvalidCallsTest.times":501,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":203,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":447,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":502,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":31,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":347,"org.easymock.tests2.UsageTest.resumeIfFailure":73,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":428,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":465,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":128,"org.easymock.tests2.StubTest.stubWithReturnValue":41,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":514,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":22,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":195,"org.easymock.tests2.SerializationTest.testAllMockedMethod":79,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":409,"org.easymock.samples.SupportTest.voteForRemovals":242,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":461,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":289,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":221,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":415,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":283,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":391,"org.easymock.tests.UsageExpectAndThrowTest.object":219,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":20,"org.easymock.tests2.DelegateToTest.testWrongClass":313,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":499,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":206,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":207,"org.easymock.samples.ConstructorCalledMockTest.testTax":246,"org.easymock.tests.UsageStrictMockTest.range":254,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":267,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":54,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":94,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":220,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":66,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":421,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":271,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":365,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":157,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":491,"org.easymock.tests2.CaptureTest.testCaptureNone":88,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":249,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":481,"org.easymock.tests.UsageUnorderedTest.message":436,"org.easymock.tests.UsageVerifyTest.twoReturns":139,"org.easymock.tests.UsageVarargTest.varargByteAccepted":178,"org.easymock.tests2.ThreadingTest.testThreadSafe":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":278,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":170,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":243,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":343,"org.easymock.tests2.CaptureTest.testCapture_2617107":83,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":208,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":413,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":393,"org.easymock.tests2.UsageConstraintsTest.any":10,"org.easymock.tests2.StubTest.stub":40,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":362,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":449,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":414,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":127,"org.easymock.tests.UsageExpectAndThrowTest.longType":212,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":256,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":361,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":285,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":42,"org.easymock.tests2.SerializationTest.testClass":77,"org.easymock.tests.LimitationsTest.mockNativeMethod":120,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":462,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":205,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":320,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":507,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":39,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":482,"org.easymock.tests2.NameTest.nameForMocksControl":118,"org.easymock.tests2.MockedExceptionTest.testMockedException":44,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":273,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":420,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":142,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":213,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":331,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":107,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":67,"org.easymock.tests.MockingTest.testNicePartialClassMocking":141,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":111,"org.easymock.tests2.CaptureTest.testCaptureLast":87,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":318,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":446,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":506,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":100,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":8,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":21,"org.easymock.tests.MockingTest.testTwoMocks":384,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":503,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":330,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":186,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":217,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":309,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":24,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":485,"org.easymock.samples.ExampleTest.removeNonExistingDocument":464,"org.easymock.tests.UsageStrictMockTest.differentMethods":134,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":324,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":359,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":288,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":484,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":440,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":297,"org.easymock.tests2.MockBuilderTest.testCreateMockString":304,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":345,"org.easymock.tests.UsageExpectAndThrowTest.floatType":211,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":274,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":467,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":33,"org.easymock.tests.UsageVerifyTest.twoThrows":138,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":370,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":30,"org.easymock.samples.ExampleTest.voteAgainstRemoval":237,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":405,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":377,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":114,"org.easymock.tests.LimitationsTest.privateConstructor":353,"org.easymock.tests2.UsageConstraintsTest.testNotNull":23,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":460,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":43,"org.easymock.tests2.UsageTest.defaultResetToNice":72,"org.easymock.samples.ExampleTest.voteAgainstRemovals":234,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":406,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":201,"org.easymock.tests.UsageVarargTest.differentLength":435,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":319,"org.easymock.tests2.CallbackTest.callback":92,"org.easymock.tests2.UsageConstraintsTest.equals":262,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":487,"org.easymock.tests.UsageTest.openCallCountByLastCall":419,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":0,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":392,"org.easymock.tests.UsageCallCountTest.tooFewCalls":168,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":97,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":159,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":483,"org.easymock.tests.UsageThrowableTest.throwCheckedException":457,"org.easymock.tests.MockingTest.testStrictClassMocking":382,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":99,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":368,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":96,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":323,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":364,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":98,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":35,"org.easymock.tests.ObjectMethodsTest.testHashCode":341,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":505,"org.easymock.tests2.NameTest.nameForNiceMock":117,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":62,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":500,"org.easymock.tests2.DependencyTest.testInterfaceMocking":26,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":517,"org.easymock.samples.ExampleTest.addDocument":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":474,"org.easymock.tests2.DelegateToTest.testStubDelegate":75,"org.easymock.tests2.AnswerTest.stubAnswer":34,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":133,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":477,"org.easymock.tests.UsageVarargTest.varargLongAccepted":177,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":135,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":403,"org.easymock.tests.UsageExpectAndReturnTest.floatType":188,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":204,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":80,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":247,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":18,"org.easymock.tests.UsageThrowableTest.noUpperLimit":229,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":294,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":373,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":1,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":265,"org.easymock.tests2.SerializationTest.test":78,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":85,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":258,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":439,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":187,"org.easymock.tests2.UsageConstraintsTest.testSame":6,"org.easymock.samples.SupportTest.addDocument":241,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":486,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":490,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":275,"org.easymock.tests.GenericTest.testPackageScope":231,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":398,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":293,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":386,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":488,"org.easymock.tests2.NameTest.nameForMock":115,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":198,"org.easymock.tests2.UsageStrictMockTest.differentMethods":38,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":334,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":190,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":223,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":339,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":149,"org.easymock.tests2.MockedExceptionTest.testRealException":46,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":433,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":407,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":268,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":37,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":261,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":144,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":366,"org.easymock.tests2.NameTest.nameForStrictMock":116,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":301,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":105,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":110,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":266,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":441,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":19,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":299,"org.easymock.tests2.UsageStrictMockTest.range":250,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":494,"org.easymock.tests2.UsageConstraintsTest.lessThan":25,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":520,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":290,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":518,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":402,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":48,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":471,"org.easymock.tests2.CaptureTest.testCaptureRightOne":90,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":480,"org.easymock.tests2.UsageConstraintsTest.testOr":7,"org.easymock.tests.UsageRangeTest.combination":146,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":251,"org.easymock.tests.UsageTest.wrongArguments":418,"org.easymock.tests2.MockBuilderTest.testWithConstructor":519,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":469,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":119,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":191,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":395,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":199,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":442,"org.easymock.tests.UsageVarargTest.varargShortAccepted":176,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":424,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":508,"org.easymock.tests2.UsageConstraintsTest.cmpTo":11,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":259,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":498,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":397,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":308,"org.easymock.tests2.CaptureTest.testCaptureFromStub":316,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":356,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":300,"org.easymock.tests.UsageTest.unexpectedCallWithArray":255,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":504,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":253,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":169,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":200,"org.easymock.tests2.CaptureTest.testCapture":513,"org.easymock.tests2.UsageConstraintsTest.constraints":2,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":376,"org.easymock.samples.ExampleTest.addAndChangeDocument":240,"org.easymock.tests.UsageStrictMockTest.testVerify":136,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":233,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":132,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":151,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":86,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":183,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":192,"org.easymock.tests.LimitationsTest.abstractClass":352,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":184,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":124,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":172,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":53}}]
