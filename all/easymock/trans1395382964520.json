[{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:56","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:59","sourceCode":"java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"targetField":"targetField"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:88","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,0,65,66,67,68,69,70,71,72,73,1,74,2,75,76,3,4,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,5,6,103,104,7,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,8,9,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,176,177,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,14,15,210,211,212,213,214,16,17,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,18,244,245,19,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:36","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[0,104,8,9,319,245],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:296","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[320,321,322,323,324,325,152],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[40,41,8],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:47","sourceCode":"this.T = T","type":"CtAssignmentImpl"},"failures":[326,305,306,307,308,309,310,311,312,314,315,316,317,318],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"failures":[327,328,329,192],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:98","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"method":"method"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[330],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[23,26,33,51,52,53,54,55,63,331,64,332,176,176,177,177,178,333,334,179,335,180,181,182,183,184,185,186,187,336,188,337,198,199,200,201,217,218,220,221,222,223,224,225,226,227,228,275,286,290,338,292,293,294,295,297,298],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:40","sourceCode":"java.lang.StringBuffer.append(\"notNull()\")","type":"CtInvocationImpl"},"failures":[339],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:373","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[340,341],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:46","sourceCode":"throw org.easymock.internal.ThrowableWrapper.getThrowable().fillInStackTrace()","type":"CtThrowImpl"},"failures":[35,36,38,39,40,41,42,43,47,56,57,58,59,60,61,73,76,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,8,155,156,168,205,208,213,284,285,286,287],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[74,5,342,343,344,345],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:840","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2000","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"failures":[47,287],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"result"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[346,347,348,340,349,350,22,351,352,353,354,355,33,37,356,357,358,359,360,361,362,363,364,365,62,63,331,0,2,3,4,102,366,5,6,103,104,7,105,367,118,119,155,156,169,171,172,368,173,174,369,370,175,371,333,334,180,182,187,202,203,204,10,11,12,13,15,211,16,17,230,234,240,241,242,372,243,373,18,244,245,19,246,257,258,270,271,281,338,306,307,310,311,312,313,318],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:310","sourceCode":"return java.lang.Class<?>.equals(java.lang.Void.java.lang.Class<java.lang.Void>)","type":"CtReturnImpl"},"failures":[350,22,351,352,353,354,355,33,37,356,357,358,359,360,361,362,363,364,365,62,63,331,0,70,2,3,4,102,366,5,6,103,104,7,105,367,118,119,155,156,169,171,172,368,173,174,369,370,175,371,333,334,180,182,187,204,10,11,12,13,15,211,16,17,234,240,241,242,372,243,373,18,244,245,19,246,257,258,270,271,338,306,307,310,311,312,313,318],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[211,221,264],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:665","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[34,35,60,154,157,258],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[34,35,36,60,61,62,0,65,5,6,106,107,146,147,148,149,150,151,153,154,155,156,157,192,194,202,203,204,224,225,18,244,374,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,305,306,307,308,309,310,311,312,313,314,315,316,317,318],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1646","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(int[]))","type":"CtInvocationImpl"},"failures":[261],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:36","sourceCode":"if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:40","sourceCode":"if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[1,74,2,3,4,5,342,343,375,14,15,16,17,344,376,345,377],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:217","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:215","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:141","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[378],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[70,71,72,101],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:85","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:125","sourceCode":"java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>()","type":"CtAssignmentImpl"},"failures":[22,351,352,353,379,354,355,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,50,52,53,54,55,56,57,58,59,60,61,356,357,358,359,360,361,362,363,364,365,62,63,331,0,65,66,67,68,69,73,1,74,2,75,76,3,4,77,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,366,5,6,103,104,7,105,106,107,326,326,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,147,148,149,150,151,8,9,153,154,155,156,157,161,162,163,164,165,166,167,168,169,170,171,172,368,173,174,369,370,175,176,177,371,178,333,334,179,180,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,14,15,210,211,212,213,214,16,17,215,216,217,218,219,220,221,222,223,224,225,226,227,228,230,231,232,233,234,235,236,237,238,239,240,241,242,372,243,373,18,244,245,19,246,247,248,249,250,251,252,253,254,255,256,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,278,281,282,283,284,285,286,287,288,290,291,338,292,293,294,295,296,297,298,300,301,302,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[380,36,38,39,40,41,42,43,47,60,73,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,8,156,168,205,208,213],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockHandler:79","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[20,21,22,33,34,35,36,37,38,39,40,41,42,43,44,46,47,49,52,53,54,55,56,57,58,59,60,61,63,64,0,70,71,72,73,1,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,6,104,7,106,107,112,113,114,115,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,8,9,152,153,154,155,156,157,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,176,177,177,178,180,182,184,185,187,189,190,191,192,193,198,199,200,201,202,203,204,205,206,207,208,209,14,210,212,213,214,215,216,217,218,219,220,221,222,224,226,227,228,230,231,232,233,234,235,236,237,238,239,240,241,242,18,245,19,247,248,249,250,251,252,253,254,255,256,258,259,260,261,262,263,264,265,266,267,268,269,271,272,273,274,275,276,278,279,280,281,282,283,284,285,286,287,288,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,312,313,314,315,316,317,318],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"failures":[381],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","shouldBeUsedInOneThread":"shouldBeUsedInOneThread"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[290,291,338],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"equalsMethod","equalsMethod":"equalsMethod"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":250,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":73,"org.easymock.tests2.UsageTest.argumentsOrdered":17,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":241,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":289,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":59,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":211,"org.easymock.tests2.StubTest.stubWithReturnValue":205,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":371,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":271,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":131,"org.easymock.tests2.SerializationTest.testAllMockedMethod":338,"org.easymock.tests2.DelegateToTest.testReturnException":300,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":57,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":20,"org.easymock.tests.MockingTest.testPartialClassMocking":52,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":345,"org.easymock.samples.SupportTest.voteForRemovals":175,"org.easymock.tests.MockClassControlTest.testToString":158,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":101,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":324,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":229,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":93,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":199,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":81,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":21,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":279,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":328,"org.easymock.tests.UsageExpectAndThrowTest.object":91,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":268,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":207,"org.easymock.tests2.DelegateToTest.testWrongClass":302,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":106,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":107,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":256,"org.easymock.tests2.UsageTest.wrongArguments":15,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":153,"org.easymock.tests.UsageStrictMockTest.range":104,"org.easymock.samples.ConstructorCalledMockTest.testTax":176,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":31,"org.easymock.samples.ExampleTest.answerVsDelegate":170,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":238,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":292,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":26,"org.easymock.tests2.UsageConstraintsTest.testNull":252,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":220,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":92,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":240,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":184,"org.easymock.tests2.CaptureTest.testPrimitive":308,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":157,"org.easymock.tests.UsageTest.moreThanOneArgument":1,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":3,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":100,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":219,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":30,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":342,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":163,"org.easymock.tests2.CaptureTest.testCaptureNone":313,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":72,"org.easymock.tests.UsageUnorderedTest.message":0,"org.easymock.tests.UsageVerifyTest.twoReturns":9,"org.easymock.tests.UsageVarargTest.varargByteAccepted":364,"org.easymock.tests2.ThreadingTest.testThreadSafe":189,"org.easymock.tests.UsageTest.argumentsOrdered":4,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":117,"org.easymock.tests.UsageVarargTest.varargIntAccepted":358,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":353,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":333,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":109,"org.easymock.tests2.CaptureTest.testCapture_2617107":307,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":146,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":377,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":179,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":156,"org.easymock.tests2.UsageConstraintsTest.any":258,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":183,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":341,"org.easymock.tests2.StubTest.stub":204,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":115,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":150,"org.easymock.tests.UsageExpectAndThrowTest.longType":84,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":58,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":244,"org.easymock.tests2.SerializationTest.testClass":290,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":288,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":276,"org.easymock.tests.LimitationsTest.mockNativeMethod":55,"org.easymock.tests2.AnswerTest.answer":278,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":64,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":141,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":257,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":340,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":197,"org.easymock.tests2.CaptureTest.testAnd":305,"org.easymock.tests2.UsageTest.strictResetToDefault":209,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":246,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":225,"org.easymock.tests2.NameTest.nameForMocksControl":13,"org.easymock.tests2.MockedExceptionTest.testMockedException":285,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":162,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":235,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":144,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":76,"org.easymock.tests2.DelegateToTest.testDelegate":304,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":121,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":85,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":54,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":217,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":185,"org.easymock.tests.MockingTest.testNicePartialClassMocking":53,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":96,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":222,"org.easymock.tests2.CaptureTest.testCaptureLast":312,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":60,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":112,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":298,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":255,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":269,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":69,"org.easymock.tests.MockingTest.testTwoMocks":51,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":111,"org.easymock.tests2.CaptureTest.testCapture1_2446744":309,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":122,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":94,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":195,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":89,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":16,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":273,"org.easymock.tests.UsageThrowableTest.throwError":36,"org.easymock.tests.UsageStrictMockTest.differentMethods":7,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":25,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":191,"org.easymock.tests2.MockBuilderTest.testCreateMockString":188,"org.easymock.tests.UsageExpectAndThrowTest.floatType":83,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":165,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":264,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":281,"org.easymock.tests.UsageVerifyTest.twoThrows":8,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":45,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":200,"org.easymock.samples.PartialClassMockTest.testGetArea":178,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":147,"org.easymock.samples.ExampleTest.voteAgainstRemoval":172,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":71,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":70,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":227,"org.easymock.tests2.UsageTest.niceToStrict":210,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":82,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":110,"org.easymock.tests2.UsageConstraintsTest.testNotNull":272,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":284,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":43,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":320,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":182,"org.easymock.tests2.UsageTest.defaultResetToNice":214,"org.easymock.tests2.MockBuilderTest.testCreateMock":186,"org.easymock.samples.ExampleTest.voteAgainstRemovals":169,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":348,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":137,"org.easymock.tests.UsageVarargTest.differentLength":361,"org.easymock.tests2.CallbackTest.callback":230,"org.easymock.tests.UsageTest.openCallCountByLastCall":75,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":344,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":90,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":236,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":247,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":80,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":350,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":29,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":155,"org.easymock.tests.UsageCallCountTest.tooFewCalls":351,"org.easymock.tests.UsageOverloadedMethodTest.overloading":167,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":262,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":47,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":295,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":133,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":166,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":261,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":314,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":32,"org.easymock.tests.UsageThrowableTest.throwCheckedException":40,"org.easymock.tests2.EasyMockSupportClassTest.testAll":198,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":331,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":376,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":343,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":98,"org.easymock.tests2.CaptureTest.testCaptureAll":306,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":196,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":67,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":297,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":35,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":294,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":277,"org.easymock.tests.MockNameTest.defaultName":116,"org.easymock.tests2.UsageConstraintsTest.testMatches":263,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":296,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":283,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":325,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":164,"org.easymock.tests2.CompareToTest.testGreateOrEqual":381,"org.easymock.samples.ExampleTest.voteForRemovals":173,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":193,"org.easymock.tests2.NameTest.nameForNiceMock":12,"org.easymock.tests2.ConstraintsToStringTest.notNullToString":339,"org.easymock.tests.UsageVarargTest.allKinds":62,"org.easymock.tests2.DependencyTest.testInterfaceMocking":206,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":151,"org.easymock.samples.BasicClassMockTest.testPrintContent":334,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":68,"org.easymock.samples.ExampleTest.addDocument":368,"org.easymock.tests2.DelegateToTest.testStubDelegate":301,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":42,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":243,"org.easymock.tests2.AnswerTest.stubAnswer":282,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":303,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":61,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":6,"org.easymock.tests2.UsageConstraintsTest.greaterThan":265,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":143,"org.easymock.tests.UsageVarargTest.varargLongAccepted":363,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":228,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":105,"org.easymock.samples.ExampleTest.voteForRemoval":171,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":190,"org.easymock.tests.UsageExpectAndReturnTest.floatType":124,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":140,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":27,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":275,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":223,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":177,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":266,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":48,"org.easymock.tests.UsageThrowableTest.noUpperLimit":37,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":248,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":208,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":33,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":310,"org.easymock.tests2.SerializationTest.test":291,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":233,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":38,"org.easymock.tests2.UsageConstraintsTest.testSame":253,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":123,"org.easymock.samples.SupportTest.addDocument":370,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":56,"org.easymock.tests2.CaptureTest.testCaptureFirst":318,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":299,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":234,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":216,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":329,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":50,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":129,"org.easymock.tests.GenericTest.testPackageScope":63,"org.easymock.tests2.CaptureTest.testCapture2_2446744":317,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":192,"org.easymock.tests2.UsageTest.moreThanOneArgument":14,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":120,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":349,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":187,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":321,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":365,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":354,"org.easymock.tests2.NameTest.nameForMock":10,"org.easymock.tests.UsageExpectAndReturnTest.longType":125,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":231,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":65,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":336,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":99,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":134,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":270,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":152,"org.easymock.tests2.UsageStrictMockTest.differentMethods":19,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":97,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":114,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":161,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":126,"org.easymock.tests.UsageCallCountTest.tooManyCalls":355,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":95,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":145,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":22,"org.easymock.tests2.MockedExceptionTest.testRealException":287,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":28,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":130,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":323,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":378,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":86,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":18,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":41,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":154,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":293,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":335,"org.easymock.tests2.UsageConstraintsTest.testContains":260,"org.easymock.tests2.NameTest.nameForStrictMock":11,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":286,"org.easymock.tests2.UsageConstraintsTest.testFind":251,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":168,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":202,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":221,"org.easymock.tests.MockTypeTest.fromEasyMockClass":24,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":203,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":102,"org.easymock.tests.UsageExpectAndReturnTest.object":132,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":267,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":224,"org.easymock.tests.ErrorMessageTest.testGetters":319,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":180,"org.easymock.tests2.UsageStrictMockTest.range":245,"org.easymock.tests2.UsageConstraintsTest.lessThan":274,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":239,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":360,"org.easymock.tests.UsageTest.exactCallCountByLastCall":77,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":34,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":322,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":347,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":232,"org.easymock.tests2.CaptureTest.testCaptureRightOne":315,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":327,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":118,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":375,"org.easymock.tests2.UsageConstraintsTest.testOr":254,"org.easymock.tests.UsageRangeTest.combination":142,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":356,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":218,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":138,"org.easymock.tests.UsageTest.wrongArguments":2,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":46,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":332,"org.easymock.tests2.EasyMockSupportTest.testVerify":372,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":127,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":346,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":135,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":119,"org.easymock.tests.UsageVarargTest.varargShortAccepted":362,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":79,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":44,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":379,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":194,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":374,"org.easymock.tests2.UsageConstraintsTest.cmpTo":259,"org.easymock.tests.UsageVarargTest.varargCharAccepted":359,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":280,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":380,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":373,"org.easymock.tests2.UsageTest.openCallCountByLastCall":212,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":213,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":242,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":78,"org.easymock.tests2.CaptureTest.testCaptureFromStub":316,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":181,"org.easymock.tests.UsageTest.unexpectedCallWithArray":74,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":108,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":88,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":5,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":39,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":352,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":136,"org.easymock.tests2.CaptureTest.testCapture":330,"org.easymock.tests2.UsageConstraintsTest.constraints":249,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":226,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":103,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":160,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":87,"org.easymock.samples.ExampleTest.addAndChangeDocument":174,"org.easymock.tests.CapturesMatcherTest.test":326,"org.easymock.tests.UsageStrictMockTest.testVerify":367,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":139,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":113,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":369,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":201,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":159,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":66,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":311,"org.easymock.tests2.UsageTest.resumeIfFailure":215,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":337,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":148,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":23,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":128,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":49,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":149,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":357,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":237}}]
