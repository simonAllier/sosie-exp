[{"transplant":{"position":"org.easymock.internal.ArgumentToString:39","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String).append(\", actual: \")","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:218","failures":[26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[3,4,44,45,46,47,48,49,50,51,52,53,54,55,56,57,16,17],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.Range:44","failures":[0,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,1,2,90,3,4,91,92,93,94,95,96,97,98,99,100,101,102,103,44,104,105,45,46,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,26,133,134,27,135,136,137,138,139,140,141,142,143,144,145,146,147,47,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,48,179,180,181,49,50,182,51,183,184,52,185,186,187,188,189,190,191,192,193,53,194,195,196,54,55,197,56,198,199,57,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,8,254,9,255,256,10,11,257,12,13,14,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,28,281,282,283,284,285,286,287,288,289,290,29,30,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,31,308,309,310,32,311,312,33,313,314,315,15,316,16,17,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,34,350,351,352,353,35,36,37,354,355,38,39,40,356,357,18,19,20,21,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,41,432,433,434,435,436,437,438,439,440,42,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,22,23,459,460,461,462,463,24,25,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,43,489,490],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[352,40,491,492,493,494,495],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MocksControl:190","failures":[0,88,3,4,136,212,221,222,224,225,226,227,228,11,13,300,32,313,314,16,17,323,325,327,328,331,332,333,354,384,390,391,393,396,402,403,404,406,422,459,460,25],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[352,40,491,492,493,494,495],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[496,391,397,409],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[66,80,81,82,83,84,86,2,3,4,124,125,128,133,27,136,137,138,139,190,191,192,193,53,194,195,196,54,55,197,56,198,199,57,200,201,202,203,204,211,212,213,216,221,223,224,225,226,227,228,241,242,244,253,8,255,256,257,12,14,267,268,269,270,271,277,28,282,283,285,286,288,297,299,300,301,302,303,304,307,310,32,311,15,16,17,322,323,324,325,326,327,328,329,330,331,332,333,335,336,337,338,340,341,342,346,34,351,353,354,39,360,369,379,381,382,383,384,386,387,388,389,390,391,393,394,395,396,397,398,399,400,401,402,403,404,406,407,408,409,411,412,413,415,416,419,420,421,422,424,425,429,41,42,446,452,453,454,455,456,457,458,22,459,461,462,463,464,465,475,476,482,43,489],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[80,81,82,83,84,2,3,4,124,136,137,138,139,190,191,192,193,53,194,54,55,56,198,199,200,201,202,203,204,216,241,242,244,248,249,250,251,270,271,28,282,283,285,286,288,299,300,301,302,303,304,307,310,32,311,15,16,17,335,336,337,338,340,341,342,346,34,351,353,354,39,360,429,41,42,446,455,475,476],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:113","sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.reflect.Method>.size()) ; int++) {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(int);\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"bridgeMethod"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:210","sourceCode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} ","type":"CtIfImpl"},"failures":[35],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[405,407,449,451],"status":-1,"binaryOperator":"java.lang.Object != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[0,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,1,2,90,3,4,91,92,93,94,95,96,97,98,99,100,101,102,103,44,104,105,45,46,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,26,133,134,27,135,136,137,138,139,140,141,142,143,144,145,146,147,47,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,48,179,180,181,49,50,182,51,183,184,52,185,186,187,188,189,190,191,192,193,53,194,195,196,54,55,197,56,198,199,57,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,8,254,9,255,256,10,11,257,12,13,14,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,28,281,282,283,284,285,286,287,288,289,290,29,30,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,31,308,309,310,32,311,312,33,313,314,315,15,316,16,17,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,34,350,351,352,353,35,36,37,354,355,38,39,40,356,357,18,19,20,21,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,41,432,433,434,435,436,437,438,439,440,42,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,22,23,459,460,461,462,463,24,25,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,43,489,490],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1725","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"failures":[387],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[497],"status":-1,"binaryOperator":"int == 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"failures":[0,66,68,69,70,72,73,75,76,77,78,79,80,81,82,83,84,89,2,90,3,4,91,124,125,126,127,128,134,175,176,177,178,48,179,180,181,49,50,182,51,183,184,52,185,186,187,188,189,190,191,192,193,53,194,195,196,54,55,197,56,198,199,57,200,201,202,203,204,211,212,213,221,222,223,224,225,226,227,228,248,249,250,251,252,253,8,255,256,257,12,13,14,261,262,263,264,265,266,270,271,272,274,275,279,280,281,282,283,284,285,286,287,288,290,291,292,293,296,297,300,303,32,313,315,15,316,16,17,317,322,323,324,325,326,327,328,330,331,332,333,34,351,353,359,360,361,363,369,384,387,389,390,407,410,411,412,413,419,420,422,425,452,453,454,456,457,458,22,459,460,461,462,464,465,475,476,482,43,489],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:85","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:159","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"failures":[294,295],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:643","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:305","sourceCode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","type":"CtReturnImpl"},"failures":[0,66,67,68,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,88,89,1,2,90,3,4,91,92,104,105,114,115,117,118,119,120,122,123,124,125,126,127,128,133,134,136,137,138,139,175,176,177,178,48,179,180,181,49,50,182,51,183,184,52,185,186,187,188,189,190,191,192,193,53,194,195,196,54,55,197,56,198,199,57,200,201,202,203,204,211,212,213,216,221,222,223,224,225,226,227,228,241,242,244,253,8,9,255,256,10,11,257,12,13,14,265,270,271,272,274,275,277,279,280,28,281,282,283,284,285,286,287,288,290,291,292,293,296,297,298,299,300,301,302,303,304,307,310,32,311,313,314,315,15,316,16,17,317,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,340,341,342,346,34,351,353,354,39,18,19,20,21,359,360,361,363,369,379,381,382,383,384,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,424,425,429,41,42,446,449,451,452,453,454,455,456,457,458,22,23,459,460,461,462,463,24,25,464,465,475,476,482,43,489,490],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:119","sourceCode":"if (java.lang.String == null) {\n    return ((java.lang.String)(java.util.Properties.remove(java.lang.String)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"key","properties":"properties","key":"value"}},{"position":"org.easymock.EasyMock:1205","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[498],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[166],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[1,499,500,254,501,502],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:75","sourceCode":"return \"expected: \" + org.easymock.internal.Range.(toString())","type":"CtReturnImpl"},"failures":[0,1,2,3,4,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1221","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[311],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1177","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.RecordState:314","failures":[130,131,219,220],"status":-1,"binaryOperator":"java.lang.Throwable instanceof java.lang.RuntimeException","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:315","failures":[67,126,127,175,176,177,178,48,179,180,181,49,50,182,51,183,184,52,185,186,187,188,189,213,223,227,228,253,256,261,262,263,264,265,266,275,377,378,379,380,411,457,462],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:116","sourceCode":"try {\n    java.util.Set<java.lang.reflect.Method>.add(org.easymock.internal.MethodSerializationWrapper.getMethod());\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[396],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:52","failures":[3,4,104,105,12,16,17],"status":-1,"binaryOperator":"(int) == (int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:62","sourceCode":"final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[155],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":384,"org.easymock.tests2.UsageTest.argumentsOrdered":25,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":253,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":332,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":370,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":149,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":460,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":279,"org.easymock.tests2.DelegateToTest.testReturnException":359,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":262,"org.easymock.tests.MockingTest.testPartialClassMocking":241,"org.easymock.tests.MockClassControlTest.testToString":60,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":357,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":158,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":435,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":175,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":41,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":5,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":476,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":491,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":391,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":124,"org.easymock.tests2.UsageTest.wrongArguments":23,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":488,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":102,"org.easymock.samples.ExampleTest.answerVsDelegate":284,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":111,"org.easymock.tests2.UsageConstraintsTest.testNull":387,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":246,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":302,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":65,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":331,"org.easymock.tests2.CaptureTest.testPrimitive":415,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":128,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":189,"org.easymock.tests.UsageTest.moreThanOneArgument":8,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":301,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":250,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":44,"org.easymock.tests.UsageTest.argumentsOrdered":11,"org.easymock.tests.UsageVarargTest.varargIntAccepted":70,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":154,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":80,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":495,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":344,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":468,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":374,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":350,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":142,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":84,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":482,"org.easymock.tests.ReplayStateInvalidUsageTest.times":171,"org.easymock.tests2.DependencyTest.testClassMocking":473,"org.easymock.tests2.AnswerTest.answer":293,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":392,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":156,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":321,"org.easymock.tests2.CaptureTest.testAnd":412,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":108,"org.easymock.tests2.UsageTest.strictResetToDefault":458,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":309,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":348,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":249,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":138,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":326,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":46,"org.easymock.tests2.DelegateToTest.testDelegate":363,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":185,"org.easymock.tests.LimitationsTest.mockFinalMethod":217,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":265,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":210,"org.easymock.tests2.DependencyTest.testClassMockingSupport":474,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":258,"org.easymock.tests2.CaptureTest.testCapture1_2446744":416,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":306,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":184,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":319,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":165,"org.easymock.tests.UsageThrowableTest.throwError":221,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":110,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":132,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":375,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":448,"org.easymock.samples.PartialClassMockTest.testGetArea":28,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":166,"org.easymock.tests.MockingTest.testInterfaceMocking":243,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":81,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":268,"org.easymock.tests2.UsageTest.niceToStrict":459,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":436,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":176,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":98,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":140,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":34,"org.easymock.tests2.MockBuilderTest.testCreateMock":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":443,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":485,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":501,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":50,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":327,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":107,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":131,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":115,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":100,"org.easymock.tests.UsageOverloadedMethodTest.overloading":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":445,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":440,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":397,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":275,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":56,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":211,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":396,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":421,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":71,"org.easymock.tests2.EasyMockSupportClassTest.testAll":429,"org.easymock.tests.MockClassControlTest.testEquals":64,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":134,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":187,"org.easymock.tests2.CaptureTest.testCaptureAll":413,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":208,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":320,"org.easymock.tests.MockNameTest.defaultName":99,"org.easymock.tests2.UsageConstraintsTest.testMatches":398,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":163,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":251,"org.easymock.samples.ExampleTest.voteForRemovals":288,"org.easymock.tests.UsageVarargTest.allKinds":79,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":12,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":209,"org.easymock.samples.BasicClassMockTest.testPrintContent":292,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":227,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":314,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":266,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":362,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":371,"org.easymock.tests2.UsageConstraintsTest.greaterThan":400,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":430,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":137,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":311,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":237,"org.easymock.samples.ExampleTest.voteForRemoval":285,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":453,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":312,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":112,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":469,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":305,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":457,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":114,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":36,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":147,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":324,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":427,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":261,"org.easymock.tests2.CaptureTest.testCaptureFirst":425,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":358,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":146,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":325,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":465,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":278,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":196,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":455,"org.easymock.tests2.CaptureTest.testCapture2_2446744":424,"org.easymock.tests2.UsageTest.moreThanOneArgument":22,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":157,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":354,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":78,"org.easymock.tests.GenericTest.testBridgedEquals":135,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":122,"org.easymock.tests.UsageExpectAndReturnTest.longType":193,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":206,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":322,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":188,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":405,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":205,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":186,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":219,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":248,"org.easymock.tests.UsageCallCountTest.tooManyCalls":123,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":444,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":54,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":487,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":179,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":226,"org.easymock.tests.MockingTest.testNiceClassMocking":247,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":336,"org.easymock.tests.MockingTest.testClassMocking":239,"org.easymock.tests2.UsageConstraintsTest.testContains":395,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":116,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":379,"org.easymock.tests2.UsageConstraintsTest.testFind":386,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":213,"org.easymock.tests.MockTypeTest.fromEasyMockClass":109,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":451,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":88,"org.easymock.tests.UsageExpectAndReturnTest.object":197,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":307,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":486,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":330,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":492,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":73,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":96,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":498,"org.easymock.tests.UsageTest.exactCallCountByLastCall":257,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":66,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":145,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":104,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":85,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":40,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":68,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":201,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":274,"org.easymock.tests.MockClassControlTest.testHashCode":63,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":365,"org.easymock.tests2.EasyMockSupportTest.testVerify":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":438,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":105,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":130,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":272,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":318,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":376,"org.easymock.tests.UsageVarargTest.varargCharAccepted":72,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":229,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":315,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":162,"org.easymock.tests2.UsageTest.openCallCountByLastCall":461,"org.easymock.tests.DefaultClassInstantiatorTest.object":230,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":333,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":129,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":94,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":439,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":181,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":224,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":480,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":364,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":62,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":310,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":180,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":202,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":446,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":61,"org.easymock.tests2.UsageTest.resumeIfFailure":464,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":106,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":467,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":264,"org.easymock.tests2.StubTest.stubWithReturnValue":411,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":352,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":406,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":55,"org.easymock.tests2.SerializationTest.testAllMockedMethod":490,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":155,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":502,"org.easymock.samples.SupportTest.voteForRemovals":282,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":26,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":367,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":183,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":161,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":294,"org.easymock.tests.UsageExpectAndThrowTest.object":182,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":87,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":403,"org.easymock.tests2.DelegateToTest.testWrongClass":361,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":270,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":271,"org.easymock.samples.ConstructorCalledMockTest.testTax":29,"org.easymock.tests.UsageStrictMockTest.range":3,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":471,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":329,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":335,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":51,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":426,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":173,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":10,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":101,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":499,"org.easymock.tests2.CaptureTest.testCaptureNone":420,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":269,"org.easymock.tests.UsageUnorderedTest.message":0,"org.easymock.tests.UsageVerifyTest.twoReturns":14,"org.easymock.tests.UsageVarargTest.varargByteAccepted":77,"org.easymock.tests2.ThreadingTest.testThreadSafe":452,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":441,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":120,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":97,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":291,"org.easymock.tests2.CaptureTest.testCapture_2617107":414,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":260,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":159,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":127,"org.easymock.tests2.UsageConstraintsTest.any":393,"org.easymock.tests2.StubTest.stub":410,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":170,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":220,"org.easymock.tests.UsageExpectAndThrowTest.longType":178,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":160,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":263,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":234,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":169,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":316,"org.easymock.tests2.SerializationTest.testClass":43,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":369,"org.easymock.tests.LimitationsTest.mockNativeMethod":216,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":27,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":204,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":479,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":317,"org.easymock.tests2.NameTest.nameForMocksControl":21,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":481,"org.easymock.tests2.MockedExceptionTest.testMockedException":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":431,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":256,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":450,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":48,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":244,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":299,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":353,"org.easymock.tests.MockingTest.testNicePartialClassMocking":242,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":304,"org.easymock.tests2.CompareToTest.testCompareEqual":497,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":477,"org.easymock.tests2.CaptureTest.testCaptureLast":419,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":259,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":390,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":342,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":404,"org.easymock.tests.MockingTest.testTwoMocks":240,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":343,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":190,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":49,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":24,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":408,"org.easymock.samples.ExampleTest.removeNonExistingDocument":289,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":484,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":167,"org.easymock.tests.UsageStrictMockTest.differentMethods":4,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":366,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":232,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":454,"org.easymock.tests2.MockBuilderTest.testCreateMockString":38,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":58,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":432,"org.easymock.tests.UsageExpectAndThrowTest.floatType":177,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":428,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":296,"org.easymock.tests.UsageVerifyTest.twoThrows":13,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":356,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":273,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":42,"org.easymock.samples.ExampleTest.voteAgainstRemoval":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":150,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":267,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":32,"org.easymock.tests.LimitationsTest.privateConstructor":215,"org.easymock.tests2.UsageConstraintsTest.testNotNull":407,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":228,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":377,"org.easymock.tests2.UsageTest.defaultResetToNice":463,"org.easymock.samples.ExampleTest.voteAgainstRemovals":283,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":151,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":200,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":478,"org.easymock.tests.UsageVarargTest.differentLength":74,"org.easymock.tests2.CallbackTest.callback":313,"org.easymock.tests2.UsageConstraintsTest.equals":385,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":31,"org.easymock.tests.UsageTest.openCallCountByLastCall":255,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":381,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":126,"org.easymock.tests.UsageCallCountTest.tooFewCalls":118,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":338,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":103,"org.easymock.tests.UsageThrowableTest.throwCheckedException":225,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":500,"org.easymock.tests.MockingTest.testStrictClassMocking":238,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":67,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":341,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":483,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":337,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":172,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":340,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":298,"org.easymock.tests2.CompareToTest.testGreateOrEqual":496,"org.easymock.tests.ObjectMethodsTest.testHashCode":95,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":494,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":456,"org.easymock.tests2.NameTest.nameForNiceMock":20,"org.easymock.tests2.DependencyTest.testInterfaceMocking":475,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":493,"org.easymock.samples.ExampleTest.addDocument":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":442,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":447,"org.easymock.tests2.DelegateToTest.testStubDelegate":360,"org.easymock.tests2.AnswerTest.stubAnswer":297,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":2,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":35,"org.easymock.tests.UsageVarargTest.varargLongAccepted":76,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":148,"org.easymock.tests.UsageExpectAndReturnTest.floatType":192,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":203,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":39,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":30,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":401,"org.easymock.tests.UsageThrowableTest.noUpperLimit":222,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":276,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":373,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":382,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":466,"org.easymock.tests2.SerializationTest.test":489,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":417,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":231,"org.easymock.tests2.UsageConstraintsTest.testSame":388,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":191,"org.easymock.samples.SupportTest.addDocument":281,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":339,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":433,"org.easymock.tests.GenericTest.testPackageScope":133,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":45,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":144,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":372,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":245,"org.easymock.tests2.NameTest.nameForMock":18,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":198,"org.easymock.tests2.UsageStrictMockTest.differentMethods":17,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":355,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":308,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":53,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":52,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":93,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":139,"org.easymock.tests2.MockedExceptionTest.testRealException":380,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":113,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":472,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":153,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":152,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":15,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":174,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":125,"org.easymock.tests2.NameTest.nameForStrictMock":19,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":349,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":449,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":303,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":470,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":402,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":6,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":233,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":346,"org.easymock.tests2.UsageStrictMockTest.range":16,"org.easymock.tests2.UsageConstraintsTest.lessThan":409,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":368,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":47,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":437,"org.easymock.tests2.CaptureTest.testCaptureRightOne":422,"org.easymock.tests2.UsageConstraintsTest.testOr":389,"org.easymock.tests.UsageRangeTest.combination":136,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":300,"org.easymock.tests.UsageTest.wrongArguments":9,"org.easymock.tests2.MockBuilderTest.testWithConstructor":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":434,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":59,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":194,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":141,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":199,"org.easymock.tests.UsageVarargTest.varargShortAccepted":75,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":235,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":121,"org.easymock.tests2.UsageConstraintsTest.cmpTo":394,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":143,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":462,"org.easymock.tests2.CaptureTest.testCaptureFromStub":423,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":164,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":347,"org.easymock.tests.UsageTest.unexpectedCallWithArray":254,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":1,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":119,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":57,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":90,"org.easymock.tests2.UsageConstraintsTest.constraints":383,"org.easymock.samples.ExampleTest.addAndChangeDocument":290,"org.easymock.tests.UsageStrictMockTest.testVerify":92,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":280,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":89,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":207,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":418,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":82,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":195,"org.easymock.tests.LimitationsTest.abstractClass":214,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":83,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":277,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":7,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":69,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":328}}]
