[{"position":"org.easymock.internal.RecordState:243","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[86,53,57,87,88,89,90,91,92,93,94],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg","this":"this","paramType":"paramType"}},{"transplant":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[95,96,97,98],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:231","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1039","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:172","failures":[99,60],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[100,101,102,103,104,105,0,1,106,2,107,108,109,110,111,112,113,114,3,4,5,6,115,116,117,118,119,120,121,122,123,124,125,95,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,7,8,153,154,155,156,157,158,159,160,161,162,163,164,165,9,166,167,10,168,169,170,171,172,173,174,175,176,11,177,12,13,178,179,14,15,16,17,18,19,20,21,22,180,181,182,183,184,185,186,187,188,189,23,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,24,240,25,241,242,99,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,26,27,260,261,28,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,29,281,282,283,284,285,286,287,288,30,31,32,33,34,35,289,290,36,37,291,38,39,40,292,41,42,43,44,45,293,294,295,296,297,298,299,300,301,302,303,304,305,306,46,307,308,309,47,86,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,48,325,49,50,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,53,54,55,56,369,370,371,372,58,373,59,374,60,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,96,399,400,97,98,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,63,421,422,64,423,65,424,425,426,427,428,429,66,430,431,67,432,433,68,69,70,71,72,73,434,74,435,436,437,75,76,77,438,78,79,439,440,441,442,443,80,444,445,446,447,447,448,448,81,82,449,83,84,450,85,451,452,453],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[144,148],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[454,455,176,223,456,457],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"failures":[458],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:907","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MocksControl:189","failures":[101,102,153,174,176,177,12,13,221,223,224,227,228,229,323,325,49,50,332,62,459,385,388,390,394,395,397],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:305","sourceCode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","type":"CtReturnImpl"},"failures":[135,198,199],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[460,461,462],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[463],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[103,104,105,109,143,144,145,146,147,148,149,181,24,240,241,260,261,28,262,272,273,274,275,276,277,278,279,329,51,54,378,379,422,64,423,464,424,465,428,466,430,431,68,69,71,72,73,74,436,437,77,438,467,439,440,444,445],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return this.boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:36","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"matching"}},{"transplant":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[468,327,328,329],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:71","failures":[58,59,60,61,62,459,81],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:56","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"failures":[293,294,295,297,300,301,304,311,312,313,315,318,319,322,446,453],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[333],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"failures":[469],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"this"}},{"position":"org.easymock.internal.InjectionPlan:51","failures":[293,294,295,296,297,298,299,300,301,302,303,304,311,312,313,314,315,316,317,318,319,320,321,322,446,453],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[122,284,306,307,308,309,449],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:197","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1862","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Same(T))","type":"CtInvocationImpl"},"failures":[337],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1709","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:365","sourceCode":"return org.easymock.EasyMockSupport.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[470,298,316,446,453],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[101,102,153,12,471,472,49],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[100,101,102,0,1,2,3,4,5,6,115,116,117,118,119,150,151,153,154,155,156,158,159,161,162,163,164,165,166,167,174,175,176,11,177,12,13,178,179,14,15,16,17,18,19,20,21,22,180,181,182,183,184,185,186,187,188,189,23,190,191,192,193,199,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,24,240,244,245,246,247,252,26,27,28,263,264,265,266,267,268,273,287,30,31,32,33,34,35,289,290,36,37,291,38,39,40,292,41,42,43,44,45,306,46,307,309,47,310,323,324,48,325,49,50,326,327,328,329,330,331,332,333,335,336,337,338,339,340,342,343,344,345,346,347,348,349,350,351,352,353,355,356,357,358,52,53,56,57,369,370,371,372,473,59,374,62,459,377,378,379,380,381,382,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,400,97,98,474,475,476,477,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,63,421,68,69,70,71,72,73,74,437,76,78,82,449,83,84,450,85,452],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.EndsWith:40","failures":[478],"status":-1,"binaryOperator":"(\"endsWith(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[100,101,102,103,104,105,0,1,106,2,107,108,109,110,111,112,113,114,3,4,5,6,115,116,117,118,119,120,121,122,123,124,125,95,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,479,143,144,145,146,147,148,480,149,150,151,152,7,8,153,154,155,156,157,158,159,160,161,162,163,164,165,481,9,166,167,10,168,169,170,171,172,173,174,175,176,11,177,12,13,178,179,14,15,16,17,18,19,20,21,22,180,181,182,183,184,185,186,187,188,189,23,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,24,240,25,241,482,483,484,242,485,99,470,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,26,27,260,261,28,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,29,281,282,283,284,285,286,287,288,30,31,32,33,34,35,289,290,36,37,291,38,39,40,292,41,42,43,44,45,293,294,295,296,297,298,299,300,301,302,303,304,305,306,46,307,308,309,47,86,486,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,48,325,49,50,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,487,362,363,488,364,489,365,366,367,368,51,52,53,54,490,55,56,57,87,369,370,371,372,473,88,58,491,89,373,59,374,60,90,61,463,375,376,62,92,459,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,96,399,400,97,98,401,474,475,476,477,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,63,421,422,492,493,64,494,423,65,464,424,425,495,465,426,427,428,429,66,466,430,496,497,431,67,432,433,68,69,70,71,72,73,434,498,74,435,436,437,75,76,77,438,467,499,500,78,79,439,501,502,503,440,441,442,443,80,444,445,446,447,448,81,82,449,83,84,450,85,451,452,453],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"failures":[342],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"failures":[151,167,184,188,189,191,192,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,226,263,264,265,266,267,268,285,377,378,379,380,385,392,417],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:47","sourceCode":"if (int > 0) {\n    java.lang.StringBuffer.append(\", \");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[454,455,176,456,457],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","i":"i"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:120","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>)","type":"CtAssignmentImpl"},"failures":[282,310,382,384,398,400,98,449],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[100,101,102,111,112,3,5,6,150,151,153,154,155,156,158,159,161,162,163,164,165,9,166,167,168,171,175,11,177,12,13,178,14,15,16,17,18,19,20,21,22,180,181,182,183,184,185,186,187,188,189,23,190,191,192,193,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,225,226,227,229,232,233,234,235,237,238,24,240,241,26,27,28,263,264,265,266,267,268,278,279,282,284,285,30,31,32,33,34,35,289,290,36,37,291,38,39,40,292,41,42,43,44,45,298,306,46,307,309,310,316,324,48,325,49,50,326,328,329,330,331,332,333,335,336,337,338,339,340,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,487,362,363,488,489,365,366,367,368,51,54,55,377,378,379,380,382,384,385,386,387,389,390,391,392,394,396,397,398,400,97,98,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,63,421,64,68,69,70,71,72,73,74,78,79,443,80,444,445,446,82,449,83,84,450,85,452,453],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[504,505,506],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.RecordState:217","failures":[100,101,102,105,0,1,2,110,111,112,113,114,3,4,5,6,115,116,117,118,119,135,141,143,150,151,152,7,8,153,154,155,156,158,159,160,161,162,163,164,165,9,166,167,10,169,170,171,174,175,176,11,177,12,13,178,179,14,15,16,17,18,19,20,21,22,180,181,182,183,184,185,186,187,188,189,23,190,191,192,193,195,196,197,198,199,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,24,240,25,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,26,27,28,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,29,282,283,284,285,286,287,288,30,31,32,33,34,35,289,290,36,37,291,38,39,40,292,41,42,43,44,45,298,305,306,46,307,308,309,47,310,316,323,324,48,325,49,50,326,327,328,329,330,331,332,333,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,487,362,363,488,364,489,365,366,367,368,51,52,53,54,55,56,57,369,370,371,372,473,58,59,374,60,61,376,62,459,377,378,379,380,381,382,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,96,399,400,97,98,474,475,476,477,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,63,421,64,65,66,67,68,69,70,71,72,73,434,74,437,75,76,77,78,79,443,80,444,445,446,447,447,448,448,81,82,449,83,84,450,85,451,452,453],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:972","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[165,334],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1495","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"answer":"answer"}},{"transplant":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"failures":[14],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[507,402,404,405,406,407,408,409,411,508,412,413,415],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:36","sourceCode":"return true","type":"CtReturnImpl"},"failures":[150,151,153,11,14,15,16,17,18,23,190,191,192,193,26,27,267,48,338,342,403,409,410,415],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":333,"org.easymock.tests2.UsageTest.argumentsOrdered":395,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":221,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":366,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":299,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":129,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":390,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":446,"org.easymock.tests2.DelegateToTest.testReturnException":306,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":264,"org.easymock.tests.MockingTest.testPartialClassMocking":0,"org.easymock.tests.MockClassControlTest.testToString":274,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":401,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":29,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":467,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":495,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":65,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":201,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":79,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":340,"org.easymock.tests2.UsageTest.wrongArguments":388,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":23,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":322,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":246,"org.easymock.samples.ExampleTest.answerVsDelegate":449,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":99,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":108,"org.easymock.tests2.UsageConstraintsTest.testNull":336,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":71,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":279,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":365,"org.easymock.tests2.CaptureTest.testPrimitive":405,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":193,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":220,"org.easymock.tests.UsageTest.moreThanOneArgument":222,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":70,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":21,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":110,"org.easymock.tests.UsageTest.argumentsOrdered":228,"org.easymock.tests.UsageVarargTest.varargIntAccepted":156,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":134,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":14,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":473,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":462,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":502,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":303,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":374,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":122,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":18,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":506,"org.easymock.tests.ReplayStateInvalidUsageTest.times":256,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":316,"org.easymock.tests2.DependencyTest.testClassMocking":499,"org.easymock.tests2.AnswerTest.answer":398,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":341,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":136,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":372,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":484,"org.easymock.tests2.CaptureTest.testAnd":402,"org.easymock.tests2.UsageTest.strictResetToDefault":386,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":437,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":89,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":20,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":5,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":362,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":114,"org.easymock.tests2.DelegateToTest.testDelegate":309,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":216,"org.easymock.tests.LimitationsTest.mockFinalMethod":262,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":267,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":119,"org.easymock.tests2.DependencyTest.testClassMockingSupport":500,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":198,"org.easymock.tests2.CaptureTest.testCapture1_2446744":406,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":498,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":214,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":370,"org.easymock.tests.UsageThrowableTest.throwError":182,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":250,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":485,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":481,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":304,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":180,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":433,"org.easymock.samples.PartialClassMockTest.testGetArea":81,"org.easymock.tests.MockingTest.testInterfaceMocking":106,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":251,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":15,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":465,"org.easymock.tests2.UsageTest.niceToStrict":389,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":173,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":202,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":120,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":59,"org.easymock.tests2.MockBuilderTest.testCreateMock":376,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":496,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":319,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":456,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":210,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":363,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":483,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":271,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":230,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":244,"org.easymock.tests.UsageOverloadedMethodTest.overloading":166,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":431,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":429,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":285,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":346,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":38,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":9,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":345,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":411,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":157,"org.easymock.tests2.EasyMockSupportClassTest.testAll":64,"org.easymock.tests.MockClassControlTest.testEquals":278,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":240,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":218,"org.easymock.tests2.CaptureTest.testCaptureAll":403,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":117,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":371,"org.easymock.tests.MockNameTest.defaultName":194,"org.easymock.tests2.UsageConstraintsTest.testMatches":347,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":22,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":248,"org.easymock.samples.ExampleTest.voteForRemovals":85,"org.easymock.tests.UsageVarargTest.allKinds":165,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":100,"org.easymock.samples.BasicClassMockTest.testPrintContent":445,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":118,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":188,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":323,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":268,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":300,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":308,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":480,"org.easymock.tests2.UsageConstraintsTest.greaterThan":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":494,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":4,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":77,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":149,"org.easymock.samples.ExampleTest.voteForRemoval":83,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":438,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":419,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":470,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":503,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":434,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":385,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":181,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":375,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":126,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":361,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":492,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":263,"org.easymock.tests2.CaptureTest.testCaptureFirst":415,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":305,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":95,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":487,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":397,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":288,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":290,"org.easymock.tests2.CaptureTest.testCapture2_2446744":414,"org.easymock.tests2.UsageTest.moreThanOneArgument":387,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":63,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":137,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":62,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":164,"org.easymock.tests.GenericTest.testBridgedEquals":241,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":237,"org.easymock.tests.UsageExpectAndReturnTest.longType":33,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":115,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":359,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":219,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":10,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":354,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":217,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":19,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":196,"org.easymock.tests.UsageCallCountTest.tooManyCalls":238,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":504,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":497,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":36,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":321,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":206,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":187,"org.easymock.tests.MockingTest.testNiceClassMocking":109,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":52,"org.easymock.tests.MockingTest.testClassMocking":104,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":231,"org.easymock.tests2.UsageConstraintsTest.testContains":344,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":379,"org.easymock.tests2.UsageConstraintsTest.testFind":335,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":167,"org.easymock.tests.MockTypeTest.fromEasyMockClass":242,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":384,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":174,"org.easymock.tests.UsageExpectAndReturnTest.object":291,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":74,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":320,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":489,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":159,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":171,"org.easymock.tests.UsageTest.exactCallCountByLastCall":229,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":150,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":125,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":111,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":280,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":86,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":154,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":42,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":284,"org.easymock.tests.MockClassControlTest.testHashCode":277,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":294,"org.easymock.tests2.EasyMockSupportTest.testVerify":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":427,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":505,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":112,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":270,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":282,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":369,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":381,"org.easymock.tests.UsageVarargTest.varargCharAccepted":158,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":479,"org.easymock.tests2.CaptureTest.testCaptureMultiple":507,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":324,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":142,"org.easymock.tests2.UsageTest.openCallCountByLastCall":391,"org.easymock.tests.DefaultClassInstantiatorTest.object":143,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":367,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":269,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":428,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":208,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":185,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":314,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":293,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":75,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":276,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":207,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":43,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":67,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":275,"org.easymock.tests2.UsageTest.resumeIfFailure":396,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":482,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":501,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":266,"org.easymock.tests2.StubTest.stubWithReturnValue":417,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":90,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":37,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":355,"org.easymock.tests2.SerializationTest.testAllMockedMethod":329,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":135,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":457,"org.easymock.samples.SupportTest.voteForRemovals":80,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":239,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":296,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":213,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":468,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":141,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":96,"org.easymock.tests.UsageExpectAndThrowTest.object":211,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":281,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":352,"org.easymock.tests2.DelegateToTest.testWrongClass":307,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":26,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":27,"org.easymock.samples.ConstructorCalledMockTest.testTax":447,"org.easymock.tests.UsageStrictMockTest.range":12,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":441,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":364,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":51,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":212,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":60,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":422,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":227,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":258,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":245,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":454,"org.easymock.tests2.CaptureTest.testCaptureNone":410,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":8,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":469,"org.easymock.tests.UsageUnorderedTest.message":153,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":478,"org.easymock.tests.UsageVerifyTest.twoReturns":102,"org.easymock.tests.UsageVarargTest.varargByteAccepted":163,"org.easymock.tests2.ThreadingTest.testThreadSafe":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":466,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":235,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":444,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":172,"org.easymock.tests2.CaptureTest.testCapture_2617107":404,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":200,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":139,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":192,"org.easymock.tests2.UsageConstraintsTest.any":342,"org.easymock.tests2.StubTest.stub":416,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":255,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":197,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":140,"org.easymock.tests.UsageExpectAndThrowTest.longType":204,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":265,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":147,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":254,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":325,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":298,"org.easymock.tests2.SerializationTest.testClass":327,"org.easymock.tests.LimitationsTest.mockNativeMethod":28,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":45,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":25,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":313,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":326,"org.easymock.tests2.NameTest.nameForMocksControl":477,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":315,"org.easymock.tests2.MockedExceptionTest.testMockedException":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":423,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":226,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":2,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":205,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":383,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":68,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":61,"org.easymock.tests.MockingTest.testNicePartialClassMocking":1,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":73,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":460,"org.easymock.tests2.CaptureTest.testCaptureLast":409,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":311,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":199,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":57,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":339,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":353,"org.easymock.tests.MockingTest.testTwoMocks":105,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":87,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":30,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":209,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":394,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":357,"org.easymock.samples.ExampleTest.removeNonExistingDocument":451,"org.easymock.tests.UsageStrictMockTest.differentMethods":13,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":252,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":318,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":295,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":145,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":420,"org.easymock.tests2.MockBuilderTest.testCreateMockString":459,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":272,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":464,"org.easymock.tests.UsageExpectAndThrowTest.floatType":203,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":493,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":400,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":486,"org.easymock.tests.UsageVerifyTest.twoThrows":101,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":66,"org.easymock.samples.ExampleTest.voteAgainstRemoval":84,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":152,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":130,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":76,"org.easymock.tests.LimitationsTest.privateConstructor":261,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":94,"org.easymock.tests2.UsageConstraintsTest.testNotNull":356,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":189,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":377,"org.easymock.tests2.UsageTest.defaultResetToNice":393,"org.easymock.samples.ExampleTest.voteAgainstRemovals":82,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":131,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":41,"org.easymock.tests.UsageVarargTest.differentLength":160,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":312,"org.easymock.tests2.CallbackTest.callback":310,"org.easymock.tests2.UsageConstraintsTest.equals":334,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":435,"org.easymock.tests.UsageTest.openCallCountByLastCall":225,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":330,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":191,"org.easymock.tests.UsageCallCountTest.tooFewCalls":233,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":54,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":247,"org.easymock.tests.UsageThrowableTest.throwCheckedException":186,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":455,"org.easymock.tests.MockingTest.testStrictClassMocking":103,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":151,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":56,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":53,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":317,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":257,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":55,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":98,"org.easymock.tests.ObjectMethodsTest.testHashCode":170,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":461,"org.easymock.tests2.NameTest.nameForNiceMock":476,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":421,"org.easymock.tests2.DependencyTest.testInterfaceMocking":78,"org.easymock.samples.ExampleTest.addDocument":450,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":430,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":432,"org.easymock.tests2.DelegateToTest.testStubDelegate":46,"org.easymock.tests2.AnswerTest.stubAnswer":97,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":11,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":463,"org.easymock.tests.UsageVarargTest.varargLongAccepted":162,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":178,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":128,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":44,"org.easymock.tests.UsageExpectAndReturnTest.floatType":32,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":47,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":448,"org.easymock.tests.UsageThrowableTest.noUpperLimit":183,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":286,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":302,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":350,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":331,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":439,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":407,"org.easymock.tests2.SerializationTest.test":328,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":144,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":31,"org.easymock.tests2.UsageConstraintsTest.testSame":337,"org.easymock.samples.SupportTest.addDocument":443,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":490,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":424,"org.easymock.tests.GenericTest.testPackageScope":24,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":124,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":301,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":107,"org.easymock.tests2.NameTest.nameForMock":474,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":39,"org.easymock.tests2.UsageStrictMockTest.differentMethods":50,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":92,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":436,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":34,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":215,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":168,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":6,"org.easymock.tests2.MockedExceptionTest.testRealException":380,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":243,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":442,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":133,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":132,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":48,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":190,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":259,"org.easymock.tests2.NameTest.nameForStrictMock":475,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":373,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":382,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":72,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":440,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":471,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":146,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":351,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":58,"org.easymock.tests2.UsageStrictMockTest.range":49,"org.easymock.tests2.UsageConstraintsTest.lessThan":358,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":458,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":297,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":127,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":426,"org.easymock.tests2.CaptureTest.testCaptureRightOne":412,"org.easymock.tests2.UsageConstraintsTest.testOr":338,"org.easymock.tests.UsageRangeTest.combination":3,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":69,"org.easymock.tests.UsageTest.wrongArguments":224,"org.easymock.tests2.MockBuilderTest.testWithConstructor":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":425,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":273,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":35,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":121,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":40,"org.easymock.tests.UsageVarargTest.varargShortAccepted":161,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":148,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":236,"org.easymock.tests2.UsageConstraintsTest.cmpTo":343,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":123,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":392,"org.easymock.tests2.CaptureTest.testCaptureFromStub":413,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":249,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":491,"org.easymock.tests.UsageTest.unexpectedCallWithArray":223,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":176,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":234,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":91,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":292,"org.easymock.tests2.CaptureTest.testCapture":508,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":177,"org.easymock.tests2.UsageConstraintsTest.constraints":332,"org.easymock.samples.ExampleTest.addAndChangeDocument":452,"org.easymock.tests.UsageStrictMockTest.testVerify":179,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":453,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":175,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":116,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":408,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":16,"org.easymock.tests.LimitationsTest.abstractClass":260,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":289,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":17,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":287,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":488,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":472,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":155}}]
