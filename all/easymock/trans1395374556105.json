[{"transplant":{"position":"org.easymock.internal.ReplayState:32","sourceCode":"new java.util.concurrent.locks.ReentrantLock()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:44","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n        if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n            org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n        } \n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:102","sourceCode":"if (!boolean) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove();\n    throw new java.lang.IllegalStateException(java.lang.String);\n} ","type":"CtIfImpl"},"failures":[1],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[2,3,4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","threadSafe":"state","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[5,6,7],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"actual","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[8],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:253","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:92","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>","type":"CtLocalVariableImpl"},"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cls":"clazz"}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"returnedType"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:194","sourceCode":"try {\n    java.lang.reflect.Constructor<?> = java.lang.Class<?>.getDeclaredConstructor(org.easymock.ConstructorArgs.getConstructor().getParameterTypes());\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"Fail to find constructor for param types\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"mockClass"}},{"position":"org.easymock.internal.MockBuilder:201","failures":[27,27,28,28,9,10,29,11,12,30,31,32,33,14,34,35,15,16,17,36,37,18,20,38,21,39,40,41,42,43,24,25],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:242","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[44],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"failures":[12],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:82","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[45,46,47,48,49,50,51,52],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:363","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResults:37","sourceCode":"return org.easymock.internal.ExpectedInvocation","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.JavaProxyFactory:34","sourceCode":"return java.lang.reflect.Proxy.java.lang.reflect.Proxy.getInvocationHandler(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:165","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory().getInvocationHandler(java.lang.Object)","type":"CtReturnImpl"},"failures":[53],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"failures":[54,55,56,57,58,59,60,61,62,63],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[64,65,66,67,68,69,70,71,27,28,72,9,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,45,107,108,46,109,47,48,110,111,112,113,114,115,116,117,118,119,120,121,1,122,123,124,5,125,126,2,127,128,8,129,130,131,132,133,134,135,54,136,55,56,57,58,59,60,137,61,63,138,139,140,141,142,143,144,145,146,147,148,0,149,150,3,151,10,152,153,29,154,155,11,12,156,157,30,31,32,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,33,177,14,34,178,35,15,179,16,180,17,36,37,181,18,182,20,183,184,185,186,187,4,188,189,190,191,192,193,194,38,195,196,197,198,199,200,201,49,202,203,50,204,51,52,205,206,207,208,209,210,211,212,213,214,21,215,216,217,218,219,220,221,222,39,223,224,225,226,227,228,229,230,231,40,232,233,234,235,236,41,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,42,257,258,43,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,6,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,53,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,24,369,370,371,372,25,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,44,391,392,393,394,395,396,397,398,399,26,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,7,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"failures":[64,65,66,67,69,71,27,27,28,28,9,75,80,81,89,91,94,96,97,107,111,112,113,114,116,117,118,119,120,121,122,123,124,5,125,126,2,127,128,8,129,130,132,133,134,135,54,136,56,57,60,137,61,63,138,139,140,141,142,143,144,145,146,148,0,149,150,3,151,153,11,12,156,31,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,14,15,16,17,18,183,184,185,187,188,189,190,193,194,38,195,196,197,202,206,207,208,209,211,212,213,21,215,220,39,40,41,244,245,246,247,248,249,250,251,252,257,43,260,261,262,263,264,276,278,279,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,321,339,345,349,350,352,356,357,358,360,361,362,377,381,406,407,408,409,410,413,414,417,429,430,431,432,433,434,436,437,438,439,440,441,442,443,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,488,489,491],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:288","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[248,325],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:159","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"f":"targetField"}},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[493,54,136,55,56,57,58,59,60,61,62,63,138,139,140,494],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[10,30,33,179,38,39],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[266,267,271],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[113,114,117,119,120,1,8,133,54,55,63],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"failures":[62,494],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:94","sourceCode":"if ((org.easymock.internal.Range.hasOpenCount()) || (int == (java.lang.Integer.int))) {\n    int = java.lang.Integer.int;\n} else {\n    int += org.easymock.internal.Range.getMaximum();\n}","type":"CtIfImpl"},"failures":[64,65,66,67,68,69,71,72,9,73,74,75,76,77,80,81,89,91,92,93,94,95,96,97,98,107,111,112,113,114,116,117,118,119,120,121,122,123,124,5,125,126,2,127,128,8,129,130,132,133,134,135,54,136,55,56,58,59,60,137,61,63,140,141,144,145,146,148,0,149,150,3,151,153,11,12,156,31,159,160,163,164,165,166,167,168,169,170,172,173,174,175,176,14,15,16,17,18,183,184,185,186,187,4,191,192,193,194,196,202,206,207,208,209,211,212,213,21,215,216,220,39,40,41,240,241,242,243,245,246,249,250,251,252,257,258,274,275,6,276,277,278,279,280,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,306,308,309,310,311,315,316,317,318,349,350,352,361,362,377,379,381,382,383,384,386,387,409,410,412,415,416,417,418,419,420,422,423,424,425,426,427,428,7,429,430,431,432,433,436,437,438,439,440,441,442,443,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,471,472,491],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"java.lang.Integer.MAX_VALUE":"max"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[246],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[113,120],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:224","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else {\n    return java.lang.reflect.Type;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:220","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    return java.lang.reflect.Type != null ? java.lang.reflect.Type : java.lang.Object.java.lang.Object;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else {\n    return java.lang.reflect.Type;\n}","type":"CtIfImpl"},"failures":[42],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:46","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:45","sourceCode":"try {\n    return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n} finally {\n    java.util.concurrent.locks.ReentrantLock.unlock();\n}","type":"CtTryImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"invocation":"invocation","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":114,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":409,"org.easymock.tests2.UsageTest.argumentsOrdered":192,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":174,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":203,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":333,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":4,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":73,"org.easymock.tests2.DelegateToTest.testReturnException":245,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":303,"org.easymock.tests.MockingTest.testPartialClassMocking":349,"org.easymock.tests.MockClassControlTest.testToString":400,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":239,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":313,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":30,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":226,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":449,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":39,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":81,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":121,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":437,"org.easymock.tests2.UsageTest.wrongArguments":186,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":110,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":255,"org.easymock.samples.ExampleTest.answerVsDelegate":65,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":25,"org.easymock.tests2.UsageConstraintsTest.testNull":117,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":354,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":150,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":405,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":173,"org.easymock.tests2.CaptureTest.testPrimitive":56,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":441,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":468,"org.easymock.tests.UsageTest.moreThanOneArgument":410,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":149,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":262,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":478,"org.easymock.tests.UsageTest.argumentsOrdered":416,"org.easymock.tests.UsageVarargTest.varargIntAccepted":420,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":338,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":429,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":33,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":52,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":84,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":179,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":325,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":433,"org.easymock.tests.ReplayStateInvalidUsageTest.times":395,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":107,"org.easymock.tests2.DependencyTest.testClassMocking":78,"org.easymock.tests2.AnswerTest.answer":141,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":340,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":102,"org.easymock.tests2.CaptureTest.testAnd":54,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":370,"org.easymock.tests2.UsageTest.strictResetToDefault":184,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":178,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":155,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":261,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":168,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":310,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":482,"org.easymock.tests2.DelegateToTest.testDelegate":249,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":464,"org.easymock.tests.LimitationsTest.mockFinalMethod":378,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":306,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":448,"org.easymock.tests2.DependencyTest.testClassMockingSupport":79,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":320,"org.easymock.tests2.CaptureTest.testCapture1_2446744":57,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":152,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":462,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":100,"org.easymock.tests.UsageThrowableTest.throwError":470,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":390,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":372,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":205,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":359,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":238,"org.easymock.samples.PartialClassMockTest.testGetArea":9,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":44,"org.easymock.tests.MockingTest.testInterfaceMocking":351,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":430,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":357,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":450,"org.easymock.tests2.UsageTest.niceToStrict":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":227,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":368,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":323,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":15,"org.easymock.tests2.MockBuilderTest.testCreateMock":181,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":234,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":109,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":458,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":169,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":369,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":485,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":379,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":253,"org.easymock.tests.UsageOverloadedMethodTest.overloading":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":236,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":489,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":125,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":293,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":360,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":5,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":61,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":421,"org.easymock.tests.MockClassControlTest.testEquals":404,"org.easymock.tests2.EasyMockSupportClassTest.testAll":220,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":258,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":466,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":446,"org.easymock.tests2.CaptureTest.testCaptureAll":136,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":101,"org.easymock.tests.MockNameTest.defaultName":435,"org.easymock.tests2.UsageConstraintsTest.testMatches":126,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":388,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":263,"org.easymock.samples.ExampleTest.voteForRemovals":69,"org.easymock.tests.UsageVarargTest.allKinds":7,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":315,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":447,"org.easymock.samples.BasicClassMockTest.testPrintContent":77,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":476,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":92,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":50,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":248,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":307,"org.easymock.tests2.UsageConstraintsTest.greaterThan":127,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":272,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":221,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":309,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":156,"org.easymock.samples.ExampleTest.voteForRemoval":66,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":273,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":160,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":157,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":373,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":85,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":10,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":436,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":183,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":37,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":330,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":166,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":472,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":218,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":302,"org.easymock.tests2.CaptureTest.testCaptureFirst":140,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":244,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":329,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":167,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":194,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":492,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":289,"org.easymock.tests2.UsageTest.moreThanOneArgument":185,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":162,"org.easymock.tests2.CaptureTest.testCapture2_2446744":139,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":18,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":341,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":428,"org.easymock.tests.GenericTest.testBridgedEquals":259,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":386,"org.easymock.tests.UsageExpectAndReturnTest.longType":285,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":444,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":164,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":467,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":19,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":434,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":131,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":465,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":407,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":260,"org.easymock.tests.UsageCallCountTest.tooManyCalls":387,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":235,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":290,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":48,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":454,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":475,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":207,"org.easymock.tests.MockingTest.testNiceClassMocking":355,"org.easymock.tests.MockingTest.testClassMocking":348,"org.easymock.tests2.UsageConstraintsTest.testContains":124,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":13,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":380,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":196,"org.easymock.tests2.UsageConstraintsTest.testFind":116,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":362,"org.easymock.tests.MockTypeTest.fromEasyMockClass":371,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":91,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":274,"org.easymock.tests.UsageExpectAndReturnTest.object":292,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":153,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":47,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":172,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":423,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":366,"org.easymock.tests.UsageTest.exactCallCountByLastCall":417,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":318,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":328,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":479,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":312,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":32,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":418,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":298,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":488,"org.easymock.tests.MockClassControlTest.testHashCode":403,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":199,"org.easymock.tests2.EasyMockSupportTest.testVerify":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":229,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":480,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":486,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":484,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":99,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":147,"org.easymock.tests.UsageVarargTest.varargCharAccepted":422,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":265,"org.easymock.tests2.CaptureTest.testCaptureMultiple":493,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":93,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":346,"org.easymock.tests2.UsageTest.openCallCountByLastCall":188,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":175,"org.easymock.tests.DefaultClassInstantiatorTest.object":266,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":483,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":364,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":456,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":230,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":473,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":106,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":198,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":402,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":11,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":455,"org.easymock.tests.CapturesMatcherTest.test":494,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":299,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":406,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":41,"org.easymock.tests2.UsageTest.resumeIfFailure":193,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":24,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":83,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":305,"org.easymock.tests2.StubTest.stubWithReturnValue":252,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":180,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":132,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":291,"org.easymock.tests2.SerializationTest.testAllMockedMethod":216,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":339,"org.easymock.samples.SupportTest.voteForRemovals":75,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":42,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":201,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":461,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":345,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":142,"org.easymock.tests.UsageExpectAndThrowTest.object":459,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":314,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":129,"org.easymock.tests2.DelegateToTest.testWrongClass":247,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":442,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":443,"org.easymock.samples.ConstructorCalledMockTest.testTax":27,"org.easymock.tests.UsageStrictMockTest.range":278,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":87,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":171,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":206,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":460,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":16,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":415,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":397,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":217,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":254,"org.easymock.tests2.CaptureTest.testCaptureNone":137,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":358,"org.easymock.tests.UsageUnorderedTest.message":469,"org.easymock.tests.UsageVerifyTest.twoReturns":317,"org.easymock.tests.UsageVarargTest.varargByteAccepted":427,"org.easymock.tests2.ThreadingTest.testThreadSafe":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":232,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":384,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":76,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":367,"org.easymock.tests2.CaptureTest.testCapture_2617107":55,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":322,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":440,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":343,"org.easymock.tests2.UsageConstraintsTest.any":122,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":394,"org.easymock.tests2.StubTest.stub":251,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":408,"org.easymock.tests.UsageExpectAndThrowTest.longType":452,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":304,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":344,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":270,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":393,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":95,"org.easymock.tests2.SerializationTest.testClass":21,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":202,"org.easymock.tests.LimitationsTest.mockNativeMethod":377,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":43,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":301,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":105,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":23,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":98,"org.easymock.tests2.NameTest.nameForMocksControl":243,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":45,"org.easymock.tests2.MockedExceptionTest.testMockedException":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":222,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":414,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":453,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":90,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":352,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":148,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":17,"org.easymock.tests.MockingTest.testNicePartialClassMocking":350,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":151,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":103,"org.easymock.tests2.CaptureTest.testCaptureLast":60,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":321,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":120,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":213,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":130,"org.easymock.tests.MockingTest.testTwoMocks":53,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":214,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":282,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":457,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":191,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":134,"org.easymock.samples.ExampleTest.removeNonExistingDocument":70,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":391,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":46,"org.easymock.tests.UsageStrictMockTest.differentMethods":279,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":200,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":268,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":161,"org.easymock.tests2.MockBuilderTest.testCreateMockString":20,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":399,"org.easymock.tests.UsageExpectAndThrowTest.floatType":451,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":223,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":219,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":144,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":158,"org.easymock.tests.UsageVerifyTest.twoThrows":316,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":487,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":40,"org.easymock.samples.ExampleTest.voteAgainstRemoval":67,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":334,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":356,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":12,"org.easymock.tests.LimitationsTest.privateConstructor":376,"org.easymock.tests2.UsageConstraintsTest.testNotNull":133,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":477,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":38,"org.easymock.tests2.UsageTest.defaultResetToNice":190,"org.easymock.samples.ExampleTest.voteAgainstRemovals":64,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":297,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":335,"org.easymock.tests.UsageVarargTest.differentLength":424,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":104,"org.easymock.tests2.CallbackTest.callback":250,"org.easymock.tests2.UsageConstraintsTest.equals":115,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":29,"org.easymock.tests.UsageTest.openCallCountByLastCall":413,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":111,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":439,"org.easymock.tests.UsageCallCountTest.tooFewCalls":382,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":209,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":256,"org.easymock.tests.UsageThrowableTest.throwCheckedException":474,"org.easymock.tests.MockingTest.testStrictClassMocking":347,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":212,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":319,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":108,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":208,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":396,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":211,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":146,"org.easymock.tests.ObjectMethodsTest.testHashCode":365,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":163,"org.easymock.tests2.NameTest.nameForNiceMock":242,"org.easymock.tests2.DependencyTest.testInterfaceMocking":80,"org.easymock.samples.ExampleTest.addDocument":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":237,"org.easymock.tests2.DelegateToTest.testStubDelegate":246,"org.easymock.tests2.AnswerTest.stubAnswer":145,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":276,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":36,"org.easymock.tests.UsageVarargTest.varargLongAccepted":426,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":280,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":332,"org.easymock.tests.UsageExpectAndReturnTest.floatType":284,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":300,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":31,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":28,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":490,"org.easymock.tests.UsageThrowableTest.noUpperLimit":471,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":128,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":51,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":112,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":82,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":58,"org.easymock.tests2.SerializationTest.test":215,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":267,"org.easymock.tests2.UsageConstraintsTest.testSame":118,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":283,"org.easymock.samples.SupportTest.addDocument":74,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":210,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":392,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":224,"org.easymock.tests.GenericTest.testPackageScope":257,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":481,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":327,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":204,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":353,"org.easymock.tests2.NameTest.nameForMock":240,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":294,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":182,"org.easymock.tests2.UsageStrictMockTest.differentMethods":97,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":154,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":286,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":463,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":363,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":311,"org.easymock.tests2.MockedExceptionTest.testRealException":197,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":374,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":88,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":337,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":94,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":336,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":438,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":398,"org.easymock.tests2.NameTest.nameForStrictMock":241,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":35,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":89,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":3,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":86,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":8,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":269,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":14,"org.easymock.tests2.UsageStrictMockTest.range":96,"org.easymock.tests2.UsageConstraintsTest.lessThan":135,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":49,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":165,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":331,"org.easymock.tests2.CaptureTest.testCaptureRightOne":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":228,"org.easymock.tests2.UsageConstraintsTest.testOr":119,"org.easymock.tests.UsageRangeTest.combination":308,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":0,"org.easymock.tests.UsageTest.wrongArguments":412,"org.easymock.tests2.MockBuilderTest.testWithConstructor":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":225,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":26,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":287,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":324,"org.easymock.tests.UsageVarargTest.varargShortAccepted":425,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":271,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":385,"org.easymock.tests2.UsageConstraintsTest.cmpTo":123,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":143,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":326,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":189,"org.easymock.tests2.CaptureTest.testCaptureFromStub":138,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":389,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":34,"org.easymock.tests.UsageTest.unexpectedCallWithArray":411,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":6,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":383,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":296,"org.easymock.tests2.CaptureTest.testCapture":62,"org.easymock.tests2.UsageConstraintsTest.constraints":113,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":277,"org.easymock.samples.ExampleTest.addAndChangeDocument":71,"org.easymock.tests.UsageStrictMockTest.testVerify":281,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":72,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":275,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":445,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":59,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":431,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":22,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":288,"org.easymock.tests.LimitationsTest.abstractClass":375,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":491,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":432,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":419,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":170}}]
