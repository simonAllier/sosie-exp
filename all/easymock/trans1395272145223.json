[{"position":"org.easymock.internal.Range:40","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[69,180,181,209,212,488,489,490,491,492],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"this.java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[51,52,56,57,122,132,135,137,200,202,203,208,210,213,214,216,249,254,262,408,410,411,412,413],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","toStringMethod":"hashCodeMethod","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[493,494,495,128,496],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[69,70,71,497],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[181,209,488,489,490,498,499],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:61","failures":[2,3,6,8,9,26,36,37,38,43,44,46,49,285,286,287,404],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[225],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[69,70,71,497],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[225],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[29],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MocksControl:136","failures":[50,51,52,53,56,57,69,71,97,98,121,122,124,125,126,127,129,130,131,132,133,134,135,136,137,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,188,189,190,192,193,194,196,200,202,203,205,206,207,208,210,212,213,214,216,225,226,227,228,229,249,254,264,265,266,267,268,269,271,297,298,299,300,301,303,306,346,347,348,349,392,408,409,410,411,412,413,414,415,471,472,472,473,473,486,487],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[2,9,36,38,46],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[225,229],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjenesisClassInstantiator:26","sourceCode":"return org.objenesis.ObjenesisHelper.org.objenesis.ObjenesisHelper.newInstance(java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[50,51,53,56,71,121,122,124,125,126,127,129,131,132,133,134,135,136,137,155,156,158,160,161,162,163,164,166,167,168,169,171,172,173,174,175,176,177,188,189,190,192,196,200,202,203,205,206,207,208,210,213,214,216,225,226,227,228,229,249,254,297,298,299,300,301,303,306,346,347,348,349,392,408,409,410,411,412,413,414,415,471,486,487],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:130","sourceCode":"if (java.lang.Boolean.java.lang.Boolean.valueOf(java.lang.String)) {\n    throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"));\n} ","type":"CtIfImpl"},"failures":[50,51,52,53,56,57,69,71,97,98,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,188,189,190,192,193,194,196,200,202,203,205,206,207,208,210,212,213,214,216,225,226,227,228,229,249,254,264,265,266,267,268,269,271,297,298,299,300,301,303,306,346,347,348,349,392,408,409,410,411,412,413,414,415,471,472,472,473,473,486,487],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1659","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(long[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[3,19,36,86,90,93,102,103,104,105,106,107,108,110,111,113,117,118,121,122,123,134,135,500,501,502,503,504,505,506,507,508,509,510,188,230,231,294,295,296,318,319,320,322,323,324,325,351,352,353,354,356,357,359,375,376,377,378,379,380,389,390,392,400,511,512,513,514,515,516,517],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,185,186,187,188,189,190,191,192,196,197,198,200,202,203,205,206,207,208,210,212,213,214,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,252,253,254,255,256,257,258,259,260,261,262,264,265,266,267,268,269,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,472,473,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:480","sourceCode":"return new org.easymock.internal.MockBuilder<T>(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:497","sourceCode":"return new org.easymock.internal.MockBuilder<T>(java.lang.Class<T> , this)","type":"CtReturnImpl"},"failures":[161,171,208,210,471,472,473],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[151,222,223,224,234,237,238,239,240,241,287,295,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,368,377],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[0,1,2,3,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,59,62,63,64,65,66,67,68,69,70,71,77,84,85,86,87,88,89,90,91,92,93,94,95,96,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,132,133,134,135,143,150,151,152,154,158,161,171,177,180,183,184,185,186,187,188,189,190,191,200,202,206,207,208,210,213,214,216,226,227,230,518,518,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,284,285,286,287,288,289,290,291,292,293,294,295,296,300,301,303,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,348,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,372,373,374,376,377,380,385,386,387,388,392,393,394,395,397,398,399,400,401,402,403,404,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,471,472,473,474,475,476,477,478,479,481,482,483,484,485,486,487],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","sourceCode":"return int >= 0","type":"CtReturnImpl"},"failures":[2,10,16,28,519],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:72","sourceCode":"java.util.Set<java.lang.reflect.Method> = new java.util.HashSet<java.lang.reflect.Method>()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:74","sourceCode":"java.util.Set<java.lang.reflect.Method>.add(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[202,206,208,210,214,216,471],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mockedMethods":"mockedMethods"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[108,115,151,188,189,190,191,233,236,240,241,286,287,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,350,355,364,365,366,367,368,369,377,417],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1952","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[229],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:89","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]));\n}","type":"CtForImpl"},"failures":[105,111,117,118,230,295,296,319,322,352,353,356,357,380,517],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[520,521,522],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:632","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1471","sourceCode":"return false","type":"CtReturnImpl"},"failures":[3,9,21],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"failures":[268,523,524],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[523],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[265,269],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:235","failures":[69,130,180,181,201,204,209,212,525,215,526,527,528,472,473],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"negateConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":3,"org.easymock.tests2.UsageTest.argumentsOrdered":118,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":350,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":94,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":78,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":456,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":113,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":483,"org.easymock.tests2.DelegateToTest.testReturnException":30,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":365,"org.easymock.tests.MockingTest.testPartialClassMocking":300,"org.easymock.tests.MockClassControlTest.testToString":410,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":217,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":439,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":465,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":165,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":161,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":326,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":100,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":488,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":10,"org.easymock.tests2.UsageTest.wrongArguments":111,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":284,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":149,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":387,"org.easymock.samples.ExampleTest.answerVsDelegate":475,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":254,"org.easymock.tests2.UsageConstraintsTest.testNull":6,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":305,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":124,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":415,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":93,"org.easymock.tests2.CaptureTest.testPrimitive":39,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":288,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":345,"org.easymock.tests.UsageTest.moreThanOneArgument":351,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":123,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":244,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":441,"org.easymock.tests.UsageTest.argumentsOrdered":357,"org.easymock.tests.UsageVarargTest.varargIntAccepted":395,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":509,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":461,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":359,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":499,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":200,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":82,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":194,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":207,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":448,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":363,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":504,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":143,"org.easymock.tests.ReplayStateInvalidUsageTest.times":280,"org.easymock.tests2.DependencyTest.testClassMocking":97,"org.easymock.tests2.AnswerTest.answer":59,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":463,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":68,"org.easymock.tests2.CaptureTest.testAnd":36,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":251,"org.easymock.tests2.UsageTest.strictResetToDefault":109,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":132,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":204,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":243,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":88,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":372,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":445,"org.easymock.tests2.DelegateToTest.testDelegate":34,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":341,"org.easymock.tests.LimitationsTest.mockFinalMethod":349,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":368,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":293,"org.easymock.tests2.DependencyTest.testClassMockingSupport":98,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":389,"org.easymock.tests2.CaptureTest.testCapture1_2446744":40,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":128,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":339,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":66,"org.easymock.tests.UsageThrowableTest.throwError":234,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":274,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":253,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":384,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":83,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":246,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":526,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":179,"org.easymock.samples.PartialClassMockTest.testGetArea":471,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":275,"org.easymock.tests.MockingTest.testInterfaceMocking":302,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":360,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":382,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":166,"org.easymock.tests2.UsageTest.niceToStrict":112,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":262,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":327,"org.easymock.tests2.ThreadingTest.testChangeDefault":496,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":520,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":446,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":206,"org.easymock.tests2.MockBuilderTest.testCreateMock":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":174,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":146,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":501,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":335,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":89,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":250,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":224,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":308,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":385,"org.easymock.tests.UsageOverloadedMethodTest.overloading":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":176,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":170,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":16,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":377,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":429,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":231,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":523,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":15,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":45,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":396,"org.easymock.tests.MockClassControlTest.testEquals":414,"org.easymock.tests2.EasyMockSupportClassTest.testAll":158,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":227,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":506,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":343,"org.easymock.tests2.CaptureTest.testCaptureAll":37,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":67,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":291,"org.easymock.tests.MockNameTest.defaultName":470,"org.easymock.tests2.UsageConstraintsTest.testMatches":17,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":245,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":272,"org.easymock.samples.ExampleTest.voteForRemovals":479,"org.easymock.tests.UsageVarargTest.allKinds":404,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":294,"org.easymock.samples.BasicClassMockTest.testPrintContent":487,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":292,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":240,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":101,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":33,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":79,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":369,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":492,"org.easymock.tests2.UsageConstraintsTest.greaterThan":19,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":159,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":371,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":135,"org.easymock.samples.ExampleTest.voteForRemoval":476,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":271,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":184,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":136,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":255,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":195,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":127,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":392,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":108,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":212,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":453,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":86,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":156,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":364,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":29,"org.easymock.tests2.CaptureTest.testCaptureFirst":49,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":452,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":87,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":120,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":380,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":425,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":186,"org.easymock.tests2.UsageTest.moreThanOneArgument":110,"org.easymock.tests2.CaptureTest.testCapture2_2446744":48,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":464,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":214,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":403,"org.easymock.tests.GenericTest.testBridgedEquals":229,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":315,"org.easymock.tests.UsageExpectAndReturnTest.longType":421,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":84,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":289,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":344,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":24,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":307,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":342,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":406,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":242,"org.easymock.tests.UsageCallCountTest.tooManyCalls":316,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":512,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":175,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":426,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":148,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":331,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":239,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":51,"org.easymock.tests.MockingTest.testNiceClassMocking":306,"org.easymock.tests.MockingTest.testClassMocking":298,"org.easymock.tests2.UsageConstraintsTest.testContains":14,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":309,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":190,"org.easymock.tests2.UsageConstraintsTest.testFind":5,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":233,"org.easymock.tests.MockTypeTest.fromEasyMockClass":252,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":154,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":317,"org.easymock.tests.UsageExpectAndReturnTest.object":428,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":129,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":147,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":92,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":489,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":398,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":260,"org.easymock.tests.UsageTest.exactCallCountByLastCall":358,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":451,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":442,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":438,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":516,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":181,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":434,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":393,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":376,"org.easymock.tests.MockClassControlTest.testHashCode":413,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":73,"org.easymock.tests2.EasyMockSupportTest.testVerify":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":168,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":503,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":443,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":223,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":374,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":65,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":199,"org.easymock.tests.UsageVarargTest.varargCharAccepted":397,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":263,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":102,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":469,"org.easymock.tests2.UsageTest.openCallCountByLastCall":114,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":521,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":95,"org.easymock.tests.DefaultClassInstantiatorTest.object":264,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":222,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":258,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":517,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":169,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":333,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":237,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":141,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":72,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":412,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":133,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":332,"org.easymock.tests.CapturesMatcherTest.test":518,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":435,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":405,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":505,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":411,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":177,"org.easymock.tests2.UsageTest.resumeIfFailure":119,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":249,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":193,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":367,"org.easymock.tests2.StubTest.stubWithReturnValue":151,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":209,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":427,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":25,"org.easymock.tests2.SerializationTest.testAllMockedMethod":71,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":462,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":528,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":508,"org.easymock.samples.SupportTest.voteForRemovals":485,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":225,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":75,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":338,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":497,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":468,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":60,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":440,"org.easymock.tests.UsageExpectAndThrowTest.object":336,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":22,"org.easymock.tests2.DelegateToTest.testWrongClass":32,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":247,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":248,"org.easymock.samples.ConstructorCalledMockTest.testTax":472,"org.easymock.tests.UsageStrictMockTest.range":322,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":197,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":91,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":50,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":337,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":155,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":282,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":356,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":386,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":511,"org.easymock.tests2.CaptureTest.testCaptureNone":44,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":383,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":493,"org.easymock.tests.UsageUnorderedTest.message":230,"org.easymock.tests.UsageVerifyTest.twoReturns":296,"org.easymock.tests.UsageVarargTest.varargByteAccepted":402,"org.easymock.tests2.ThreadingTest.testThreadSafe":183,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":172,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":313,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":486,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":261,"org.easymock.tests2.CaptureTest.testCapture_2617107":38,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":510,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":391,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":466,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":287,"org.easymock.tests2.UsageConstraintsTest.any":12,"org.easymock.tests2.StubTest.stub":150,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":279,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":407,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":467,"org.easymock.tests.UsageExpectAndThrowTest.longType":329,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":366,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":268,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":278,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":104,"org.easymock.tests2.SerializationTest.testClass":69,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":77,"org.easymock.tests.LimitationsTest.mockNativeMethod":348,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":437,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":228,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":140,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":107,"org.easymock.tests2.NameTest.nameForMocksControl":221,"org.easymock.tests2.MockedExceptionTest.testMockedException":189,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":160,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":355,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":153,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":303,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":330,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":121,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":210,"org.easymock.tests.MockingTest.testNicePartialClassMocking":301,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":126,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":138,"org.easymock.tests2.CaptureTest.testCaptureLast":43,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":390,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":9,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":57,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":23,"org.easymock.tests.MockingTest.testTwoMocks":299,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":58,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":418,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":334,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":117,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":27,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":495,"org.easymock.samples.ExampleTest.removeNonExistingDocument":480,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":145,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":276,"org.easymock.tests.UsageStrictMockTest.differentMethods":323,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":74,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":494,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":266,"org.easymock.tests2.ConstraintsToStringTest.andToString":507,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":185,"org.easymock.tests2.MockBuilderTest.testCreateMockString":216,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":408,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":162,"org.easymock.tests.UsageExpectAndThrowTest.floatType":328,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":157,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":62,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":182,"org.easymock.tests.UsageVerifyTest.twoThrows":295,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":171,"org.easymock.samples.ExampleTest.voteAgainstRemoval":477,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":457,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":381,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":134,"org.easymock.tests.LimitationsTest.privateConstructor":347,"org.easymock.tests2.UsageConstraintsTest.testNotNull":26,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":188,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":241,"org.easymock.tests2.UsageTest.defaultResetToNice":116,"org.easymock.samples.ExampleTest.voteAgainstRemovals":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":458,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":433,"org.easymock.tests.UsageVarargTest.differentLength":399,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":139,"org.easymock.tests2.CallbackTest.callback":35,"org.easymock.tests2.UsageConstraintsTest.equals":4,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":514,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":130,"org.easymock.tests.UsageTest.openCallCountByLastCall":354,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":0,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":286,"org.easymock.tests.UsageCallCountTest.tooFewCalls":311,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":53,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":388,"org.easymock.tests.UsageThrowableTest.throwCheckedException":238,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":513,"org.easymock.tests.MockingTest.testStrictClassMocking":297,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":417,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":56,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":144,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":52,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":281,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":55,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":64,"org.easymock.tests2.CompareToTest.testGreateOrEqual":519,"org.easymock.tests.ObjectMethodsTest.testHashCode":259,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":498,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":187,"org.easymock.tests2.NameTest.nameForNiceMock":220,"org.easymock.tests2.DependencyTest.testInterfaceMocking":99,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":490,"org.easymock.samples.ExampleTest.addDocument":478,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":178,"org.easymock.tests2.DelegateToTest.testStubDelegate":31,"org.easymock.tests2.AnswerTest.stubAnswer":63,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":320,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":211,"org.easymock.tests.UsageVarargTest.varargLongAccepted":401,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":324,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":455,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":436,"org.easymock.tests.UsageExpectAndReturnTest.floatType":420,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":180,"org.easymock.tests2.ConstraintsToStringTest.orToString":500,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":473,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":20,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":81,"org.easymock.tests.UsageThrowableTest.noUpperLimit":235,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":378,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":1,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":192,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":41,"org.easymock.tests2.SerializationTest.test":70,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":524,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":265,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":419,"org.easymock.tests2.UsageConstraintsTest.testSame":7,"org.easymock.samples.SupportTest.addDocument":484,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":54,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":277,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":163,"org.easymock.tests.GenericTest.testPackageScope":226,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":444,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":450,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":80,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":304,"org.easymock.tests2.NameTest.nameForMock":218,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":430,"org.easymock.tests2.UsageStrictMockTest.differentMethods":106,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":215,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":131,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":422,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":340,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":257,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":373,"org.easymock.tests2.MockedExceptionTest.testRealException":191,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":256,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":460,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":198,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":515,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":527,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":459,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":103,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":283,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":285,"org.easymock.tests2.NameTest.nameForStrictMock":219,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":205,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":522,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":152,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":125,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":196,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":21,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":267,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":202,"org.easymock.tests2.UsageStrictMockTest.range":105,"org.easymock.tests2.UsageConstraintsTest.lessThan":28,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":76,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":454,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":85,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":167,"org.easymock.tests2.CaptureTest.testCaptureRightOne":46,"org.easymock.tests2.UsageConstraintsTest.testOr":8,"org.easymock.tests.UsageRangeTest.combination":370,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":122,"org.easymock.tests.UsageTest.wrongArguments":353,"org.easymock.tests2.MockBuilderTest.testWithConstructor":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":164,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":409,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":423,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":447,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":431,"org.easymock.tests.UsageVarargTest.varargShortAccepted":400,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":269,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":314,"org.easymock.tests2.UsageConstraintsTest.cmpTo":13,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":61,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":449,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":115,"org.easymock.tests2.CaptureTest.testCaptureFromStub":47,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":273,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":203,"org.easymock.tests.UsageTest.unexpectedCallWithArray":352,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":319,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":312,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":525,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":432,"org.easymock.tests2.UsageConstraintsTest.constraints":2,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":321,"org.easymock.samples.ExampleTest.addAndChangeDocument":481,"org.easymock.tests2.ConstraintsToStringTest.notToString":502,"org.easymock.tests.UsageStrictMockTest.testVerify":325,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":482,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":318,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":290,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":42,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":361,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":424,"org.easymock.tests.LimitationsTest.abstractClass":346,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":362,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":379,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":394,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":90}}]
