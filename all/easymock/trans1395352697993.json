[{"transplant":{"position":"org.easymock.internal.matchers.Any:36","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:200","sourceCode":"if (!java.lang.Character.(java.lang.Character.isJavaIdentifierPart(char))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[0,1],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMockSupport:52","sourceCode":"new java.util.ArrayList<org.easymock.IMocksControl>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:56","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"failures":[2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[3],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[3],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[4],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[5,6],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,5,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,2,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,173,174,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,4,224,225,3,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,6,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"failures":[11,12,15,16,333,334,95,96,97,144,147,190,196,197,281],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1987","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Byte>(org.easymock.Capture<java.lang.Byte>))","type":"CtInvocationImpl"},"failures":[320],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[298],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"expected","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[120],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))","type":"CtThrowImpl"},"failures":[335],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[292],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[336,337,338],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[298],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"actual","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"failures":[339,317,319,320,321,322,323,324,326,340,327,328,330],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return org.easymock.internal.AndroidSupport.boolean","type":"CtReturnImpl"},"failures":[341,342,336,343,344,345,346,337,347,348,349,350,93,351,352,353,108,109,110,111,354,355,356,357,358,359,360,361,362,164,165,166,363,170,173,173,174,174,182,183,184,364,365,366,200,201,367,368,202,203,204,205,369,206,207,208,209,210,211,212,214,215,216,217,219,220,221,222,223,370,371,4,224,225,3,372,373,374,375,376,227,377,378,228,379,380,381,382,383,384,385,386,387,229,388,389,390,391,392,230,393,394,242,395,248,249,250,396,397,314,316],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:41","sourceCode":"org.easymock.IArgumentMatcher.appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[398],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[237,240,241],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:28","sourceCode":"final java.lang.ClassNotFoundException java.lang.ClassNotFoundException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:318","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    final java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    final java.lang.reflect.TypeVariable<?>[] java.lang.reflect.TypeVariable<?>[] = ((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getTypeParameters();\n    for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n        final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int];\n        final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = java.lang.reflect.TypeVariable<?>[][int];\n        if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n            final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n            java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n            if (java.lang.reflect.Type == null) {\n                java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n            } \n            if (java.lang.reflect.Type != null) {\n                java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n            } \n        } \n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:98","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"result"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[287,288],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:157","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.reflect.Method.getDeclaringClass().getSuperclass()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:98","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":287,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":9,"org.easymock.tests2.UsageTest.argumentsOrdered":197,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":262,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":192,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":186,"org.easymock.tests2.DelegateToTest.testReturnException":271,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":38,"org.easymock.tests.MockingTest.testPartialClassMocking":109,"org.easymock.tests.MockClassControlTest.testToString":344,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":1,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":53,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":382,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":122,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":228,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":313,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":293,"org.easymock.tests2.UsageTest.wrongArguments":190,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":29,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":116,"org.easymock.samples.ExampleTest.answerVsDelegate":176,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":342,"org.easymock.tests2.UsageConstraintsTest.testNull":289,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":219,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":261,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":348,"org.easymock.tests2.CaptureTest.testPrimitive":320,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":32,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":141,"org.easymock.tests.UsageTest.moreThanOneArgument":10,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":218,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":102,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":2,"org.easymock.tests.UsageTest.argumentsOrdered":16,"org.easymock.tests.UsageVarargTest.varargIntAccepted":20,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":159,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":200,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":203,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":163,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":226,"org.easymock.tests2.DependencyTest.testClassMocking":396,"org.easymock.tests2.AnswerTest.answer":236,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":294,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":235,"org.easymock.tests2.CaptureTest.testAnd":317,"org.easymock.tests2.UsageTest.strictResetToDefault":188,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":4,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":101,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":35,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":256,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":121,"org.easymock.tests2.DelegateToTest.testDelegate":275,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":137,"org.easymock.tests.LimitationsTest.mockFinalMethod":351,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":41,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":58,"org.easymock.tests2.DependencyTest.testClassMockingSupport":397,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":7,"org.easymock.tests2.CaptureTest.testCapture1_2446744":321,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":135,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":233,"org.easymock.tests.UsageThrowableTest.throwError":151,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":0,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":104,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":394,"org.easymock.samples.PartialClassMockTest.testGetArea":184,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":160,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":168,"org.easymock.tests2.UsageTest.niceToStrict":191,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":383,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":202,"org.easymock.tests2.MockBuilderTest.testCreateMock":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":390,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":131,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":257,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":61,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":82,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":114,"org.easymock.tests.UsageOverloadedMethodTest.overloading":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":392,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":387,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":46,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":299,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":105,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":73,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":298,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":326,"org.easymock.tests2.EasyMockSupportClassTest.testAll":227,"org.easymock.tests.MockClassControlTest.testEquals":347,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":165,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":139,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":56,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":234,"org.easymock.tests2.CaptureTest.testCaptureAll":318,"org.easymock.tests2.UsageConstraintsTest.testMatches":300,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":103,"org.easymock.samples.ExampleTest.voteForRemovals":180,"org.easymock.tests.UsageVarargTest.allKinds":28,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":94,"org.easymock.samples.BasicClassMockTest.testPrintContent":183,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":57,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":157,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":277,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":42,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":274,"org.easymock.tests2.UsageConstraintsTest.greaterThan":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":377,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":34,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":3,"org.easymock.samples.ExampleTest.voteForRemoval":177,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":361,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":244,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":372,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":222,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":187,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":170,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":369,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":254,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":375,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":37,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":270,"org.easymock.tests2.CaptureTest.testCaptureFirst":330,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":255,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":199,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":49,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":69,"org.easymock.tests2.UsageTest.moreThanOneArgument":189,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":246,"org.easymock.tests2.CaptureTest.testCapture2_2446744":329,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":207,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":27,"org.easymock.tests.GenericTest.testBridgedEquals":363,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":88,"org.easymock.tests.UsageExpectAndReturnTest.longType":65,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":54,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":252,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":140,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":92,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":307,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":138,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":100,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":51,"org.easymock.tests.UsageCallCountTest.tooManyCalls":89,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":391,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":70,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":127,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":156,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":210,"org.easymock.tests.MockingTest.testNiceClassMocking":354,"org.easymock.tests.MockingTest.testClassMocking":353,"org.easymock.tests2.UsageConstraintsTest.testContains":297,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":250,"org.easymock.tests2.UsageConstraintsTest.testFind":288,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":107,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":142,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":332,"org.easymock.tests.UsageExpectAndReturnTest.object":72,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":223,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":260,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":22,"org.easymock.tests.UsageTest.exactCallCountByLastCall":17,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":112,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":118,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":395,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":18,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":78,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":45,"org.easymock.tests.MockClassControlTest.testHashCode":337,"org.easymock.tests2.EasyMockSupportTest.testVerify":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":385,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":119,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":43,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":60,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":232,"org.easymock.tests.UsageVarargTest.varargCharAccepted":21,"org.easymock.tests2.CaptureTest.testCaptureMultiple":339,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":278,"org.easymock.tests2.UsageTest.openCallCountByLastCall":193,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":263,"org.easymock.tests.DefaultClassInstantiatorTest.object":355,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":59,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":386,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":129,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":154,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":224,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":346,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":128,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":79,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":230,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":345,"org.easymock.tests2.UsageTest.resumeIfFailure":198,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":341,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":365,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":40,"org.easymock.tests2.StubTest.stubWithReturnValue":276,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":71,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":308,"org.easymock.tests2.SerializationTest.testAllMockedMethod":316,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":90,"org.easymock.samples.SupportTest.voteForRemovals":172,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":362,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":134,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":91,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":237,"org.easymock.tests.UsageExpectAndThrowTest.object":132,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":305,"org.easymock.tests2.DelegateToTest.testWrongClass":273,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":98,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":99,"org.easymock.samples.ConstructorCalledMockTest.testTax":173,"org.easymock.tests.UsageStrictMockTest.range":147,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":259,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":209,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":133,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":204,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":374,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":115,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":169,"org.easymock.tests2.CaptureTest.testCaptureNone":325,"org.easymock.tests.UsageUnorderedTest.message":97,"org.easymock.tests.UsageVerifyTest.twoReturns":96,"org.easymock.tests.UsageVarargTest.varargByteAccepted":26,"org.easymock.tests2.ThreadingTest.testThreadSafe":243,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":388,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":86,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":182,"org.easymock.tests2.CaptureTest.testCapture_2617107":319,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":5,"org.easymock.tests2.UsageConstraintsTest.any":295,"org.easymock.tests2.StubTest.stub":6,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":52,"org.easymock.tests.UsageExpectAndThrowTest.longType":125,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":39,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":359,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":280,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":231,"org.easymock.tests2.SerializationTest.testClass":314,"org.easymock.tests.LimitationsTest.mockNativeMethod":93,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":166,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":81,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":283,"org.easymock.tests2.NameTest.nameForMocksControl":269,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":335,"org.easymock.tests2.MockedExceptionTest.testMockedException":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":378,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":14,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":126,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":111,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":216,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":205,"org.easymock.tests.MockingTest.testNicePartialClassMocking":110,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":221,"org.easymock.tests2.CaptureTest.testCaptureLast":324,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":8,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":215,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":292,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":306,"org.easymock.tests.MockingTest.testTwoMocks":108,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":62,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":130,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":196,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":310,"org.easymock.tests.UsageStrictMockTest.differentMethods":148,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":357,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":245,"org.easymock.tests2.MockBuilderTest.testCreateMockString":208,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":336,"org.easymock.tests.UsageExpectAndThrowTest.floatType":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":379,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":376,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":239,"org.easymock.tests.UsageVerifyTest.twoThrows":95,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":44,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":229,"org.easymock.samples.ExampleTest.voteAgainstRemoval":178,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":167,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":225,"org.easymock.tests.LimitationsTest.privateConstructor":350,"org.easymock.tests2.UsageConstraintsTest.testNotNull":309,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":158,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":248,"org.easymock.tests2.UsageTest.defaultResetToNice":195,"org.easymock.samples.ExampleTest.voteAgainstRemovals":175,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":77,"org.easymock.tests.UsageVarargTest.differentLength":23,"org.easymock.tests2.CallbackTest.callback":265,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":370,"org.easymock.tests.UsageTest.openCallCountByLastCall":13,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":284,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":31,"org.easymock.tests.UsageCallCountTest.tooFewCalls":84,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":212,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":117,"org.easymock.tests.UsageThrowableTest.throwCheckedException":155,"org.easymock.tests.MockingTest.testStrictClassMocking":352,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":113,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":214,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":211,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":213,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":241,"org.easymock.tests.ObjectMethodsTest.testHashCode":338,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":247,"org.easymock.tests2.NameTest.nameForNiceMock":268,"org.easymock.tests2.DependencyTest.testInterfaceMocking":312,"org.easymock.samples.ExampleTest.addDocument":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":389,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":393,"org.easymock.tests2.DelegateToTest.testStubDelegate":272,"org.easymock.tests2.AnswerTest.stubAnswer":240,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":145,"org.easymock.tests.UsageVarargTest.varargLongAccepted":25,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":149,"org.easymock.tests.UsageExpectAndReturnTest.floatType":64,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":80,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":242,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":174,"org.easymock.tests.UsageThrowableTest.noUpperLimit":152,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":47,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":303,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":285,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":364,"org.easymock.tests2.SerializationTest.test":315,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":322,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":356,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":63,"org.easymock.tests2.UsageConstraintsTest.testSame":290,"org.easymock.samples.SupportTest.addDocument":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":380,"org.easymock.tests.GenericTest.testPackageScope":164,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":120,"org.easymock.tests2.NameTest.nameForMock":266,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":74,"org.easymock.tests2.UsageStrictMockTest.differentMethods":282,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":371,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":66,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":136,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":36,"org.easymock.tests2.MockedExceptionTest.testRealException":251,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":333,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":279,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":30,"org.easymock.tests2.NameTest.nameForStrictMock":267,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":368,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":331,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":220,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":366,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":304,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":358,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":201,"org.easymock.tests2.UsageStrictMockTest.range":281,"org.easymock.tests2.UsageConstraintsTest.lessThan":311,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":384,"org.easymock.tests2.CaptureTest.testCaptureRightOne":327,"org.easymock.tests2.UsageConstraintsTest.testOr":291,"org.easymock.tests.UsageRangeTest.combination":33,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":217,"org.easymock.tests.UsageTest.wrongArguments":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":381,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":343,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":67,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":75,"org.easymock.tests.UsageVarargTest.varargShortAccepted":24,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":360,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":87,"org.easymock.tests2.UsageConstraintsTest.cmpTo":296,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":238,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":194,"org.easymock.tests2.CaptureTest.testCaptureFromStub":328,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":367,"org.easymock.tests.UsageTest.unexpectedCallWithArray":11,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":144,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":85,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":76,"org.easymock.tests2.CaptureTest.testCapture":340,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":146,"org.easymock.tests2.UsageConstraintsTest.constraints":286,"org.easymock.samples.ExampleTest.addAndChangeDocument":181,"org.easymock.tests2.ConstraintsToStringTest.notToString":398,"org.easymock.tests.UsageStrictMockTest.testVerify":150,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":185,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":143,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":55,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":323,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":161,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":68,"org.easymock.tests.LimitationsTest.abstractClass":349,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":162,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":48,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":19,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":258}}]
