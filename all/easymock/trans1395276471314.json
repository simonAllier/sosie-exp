[{"position":"org.easymock.internal.RecordState:243","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[86,87],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[88,89],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:747","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[90,91],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[92],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[93,94,95,96,97],"status":-1,"binaryOperator":"int <= 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1026","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[98,99,1,2,10,16,18,100,101,102,103,104,105,106,107,95,108,19,109,23,110,111,112,113,114,115,116,117,118,60,61,119,120,121,122,123,124,125,126,127,73,128,129,130,131,132,133,134,135],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:104","sourceCode":"throw new java.lang.IllegalStateException(java.lang.String)","type":"CtThrowImpl"},"failures":[136],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"message"}},{"transplant":{"position":"org.easymock.internal.LastControl:95","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.util.Stack<org.easymock.IArgumentMatcher>.pop();\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:94","sourceCode":"java.util.List<org.easymock.IArgumentMatcher>.addAll(java.util.Stack<org.easymock.IArgumentMatcher>.subList(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) - int), java.util.Stack<org.easymock.IArgumentMatcher>.size()))","type":"CtInvocationImpl"},"failures":[137,138,139,95,140,141,142,143,136,144,145],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:32","sourceCode":"new java.util.ArrayList<java.lang.reflect.Field>(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:380","sourceCode":"final java.util.List<java.lang.Class<?>> java.util.List<java.lang.Class<?>> = new java.util.ArrayList<java.lang.Class<?>>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[146,147,148,149,150,3,151,152,4,153,154,155,156,157,158,159,160,161,5,162,163,164,165,166,6,167,168,169,170,171,9,10,12,13,14,172,15,173,174,175,16,17,18,176,177,178,19,179,180,20,181,21,22,182,109,23,110,24,183,184,185,27,28,29,30,32,33,34,186,187,188,188,189,189,190,40,41,42,86,68,191,69,87,192,71,193,194,195,196,197,198,199,200,201,88,202,203,204,89,205,206,207,208,209],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1620","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(double[]))","type":"CtInvocationImpl"},"failures":[210],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[1,101,104,105,117,60,123,124,125,126,129,130,131,135],"status":-1,"binaryOperator":"int > 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:87","failures":[],"status":0,"binaryOperator":"(java.util.List<java.lang.reflect.Method>.size()) == 1","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[211,212,213,214],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:136","failures":[0,215,94,216,217,141,218,142,219,213,220,96,221,145,222,214,188,188,189,189,59,62,63,64,65,223,66,67,78,224,225,79,80,81,82,83,226],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:42","sourceCode":"throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()","type":"CtThrowImpl"},"failures":[227],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"failures":[228,229,230,231,0,2,232,101,104,105,117,59,61,233,124,125,126,130,131,135],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:318","failures":[234,235],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"failures":[236,237,238],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1940","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[0,1,2,232,59,60,61,233,239,130,131,135,240,241,242,243],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1470","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(boolean))","type":"CtInvocationImpl"},"failures":[140,143,144],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[140,217,142,143],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:50","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Long.java.lang.Class<java.lang.Long>, java.lang.Long.java.lang.Long.valueOf(0))","type":"CtInvocationImpl"},"failures":[46,50,55,56,244,245,246,247,63,248,83,85,249],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:229","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.get(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[250,251,252,253,90,91,254,255,228,229,230,231,98,256,0,99,1,2,257,3,4,5,6,169,170,171,258,259,260,261,262,137,263,138,264,265,266,267,236,268,237,139,215,269,270,7,8,271,9,10,11,12,13,14,172,15,175,16,17,18,272,100,273,232,101,102,103,274,275,276,104,105,106,107,94,216,95,140,217,141,218,142,143,212,136,277,278,219,210,213,220,108,96,221,144,279,280,281,97,145,222,214,178,19,20,181,21,22,23,24,282,283,284,25,285,286,111,287,288,289,112,113,290,291,114,292,293,294,115,184,295,185,296,297,26,298,299,300,301,302,27,28,29,30,31,32,33,34,303,186,187,35,304,36,37,305,38,306,188,188,189,189,307,39,308,190,40,41,42,43,44,45,46,47,48,309,310,49,50,311,51,52,53,312,54,55,56,57,58,313,314,315,244,316,317,318,319,320,245,321,322,323,324,325,326,246,247,327,328,329,330,116,331,117,59,118,60,61,332,333,62,63,64,65,223,227,334,66,67,68,191,69,335,336,337,338,339,340,341,342,120,121,70,343,344,71,234,345,346,235,347,348,349,350,122,233,124,351,352,125,126,127,353,354,355,356,357,358,359,360,361,72,362,248,363,364,365,366,73,74,75,76,88,89,367,368,369,77,209,239,130,131,78,224,370,371,225,372,373,374,375,376,377,79,80,81,82,83,378,379,380,381,382,134,383,384,385,386,387,135,226,388,389,84,85,390,391,392,393,249],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if ((this.java.lang.Object) == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"expected":"expected","actual":"actual"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[146,147,148,149,150,3,151,152,4,153,154,155,156,157,158,159,160,161,5,162,163,164,165,166,6,167,168,169,170,171,9,10,12,13,14,172,15,173,174,175,16,17,18,176,177,394,178,395,19,179,180,20,181,21,22,182,109,23,396,397,110,24,183,398,399,400,401,402,403,184,185,27,28,29,30,32,33,34,186,187,188,188,189,189,404,405,190,40,41,42,406,407,86,68,191,69,87,192,408,71,193,194,195,196,197,198,409,410,199,201,88,202,203,204,89,206,207,208,209],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"result","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:295","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:34","failures":[411,412,413,414,415,416,417,418,419,420,421,0,1,2,232,101,104,105,108,117,59,60,61,227,334,233,123,124,125,126,422,423,424,425,426,427,129,239,130,131,373,376,377,428,135],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:117","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:54","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[210],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1940","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:623","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[210],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[429],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[300],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:205","failures":[173,430,431,432,429,182,433,24,183,434,184,188,189],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[250,253,90,91,254,255,228,229,230,231,98,256,0,99,1,2,257,3,4,5,6,169,170,171,258,259,260,261,262,137,263,138,264,265,266,267,236,268,237,139,215,269,270,7,8,271,9,10,11,12,13,14,172,15,175,16,17,18,272,100,273,232,101,102,103,274,275,276,104,105,106,107,94,216,95,140,217,141,218,142,143,212,277,278,219,210,213,220,108,96,221,144,279,280,281,97,145,222,214,178,19,20,181,21,22,109,23,110,24,282,283,284,25,285,286,111,287,288,289,112,113,290,291,114,292,293,294,115,184,295,185,297,26,298,300,301,302,27,28,29,30,31,32,33,34,303,186,187,35,304,36,37,305,38,435,306,188,188,189,189,307,39,308,40,41,42,43,44,45,46,47,48,309,310,49,50,311,51,52,53,312,54,55,56,57,58,313,314,315,244,316,317,318,319,320,245,321,322,323,324,325,326,246,247,327,328,116,331,117,59,118,60,61,332,333,436,437,438,62,63,64,65,223,334,66,67,68,191,338,439,339,340,341,342,119,120,121,70,343,344,71,234,345,346,235,347,348,349,350,122,233,123,124,351,352,125,126,127,353,354,355,356,362,248,363,364,365,366,194,195,196,197,198,409,410,199,73,74,75,76,201,209,440,441,442,443,444,445,446,447,448,449,450,451,239,130,131,78,224,370,371,225,372,373,374,375,377,428,79,80,81,82,83,378,379,380,381,382,134,383,384,385,386,387,135,226,388,390,391,392,393,249],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"position":"org.easymock.internal.ReflectionUtils:106","failures":[16,17,20,399,402,403],"status":-1,"binaryOperator":"java.lang.Class<?>[] == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:54","sourceCode":"return false","type":"CtReturnImpl"},"failures":[452],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[98,256,0,99,1,2,257,263,138,264,266,267,236,268,237,139,270,10,13,17,273,102,103,104,105,140,141,143,212,277,210,108,144,279,280,281,97,145,20,23,286,111,287,288,112,113,114,292,293,115,300,34,35,36,37,38,306,39,116,331,59,118,60,61,332,227,340,342,121,343,234,235,347,348,349,350,125,126,73,130,78,224,370,378,379,380,381,382,383,384,385,386,387,135],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[412,419,117,123,422,424],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:70","failures":[254,255,0,453,137,263,138,264,265,266,267,236,268,237,139,215,269,270,15,94,216,95,140,217,141,218,142,143,212,136,277,278,219,210,213,220,108,96,221,144,279,280,281,97,145,222,214,117,59,66,67,365,78,224,370,371,225,79,80,81,82,83,387,135,226,388],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:47","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Short.java.lang.Class<java.lang.Short>, java.lang.Short.java.lang.Short.valueOf(((short)(0))))","type":"CtInvocationImpl"},"failures":[79,392],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1093","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:573","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":140,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":122,"org.easymock.tests2.UsageTest.argumentsOrdered":105,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":292,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":103,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":308,"org.easymock.tests2.DelegateToTest.testReturnException":297,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":248,"org.easymock.tests.MockingTest.testPartialClassMocking":40,"org.easymock.tests.MockClassControlTest.testToString":196,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":92,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":72,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":156,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":4,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":313,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":240,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":8,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":212,"org.easymock.tests2.UsageTest.wrongArguments":101,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":78,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":355,"org.easymock.samples.ExampleTest.answerVsDelegate":304,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":208,"org.easymock.tests2.UsageConstraintsTest.testNull":141,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":12,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":114,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":199,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":398,"org.easymock.tests2.CaptureTest.testPrimitive":264,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":225,"org.easymock.tests.UsageTest.moreThanOneArgument":233,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":328,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":11,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":64,"org.easymock.tests.UsageTest.argumentsOrdered":126,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":357,"org.easymock.tests.UsageVarargTest.varargIntAccepted":380,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":420,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":79,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":178,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":181,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":83,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":415,"org.easymock.tests.ReplayStateInvalidUsageTest.times":448,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":272,"org.easymock.tests2.AnswerTest.answer":250,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":136,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":262,"org.easymock.tests2.CaptureTest.testAnd":137,"org.easymock.tests2.UsageTest.strictResetToDefault":273,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":431,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":175,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":63,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":75,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":289,"org.easymock.tests2.DelegateToTest.testDelegate":300,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":361,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":326,"org.easymock.tests.LimitationsTest.mockFinalMethod":193,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":365,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":249,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":227,"org.easymock.tests2.CaptureTest.testCapture1_2446744":265,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":324,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":260,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":442,"org.easymock.tests.UsageThrowableTest.throwError":234,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":133,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":168,"org.easymock.samples.PartialClassMockTest.testGetArea":34,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":443,"org.easymock.tests2.CompareToTest.testLessOrEqual":93,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":80,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":84,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":407,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":157,"org.easymock.tests2.UsageTest.niceToStrict":102,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":314,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":20,"org.easymock.tests2.MockBuilderTest.testCreateMock":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":164,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":412,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":245,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":112,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":369,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":338,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":353,"org.easymock.tests.UsageOverloadedMethodTest.overloading":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":166,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":161,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":213,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":375,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":51,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":70,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":210,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":237,"org.easymock.tests.MockClassControlTest.testEquals":410,"org.easymock.tests2.EasyMockSupportClassTest.testAll":3,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":191,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":417,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":247,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":399,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":392,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":261,"org.easymock.tests2.CaptureTest.testCaptureAll":263,"org.easymock.tests2.UsageConstraintsTest.testMatches":220,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":440,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":65,"org.easymock.samples.ExampleTest.voteForRemovals":38,"org.easymock.tests.UsageVarargTest.allKinds":387,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":239,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":393,"org.easymock.samples.BasicClassMockTest.testPrintContent":187,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":349,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":98,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":299,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":366,"org.easymock.tests2.UsageConstraintsTest.greaterThan":96,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":151,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":74,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":18,"org.easymock.samples.ExampleTest.voteForRemoval":36,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":206,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":176,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":283,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":396,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":172,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":100,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":209,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":182,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":287,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":346,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":149,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":362,"org.easymock.tests2.CaptureTest.testCaptureFirst":270,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":296,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":288,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":107,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":428,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":310,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":25,"org.easymock.tests2.UsageTest.moreThanOneArgument":232,"org.easymock.tests2.CaptureTest.testCapture2_2446744":269,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":23,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":386,"org.easymock.tests.GenericTest.testBridgedEquals":87,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":120,"org.easymock.tests.UsageExpectAndReturnTest.longType":46,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":390,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":286,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":397,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":327,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":77,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":281,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":246,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":62,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":336,"org.easymock.tests.UsageCallCountTest.tooManyCalls":121,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":423,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":165,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":49,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":317,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":348,"org.easymock.tests.MockingTest.testNiceClassMocking":406,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":28,"org.easymock.tests.MockingTest.testClassMocking":405,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":439,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":395,"org.easymock.tests2.UsageConstraintsTest.testContains":219,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":171,"org.easymock.tests2.UsageConstraintsTest.testFind":217,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":344,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":116,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":255,"org.easymock.tests.UsageExpectAndReturnTest.object":311,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":15,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":291,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":382,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":438,"org.easymock.tests.UsageTest.exactCallCountByLastCall":127,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":226,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":358,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":427,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":183,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":55,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":378,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":374,"org.easymock.tests.MockClassControlTest.testHashCode":409,"org.easymock.tests2.EasyMockSupportTest.testVerify":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":159,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":414,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":359,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":368,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":372,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":128,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":259,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":453,"org.easymock.tests.UsageVarargTest.varargCharAccepted":381,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":200,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":256,"org.easymock.tests2.UsageTest.openCallCountByLastCall":274,"org.easymock.tests.DefaultClassInstantiatorTest.object":201,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":293,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":367,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":436,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":160,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":319,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":403,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":235,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":16,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":198,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":318,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":56,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":335,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":416,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":6,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":197,"org.easymock.tests2.UsageTest.resumeIfFailure":106,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":207,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":364,"org.easymock.tests2.StubTest.stubWithReturnValue":302,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":432,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":97,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":50,"org.easymock.tests2.SerializationTest.testAllMockedMethod":185,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":329,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":419,"org.easymock.samples.SupportTest.voteForRemovals":39,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":86,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":323,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":330,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":251,"org.easymock.tests.UsageExpectAndThrowTest.object":321,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":279,"org.easymock.tests2.DelegateToTest.testWrongClass":298,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":66,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":67,"org.easymock.samples.ConstructorCalledMockTest.testTax":188,"org.easymock.tests.UsageStrictMockTest.range":60,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":290,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":27,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":322,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":21,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":450,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":148,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":125,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":354,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":422,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":85,"org.easymock.tests2.CaptureTest.testCaptureNone":268,"org.easymock.tests.UsageUnorderedTest.message":135,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":132,"org.easymock.tests.UsageVerifyTest.twoReturns":131,"org.easymock.tests.UsageVarargTest.varargByteAccepted":385,"org.easymock.tests2.ThreadingTest.testThreadSafe":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":162,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":342,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":186,"org.easymock.tests2.CaptureTest.testCapture_2617107":138,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":421,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":371,"org.easymock.tests2.UsageConstraintsTest.any":277,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":447,"org.easymock.tests2.StubTest.stub":301,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":337,"org.easymock.tests.UsageExpectAndThrowTest.longType":244,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":363,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":204,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":446,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":99,"org.easymock.tests2.SerializationTest.testClass":184,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":271,"org.easymock.tests.LimitationsTest.mockNativeMethod":71,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":58,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":69,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":402,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":257,"org.easymock.tests2.NameTest.nameForMocksControl":231,"org.easymock.tests2.MockedExceptionTest.testMockedException":170,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":152,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":352,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":42,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":316,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":9,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":22,"org.easymock.tests.MockingTest.testNicePartialClassMocking":41,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":14,"org.easymock.tests2.CaptureTest.testCaptureLast":236,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":334,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":143,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":33,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":280,"org.easymock.tests.MockingTest.testTwoMocks":190,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":43,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":320,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":104,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":222,"org.easymock.samples.ExampleTest.removeNonExistingDocument":435,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":444,"org.easymock.tests.UsageStrictMockTest.differentMethods":61,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":202,"org.easymock.tests2.ConstraintsToStringTest.andToString":418,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":284,"org.easymock.tests2.MockBuilderTest.testCreateMockString":110,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":153,"org.easymock.tests.UsageExpectAndThrowTest.floatType":315,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":150,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":253,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":434,"org.easymock.tests.UsageVerifyTest.twoThrows":130,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":5,"org.easymock.samples.ExampleTest.voteAgainstRemoval":37,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":389,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":17,"org.easymock.tests.LimitationsTest.privateConstructor":408,"org.easymock.tests2.UsageConstraintsTest.testNotNull":145,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":169,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":350,"org.easymock.tests2.UsageTest.defaultResetToNice":276,"org.easymock.samples.ExampleTest.voteAgainstRemovals":35,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":54,"org.easymock.tests.UsageVarargTest.differentLength":134,"org.easymock.tests2.CallbackTest.callback":115,"org.easymock.tests2.UsageConstraintsTest.equals":452,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":425,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":173,"org.easymock.tests.UsageTest.openCallCountByLastCall":351,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":94,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":370,"org.easymock.tests.UsageCallCountTest.tooFewCalls":340,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":30,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":356,"org.easymock.tests.UsageThrowableTest.throwCheckedException":347,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":424,"org.easymock.tests.MockingTest.testStrictClassMocking":404,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":388,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":32,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":29,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":449,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":31,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":91,"org.easymock.tests.ObjectMethodsTest.testHashCode":437,"org.easymock.tests2.CompareToTest.testGreateOrEqual":211,"org.easymock.tests2.NameTest.nameForNiceMock":230,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":285,"org.easymock.tests2.DependencyTest.testInterfaceMocking":7,"org.easymock.samples.ExampleTest.addDocument":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":167,"org.easymock.tests2.DelegateToTest.testStubDelegate":26,"org.easymock.tests2.AnswerTest.stubAnswer":90,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":59,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":429,"org.easymock.tests.UsageVarargTest.varargLongAccepted":384,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":332,"org.easymock.tests.UsageExpectAndReturnTest.floatType":45,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":57,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":24,"org.easymock.tests2.ConstraintsToStringTest.orToString":411,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":189,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":221,"org.easymock.tests.UsageThrowableTest.noUpperLimit":345,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":376,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":216,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":146,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":266,"org.easymock.tests2.SerializationTest.test":295,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":88,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":44,"org.easymock.tests2.UsageConstraintsTest.testSame":218,"org.easymock.samples.SupportTest.addDocument":307,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":445,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":154,"org.easymock.tests.GenericTest.testPackageScope":68,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":360,"org.easymock.tests2.NameTest.nameForMock":228,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":52,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":433,"org.easymock.tests2.UsageStrictMockTest.differentMethods":2,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":174,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":47,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":325,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":76,"org.easymock.tests2.MockedExceptionTest.testRealException":258,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":426,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":0,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":451,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":224,"org.easymock.tests2.NameTest.nameForStrictMock":229,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":180,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":254,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":13,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":147,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":144,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":203,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":241,"org.easymock.tests.ErrorMessageTest.testGetters":242,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":19,"org.easymock.tests2.UsageStrictMockTest.range":1,"org.easymock.tests2.UsageConstraintsTest.lessThan":214,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":400,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":394,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":158,"org.easymock.tests2.CaptureTest.testCaptureRightOne":139,"org.easymock.tests2.UsageConstraintsTest.testOr":142,"org.easymock.tests.UsageRangeTest.combination":73,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":10,"org.easymock.tests.UsageTest.wrongArguments":124,"org.easymock.tests2.MockBuilderTest.testWithConstructor":430,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":155,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":195,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":48,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":53,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":89,"org.easymock.tests.UsageVarargTest.varargShortAccepted":383,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":119,"org.easymock.tests2.UsageConstraintsTest.cmpTo":278,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":252,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":275,"org.easymock.tests2.CaptureTest.testCaptureFromStub":215,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":441,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":179,"org.easymock.tests.UsageTest.unexpectedCallWithArray":123,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":117,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":341,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":312,"org.easymock.tests2.CaptureTest.testCapture":238,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":118,"org.easymock.tests2.UsageConstraintsTest.constraints":95,"org.easymock.samples.ExampleTest.addAndChangeDocument":306,"org.easymock.tests2.ConstraintsToStringTest.notToString":413,"org.easymock.tests.UsageStrictMockTest.testVerify":333,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":303,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":331,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":391,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":267,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":401,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":81,"org.easymock.tests.LimitationsTest.abstractClass":192,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":309,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":82,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":377,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":113,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":243,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":379}}]
