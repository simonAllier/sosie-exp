[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[0,1,2,3],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:85","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object));\n} ","type":"CtIfImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,166,167,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,1,317,318,2,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1092","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Contains(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"substring"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[319],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:180","sourceCode":"try {\n    java.lang.Object.getClass().getDeclaredMethod(\"toString\", ((java.lang.Class[])(null))).getModifiers();\n    return true;\n} catch (final java.lang.SecurityException java.lang.SecurityException) {\n    return false;\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    return false;\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[265],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"o":"actual"}},{"position":"org.easymock.internal.RecordState:183","failures":[14,15,16,17,18,21,22,23,24,25,45,46,47,48,50,51,320,54,55,56,57,58,59,61,62,321,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,322,323,324,325,326,327,328,329,330,101,102,103,107,114,331,332,333,334,335,123,124,125,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,153,154,157,336,337,338,168,339,169,170,171,172,340,173,174,341,175,176,177,178,179,181,182,183,184,185,186,189,192,194,195,196,198,199,201,209,211,212,213,214,215,216,217,218,219,220,342,226,227,228,229,230,231,232,343,233,235,236,237,238,241,242,243,244,344,246,247,248,250,251,252,253,254,255,256,257,258,259,260,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,284,286,287,291,294,295,296,297,298,299,300,301,302,304,305,306,307,312,313,314,315,316,318,2,3],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1543","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[22,25,345,346,347,348,349,45,47,51,54,56,57,59,60,61,62,72,120,129,130,133,135,136,137,138,140,141,142,143,145,146,147,148,149,150,153,154,157,177,180,183,184,188,189,195,209,210,211,226,228,229,247,251,252,253,255,256,257,258,262,264,266,267,268,269,270,276,277,278,289,300,302,306,307,311,312,316,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"value"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(org.easymock.internal.EasyMockProperties.java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"org.easymock.internal.EasyMockProperties.PREFIX"}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"failures":[350,176,178,179,180,181,182,183,185,351,186,187,189],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1291","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:88","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String, java.lang.Class<?>[])","type":"CtLocalVariableImpl"},"failures":[205,206,352,284],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"failures":[319,353],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1432","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[271],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.EasyMockProperties:67","failures":[354],"status":-1,"binaryOperator":"(\"Failed to read \" + java.lang.String)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[254],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[254],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1832","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1831","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EqualsWithDelta(double , double))","type":"CtInvocationImpl"},"failures":[270],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[260,266,278,355],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[356],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1543","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[357,358],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:40","sourceCode":"if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:212","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[359,231,232,343],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1191","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[360,361,362,363,364],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[365,176,177,178,179,180,181,182,183,185,186,187,188,189],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[46,72,149,154,300,307],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[197,208,366,367],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.matchers.Equals:53","failures":[155,368,309],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:181","failures":[231,369,370,371,372,373,374,375,376,377],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"failures":[9],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1121","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[269,378],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[231,369,379,315,370,372,373,374,377],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:230","failures":[],"status":0,"binaryOperator":"(((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM()))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"values":"values","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":254,"org.easymock.tests2.UsageTest.argumentsOrdered":310,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":149,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":243,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":280,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":29,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":305,"org.easymock.tests2.StubTest.stubWithReturnValue":195,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":369,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":339,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":275,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":138,"org.easymock.tests2.SerializationTest.testAllMockedMethod":343,"org.easymock.tests2.DelegateToTest.testReturnException":246,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":27,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":38,"org.easymock.tests.MockingTest.testPartialClassMocking":123,"org.easymock.samples.SupportTest.voteForRemovals":175,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":319,"org.easymock.tests.MockClassControlTest.testToString":66,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":366,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":8,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":208,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":93,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":359,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":294,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":81,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":39,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":1,"org.easymock.tests.UsageExpectAndThrowTest.object":91,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":298,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":272,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":372,"org.easymock.tests2.DelegateToTest.testWrongClass":248,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":102,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":103,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":260,"org.easymock.tests2.UsageTest.wrongArguments":303,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":21,"org.easymock.tests.UsageStrictMockTest.range":56,"org.easymock.samples.ConstructorCalledMockTest.testTax":166,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":160,"org.easymock.samples.ExampleTest.answerVsDelegate":170,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":240,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":214,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":35,"org.easymock.tests2.UsageConstraintsTest.testNull":256,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":199,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":92,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":286,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":242,"org.easymock.tests2.CaptureTest.testPrimitive":179,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":25,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":100,"org.easymock.tests.UsageTest.moreThanOneArgument":150,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":155,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":198,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":159,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":111,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":128,"org.easymock.tests2.CaptureTest.testCaptureNone":184,"org.easymock.tests.UsageUnorderedTest.message":78,"org.easymock.tests.UsageVerifyTest.twoReturns":47,"org.easymock.tests.UsageVarargTest.varargByteAccepted":329,"org.easymock.tests2.ThreadingTest.testThreadSafe":209,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":9,"org.easymock.tests.UsageTest.argumentsOrdered":156,"org.easymock.tests.UsageVarargTest.varargIntAccepted":324,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":333,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":337,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":6,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":14,"org.easymock.tests2.CaptureTest.testCapture_2617107":178,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":376,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":347,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":24,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":285,"org.easymock.tests2.UsageConstraintsTest.any":262,"org.easymock.tests2.StubTest.stub":194,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":18,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":106,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":348,"org.easymock.tests.UsageExpectAndThrowTest.longType":84,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":28,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":227,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":279,"org.easymock.tests2.SerializationTest.testClass":231,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":291,"org.easymock.tests.LimitationsTest.mockNativeMethod":80,"org.easymock.tests2.AnswerTest.answer":316,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":64,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":148,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":261,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":363,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":224,"org.easymock.tests2.CaptureTest.testAnd":176,"org.easymock.tests2.UsageTest.strictResetToDefault":301,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":230,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":204,"org.easymock.tests2.MockedExceptionTest.testMockedException":191,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":110,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":237,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":61,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":154,"org.easymock.tests2.DelegateToTest.testDelegate":250,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":13,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":85,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":125,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":196,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":287,"org.easymock.tests.MockingTest.testNicePartialClassMocking":124,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":96,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":201,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":371,"org.easymock.tests2.CaptureTest.testCaptureLast":183,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":30,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":20,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":259,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":220,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":273,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":44,"org.easymock.tests.MockingTest.testTwoMocks":122,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":19,"org.easymock.tests2.CaptureTest.testCapture1_2446744":180,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":129,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":94,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":222,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":89,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":309,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":277,"org.easymock.tests.UsageThrowableTest.throwError":70,"org.easymock.tests.UsageStrictMockTest.differentMethods":57,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":34,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":211,"org.easymock.tests2.MockBuilderTest.testCreateMockString":290,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":65,"org.easymock.tests.UsageExpectAndThrowTest.floatType":83,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":113,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":268,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":318,"org.easymock.tests.UsageVerifyTest.twoThrows":46,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":295,"org.easymock.samples.PartialClassMockTest.testGetArea":168,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":15,"org.easymock.samples.ExampleTest.voteAgainstRemoval":172,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":346,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":126,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":127,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":206,"org.easymock.tests2.UsageTest.niceToStrict":304,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":82,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":7,"org.easymock.tests2.UsageConstraintsTest.testNotNull":276,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":77,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":190,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":284,"org.easymock.tests2.UsageTest.defaultResetToNice":308,"org.easymock.tests2.MockBuilderTest.testCreateMock":288,"org.easymock.samples.ExampleTest.voteAgainstRemovals":169,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":362,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":144,"org.easymock.tests2.CallbackTest.callback":299,"org.easymock.tests2.UsageConstraintsTest.equals":368,"org.easymock.tests.UsageTest.openCallCountByLastCall":153,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":90,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":238,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":251,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":164,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":23,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":158,"org.easymock.tests.UsageCallCountTest.tooFewCalls":331,"org.easymock.tests.UsageOverloadedMethodTest.overloading":50,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":266,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":118,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":217,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":49,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":140,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":265,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":185,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":161,"org.easymock.tests.UsageThrowableTest.throwCheckedException":74,"org.easymock.tests2.EasyMockSupportClassTest.testAll":293,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":321,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":98,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":223,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":42,"org.easymock.tests2.CaptureTest.testCaptureAll":177,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":219,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":108,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":292,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":216,"org.easymock.tests.MockNameTest.defaultName":79,"org.easymock.tests2.UsageConstraintsTest.testMatches":267,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":218,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":3,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":112,"org.easymock.tests2.CompareToTest.testGreateOrEqual":355,"org.easymock.tests.ObjectMethodsTest.testHashCode":5,"org.easymock.samples.ExampleTest.voteForRemovals":173,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":375,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":213,"org.easymock.tests.UsageVarargTest.allKinds":101,"org.easymock.tests2.DependencyTest.testInterfaceMocking":297,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":45,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":374,"org.easymock.samples.BasicClassMockTest.testPrintContent":338,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":43,"org.easymock.samples.ExampleTest.addDocument":340,"org.easymock.tests2.DelegateToTest.testStubDelegate":247,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":76,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":225,"org.easymock.tests2.AnswerTest.stubAnswer":2,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":249,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":31,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":54,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":377,"org.easymock.tests2.UsageConstraintsTest.greaterThan":269,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":60,"org.easymock.tests.UsageVarargTest.varargLongAccepted":328,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":207,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":58,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":345,"org.easymock.samples.ExampleTest.voteForRemoval":171,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":210,"org.easymock.tests.UsageExpectAndReturnTest.floatType":131,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":147,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":36,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":315,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":202,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":167,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":270,"org.easymock.tests.UsageThrowableTest.noUpperLimit":71,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":119,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":300,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":252,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":48,"org.easymock.tests2.SerializationTest.test":232,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":181,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":379,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":357,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":235,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":72,"org.easymock.tests2.UsageConstraintsTest.testSame":257,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":130,"org.easymock.samples.SupportTest.addDocument":341,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":26,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":245,"org.easymock.tests2.CaptureTest.testCaptureFirst":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":0,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":236,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":312,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":121,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":136,"org.easymock.tests.GenericTest.testPackageScope":63,"org.easymock.tests2.UsageTest.moreThanOneArgument":302,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":212,"org.easymock.tests2.CaptureTest.testCapture2_2446744":188,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":364,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":289,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":330,"org.easymock.tests.GenericTest.testBridgedEquals":353,"org.easymock.tests2.NameTest.nameForMock":367,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":334,"org.easymock.tests.UsageExpectAndReturnTest.longType":132,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":233,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":40,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":99,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":141,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":274,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":165,"org.easymock.tests2.UsageStrictMockTest.differentMethods":229,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":97,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":105,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":109,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":133,"org.easymock.tests.UsageCallCountTest.tooManyCalls":335,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":95,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":62,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":114,"org.easymock.tests2.MockedExceptionTest.testRealException":193,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":37,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":137,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":356,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":226,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":86,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":75,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":22,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":215,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":352,"org.easymock.tests2.UsageConstraintsTest.testContains":264,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":192,"org.easymock.tests2.UsageConstraintsTest.testFind":255,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":51,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":313,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":200,"org.easymock.tests.MockTypeTest.fromEasyMockClass":33,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":314,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":52,"org.easymock.tests.UsageExpectAndReturnTest.object":139,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":271,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":203,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":282,"org.easymock.tests2.UsageStrictMockTest.range":228,"org.easymock.tests2.UsageConstraintsTest.lessThan":278,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":241,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":373,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":326,"org.easymock.tests.UsageTest.exactCallCountByLastCall":157,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":107,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":361,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":234,"org.easymock.tests2.CaptureTest.testCaptureRightOne":186,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":354,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":10,"org.easymock.tests2.UsageConstraintsTest.testOr":258,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":370,"org.easymock.tests.UsageRangeTest.combination":59,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":322,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":197,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":145,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":117,"org.easymock.tests.UsageTest.wrongArguments":152,"org.easymock.tests.MockClassControlTest.testHashCode":69,"org.easymock.tests2.EasyMockSupportTest.testVerify":344,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":134,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":360,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":142,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":11,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":358,"org.easymock.tests.UsageVarargTest.varargShortAccepted":327,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":115,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":163,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":221,"org.easymock.tests2.UsageConstraintsTest.cmpTo":263,"org.easymock.tests.UsageVarargTest.varargCharAccepted":325,"org.easymock.tests2.CaptureTest.testCaptureMultiple":350,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":317,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":342,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":349,"org.easymock.tests2.UsageTest.openCallCountByLastCall":306,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":307,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":244,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":162,"org.easymock.tests2.CaptureTest.testCaptureFromStub":187,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":283,"org.easymock.tests.UsageTest.unexpectedCallWithArray":151,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":4,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":88,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":73,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":53,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":332,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":143,"org.easymock.tests2.CaptureTest.testCapture":351,"org.easymock.tests2.UsageConstraintsTest.constraints":253,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":205,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":68,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":55,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":87,"org.easymock.samples.ExampleTest.addAndChangeDocument":174,"org.easymock.tests.CapturesMatcherTest.test":365,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":146,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":104,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":336,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":320,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":296,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":67,"org.easymock.tests2.CompareToTest.testGreateThan":378,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":41,"org.easymock.tests2.UsageTest.resumeIfFailure":311,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":182,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":16,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":32,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":135,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":17,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":120,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":323,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":239}}]
