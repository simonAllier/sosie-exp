[{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl() : org.easymock.EasyMockSupport.createNiceControl()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:58","sourceCode":"java.lang.String[][int] = java.lang.Class<?>[][int].getName()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:72","sourceCode":"java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","type":"CtAssignmentImpl"},"failures":[0,1,2,3],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[4],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,1,2,3,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,4,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[207,208,174,209],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:105","sourceCode":"if ((java.lang.Class<T>.isInterface()) && (java.lang.reflect.Method[] != null)) {\n    throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\");\n} ","type":"CtIfImpl"},"failures":[210],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:117","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[52,62],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:289","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[211],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[212,213,214,215,216,217,218,59,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,191,196,197,200,239],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:83","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method)","type":"CtInvocationImpl"},"failures":[8,240,241,242,1,152,243,244,245,153,154,155,156,157,246,247,158,185],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"org.easymock.internal.AndroidSupport.boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"failures":[29,30,213,32,33,34,46,248,249,225,231,131,135,136,250,251,252,253,254,255],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[256,190,192,193,257,194,195,196,198,258,199,259,200],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[7,8,10,12,13,15,260,30,261,213,262,263,35,37,38,39,214,264,40,41,265,42,215,266,267,268,43,269,216,270,271,44,217,272,218,273,248,274,249,275,276,277,278,279,280,281,70,282,283,284,285,286,84,242,86,87,219,93,287,288,289,290,291,292,293,106,108,109,110,111,112,113,294,295,296,297,298,114,115,116,117,118,119,120,121,122,123,124,125,127,128,129,130,231,132,299,300,134,301,137,250,302,251,141,303,1,2,148,149,150,151,244,153,155,156,246,159,160,161,162,163,164,165,232,233,234,166,167,235,304,305,168,306,207,307,308,4,169,170,171,309,172,236,310,173,237,311,174,175,176,178,209,312,238,179,180,181,182,183,184,186,313,188,314,189,190,191,193,257,196,197,198,199,315,200,201,316,206],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:335","sourceCode":"return this","type":"CtReturnImpl"},"failures":[212,213,214,215,216,217,218,219,220,221,222,223,224,225,228,229,230,231,232,233,234,235,236,237,238,191,196,197,200,239],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Find:41","failures":[317],"status":-1,"binaryOperator":"(\"find(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\")))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[318,318,319,319,320,321],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:894","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[187],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:32","sourceCode":"new java.util.ArrayList<java.lang.reflect.Field>(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1708","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:147","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1725","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:56","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"failures":[5,9,189,190,201,322],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[4],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[102,323,324,325,326,327],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[211],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:208","sourceCode":"final java.lang.SecurityException java.lang.SecurityException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:68","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[328,329,29,30,31,32,33,34,46,274,71,225,131,135,136,302],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[176],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":168,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":261,"org.easymock.tests2.UsageTest.argumentsOrdered":136,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":124,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":133,"org.easymock.tests2.StubTest.stubWithReturnValue":298,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":268,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":9,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":178,"org.easymock.tests2.SerializationTest.testAllMockedMethod":3,"org.easymock.tests2.DelegateToTest.testReturnException":202,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":227,"org.easymock.tests.MockingTest.testPartialClassMocking":37,"org.easymock.samples.SupportTest.voteForRemovals":7,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":211,"org.easymock.tests.MockClassControlTest.testToString":96,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":277,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":222,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":0,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":220,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":149,"org.easymock.tests.UsageExpectAndThrowTest.object":91,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":128,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":175,"org.easymock.tests2.DelegateToTest.testWrongClass":203,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":287,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":288,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":169,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":279,"org.easymock.tests2.UsageTest.wrongArguments":131,"org.easymock.samples.ConstructorCalledMockTest.testTax":318,"org.easymock.tests.UsageStrictMockTest.range":274,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":65,"org.easymock.samples.ExampleTest.answerVsDelegate":11,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":121,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":241,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":159,"org.easymock.tests2.UsageConstraintsTest.testNull":207,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":182,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":101,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":123,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":155,"org.easymock.tests2.CaptureTest.testPrimitive":193,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":281,"org.easymock.tests.UsageTest.moreThanOneArgument":213,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":61,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":33,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":64,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":181,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":276,"org.easymock.tests2.CaptureTest.testCaptureNone":197,"org.easymock.tests.UsageUnorderedTest.message":225,"org.easymock.tests.UsageVerifyTest.twoReturns":30,"org.easymock.tests.UsageVarargTest.varargByteAccepted":26,"org.easymock.tests2.ThreadingTest.testThreadSafe":232,"org.easymock.tests.UsageTest.argumentsOrdered":34,"org.easymock.tests.UsageVarargTest.varargIntAccepted":21,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":80,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":17,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":282,"org.easymock.tests2.CaptureTest.testCapture_2617107":192,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":152,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":291,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":50,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":154,"org.easymock.tests2.UsageConstraintsTest.any":170,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":58,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":292,"org.easymock.tests.UsageExpectAndThrowTest.longType":89,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":57,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":139,"org.easymock.tests2.SerializationTest.testClass":1,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":189,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":201,"org.easymock.tests.LimitationsTest.mockNativeMethod":93,"org.easymock.tests.ReplayStateInvalidUsageTest.times":59,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":273,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":242,"org.easymock.tests2.AnswerTest.answer":142,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":208,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":147,"org.easymock.tests2.CaptureTest.testAnd":190,"org.easymock.tests2.UsageTest.strictResetToDefault":130,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":140,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":187,"org.easymock.tests2.NameTest.nameForMocksControl":255,"org.easymock.tests2.MockedExceptionTest.testMockedException":205,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":296,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":118,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":263,"org.easymock.tests2.DelegateToTest.testDelegate":239,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":39,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":179,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":156,"org.easymock.tests.MockingTest.testNicePartialClassMocking":38,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":92,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":184,"org.easymock.tests2.CaptureTest.testCaptureLast":196,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":36,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":4,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":165,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":77,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":176,"org.easymock.tests2.CaptureTest.testCapture1_2446744":257,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":210,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":214,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":145,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":135,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":312,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":53,"org.easymock.tests.UsageThrowableTest.throwError":106,"org.easymock.samples.ExampleTest.removeNonExistingDocument":16,"org.easymock.tests.UsageStrictMockTest.differentMethods":249,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":55,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":324,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":234,"org.easymock.tests2.MockBuilderTest.testCreateMockString":158,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":94,"org.easymock.tests.UsageExpectAndThrowTest.floatType":88,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":173,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":143,"org.easymock.tests.UsageVerifyTest.twoThrows":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":150,"org.easymock.samples.PartialClassMockTest.testGetArea":8,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":54,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":283,"org.easymock.samples.ExampleTest.voteAgainstRemoval":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":290,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":275,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":188,"org.easymock.tests2.UsageTest.niceToStrict":132,"org.easymock.tests2.UsageConstraintsTest.testNotNull":209,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":204,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":113,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":153,"org.easymock.tests2.UsageTest.defaultResetToNice":134,"org.easymock.tests2.MockBuilderTest.testCreateMock":157,"org.easymock.samples.ExampleTest.voteAgainstRemovals":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":226,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":44,"org.easymock.tests2.CallbackTest.callback":230,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":321,"org.easymock.tests.UsageTest.openCallCountByLastCall":262,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":119,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":235,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":63,"org.easymock.tests.UsageOverloadedMethodTest.overloading":87,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":236,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":69,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":269,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":86,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":162,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":172,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":198,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":66,"org.easymock.tests.UsageThrowableTest.throwCheckedException":110,"org.easymock.tests.MockClassControlTest.testEquals":100,"org.easymock.tests2.EasyMockSupportClassTest.testAll":148,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":85,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":75,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":146,"org.easymock.tests2.CaptureTest.testCaptureAll":191,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":164,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":161,"org.easymock.tests2.UsageConstraintsTest.testMatches":310,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":60,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":163,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":51,"org.easymock.tests.ObjectMethodsTest.testHashCode":104,"org.easymock.samples.ExampleTest.voteForRemovals":15,"org.easymock.tests2.NameTest.nameForNiceMock":254,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":167,"org.easymock.tests.UsageVarargTest.allKinds":28,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":260,"org.easymock.tests2.DependencyTest.testInterfaceMocking":127,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":76,"org.easymock.samples.BasicClassMockTest.testPrintContent":18,"org.easymock.samples.ExampleTest.addDocument":14,"org.easymock.tests2.DelegateToTest.testStubDelegate":316,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":112,"org.easymock.tests2.AnswerTest.stubAnswer":303,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":248,"org.easymock.tests2.UsageConstraintsTest.greaterThan":237,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":295,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":314,"org.easymock.tests.UsageVarargTest.varargLongAccepted":25,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":48,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":327,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":289,"org.easymock.samples.ExampleTest.voteForRemoval":12,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":233,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":218,"org.easymock.tests.UsageExpectAndReturnTest.floatType":40,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":141,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":185,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":319,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":311,"org.easymock.tests.UsageThrowableTest.noUpperLimit":107,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":304,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":72,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":129,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":194,"org.easymock.tests2.SerializationTest.test":2,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":323,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":116,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":108,"org.easymock.tests2.UsageConstraintsTest.testSame":307,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":264,"org.easymock.samples.SupportTest.addDocument":6,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":322,"org.easymock.tests2.CaptureTest.testCaptureFirst":200,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":117,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":137,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":71,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":56,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":266,"org.easymock.tests.GenericTest.testPackageScope":84,"org.easymock.tests2.CaptureTest.testCapture2_2446744":315,"org.easymock.tests2.UsageTest.moreThanOneArgument":231,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":166,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":246,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":27,"org.easymock.tests2.NameTest.nameForMock":252,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":82,"org.easymock.tests.UsageExpectAndReturnTest.longType":41,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":73,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":114,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":247,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":224,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":216,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":177,"org.easymock.tests2.UsageStrictMockTest.differentMethods":251,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":223,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":265,"org.easymock.tests.UsageCallCountTest.tooManyCalls":83,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":297,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":267,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":328,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":250,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":90,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":280,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":62,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":111,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":160,"org.easymock.tests2.UsageConstraintsTest.testContains":309,"org.easymock.tests2.NameTest.nameForStrictMock":253,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":243,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":78,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":206,"org.easymock.tests2.UsageConstraintsTest.testFind":306,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":219,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":228,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":183,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":229,"org.easymock.tests.UsageExpectAndReturnTest.object":43,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":325,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":174,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":186,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":244,"org.easymock.tests2.UsageStrictMockTest.range":302,"org.easymock.tests2.UsageConstraintsTest.lessThan":238,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":122,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":23,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":105,"org.easymock.tests.UsageTest.exactCallCountByLastCall":35,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":278,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":115,"org.easymock.tests2.CaptureTest.testCaptureRightOne":199,"org.easymock.tests2.ConstraintsToStringTest.findToString":317,"org.easymock.tests2.UsageConstraintsTest.testOr":308,"org.easymock.tests.UsageRangeTest.combination":294,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":217,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":19,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":180,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":68,"org.easymock.tests.UsageTest.wrongArguments":32,"org.easymock.tests.MockClassControlTest.testHashCode":99,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":95,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":42,"org.easymock.tests2.EasyMockSupportTest.testVerify":126,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":270,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":326,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":67,"org.easymock.tests.UsageVarargTest.varargShortAccepted":24,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":81,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":144,"org.easymock.tests2.UsageConstraintsTest.cmpTo":171,"org.easymock.tests.UsageVarargTest.varargCharAccepted":22,"org.easymock.tests2.CaptureTest.testCaptureMultiple":256,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":138,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":293,"org.easymock.tests2.UsageTest.openCallCountByLastCall":299,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":300,"org.easymock.tests.DefaultClassInstantiatorTest.object":102,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":125,"org.easymock.tests2.CaptureTest.testCaptureFromStub":259,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":52,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":245,"org.easymock.tests.UsageTest.unexpectedCallWithArray":31,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":103,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":329,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":46,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":109,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":79,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":320,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":271,"org.easymock.tests2.CaptureTest.testCapture":258,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":313,"org.easymock.tests2.UsageConstraintsTest.constraints":305,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":47,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":98,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":221,"org.easymock.samples.ExampleTest.addAndChangeDocument":212,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":272,"org.easymock.tests.UsageStrictMockTest.testVerify":49,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":5,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":45,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":151,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":74,"org.easymock.tests2.UsageTest.resumeIfFailure":301,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":195,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":284,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":240,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":215,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":285,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":70,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":20,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":120}}]
