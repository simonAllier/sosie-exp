[{"position":"org.easymock.EasyMock:583","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[14,15,15,16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"failures":[69,70],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[55,71,56,72],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:959","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:318","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    final java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    final java.lang.reflect.TypeVariable<?>[] java.lang.reflect.TypeVariable<?>[] = ((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getTypeParameters();\n    for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n        final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int];\n        final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = java.lang.reflect.TypeVariable<?>[][int];\n        if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n        } else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n            final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n            java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n            if (java.lang.reflect.Type == null) {\n                java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n            } \n            if (java.lang.reflect.Type != null) {\n                java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n            } \n        } \n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"type","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"failures":[73],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[74],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[75,76,77,78,79,80,81,82,83,84,85,86,87,10,11,88,89,90],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[91,92,93],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[94,95,96,97,98,99,100,73,101,102,103],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:305","failures":[104,105,106],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"this.java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[14,15,16,107,108,109,110,111,112,113,114,17,18,115,116,117,19,118,119,120,121,94,95,122,96,123,97,98,124,125,126,127,128,129,130,131,132,133,100,134,135,136,137,73,138,139,140,141,142,143,20,22,24,25,26,27,28,29,31,101,144,102,145,146,147,148,149,150,151,103,152,153,154,32,33,155,34,35,36,37,38,39,40,41,42,156,157,158,159,160,161,43,162,163,164,165,75,0,166,167,168,169,170,1,2,171,172,173,174,175,176,177,74,178,179,180,181,44,45,46,47,182,48,49,183,184,185,186,187,188,189,190,191,192,193,194,195,51,52,53,54,196,197,198,199,200,201,76,202,3,77,78,55,71,56,203,204,205,206,79,207,208,209,80,81,210,82,211,212,83,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,58,59,60,238,239,240,241,242,243,244,245,246,247,248,249,250,86,5,6,251,252,7,8,253,63,254,255,256,257,258,9,259,260,261,262,263,264,265,266,267,268,64,65,269,270,271,272,273,274,275,276,277,278,279,280,281,282,68,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,87,10,11,303,304,305,306,307,308,309,310,311,312,313,12,88,314,13,89,90],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lock":"lock"}},{"position":"org.easymock.internal.LastControl:92","failures":[94,95,97,98,99,100,101,102,103],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[14,15,16,107,108,109,110,111,112,315,113,114,17,18,115,116,117,19,316,317,318,319,320,321,322,118,323,119,120,121,94,95,324,122,96,123,97,98,124,99,125,126,127,128,129,130,131,132,133,100,134,135,136,137,73,138,139,140,141,142,143,20,325,22,23,326,327,24,25,26,328,27,329,330,28,29,331,31,101,144,102,145,146,147,148,149,150,151,103,152,153,154,32,33,155,34,35,36,37,332,38,333,334,39,40,41,42,335,336,156,157,337,158,159,160,161,43,162,338,339,340,341,342,163,343,344,345,346,347,348,164,165,75,0,166,167,168,169,170,1,2,171,172,349,350,173,174,175,351,352,353,354,355,356,176,357,358,359,360,361,362,363,177,74,178,364,179,365,366,367,368,369,370,371,180,181,44,45,46,47,372,182,48,49,373,183,184,185,186,187,188,189,190,191,192,193,194,195,374,375,376,51,377,378,52,379,380,381,382,383,384,385,386,387,53,388,389,390,391,392,54,393,394,196,395,396,197,198,199,200,201,76,202,3,77,78,55,71,56,203,204,205,206,79,207,208,209,80,81,210,82,211,212,83,213,214,215,216,217,397,398,399,400,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,401,402,57,58,59,403,60,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,238,239,240,241,242,61,419,420,421,422,62,423,424,243,425,244,245,426,84,246,104,105,85,427,247,428,248,249,250,86,5,6,251,252,7,8,253,63,429,430,431,432,433,254,255,256,257,258,434,435,436,437,438,439,440,441,442,9,443,444,445,259,260,446,261,262,263,264,265,266,267,268,447,64,65,66,448,269,270,271,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,106,465,466,467,468,469,470,471,272,273,274,472,275,276,277,278,279,280,281,282,473,67,474,475,476,477,478,479,480,481,68,482,283,284,285,286,287,288,289,290,291,292,293,294,295,296,483,484,485,486,487,488,489,490,491,297,298,299,300,301,302,87,10,11,492,493,303,304,305,306,307,308,309,310,311,312,313,12,88,314,13,89,90,494,495,496,497],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[],"status":0,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[14,15,15,16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,498,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[14,107,108,109,110,112,117,19,120,121,94,95,122,96,123,97,98,124,125,126,127,128,129,130,131,132,133,100,134,135,136,137,73,138,139,22,24,26,27,29,101,144,102,145,146,149,150,151,103,153,154,32,33,155,34,35,36,38,40,41,42,156,157,337,158,159,43,163,164,165,75,166,168,169,170,171,172,173,174,175,176,177,74,178,179,181,44,45,46,47,182,48,49,183,184,185,186,187,188,189,190,191,192,193,194,51,52,53,54,196,198,199,76,3,77,55,71,203,204,205,206,79,207,208,209,80,81,210,82,211,212,83,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,58,59,60,243,244,245,84,247,428,248,249,250,86,251,252,253,259,260,261,263,264,265,266,267,268,64,269,270,271,68,283,284,287,288,292,293,294,295,296,301,87,10,11,310,311,312,88,13,89],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:959","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:228","sourceCode":"final java.lang.InstantiationException java.lang.InstantiationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[118,323],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[0,1,2,3,246,4,5,6,7,8,9,10,11,12,13],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[499],"status":-1,"binaryOperator":"int == 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Invocation:44","sourceCode":"new java.util.ArrayList<org.easymock.internal.matchers.Captures<?>>(0)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:346","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[425,426,104,105],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[500,501,502,503,504,505,506,75,0,1,2,76,3,77,425,426,84,104,105,86,6,7,8,9,87,10,11,88,13,89],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"failures":[15,16,19,316,325,326,328,330,507,331,508,509,510,333,55],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[0,1,2,3,246,4,5,6,7,8,9,10,11,12,13],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"failures":[261,264],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[66],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[55,71,56,72],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1177","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[316,328,511,512,513,514,515],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:708","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[118,119,120,147,148,34,35,36,42,165,175,180,181,200,201,76,202,3,77,78,401,404,247,428,248,249,272,273,274,275,276,277,278,279,280,281,282,473,312,313,12,88,314,13,89,90,494],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[198,199],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[96,99,100,73],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[416],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"failures":[15,16,325,507,331,333],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[42],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:49","sourceCode":"if (boolean) {\n    if (int == 1) {\n        java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n    } else {\n        java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n        java.lang.StringBuilder.append(\" (+1)\");\n    }\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n}","type":"CtIfImpl"},"failures":[319,320,321,322,75,0,1,2,76,3,77,86,6,7,8,516,517,518,9,87,10,11,12,88,13,89],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"failures":[97,100,103,0,166,167,1,2,175,181,184,185,187,188,189,191,192,198,200,76,6,7,8,261,262,264,265,266,267,268,270,283,286,10,312,88],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"failures":[341,355],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":95,"org.easymock.tests2.UsageTest.argumentsOrdered":2,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":250,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":193,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":459,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":167,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":114,"org.easymock.tests2.DelegateToTest.testReturnException":177,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":298,"org.easymock.tests.MockingTest.testPartialClassMocking":58,"org.easymock.tests.MockClassControlTest.testToString":474,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":318,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":467,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":382,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":52,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":203,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":516,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":174,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":511,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":124,"org.easymock.tests2.UsageTest.wrongArguments":0,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":283,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":362,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":290,"org.easymock.samples.ExampleTest.answerVsDelegate":108,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":62,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":405,"org.easymock.tests2.UsageConstraintsTest.testNull":96,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":34,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":479,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":192,"org.easymock.tests2.CaptureTest.testPrimitive":145,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":287,"org.easymock.tests.UsageTest.moreThanOneArgument":86,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":217,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":155,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":240,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":429,"org.easymock.tests.UsageTest.argumentsOrdered":8,"org.easymock.tests.UsageVarargTest.varargIntAccepted":274,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":505,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":464,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":292,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":515,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":20,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":347,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":367,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":25,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":451,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":296,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":502,"org.easymock.tests.ReplayStateInvalidUsageTest.times":415,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":176,"org.easymock.tests2.DependencyTest.testClassMocking":349,"org.easymock.tests2.AnswerTest.answer":196,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":99,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":465,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":143,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":420,"org.easymock.tests2.CaptureTest.testAnd":101,"org.easymock.tests2.UsageTest.strictResetToDefault":165,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":39,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":326,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":239,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":187,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":248,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":433,"org.easymock.tests2.DelegateToTest.testDelegate":179,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":213,"org.easymock.tests.LimitationsTest.mockFinalMethod":482,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":301,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":258,"org.easymock.tests2.DependencyTest.testClassMockingSupport":350,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":104,"org.easymock.tests2.CaptureTest.testCapture1_2446744":146,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":332,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":212,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":141,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":409,"org.easymock.tests.UsageThrowableTest.throwError":261,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":422,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":400,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":348,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":242,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":508,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":394,"org.easymock.samples.PartialClassMockTest.testGetArea":14,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":410,"org.easymock.tests.MockingTest.testInterfaceMocking":403,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":293,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":496,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":491,"org.easymock.tests2.UsageTest.niceToStrict":166,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":383,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":449,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":93,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":24,"org.easymock.tests2.MockBuilderTest.testCreateMock":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":390,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":359,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":81,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":188,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":419,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":445,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":492,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":288,"org.easymock.tests.UsageOverloadedMethodTest.overloading":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":392,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":387,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":129,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":245,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":229,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":269,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":128,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":151,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":472,"org.easymock.tests.MockClassControlTest.testEquals":478,"org.easymock.tests2.EasyMockSupportClassTest.testAll":51,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":65,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":215,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":498,"org.easymock.tests2.CaptureTest.testCaptureAll":144,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":142,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":256,"org.easymock.tests.MockNameTest.defaultName":446,"org.easymock.tests2.UsageConstraintsTest.testMatches":130,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":407,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":241,"org.easymock.samples.ExampleTest.voteForRemovals":112,"org.easymock.tests.UsageVarargTest.allKinds":282,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":87,"org.easymock.samples.BasicClassMockTest.testPrintContent":18,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":257,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":267,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":200,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":302,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":344,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":364,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":441,"org.easymock.tests2.UsageConstraintsTest.greaterThan":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":377,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":428,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":42,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":442,"org.easymock.samples.ExampleTest.voteForRemoval":109,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":157,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":335,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":423,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":368,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":37,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":164,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":63,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":330,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":456,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":185,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":375,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":297,"org.easymock.tests2.CaptureTest.testCaptureFirst":154,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":363,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":455,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":186,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":172,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":246,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":225,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":158,"org.easymock.tests2.CaptureTest.testCapture2_2446744":153,"org.easymock.tests2.UsageTest.moreThanOneArgument":75,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":466,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":29,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":281,"org.easymock.tests.GenericTest.testBridgedEquals":448,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":308,"org.easymock.tests.UsageExpectAndReturnTest.longType":221,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":183,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":254,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":30,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":216,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":427,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":136,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":214,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":398,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":238,"org.easymock.tests.UsageCallCountTest.tooManyCalls":309,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":303,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":391,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":226,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":361,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":207,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":266,"org.easymock.tests.MockingTest.testNiceClassMocking":406,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":45,"org.easymock.tests.MockingTest.testClassMocking":402,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":493,"org.easymock.tests2.UsageConstraintsTest.testContains":127,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":21,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":43,"org.easymock.tests2.UsageConstraintsTest.testFind":122,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":271,"org.easymock.tests.MockTypeTest.fromEasyMockClass":421,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":119,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":312,"org.easymock.tests.UsageExpectAndReturnTest.object":228,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":38,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":360,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":191,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":512,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":276,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":489,"org.easymock.tests.UsageTest.exactCallCountByLastCall":253,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":259,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":454,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":483,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":430,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":316,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":234,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":272,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":244,"org.easymock.tests.MockClassControlTest.testHashCode":477,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":339,"org.easymock.tests2.EasyMockSupportTest.testVerify":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":385,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":431,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":444,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":243,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":140,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":351,"org.easymock.tests.UsageVarargTest.varargCharAccepted":275,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":434,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":201,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":471,"org.easymock.tests2.UsageTest.openCallCountByLastCall":168,"org.easymock.tests.DefaultClassInstantiatorTest.object":435,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":91,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":194,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":443,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":487,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":386,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":209,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":264,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":355,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":338,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":476,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":40,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":208,"org.easymock.tests.CapturesMatcherTest.test":70,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":235,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":397,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":475,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":54,"org.easymock.tests2.UsageTest.resumeIfFailure":171,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":61,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":366,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":300,"org.easymock.tests2.StubTest.stubWithReturnValue":181,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":328,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":137,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":227,"org.easymock.tests2.SerializationTest.testAllMockedMethod":56,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":106,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":510,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":504,"org.easymock.samples.SupportTest.voteForRemovals":117,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":447,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":341,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":211,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":72,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":470,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":395,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":485,"org.easymock.tests.UsageExpectAndThrowTest.object":210,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":134,"org.easymock.tests2.DelegateToTest.testWrongClass":178,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":310,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":311,"org.easymock.tests.UsageStrictMockTest.range":13,"org.easymock.samples.ConstructorCalledMockTest.testTax":15,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":370,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":190,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":44,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":82,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":26,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":417,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":7,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":374,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":289,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":497,"org.easymock.tests2.CaptureTest.testCaptureNone":150,"org.easymock.tests.UsageUnorderedTest.message":9,"org.easymock.tests.UsageVerifyTest.twoReturns":11,"org.easymock.tests.UsageVarargTest.varargByteAccepted":280,"org.easymock.tests2.ThreadingTest.testThreadSafe":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":388,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":306,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":490,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":17,"org.easymock.tests2.CaptureTest.testCapture_2617107":102,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":506,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":468,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":286,"org.easymock.tests2.UsageConstraintsTest.any":125,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":414,"org.easymock.tests2.StubTest.stub":180,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":469,"org.easymock.tests.UsageExpectAndThrowTest.longType":206,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":299,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":439,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":413,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":202,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":163,"org.easymock.tests2.SerializationTest.testClass":55,"org.easymock.tests.LimitationsTest.mockNativeMethod":68,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":66,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":237,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":354,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":78,"org.easymock.tests2.NameTest.nameForMocksControl":322,"org.easymock.tests2.MockedExceptionTest.testMockedException":161,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":378,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":252,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":60,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":79,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":323,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":32,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":27,"org.easymock.tests.MockingTest.testNicePartialClassMocking":59,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":36,"org.easymock.tests2.CompareToTest.testCompareEqual":499,"org.easymock.tests2.CaptureTest.testCaptureLast":149,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":352,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":105,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":98,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":49,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":135,"org.easymock.tests.MockingTest.testTwoMocks":57,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":373,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":218,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":80,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":1,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":138,"org.easymock.samples.ExampleTest.removeNonExistingDocument":315,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":411,"org.easymock.tests.UsageStrictMockTest.differentMethods":89,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":358,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":340,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":437,"org.easymock.tests2.ConstraintsToStringTest.andToString":503,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":337,"org.easymock.tests2.MockBuilderTest.testCreateMockString":31,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":473,"org.easymock.tests.UsageExpectAndThrowTest.floatType":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":379,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":376,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":197,"org.easymock.tests.UsageVerifyTest.twoThrows":10,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":317,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":425,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":53,"org.easymock.samples.ExampleTest.voteAgainstRemoval":110,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":495,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":460,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":41,"org.easymock.tests.LimitationsTest.privateConstructor":481,"org.easymock.tests2.UsageConstraintsTest.testNotNull":73,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":160,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":268,"org.easymock.tests2.UsageTest.defaultResetToNice":170,"org.easymock.samples.ExampleTest.voteAgainstRemovals":107,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":461,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":233,"org.easymock.tests.UsageVarargTest.differentLength":277,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":353,"org.easymock.tests2.CallbackTest.callback":175,"org.easymock.tests2.UsageConstraintsTest.equals":324,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":333,"org.easymock.tests.UsageTest.openCallCountByLastCall":251,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":120,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":285,"org.easymock.tests.UsageCallCountTest.tooFewCalls":304,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":47,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":291,"org.easymock.tests.UsageThrowableTest.throwCheckedException":265,"org.easymock.tests.MockingTest.testStrictClassMocking":401,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":48,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":260,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":46,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":357,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":416,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":182,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":199,"org.easymock.tests.ObjectMethodsTest.testHashCode":488,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":514,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":159,"org.easymock.tests2.NameTest.nameForNiceMock":321,"org.easymock.tests2.DependencyTest.testInterfaceMocking":173,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":513,"org.easymock.samples.ExampleTest.addDocument":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":389,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":393,"org.easymock.tests2.DelegateToTest.testStubDelegate":74,"org.easymock.tests2.AnswerTest.stubAnswer":198,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":88,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":329,"org.easymock.tests.UsageVarargTest.varargLongAccepted":279,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":458,"org.easymock.tests.UsageExpectAndReturnTest.floatType":220,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":236,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":19,"org.easymock.tests2.ConstraintsToStringTest.orToString":500,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":16,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":426,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":133,"org.easymock.tests.UsageThrowableTest.noUpperLimit":262,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":346,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":121,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":365,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":147,"org.easymock.tests2.SerializationTest.test":71,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":436,"org.easymock.tests2.UsageConstraintsTest.testSame":123,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":219,"org.easymock.samples.SupportTest.addDocument":116,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":372,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":412,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":380,"org.easymock.tests.GenericTest.testPackageScope":64,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":453,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":345,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":404,"org.easymock.tests2.NameTest.nameForMock":319,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":230,"org.easymock.tests2.UsageStrictMockTest.differentMethods":77,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":331,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":334,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":222,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":83,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":486,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":249,"org.easymock.tests2.MockedExceptionTest.testRealException":162,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":424,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":463,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":371,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":509,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":462,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":76,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":418,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":284,"org.easymock.tests2.NameTest.nameForStrictMock":320,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":327,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":118,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":92,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":35,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":369,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":517,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":438,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":100,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":22,"org.easymock.tests2.UsageStrictMockTest.range":3,"org.easymock.tests2.UsageConstraintsTest.lessThan":139,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":342,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":457,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":184,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":384,"org.easymock.tests2.CaptureTest.testCaptureRightOne":103,"org.easymock.tests2.UsageConstraintsTest.testOr":97,"org.easymock.tests.UsageRangeTest.combination":247,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":33,"org.easymock.tests.UsageTest.wrongArguments":6,"org.easymock.tests2.MockBuilderTest.testWithConstructor":325,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":381,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":67,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":450,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":231,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":440,"org.easymock.tests.UsageVarargTest.varargShortAccepted":278,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":307,"org.easymock.tests2.UsageConstraintsTest.cmpTo":126,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":396,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":452,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":169,"org.easymock.tests2.CaptureTest.testCaptureFromStub":152,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":408,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":23,"org.easymock.tests.UsageTest.unexpectedCallWithArray":5,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":12,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":305,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":507,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":232,"org.easymock.tests2.CaptureTest.testCapture":69,"org.easymock.tests2.UsageConstraintsTest.constraints":94,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":314,"org.easymock.samples.ExampleTest.addAndChangeDocument":113,"org.easymock.tests2.ConstraintsToStringTest.notToString":501,"org.easymock.tests.UsageStrictMockTest.testVerify":494,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":115,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":313,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":255,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":148,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":50,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":294,"org.easymock.tests.LimitationsTest.abstractClass":480,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":224,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":84,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":295,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":518,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":189,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":273}}]
