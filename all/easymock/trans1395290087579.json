[{"transplant":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:89","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]));\n}","type":"CtForImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[50,51,52,53,54,55,56,57,58,59,60,61],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:54","failures":[62],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:252","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[63,64,65,66,31,36],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[67,68,69,70,70,71,71,72,73,74,75,76,77,78,14,79,80,81,82,83,15,16,17,84,85,86,87,88,89,90,91,92,23,93,94,95,96,97,98,24,99,25,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:40","sourceCode":"return org.easymock.internal.MocksControl.getState().invoke(new org.easymock.internal.Invocation(java.lang.Object , java.lang.reflect.Method , java.lang.Object[]))","type":"CtReturnImpl"},"failures":[117,118,119,120,121,122,69,123,70,70,71,71,124,125,126,127,128,129,72,130,131,132,133,134,135,136,137,138,139,140,0,141,1,2,3,142,4,143,144,5,6,7,145,146,147,8,9,10,11,50,148,51,52,53,54,55,56,149,57,59,60,150,61,151,152,12,153,154,155,156,157,158,159,160,161,162,163,164,165,166,13,167,168,169,170,171,172,173,174,175,176,74,75,76,77,14,80,82,83,16,17,177,178,179,84,180,85,86,87,88,181,89,90,182,183,184,185,186,187,91,18,188,189,190,191,192,193,19,194,195,196,20,21,197,198,22,199,200,201,92,23,202,93,94,95,97,98,24,99,25,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,106,108,30,31,268,32,33,34,269,270,35,271,36,37,272,273,38,39,40,274,44,275,276,277,278,279,280,45,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,112,309,48,49,310,311,312,313,314,315,316,114,115,116,317,318,319],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"method","finalizeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:85","failures":[155,160,169,174],"status":-1,"binaryOperator":"(java.util.Stack<org.easymock.IArgumentMatcher> != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:63","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:201","failures":[69,70,70,71,71,72,75,76,77,78,14,79,320,80,82,83,321,322,16,17,178,91,323,96,324,24,99,100,325,108,109,110],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1249","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[2,3,145,146,157,168,219,266,267,33,34,272,273,274,278,326,45,309],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[63,64,65,66,31,36],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ErrorMessage:51","failures":[2,327,33,48,49],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"position":"org.easymock.internal.Invocation:99","failures":[119,120,121,122,69,123,161,80,22,200,45,328],"status":-1,"binaryOperator":"((this.java.lang.Object.equals(org.easymock.internal.Invocation.java.lang.Object)) && (this.java.lang.reflect.Method.equals(org.easymock.internal.Invocation.java.lang.reflect.Method))) && org.easymock.internal.Invocation.(equalArguments(org.easymock.internal.Invocation.java.lang.Object[]))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"failures":[141,2,3,144,5,8,9,329,330,331,332,333,334,327,31,268,33,34,271,37,38,39,44,309,48,49],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[135,4,146,205,213,218,220,221,222,223,224,225,243,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,35,273,278,48],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:34","sourceCode":"return org.easymock.internal.AndroidSupport.boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1964","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[72,130,73,335],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[336],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[337,338],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[2,5,8,9,28,31,33,36,37,38,39,44,48,49],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:93","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:109","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.assertRecordState();\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory();\n    return org.easymock.internal.IProxyFactory.createProxy(java.lang.Class<T>, new org.easymock.internal.ObjectMethodsFilter(java.lang.Class<T> , new org.easymock.internal.MockInvocationHandler(this) , java.lang.String), java.lang.reflect.Method[], org.easymock.ConstructorArgs);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[117,118,119,120,339,121,340,122,67,68,69,341,123,342,70,70,71,71,343,124,125,126,127,128,129,72,130,73,344,345,131,132,346,347,348,349,350,133,351,352,353,354,355,356,357,358,359,360,134,135,136,361,137,138,139,140,362,0,363,141,1,2,3,142,4,143,144,5,6,7,145,146,147,8,9,10,11,50,148,51,52,53,54,55,56,149,57,59,60,150,61,151,152,12,153,62,154,155,156,157,158,159,160,161,162,163,164,165,166,13,167,168,169,170,171,172,173,174,175,176,364,365,366,74,367,368,75,369,370,371,372,373,374,375,376,377,76,378,379,380,381,382,77,383,384,385,78,386,14,79,387,320,80,81,82,388,83,322,15,16,389,17,390,391,392,393,394,177,395,396,397,398,399,400,178,179,84,180,401,329,330,331,332,85,86,87,88,181,89,90,182,183,184,185,186,187,91,323,402,18,188,189,190,191,192,193,19,194,195,196,20,21,197,198,22,199,200,201,92,23,202,93,94,95,96,403,97,324,404,98,24,99,25,405,100,203,406,204,205,407,206,26,207,208,209,210,211,212,213,214,215,216,217,408,218,219,220,221,222,223,224,225,226,227,228,229,230,409,231,232,233,234,235,236,237,238,101,239,240,241,242,243,244,410,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,411,412,413,414,415,416,29,417,418,419,420,265,421,266,267,422,423,424,102,103,104,105,425,426,427,428,429,337,430,431,432,338,433,434,325,106,107,108,435,30,436,31,268,32,33,34,269,437,438,439,440,441,442,443,444,445,446,447,448,449,270,109,450,451,110,452,453,35,271,36,37,272,273,38,39,40,454,455,274,456,457,458,41,42,43,44,459,275,460,461,462,111,276,277,278,463,326,464,465,466,467,468,469,470,471,472,473,474,475,476,477,279,478,479,480,481,482,280,483,45,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,484,485,112,486,309,48,49,310,311,312,313,314,315,316,487,488,113,114,115,489,116,490,491,492,317,318,493,319,494],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:246","sourceCode":"final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[439,449],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Find:41","failures":[495],"status":-1,"binaryOperator":"((\"find(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1052","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[444],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"this.org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[124,126,472],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"delegateTo"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"failures":[78,81,178,96,100],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[401,329,23,100],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[496,12,159,165,176],"status":-1,"binaryOperator":"int >= 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:52","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Double.java.lang.Class<java.lang.Double>, java.lang.Double.java.lang.Double.valueOf(0))","type":"CtInvocationImpl"},"failures":[117,118,119,120,339,121,340,122,67,68,69,341,123,342,70,71,343,124,125,126,127,128,129,72,130,73,344,345,131,132,346,347,348,349,350,133,351,352,353,354,355,356,357,358,359,360,134,135,136,361,137,138,139,140,362,0,363,141,1,2,3,142,4,143,144,5,6,7,145,146,147,8,9,10,11,50,148,51,52,53,54,55,56,149,57,59,60,150,61,151,152,12,153,62,154,155,156,157,158,159,160,161,162,163,164,165,166,13,167,168,169,170,171,172,173,174,175,176,364,365,366,74,367,368,75,369,370,371,372,373,374,375,376,377,76,378,379,380,381,382,77,383,384,385,78,386,14,79,387,320,80,81,82,388,83,321,322,15,16,389,17,390,391,392,393,394,177,395,396,397,398,399,400,178,179,84,180,401,329,330,331,332,85,86,87,88,497,181,89,90,498,182,183,184,185,186,187,91,323,402,18,188,189,190,191,192,193,19,194,195,196,20,21,197,198,22,199,200,201,92,23,202,93,94,95,96,403,97,324,404,98,24,99,25,405,100,203,406,204,205,407,206,26,207,208,209,210,211,212,213,214,215,216,217,408,218,219,220,221,222,223,224,225,226,227,228,229,230,409,231,232,233,234,235,236,237,238,101,239,240,241,242,243,244,410,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,411,412,413,414,415,416,29,417,418,419,420,265,421,266,267,422,423,424,102,103,104,105,425,426,427,428,429,337,430,431,432,338,433,434,325,106,107,108,435,30,436,31,268,32,33,34,269,437,438,439,440,441,442,443,444,445,446,447,448,449,270,109,499,500,450,451,110,452,453,35,271,36,37,272,273,38,39,40,454,455,274,456,457,458,41,42,43,44,459,275,460,461,462,111,276,277,278,463,326,464,465,466,467,468,469,470,471,472,473,474,475,476,477,279,478,479,480,481,482,280,483,45,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,484,485,112,486,309,48,49,310,311,312,313,314,315,316,487,488,113,114,115,489,116,490,491,492,317,318,493,319,494],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[496,159,165,176],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:58","sourceCode":"java.lang.String[][int] = java.lang.Class<?>[][int].getName()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[72,130,73,335],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:74","sourceCode":"return new java.util.ArrayList<org.easymock.IArgumentMatcher>(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":153,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":35,"org.easymock.tests2.UsageTest.argumentsOrdered":9,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":199,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":395,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":472,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":7,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":343,"org.easymock.tests2.DelegateToTest.testReturnException":125,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":240,"org.easymock.tests.MockingTest.testPartialClassMocking":114,"org.easymock.tests.MockClassControlTest.testToString":103,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":401,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":319,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":480,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":372,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":75,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":245,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":333,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":132,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":159,"org.easymock.tests2.UsageTest.wrongArguments":5,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":210,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":356,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":217,"org.easymock.samples.ExampleTest.answerVsDelegate":118,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":110,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":491,"org.easymock.tests2.UsageConstraintsTest.testNull":155,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":93,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":427,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":22,"org.easymock.tests2.CaptureTest.testPrimitive":52,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":214,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":264,"org.easymock.tests.UsageTest.moreThanOneArgument":271,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":202,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":236,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":421,"org.easymock.tests.UsageTest.argumentsOrdered":39,"org.easymock.tests.UsageVarargTest.varargIntAccepted":413,"org.easymock.tests.InvocationTest.testEquals":328,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":477,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":304,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":78,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":399,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":81,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":464,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":308,"org.easymock.tests.ReplayStateInvalidUsageTest.times":446,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":133,"org.easymock.tests2.DependencyTest.testClassMocking":344,"org.easymock.tests2.AnswerTest.answer":182,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":160,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":478,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":362,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":500,"org.easymock.tests2.CaptureTest.testAnd":50,"org.easymock.tests2.UsageTest.strictResetToDefault":143,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":387,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":98,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":235,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":196,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":282,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":423,"org.easymock.tests2.DelegateToTest.testDelegate":129,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":260,"org.easymock.tests.LimitationsTest.mockFinalMethod":486,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":243,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":314,"org.easymock.tests2.DependencyTest.testClassMockingSupport":345,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":229,"org.easymock.tests2.CaptureTest.testCapture1_2446744":53,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":403,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":258,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":139,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":440,"org.easymock.tests.UsageThrowableTest.throwError":218,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":451,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":400,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":47,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":384,"org.easymock.samples.PartialClassMockTest.testGetArea":69,"org.easymock.tests.MockingTest.testInterfaceMocking":489,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":441,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":305,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":232,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":111,"org.easymock.tests2.UsageTest.niceToStrict":6,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":373,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":463,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":80,"org.easymock.tests2.MockBuilderTest.testCreateMock":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":380,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":353,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":63,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":254,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":20,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":499,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":228,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":454,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":215,"org.easymock.tests.UsageOverloadedMethodTest.overloading":277,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":377,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":382,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":165,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":205,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":276,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":295,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":164,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":57,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":414,"org.easymock.tests.MockClassControlTest.testEquals":426,"org.easymock.tests2.EasyMockSupportClassTest.testAll":74,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":107,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":262,"org.easymock.tests2.CaptureTest.testCaptureAll":148,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":140,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":312,"org.easymock.tests.MockNameTest.defaultName":410,"org.easymock.tests2.UsageConstraintsTest.testMatches":166,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":438,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":237,"org.easymock.samples.ExampleTest.voteForRemovals":121,"org.easymock.tests.UsageVarargTest.allKinds":265,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":309,"org.easymock.samples.BasicClassMockTest.testPrintContent":68,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":313,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":224,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":0,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":396,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":128,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":244,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":433,"org.easymock.tests2.UsageConstraintsTest.greaterThan":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":367,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":281,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":25,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":434,"org.easymock.samples.ExampleTest.voteForRemoval":119,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":405,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":189,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":452,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":96,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":101,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":4,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":322,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":469,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":194,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":365,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":239,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":124,"org.easymock.tests2.CaptureTest.testCaptureFirst":61,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":468,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":195,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":11,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":26,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":291,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":191,"org.easymock.tests2.CaptureTest.testCapture2_2446744":150,"org.easymock.tests2.UsageTest.moreThanOneArgument":144,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":479,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":16,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":420,"org.easymock.tests.GenericTest.testBridgedEquals":435,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":42,"org.easymock.tests.UsageExpectAndReturnTest.longType":287,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":193,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":310,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":263,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":172,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":270,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":261,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":208,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":234,"org.easymock.tests.UsageCallCountTest.tooManyCalls":43,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":381,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":292,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":355,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":250,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":223,"org.easymock.tests.MockingTest.testNiceClassMocking":492,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":86,"org.easymock.tests.MockingTest.testClassMocking":488,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":455,"org.easymock.tests2.UsageConstraintsTest.testContains":163,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":84,"org.easymock.tests2.UsageConstraintsTest.testFind":154,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":278,"org.easymock.tests.MockTypeTest.fromEasyMockClass":450,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":137,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":30,"org.easymock.tests.UsageExpectAndReturnTest.object":294,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":97,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":354,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":198,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":416,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":461,"org.easymock.tests.UsageTest.exactCallCountByLastCall":40,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":336,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":315,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":467,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":493,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":266,"org.easymock.tests2.ConstraintsToStringTest.findToString":495,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":323,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":411,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":300,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":204,"org.easymock.tests.MockClassControlTest.testHashCode":425,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":391,"org.easymock.tests2.EasyMockSupportTest.testVerify":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":375,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":267,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":203,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":227,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":138,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":27,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":385,"org.easymock.tests.UsageVarargTest.varargCharAccepted":415,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":428,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":363,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":483,"org.easymock.tests2.UsageTest.openCallCountByLastCall":145,"org.easymock.tests.DefaultClassInstantiatorTest.object":429,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":200,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":226,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":275,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":28,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":376,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":221,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":349,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":390,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":105,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":24,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":251,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":301,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":207,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":104,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":77,"org.easymock.tests2.UsageTest.resumeIfFailure":10,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":109,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":242,"org.easymock.tests2.StubTest.stubWithReturnValue":135,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":388,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":173,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":293,"org.easymock.tests2.SerializationTest.testAllMockedMethod":73,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":279,"org.easymock.samples.SupportTest.voteForRemovals":123,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":64,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":325,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":393,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":257,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":335,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":280,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":183,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":494,"org.easymock.tests.UsageExpectAndThrowTest.object":255,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":170,"org.easymock.tests2.DelegateToTest.testWrongClass":127,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":317,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":318,"org.easymock.tests.UsageStrictMockTest.range":33,"org.easymock.samples.ConstructorCalledMockTest.testTax":70,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":359,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":197,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":85,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":256,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":82,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":448,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":38,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":364,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":216,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":65,"org.easymock.tests2.CaptureTest.testCaptureNone":149,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":233,"org.easymock.tests.UsageUnorderedTest.message":44,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":46,"org.easymock.tests.UsageVerifyTest.twoReturns":49,"org.easymock.tests.UsageVarargTest.varargByteAccepted":419,"org.easymock.tests2.ThreadingTest.testThreadSafe":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":378,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":458,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":462,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":67,"org.easymock.tests2.CaptureTest.testCapture_2617107":51,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":409,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":481,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":213,"org.easymock.tests2.UsageConstraintsTest.any":161,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":445,"org.easymock.tests2.StubTest.stub":134,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":209,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":482,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":241,"org.easymock.tests.UsageExpectAndThrowTest.longType":248,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":432,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":444,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":1,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":177,"org.easymock.tests2.SerializationTest.testClass":72,"org.easymock.tests.LimitationsTest.mockNativeMethod":112,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":108,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":303,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":348,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":142,"org.easymock.tests2.NameTest.nameForMocksControl":332,"org.easymock.tests2.MockedExceptionTest.testMockedException":179,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":368,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":273,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":116,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":249,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":361,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":92,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":83,"org.easymock.tests.MockingTest.testNicePartialClassMocking":115,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":95,"org.easymock.tests2.CaptureTest.testCaptureLast":56,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":346,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":230,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":158,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":90,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":171,"org.easymock.tests.MockingTest.testTwoMocks":113,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":498,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":284,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":253,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":8,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":175,"org.easymock.samples.ExampleTest.removeNonExistingDocument":340,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":442,"org.easymock.tests.UsageStrictMockTest.differentMethods":34,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":352,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":392,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":430,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":190,"org.easymock.tests2.MockBuilderTest.testCreateMockString":17,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":424,"org.easymock.tests.UsageExpectAndThrowTest.floatType":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":369,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":13,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":366,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":185,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":402,"org.easymock.tests.UsageVerifyTest.twoThrows":48,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":76,"org.easymock.samples.ExampleTest.voteAgainstRemoval":120,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":473,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":231,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":99,"org.easymock.tests.LimitationsTest.privateConstructor":485,"org.easymock.tests2.UsageConstraintsTest.testNotNull":174,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":178,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":225,"org.easymock.tests2.UsageTest.defaultResetToNice":147,"org.easymock.samples.ExampleTest.voteAgainstRemovals":117,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":474,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":299,"org.easymock.tests.UsageVarargTest.differentLength":29,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":347,"org.easymock.tests2.CallbackTest.callback":18,"org.easymock.tests2.UsageConstraintsTest.equals":62,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":324,"org.easymock.tests.UsageTest.openCallCountByLastCall":272,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":151,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":212,"org.easymock.tests.UsageCallCountTest.tooFewCalls":456,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":88,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":408,"org.easymock.tests.UsageThrowableTest.throwCheckedException":222,"org.easymock.tests.MockingTest.testStrictClassMocking":487,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":66,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":89,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":316,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":87,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":351,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":447,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":181,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":187,"org.easymock.tests2.CompareToTest.testGreateOrEqual":496,"org.easymock.tests.ObjectMethodsTest.testHashCode":460,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":192,"org.easymock.tests2.NameTest.nameForNiceMock":331,"org.easymock.tests2.DependencyTest.testInterfaceMocking":131,"org.easymock.samples.ExampleTest.addDocument":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":379,"org.easymock.tests2.DelegateToTest.testStubDelegate":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":383,"org.easymock.tests2.AnswerTest.stubAnswer":186,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":268,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":321,"org.easymock.tests.UsageVarargTest.varargLongAccepted":418,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":471,"org.easymock.tests.UsageExpectAndReturnTest.floatType":286,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":302,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":91,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":71,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":407,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":398,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":168,"org.easymock.tests.UsageThrowableTest.noUpperLimit":219,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":152,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":357,"org.easymock.tests2.SerializationTest.test":130,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":54,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":337,"org.easymock.tests2.UsageConstraintsTest.testSame":156,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":285,"org.easymock.samples.SupportTest.addDocument":341,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":497,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":443,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":370,"org.easymock.tests.GenericTest.testPackageScope":106,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":422,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":466,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":397,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":490,"org.easymock.tests2.NameTest.nameForMock":329,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":296,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":389,"org.easymock.tests2.UsageStrictMockTest.differentMethods":3,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":404,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":288,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":259,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":459,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":283,"org.easymock.tests2.MockedExceptionTest.testRealException":180,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":476,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":360,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":475,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":141,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":449,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":211,"org.easymock.tests2.NameTest.nameForStrictMock":330,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":320,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":136,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":94,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":358,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":431,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":169,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":334,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":14,"org.easymock.tests2.UsageStrictMockTest.range":2,"org.easymock.tests2.UsageConstraintsTest.lessThan":176,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":470,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":19,"org.easymock.tests2.CaptureTest.testCaptureRightOne":59,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":374,"org.easymock.tests2.UsageConstraintsTest.testOr":157,"org.easymock.tests.UsageRangeTest.combination":45,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":23,"org.easymock.tests.UsageTest.wrongArguments":37,"org.easymock.tests2.MockBuilderTest.testWithConstructor":386,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":371,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":102,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":289,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":297,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":326,"org.easymock.tests.UsageVarargTest.varargShortAccepted":417,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":338,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":41,"org.easymock.tests2.UsageConstraintsTest.cmpTo":162,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":184,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":465,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":146,"org.easymock.tests2.CaptureTest.testCaptureFromStub":60,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":439,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":79,"org.easymock.tests.UsageTest.unexpectedCallWithArray":36,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":31,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":457,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":298,"org.easymock.tests2.CaptureTest.testCapture":58,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":32,"org.easymock.tests2.UsageConstraintsTest.constraints":12,"org.easymock.samples.ExampleTest.addAndChangeDocument":122,"org.easymock.tests.UsageStrictMockTest.testVerify":437,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":342,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":436,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":311,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":55,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":306,"org.easymock.tests.LimitationsTest.abstractClass":484,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":290,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":206,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":307,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":412,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":21,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":327}}]
