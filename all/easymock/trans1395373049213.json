[{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[38,39,40],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[41,42,43,44,45,46,47,48,49,50,51,52,53,54,55],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:137","sourceCode":"if (int > 1) {\n    java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\");\n} else {\n    java.lang.StringBuilder.append(\":\");\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:90","sourceCode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","type":"CtIfImpl"},"failures":[41,42,43,44,45,46,47,48,49,51,52,53,54,55],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"result","matches":"i"}},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"failures":[56,57,58,59,60,61,62,26,27,28,29,63,64,65,66],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[56,56,57,57,58,67,68,1,4,69,59,60,61,70,71,72,73,74,75,76,77,78,79,80,81,82,20,83,84,21,85,86,22,23,87,24,88,25,89,26,27,90,28,29,91,30,92,93,94,63,95,31,64,65,32,96,97,98],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:355","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:274","failures":[99,100,101,102,103,104,105,106,107],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2123","sourceCode":"final org.easymock.internal.Invocation org.easymock.internal.Invocation = org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1305","sourceCode":"return int","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:109","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[108,109,110,111,112],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MocksControl:136","sourceCode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:146","sourceCode":"try {\n    return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory();\n} catch (final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError) {\n    throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cached":"org.easymock.internal.MocksControl.classProxyFactory"}},{"transplant":{"position":"org.easymock.EasyMock:1687","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(T[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:97","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[113,58,114,115,116,117,118,43,119,120,121,122,123,59,60,61,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,49,145,146,147,148,149,150,151,152,153,154,155,71,156,157,158,74,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,13,176,177,14,178,15,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,55,194,76,104,106,77,195,79,80,81,82,84,85,22,23,24,89,26,27,90,196,28,29,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,91,30,228,92,93,94,95,64,65,32,34,229,110,230,231,232,233,234,235,112,236,36,40,98],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[118,121,122,145,158,237,168,188,189,194,203,204,206,208,209,214,217,220,226],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.Results:39","sourceCode":"if (!(org.easymock.internal.Range.hasFixedCount())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastRange":"org.easymock.internal.MocksControl.ONCE"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[238,239,106,107],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:311","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[204,210,229,240,235],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:41","sourceCode":"org.easymock.IArgumentMatcher.appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[241],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[242],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"failures":[243,56,57,244,113,58,245,114,99,115,116,246,117,247,248,67,68,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,0,264,118,42,43,119,120,44,45,121,122,46,47,123,265,266,267,1,268,269,2,3,4,5,6,270,271,69,59,60,272,61,273,274,275,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,276,277,48,144,278,49,145,279,280,281,282,283,284,285,286,146,287,147,148,288,289,149,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,100,306,307,308,309,150,50,70,310,311,312,313,314,315,151,152,153,154,155,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,62,71,72,73,333,156,157,158,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,74,356,159,160,51,357,75,7,8,9,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,237,384,385,386,387,238,388,389,390,38,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,10,412,413,11,12,161,414,162,163,164,165,166,167,415,416,417,418,419,420,421,422,423,424,168,169,170,171,101,425,102,426,172,173,174,175,13,176,177,14,178,15,179,180,181,427,428,429,182,183,103,184,185,186,52,187,430,188,189,190,53,54,191,192,431,432,193,433,55,194,434,76,435,436,16,17,18,19,104,239,437,105,106,107,438,439,440,441,77,195,78,442,443,444,79,445,446,80,447,448,449,450,451,452,453,454,455,81,456,457,458,459,460,82,461,462,20,84,21,463,85,86,22,23,464,465,87,24,25,466,89,26,27,90,467,196,28,29,468,197,469,198,199,200,201,202,203,204,205,470,206,207,208,209,210,211,471,212,213,214,215,216,217,218,219,220,221,222,223,472,224,225,226,227,91,30,228,92,93,94,63,473,95,474,475,31,64,65,32,476,33,477,478,479,480,481,34,35,482,483,484,485,486,487,488,489,490,491,492,229,110,240,230,231,493,494,232,233,234,235,111,112,236,495,496,497,498,499,36,37,500,501,502,503,504,39,505,40,506,507,508,509,510,511,512,513,514,66,515,98,516],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":205,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":119,"org.easymock.tests2.UsageTest.argumentsOrdered":54,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":180,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":35,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":38,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":430,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":245,"org.easymock.tests2.DelegateToTest.testReturnException":505,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":311,"org.easymock.tests.MockingTest.testPartialClassMocking":59,"org.easymock.tests.MockClassControlTest.testToString":7,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":436,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":285,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":399,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":450,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":80,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":334,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":183,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":382,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":211,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":147,"org.easymock.tests2.UsageTest.wrongArguments":52,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":504,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":304,"org.easymock.samples.ExampleTest.answerVsDelegate":99,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":4,"org.easymock.tests2.UsageConstraintsTest.testNull":207,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":274,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":92,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":179,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":360,"org.easymock.tests2.CaptureTest.testPrimitive":230,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":149,"org.easymock.tests.UsageTest.moreThanOneArgument":120,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":353,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":228,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":422,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":415,"org.easymock.tests.UsageTest.argumentsOrdered":47,"org.easymock.tests.UsageVarargTest.varargIntAccepted":254,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":395,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":151,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":20,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":489,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":485,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":384,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":155,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":366,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":36,"org.easymock.tests.ReplayStateInvalidUsageTest.times":298,"org.easymock.tests2.DependencyTest.testClassMocking":428,"org.easymock.tests2.AnswerTest.answer":104,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":471,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":397,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":441,"org.easymock.tests2.CaptureTest.testAnd":229,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":269,"org.easymock.tests2.UsageTest.strictResetToDefault":185,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":31,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":242,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":421,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":176,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":170,"org.easymock.tests2.DelegateToTest.testDelegate":508,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":419,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":365,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":349,"org.easymock.tests.LimitationsTest.mockFinalMethod":356,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":314,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":320,"org.easymock.tests2.DependencyTest.testClassMockingSupport":429,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":265,"org.easymock.tests2.CaptureTest.testCapture1_2446744":231,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":473,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":347,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":439,"org.easymock.tests.UsageThrowableTest.throwError":161,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":292,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":3,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":486,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":424,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":462,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":369,"org.easymock.samples.PartialClassMockTest.testGetArea":58,"org.easymock.tests.MockingTest.testInterfaceMocking":272,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":293,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":152,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":282,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":451,"org.easymock.tests2.UsageTest.niceToStrict":187,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":12,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":335,"org.easymock.tests2.ThreadingTest.testChangeDefault":469,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":383,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":85,"org.easymock.tests2.MockBuilderTest.testCreateMock":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":458,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":501,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":343,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":177,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":268,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":251,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":324,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":302,"org.easymock.tests.UsageOverloadedMethodTest.overloading":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":460,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":455,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":216,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":308,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":156,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":135,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":215,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":234,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":255,"org.easymock.tests2.EasyMockSupportClassTest.testAll":79,"org.easymock.tests.MockClassControlTest.testEquals":359,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":72,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":351,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":96,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":440,"org.easymock.tests2.CaptureTest.testCaptureAll":110,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":318,"org.easymock.tests.MockNameTest.defaultName":0,"org.easymock.tests2.UsageConstraintsTest.testMatches":217,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":423,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":290,"org.easymock.samples.ExampleTest.voteForRemovals":117,"org.easymock.tests.UsageVarargTest.allKinds":263,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":118,"org.easymock.samples.BasicClassMockTest.testPrintContent":68,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":319,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":166,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":431,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":507,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":482,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":315,"org.easymock.tests2.UsageConstraintsTest.greaterThan":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":445,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":169,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":32,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":370,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":410,"org.easymock.samples.ExampleTest.voteForRemoval":115,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":476,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":198,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":5,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":63,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":362,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":184,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":70,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":465,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":388,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":175,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":162,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":443,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":310,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":39,"org.easymock.tests2.CaptureTest.testCaptureFirst":236,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":238,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":13,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":192,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":50,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":131,"org.easymock.tests2.UsageTest.moreThanOneArgument":186,"org.easymock.tests2.CaptureTest.testCapture2_2446744":112,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":200,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":398,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":24,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":262,"org.easymock.tests.GenericTest.testBridgedEquals":333,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":331,"org.easymock.tests.UsageExpectAndReturnTest.longType":127,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":173,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":316,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":88,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":352,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":472,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":264,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":350,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":420,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":322,"org.easymock.tests.UsageCallCountTest.tooManyCalls":332,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":459,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":132,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":503,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":339,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":165,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":26,"org.easymock.tests.MockingTest.testNiceClassMocking":275,"org.easymock.tests.MockingTest.testClassMocking":271,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":83,"org.easymock.tests2.UsageConstraintsTest.testContains":214,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":325,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":98,"org.easymock.tests2.UsageConstraintsTest.testFind":206,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":158,"org.easymock.tests.MockTypeTest.fromEasyMockClass":2,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":102,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":276,"org.easymock.tests.UsageExpectAndReturnTest.object":134,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":95,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":502,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":15,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":257,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":413,"org.easymock.tests.UsageTest.exactCallCountByLastCall":123,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":146,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":387,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":416,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":284,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":435,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":140,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":252,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":307,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":478,"org.easymock.tests.MockClassControlTest.testHashCode":358,"org.easymock.tests2.EasyMockSupportTest.testVerify":427,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":453,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":417,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":100,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":250,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":438,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":466,"org.easymock.tests.UsageVarargTest.varargCharAccepted":256,"org.easymock.tests2.CaptureTest.testCaptureMultiple":109,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":403,"org.easymock.tests2.UsageTest.openCallCountByLastCall":188,"org.easymock.tests.DefaultClassInstantiatorTest.object":404,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":181,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":249,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":10,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":454,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":341,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":163,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":498,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":477,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":9,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":64,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":368,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":340,"org.easymock.tests.CapturesMatcherTest.test":108,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":141,"org.easymock.tests.ReplayStateInvalidCallsTest.times":374,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":321,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":375,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":8,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":82,"org.easymock.tests2.UsageTest.resumeIfFailure":191,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":1,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":488,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":313,"org.easymock.tests2.StubTest.stubWithReturnValue":172,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":133,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":224,"org.easymock.tests2.SerializationTest.testAllMockedMethod":78,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":396,"org.easymock.samples.SupportTest.voteForRemovals":113,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":62,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":480,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":346,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":402,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":239,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":286,"org.easymock.tests.UsageExpectAndThrowTest.object":344,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":222,"org.easymock.tests2.DelegateToTest.testWrongClass":506,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":159,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":372,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":160,"org.easymock.tests.UsageStrictMockTest.range":49,"org.easymock.samples.ConstructorCalledMockTest.testTax":56,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":491,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":178,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":89,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":345,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":442,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":46,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":300,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":303,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":364,"org.easymock.tests2.CaptureTest.testCaptureNone":233,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":283,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":510,"org.easymock.tests.UsageUnorderedTest.message":51,"org.easymock.tests.UsageVerifyTest.twoReturns":43,"org.easymock.tests.UsageVarargTest.varargByteAccepted":261,"org.easymock.tests2.ThreadingTest.testThreadSafe":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":456,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":329,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":11,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":67,"org.easymock.tests2.CaptureTest.testCapture_2617107":240,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":267,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":400,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":289,"org.easymock.tests2.UsageConstraintsTest.any":212,"org.easymock.tests2.StubTest.stub":426,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":297,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":323,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":401,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":312,"org.easymock.tests.UsageExpectAndThrowTest.longType":337,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":408,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":296,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":433,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":34,"org.easymock.tests2.SerializationTest.testClass":77,"org.easymock.tests.LimitationsTest.mockNativeMethod":74,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":143,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":73,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":497,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":380,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":434,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":511,"org.easymock.tests2.NameTest.nameForMocksControl":19,"org.easymock.tests2.MockedExceptionTest.testMockedException":515,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":499,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":446,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":122,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":425,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":61,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":338,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":91,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":23,"org.easymock.tests.MockingTest.testNicePartialClassMocking":60,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":94,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":495,"org.easymock.tests2.CaptureTest.testCaptureLast":232,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":266,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":29,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":210,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":379,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":223,"org.easymock.tests.MockingTest.testTwoMocks":69,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":376,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":468,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":124,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":342,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":53,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":226,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":514,"org.easymock.samples.ExampleTest.removeNonExistingDocument":247,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":500,"org.easymock.tests.UsageStrictMockTest.differentMethods":145,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":294,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":479,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":513,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":406,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":199,"org.easymock.tests2.MockBuilderTest.testCreateMockString":25,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":357,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":447,"org.easymock.tests.UsageExpectAndThrowTest.floatType":336,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":218,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":444,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":105,"org.easymock.tests.UsageVerifyTest.twoThrows":42,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":81,"org.easymock.samples.ExampleTest.voteAgainstRemoval":116,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":391,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":281,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":65,"org.easymock.tests.LimitationsTest.privateConstructor":355,"org.easymock.tests2.UsageConstraintsTest.testNotNull":225,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":167,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":66,"org.easymock.tests2.UsageTest.defaultResetToNice":190,"org.easymock.samples.ExampleTest.voteAgainstRemovals":114,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":392,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":139,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":496,"org.easymock.tests.UsageVarargTest.differentLength":258,"org.easymock.tests2.CallbackTest.callback":103,"org.easymock.tests2.UsageConstraintsTest.equals":470,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":474,"org.easymock.tests.UsageTest.openCallCountByLastCall":121,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":202,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":288,"org.easymock.tests.UsageCallCountTest.tooFewCalls":327,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":90,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":305,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":512,"org.easymock.tests.UsageThrowableTest.throwCheckedException":164,"org.easymock.tests.MockingTest.testStrictClassMocking":270,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":28,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":287,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":37,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":27,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":299,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":196,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":107,"org.easymock.tests.ObjectMethodsTest.testHashCode":412,"org.easymock.tests2.NameTest.nameForNiceMock":18,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":201,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":378,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":373,"org.easymock.tests2.DependencyTest.testInterfaceMocking":182,"org.easymock.samples.ExampleTest.addDocument":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":457,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":461,"org.easymock.tests2.DelegateToTest.testStubDelegate":40,"org.easymock.tests2.AnswerTest.stubAnswer":106,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":144,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":464,"org.easymock.tests.UsageVarargTest.varargLongAccepted":260,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":390,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":142,"org.easymock.tests.UsageExpectAndReturnTest.floatType":126,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":76,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":57,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":484,"org.easymock.tests.UsageThrowableTest.noUpperLimit":414,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":220,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":309,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":203,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":487,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":493,"org.easymock.tests2.SerializationTest.test":195,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":405,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":125,"org.easymock.tests2.UsageConstraintsTest.testSame":208,"org.easymock.samples.SupportTest.addDocument":244,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":467,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":363,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":448,"org.easymock.tests.GenericTest.testPackageScope":71,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":418,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":386,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":483,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":273,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":361,"org.easymock.tests2.NameTest.nameForMock":16,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":136,"org.easymock.tests2.UsageStrictMockTest.differentMethods":194,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":475,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":128,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":348,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":411,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":171,"org.easymock.tests2.MockedExceptionTest.testRealException":516,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":6,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":492,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":393,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":193,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":148,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":301,"org.easymock.tests2.NameTest.nameForStrictMock":17,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":463,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":101,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":93,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":490,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":407,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":221,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":84,"org.easymock.tests2.UsageStrictMockTest.range":55,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":367,"org.easymock.tests2.UsageConstraintsTest.lessThan":227,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":481,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":389,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":452,"org.easymock.tests2.CaptureTest.testCaptureRightOne":235,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":509,"org.easymock.tests2.UsageConstraintsTest.testOr":209,"org.easymock.tests.UsageRangeTest.combination":168,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":30,"org.easymock.tests.UsageTest.wrongArguments":45,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":449,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":75,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":129,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":137,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":237,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":409,"org.easymock.tests.UsageVarargTest.varargShortAccepted":259,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":330,"org.easymock.tests2.UsageConstraintsTest.cmpTo":213,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":381,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":437,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":371,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":385,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":189,"org.easymock.tests2.CaptureTest.testCaptureFromStub":111,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":291,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":21,"org.easymock.tests.UsageTest.unexpectedCallWithArray":44,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":377,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":48,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":328,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":138,"org.easymock.tests2.UsageConstraintsTest.constraints":204,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":278,"org.easymock.samples.ExampleTest.addAndChangeDocument":248,"org.easymock.tests2.ConstraintsToStringTest.notToString":241,"org.easymock.tests.UsageStrictMockTest.testVerify":280,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":243,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":277,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":317,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":494,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":153,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":97,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":130,"org.easymock.tests.LimitationsTest.abstractClass":354,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":154,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":150,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":14,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":253}}]
