[{"transplant":{"position":"org.easymock.EasyMock:1708","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"failures":[0,1,2,3],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:99","failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,0,113,114,115,116,117,118,1,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[11,173,94,174,175,176,177,178,179,180],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[181,182,183,184,185,186],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[187,72,188,74,75,189,190,76,78,191,79,192,81],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[11,173,94,174,175,176,177,178,179,180],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:256","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"));\n} ","type":"CtIfImpl"},"failures":[193,194,195],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.InstanceOf:40","sourceCode":"java.lang.StringBuffer.append(((\"isA(\" + (java.lang.Class<?>.getName())) + \")\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[196],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:25","sourceCode":"new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:221","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[94,95,197],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:138","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[198,199,200],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.EasyMock:1964","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[50,201,64,68],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1848","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[202,203,9,204,204,205,205,206,207,10,11,173,15,16,17,18,20,21,208,209,210,211,212,36,213,214,37,215,216,217,218,219,220,221,222,223,38,224,225,226,227,228,39,229,230,94,197,231,232,233,234,235,236,237,238,239,98,240,241,99,242,100,101,180,243,102,244,245,246,103,104,106,107,108,247,109,248,249,250,110,111,112,251,252,253,1,254,119,255,256,257,258,259,132,260,261,262,263,264,3,170,171,172,265,266,267,268,269,270,271,272,273,274,275,276,277,198,278,279],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:82","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])));\n} ","type":"CtIfImpl"},"failures":[4,280,5,6,7,281,8,9,204,204,205,205,206,207,10,282,11,12,283,13,14,15,16,17,18,19,20,21,22,284,285,23,286,24,25,287,288,289,290,291,292,26,27,28,293,29,294,30,31,32,295,296,33,34,297,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,201,55,56,57,58,59,60,61,62,63,64,65,66,298,67,68,69,70,299,300,301,302,303,71,304,305,306,72,73,188,74,75,189,190,76,77,78,79,192,80,81,82,83,84,85,86,87,88,89,90,91,92,93,307,94,95,96,308,309,310,97,311,238,98,240,99,242,100,101,243,102,246,103,104,105,106,107,108,247,109,250,110,111,112,252,0,113,114,312,313,314,315,115,116,117,118,316,317,318,1,119,255,256,319,320,257,321,322,2,323,324,325,326,120,121,327,122,328,123,196,329,330,183,124,331,125,126,332,127,128,184,333,129,130,334,335,131,132,336,337,338,339,340,341,261,342,343,344,345,346,262,347,348,349,350,351,133,352,134,135,353,354,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,355,356,357,358,359,162,360,361,362,363,163,364,164,165,166,167,168,169,193,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,194,386,3,170,171,172,387,266,268,269,270,271,272,273,195,388,389,390,391,392,393,394,395,396,397],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:178","failures":[101,256],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Contains:40","failures":[398],"status":-1,"binaryOperator":"(\"contains(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[4,280,5,6,399,7,400,281,206,207,10,282,11,13,16,17,20,21,285,401,23,286,24,25,287,402,288,289,290,291,292,26,27,28,293,29,294,30,31,32,295,296,33,34,297,35,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,298,67,68,69,70,299,403,404,405,300,301,303,71,304,306,72,73,188,74,75,189,190,76,77,78,79,192,80,81,94,95,197,96,310,97,311,238,98,99,242,243,102,246,103,104,105,106,107,108,247,109,250,110,111,112,0,113,114,312,313,314,315,115,116,117,118,1,254,2,323,324,325,326,120,121,327,122,328,123,330,406,183,124,331,125,126,332,407,127,128,184,333,129,130,334,335,131,132,336,337,338,339,340,341,261,343,344,345,408,409,410,411,412,413,414,415,416,417,418,419,347,348,349,350,133,352,134,135,353,354,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,360,361,420,421,422,423,424,425,426,427,428,362,163,364,164,165,166,167,168,169,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,170,171,172,429,430,387,431,432,433,434,435,436,266,267,268,269,270,271,272,273,388,389,390,391,392,274,397],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:77","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:80","failures":[9,94,238,239,98,240,99,242,100,101,243,102,244,245,246,247,119,256,257],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[181,182,183,184,185,186],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[253,255],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:32","sourceCode":"new java.util.concurrent.locks.ReentrantLock()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[42],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:189","failures":[285,286,24,25,26,293,294,295,296,34,47,102,246,327,328,123,330,183,331,125,126,127,184,333,334,335,131],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[200],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[437,4,280,5,6,399,7,281,438,202,203,439,8,9,204,204,205,205,206,207,10,282,11,12,13,14,15,16,17,18,19,20,21,22,285,401,23,286,24,25,287,288,289,290,291,292,26,27,28,293,29,294,30,31,32,295,296,33,34,297,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,299,403,404,405,300,301,303,71,304,306,72,73,188,74,75,189,190,76,77,78,79,192,80,81,82,83,84,85,86,87,88,89,90,91,92,93,307,94,95,197,96,310,97,311,238,99,242,100,101,102,246,103,104,105,106,107,108,109,250,111,113,114,312,313,314,315,115,116,117,118,1,254,2,323,324,325,326,120,121,327,122,328,123,330,406,183,124,331,125,126,332,407,127,128,184,333,129,130,334,335,131,132,336,337,338,339,340,341,261,409,411,412,414,417,419,133,134,135,353,354,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,360,361,420,421,422,423,425,426,427,428,362,163,364,164,165,166,167,168,169,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,170,171,172,429,430,387,431,432,433,267,388,389,390,391,392],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[32],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.EasyMock:1235","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[53,72,188,79],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[181,183],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.MockBuilder:80","failures":[9,94,238,239,98,240,99,242,100,101,243,102,245,246,247,119,256,257],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:273","sourceCode":"if ((java.lang.Class<?>.getSigners()) != null) {\n    net.sf.cglib.proxy.Enhancer.setNamingPolicy(org.easymock.internal.ClassProxyFactory.net.sf.cglib.core.NamingPolicy);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[47,48,50,52,53,201,64,68,72,188,79],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[204,204,205,205,23,35,45,46,49,50,51,52,57,59,60,62,63,68,69,70,192,120,121,124,134,135,136,137,138,139,140,141,162,388,389,390,391,392],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[437,4,280,5,6,399,7,281,438,202,203,439,8,9,204,204,205,205,206,207,10,282,11,12,13,14,15,16,17,18,19,20,21,22,285,401,23,286,24,25,287,292,26,27,28,293,29,294,30,31,32,295,296,33,34,297,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,201,55,56,57,58,59,60,61,62,63,64,65,66,298,67,68,69,70,299,403,404,405,300,301,302,303,71,304,305,306,72,73,188,74,75,189,190,76,77,78,79,192,80,81,82,83,84,85,86,87,88,89,90,91,92,93,307,94,95,197,96,308,309,310,97,311,238,98,99,100,101,102,103,104,105,106,107,108,109,250,110,111,112,0,113,114,115,116,117,118,316,317,318,1,254,119,120,121,327,122,328,123,196,329,330,406,183,124,331,125,126,332,407,127,128,184,333,129,130,334,335,131,132,336,337,338,339,340,341,261,347,348,349,350,351,133,134,135,353,354,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,355,356,357,358,359,162,360,361,420,421,422,423,424,425,426,427,428,362,163,364,164,165,166,167,168,169,193,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,194,386,3,170,171,172,429,430,387,431,432,433,435,436,195,388,389,390,391,392,393,394,395,396,397],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"failures":[440,45,62,65],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"failures":[198,200],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.EasyMock:1349","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:183","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[226],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[47,48,53,54],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[47,48,50,52,53,201,64,68,72,188,79],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:90","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:183","sourceCode":"throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" seems to have vanished\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":48,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":127,"org.easymock.tests2.UsageTest.argumentsOrdered":296,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":92,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":284,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":294,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":437,"org.easymock.tests2.DelegateToTest.testReturnException":303,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":337,"org.easymock.tests.MockingTest.testPartialClassMocking":170,"org.easymock.tests.MockClassControlTest.testToString":268,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":195,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":218,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":37,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":365,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":14,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":174,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":54,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":134,"org.easymock.tests2.UsageTest.wrongArguments":293,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":314,"org.easymock.samples.ExampleTest.answerVsDelegate":280,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":257,"org.easymock.tests2.UsageConstraintsTest.testNull":50,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":106,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":91,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":273,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_NotFound":231,"org.easymock.tests2.CaptureTest.testPrimitive":74,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":136,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":384,"org.easymock.tests.UsageTest.moreThanOneArgument":128,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":105,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":390,"org.easymock.tests.UsageTest.argumentsOrdered":335,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":355,"org.easymock.tests.UsageVarargTest.varargIntAccepted":421,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":137,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":238,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":242,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":141,"org.easymock.tests.ReplayStateInvalidUsageTest.times":416,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":12,"org.easymock.tests2.AnswerTest.answer":96,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":201,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":291,"org.easymock.tests2.CaptureTest.testAnd":72,"org.easymock.tests2.UsageTest.strictResetToDefault":27,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":250,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":389,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":117,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":86,"org.easymock.tests2.DelegateToTest.testDelegate":306,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":359,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":380,"org.easymock.tests.LimitationsTest.mockFinalMethod":260,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":340,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":326,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":396,"org.easymock.tests2.CaptureTest.testCapture1_2446744":75,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":378,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":289,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":410,"org.easymock.tests.UsageThrowableTest.throwError":163,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":320,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":392,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":230,"org.easymock.samples.PartialClassMockTest.testGetArea":9,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":411,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":138,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":194,"org.easymock.tests2.UsageTest.niceToStrict":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":219,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":262,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":366,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":99,"org.easymock.tests2.MockBuilderTest.testCreateMock":243,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":226,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":181,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":374,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":87,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":318,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":429,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":312,"org.easymock.tests.UsageOverloadedMethodTest.overloading":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":228,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":59,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":350,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":153,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":0,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":58,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":199,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":78,"org.easymock.tests2.EasyMockSupportClassTest.testAll":36,"org.easymock.tests.MockClassControlTest.testEquals":272,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":254,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":382,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":232,"org.easymock.tests2.CaptureTest.testCaptureAll":73,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":290,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":324,"org.easymock.tests.MockNameTest.defaultName":363,"org.easymock.tests2.UsageConstraintsTest.testMatches":60,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":408,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":391,"org.easymock.samples.ExampleTest.voteForRemovals":7,"org.easymock.tests.UsageVarargTest.allKinds":362,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":122,"org.easymock.samples.BasicClassMockTest.testPrintContent":203,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":325,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":168,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":285,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":305,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":341,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":178,"org.easymock.tests2.UsageConstraintsTest.greaterThan":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":213,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":116,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":112,"org.easymock.samples.ExampleTest.voteForRemoval":5,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":279,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":41,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":251,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":244,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":321,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":247,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":26,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":261,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":180,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":84,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":211,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":336,"org.easymock.tests2.CaptureTest.testCaptureFirst":81,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":302,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":85,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":34,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":352,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":149,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":43,"org.easymock.tests2.UsageTest.moreThanOneArgument":28,"org.easymock.tests2.CaptureTest.testCapture2_2446744":80,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":102,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":428,"org.easymock.tests.GenericTest.testBridgedEquals":255,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":435,"org.easymock.tests.UsageExpectAndReturnTest.longType":145,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":2,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":82,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":245,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":383,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":193,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":298,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":381,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":394,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":388,"org.easymock.tests.UsageCallCountTest.tooManyCalls":436,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":387,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":227,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":150,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":370,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":167,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":16,"org.easymock.tests.MockingTest.testNiceClassMocking":265,"org.easymock.tests.MockingTest.testClassMocking":264,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":430,"org.easymock.tests2.UsageConstraintsTest.testContains":57,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":239,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":10,"org.easymock.tests2.UsageConstraintsTest.testFind":49,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":114,"org.easymock.tests.MockTypeTest.fromEasyMockClass":319,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":301,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":330,"org.easymock.tests.UsageExpectAndReturnTest.object":152,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":109,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":90,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":423,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":175,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":345,"org.easymock.tests.UsageTest.exactCallCountByLastCall":131,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":162,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":356,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":173,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":158,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":361,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":349,"org.easymock.tests.MockClassControlTest.testHashCode":271,"org.easymock.tests2.EasyMockSupportTest.testVerify":307,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":221,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":357,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":317,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":347,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":288,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":402,"org.easymock.tests.UsageVarargTest.varargCharAccepted":422,"org.easymock.tests2.CaptureTest.testCaptureMultiple":187,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":401,"org.easymock.tests2.UsageTest.openCallCountByLastCall":30,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":93,"org.easymock.tests.DefaultClassInstantiatorTest.object":274,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":316,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":222,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":372,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":165,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":236,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":110,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":270,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":371,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":159,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":39,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":269,"org.easymock.tests2.UsageTest.resumeIfFailure":33,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":256,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":339,"org.easymock.tests2.StubTest.stubWithReturnValue":35,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":179,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":151,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":67,"org.easymock.tests2.SerializationTest.testAllMockedMethod":197,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":196,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":182,"org.easymock.samples.SupportTest.voteForRemovals":8,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":253,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":377,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":329,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":308,"org.easymock.tests.UsageExpectAndThrowTest.object":375,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":65,"org.easymock.tests2.DelegateToTest.testWrongClass":304,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":120,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":121,"org.easymock.tests.UsageStrictMockTest.range":125,"org.easymock.samples.ConstructorCalledMockTest.testTax":204,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":89,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":15,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":376,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":100,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":210,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":334,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":313,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":185,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":386,"org.easymock.tests2.CaptureTest.testCaptureNone":77,"org.easymock.tests.UsageUnorderedTest.message":327,"org.easymock.tests.UsageVerifyTest.twoReturns":123,"org.easymock.tests.UsageVarargTest.varargByteAccepted":427,"org.easymock.tests2.ThreadingTest.testThreadSafe":40,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":224,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":433,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":202,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":346,"org.easymock.tests2.CaptureTest.testCapture_2617107":188,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":354,"org.easymock.tests2.UsageConstraintsTest.any":55,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":415,"org.easymock.tests2.StubTest.stub":297,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":395,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":338,"org.easymock.tests.UsageExpectAndThrowTest.longType":368,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":198,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":414,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":286,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":22,"org.easymock.tests2.SerializationTest.testClass":94,"org.easymock.tests.LimitationsTest.mockNativeMethod":132,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":161,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":119,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":235,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":287,"org.easymock.tests2.NameTest.nameForMocksControl":405,"org.easymock.tests2.MockedExceptionTest.testMockedException":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":214,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":130,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":172,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":369,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":103,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":101,"org.easymock.tests.MockingTest.testNicePartialClassMocking":171,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":108,"org.easymock.tests2.CaptureTest.testCaptureLast":76,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":397,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":21,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":53,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":66,"org.easymock.tests.MockingTest.testTwoMocks":3,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":142,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":373,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":295,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":69,"org.easymock.samples.ExampleTest.removeNonExistingDocument":400,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":412,"org.easymock.tests.UsageStrictMockTest.differentMethods":126,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":276,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":42,"org.easymock.tests2.MockBuilderTest.testCreateMockString":246,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":266,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":215,"org.easymock.tests.UsageExpectAndThrowTest.floatType":367,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":212,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":310,"org.easymock.tests.UsageVerifyTest.twoThrows":328,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":38,"org.easymock.samples.ExampleTest.voteAgainstRemoval":6,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":385,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":111,"org.easymock.tests.LimitationsTest.privateConstructor":259,"org.easymock.tests2.UsageConstraintsTest.testNotNull":68,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":169,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":206,"org.easymock.tests2.UsageTest.defaultResetToNice":32,"org.easymock.samples.ExampleTest.voteAgainstRemovals":4,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":157,"org.easymock.tests.UsageVarargTest.differentLength":424,"org.easymock.tests2.CallbackTest.callback":292,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":248,"org.easymock.tests.UsageTest.openCallCountByLastCall":129,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":45,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":353,"org.easymock.tests.UsageCallCountTest.tooFewCalls":431,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":18,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":315,"org.easymock.tests.UsageThrowableTest.throwCheckedException":166,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":186,"org.easymock.tests.MockingTest.testStrictClassMocking":263,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":20,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":360,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":17,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":283,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":417,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":19,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":311,"org.easymock.tests.ObjectMethodsTest.testHashCode":344,"org.easymock.tests2.NameTest.nameForNiceMock":404,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":44,"org.easymock.tests2.DependencyTest.testInterfaceMocking":13,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":176,"org.easymock.samples.ExampleTest.addDocument":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":225,"org.easymock.tests2.DelegateToTest.testStubDelegate":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":229,"org.easymock.tests2.AnswerTest.stubAnswer":97,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":124,"org.easymock.tests.UsageVarargTest.varargLongAccepted":426,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":332,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":160,"org.easymock.tests.UsageExpectAndReturnTest.floatType":144,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":11,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":205,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":63,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":351,"org.easymock.tests.UsageThrowableTest.noUpperLimit":364,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":46,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":208,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":189,"org.easymock.tests2.SerializationTest.test":95,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":200,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":275,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":143,"org.easymock.tests2.UsageConstraintsTest.testSame":51,"org.easymock.samples.SupportTest.addDocument":439,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":413,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":216,"org.easymock.tests.GenericTest.testPackageScope":1,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":358,"org.easymock.tests2.NameTest.nameForMock":299,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":154,"org.easymock.tests2.UsageStrictMockTest.differentMethods":25,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":249,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":146,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":379,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":342,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":118,"org.easymock.tests2.MockedExceptionTest.testRealException":282,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":322,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":23,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":419,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":135,"org.easymock.tests2.NameTest.nameForStrictMock":403,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":241,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":300,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":107,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":209,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":64,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":277,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":98,"org.easymock.tests2.UsageStrictMockTest.range":24,"org.easymock.tests2.UsageConstraintsTest.lessThan":70,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":233,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":237,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":177,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":83,"org.easymock.tests2.CaptureTest.testCaptureRightOne":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":220,"org.easymock.tests2.UsageConstraintsTest.testOr":52,"org.easymock.tests.UsageRangeTest.combination":115,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":104,"org.easymock.tests.UsageTest.wrongArguments":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":217,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":267,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":147,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":155,"org.easymock.tests.UsageVarargTest.varargShortAccepted":425,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":278,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":434,"org.easymock.tests2.UsageConstraintsTest.cmpTo":56,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":309,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":31,"org.easymock.tests2.CaptureTest.testCaptureFromStub":192,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":409,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":240,"org.easymock.tests.UsageTest.unexpectedCallWithArray":184,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":183,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":432,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":156,"org.easymock.tests2.CaptureTest.testCapture":191,"org.easymock.tests2.UsageConstraintsTest.constraints":47,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":331,"org.easymock.samples.ExampleTest.addAndChangeDocument":281,"org.easymock.tests.UsageStrictMockTest.testVerify":407,"org.easymock.tests2.ConstraintsToStringTest.containsToString":398,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":438,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":406,"org.easymock.tests2.CompareToTest.testGreateThan":440,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":323,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":190,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":139,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":234,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":148,"org.easymock.tests.LimitationsTest.abstractClass":258,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":140,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":133,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":420,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":88}}]
