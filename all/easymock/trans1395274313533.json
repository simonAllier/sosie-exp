[{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[2,3,4,5,6,7],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:336","sourceCode":"org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[8],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"failures":[9,10],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:32","sourceCode":"new java.util.ArrayList<java.lang.reflect.Field>(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,5,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,0,1,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ErrorMessage:51","failures":[97,98,99,46,87],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:206","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[100,101,102,103,104,105,106,107,108,109],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[110,111],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[112],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[113,2,11,12,13,114,115,116,19,117,30,31,118,36,98,99,42,5,45,46,47,119,120,121,62,122,63,64,65,123,124,66,125,68,126,127,128,129,130,131,72,132,133,134,75,83,86,87,88],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[135,136,81],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"failures":[137],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[2,3,4,5,6,7],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[138,139,140,141,100,101,142,143,144,145,107,108,109,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:110","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[174,175],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:70","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    return null;\n} ","type":"CtIfImpl"},"failures":[176,177,178,179,180,113,181,2,11,182,183,12,13,114,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,14,15,16,17,18,19,20,21,22,23,24,25,26,213,214,27,28,29,117,30,31,215,216,217,218,219,220,118,221,222,223,224,32,225,174,33,226,227,228,229,230,34,35,36,37,231,38,39,232,233,98,99,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,40,255,256,257,258,259,260,261,262,263,264,265,266,41,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,42,43,5,44,45,46,47,48,49,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,50,321,51,52,322,53,54,55,56,323,57,138,138,139,139,58,59,60,61,121,324,325,62,122,63,326,327,328,64,65,123,124,329,66,67,330,331,332,125,68,126,333,334,335,127,336,337,338,339,340,341,135,128,137,129,342,343,130,344,345,346,347,348,349,350,1,351,352,353,354,355,131,356,357,112,358,359,69,70,360,361,362,363,9,10,71,364,365,366,367,368,369,370,371,372,175,373,374,375,376,8,377,378,72,379,380,381,382,383,384,385,107,386,73,108,387,132,388,74,389,133,134,390,391,75,76,77,78,79,80,81,82,149,152,162,168,392,83,84,85,86,87,88,89,393,394,395,396,171,397,398,399,172,400,90,91,401,402,92,93,94,95,403,404,405,406,96],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"o":"actual","this":"actual"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:185","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:195","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"parameterTypes":"candidateParameters","i":"i"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1107","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[108,109],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[113,183,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,174,230,39,98,254,255,256,257,258,259,260,272,407,121,327,394],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:233","sourceCode":"if ((org.easymock.internal.ExpectedInvocation) == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[408,409,410,407,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[429],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:946","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[176,177,178,179,180,113,181,11,182,183,12,13,114,185,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,14,15,16,17,18,19,20,21,22,23,24,25,26,213,214,27,28,29,30,31,215,216,217,218,219,220,118,221,222,223,224,32,225,174,33,226,227,228,229,230,34,35,36,37,231,38,39,232,233,98,99,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,40,255,256,257,258,259,260,261,266,41,267,268,269,270,271,272,273,274,288,289,42,43,5,44,45,46,47,48,49,297,298,299,300,301,302,303,304,305,306,307,316,317,318,319,320,50,321,51,52,322,53,54,55,56,57,138,138,139,139,58,59,60,61,121,324,325,62,122,63,326,327,328,64,65,123,124,66,67,331,332,68,333,334,335,127,336,337,338,339,341,135,128,137,129,342,343,130,344,345,346,347,348,349,350,0,1,351,352,353,354,355,131,356,357,112,358,359,69,70,360,361,362,363,9,10,71,364,365,366,370,371,372,175,373,374,375,376,8,377,378,72,379,380,381,382,383,384,385,107,386,73,108,387,132,388,74,389,133,134,390,391,75,76,77,78,79,80,81,82,149,152,162,168,392,83,84,85,86,87,88,89,393,394,395,396,171,397,398,399,172,400,90,91,401,402,92,93,94,95,403,404,405,406,96],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[63,338,131],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.EasyMock:1976","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[113,2,11,12,13,114,115,116,19,117,30,31,118,36,98,99,42,5,45,46,47,119,120,121,62,122,63,64,65,123,124,66,125,68,126,127,128,129,130,131,72,132,133,134,75,83,86,87,88],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:42","sourceCode":"throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()","type":"CtThrowImpl"},"failures":[34],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1205","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[289],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[430,431,432],"status":-1,"binaryOperator":"java.lang.String == null","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":344,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":113,"org.easymock.tests2.UsageTest.argumentsOrdered":65,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":417,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":63,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":51,"org.easymock.tests2.DelegateToTest.testReturnException":381,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":269,"org.easymock.tests.MockingTest.testPartialClassMocking":218,"org.easymock.tests.MockClassControlTest.testToString":310,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":185,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":425,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":156,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":152,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":193,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":334,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":102,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":350,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":37,"org.easymock.tests2.UsageTest.wrongArguments":62,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":292,"org.easymock.samples.ExampleTest.answerVsDelegate":322,"org.easymock.tests2.UsageConstraintsTest.testNull":346,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":337,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":75,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":315,"org.easymock.tests2.CaptureTest.testPrimitive":401,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":232,"org.easymock.tests.UsageTest.moreThanOneArgument":181,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":212,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":336,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":178,"org.easymock.tests.UsageTest.argumentsOrdered":13,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":303,"org.easymock.tests.UsageVarargTest.varargIntAccepted":16,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":422,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":316,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":329,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":330,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":410,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":320,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":392,"org.easymock.tests.ReplayStateInvalidUsageTest.times":283,"org.easymock.tests2.AnswerTest.answer":363,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":423,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":369,"org.easymock.tests2.CaptureTest.testAnd":400,"org.easymock.tests2.UsageTest.strictResetToDefault":324,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":141,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":135,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":177,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":389,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":222,"org.easymock.tests2.DelegateToTest.testDelegate":385,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":307,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":208,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":272,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":265,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":34,"org.easymock.tests2.CaptureTest.testCapture1_2446744":402,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":430,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":206,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":367,"org.easymock.tests.UsageThrowableTest.throwError":254,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":277,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":120,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":180,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":170,"org.easymock.samples.PartialClassMockTest.testGetArea":321,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":278,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":317,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":157,"org.easymock.tests2.UsageTest.niceToStrict":122,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":194,"org.easymock.tests2.ThreadingTest.testChangeDefault":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":408,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":67,"org.easymock.tests2.MockBuilderTest.testCreateMock":125,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":165,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":6,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":202,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":133,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":192,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":26,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":290,"org.easymock.tests.UsageOverloadedMethodTest.overloading":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":161,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":174,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":354,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":228,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":245,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":353,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":403,"org.easymock.tests2.EasyMockSupportClassTest.testAll":149,"org.easymock.tests.MockClassControlTest.testEquals":314,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":41,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":210,"org.easymock.tests2.CaptureTest.testCaptureAll":90,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":263,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":368,"org.easymock.tests2.UsageConstraintsTest.testMatches":355,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":179,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":275,"org.easymock.samples.ExampleTest.voteForRemovals":56,"org.easymock.tests.UsageVarargTest.allKinds":24,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":233,"org.easymock.samples.BasicClassMockTest.testPrintContent":59,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":264,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":259,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":83,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":384,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":273,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":106,"org.easymock.tests2.UsageConstraintsTest.greaterThan":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":150,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":221,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":129,"org.easymock.samples.ExampleTest.voteForRemoval":53,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":376,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":340,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":121,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":25,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":101,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":414,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":388,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":255,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":147,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":268,"org.easymock.tests2.CaptureTest.testCaptureFirst":96,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":380,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":413,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":74,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":124,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":227,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":241,"org.easymock.tests2.CaptureTest.testCapture2_2446744":406,"org.easymock.tests2.UsageTest.moreThanOneArgument":325,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":377,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":424,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":68,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":23,"org.easymock.tests.GenericTest.testBridgedEquals":111,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":30,"org.easymock.tests.UsageExpectAndReturnTest.longType":237,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":387,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":261,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":211,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":69,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":302,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":209,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":188,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":176,"org.easymock.tests.UsageCallCountTest.tooManyCalls":31,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":166,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":242,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":198,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":258,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":396,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":213,"org.easymock.tests2.UsageConstraintsTest.testContains":352,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":372,"org.easymock.tests2.UsageConstraintsTest.testFind":345,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":230,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":42,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":374,"org.easymock.tests.UsageExpectAndReturnTest.object":244,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":341,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":391,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":103,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":18,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":296,"org.easymock.tests.UsageTest.exactCallCountByLastCall":114,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":215,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":412,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":184,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":304,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":109,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":14,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":250,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":225,"org.easymock.tests.MockClassControlTest.testHashCode":313,"org.easymock.tests2.EasyMockSupportTest.testVerify":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":159,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":305,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":191,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":224,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":115,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":366,"org.easymock.tests.UsageVarargTest.varargCharAccepted":17,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":84,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":428,"org.easymock.tests2.UsageTest.openCallCountByLastCall":326,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":77,"org.easymock.tests.DefaultClassInstantiatorTest.object":287,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":190,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":294,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":116,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":160,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":200,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":256,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":128,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":312,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":199,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":251,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":168,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":311,"org.easymock.tests2.UsageTest.resumeIfFailure":123,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":271,"org.easymock.tests2.StubTest.stubWithReturnValue":394,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":100,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":70,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":243,"org.easymock.tests2.SerializationTest.testAllMockedMethod":73,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":288,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":7,"org.easymock.samples.SupportTest.voteForRemovals":61,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":110,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":205,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":289,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":9,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":186,"org.easymock.tests.UsageExpectAndThrowTest.object":203,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":358,"org.easymock.tests2.DelegateToTest.testWrongClass":383,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":297,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":298,"org.easymock.samples.ConstructorCalledMockTest.testTax":138,"org.easymock.tests.UsageStrictMockTest.range":46,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":390,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":395,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":204,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":146,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":12,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":285,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":291,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":3,"org.easymock.tests2.CaptureTest.testCaptureNone":95,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":301,"org.easymock.tests.UsageUnorderedTest.message":36,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":119,"org.easymock.tests.UsageVerifyTest.twoReturns":99,"org.easymock.tests.UsageVarargTest.varargByteAccepted":22,"org.easymock.tests2.ThreadingTest.testThreadSafe":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":163,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":29,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":58,"org.easymock.tests2.CaptureTest.testCapture_2617107":91,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":429,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":426,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":39,"org.easymock.tests2.UsageConstraintsTest.any":1,"org.easymock.tests2.StubTest.stub":393,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":282,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":427,"org.easymock.tests.UsageExpectAndThrowTest.longType":196,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":270,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":281,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":86,"org.easymock.tests2.SerializationTest.testClass":107,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":379,"org.easymock.tests.LimitationsTest.mockNativeMethod":274,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":253,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":267,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":89,"org.easymock.tests2.NameTest.nameForMocksControl":82,"org.easymock.tests2.MockedExceptionTest.testMockedException":371,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":151,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":183,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":197,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":220,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":335,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":332,"org.easymock.tests.MockingTest.testNicePartialClassMocking":219,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":339,"org.easymock.tests2.CaptureTest.testCaptureLast":94,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":35,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":172,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":349,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":359,"org.easymock.tests.MockingTest.testTwoMocks":217,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":173,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":234,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":201,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":64,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":361,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":431,"org.easymock.samples.ExampleTest.removeNonExistingDocument":323,"org.easymock.tests.UsageStrictMockTest.differentMethods":47,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":279,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":8,"org.easymock.tests2.MockBuilderTest.testCreateMockString":126,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":153,"org.easymock.tests.UsageExpectAndThrowTest.floatType":195,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":148,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":71,"org.easymock.tests.UsageVerifyTest.twoThrows":98,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":162,"org.easymock.samples.ExampleTest.voteAgainstRemoval":54,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":418,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":299,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":137,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":145,"org.easymock.tests2.UsageConstraintsTest.testNotNull":360,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":260,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":370,"org.easymock.tests2.UsageTest.defaultResetToNice":328,"org.easymock.samples.ExampleTest.voteAgainstRemovals":52,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":419,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":249,"org.easymock.tests.UsageVarargTest.differentLength":19,"org.easymock.tests2.CallbackTest.callback":72,"org.easymock.tests.UsageTest.openCallCountByLastCall":182,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":342,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":38,"org.easymock.tests.UsageCallCountTest.tooFewCalls":27,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":397,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":293,"org.easymock.tests.UsageThrowableTest.throwCheckedException":257,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":4,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":399,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":216,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":171,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":284,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":398,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":365,"org.easymock.tests.ObjectMethodsTest.testHashCode":295,"org.easymock.tests2.NameTest.nameForNiceMock":81,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":378,"org.easymock.tests2.DependencyTest.testInterfaceMocking":333,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":104,"org.easymock.samples.ExampleTest.addDocument":55,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":169,"org.easymock.tests2.DelegateToTest.testStubDelegate":382,"org.easymock.tests2.AnswerTest.stubAnswer":364,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":44,"org.easymock.tests.UsageVarargTest.varargLongAccepted":21,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":48,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":416,"org.easymock.tests.UsageExpectAndReturnTest.floatType":236,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":252,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":108,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":139,"org.easymock.tests.UsageThrowableTest.noUpperLimit":40,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":33,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":357,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":343,"org.easymock.tests2.SerializationTest.test":386,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":92,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":235,"org.easymock.tests2.UsageConstraintsTest.testSame":347,"org.easymock.samples.SupportTest.addDocument":60,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":280,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":154,"org.easymock.tests.GenericTest.testPackageScope":266,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":411,"org.easymock.tests2.NameTest.nameForMock":79,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":246,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":143,"org.easymock.tests2.UsageStrictMockTest.differentMethods":88,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":238,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":207,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":223,"org.easymock.tests2.MockedExceptionTest.testRealException":175,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":421,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":420,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":85,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":231,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":286,"org.easymock.tests2.NameTest.nameForStrictMock":80,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":373,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":338,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":112,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":66,"org.easymock.tests2.UsageStrictMockTest.range":87,"org.easymock.tests2.UsageConstraintsTest.lessThan":362,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":415,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":132,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":105,"org.easymock.tests2.CaptureTest.testCaptureRightOne":404,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":158,"org.easymock.tests2.UsageConstraintsTest.testOr":348,"org.easymock.tests.UsageRangeTest.combination":118,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":127,"org.easymock.tests.UsageTest.wrongArguments":11,"org.easymock.tests2.MockBuilderTest.testWithConstructor":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":155,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":309,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":239,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":409,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":247,"org.easymock.tests.UsageVarargTest.varargShortAccepted":20,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":117,"org.easymock.tests2.UsageConstraintsTest.cmpTo":351,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":407,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":327,"org.easymock.tests2.CaptureTest.testCaptureFromStub":405,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":276,"org.easymock.tests.UsageTest.unexpectedCallWithArray":2,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":5,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":28,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":142,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":248,"org.easymock.tests2.UsageConstraintsTest.constraints":130,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":45,"org.easymock.samples.ExampleTest.addAndChangeDocument":57,"org.easymock.tests.UsageStrictMockTest.testVerify":49,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":50,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":43,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":262,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":93,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":318,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":240,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":226,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":319,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":134,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":97,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":15}}]
