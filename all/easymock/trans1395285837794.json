[{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[0,1,2,3],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,0,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,4,5,118,6,7,8,9,10,119,11,120,12,121,122,13,123,124,125,126,127,15,16,17,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,18,152,153,154,19,155,20,156,157,21,22,23,24,25,158,159,160,161,162,163,164,165,166,167,168,169,170,171,26,27,172,173,174,175,176,177,178,179,28,29,30,31,32,180,33,34,35,36,37,181,182,183,184,38,185,186,187,188,189,190,39,191,192,193,194,195,196,197,198,199,40,200,201,202,203,204,205,206,41,42,207,43,44,208,45,46,47,209,48,49,50,210,51,52,53,54,55,56,211,212,57,213,58,214,215,59,216,217,218,219,220,60,221,222,223,61,62,63,64,65,66,67,224,225,226,227,228,229,230,231,232,233,234,235,236,68,237,69,238,239,70,0,71,240,241,72,1,242,73,243,244,74,75,76,77,78,79,245,2,246,247,248,80,249,250,251,252,253,254,255,256,81,82,83,84,257,85,86,258,259,87,88,89,260,261,262,263,264,90,265,266,91,92,267,268,269,93,94,270,271,272,273,274,275,276,277,278,279,280,281,282,95,283,284,285,286,96,287,288,289,290,291,292,293,294,295],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:747","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:305","sourceCode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","type":"CtReturnImpl"},"failures":[14,296,297],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:49","sourceCode":"org.easymock.internal.Injection.getAnnotation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:231","sourceCode":"if (org.easymock.internal.InjectionTarget.accepts(org.easymock.internal.Injection)) {\n    if (org.easymock.internal.Injection != null) {\n        throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks can be assigned to \\'%s\\': %s and %s\", org.easymock.internal.InjectionTarget.getTargetField(), org.easymock.internal.Injection.getMock(), org.easymock.internal.Injection.getMock()));\n    } \n    org.easymock.internal.Injection = org.easymock.internal.Injection;\n} ","type":"CtIfImpl"},"failures":[204,205,298,299,300,301],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion()","type":"CtInvocationImpl"},"failures":[302,303],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[304,305],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[306,261,262,263],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[118,307,308,168,309,310],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:91","sourceCode":"java.lang.StringBuilder.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[311,38],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"buffer"}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[97,312,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,4,5,118,6,7,8,9,10,313,314,315,316,317,318,319,119,11,120,12,122,13,14,296,15,16,17,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,320,321,322,150,151,323,18,324,152,153,325,154,19,155,20,156,157,21,22,23,24,25,158,159,326,160,161,162,163,164,165,304,327,328,166,167,168,169,170,171,26,27,172,329,173,174,175,28,29,30,31,32,180,33,34,35,36,37,297,330,331,181,332,182,183,333,334,38,185,186,187,188,189,190,39,191,192,193,194,195,196,197,198,199,305,335,336,40,200,201,202,202,203,203,204,205,206,41,42,207,43,44,208,45,337,46,47,209,48,49,50,210,51,52,53,54,55,56,211,212,57,213,58,214,215,59,216,217,218,219,220,60,221,222,223,338,339,340,341,61,62,63,64,65,66,67,224,229,230,231,232,233,234,235,236,68,237,69,238,239,70,0,342,71,240,241,72,1,242,73,243,244,74,75,76,77,78,79,245,2,343,246,247,248,344,80,249,250,251,252,253,254,255,256,81,82,83,84,257,85,86,258,259,87,88,89,260,261,262,263,264,90,265,266,91,92,267,268,269,93,94,270,271,272,273,274,275,276,277,278,279,280,281,282,95,284,285,96,288,289,290,291,292,345,346,293,294,295],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:83","sourceCode":"return (int) == (java.lang.Integer.int)","type":"CtReturnImpl"},"failures":[118,6,7,8,9,16,129,155,157,164,166,167,169,170,171,26,27,172,37,38,190,39,191,47,48,49,210,51,52,53,54,57,223,338,339,340,341,63,64,65,66,69,71,73,79,247,264,265,266,267,268,93,94,271,292,294],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:43","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"failures":[347,348,349],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:44","failures":[350,351,97,352,353,312,354,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,355,356,357,358,359,360,361,362,4,5,118,6,7,8,9,10,313,314,315,316,317,318,319,363,119,11,120,12,121,122,13,123,124,125,126,127,14,296,364,15,16,17,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,320,321,322,365,150,151,323,366,18,324,152,153,367,325,368,369,370,371,372,373,374,375,376,377,378,379,154,19,155,20,156,157,21,22,23,24,25,158,159,326,160,161,162,163,164,165,304,327,328,166,167,168,169,170,171,26,27,172,380,381,329,173,174,382,175,383,384,385,176,177,178,179,386,387,388,389,390,302,391,392,393,28,29,30,394,31,32,180,33,34,35,36,37,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,297,411,412,413,414,415,330,416,331,417,418,419,420,421,422,423,424,425,426,427,428,181,332,182,183,333,334,184,38,185,186,187,188,189,190,39,191,192,193,194,429,195,196,197,198,199,305,335,336,40,200,201,202,203,204,205,206,41,42,207,43,44,208,45,337,46,47,209,48,49,50,210,51,52,53,54,55,56,211,212,57,213,58,214,215,59,216,217,430,218,431,432,219,220,60,221,433,434,222,223,435,338,339,340,341,61,62,63,64,65,66,67,224,436,437,225,226,227,228,438,298,439,440,441,442,229,299,443,444,445,446,447,448,449,450,230,451,452,231,453,454,455,456,457,458,459,460,461,232,462,463,464,465,466,233,467,468,234,235,236,68,469,237,69,238,239,70,0,342,71,240,241,72,1,242,73,243,244,74,75,76,77,78,79,245,2,343,246,247,248,344,80,470,471,249,250,251,252,253,254,255,300,472,473,474,475,256,301,476,477,478,479,480,81,82,83,84,257,85,86,258,259,87,88,89,260,261,262,263,264,90,265,266,91,92,267,268,269,93,94,270,271,272,481,273,482,483,484,485,486,487,488,274,275,276,277,489,278,279,280,490,281,491,282,492,493,494,95,283,284,495,285,496,497,286,96,498,287,288,289,290,291,292,345,346,293,294,295],"status":-1,"binaryOperator":"(int >= 1)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"java.lang.reflect.Field.getType()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[204,205,298,439,440,444,447,300,472,473,477,480],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[297],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[118,8,499,168,169,26,27,184,38,39,191,65,266,93,94],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[323],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"method","bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[91],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"this.org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[6,15,16,129,158,395,399,400,409,413,331,185,186,187,188,189,193,194,195,196,197,198,199,202,203,211,223,63,234,235,237,69,238,239,241,1,242,243,244,79,245,2],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state","answer":"value"}},{"position":"org.easymock.internal.matchers.Equals:37","failures":[98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,5,6,7,8,9,10,15,16,17,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,151,154,19,155,20,156,157,21,22,23,24,25,158,160,161,162,163,164,165,166,167,170,171,172,28,29,30,31,32,33,34,35,36,37,181,182,183,38,185,186,187,188,189,190,39,191,193,194,195,196,197,198,199,200,201,204,205,206,41,42,207,43,44,208,45,46,47,209,48,53,54,56,57,58,59,60,222,223,62,63,64,65,66,67,229,68,69,239,70,79,246,247,248,80,249,250,251,252,253,255,256,81,82,83,84,257,85,86,259,87,88,89,261,262,264,90,265,91,92,267,268,270,271,95,284,285,292,293,294],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:61","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Character.java.lang.Class<java.lang.Character>, java.lang.Character.java.lang.Character)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[404,406,414,415,416],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1471","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[118,307,308,168,309,310],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:54","sourceCode":"return false","type":"CtReturnImpl"},"failures":[469],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:140","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,155,20,157,21,22,23,24,25,164,304,327,328,166,171,183,39,223,264,268],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Captures:53","failures":[500,209,48,49,50,210,51,52,53,54,55,56,211,212,57],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.ExpectedInvocation:85","failures":[4,118,6,8,9,15,128,18,19,20,156,21,22,23,24,25,158,169,26,27,39,47,209,48,49,50,210,51,52,53,55,56,211,212,57,223,61,63,65,66,234,235,236,68,237,238,239,70,0,71,241,72,1,242,73,243,244,74,75,76,78,245,2,82,83,84,257,85,86,259,87,88,89,266,91,92,93,94,96,294],"status":-1,"binaryOperator":"((this.org.easymock.internal.Invocation.getMock().equals(org.easymock.internal.Invocation.getMock())) && (this.org.easymock.internal.Invocation.getMethod().equals(org.easymock.internal.Invocation.getMethod()))) && org.easymock.internal.ExpectedInvocation.(matches(org.easymock.internal.Invocation.getArguments()))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"failures":[350,351,97,352,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,353,312,354,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,355,356,357,358,359,360,361,362,4,5,118,6,7,8,9,10,313,314,315,316,317,318,319,363,119,11,120,12,121,122,13,123,124,125,126,127,14,296,364,15,16,17,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,320,321,322,365,150,151,323,366,18,324,152,153,367,325,368,369,370,371,372,373,374,375,376,377,378,379,154,19,155,20,156,157,21,22,23,24,25,158,159,326,160,161,162,163,164,165,304,327,328,166,167,168,169,170,171,26,27,172,380,381,329,173,174,382,175,383,384,385,176,177,178,179,387,388,389,390,302,391,393,28,29,30,394,31,32,180,33,34,35,36,37,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,297,411,412,413,414,415,330,416,331,417,418,419,420,421,422,423,424,425,426,427,428,181,332,182,183,333,334,184,38,185,186,187,188,189,190,39,191,192,193,194,195,196,197,198,199,305,335,336,40,200,201,202,203,204,205,206,41,42,207,43,44,208,45,337,46,47,209,48,49,50,210,51,52,53,54,55,56,211,212,57,213,58,214,215,59,216,217,430,218,431,432,219,220,60,221,433,434,222,223,435,338,339,340,341,61,62,63,64,65,66,67,224,436,225,226,227,228,438,298,439,440,441,442,229,299,443,444,445,446,447,448,449,450,230,451,452,231,453,454,455,456,457,458,459,460,461,232,462,463,464,465,466,233,467,468,234,235,236,68,469,237,69,238,239,70,0,342,71,240,241,72,1,242,73,243,244,74,75,76,77,78,79,245,2,343,246,247,248,344,80,470,471,249,250,251,523,252,253,254,255,300,472,473,474,475,256,301,476,477,478,479,480,81,82,83,84,257,85,86,258,259,87,88,89,260,261,262,263,264,90,265,266,91,92,267,268,269,93,94,270,271,272,481,273,482,483,484,486,487,488,524,525,526,527,528,529,274,275,276,277,489,278,279,280,490,281,282,492,494,95,283,284,285,496,497,286,96,287,288,289,290,291,292,345,346,293,294,295],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:148","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[530],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[97,355,360,150,151,323,373,329,173,174,175,192,40,200,201,202,202,203,203,213,58,215,59,216,217,218,219,220,60,221,224,531,532,230,231,232,233,261,263,274,275,276,277,279,280,281,533,282,492,95,283,284,285,286,96,534,287,290],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[1,3],"status":-1,"binaryOperator":"int >= 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:89","failures":[220,60,533,95],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[97,312,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,4,5,118,6,7,8,9,10,313,314,315,316,317,318,319,119,11,120,12,122,13,14,296,15,16,17,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,320,321,322,150,151,323,18,324,152,153,154,19,155,20,156,157,21,22,23,24,25,158,159,326,160,161,162,163,164,165,304,327,328,166,167,169,170,171,26,27,172,329,173,174,175,28,29,30,31,32,180,33,34,35,36,37,297,330,181,332,182,183,333,334,38,185,186,187,188,189,190,39,191,192,193,194,195,196,197,198,199,305,335,336,40,200,201,202,202,203,203,204,205,206,41,42,207,43,44,208,45,46,47,209,48,49,50,210,51,52,53,54,55,56,211,212,57,213,58,214,215,59,216,218,220,60,221,222,223,338,339,340,341,61,62,63,64,65,66,67,224,229,230,231,232,233,234,235,236,68,237,69,238,239,70,0,342,71,240,241,72,1,242,73,243,244,74,75,76,77,78,79,245,2,343,246,247,248,344,80,249,250,251,252,253,254,255,256,81,82,83,84,257,85,86,258,259,87,88,89,260,261,262,263,264,90,265,266,91,92,267,268,269,93,94,270,271,272,273,274,275,276,277,278,279,280,282,95,284,285,96,288,289,290,291,292,345,346,293,294,295],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[209,49,56,236,68,69,239,70,342,74,79],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[350,351,97,352,355,360,365,150,151,323,366,371,372,373,374,375,376,377,378,379,380,381,329,173,174,175,385,387,388,389,390,302,391,393,192,40,200,201,202,202,203,203,213,58,215,59,216,217,218,431,432,219,220,60,221,433,434,224,436,532,448,449,450,230,451,452,231,453,454,455,456,457,458,459,460,461,232,462,463,464,465,466,233,467,468,261,263,482,486,274,275,276,277,279,280,281,533,282,492,494,95,283,284,285,497,286,96,534,287,288,289,290],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[70,0],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:681","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[150,18],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[365],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:127","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[261,262,263],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stream":"stream"}},{"position":"org.easymock.EasyMock:1249","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:223","failures":[231],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:90","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:193","sourceCode":"throw new java.lang.InternalError((((\"ObjectStreamClass.\" + java.lang.String) + \" failled to be called: \") + (java.lang.reflect.InvocationTargetException.getMessage())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[436,535,536,537,538,539,495],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:118","sourceCode":"org.easymock.Capture<T>.reset()","type":"CtInvocationImpl"},"failures":[53,55],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:127","sourceCode":"java.lang.Object[][int] = java.lang.Object","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:36","failures":[318],"status":-1,"binaryOperator":"(int <= int)","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[524,528],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":68,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":166,"org.easymock.tests2.UsageTest.argumentsOrdered":94,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":88,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":301,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":405,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":92,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":205,"org.easymock.tests2.DelegateToTest.testReturnException":246,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":161,"org.easymock.tests.MockingTest.testPartialClassMocking":173,"org.easymock.tests.MockClassControlTest.testToString":374,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":435,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":312,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":434,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":413,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":456,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":130,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":231,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":250,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":522,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":535,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":0,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":15,"org.easymock.tests2.UsageTest.wrongArguments":266,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":447,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":178,"org.easymock.samples.ExampleTest.answerVsDelegate":207,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":360,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":384,"org.easymock.tests2.UsageConstraintsTest.testNull":69,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":215,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":87,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":379,"org.easymock.tests2.CaptureTest.testPrimitive":50,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":129,"org.easymock.tests.UsageTest.moreThanOneArgument":167,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":149,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":214,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":187,"org.easymock.tests.UsageTest.argumentsOrdered":27,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":314,"org.easymock.tests.UsageVarargTest.varargIntAccepted":30,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":410,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":195,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":539,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":281,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":484,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":479,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":283,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":397,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":199,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":506,"org.easymock.tests.ReplayStateInvalidUsageTest.times":424,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":229,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":530,"org.easymock.tests2.DependencyTest.testClassMocking":470,"org.easymock.tests2.AnswerTest.answer":292,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":342,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":411,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":228,"org.easymock.tests2.CaptureTest.testAnd":209,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":357,"org.easymock.tests2.UsageTest.strictResetToDefault":90,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":493,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":219,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":186,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":152,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":257,"org.easymock.tests2.DelegateToTest.testDelegate":80,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":318,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":505,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":145,"org.easymock.tests.LimitationsTest.mockFinalMethod":352,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":164,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":127,"org.easymock.tests2.DependencyTest.testClassMockingSupport":471,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":14,"org.easymock.tests2.CaptureTest.testCapture1_2446744":210,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":430,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":143,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":226,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":418,"org.easymock.tests.UsageThrowableTest.throwError":20,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":359,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":480,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":429,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":468,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":509,"org.easymock.samples.PartialClassMockTest.testGetArea":40,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":419,"org.easymock.tests.MockingTest.testInterfaceMocking":382,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":196,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":457,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":131,"org.easymock.tests2.UsageTest.niceToStrict":91,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":371,"org.easymock.tests2.ThreadingTest.testChangeDefault":523,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":395,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":95,"org.easymock.tests2.MockBuilderTest.testCreateMock":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":464,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":444,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":139,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":309,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":85,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":356,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":328,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":319,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":176,"org.easymock.tests.UsageOverloadedMethodTest.overloading":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":466,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":461,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":183,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":1,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":154,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":109,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":72,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":55,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":394,"org.easymock.tests2.EasyMockSupportClassTest.testAll":230,"org.easymock.tests.MockClassControlTest.testEquals":378,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":151,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":147,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":349,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":531,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":125,"org.easymock.tests2.CaptureTest.testCaptureAll":48,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":227,"org.easymock.tests.MockNameTest.defaultName":428,"org.easymock.tests2.UsageConstraintsTest.testMatches":242,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":188,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":331,"org.easymock.samples.ExampleTest.voteForRemovals":45,"org.easymock.tests.UsageVarargTest.allKinds":37,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":190,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":126,"org.easymock.samples.BasicClassMockTest.testPrintContent":201,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":24,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":61,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":476,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":165,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":344,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":392,"org.easymock.tests2.UsageConstraintsTest.greaterThan":243,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":451,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":324,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":221,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":510,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":393,"org.easymock.samples.ExampleTest.voteForRemoval":43,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":433,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":252,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":361,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":485,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":217,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":502,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":192,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":264,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":497,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":402,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":83,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":157,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":449,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":160,"org.easymock.tests2.CaptureTest.testCaptureFirst":57,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":343,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":401,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":84,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":271,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":184,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":105,"org.easymock.tests2.CaptureTest.testCapture2_2446744":212,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":254,"org.easymock.tests2.UsageTest.moreThanOneArgument":265,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":412,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":96,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":36,"org.easymock.tests.GenericTest.testBridgedEquals":366,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":122,"org.easymock.tests.UsageExpectAndReturnTest.longType":101,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":123,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":81,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":534,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":148,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":77,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":326,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":146,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":185,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":335,"org.easymock.tests.UsageCallCountTest.tooManyCalls":13,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":465,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":106,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":446,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":135,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":23,"org.easymock.tests.MockingTest.testNiceClassMocking":385,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":275,"org.easymock.tests.MockingTest.testClassMocking":381,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":533,"org.easymock.tests2.UsageConstraintsTest.testContains":241,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":363,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":290,"org.easymock.tests2.UsageConstraintsTest.testFind":237,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":155,"org.easymock.tests.MockTypeTest.fromEasyMockClass":358,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":4,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":273,"org.easymock.tests.UsageExpectAndReturnTest.object":108,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":218,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":445,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":259,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":536,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":32,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":369,"org.easymock.tests.UsageTest.exactCallCountByLastCall":172,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":158,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":400,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":315,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":353,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":436,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":114,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":28,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":182,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":472,"org.easymock.tests.MockClassControlTest.testHashCode":377,"org.easymock.tests2.EasyMockSupportTest.testVerify":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":459,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":347,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":316,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":181,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":327,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":225,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":438,"org.easymock.tests.UsageVarargTest.varargCharAccepted":31,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":386,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":62,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":416,"org.easymock.tests2.UsageTest.openCallCountByLastCall":267,"org.easymock.tests.DefaultClassInstantiatorTest.object":387,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":89,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":304,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":325,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":499,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":460,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":137,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":21,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":441,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":300,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":508,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":220,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":376,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":136,"org.easymock.tests.CapturesMatcherTest.test":500,"org.easymock.tests.ReplayStateInvalidCallsTest.times":514,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":115,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":305,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":515,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":233,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":348,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":375,"org.easymock.tests2.UsageTest.resumeIfFailure":270,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":355,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":483,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":163,"org.easymock.tests2.StubTest.stubWithReturnValue":223,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":495,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":107,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":78,"org.easymock.tests2.SerializationTest.testAllMockedMethod":263,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":297,"org.easymock.samples.SupportTest.voteForRemovals":41,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":310,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":365,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":474,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":142,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":306,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":330,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":345,"org.easymock.tests.UsageExpectAndThrowTest.object":140,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":354,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":75,"org.easymock.tests2.DelegateToTest.testWrongClass":248,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":512,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":193,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":194,"org.easymock.tests.UsageStrictMockTest.range":8,"org.easymock.samples.ConstructorCalledMockTest.testTax":202,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":487,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":258,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":274,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":141,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":448,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":426,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":26,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":177,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":307,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":504,"org.easymock.tests2.CaptureTest.testCaptureNone":54,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":322,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":525,"org.easymock.tests.UsageUnorderedTest.message":38,"org.easymock.tests.UsageVerifyTest.twoReturns":191,"org.easymock.tests.UsageVarargTest.varargByteAccepted":35,"org.easymock.tests2.ThreadingTest.testThreadSafe":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":462,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":12,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":200,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":370,"org.easymock.tests2.CaptureTest.testCapture_2617107":49,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":364,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":414,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":128,"org.easymock.tests2.UsageConstraintsTest.any":71,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":423,"org.easymock.tests2.StubTest.stub":222,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":336,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":415,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":162,"org.easymock.tests.UsageExpectAndThrowTest.longType":133,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":302,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":422,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":64,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":256,"org.easymock.tests2.SerializationTest.testClass":261,"org.easymock.tests.LimitationsTest.mockNativeMethod":97,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":117,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":323,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":440,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":520,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":67,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":526,"org.easymock.tests2.NameTest.nameForMocksControl":341,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":442,"org.easymock.tests2.MockedExceptionTest.testMockedException":289,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":452,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":171,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":481,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":175,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":134,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":213,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":285,"org.easymock.tests.MockingTest.testNicePartialClassMocking":174,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":216,"org.easymock.tests2.CaptureTest.testCaptureLast":53,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":298,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":296,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":519,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":70,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":280,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":76,"org.easymock.tests.MockingTest.testTwoMocks":329,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":516,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":490,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":98,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":138,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":93,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":245,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":529,"org.easymock.samples.ExampleTest.removeNonExistingDocument":337,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":443,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":420,"org.easymock.tests.UsageStrictMockTest.differentMethods":9,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":473,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":528,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":389,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":253,"org.easymock.tests2.MockBuilderTest.testCreateMockString":287,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":372,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":453,"org.easymock.tests.UsageExpectAndThrowTest.floatType":132,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":450,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":293,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":437,"org.easymock.tests.UsageVerifyTest.twoThrows":39,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":232,"org.easymock.samples.ExampleTest.voteAgainstRemoval":44,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":406,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":320,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":60,"org.easymock.tests.LimitationsTest.privateConstructor":351,"org.easymock.tests2.UsageConstraintsTest.testNotNull":79,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":25,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":288,"org.easymock.tests2.UsageTest.defaultResetToNice":269,"org.easymock.samples.ExampleTest.voteAgainstRemovals":42,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":407,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":113,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":439,"org.easymock.tests.UsageVarargTest.differentLength":180,"org.easymock.tests2.CallbackTest.callback":47,"org.easymock.tests2.UsageConstraintsTest.equals":469,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":431,"org.easymock.tests.UsageTest.openCallCountByLastCall":170,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":234,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":17,"org.easymock.tests.UsageCallCountTest.tooFewCalls":11,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":277,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":179,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":527,"org.easymock.tests.UsageThrowableTest.throwCheckedException":22,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":308,"org.easymock.tests.MockingTest.testStrictClassMocking":380,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":159,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":279,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":276,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":299,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":425,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":278,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":295,"org.easymock.tests2.CompareToTest.testGreateOrEqual":3,"org.easymock.tests.ObjectMethodsTest.testHashCode":368,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":538,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":518,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":255,"org.easymock.tests2.NameTest.nameForNiceMock":340,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":513,"org.easymock.tests2.DependencyTest.testInterfaceMocking":249,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":537,"org.easymock.samples.ExampleTest.addDocument":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":463,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":467,"org.easymock.tests2.DelegateToTest.testStubDelegate":247,"org.easymock.tests2.AnswerTest.stubAnswer":294,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":6,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":496,"org.easymock.tests.UsageVarargTest.varargLongAccepted":34,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":404,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":116,"org.easymock.tests.UsageExpectAndReturnTest.floatType":100,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":224,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":203,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":478,"org.easymock.tests.UsageThrowableTest.noUpperLimit":156,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":244,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":333,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":235,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":482,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":51,"org.easymock.tests2.SerializationTest.test":262,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":303,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":388,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":99,"org.easymock.tests2.UsageConstraintsTest.testSame":238,"org.easymock.samples.SupportTest.addDocument":206,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":489,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":503,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":421,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":454,"org.easymock.tests.GenericTest.testPackageScope":150,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":317,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":399,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":477,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":383,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":501,"org.easymock.tests2.NameTest.nameForMock":338,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":110,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":498,"org.easymock.tests2.UsageStrictMockTest.differentMethods":66,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":432,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":102,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":144,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":367,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":153,"org.easymock.tests2.MockedExceptionTest.testRealException":291,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":362,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":488,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":409,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":408,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":63,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":427,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":16,"org.easymock.tests2.NameTest.nameForStrictMock":339,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":494,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":272,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":59,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":486,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":390,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":74,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":311,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":282,"org.easymock.tests2.UsageStrictMockTest.range":65,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":507,"org.easymock.tests2.UsageConstraintsTest.lessThan":2,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":475,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":403,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":458,"org.easymock.tests2.CaptureTest.testCaptureRightOne":56,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":524,"org.easymock.tests2.UsageConstraintsTest.testOr":239,"org.easymock.tests.UsageRangeTest.combination":18,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":58,"org.easymock.tests.UsageTest.wrongArguments":169,"org.easymock.tests2.MockBuilderTest.testWithConstructor":491,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":455,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":373,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":103,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":396,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":111,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":391,"org.easymock.tests.UsageVarargTest.varargShortAccepted":33,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":121,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":521,"org.easymock.tests2.UsageConstraintsTest.cmpTo":240,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":346,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":511,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":398,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":268,"org.easymock.tests2.CaptureTest.testCaptureFromStub":211,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":417,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":492,"org.easymock.tests.UsageTest.unexpectedCallWithArray":168,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":517,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":118,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":120,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":112,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":7,"org.easymock.tests2.UsageConstraintsTest.constraints":236,"org.easymock.samples.ExampleTest.addAndChangeDocument":46,"org.easymock.tests.UsageStrictMockTest.testVerify":313,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":204,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":5,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":124,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":52,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":532,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":197,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":104,"org.easymock.tests.LimitationsTest.abstractClass":350,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":198,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":334,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":29,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":86}}]
