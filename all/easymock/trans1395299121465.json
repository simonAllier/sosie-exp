[{"position":"org.easymock.internal.MockBuilder:229","failures":[0,1,2,3,4],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[5,6,7,8],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:643","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,22,23,23,24,25,26,27,28,29,30,31,32,33,0,34,35,36,2,37,38,39,40,41,42,43,44,45,46,47,48,3,49,50,51,52,53,54,4,55,56,57,58,59],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1319","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:62","sourceCode":"final org.easymock.internal.InjectionPlan org.easymock.internal.InjectionPlan = new org.easymock.internal.InjectionPlan()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:178","failures":[53],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"this.org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,22,23,84,85,86,5,87,88,89,90,91,92,93,8,94,95,96,97,98],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","answer":"value"}},{"position":"org.easymock.EasyMock:573","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[99,100,88,101,6,7,102,103,104],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,27,0,35,99,128,3,54,4,56,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:243","failures":[146,60,61,62,63,64,65,66,147,11,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,16,17,18,73,120,164,165,166,77,78,79,80,82,83,126,127,21,167,168,169,170,171,26,27,172,28,29,30,32,0,34,35,36,2,37,38,39,40,41,42,173,43,44,3,50,52,53,4,57,174,175,176,177,98,144,145],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:260","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:157","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[45,178,179,57,180,181,182,183,184,185],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[111,113,114,115,116,119,121,122,124,126,130,133,134,144],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[186,45,187,46],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MocksControl:136","failures":[9,10,188,189,11,190,191,12,13,14,192,193,194,15,16,17,18,195,196,197,198,199,200,201,202,203,19,204,205,206,207,208,209,20,21,22,22,23,23,24,25,26,27,28,29,30,31,32,210,211,33,0,34,35,212,1,213,214,215,36,216,217,2,218,219,220,221,222,223,224,225,226,37,227,228,229,230,231,38,232,233,39,40,41,42,43,44,45,46,47,3,49,234,50,51,52,53,179,54,4,56,235,236,237,238,57,180,239,240,59,241,242],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[243,244,245,246,247,248,105,106,107,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,60,61,62,63,64,65,66,279,280,281,282,283,112,284,113,114,285,286,115,116,117,287,288,289,290,291,118,292,293,294,295,296,11,67,297,12,13,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,148,149,150,151,152,153,318,319,154,155,320,156,157,158,321,159,160,161,162,163,16,17,18,119,73,74,322,323,75,196,76,324,325,326,327,328,329,330,331,332,333,334,120,164,165,166,77,78,79,80,81,335,203,19,204,205,206,207,208,209,20,336,121,122,123,337,124,83,125,126,127,338,339,167,340,168,169,341,170,342,343,26,27,172,28,29,30,31,32,33,0,34,35,40,41,43,44,344,345,84,85,99,100,86,5,87,88,101,346,347,348,89,349,90,91,128,92,93,7,350,351,352,353,8,94,95,45,187,46,47,3,50,51,54,4,56,129,354,355,130,131,132,356,357,358,133,134,135,136,359,360,361,362,363,364,365,366,367,368,369,370,57,239,240,59,371,141,372,373,374,174,375,376,96,175,377,177,378,379,102,380,103,381,382,383,384,385,386,387,104,97,388,389,142,390,98,143,144,145,391],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[16,27],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:108","failures":[251,255,257,258,259,260,261,262,271,276,112,286,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,323,121,129,357,96],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[349],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:83","sourceCode":"return int == int","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:193","sourceCode":"if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[178,180,181,182,183,392,393],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"maximum":"i","java.lang.Integer.MAX_VALUE":"i"}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[394],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:972","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1397","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[112,285,286,117,336,122,83,129,356,357,136,359,98],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:45","sourceCode":"return org.easymock.internal.matchers.CompareTo<T>.matchResult(((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Comparable<T>))","type":"CtReturnImpl"},"failures":[84,99,90,92,95,395,396,397,398,399],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"actual":"actual"}},{"position":"org.easymock.internal.MockBuilder:159","failures":[22,23,210,400,401,402,403],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"failures":[404],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[7],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:129","sourceCode":"final java.lang.Throwable java.lang.Throwable","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:373","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[186,45,187,46],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[99,101],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[92,396],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1471","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":100,"org.easymock.tests2.UsageTest.argumentsOrdered":134,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":112,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":132,"org.easymock.tests2.DelegateToTest.testReturnException":377,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":268,"org.easymock.tests.MockingTest.testPartialClassMocking":16,"org.easymock.tests.MockClassControlTest.testToString":204,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":147,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":221,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":2,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":298,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":176,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":181,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":346,"org.easymock.tests2.UsageTest.wrongArguments":130,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":73,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":265,"org.easymock.samples.ExampleTest.answerVsDelegate":340,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":10,"org.easymock.tests2.UsageConstraintsTest.testNull":5,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":28,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":140,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":209,"org.easymock.tests2.CaptureTest.testPrimitive":381,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":75,"org.easymock.tests.UsageTest.moreThanOneArgument":284,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":317,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":172,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":79,"org.easymock.tests.UsageTest.argumentsOrdered":116,"org.easymock.tests.UsageVarargTest.varargIntAccepted":289,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":62,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":393,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":47,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":237,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":51,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":66,"org.easymock.tests.ReplayStateInvalidUsageTest.times":331,"org.easymock.tests2.DependencyTest.testClassMocking":241,"org.easymock.tests2.AnswerTest.answer":359,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":6,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":366,"org.easymock.tests2.CaptureTest.testAnd":102,"org.easymock.tests2.UsageTest.strictResetToDefault":354,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":33,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":78,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":165,"org.easymock.tests2.DelegateToTest.testDelegate":379,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":313,"org.easymock.tests.LimitationsTest.mockFinalMethod":190,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":271,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":283,"org.easymock.tests2.DependencyTest.testClassMockingSupport":242,"org.easymock.tests2.CaptureTest.testCapture1_2446744":382,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":311,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":364,"org.easymock.tests.UsageThrowableTest.throwError":255,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":325,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":109,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":233,"org.easymock.samples.PartialClassMockTest.testGetArea":21,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":326,"org.easymock.tests2.CompareToTest.testLessOrEqual":399,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":63,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":146,"org.easymock.tests2.UsageTest.niceToStrict":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":222,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":299,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":68,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":50,"org.easymock.tests2.MockBuilderTest.testCreateMock":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":229,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":307,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":138,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":243,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":263,"org.easymock.tests.UsageOverloadedMethodTest.overloading":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":231,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":90,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":276,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":156,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":249,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":349,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":387,"org.easymock.tests2.EasyMockSupportClassTest.testAll":36,"org.easymock.tests.MockClassControlTest.testEquals":208,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":13,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":315,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":402,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":281,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":365,"org.easymock.tests2.CaptureTest.testCaptureAll":380,"org.easymock.tests2.UsageConstraintsTest.testMatches":91,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":76,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":80,"org.easymock.samples.ExampleTest.voteForRemovals":170,"org.easymock.tests.UsageVarargTest.allKinds":296,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":336,"org.easymock.samples.BasicClassMockTest.testPrintContent":25,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":282,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":261,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":142,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":272,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":185,"org.easymock.tests2.UsageConstraintsTest.greaterThan":92,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":216,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":164,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":35,"org.easymock.samples.ExampleTest.voteForRemoval":168,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":202,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":212,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":373,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":31,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":129,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":20,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":179,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":394,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":214,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":267,"org.easymock.tests2.CaptureTest.testCaptureFirst":389,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":136,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":278,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":319,"org.easymock.tests2.CaptureTest.testCapture2_2446744":388,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":174,"org.easymock.tests2.UsageTest.moreThanOneArgument":355,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":4,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":295,"org.easymock.tests.GenericTest.testBridgedEquals":192,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":106,"org.easymock.tests.UsageExpectAndReturnTest.longType":151,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":279,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":55,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":316,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":82,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":352,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":314,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":77,"org.easymock.tests.UsageCallCountTest.tooManyCalls":107,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":230,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":154,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":303,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":260,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":40,"org.easymock.tests.MockingTest.testNiceClassMocking":195,"org.easymock.tests.MockingTest.testClassMocking":194,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":48,"org.easymock.tests2.UsageConstraintsTest.testContains":89,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":244,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":59,"org.easymock.tests2.UsageConstraintsTest.testFind":86,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":251,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":123,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":345,"org.easymock.tests.UsageExpectAndReturnTest.object":320,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":32,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":182,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":291,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":254,"org.easymock.tests.UsageTest.exactCallCountByLastCall":117,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":67,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":70,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":180,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":160,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":287,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":275,"org.easymock.tests.MockClassControlTest.testHashCode":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":224,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":273,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":110,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":363,"org.easymock.tests.UsageVarargTest.varargCharAccepted":290,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":390,"org.easymock.tests2.UsageTest.openCallCountByLastCall":356,"org.easymock.tests.DefaultClassInstantiatorTest.object":196,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":252,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":225,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":305,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":258,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":0,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":206,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":304,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":38,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":205,"org.easymock.tests2.UsageTest.resumeIfFailure":135,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":9,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":236,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":270,"org.easymock.tests2.StubTest.stubWithReturnValue":96,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":178,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":155,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":353,"org.easymock.tests2.SerializationTest.testAllMockedMethod":46,"org.easymock.samples.SupportTest.voteForRemovals":171,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":191,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":310,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":186,"org.easymock.tests.UsageExpectAndThrowTest.object":308,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":350,"org.easymock.tests2.DelegateToTest.testWrongClass":378,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":60,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":61,"org.easymock.tests.UsageStrictMockTest.range":126,"org.easymock.samples.ConstructorCalledMockTest.testTax":22,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":39,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":309,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":52,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":213,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":333,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":264,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":404,"org.easymock.tests2.CaptureTest.testCaptureNone":386,"org.easymock.tests.UsageUnorderedTest.message":119,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":108,"org.easymock.tests.UsageVerifyTest.twoReturns":122,"org.easymock.tests.UsageVarargTest.varargByteAccepted":294,"org.easymock.tests2.ThreadingTest.testThreadSafe":372,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":227,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":248,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":24,"org.easymock.tests2.CaptureTest.testCapture_2617107":103,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":323,"org.easymock.tests2.UsageConstraintsTest.any":347,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":330,"org.easymock.tests2.StubTest.stub":376,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":269,"org.easymock.tests.UsageExpectAndThrowTest.longType":301,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":200,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":329,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":143,"org.easymock.tests2.SerializationTest.testClass":45,"org.easymock.tests.LimitationsTest.mockNativeMethod":11,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":163,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":14,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":391,"org.easymock.tests2.NameTest.nameForMocksControl":370,"org.easymock.tests2.MockedExceptionTest.testMockedException":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":217,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":286,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":18,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":302,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":26,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":53,"org.easymock.tests.MockingTest.testNicePartialClassMocking":17,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":30,"org.easymock.tests2.CompareToTest.testCompareEqual":397,"org.easymock.tests2.CaptureTest.testCaptureLast":385,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":335,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":101,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":44,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":351,"org.easymock.tests.MockingTest.testTwoMocks":15,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":148,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":306,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":133,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":94,"org.easymock.samples.ExampleTest.removeNonExistingDocument":342,"org.easymock.tests.UsageStrictMockTest.differentMethods":127,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":327,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":198,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":374,"org.easymock.tests2.MockBuilderTest.testCreateMockString":56,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":203,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":218,"org.easymock.tests.UsageExpectAndThrowTest.floatType":300,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":215,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":360,"org.easymock.tests.UsageVerifyTest.twoThrows":121,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":37,"org.easymock.samples.ExampleTest.voteAgainstRemoval":169,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":34,"org.easymock.tests.LimitationsTest.privateConstructor":189,"org.easymock.tests2.UsageConstraintsTest.testNotNull":8,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":239,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":262,"org.easymock.tests2.UsageTest.defaultResetToNice":358,"org.easymock.samples.ExampleTest.voteAgainstRemovals":167,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":159,"org.easymock.tests.UsageVarargTest.differentLength":118,"org.easymock.tests2.CallbackTest.callback":141,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":210,"org.easymock.tests.UsageTest.openCallCountByLastCall":285,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":84,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":322,"org.easymock.tests.UsageCallCountTest.tooFewCalls":246,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":42,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":266,"org.easymock.tests.UsageThrowableTest.throwCheckedException":259,"org.easymock.tests.MockingTest.testStrictClassMocking":193,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":43,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":297,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":41,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":332,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":173,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":362,"org.easymock.tests2.CompareToTest.testGreateOrEqual":398,"org.easymock.tests.ObjectMethodsTest.testHashCode":253,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":392,"org.easymock.tests2.NameTest.nameForNiceMock":369,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":375,"org.easymock.tests2.DependencyTest.testInterfaceMocking":175,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":183,"org.easymock.samples.ExampleTest.addDocument":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":228,"org.easymock.tests2.DelegateToTest.testStubDelegate":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":232,"org.easymock.tests2.AnswerTest.stubAnswer":361,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":83,"org.easymock.tests.UsageVarargTest.varargLongAccepted":293,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":338,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":162,"org.easymock.tests.UsageExpectAndReturnTest.floatType":150,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":57,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":23,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":93,"org.easymock.tests.UsageThrowableTest.noUpperLimit":256,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":85,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":235,"org.easymock.tests2.SerializationTest.test":187,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":383,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":197,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":149,"org.easymock.tests2.UsageConstraintsTest.testSame":87,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":219,"org.easymock.tests.GenericTest.testPackageScope":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":69,"org.easymock.tests2.NameTest.nameForMock":367,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":157,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":403,"org.easymock.tests2.UsageStrictMockTest.differentMethods":145,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":211,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":152,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":312,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":166,"org.easymock.tests2.MockedExceptionTest.testRealException":371,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":71,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":98,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":74,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":334,"org.easymock.tests2.NameTest.nameForStrictMock":368,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":234,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":344,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":29,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":238,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":7,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":199,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":3,"org.easymock.tests2.UsageStrictMockTest.range":144,"org.easymock.tests2.UsageConstraintsTest.lessThan":95,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":184,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":137,"org.easymock.tests2.CaptureTest.testCaptureRightOne":104,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":223,"org.easymock.tests2.UsageConstraintsTest.testOr":88,"org.easymock.tests.UsageRangeTest.combination":120,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":27,"org.easymock.tests.UsageTest.wrongArguments":114,"org.easymock.tests2.MockBuilderTest.testWithConstructor":400,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":220,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":19,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":153,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":158,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":201,"org.easymock.tests.UsageVarargTest.varargShortAccepted":292,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":105,"org.easymock.tests2.UsageConstraintsTest.cmpTo":348,"org.easymock.tests2.CompareToTest.testLessThan":395,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":357,"org.easymock.tests2.CaptureTest.testCaptureFromStub":97,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":324,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":49,"org.easymock.tests.UsageTest.unexpectedCallWithArray":113,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":124,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":247,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":401,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":321,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":125,"org.easymock.tests2.UsageConstraintsTest.constraints":99,"org.easymock.samples.ExampleTest.addAndChangeDocument":343,"org.easymock.tests.UsageStrictMockTest.testVerify":339,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":337,"org.easymock.tests2.CompareToTest.testGreateThan":396,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":280,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":384,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":58,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":64,"org.easymock.tests.LimitationsTest.abstractClass":188,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":318,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":65,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":277,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":139,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":288}}]
