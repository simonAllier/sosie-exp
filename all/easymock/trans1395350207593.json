[{"position":"org.easymock.internal.Range:36","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[2,3,5,6,7,8,9,10,11,12,21,22,26,27,156,157,158,159,166,167],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:98","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String)","type":"CtInvocationImpl"},"failures":[120,122,124,488,487],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1789","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Matches(java.lang.String))","type":"CtInvocationImpl"},"failures":[17],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"regex","key":"regex"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:592","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[12,253],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[79,92,93,94,95,254,265,266,267,268,269,270,305],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:327","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[3,11],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:33","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>.getName(), java.lang.Boolean.java.lang.Class<java.lang.Boolean>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,38,39,43,46,56,62,65,66,67,68,69,70,73,75,76,78,79,85,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,116,120,122,124,128,131,132,133,135,137,138,139,142,143,144,145,146,147,148,149,150,151,153,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,176,184,185,186,187,189,190,191,197,199,200,201,202,203,204,205,208,212,213,214,238,253,254,255,256,257,258,260,261,263,265,266,267,268,269,270,271,274,275,277,278,281,282,283,284,285,286,287,288,289,293,294,296,301,303,304,305,306,307,308,309,310,311,328,334,342,343,346,347,350,355,356,357,358,359,362,369,389,390,391,392,393,394,395,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,428,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,467,469,472,473,474,475,477,479,481,485,485,486,486,487],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","sourceCode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} ","type":"CtIfImpl"},"failures":[489],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[111,249],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[490,395],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"failures":[491,492],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[186,192,201,211,214],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[79,131,138,257,261,269,282,306,342,347,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,460,461,462,463,464,465],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"failures":[0,1,2,3,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,38,39,43,46,56,62,65,68,69,70,71,72,73,74,75,76,77,78,79,85,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,120,121,122,124,127,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,149,150,151,152,153,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,176,184,185,186,187,189,190,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,208,211,212,213,214,238,253,254,255,256,257,258,260,261,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,281,282,283,293,294,296,303,304,305,306,307,308,310,311,336,337,338,339,340,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,362,363,364,365,366,367,368,378,379,380,382,383,384,385,386,387,388,389,390,391,392,393,394,395,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,467,468,471,472,473,474,475,476,477,479,480,481,482,483,484,485,486,487],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[156,157,158,159,160,161,162,163,165,166,167,168,169,492],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"return java.lang.reflect.Field.getType().isAssignableFrom(org.easymock.internal.Injection.getMock().getClass())","type":"CtReturnImpl"},"failures":[80,87,171,178],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1092","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Contains(java.lang.String))","type":"CtInvocationImpl"},"failures":[2,9,14,21],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"substring"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:49","sourceCode":"org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[21],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"failures":[458,461],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[493,494,495,496,274,344],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":3,"org.easymock.tests2.UsageTest.argumentsOrdered":141,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":342,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":106,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":322,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":136,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":484,"org.easymock.tests2.DelegateToTest.testReturnException":145,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":266,"org.easymock.tests.MockingTest.testPartialClassMocking":293,"org.easymock.tests.MockClassControlTest.testToString":230,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":217,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":301,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":216,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":50,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":438,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":46,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":39,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":10,"org.easymock.tests2.UsageTest.wrongArguments":134,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":303,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":182,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":353,"org.easymock.samples.ExampleTest.answerVsDelegate":473,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":375,"org.easymock.tests2.UsageConstraintsTest.testNull":6,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":298,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":203,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":105,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":235,"org.easymock.tests2.CaptureTest.testPrimitive":159,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":307,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":457,"org.easymock.tests.UsageTest.moreThanOneArgument":343,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":202,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":357,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":433,"org.easymock.tests.UsageTest.argumentsOrdered":349,"org.easymock.tests.UsageVarargTest.varargIntAccepted":380,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":327,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":390,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":114,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":31,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":90,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":121,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":314,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":394,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":176,"org.easymock.tests.ReplayStateInvalidUsageTest.times":248,"org.easymock.tests2.DependencyTest.testClassMocking":36,"org.easymock.tests2.AnswerTest.answer":65,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":329,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":196,"org.easymock.tests2.CaptureTest.testAnd":156,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":372,"org.easymock.tests2.UsageTest.strictResetToDefault":132,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":118,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":211,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":356,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":100,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":310,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":437,"org.easymock.tests2.DelegateToTest.testDelegate":149,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":453,"org.easymock.tests.LimitationsTest.mockFinalMethod":239,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":269,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":340,"org.easymock.tests2.DependencyTest.testClassMockingSupport":37,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":427,"org.easymock.tests2.CaptureTest.testCapture1_2446744":160,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":207,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":451,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":194,"org.easymock.tests.UsageThrowableTest.throwError":458,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":242,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":374,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":91,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":341,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":64,"org.easymock.samples.PartialClassMockTest.testGetArea":487,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":243,"org.easymock.tests.MockingTest.testInterfaceMocking":295,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":391,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":285,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":439,"org.easymock.tests2.UsageTest.niceToStrict":135,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":51,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":227,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":312,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":120,"org.easymock.tests2.MockBuilderTest.testCreateMock":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":59,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":179,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":493,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":447,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":101,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":371,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":289,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":360,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":351,"org.easymock.tests.UsageOverloadedMethodTest.overloading":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":55,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":61,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":16,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":261,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":416,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":255,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":15,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":165,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":381,"org.easymock.tests2.EasyMockSupportClassTest.testAll":43,"org.easymock.tests.MockClassControlTest.testEquals":234,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":468,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":455,"org.easymock.tests2.CaptureTest.testCaptureAll":157,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":195,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":338,"org.easymock.tests.MockNameTest.defaultName":252,"org.easymock.tests2.UsageConstraintsTest.testMatches":17,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":240,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":358,"org.easymock.samples.ExampleTest.voteForRemovals":477,"org.easymock.tests.UsageVarargTest.allKinds":389,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":281,"org.easymock.samples.BasicClassMockTest.testPrintContent":483,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":339,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":464,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":71,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":148,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":87,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":270,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":403,"org.easymock.tests2.UsageConstraintsTest.greaterThan":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":44,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":309,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":214,"org.easymock.samples.ExampleTest.voteForRemoval":474,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":404,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":110,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":215,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":376,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":32,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":206,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":131,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":271,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":126,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":319,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":98,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":460,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":41,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":265,"org.easymock.tests2.CaptureTest.testCaptureFirst":169,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":144,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":318,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":99,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":143,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":264,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":412,"org.easymock.tests2.CaptureTest.testCapture2_2446744":168,"org.easymock.tests2.UsageTest.moreThanOneArgument":133,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":112,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":128,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":330,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":388,"org.easymock.tests.GenericTest.testBridgedEquals":470,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":367,"org.easymock.tests.UsageExpectAndReturnTest.longType":408,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":96,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":336,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":488,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":456,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":24,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":369,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":454,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":431,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":355,"org.easymock.tests.UsageCallCountTest.tooManyCalls":368,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":60,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":413,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":181,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":443,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":463,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":185,"org.easymock.tests.MockingTest.testNiceClassMocking":299,"org.easymock.tests.MockingTest.testClassMocking":291,"org.easymock.tests2.UsageConstraintsTest.testContains":14,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":361,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":94,"org.easymock.tests2.UsageConstraintsTest.testFind":5,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":257,"org.easymock.tests.MockTypeTest.fromEasyMockClass":373,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":199,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":272,"org.easymock.tests.UsageExpectAndReturnTest.object":415,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":208,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":180,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":104,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":383,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":225,"org.easymock.tests.UsageTest.exactCallCountByLastCall":350,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":253,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":317,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":434,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":300,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":154,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":421,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":378,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":260,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":81,"org.easymock.tests.MockClassControlTest.testHashCode":233,"org.easymock.tests2.EasyMockSupportTest.testVerify":108,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":53,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":435,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":258,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":288,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":193,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":183,"org.easymock.tests.UsageVarargTest.varargCharAccepted":382,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":396,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":72,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":335,"org.easymock.tests2.UsageTest.openCallCountByLastCall":137,"org.easymock.tests.DefaultClassInstantiatorTest.object":397,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":107,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":287,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":223,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":445,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":54,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":461,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":174,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":80,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":212,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":232,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":444,"org.easymock.tests.CapturesMatcherTest.test":492,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":422,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":430,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":62,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":231,"org.easymock.tests2.UsageTest.resumeIfFailure":142,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":370,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":30,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":268,"org.easymock.tests2.StubTest.stubWithReturnValue":79,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":123,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":414,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":25,"org.easymock.tests2.SerializationTest.testAllMockedMethod":152,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":328,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":494,"org.easymock.samples.SupportTest.voteForRemovals":481,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":466,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":83,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":450,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":334,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":66,"org.easymock.tests.UsageExpectAndThrowTest.object":448,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":302,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":22,"org.easymock.tests2.DelegateToTest.testWrongClass":147,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":425,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":426,"org.easymock.samples.ConstructorCalledMockTest.testTax":485,"org.easymock.tests.UsageStrictMockTest.range":277,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":34,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":103,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":184,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":449,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":122,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":40,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":250,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":348,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":352,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":495,"org.easymock.tests2.CaptureTest.testCaptureNone":164,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":286,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":489,"org.easymock.tests.UsageUnorderedTest.message":395,"org.easymock.tests.UsageVerifyTest.twoReturns":283,"org.easymock.tests.UsageVarargTest.varargByteAccepted":387,"org.easymock.tests2.ThreadingTest.testThreadSafe":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":57,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":365,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":482,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":226,"org.easymock.tests2.CaptureTest.testCapture_2617107":158,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":429,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":332,"org.easymock.tests2.UsageConstraintsTest.any":12,"org.easymock.tests2.StubTest.stub":78,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":247,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":432,"org.easymock.tests.UsageExpectAndThrowTest.longType":441,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":267,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":333,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":401,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":246,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":74,"org.easymock.tests2.SerializationTest.testClass":150,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":85,"org.easymock.tests.LimitationsTest.mockNativeMethod":238,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":469,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":424,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":173,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":77,"org.easymock.tests2.NameTest.nameForMocksControl":221,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":175,"org.easymock.tests2.MockedExceptionTest.testMockedException":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":45,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":347,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":442,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":198,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":296,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":200,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":124,"org.easymock.tests.MockingTest.testNicePartialClassMocking":294,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":205,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":171,"org.easymock.tests2.CaptureTest.testCaptureLast":163,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":428,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":191,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":9,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":23,"org.easymock.tests.MockingTest.testTwoMocks":292,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":192,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":405,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":446,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":140,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":27,"org.easymock.samples.ExampleTest.removeNonExistingDocument":478,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":178,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":244,"org.easymock.tests.UsageStrictMockTest.differentMethods":278,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":82,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":399,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":111,"org.easymock.tests2.MockBuilderTest.testCreateMockString":130,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":228,"org.easymock.tests.UsageExpectAndThrowTest.floatType":440,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":47,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":42,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":68,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":155,"org.easymock.tests.UsageVerifyTest.twoThrows":282,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":56,"org.easymock.samples.ExampleTest.voteAgainstRemoval":475,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":284,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":323,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":213,"org.easymock.tests.LimitationsTest.privateConstructor":237,"org.easymock.tests2.UsageConstraintsTest.testNotNull":26,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":465,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":92,"org.easymock.tests2.UsageTest.defaultResetToNice":139,"org.easymock.samples.ExampleTest.voteAgainstRemovals":472,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":420,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":324,"org.easymock.tests.UsageVarargTest.differentLength":384,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":172,"org.easymock.tests2.CallbackTest.callback":170,"org.easymock.tests2.UsageConstraintsTest.equals":4,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":209,"org.easymock.tests.UsageTest.openCallCountByLastCall":346,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":0,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":305,"org.easymock.tests.UsageCallCountTest.tooFewCalls":363,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":187,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":354,"org.easymock.tests.UsageThrowableTest.throwCheckedException":462,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":496,"org.easymock.tests.MockingTest.testStrictClassMocking":290,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":190,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":254,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":186,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":177,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":249,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":189,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":70,"org.easymock.tests.ObjectMethodsTest.testHashCode":224,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":113,"org.easymock.tests2.NameTest.nameForNiceMock":220,"org.easymock.tests2.DependencyTest.testInterfaceMocking":38,"org.easymock.samples.ExampleTest.addDocument":476,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":58,"org.easymock.tests2.DelegateToTest.testStubDelegate":146,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":63,"org.easymock.tests2.AnswerTest.stubAnswer":69,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":275,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":125,"org.easymock.tests.UsageVarargTest.varargLongAccepted":386,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":321,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":423,"org.easymock.tests.UsageExpectAndReturnTest.floatType":407,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":153,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":486,"org.easymock.tests.UsageThrowableTest.noUpperLimit":459,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":20,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":89,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":262,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":1,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":29,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":161,"org.easymock.tests2.SerializationTest.test":151,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":398,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":406,"org.easymock.tests2.UsageConstraintsTest.testSame":7,"org.easymock.samples.SupportTest.addDocument":480,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":188,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":48,"org.easymock.tests.GenericTest.testPackageScope":467,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":316,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":88,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":297,"org.easymock.tests2.NameTest.nameForMock":218,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":417,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":129,"org.easymock.tests2.UsageStrictMockTest.differentMethods":76,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":210,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":409,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":452,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":222,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":311,"org.easymock.tests2.MockedExceptionTest.testRealException":95,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":377,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":35,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":326,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":73,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":325,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":251,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":304,"org.easymock.tests2.NameTest.nameForStrictMock":219,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":119,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":197,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":204,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":33,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":490,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":400,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":21,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":116,"org.easymock.tests2.UsageStrictMockTest.range":75,"org.easymock.tests2.UsageConstraintsTest.lessThan":28,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":84,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":97,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":320,"org.easymock.tests2.CaptureTest.testCaptureRightOne":166,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":52,"org.easymock.tests2.UsageConstraintsTest.testOr":8,"org.easymock.tests.UsageRangeTest.combination":308,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":201,"org.easymock.tests.UsageTest.wrongArguments":345,"org.easymock.tests2.MockBuilderTest.testWithConstructor":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":49,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":229,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":410,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":418,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":313,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":402,"org.easymock.tests.UsageVarargTest.varargShortAccepted":385,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":366,"org.easymock.tests2.UsageConstraintsTest.cmpTo":13,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":67,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":315,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":138,"org.easymock.tests2.CaptureTest.testCaptureFromStub":167,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":241,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":117,"org.easymock.tests.UsageTest.unexpectedCallWithArray":344,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":274,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":364,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":419,"org.easymock.tests2.CaptureTest.testCapture":491,"org.easymock.tests2.UsageConstraintsTest.constraints":2,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":276,"org.easymock.samples.ExampleTest.addAndChangeDocument":479,"org.easymock.tests.UsageStrictMockTest.testVerify":280,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":471,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":273,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":337,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":162,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":392,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":411,"org.easymock.tests.LimitationsTest.abstractClass":236,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":393,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":263,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":102,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":379}}]
