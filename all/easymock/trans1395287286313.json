[{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5,6],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[7,8,9,10],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[11],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[12,13,14,15],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:61","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Character.java.lang.Class<java.lang.Character>, java.lang.Character.java.lang.Character)","type":"CtInvocationImpl"},"failures":[16],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[17,18],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[7,8,9,10],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[19,20,21,22],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,20,91,92,93,94,95,96,97,98,99,100,21,101,102,103,104],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"position":"org.easymock.internal.MocksControl:105","failures":[105,106,107,108,109,110,111,23,112,113,114,115,116,117,118,119,120,121,122,24,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,25,26,140,141,142,27,143,144,145,146,147,148,28,29,149,150,30,151,31,32,33,34,152,35,36,37,38,153,39,40,41,42,154,155,156,157,158,159,43,44,160,161,45,46,162,163,164,165,166,167,168,169,170,12,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,16,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,47,48,49,252,253,50,254,51,52,53,54,255,55,56,57,58,256,59,60,61,62,63,64,65,66,67,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,68,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,69,70,297,71,298,299,300,301,302,303,304,72,305,17,73,74,75,306,307,308,76,309,310,311,312,313,77,78,79,314,315,11,316,317,318,319,320,321,13,322,323,14,15,80,324,81,325,326,327,328,329,82,330,83,84,331,85,86,332,87,88,333,334,335,89,90,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,20,91,92,366,367,93,94,95,96,368,369,370,371,372,97,98,99,100,373,21,101,374,375,376,377,22,378,102,103,9,104],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[330,84,334,92,366,94,96,368,370,374,378],"status":-1,"binaryOperator":"int < int","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:865","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[22],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:105","sourceCode":"java.lang.StringBuffer.append(\"(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[137,379,380,381,44,160,161,162,163,72,305,307,308,382,383,384,385],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"buffer"}},{"transplant":{"position":"org.easymock.internal.MocksControl:257","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andReturn(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[167,202,269,326,328,329,82],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"answer"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[386,8],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[219],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[387,388],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[368],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MocksControl:136","failures":[387,389,390,391,388,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,421,422,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,310,311,312,438,5,439,440,441,442,443,444,445,446,386,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,18,483,484,485,486,487,488,8,10],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[110,23,112,113,114,116,117,390,120,121,24,135,136,137,138,139,25,26,140,141,27,161,162,163,166,172,176,181,182,396,207,208,209,211,212,213,214,215,216,217,218,219,239,240,268,270,271,272,273,68,275,276,424,425,277,278,293,294,295,296,69,70,297,71,305,73,307,308,316,317,318,319,440,443,448,323,80,81,83,84,86,332,87,88,90,336,339,345,346,347,348,370,371,377,22,10,104],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[83,89],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[137,379,380,160,382,384],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[0,1,2,489,490,438,5,6,386,8],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:214","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:155","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Class<?>.getDeclaredField(\"serialVersionUID\");\n    final int int = (java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int);\n    if (((java.lang.reflect.Field.getModifiers()) & int) == int) {\n        java.lang.reflect.Field.setAccessible(true);\n        return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null));\n    } \n} catch (final java.lang.NoSuchFieldException java.lang.NoSuchFieldException) {\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\");\n}","type":"CtTryImpl"},"failures":[491],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:305","failures":[154,155,180],"status":-1,"binaryOperator":"((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:215","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:190","failures":[24,142,27,144,145,146,147,148,163,251,257,73,308,476,485,334,339,346,347,366,368,369,371,98,374,375,376,22],"status":-1,"binaryOperator":"((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[7,8,9,10],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:173","failures":[327],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[330,84,334,92,366,94,96,368,370,374,378],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[120],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"org.easymock.internal.AndroidSupport.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"org.easymock.internal.AndroidSupport.boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[105,106,107,108,109,23,389,391,118,119,120,121,122,24,394,138,25,26,142,27,143,144,145,146,147,148,28,29,149,150,30,151,31,32,33,34,152,35,36,37,38,153,39,40,41,42,155,158,43,44,45,46,164,180,186,188,189,190,396,191,192,193,16,194,200,202,203,205,219,220,221,228,400,401,402,232,233,234,235,236,237,238,239,240,241,242,247,248,250,251,47,48,49,252,253,50,254,51,52,53,54,255,55,56,57,58,256,59,60,61,62,63,64,65,66,67,257,258,263,264,265,266,267,268,269,270,271,273,68,421,421,422,422,423,278,284,291,292,295,69,70,71,298,432,433,434,435,301,436,437,303,304,72,17,74,75,306,76,309,310,311,312,313,77,78,79,314,315,438,440,443,445,446,448,453,456,466,472,475,476,320,477,478,479,481,484,485,486,321,13,322,323,14,15,80,81,325,326,327,328,329,82,330,83,331,85,87,88,333,334,335,89,90,336,337,338,339,340,341,342,343,344,345,346,347,355,20,91,92,366,93,94,95,96,368,369,371,372,97,98,99,100,373,21,101,374,375,376,22,378,102,103,8,9,104],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"hashCodeMethod","equalsMethod":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:91","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:94","sourceCode":"return org.easymock.internal.MockInvocationHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])","type":"CtReturnImpl"},"failures":[105,106,107,108,109,23,389,391,118,119,120,121,122,24,394,135,137,138,139,25,26,140,142,27,143,144,145,146,147,148,28,29,149,150,30,151,31,32,33,34,152,35,36,37,38,153,39,40,41,42,154,155,158,43,44,160,161,45,46,162,163,164,180,186,188,189,190,396,191,192,193,16,194,195,196,197,198,199,200,202,203,205,218,219,220,221,228,400,401,402,232,233,234,235,236,237,238,239,240,241,242,247,248,250,251,47,48,49,252,253,50,254,51,52,53,54,255,55,56,57,58,256,59,60,61,62,63,64,65,66,67,257,258,259,260,261,263,264,265,266,267,268,269,270,271,273,68,421,421,422,422,423,278,284,291,292,293,295,296,69,70,297,71,298,432,433,434,435,301,436,437,303,304,72,305,17,73,74,75,306,307,308,76,309,310,311,312,313,77,78,79,314,315,438,440,443,445,446,448,449,453,456,466,472,475,476,320,477,478,479,481,484,485,486,321,13,322,323,14,15,80,81,325,326,327,328,329,82,330,83,84,331,85,86,332,87,88,333,334,335,89,90,336,337,338,339,340,341,342,343,344,345,346,347,355,362,363,364,20,91,92,366,93,94,95,96,368,369,370,371,372,97,98,99,100,373,21,101,374,375,376,377,22,378,102,103,8,9,104],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"method","finalizeMethod":"method"}},{"position":"org.easymock.internal.matchers.StartsWith:40","failures":[492],"status":-1,"binaryOperator":"(\"startsWith(\\\"\" + (java.lang.String))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Captures:53","failures":[493,330,83,84,331,85,86,332,87,88,333,334,335,89,90],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[98],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[126],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[218,367],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":366,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":43,"org.easymock.tests2.UsageTest.argumentsOrdered":308,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":346,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":285,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":174,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":73,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":275,"org.easymock.tests2.DelegateToTest.testReturnException":326,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":233,"org.easymock.tests.MockingTest.testPartialClassMocking":400,"org.easymock.tests.MockClassControlTest.testToString":408,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":11,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":158,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":488,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":183,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":460,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":456,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":48,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":292,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":0,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":369,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":118,"org.easymock.tests2.UsageTest.wrongArguments":305,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":361,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":261,"org.easymock.samples.ExampleTest.answerVsDelegate":269,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":405,"org.easymock.tests2.UsageConstraintsTest.testNull":94,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":231,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":477,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":413,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":345,"org.easymock.tests2.CaptureTest.testPrimitive":331,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":122,"org.easymock.tests.UsageTest.moreThanOneArgument":44,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":62,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":320,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":265,"org.easymock.tests.UsageTest.argumentsOrdered":163,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":238,"org.easymock.tests.UsageVarargTest.varargIntAccepted":209,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":179,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":191,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":439,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":4,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":430,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":289,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":444,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":167,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":194,"org.easymock.tests.ReplayStateInvalidUsageTest.times":131,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":355,"org.easymock.tests2.DependencyTest.testClassMocking":426,"org.easymock.tests2.AnswerTest.answer":321,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":370,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":181,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":365,"org.easymock.tests2.CaptureTest.testAnd":330,"org.easymock.tests2.UsageTest.strictResetToDefault":304,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":483,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":264,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":65,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":340,"org.easymock.tests2.DelegateToTest.testDelegate":82,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":242,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":256,"org.easymock.tests.LimitationsTest.mockFinalMethod":395,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":236,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":199,"org.easymock.tests2.DependencyTest.testClassMockingSupport":427,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":154,"org.easymock.tests2.CaptureTest.testCapture1_2446744":85,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":57,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":363,"org.easymock.tests.UsageThrowableTest.throwError":142,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":125,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":244,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":290,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":474,"org.easymock.samples.PartialClassMockTest.testGetArea":423,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":126,"org.easymock.tests.MockingTest.testInterfaceMocking":229,"org.easymock.tests2.CompareToTest.testLessOrEqual":19,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":192,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":461,"org.easymock.tests2.UsageTest.niceToStrict":17,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":49,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":227,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":165,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":443,"org.easymock.tests2.MockBuilderTest.testCreateMock":447,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":469,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":358,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":54,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":382,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":341,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":109,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":110,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":259,"org.easymock.tests.UsageOverloadedMethodTest.overloading":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":471,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":465,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":99,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":203,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":35,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":250,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":491,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":98,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":333,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":210,"org.easymock.tests2.EasyMockSupportClassTest.testAll":453,"org.easymock.tests.MockClassControlTest.testEquals":412,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":390,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":60,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":383,"org.easymock.tests2.CaptureTest.testCaptureAll":83,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":197,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":364,"org.easymock.tests.MockNameTest.defaultName":249,"org.easymock.tests2.UsageConstraintsTest.testMatches":100,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":123,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":266,"org.easymock.samples.ExampleTest.voteForRemovals":273,"org.easymock.tests.UsageVarargTest.allKinds":218,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":67,"org.easymock.samples.BasicClassMockTest.testPrintContent":425,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":198,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":147,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":293,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":237,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":286,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":329,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":490,"org.easymock.tests2.UsageConstraintsTest.greaterThan":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":454,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":64,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":486,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":420,"org.easymock.samples.ExampleTest.voteForRemoval":270,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":487,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":78,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":245,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":480,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":396,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":303,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":386,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":171,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":338,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":451,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":232,"org.easymock.tests2.CaptureTest.testCaptureFirst":90,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":325,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":12,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":339,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":309,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":206,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":32,"org.easymock.tests2.UsageTest.moreThanOneArgument":72,"org.easymock.tests2.CaptureTest.testCapture2_2446744":89,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":314,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":448,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":182,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":217,"org.easymock.tests.GenericTest.testBridgedEquals":388,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":116,"org.easymock.tests.UsageExpectAndReturnTest.longType":150,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":195,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":336,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":61,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":228,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":377,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":59,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":189,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":263,"org.easymock.tests.UsageCallCountTest.tooManyCalls":117,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":470,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":33,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":360,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":254,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":146,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":433,"org.easymock.tests.MockingTest.testNiceClassMocking":403,"org.easymock.tests.MockingTest.testClassMocking":398,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":111,"org.easymock.tests2.UsageConstraintsTest.testContains":97,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":312,"org.easymock.tests2.UsageConstraintsTest.testFind":93,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":47,"org.easymock.tests.MockTypeTest.fromEasyMockClass":243,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":135,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":81,"org.easymock.tests.UsageExpectAndReturnTest.object":152,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":481,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":359,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":344,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":1,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":212,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":225,"org.easymock.tests.UsageTest.exactCallCountByLastCall":164,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":105,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":170,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":157,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":239,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":381,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":5,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":39,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":207,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":202,"org.easymock.tests.MockClassControlTest.testHashCode":411,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":280,"org.easymock.tests2.EasyMockSupportTest.testVerify":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":463,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":240,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":108,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":200,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":362,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":349,"org.easymock.tests.UsageVarargTest.varargCharAccepted":211,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":187,"org.easymock.tests2.UsageTest.openCallCountByLastCall":74,"org.easymock.tests.DefaultClassInstantiatorTest.object":414,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":347,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":107,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":464,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":52,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":144,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":353,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":279,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":484,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":410,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":51,"org.easymock.tests.CapturesMatcherTest.test":493,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":40,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":188,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":472,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":409,"org.easymock.tests2.UsageTest.resumeIfFailure":76,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":404,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":429,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":235,"org.easymock.tests2.StubTest.stubWithReturnValue":298,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":6,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":34,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":22,"org.easymock.tests2.SerializationTest.testAllMockedMethod":10,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":180,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":384,"org.easymock.samples.SupportTest.voteForRemovals":278,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":387,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":282,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":56,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":7,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":186,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":13,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":159,"org.easymock.tests.UsageExpectAndThrowTest.object":255,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":375,"org.easymock.tests2.DelegateToTest.testWrongClass":328,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":247,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":248,"org.easymock.samples.ConstructorCalledMockTest.testTax":421,"org.easymock.tests.UsageStrictMockTest.range":25,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":299,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":343,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":432,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":55,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":445,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":450,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":162,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":133,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":260,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":379,"org.easymock.tests2.CaptureTest.testCaptureNone":88,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":221,"org.easymock.tests.UsageUnorderedTest.message":24,"org.easymock.tests.UsageVerifyTest.twoReturns":258,"org.easymock.tests.UsageVarargTest.varargByteAccepted":216,"org.easymock.tests2.ThreadingTest.testThreadSafe":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":467,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":114,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":424,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":226,"org.easymock.tests2.CaptureTest.testCapture_2617107":84,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":385,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":156,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":184,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":121,"org.easymock.tests2.UsageConstraintsTest.any":371,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":130,"org.easymock.tests2.StubTest.stub":71,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":190,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":185,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":234,"org.easymock.tests.UsageExpectAndThrowTest.longType":253,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":418,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":129,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":296,"org.easymock.tests2.SerializationTest.testClass":8,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":284,"org.easymock.tests.LimitationsTest.mockNativeMethod":394,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":391,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":42,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":352,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":297,"org.easymock.tests2.NameTest.nameForMocksControl":319,"org.easymock.tests2.MockedExceptionTest.testMockedException":311,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":455,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":46,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":402,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":50,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":324,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":475,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":446,"org.easymock.tests.MockingTest.testNicePartialClassMocking":401,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":479,"org.easymock.tests2.CaptureTest.testCaptureLast":87,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":350,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":155,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":437,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":368,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":376,"org.easymock.tests.MockingTest.testTwoMocks":399,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":302,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":28,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":53,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":307,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":102,"org.easymock.samples.ExampleTest.removeNonExistingDocument":274,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":127,"org.easymock.tests.UsageStrictMockTest.differentMethods":26,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":357,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":281,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":416,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":79,"org.easymock.tests2.MockBuilderTest.testCreateMockString":449,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":457,"org.easymock.tests.UsageExpectAndThrowTest.floatType":252,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":452,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":323,"org.easymock.tests.UsageVerifyTest.twoThrows":257,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":466,"org.easymock.samples.ExampleTest.voteAgainstRemoval":271,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":175,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":219,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":485,"org.easymock.tests.LimitationsTest.privateConstructor":393,"org.easymock.tests2.UsageConstraintsTest.testNotNull":378,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":148,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":310,"org.easymock.tests2.UsageTest.defaultResetToNice":306,"org.easymock.samples.ExampleTest.voteAgainstRemovals":268,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":176,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":153,"org.easymock.tests.UsageVarargTest.differentLength":213,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":351,"org.easymock.tests2.CallbackTest.callback":104,"org.easymock.tests2.UsageConstraintsTest.equals":367,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":482,"org.easymock.tests.UsageTest.openCallCountByLastCall":45,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":492,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":20,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":120,"org.easymock.tests.UsageCallCountTest.tooFewCalls":112,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":435,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":262,"org.easymock.tests.UsageThrowableTest.throwCheckedException":145,"org.easymock.tests.MockingTest.testStrictClassMocking":397,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":380,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":436,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":106,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":434,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":356,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":132,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":301,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":15,"org.easymock.tests.ObjectMethodsTest.testHashCode":224,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":3,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":315,"org.easymock.tests2.NameTest.nameForNiceMock":318,"org.easymock.tests2.DependencyTest.testInterfaceMocking":291,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":2,"org.easymock.samples.ExampleTest.addDocument":272,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":468,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":473,"org.easymock.tests2.DelegateToTest.testStubDelegate":327,"org.easymock.tests2.AnswerTest.stubAnswer":14,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":138,"org.easymock.tests.UsageVarargTest.varargLongAccepted":215,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":140,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":173,"org.easymock.tests.UsageExpectAndReturnTest.floatType":149,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":41,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":438,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":422,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":101,"org.easymock.tests.UsageThrowableTest.noUpperLimit":27,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":204,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":288,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":91,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":428,"org.easymock.tests2.SerializationTest.test":9,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":86,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":415,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":29,"org.easymock.tests2.UsageConstraintsTest.testSame":95,"org.easymock.samples.SupportTest.addDocument":277,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":458,"org.easymock.tests.GenericTest.testPackageScope":389,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":241,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":169,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":287,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":230,"org.easymock.tests2.NameTest.nameForMock":316,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":36,"org.easymock.tests2.UsageStrictMockTest.differentMethods":70,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":18,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":30,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":58,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":222,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":66,"org.easymock.tests2.MockedExceptionTest.testRealException":313,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":246,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":178,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":300,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":177,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":295,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":134,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":119,"org.easymock.tests2.NameTest.nameForStrictMock":317,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":442,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":80,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":478,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":431,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":417,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":374,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":440,"org.easymock.tests2.UsageStrictMockTest.range":69,"org.easymock.tests2.UsageConstraintsTest.lessThan":103,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":283,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":489,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":172,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":462,"org.easymock.tests2.CaptureTest.testCaptureRightOne":334,"org.easymock.tests2.UsageConstraintsTest.testOr":96,"org.easymock.tests.UsageRangeTest.combination":63,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":476,"org.easymock.tests.UsageTest.wrongArguments":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":459,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":407,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":151,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":166,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":37,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":419,"org.easymock.tests.UsageVarargTest.varargShortAccepted":214,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":115,"org.easymock.tests2.UsageConstraintsTest.cmpTo":372,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":322,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":168,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":75,"org.easymock.tests2.CaptureTest.testCaptureFromStub":335,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":124,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":441,"org.easymock.tests.UsageTest.unexpectedCallWithArray":160,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":137,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":113,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":38,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":139,"org.easymock.tests2.UsageConstraintsTest.constraints":92,"org.easymock.samples.ExampleTest.addAndChangeDocument":68,"org.easymock.tests.UsageStrictMockTest.testVerify":141,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":276,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":136,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":196,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":332,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":193,"org.easymock.tests.LimitationsTest.abstractClass":392,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":31,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":16,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":205,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":208,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":342}}]
