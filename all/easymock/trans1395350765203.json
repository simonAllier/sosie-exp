[{"position":"org.easymock.Capture:82","failures":[0,1,2,3,4,5,6,7,8,9,10,11],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Same:37","sourceCode":"return (java.lang.Object) == java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:45","sourceCode":"return org.easymock.internal.matchers.CompareTo<T>.matchResult(((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Comparable<T>))","type":"CtReturnImpl"},"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[28,29,30,31],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[32,33,34,35,36,37,38,39,40,41,42],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"paramType"}},{"transplant":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1459","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:62","sourceCode":"throw new java.lang.RuntimeException(\"An Object method could not be found!\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:296","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[43,44,45,46,47,48],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:164","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[49,50,51,52],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[53],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1542","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(long))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[105],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[106],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:46","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:45","sourceCode":"try {\n    return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n} finally {\n    java.util.concurrent.locks.ReentrantLock.unlock();\n}","type":"CtTryImpl"},"failures":[],"status":-2,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:800","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[26],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"failures":[43,44,45,46,47],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:572","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[107],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ExpectedInvocation:48","failures":[29],"status":-1,"binaryOperator":"(\"\" + (org.easymock.internal.Invocation.getArguments().int))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[108],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:643","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MocksControl:136","failures":[109,110,111,112,113,114,115,116,70,117,118,119,71,120,121,122,123,49,124,125,17,126,127,128,129,130,131,132,133,134,37,135,136,137,138,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,139,140,141,142,40,143,144,41,145,146,147,148,148,149,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[122],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":108,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":144,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":40,"org.easymock.tests2.CompareToTest.testGreateOrEqual":15,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":50,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":34,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":26,"org.easymock.tests2.SerializationTest.testAllMockedMethod":120,"org.easymock.tests.MockingTest.testPartialClassMocking":170,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":69,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":55,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":162,"org.easymock.samples.BasicClassMockTest.testPrintContent":152,"org.easymock.tests.MockClassControlTest.testToString":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":92,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":97,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":133,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":47,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":84,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":80,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":58,"org.easymock.tests2.UsageConstraintsTest.greaterThan":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":78,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":24,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":131,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":180,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":132,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":20,"org.easymock.samples.ConstructorCalledMockTest.testTax":148,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":134,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":125,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":149,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":186,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":141,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":161,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":135,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":100,"org.easymock.tests2.UsageConstraintsTest.testNull":28,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":123,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":4,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":160,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":115,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":70,"org.easymock.tests2.CaptureTest.testPrimitive":2,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":175,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":74,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":67,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":75,"org.easymock.tests2.CaptureTest.testCaptureFirst":11,"org.easymock.tests.UsageUnorderedTest.message":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":82,"org.easymock.tests.GenericTest.testPackageScope":163,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":118,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":44,"org.easymock.tests2.ThreadingTest.testThreadSafe":56,"org.easymock.tests.UsageTest.argumentsOrdered":64,"org.easymock.tests.GenericTest.testBridgedEquals":166,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":91,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":151,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":102,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":99,"org.easymock.tests2.CaptureTest.testCapture_2617107":1,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":109,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":106,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":137,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":48,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":114,"org.easymock.tests2.UsageConstraintsTest.any":107,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":36,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":127,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":178,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":52,"org.easymock.tests2.SerializationTest.testClass":71,"org.easymock.tests.LimitationsTest.mockNativeMethod":183,"org.easymock.tests2.DependencyTest.testClassMocking":139,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":165,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":94,"org.easymock.tests2.CaptureTest.testAnd":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":46,"org.easymock.tests2.UsageTest.strictResetToDefault":53,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":128,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":33,"org.easymock.tests2.MockedExceptionTest.testMockedException":146,"org.easymock.tests.MockingTest.testNiceClassMocking":173,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":142,"org.easymock.tests.MockingTest.testClassMocking":168,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":79,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":62,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":172,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":147,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":121,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":116,"org.easymock.tests.MockingTest.testNicePartialClassMocking":171,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":124,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":112,"org.easymock.tests.LimitationsTest.mockFinalMethod":184,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":73,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":49,"org.easymock.tests2.CaptureTest.testCaptureLast":6,"org.easymock.tests2.CompareToTest.testCompareEqual":14,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":138,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":177,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":105,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":41,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":30,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":25,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":17,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":110,"org.easymock.tests.MockingTest.testTwoMocks":169,"org.easymock.tests2.DependencyTest.testClassMockingSupport":140,"org.easymock.tests2.UsageConstraintsTest.lessThan":27,"org.easymock.tests2.CaptureTest.testCapture1_2446744":3,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":42,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":103,"org.easymock.tests.UsageTest.exactCallCountByLastCall":65,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":45,"org.easymock.tests2.CaptureTest.testCaptureRightOne":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":86,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":37,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":122,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":176,"org.easymock.tests.UsageTest.wrongArguments":60,"org.easymock.tests2.MockBuilderTest.testCreateMockString":119,"org.easymock.tests2.MockBuilderTest.testWithConstructor":32,"org.easymock.tests.MockClassControlTest.testHashCode":158,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":83,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":81,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":51,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":87,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":179,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":38,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":98,"org.easymock.tests2.UsageConstraintsTest.cmpTo":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":90,"org.easymock.samples.PartialClassMockTest.testGetArea":150,"org.easymock.tests2.CompareToTest.testLessOrEqual":16,"org.easymock.tests2.CompareToTest.testLessThan":12,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":85,"org.easymock.tests.LimitationsTest.privateConstructor":182,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":39,"org.easymock.tests2.UsageConstraintsTest.testNotNull":31,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":145,"org.easymock.tests.DefaultClassInstantiatorTest.object":174,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":72,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":104,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":43,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":113,"org.easymock.tests2.CaptureTest.testCaptureFromStub":10,"org.easymock.tests2.MockBuilderTest.testCreateMock":117,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":93,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":111,"org.easymock.tests.UsageTest.unexpectedCallWithArray":59,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":126,"org.easymock.tests.UsageTest.openCallCountByLastCall":61,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":54,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":88,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":57,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":18,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":35,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":101,"org.easymock.tests2.CaptureTest.testCapture":8,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":157,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":129,"org.easymock.tests2.UsageConstraintsTest.constraints":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":95,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":22,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":143,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":7,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":156,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":96,"org.easymock.tests2.CompareToTest.testGreateThan":13,"org.easymock.tests.MockClassControlTest.testEquals":159,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":5,"org.easymock.tests2.EasyMockSupportClassTest.testAll":77,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":185,"org.easymock.tests.LimitationsTest.abstractClass":181,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":164,"org.easymock.tests.MockingTest.testStrictClassMocking":167,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":68,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":136}}]
