[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:196","sourceCode":"java.lang.reflect.Method.setAccessible(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"failures":[0,1],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[14,15,16,17],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"m","name":"methodName"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:759","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[18,19,20,21],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[22],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,19,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,15,98,99,100,101,102,103,104,105,17,106,107,108,109,110,111,112,113],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:126","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>)","type":"CtInvocationImpl"},"failures":[23,114,115,116,117,118,119,120,24,25,121,26,27,122,28,29,123,124,125,126,127,128,129,130,131,131,132,133,134,135,136,137,138,30,139,31,140,141,32,33,142,143,144,145,146,147,148,34,149,150,151,152,153,154,155,35,36,156,157,158,37,159,160,38,39,40,41,42,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,43,190,44,45,46,47,48,191,49,50,51,52,53,54,192,193,55,56,57,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,59,60,226,61,62,63,64,65,66,67,68,69,227,70,71,228,229,72,73,74,230,231,232,233,234,235,236,18,75,237,76,238,239,77,19,78,240,241,79,20,242,80,243,244,81,82,83,84,85,86,245,21,246,247,248,249,250,251,252,253,87,88,89,254,90,91,92,93,94,95,255,256,96,257,258,259,260,261,262,263,264,97,265,266,267,268,269,270,15,271,272,273,274,98,275,276,99,277,278,100,101,279,280,281,102,103,282,283,284,285,286,287,288,289,290,291,104,292,293,105,294,295,296,22,16,17,297,298,299,8,300,301,302,9,303,304,106,107,108,109,110,111,112,113,305,306,307,308],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:202","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:643","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"failures":[5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ErrorMessage:51","failures":[309,43,190,63,111],"status":-1,"binaryOperator":"(org.easymock.internal.ErrorMessage.(getActualCount()) + 1)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"checkOrder":"matched","value":"matched"}},{"transplant":{"position":"org.easymock.internal.MocksControl:372","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1459","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:189","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, new net.sf.cglib.proxy.Callback[]{ org.easymock.internal.ClassProxyFactory.MockMethodInterceptor })","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:221","sourceCode":"return T","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:144","sourceCode":"org.easymock.internal.ErrorMessage.appendTo(java.lang.StringBuilder, int)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[310,309,141,32,33,150,156,43,190,54,62,63,80,276,283,106,110,111],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"errorMessage":"buffer","matches":"matches","m":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:161","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    return java.lang.reflect.Constructor<T>;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:162","sourceCode":"return java.lang.reflect.Constructor<T>","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"ret":"ret"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[33,311,152,153,35,36,43,190,226,63,278,102,103,111],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","threadSafe":"threadSafe"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"failures":[289,312],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[39,40,43],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[33,313,151,152,153,35,36,189,43,190,314,315,316,58,317,318,319,320,321,322,323,226,61,63,64,324,325,326,69,71,229,246,327,252,328,269,329,272,273,98,275,277,278,102,103,104,22,297,330,299,8,302,9,331,332,333,334,109,111,112],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:75","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[79],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"actual","this":"this"}},{"position":"org.easymock.internal.Range:36","failures":[23,114,115,116,117,118,119,120,24,25,121,26,27,122,28,335,29,336,337,338,339,340,123,124,125,126,127,0,128,129,341,1,342,343,130,344,132,133,134,135,136,137,345,346,138,30,139,31,140,141,32,33,347,348,349,350,351,352,353,354,355,356,357,358,359,142,143,144,145,146,147,148,34,149,360,361,362,313,150,151,152,153,154,155,35,36,156,157,158,363,364,365,37,159,160,38,39,40,41,42,366,367,368,369,370,371,372,373,374,375,376,377,161,162,378,163,379,380,381,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,43,190,44,45,46,382,47,48,191,49,50,51,52,53,383,384,314,315,316,385,386,387,54,388,192,193,55,56,57,194,195,58,317,389,318,390,391,319,320,321,322,323,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,392,216,217,218,393,219,220,394,395,221,396,397,398,222,223,224,225,59,60,226,61,62,63,64,65,399,400,401,402,403,324,404,405,325,326,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,66,67,68,69,227,70,71,228,229,72,73,74,230,430,431,432,433,434,435,436,231,232,233,234,235,236,18,75,437,237,76,238,239,77,19,438,78,240,241,79,20,242,80,243,244,81,82,83,84,85,86,245,21,439,440,441,442,443,444,246,327,445,446,447,448,449,247,248,249,250,251,450,451,452,453,454,252,328,455,456,457,458,459,253,87,88,89,254,90,91,92,93,94,95,255,256,96,460,461,257,258,259,260,261,462,262,263,264,463,97,265,266,267,268,269,2,270,329,3,464,15,271,272,4,273,465,466,274,98,6,275,276,99,277,278,100,101,279,280,281,102,103,282,283,284,7,467,285,468,469,286,287,288,289,312,290,291,104,292,293,105,294,295,470,296,471,472,22,16,17,297,473,330,298,299,8,300,474,301,302,9,10,303,304,106,475,331,332,333,334,107,108,109,110,111,112,113,476,477,478,305,479,480,306,481,482,483,484,485,486,487,488,489,307,490,491,492,493,494,308,495,496],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:53","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":75,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":150,"org.easymock.tests2.UsageTest.argumentsOrdered":103,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":73,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":327,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":416,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":101,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":116,"org.easymock.tests2.DelegateToTest.testReturnException":262,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":133,"org.easymock.tests.MockingTest.testPartialClassMocking":161,"org.easymock.tests.MockClassControlTest.testToString":314,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":475,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":425,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":484,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":196,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":306,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":258,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":19,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":55,"org.easymock.tests2.UsageTest.wrongArguments":278,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":459,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":224,"org.easymock.samples.ExampleTest.answerVsDelegate":121,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":321,"org.easymock.tests2.UsageConstraintsTest.testNull":76,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":380,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":293,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":387,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":72,"org.easymock.tests2.CaptureTest.testPrimitive":89,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":195,"org.easymock.tests.UsageTest.moreThanOneArgument":151,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":215,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":292,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":145,"org.easymock.tests.UsageTest.argumentsOrdered":36,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":336,"org.easymock.tests.UsageVarargTest.varargIntAccepted":46,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":421,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":184,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":269,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":448,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":432,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":271,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":408,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":188,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":252,"org.easymock.tests.ReplayStateInvalidUsageTest.times":355,"org.easymock.tests2.DependencyTest.testClassMocking":460,"org.easymock.tests2.AnswerTest.answer":285,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":438,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":423,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":268,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":391,"org.easymock.tests2.CaptureTest.testAnd":253,"org.easymock.tests2.UsageTest.strictResetToDefault":99,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":3,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":22,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":144,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":192,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":227,"org.easymock.tests2.DelegateToTest.testDelegate":97,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":340,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":211,"org.easymock.tests.LimitationsTest.mockFinalMethod":344,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":136,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":127,"org.easymock.tests2.DependencyTest.testClassMockingSupport":461,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":58,"org.easymock.tests2.CaptureTest.testCapture1_2446744":254,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":470,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":209,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":266,"org.easymock.tests.UsageThrowableTest.throwError":37,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":349,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":320,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":449,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":359,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":147,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":496,"org.easymock.samples.PartialClassMockTest.testGetArea":23,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":350,"org.easymock.tests.MockingTest.testInterfaceMocking":378,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":185,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":485,"org.easymock.tests2.UsageTest.niceToStrict":100,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":197,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":326,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":406,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":15,"org.easymock.tests2.MockBuilderTest.testCreateMock":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":492,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":456,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":205,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":70,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":390,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":365,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":345,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":222,"org.easymock.tests.UsageOverloadedMethodTest.overloading":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":494,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":489,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":20,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":220,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":175,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":148,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":79,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":94,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":382,"org.easymock.tests.MockClassControlTest.testEquals":386,"org.easymock.tests2.EasyMockSupportClassTest.testAll":305,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":129,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":213,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":125,"org.easymock.tests2.CaptureTest.testCaptureAll":87,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":267,"org.easymock.tests.MockNameTest.defaultName":313,"org.easymock.tests2.UsageConstraintsTest.testMatches":242,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":146,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":347,"org.easymock.samples.ExampleTest.voteForRemovals":28,"org.easymock.tests.UsageVarargTest.allKinds":53,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":189,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":126,"org.easymock.samples.BasicClassMockTest.testPrintContent":115,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":41,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":107,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":463,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":445,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":137,"org.easymock.tests2.UsageConstraintsTest.greaterThan":243,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":373,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":479,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":388,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":297,"org.easymock.samples.ExampleTest.voteForRemoval":26,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":374,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":473,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":248,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":322,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":433,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":295,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":142,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":276,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":466,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":413,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":68,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":477,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":132,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":462,"org.easymock.tests2.CaptureTest.testCaptureFirst":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":412,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":69,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":283,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":221,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":171,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":250,"org.easymock.tests2.CaptureTest.testCapture2_2446744":256,"org.easymock.tests2.UsageTest.moreThanOneArgument":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":424,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":98,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":52,"org.easymock.tests.GenericTest.testBridgedEquals":1,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":141,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":13,"org.easymock.tests.UsageExpectAndReturnTest.longType":167,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":123,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":66,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":214,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":392,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":84,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":212,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":397,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":143,"org.easymock.tests.UsageCallCountTest.tooManyCalls":32,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":138,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":493,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":172,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":458,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":201,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":40,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":299,"org.easymock.tests.MockingTest.testNiceClassMocking":381,"org.easymock.tests.MockingTest.testClassMocking":376,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":14,"org.easymock.tests2.UsageConstraintsTest.testContains":241,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":346,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":233,"org.easymock.tests2.UsageConstraintsTest.testFind":237,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":149,"org.easymock.tests.MockTypeTest.fromEasyMockClass":319,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":59,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":290,"org.easymock.tests.UsageExpectAndReturnTest.object":174,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":296,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":457,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":229,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":48,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":405,"org.easymock.tests.UsageTest.exactCallCountByLastCall":156,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":157,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":411,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":337,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":360,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":7,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":180,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":44,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":219,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":441,"org.easymock.tests.MockClassControlTest.testHashCode":385,"org.easymock.tests2.EasyMockSupportTest.testVerify":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":487,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":338,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":218,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":364,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":265,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":439,"org.easymock.tests.UsageVarargTest.varargCharAccepted":47,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":366,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":108,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":429,"org.easymock.tests2.UsageTest.openCallCountByLastCall":279,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":74,"org.easymock.tests.DefaultClassInstantiatorTest.object":367,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":363,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":324,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":488,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":203,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":38,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":453,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":440,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":16,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":316,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":202,"org.easymock.tests.CapturesMatcherTest.test":131,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":181,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":308,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":315,"org.easymock.tests2.UsageTest.resumeIfFailure":282,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":318,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":431,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":135,"org.easymock.tests2.StubTest.stubWithReturnValue":304,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":4,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":173,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":85,"org.easymock.tests2.SerializationTest.testAllMockedMethod":261,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":422,"org.easymock.samples.SupportTest.voteForRemovals":24,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":0,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":443,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":208,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":428,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":468,"org.easymock.tests.UsageExpectAndThrowTest.object":206,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":362,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":82,"org.easymock.tests2.DelegateToTest.testWrongClass":264,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":216,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":217,"org.easymock.samples.ConstructorCalledMockTest.testTax":117,"org.easymock.tests.UsageStrictMockTest.range":63,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":435,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":228,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":298,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":207,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":272,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":476,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":35,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":357,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":223,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":402,"org.easymock.tests2.CaptureTest.testCaptureNone":93,"org.easymock.tests.UsageUnorderedTest.message":33,"org.easymock.tests.UsageVerifyTest.twoReturns":190,"org.easymock.tests.UsageVarargTest.varargByteAccepted":51,"org.easymock.tests2.ThreadingTest.testThreadSafe":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":490,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":31,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":114,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":325,"org.easymock.tests2.CaptureTest.testCapture_2617107":88,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":389,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":426,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":194,"org.easymock.tests2.UsageConstraintsTest.any":78,"org.easymock.tests2.StubTest.stub":303,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":354,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":398,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":427,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":134,"org.easymock.tests.UsageExpectAndThrowTest.longType":199,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":371,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":353,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":110,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":246,"org.easymock.tests2.SerializationTest.testClass":259,"org.easymock.tests.LimitationsTest.mockNativeMethod":130,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":183,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":341,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":452,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":113,"org.easymock.tests2.NameTest.nameForMocksControl":334,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":454,"org.easymock.tests2.MockedExceptionTest.testMockedException":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":480,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":155,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":163,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":200,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":312,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":291,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":273,"org.easymock.tests.MockingTest.testNicePartialClassMocking":162,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":294,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":450,"org.easymock.tests2.CaptureTest.testCaptureLast":92,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":317,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":9,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":77,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":83,"org.easymock.tests.MockingTest.testTwoMocks":377,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":10,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":164,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":204,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":102,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":245,"org.easymock.samples.ExampleTest.removeNonExistingDocument":335,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":455,"org.easymock.tests.UsageStrictMockTest.differentMethods":64,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":351,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":442,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":369,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":249,"org.easymock.tests2.MockBuilderTest.testCreateMockString":275,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":383,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":481,"org.easymock.tests.UsageExpectAndThrowTest.floatType":198,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":478,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":286,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":467,"org.easymock.tests.UsageVerifyTest.twoThrows":43,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":307,"org.easymock.samples.ExampleTest.voteAgainstRemoval":27,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":417,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":400,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":17,"org.easymock.tests.LimitationsTest.privateConstructor":343,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":12,"org.easymock.tests2.UsageConstraintsTest.testNotNull":86,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":42,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":231,"org.easymock.tests2.UsageTest.defaultResetToNice":281,"org.easymock.samples.ExampleTest.voteAgainstRemovals":25,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":418,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":179,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":451,"org.easymock.tests.UsageVarargTest.differentLength":191,"org.easymock.tests2.CallbackTest.callback":106,"org.easymock.tests2.UsageConstraintsTest.equals":437,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":471,"org.easymock.tests.UsageTest.openCallCountByLastCall":154,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":235,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":57,"org.easymock.tests.UsageCallCountTest.tooFewCalls":30,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":300,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":225,"org.easymock.tests.UsageThrowableTest.throwCheckedException":39,"org.easymock.tests.MockingTest.testStrictClassMocking":375,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":158,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":302,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":8,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":328,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":356,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":301,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":288,"org.easymock.tests.ObjectMethodsTest.testHashCode":404,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":251,"org.easymock.tests2.NameTest.nameForNiceMock":333,"org.easymock.tests2.DependencyTest.testInterfaceMocking":257,"org.easymock.samples.ExampleTest.addDocument":122,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":491,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":495,"org.easymock.tests2.DelegateToTest.testStubDelegate":263,"org.easymock.tests2.AnswerTest.stubAnswer":287,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":61,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":465,"org.easymock.tests.UsageVarargTest.varargLongAccepted":50,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":65,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":415,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":182,"org.easymock.tests.UsageExpectAndReturnTest.floatType":166,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":284,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":118,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":447,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":394,"org.easymock.tests.UsageThrowableTest.noUpperLimit":159,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":244,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":236,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":430,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":90,"org.easymock.tests2.SerializationTest.test":260,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":368,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":165,"org.easymock.tests2.UsageConstraintsTest.testSame":238,"org.easymock.samples.SupportTest.addDocument":120,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":474,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":352,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":482,"org.easymock.tests.GenericTest.testPackageScope":128,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":339,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":410,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":446,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":379,"org.easymock.tests2.NameTest.nameForMock":331,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":176,"org.easymock.tests2.UsageStrictMockTest.differentMethods":112,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":6,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":472,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":168,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":210,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":403,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":193,"org.easymock.tests2.MockedExceptionTest.testRealException":234,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":323,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":436,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":420,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":419,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":109,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":56,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":358,"org.easymock.tests2.NameTest.nameForStrictMock":332,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":464,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":289,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":105,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":434,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":81,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":310,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":370,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":270,"org.easymock.tests2.UsageStrictMockTest.range":111,"org.easymock.tests2.UsageConstraintsTest.lessThan":21,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":444,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":414,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":67,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":486,"org.easymock.tests2.CaptureTest.testCaptureRightOne":95,"org.easymock.tests2.UsageConstraintsTest.testOr":239,"org.easymock.tests.UsageRangeTest.combination":54,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":104,"org.easymock.tests.UsageTest.wrongArguments":153,"org.easymock.tests2.MockBuilderTest.testWithConstructor":2,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":483,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":384,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":169,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":407,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":177,"org.easymock.tests.UsageVarargTest.varargShortAccepted":49,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":372,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":140,"org.easymock.tests2.UsageConstraintsTest.cmpTo":240,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":469,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":409,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":280,"org.easymock.tests2.CaptureTest.testCaptureFromStub":255,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":348,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":329,"org.easymock.tests.UsageTest.unexpectedCallWithArray":152,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":226,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":139,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":5,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":178,"org.easymock.tests2.UsageConstraintsTest.constraints":18,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":62,"org.easymock.samples.ExampleTest.addAndChangeDocument":29,"org.easymock.tests.UsageStrictMockTest.testVerify":399,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":119,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":60,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":124,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":91,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":186,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":170,"org.easymock.tests.LimitationsTest.abstractClass":342,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":395,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":187,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":45,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":71,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":309}}]
