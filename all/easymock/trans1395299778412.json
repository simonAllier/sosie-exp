[{"position":"org.easymock.internal.BridgeMethodResolver:131","failures":[0,1,2,3,4],"status":-1,"binaryOperator":"((java.lang.reflect.Method.getParameterTypes().int) == (java.lang.reflect.Method.getParameterTypes().int))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[5,6,7,8,9,10,11,12,13],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[14,13,15,16],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1221","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:71","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:180","failures":[17,5,6,7,18,19,8,9,10,11,12,20,13],"status":-1,"binaryOperator":"(java.lang.Class<?>[].int) != (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1952","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Captures:53","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.And:39","sourceCode":"if (!(org.easymock.IArgumentMatcher.matches(java.lang.Object))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[21,22,23,24],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1065","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:261","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[25,26,27,28,29,30,31,32,33],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:83","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[34,35,36,37,38,39,40,41,42,43,44,45,46,47,0,1,2,3,4,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,25,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,26,130,27,131,132,133,134,135,136,137,138,28,29,139,30,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,31,32,33,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,21,397,22,398,399,400,401,402,403,404,23,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,24,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,15,16,466],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","name":"name","this":"this"}},{"position":"org.easymock.EasyMock:1177","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[56,134,139],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[34,48,49,51,52,53,68,70,72,73,74,75,76,77,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,112,113,115,116,117,118,119,120,144,145,146,147,148,159,467,468,469,194,195,204,205,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,240,241,242,243,244,263,264,265,266,268,271,277,283,292,293,294,296,297,298,299,300,302,307,308,470,309,310,471,472,312,313,314,315,316,317,318,319,321,322,324,327,329,331,332,333,9,343,345,346,348,354,359,365,366,368,369,371,382,385,386,387,388,390,392,393,394,396,21,397,22,398,399,400,401,404,23,408,410,411,412,413,416,418,419,427,438,439,24,440,442,443,444,445,446,447,449,450,451,452,453,454,455,456,457,458,459,460,462,463,464,465,13,15,466],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:118","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:69","sourceCode":"continue","type":"CtContinueImpl"},"failures":[470,472,311,10,473,474,11,475,476,477,478],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[479],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[34,39,40,41,42,43,44,1,2,48,49,52,68,71,73,76,77,78,80,81,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,113,143,144,145,146,147,148,149,150,151,152,153,159,161,162,163,165,166,168,169,170,171,172,467,468,469,187,188,189,190,191,192,204,205,208,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,258,259,260,261,262,263,264,265,266,267,268,270,292,295,296,299,300,301,302,308,470,471,472,313,314,316,317,320,323,325,326,327,328,329,330,333,9,335,336,337,338,339,343,344,366,368,369,370,371,374,376,378,382,385,386,387,388,390,392,393,396,21,397,22,398,400,401,402,403,404,23,407,434,435,436,437,438,439,24,440,442,443,444,445,446,447,449,450,451,452,453,454,455,456,457,458,459,460,462,463,464,465,13,15,16,466],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:45","sourceCode":"java.lang.StringBuffer.append(\"[\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[480],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if ((this.java.lang.Object) == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"failures":[49,172,385,440,446],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"actual":"actual"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Result:115","sourceCode":"return org.easymock.IAnswer<?>.toString()","type":"CtReturnImpl"},"failures":[481,482,483],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:235","failures":[484,485,9,10,473,474,11,12,475,476,486,20,487,488,13],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:182","sourceCode":"if (java.lang.reflect.Proxy.java.lang.reflect.Proxy.isProxyClass(V.getClass())) {\n    return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]));\n} ","type":"CtIfImpl"},"failures":[53,72,73,75,76,107,108,113,114,115,118,119,174,177,199,203,206,242,243,244,283,296,298,299,305,314,315,321,322,427],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"m","method":"m"}},{"position":"org.easymock.EasyMock:583","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[1,2,3,68,143,182,467,468,469,484,484,485,485,271,274,275,489,307,308,470,309,471,472,327,9,339,340,341,343,344,345,346,347,348,349,352,354,359,365,366,367,369,370,371,372,374,376,377,378,379,13,16],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"type":"searchType"}},{"transplant":{"position":"org.easymock.internal.RecordState:309","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:251","sourceCode":"java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[107,108,155,158],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[370,455],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:95","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.util.Stack<org.easymock.IArgumentMatcher>.pop();\n}","type":"CtForImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[440,445,448],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:126","sourceCode":"java.lang.ClassLoader java.lang.ClassLoader = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:176","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[393],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[334],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:77","failures":[478,490],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:126","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:104","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":440,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":112,"org.easymock.tests2.UsageTest.argumentsOrdered":322,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":418,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":284,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":130,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":317,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":272,"org.easymock.tests2.DelegateToTest.testReturnException":392,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":188,"org.easymock.tests.MockingTest.testPartialClassMocking":467,"org.easymock.tests.MockClassControlTest.testToString":209,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":334,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":25,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":138,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":381,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":218,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":354,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":293,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":5,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":447,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":48,"org.easymock.tests2.UsageTest.wrongArguments":315,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":433,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":247,"org.easymock.samples.ExampleTest.answerVsDelegate":264,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":201,"org.easymock.tests2.UsageConstraintsTest.testNull":443,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":185,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":369,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":417,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":214,"org.easymock.tests2.CaptureTest.testPrimitive":398,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":52,"org.easymock.tests.UsageTest.moreThanOneArgument":113,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":237,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":368,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":260,"org.easymock.tests.UsageTest.argumentsOrdered":119,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":193,"org.easymock.tests.UsageVarargTest.varargIntAccepted":163,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":134,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":144,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":339,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":288,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":123,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":148,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":427,"org.easymock.tests.ReplayStateInvalidUsageTest.times":62,"org.easymock.tests2.DependencyTest.testClassMocking":290,"org.easymock.tests2.AnswerTest.answer":382,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":448,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":136,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":437,"org.easymock.tests2.CaptureTest.testAnd":21,"org.easymock.tests2.UsageTest.strictResetToDefault":313,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":474,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":376,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":259,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":412,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":240,"org.easymock.tests2.DelegateToTest.testDelegate":396,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":197,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":233,"org.easymock.tests.LimitationsTest.mockFinalMethod":69,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":191,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":153,"org.easymock.tests2.DependencyTest.testClassMockingSupport":291,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":107,"org.easymock.tests2.CaptureTest.testCapture1_2446744":399,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":373,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":231,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":435,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":56,"org.easymock.tests.UsageThrowableTest.throwError":79,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":200,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":289,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":262,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":486,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":477,"org.easymock.samples.PartialClassMockTest.testGetArea":271,"org.easymock.tests.MockingTest.testInterfaceMocking":183,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":57,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":145,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":32,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":178,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":219,"org.easymock.tests2.UsageTest.niceToStrict":316,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":357,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":490,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":121,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":343,"org.easymock.tests2.MockBuilderTest.testCreateMock":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":362,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":430,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":227,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":413,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":38,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":39,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":245,"org.easymock.tests.UsageOverloadedMethodTest.overloading":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":364,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":453,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":157,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":98,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":215,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":452,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":404,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":164,"org.easymock.tests.MockClassControlTest.testEquals":213,"org.easymock.tests2.EasyMockSupportClassTest.testAll":352,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":2,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":235,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":489,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":436,"org.easymock.tests2.CaptureTest.testCaptureAll":397,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":151,"org.easymock.tests.MockNameTest.defaultName":206,"org.easymock.tests2.UsageConstraintsTest.testMatches":454,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":54,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":261,"org.easymock.samples.ExampleTest.voteForRemovals":268,"org.easymock.tests.UsageVarargTest.allKinds":172,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":242,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":152,"org.easymock.samples.BasicClassMockTest.testPrintContent":275,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":85,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":294,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":395,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":192,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":285,"org.easymock.tests2.UsageConstraintsTest.greaterThan":456,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":8,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":256,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":239,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":379,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":257,"org.easymock.samples.ExampleTest.voteForRemoval":265,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":330,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":380,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":202,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":372,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":143,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":312,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":128,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":410,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":351,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":187,"org.easymock.tests2.CaptureTest.testCaptureFirst":407,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":391,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":127,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":411,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":324,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":160,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":94,"org.easymock.tests2.CaptureTest.testCapture2_2446744":406,"org.easymock.tests2.UsageTest.moreThanOneArgument":314,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":332,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":137,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":348,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":171,"org.easymock.tests.GenericTest.testBridgedEquals":4,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":46,"org.easymock.tests.UsageExpectAndReturnTest.longType":90,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":408,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":149,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":236,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":461,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":179,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":234,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":141,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":258,"org.easymock.tests.UsageCallCountTest.tooManyCalls":47,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":363,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":95,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":432,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":223,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":84,"org.easymock.tests.MockingTest.testNiceClassMocking":186,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":308,"org.easymock.tests.MockingTest.testClassMocking":181,"org.easymock.tests2.UsageConstraintsTest.testContains":451,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":40,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":327,"org.easymock.tests2.UsageConstraintsTest.testFind":442,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":217,"org.easymock.tests.MockTypeTest.fromEasyMockClass":199,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":390,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":70,"org.easymock.tests.UsageExpectAndReturnTest.object":97,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":374,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":431,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":416,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":166,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":6,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":176,"org.easymock.tests.UsageTest.exactCallCountByLastCall":120,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":34,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":126,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":110,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":194,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":10,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":161,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":103,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":156,"org.easymock.tests.ResultTest.createThrowResultToString":483,"org.easymock.tests.MockClassControlTest.testHashCode":212,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":279,"org.easymock.tests2.EasyMockSupportTest.testVerify":420,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":195,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":154,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":37,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":434,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":421,"org.easymock.tests.UsageVarargTest.varargCharAccepted":165,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":249,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":30,"org.easymock.tests2.UsageTest.openCallCountByLastCall":318,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":419,"org.easymock.tests.DefaultClassInstantiatorTest.object":250,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":36,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":174,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":358,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":82,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":425,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":278,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":211,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":377,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":224,"org.easymock.tests.CapturesMatcherTest.test":480,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":104,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":140,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":210,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":365,"org.easymock.tests2.UsageTest.resumeIfFailure":323,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":198,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":190,"org.easymock.tests2.StubTest.stubWithReturnValue":302,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":11,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":462,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":96,"org.easymock.tests2.SerializationTest.testAllMockedMethod":16,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":135,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":487,"org.easymock.samples.SupportTest.voteForRemovals":277,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":0,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":281,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":230,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":14,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":139,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":383,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":111,"org.easymock.tests.UsageExpectAndThrowTest.object":228,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":459,"org.easymock.tests2.DelegateToTest.testWrongClass":394,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":204,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":205,"org.easymock.samples.ConstructorCalledMockTest.testTax":484,"org.easymock.tests.UsageStrictMockTest.range":75,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":305,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":415,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":307,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":229,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":345,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":118,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":64,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":350,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":246,"org.easymock.tests2.CaptureTest.testCaptureNone":403,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":33,"org.easymock.tests.UsageUnorderedTest.message":53,"org.easymock.tests.UsageVerifyTest.twoReturns":244,"org.easymock.tests.UsageVarargTest.varargByteAccepted":170,"org.easymock.tests2.ThreadingTest.testThreadSafe":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":360,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":44,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":177,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":274,"org.easymock.tests2.CaptureTest.testCapture_2617107":22,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":109,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":28,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":51,"org.easymock.tests2.UsageConstraintsTest.any":449,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":61,"org.easymock.tests2.StubTest.stub":301,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":142,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":29,"org.easymock.tests.UsageExpectAndThrowTest.longType":221,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":254,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":60,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":297,"org.easymock.tests2.SerializationTest.testClass":13,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":283,"org.easymock.tests.LimitationsTest.mockNativeMethod":68,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":106,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":3,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":424,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":300,"org.easymock.tests2.NameTest.nameForMocksControl":338,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":426,"org.easymock.tests2.MockedExceptionTest.testMockedException":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":353,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":117,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":469,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":389,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":222,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":366,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":346,"org.easymock.tests.MockingTest.testNicePartialClassMocking":468,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":371,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":422,"org.easymock.tests2.CaptureTest.testCaptureLast":402,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":17,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":108,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":472,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":446,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":460,"org.easymock.tests.MockingTest.testTwoMocks":182,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":311,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":87,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":226,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":321,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":464,"org.easymock.samples.ExampleTest.removeNonExistingDocument":269,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":429,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":58,"org.easymock.tests.UsageStrictMockTest.differentMethods":76,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":280,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":252,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":331,"org.easymock.tests2.MockBuilderTest.testCreateMockString":349,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":207,"org.easymock.tests.UsageExpectAndThrowTest.floatType":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":355,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":455,"org.easymock.tests.ResultTest.createReturnResultToString":482,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":385,"org.easymock.tests.UsageVerifyTest.twoThrows":243,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":359,"org.easymock.tests.ResultTest.createDelegateResultToString":481,"org.easymock.samples.ExampleTest.voteAgainstRemoval":266,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":31,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":27,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":378,"org.easymock.tests.LimitationsTest.privateConstructor":67,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":478,"org.easymock.tests2.UsageConstraintsTest.testNotNull":463,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":86,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":325,"org.easymock.tests2.UsageTest.defaultResetToNice":320,"org.easymock.samples.ExampleTest.voteAgainstRemovals":263,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":131,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":102,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":423,"org.easymock.tests.UsageVarargTest.differentLength":167,"org.easymock.tests2.CallbackTest.callback":466,"org.easymock.tests2.UsageConstraintsTest.equals":441,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":488,"org.easymock.tests.UsageTest.openCallCountByLastCall":116,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":438,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":50,"org.easymock.tests.UsageCallCountTest.tooFewCalls":42,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":309,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":248,"org.easymock.tests.UsageThrowableTest.throwCheckedException":83,"org.easymock.tests.MockingTest.testStrictClassMocking":180,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":471,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":35,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":470,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":428,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":63,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":310,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":387,"org.easymock.tests.ObjectMethodsTest.testHashCode":175,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":19,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":333,"org.easymock.tests2.NameTest.nameForNiceMock":337,"org.easymock.tests2.DependencyTest.testInterfaceMocking":292,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":7,"org.easymock.samples.ExampleTest.addDocument":267,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":361,"org.easymock.tests2.DelegateToTest.testStubDelegate":393,"org.easymock.tests2.AnswerTest.stubAnswer":386,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":73,"org.easymock.tests.UsageVarargTest.varargLongAccepted":169,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":77,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":26,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":105,"org.easymock.tests.UsageExpectAndReturnTest.floatType":89,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":9,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":485,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":457,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":158,"org.easymock.tests.UsageThrowableTest.noUpperLimit":80,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":287,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":439,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":303,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":400,"org.easymock.tests2.SerializationTest.test":15,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":479,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":251,"org.easymock.tests2.UsageConstraintsTest.testSame":444,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":88,"org.easymock.samples.SupportTest.addDocument":276,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":59,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":356,"org.easymock.tests.GenericTest.testPackageScope":1,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":196,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":125,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":286,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":184,"org.easymock.tests2.NameTest.nameForMock":335,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":99,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":476,"org.easymock.tests2.UsageStrictMockTest.differentMethods":299,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":375,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":91,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":232,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":173,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":241,"org.easymock.tests2.MockedExceptionTest.testRealException":328,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":203,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":133,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":306,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":20,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":132,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":296,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":49,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":65,"org.easymock.tests2.NameTest.nameForStrictMock":336,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":342,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":388,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":370,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":304,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":458,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":253,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":340,"org.easymock.tests2.UsageStrictMockTest.range":298,"org.easymock.tests2.UsageConstraintsTest.lessThan":465,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":282,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":409,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":129,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":18,"org.easymock.tests2.CaptureTest.testCaptureRightOne":23,"org.easymock.tests2.UsageConstraintsTest.testOr":445,"org.easymock.tests.UsageRangeTest.combination":238,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":367,"org.easymock.tests.UsageTest.wrongArguments":115,"org.easymock.tests2.MockBuilderTest.testWithConstructor":473,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":208,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":92,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":122,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":100,"org.easymock.tests.UsageVarargTest.varargShortAccepted":168,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":255,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":45,"org.easymock.tests2.UsageConstraintsTest.cmpTo":450,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":384,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":124,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":319,"org.easymock.tests2.CaptureTest.testCaptureFromStub":405,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":55,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":341,"org.easymock.tests.UsageTest.unexpectedCallWithArray":114,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":72,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":43,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":475,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":101,"org.easymock.tests2.UsageConstraintsTest.constraints":24,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":74,"org.easymock.samples.ExampleTest.addAndChangeDocument":270,"org.easymock.tests.UsageStrictMockTest.testVerify":78,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":273,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":71,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":150,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":401,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":146,"org.easymock.tests.LimitationsTest.abstractClass":66,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":93,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":159,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":147,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":414,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":162}}]
