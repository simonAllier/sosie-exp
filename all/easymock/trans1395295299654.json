[{"transplantationPoint":{"position":"org.easymock.internal.RecordState:64","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Float.java.lang.Class<java.lang.Float>, java.lang.Float.java.lang.Float)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[6,7],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:126","failures":[8,9,10,11,12],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"failures":[13,14],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:226","sourceCode":"try {\n    net.sf.cglib.proxy.Factory = ((net.sf.cglib.proxy.Factory)(org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getInstantiator().newInstance(java.lang.Class<?>)));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(((((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM())) + \" JVM\"));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"mockClass"}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[15,16,17,18,19,20],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[21,22,23,24],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[25,26,27,28,29,30,31,32,33],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[34,35,36,37,38,39,40,41],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:124","sourceCode":"int int = 0","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:157","sourceCode":"final int int = (java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","type":"CtLocalVariableImpl"},"failures":[42],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:83","failures":[43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,0,77,1,78,79,80,81,82,83,84,85,86,87,88,89,90,2,3,91,92,93,94,95,96,97,98,99,100,101,102,103,8,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,4,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,5,157,158,159,160,161,9,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,39,208,209,210,211,212,213,214,215,216,217,218,10,219,11,12,25,220,26,221,222,223,224,225,226,227,27,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,28,29,246,247,248,30,31,249,250,251,252,253,254,255,256,257,258,33,259,260,261,262,263,264,7,23,24,265],"status":-1,"binaryOperator":"(java.lang.Object == (java.lang.Object[][0]))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:25","sourceCode":"new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:135","sourceCode":"java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader()","type":"CtAssignmentImpl"},"failures":[266],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1471","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.EndsWith:36","sourceCode":"return (java.lang.Object instanceof java.lang.String) && (((java.lang.String)(java.lang.Object)).endsWith(java.lang.String))","type":"CtReturnImpl"},"failures":[245],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:44","failures":[43,44,267,268,269,270,271,45,46,47,48,272,49,50,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,51,52,296,53,54,55,56,57,58,59,297,298,299,300,301,302,303,304,305,306,307,308,309,310,60,311,312,61,15,62,63,64,65,66,313,67,68,69,70,71,72,73,74,75,76,0,77,1,78,79,80,81,82,83,84,85,86,87,88,89,90,2,3,314,315,316,317,318,319,91,92,18,320,93,94,95,321,96,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,97,98,99,100,101,102,349,350,351,352,353,103,354,8,104,355,356,357,105,106,107,358,108,109,359,110,111,112,113,114,360,361,362,115,363,364,116,365,366,367,368,369,370,371,372,373,374,375,376,377,117,118,119,120,121,122,378,123,124,379,380,381,382,383,384,385,386,387,388,4,125,389,390,391,392,393,394,395,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,396,152,153,154,155,156,397,398,399,400,401,402,403,404,405,406,407,5,157,158,159,160,161,9,162,163,164,165,408,166,409,410,411,167,168,169,170,171,172,412,413,414,13,415,173,416,417,418,419,420,421,422,423,174,175,424,176,177,178,179,180,181,182,183,425,426,427,428,429,430,184,431,34,185,432,186,433,434,35,187,188,189,435,190,191,192,193,436,194,437,195,196,197,198,199,200,201,438,202,203,204,205,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,206,462,463,464,465,466,467,468,469,470,471,472,36,473,474,475,476,477,478,479,37,38,207,39,208,209,210,211,480,481,212,482,483,40,484,485,41,486,487,213,488,489,214,215,216,217,490,218,491,266,492,493,494,495,496,10,219,11,497,12,25,220,26,221,222,223,224,225,226,227,27,228,229,230,231,232,233,234,235,236,237,498,238,239,240,241,242,499,500,501,502,14,503,243,504,505,506,507,508,509,510,511,512,513,244,245,28,29,514,246,247,248,30,31,249,32,250,251,252,253,254,255,256,257,258,33,259,260,261,262,263,264,7,22,23,24,265],"status":-1,"binaryOperator":"(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1659","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(long[]))","type":"CtInvocationImpl"},"failures":[253],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[51,52,296,60,97,370,371,372,374,409,409,410,410,411,169,170,515,184,431,34,185,433,434,199,439,446,447,448,450,451,452,453,456,457,458,206,464,473,479,207,39,209,210,211,480,212,40,484,485,41,22,24],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:194","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Byte.java.lang.Class<java.lang.Byte>)) {\n    return java.lang.Number.byteValue();\n} else if (java.lang.Class<?>.equals(java.lang.Short.java.lang.Class<java.lang.Short>)) {\n    return java.lang.Number.shortValue();\n} else if (java.lang.Class<?>.equals(java.lang.Integer.java.lang.Class<java.lang.Integer>)) {\n    return java.lang.Number.intValue();\n} else if (java.lang.Class<?>.equals(java.lang.Long.java.lang.Class<java.lang.Long>)) {\n    return java.lang.Number.longValue();\n} else if (java.lang.Class<?>.equals(java.lang.Float.java.lang.Class<java.lang.Float>)) {\n    return java.lang.Number.floatValue();\n} else if (java.lang.Class<?>.equals(java.lang.Double.java.lang.Class<java.lang.Double>)) {\n    return java.lang.Number.doubleValue();\n} else {\n    return java.lang.Number;\n}","type":"CtIfImpl"},"failures":[75,76,0,77,1,81,82,88,89,90,2,3,98,100,102,4,125,5,157,159,161,162,163,165,409,409,410,410,172],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[516,517,518],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:230","sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[519],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[15,16,17,18,19,20],"status":-1,"binaryOperator":"int > 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[21,22,23,24],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:946","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:82","sourceCode":"if (java.lang.reflect.Method.equals(java.lang.reflect.Method)) {\n    return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])));\n} ","type":"CtIfImpl"},"failures":[43,44,267,268,269,270,45,51,296,53,54,55,56,57,58,59,60,312,15,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,0,77,1,78,79,80,81,82,83,84,85,86,87,88,89,90,2,3,314,315,318,91,92,18,320,93,94,95,321,96,338,344,346,347,348,97,98,99,100,101,102,349,350,351,352,353,103,354,8,104,355,356,357,114,360,361,362,115,363,364,116,365,366,367,370,371,372,374,117,118,119,120,121,122,378,123,124,379,380,381,384,385,386,387,388,4,125,389,390,392,393,394,395,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,396,152,153,154,155,156,397,398,399,400,5,157,158,159,160,161,9,162,163,165,166,409,409,410,410,411,172,173,416,174,175,424,177,178,179,180,181,182,183,184,431,34,185,186,433,434,187,188,189,435,190,191,192,193,436,194,437,195,196,197,198,199,200,201,202,203,204,205,439,442,446,447,448,450,451,452,453,456,457,458,206,464,473,479,207,39,208,209,210,211,480,212,40,484,485,41,487,213,488,489,214,215,216,217,218,496,10,219,11,497,12,25,220,26,221,222,223,224,225,226,227,27,228,229,230,231,232,233,234,235,236,237,498,238,239,240,241,242,243,504,510,511,512,513,244,245,28,29,246,247,248,30,31,249,32,250,251,252,253,254,255,256,257,258,33,259,260,261,262,263,264,7,22,23,265],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:181","sourceCode":"return false","type":"CtReturnImpl"},"failures":[520,521,522,523,524,525,526,440,527,22],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[212,528,251],"status":-1,"binaryOperator":"int == 0","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:120","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[529],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"this.boolean = true","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"position":"org.easymock.internal.RecordState:85","failures":[43,44,270,271,45,46,47,48,272,49,50,51,52,54,55,56,57,58,59,297,298,299,300,301,302,303,304,305,306,307,308,60,312,61,15,62,63,64,65,66,313,67,68,69,70,71,72,73,74,75,76,0,77,1,78,79,80,81,82,83,84,85,86,87,88,89,90,2,3,91,92,18,320,93,94,95,321,96,97,98,99,100,101,102,349,350,351,352,353,103,8,104,356,357,105,106,107,108,109,359,110,111,112,113,114,363,364,116,371,372,374,117,118,119,120,121,122,4,125,390,391,392,393,394,395,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,396,152,153,154,155,156,397,398,399,400,401,5,157,158,159,160,161,9,162,163,164,165,408,166,409,409,410,410,411,167,168,169,170,171,172,173,174,175,424,176,177,178,179,180,181,182,183,184,431,34,185,186,433,434,187,188,189,435,190,191,192,193,436,194,437,195,196,197,198,199,200,201,202,203,204,205,439,442,443,444,445,446,447,450,451,452,453,456,457,458,206,464,473,479,207,39,208,209,210,211,480,212,40,484,485,41,213,214,215,216,217,218,10,219,11,12,25,220,26,221,222,223,224,225,226,227,27,228,229,230,231,232,233,234,235,236,237,498,238,239,240,241,242,499,243,510,511,512,513,244,245,28,29,246,247,248,30,31,249,250,251,252,253,254,255,256,257,258,33,259,260,261,262,263,264,7,22,23,24,265],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[438,495],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:57","failures":[],"status":0,"binaryOperator":"(((this.java.lang.Object) != null) && (this.java.lang.Object.equals(org.easymock.internal.matchers.Equals.java.lang.Object)))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[401,402,403,404,406,407],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[529,530,25,220,26,221,222,223,224,225,226,227,531,27,228,229,230],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1079","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.InstanceOf(java.lang.Class<T>))","type":"CtInvocationImpl"},"failures":[26,28,31,33],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[21,22,23,24],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MocksControl:105","failures":[43,44,267,268,269,270,271,45,46,47,48,272,49,50,295,51,52,296,53,54,55,56,57,58,59,297,298,299,300,301,302,303,304,305,306,307,308,309,310,60,311,312,61,15,62,63,64,65,66,313,67,68,69,70,71,72,73,74,75,76,0,77,1,78,79,80,81,82,83,84,85,86,87,88,89,90,2,3,314,315,316,317,318,319,91,92,18,320,93,94,95,321,96,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,97,98,99,100,101,102,349,350,351,352,353,103,354,8,104,355,356,357,105,106,107,358,108,109,359,110,111,112,113,114,360,361,362,115,363,364,116,365,366,367,368,369,370,371,372,373,374,375,376,377,117,118,119,120,121,122,378,123,124,379,380,381,384,385,386,387,388,4,125,389,390,391,392,393,394,395,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,396,152,153,154,155,156,397,398,399,400,401,402,403,404,405,406,407,5,157,158,159,160,161,9,162,163,164,165,408,166,409,409,410,410,411,167,168,169,170,171,172,412,413,414,13,415,173,416,417,418,419,420,421,422,423,174,175,424,176,177,178,179,180,181,182,183,425,428,429,430,184,431,34,185,186,433,434,187,188,189,435,190,191,192,193,436,194,437,195,196,197,198,199,200,201,202,203,204,205,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,455,456,457,458,459,460,461,206,462,463,464,465,466,467,468,469,470,471,472,36,473,474,475,476,477,478,479,37,38,207,39,208,209,210,211,480,481,212,482,483,40,484,485,41,486,487,213,488,489,214,215,216,217,490,218,496,10,219,11,497,12,25,220,26,221,222,223,224,225,226,227,27,228,229,230,231,232,233,234,235,236,237,498,238,239,240,241,242,499,500,501,502,14,503,243,504,505,506,507,508,509,510,511,512,513,244,245,28,29,514,246,247,248,30,31,249,32,250,251,252,253,254,255,256,257,258,33,259,260,261,262,263,264,7,22,23,24,265],"status":-1,"binaryOperator":"(java.lang.Class<T>.isInterface()) && (java.lang.reflect.Method[] != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","sourceCode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.And:38","sourceCode":"for (final org.easymock.IArgumentMatcher org.easymock.IArgumentMatcher : java.util.List<org.easymock.IArgumentMatcher>) {\n    if (!(org.easymock.IArgumentMatcher.matches(java.lang.Object))) {\n        return false;\n    } \n}","type":"CtForEachImpl"},"failures":[25,26,27,28,31],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[267,346],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"failures":[405,42],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:163","failures":[409,410,532,533,482],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.EasyMockProperties:119","failures":[438,481,495],"status":-1,"binaryOperator":"java.lang.String == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[299],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":29,"org.easymock.tests2.UsageTest.argumentsOrdered":437,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":91,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":240,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":332,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":191,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":167,"org.easymock.tests2.DelegateToTest.testReturnException":10,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":118,"org.easymock.tests.MockingTest.testPartialClassMocking":371,"org.easymock.tests.MockClassControlTest.testToString":392,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":441,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":318,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":468,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":464,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":131,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":175,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":294,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":521,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":249,"org.easymock.tests2.UsageTest.wrongArguments":435,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":54,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":509,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":399,"org.easymock.samples.ExampleTest.answerVsDelegate":9,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":386,"org.easymock.tests2.UsageConstraintsTest.testNull":247,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":376,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":209,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":127,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":239,"org.easymock.tests2.CaptureTest.testPrimitive":221,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":58,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":150,"org.easymock.tests.UsageTest.moreThanOneArgument":92,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":208,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":158,"org.easymock.tests.UsageTest.argumentsOrdered":321,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":378,"org.easymock.tests.UsageVarargTest.varargIntAccepted":107,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":519,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":337,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":98,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":525,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":446,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":427,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":420,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":451,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":324,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":102,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":278,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":243,"org.easymock.tests.ReplayStateInvalidUsageTest.times":305,"org.easymock.tests2.DependencyTest.testClassMocking":422,"org.easymock.tests2.AnswerTest.answer":213,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":32,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":339,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":513,"org.easymock.tests2.CaptureTest.testAnd":25,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":383,"org.easymock.tests2.UsageTest.strictResetToDefault":188,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":40,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":157,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":152,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":235,"org.easymock.tests2.DelegateToTest.testDelegate":12,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":380,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":277,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":146,"org.easymock.tests.LimitationsTest.mockFinalMethod":311,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":121,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":353,"org.easymock.tests2.DependencyTest.testClassMockingSupport":423,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":314,"org.easymock.tests2.CaptureTest.testCapture1_2446744":222,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":481,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":144,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":511,"org.easymock.tests.UsageThrowableTest.throwError":67,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":299,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":385,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":421,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":38,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":281,"org.easymock.samples.PartialClassMockTest.testGetArea":411,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":300,"org.easymock.tests.MockingTest.testInterfaceMocking":373,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":99,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":469,"org.easymock.tests2.UsageTest.niceToStrict":190,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":132,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":366,"org.easymock.tests2.ThreadingTest.testChangeDefault":438,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":518,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":322,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":450,"org.easymock.tests2.MockBuilderTest.testCreateMock":456,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":476,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":506,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":140,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":19,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":236,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":382,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":269,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":270,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":397,"org.easymock.tests.UsageOverloadedMethodTest.overloading":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":478,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":36,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":104,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":254,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":128,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":84,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":253,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":227,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":358,"org.easymock.tests.MockClassControlTest.testEquals":126,"org.easymock.tests2.EasyMockSupportClassTest.testAll":206,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":52,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":148,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":515,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":512,"org.easymock.tests2.CaptureTest.testCaptureAll":220,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":351,"org.easymock.tests.MockNameTest.defaultName":389,"org.easymock.tests2.UsageConstraintsTest.testMatches":255,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":159,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":297,"org.easymock.samples.ExampleTest.voteForRemovals":165,"org.easymock.tests.UsageVarargTest.allKinds":114,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":154,"org.easymock.samples.BasicClassMockTest.testPrintContent":170,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":352,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":73,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":424,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":497,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":417,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":122,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":526,"org.easymock.tests2.UsageConstraintsTest.greaterThan":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":462,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":396,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":41,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":282,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":407,"org.easymock.samples.ExampleTest.voteForRemoval":162,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":486,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":202,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":387,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":480,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":274,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":187,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":97,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":455,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":329,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":233,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":460,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":117,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":496,"org.easymock.tests2.CaptureTest.testCaptureFirst":230,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":328,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":234,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":196,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":357,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":80,"org.easymock.tests2.UsageTest.moreThanOneArgument":189,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":204,"org.easymock.tests2.CaptureTest.testCapture2_2446744":229,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":457,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":340,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":113,"org.easymock.tests.GenericTest.testBridgedEquals":53,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":49,"org.easymock.tests.UsageExpectAndReturnTest.longType":77,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":231,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":349,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":149,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":261,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":367,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":147,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":5,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":347,"org.easymock.tests.UsageCallCountTest.tooManyCalls":50,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":45,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":477,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":81,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":508,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":136,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":72,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":431,"org.easymock.tests.MockingTest.testNiceClassMocking":377,"org.easymock.tests.MockingTest.testClassMocking":369,"org.easymock.tests2.UsageConstraintsTest.testContains":252,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":271,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":199,"org.easymock.tests2.UsageConstraintsTest.testFind":246,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":130,"org.easymock.tests.MockTypeTest.fromEasyMockClass":384,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":218,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":312,"org.easymock.tests.UsageExpectAndReturnTest.object":83,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":212,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":507,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":238,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":522,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":109,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":116,"org.easymock.tests.UsageTest.exactCallCountByLastCall":96,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":43,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":327,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":123,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":317,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":440,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":105,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":89,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":8,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":413,"org.easymock.tests.MockClassControlTest.testHashCode":395,"org.easymock.tests2.EasyMockSupportTest.testVerify":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":471,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":124,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":103,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":268,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":510,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":499,"org.easymock.tests.UsageVarargTest.varargCharAccepted":108,"org.easymock.tests2.CaptureTest.testCaptureMultiple":530,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":176,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":345,"org.easymock.tests2.UsageTest.openCallCountByLastCall":192,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":516,"org.easymock.tests.DefaultClassInstantiatorTest.object":401,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":241,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":267,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":363,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":472,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":138,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":70,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":14,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":412,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":484,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":394,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":280,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":137,"org.easymock.tests.CapturesMatcherTest.test":529,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":90,"org.easymock.tests.ReplayStateInvalidCallsTest.times":286,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":346,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":479,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":393,"org.easymock.tests2.UsageTest.resumeIfFailure":195,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":381,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":426,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":120,"org.easymock.tests2.StubTest.stubWithReturnValue":183,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":527,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":82,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":262,"org.easymock.tests2.SerializationTest.testAllMockedMethod":24,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":338,"org.easymock.samples.SupportTest.voteForRemovals":172,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":20,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":295,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":13,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":143,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":21,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":344,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":488,"org.easymock.tests.UsageExpectAndThrowTest.object":141,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":319,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":259,"org.easymock.tests2.DelegateToTest.testWrongClass":11,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":4,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":284,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":125,"org.easymock.samples.ConstructorCalledMockTest.testTax":409,"org.easymock.tests.UsageStrictMockTest.range":64,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":429,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":498,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":184,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":142,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":452,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":459,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":95,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":307,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":398,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":16,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":276,"org.easymock.tests2.CaptureTest.testCaptureNone":226,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":362,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":266,"org.easymock.tests.UsageUnorderedTest.message":59,"org.easymock.tests.UsageVerifyTest.twoReturns":156,"org.easymock.tests.UsageVarargTest.varargByteAccepted":112,"org.easymock.tests2.ThreadingTest.testThreadSafe":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":474,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":48,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":169,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":365,"org.easymock.tests2.CaptureTest.testCapture_2617107":26,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":316,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":57,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":342,"org.easymock.tests2.UsageConstraintsTest.any":250,"org.easymock.tests2.StubTest.stub":182,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":304,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":348,"org.easymock.tests.UsageExpectAndThrowTest.longType":134,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":119,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":343,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":405,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":303,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":178,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":173,"org.easymock.tests2.SerializationTest.testClass":22,"org.easymock.tests.LimitationsTest.mockNativeMethod":60,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":3,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":296,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":502,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":292,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":181,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":492,"org.easymock.tests2.NameTest.nameForMocksControl":445,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":503,"org.easymock.tests2.MockedExceptionTest.testMockedException":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":463,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":94,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":490,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":135,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":374,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":207,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":453,"org.easymock.tests.MockingTest.testNicePartialClassMocking":372,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":211,"org.easymock.tests2.CompareToTest.testCompareEqual":528,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":520,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":500,"org.easymock.tests2.CaptureTest.testCaptureLast":225,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":315,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":434,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":31,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":291,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":260,"org.easymock.tests.MockingTest.testTwoMocks":370,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":288,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":35,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":75,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":139,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":194,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":264,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":495,"org.easymock.samples.ExampleTest.removeNonExistingDocument":408,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":505,"org.easymock.tests.UsageStrictMockTest.differentMethods":65,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":301,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":414,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":494,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":403,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":203,"org.easymock.tests2.MockBuilderTest.testCreateMockString":458,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":465,"org.easymock.tests.UsageExpectAndThrowTest.floatType":133,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":461,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":214,"org.easymock.tests.UsageVerifyTest.twoThrows":155,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":473,"org.easymock.samples.ExampleTest.voteAgainstRemoval":163,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":333,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":360,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":485,"org.easymock.tests.LimitationsTest.privateConstructor":310,"org.easymock.tests2.UsageConstraintsTest.testNotNull":263,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":74,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":197,"org.easymock.tests2.UsageTest.defaultResetToNice":436,"org.easymock.samples.ExampleTest.voteAgainstRemovals":161,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":88,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":334,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":501,"org.easymock.tests.UsageVarargTest.differentLength":359,"org.easymock.tests2.CallbackTest.callback":265,"org.easymock.tests2.UsageConstraintsTest.equals":514,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":482,"org.easymock.tests.UsageTest.openCallCountByLastCall":93,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":244,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":56,"org.easymock.tests.UsageCallCountTest.tooFewCalls":46,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":185,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":400,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":493,"org.easymock.tests.UsageThrowableTest.throwCheckedException":71,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":17,"org.easymock.tests.MockingTest.testStrictClassMocking":368,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":433,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":44,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":504,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":34,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":306,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":186,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":216,"org.easymock.tests.ObjectMethodsTest.testHashCode":364,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":524,"org.easymock.tests2.NameTest.nameForNiceMock":444,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":205,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":290,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":285,"org.easymock.tests2.DependencyTest.testInterfaceMocking":174,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":523,"org.easymock.samples.ExampleTest.addDocument":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":475,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":37,"org.easymock.tests2.DelegateToTest.testStubDelegate":219,"org.easymock.tests2.AnswerTest.stubAnswer":215,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":62,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":454,"org.easymock.tests.UsageVarargTest.varargLongAccepted":111,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":66,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":331,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":2,"org.easymock.tests.UsageExpectAndReturnTest.floatType":0,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":439,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":410,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":419,"org.easymock.tests.UsageThrowableTest.noUpperLimit":68,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":258,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":355,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":245,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":425,"org.easymock.tests2.SerializationTest.test":23,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":223,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":42,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":402,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":76,"org.easymock.tests2.UsageConstraintsTest.testSame":248,"org.easymock.samples.SupportTest.addDocument":171,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":432,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":275,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":466,"org.easymock.tests.GenericTest.testPackageScope":51,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":379,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":326,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":418,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":375,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":273,"org.easymock.tests2.NameTest.nameForMock":442,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":85,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":533,"org.easymock.tests2.UsageStrictMockTest.differentMethods":180,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":483,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":1,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":145,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":115,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":153,"org.easymock.tests2.MockedExceptionTest.testRealException":200,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":388,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":430,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":336,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":177,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":335,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":55,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":308,"org.easymock.tests2.NameTest.nameForStrictMock":443,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":449,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":517,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":217,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":210,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":428,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":404,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":33,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":447,"org.easymock.tests2.UsageStrictMockTest.range":179,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":279,"org.easymock.tests2.UsageConstraintsTest.lessThan":7,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":415,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":232,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":470,"org.easymock.tests2.CaptureTest.testCaptureRightOne":27,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":491,"org.easymock.tests2.UsageConstraintsTest.testOr":30,"org.easymock.tests.UsageRangeTest.combination":151,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":39,"org.easymock.tests.UsageTest.wrongArguments":320,"org.easymock.tests2.MockBuilderTest.testWithConstructor":532,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":467,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":391,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":78,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":323,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":406,"org.easymock.tests.UsageVarargTest.varargShortAccepted":110,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":272,"org.easymock.tests2.UsageConstraintsTest.cmpTo":251,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":293,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":489,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":283,"org.easymock.tests2.CompareToTest.testLessThan":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":325,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":193,"org.easymock.tests2.CaptureTest.testCaptureFromStub":228,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":298,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":448,"org.easymock.tests.UsageTest.unexpectedCallWithArray":18,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":289,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":15,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":47,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":87,"org.easymock.tests2.CaptureTest.testCapture":531,"org.easymock.tests2.UsageConstraintsTest.constraints":28,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":63,"org.easymock.samples.ExampleTest.addAndChangeDocument":166,"org.easymock.tests.UsageStrictMockTest.testVerify":313,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":168,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":61,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":350,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":224,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":100,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":79,"org.easymock.tests.LimitationsTest.abstractClass":309,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":101,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":356,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":106,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":237}}]
