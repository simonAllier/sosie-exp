[{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Find:41","failures":[91],"status":-1,"binaryOperator":"((\"find(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1789","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Matches(java.lang.String))","type":"CtInvocationImpl"},"failures":[92],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"regex"}},{"position":"org.easymock.internal.MockBuilder:172","failures":[25,84],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:77","failures":[93,94],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.UnorderedBehavior:79","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:46","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"failures":[0,95,96,97,98,99,100,101,102,103,104,105,106,1,2,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,4,5,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,8,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,29,30,31,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,35,37,232,39,40,41,42,43,45,47,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,53,55,63,69,251,70,71,72,252,253,254,255,256,257,258,73,259,260,261,262,263,264,265,266,267,268,269,270,271,272,74,75,273,76,274,77,275,276,277,278,279,78,82,83,84,85,86,87,88,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,92,322,323,324,325,326,327,328,329,330,331,332,333,334],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.LogicalOperator:62","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[277],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[105,106,335,334],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg","this":"this","paramType":"paramType"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:79","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[200,229,320],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:60","failures":[273,275,336,335,93,337,338,339,340,341,342],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:217","failures":[0,95,96,97,98,99,100,343,101,102,103,104,105,105,106,106,1,2,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,344,345,346,347,4,5,6,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,348,150,151,152,153,349,350,351,352,353,354,8,9,154,155,156,157,158,159,160,161,162,355,356,357,16,17,18,19,20,21,22,23,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,358,195,196,359,360,197,198,199,200,201,202,203,204,361,362,28,29,30,31,363,364,365,366,205,367,206,207,368,369,370,208,209,210,211,212,371,213,214,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,215,216,217,218,219,387,388,389,220,221,222,223,224,390,225,226,227,228,229,230,231,35,391,392,37,38,232,39,40,41,42,43,45,46,47,48,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,393,249,250,53,55,63,69,251,70,71,72,252,253,394,395,254,255,256,257,258,73,259,260,261,262,263,264,265,266,267,268,269,270,271,272,74,75,273,76,274,77,275,396,397,398,399,400,276,277,278,401,279,78,79,82,83,84,85,86,87,88,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,402,299,300,301,302,303,304,403,305,306,307,308,309,310,311,312,313,314,315,316,404,317,318,319,320,321,92,322,323,324,325,326,327,405,328,329,330,331,406,332,333,334],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[407,321],"status":-1,"binaryOperator":"int >= 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:52","failures":[322],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:53","failures":[322],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.EasyMock:920","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[0,95,96,97,98,99,100,102,103,104,1,2,107,110,111,113,118,123,4,5,131,132,134,139,144,8,163,164,165,166,167,168,169,170,174,177,178,182,185,186,187,194,195,196,360,199,200,202,361,29,30,31,206,207,369,370,208,209,220,221,222,223,224,225,226,227,228,229,35,392,37,38,232,39,40,41,43,47,233,234,235,236,238,239,240,241,242,243,246,249,250,53,55,63,69,72,253,254,257,258,73,259,260,261,262,263,264,265,267,268,269,270,271,272,74,75,273,76,274,77,275,276,278,82,84,85,280,281,283,284,285,289,290,292,294,296,402,303,304,306,310,315,316,317,318,320,322,325,326,327,405,328,334],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (this.java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:45","sourceCode":"final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[257,258,73],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:760","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:44","sourceCode":"return int","type":"CtReturnImpl"},"failures":[128,408,409,410,411,176,177,178,180,201,203,204,282,295,297,298],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1519","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:48","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[128,409,411,177,178,203,297],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[0,105,105,106,106,1,2,4,5,6,8,17,24,25,28,29,30,31,35,37,38,39,40,41,42,43,45,46,47,48,53,55,63,69,72,257,73,412,413,414,74,75,273,76,77,275,78,415,79,80,82,83,84,85,86,87,416,88,334],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[96,97,100,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,152,153,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,360,198,200,201,202,203,204,361,29,30,31,209,210,211,212,371,213,214,379,215,216,217,218,219,230,231,35,392,37,232,39,41,233,234,235,236,237,238,239,240,242,243,244,245,246,247,393,249,250,251,253,254,255,256,257,258,75,273,77,275,276,277,278,279,82,87,88,280,281,282,283,284,285,286,287,289,290,292,293,295,296,297,298,402,303,305,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,92,322,323,324,325,326,327,328,329,330,331,332,333,334],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[105,105,106,106,152,349,171,172,175,201,417,418,419,420,421,211,212,371,213,214,375,215,216,217,218,219,230,231,244,295,305,307,308,311,312,313,314,319,321,92,323,324,329,330,331],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[3],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[105,105,106,106,422,340],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[3,7],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"type":"type"}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[343,9,154,155,156,157,158,159,160,161,162,16,17,18,19,20,21,22,23,181,197,362,366,368,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,42,45,70,71,259,266,271,272,78,83,86,88,288,299,300,301,302,306,332],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:138","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[13,423,424],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[108,114,120,124,126,128,129,135,141,145,147,180,425,210,234,240,241,246,247,248,393,251,279,282,307,321,323,331,332,333],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidClassProxyFactory:42","sourceCode":"if (org.easymock.ConstructorArgs != null) {\n    com.google.dexmaker.stock.ProxyBuilder<T>.constructorArgTypes(org.easymock.ConstructorArgs.getConstructor().getParameterTypes()).constructorArgValues(org.easymock.ConstructorArgs.getInitArgs());\n} else {\n    try {\n        org.easymock.internal.DefaultClassInstantiator org.easymock.internal.DefaultClassInstantiator = new org.easymock.internal.DefaultClassInstantiator();\n        java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> = org.easymock.internal.DefaultClassInstantiator.getConstructorToUse(java.lang.Class<T>);\n        java.lang.Object[] java.lang.Object[] = org.easymock.internal.DefaultClassInstantiator.getArgsForTypes(java.lang.reflect.Constructor<?>.getParameterTypes());\n        com.google.dexmaker.stock.ProxyBuilder<T>.constructorArgTypes(java.lang.reflect.Constructor<?>.getParameterTypes()).constructorArgValues(java.lang.Object[]);\n    } catch (java.lang.InstantiationException java.lang.InstantiationException) {\n        throw new java.lang.RuntimeException((\"Fail to instantiate mock for \" + java.lang.Class<T>));\n    }\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[288],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1518","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(float))","type":"CtInvocationImpl"},"failures":[310,315,325],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:139","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:65","sourceCode":"org.easymock.internal.Injection.setMatched()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[104,107,426,427,428,429,430,431,432,433,434,435],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[128,436,177,178,181,182,185,186,197,200,203,283,289,290,297],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:279","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[437,395],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:840","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[96,195,276,278,401,279],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[438,331],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:210","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":310,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":179,"org.easymock.tests2.UsageTest.argumentsOrdered":290,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":269,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":285,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":107,"org.easymock.tests2.DelegateToTest.testReturnException":276,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":189,"org.easymock.tests.MockingTest.testPartialClassMocking":29,"org.easymock.tests.MockClassControlTest.testToString":18,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":347,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":421,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":50,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":108,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":55,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":408,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":304,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":316,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":171,"org.easymock.tests2.UsageTest.wrongArguments":283,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":430,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":156,"org.easymock.samples.ExampleTest.answerVsDelegate":96,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":25,"org.easymock.tests2.UsageConstraintsTest.testNull":312,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":39,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":23,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":268,"org.easymock.tests2.CaptureTest.testPrimitive":236,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":175,"org.easymock.tests.UsageTest.moreThanOneArgument":180,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":127,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":232,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":371,"org.easymock.tests.UsageTest.argumentsOrdered":186,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":350,"org.easymock.tests.UsageVarargTest.varargIntAccepted":222,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":215,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":78,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":83,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":219,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":272,"org.easymock.tests.ReplayStateInvalidUsageTest.times":383,"org.easymock.tests2.AnswerTest.answer":253,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":404,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":302,"org.easymock.tests2.CaptureTest.testAnd":233,"org.easymock.tests2.UsageTest.strictResetToDefault":281,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":45,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":338,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":212,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":150,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":263,"org.easymock.tests2.DelegateToTest.testDelegate":279,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":354,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":123,"org.easymock.tests.LimitationsTest.mockFinalMethod":36,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":192,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":162,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":391,"org.easymock.tests2.CaptureTest.testCapture1_2446744":237,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":121,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":300,"org.easymock.tests.UsageThrowableTest.throwError":163,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":377,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":435,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":214,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":335,"org.easymock.samples.PartialClassMockTest.testGetArea":0,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":378,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":216,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":345,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":109,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":59,"org.easymock.tests2.UsageTest.niceToStrict":284,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":417,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":94,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":82,"org.easymock.tests2.MockBuilderTest.testCreateMock":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":66,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":429,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":117,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":264,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":389,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":365,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":154,"org.easymock.tests.UsageOverloadedMethodTest.overloading":209,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":68,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":196,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":321,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":140,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":208,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":423,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":320,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":242,"org.easymock.tests.MockClassControlTest.testEquals":22,"org.easymock.tests2.EasyMockSupportClassTest.testAll":53,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":5,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":125,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":412,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":160,"org.easymock.tests2.CaptureTest.testCaptureAll":234,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":301,"org.easymock.tests2.UsageConstraintsTest.testMatches":92,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":213,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":375,"org.easymock.samples.ExampleTest.voteForRemovals":100,"org.easymock.tests.UsageVarargTest.allKinds":229,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":176,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":161,"org.easymock.samples.BasicClassMockTest.testPrintContent":2,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":169,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":293,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":401,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":193,"org.easymock.tests2.UsageConstraintsTest.greaterThan":323,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":348,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":48,"org.easymock.samples.ExampleTest.voteForRemoval":97,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":15,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":49,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":248,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":42,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":8,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":280,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":261,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":165,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":52,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":188,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":400,"org.easymock.tests2.CaptureTest.testCaptureFirst":246,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":262,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":292,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":197,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":136,"org.easymock.tests2.CaptureTest.testCapture2_2446744":245,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":249,"org.easymock.tests2.UsageTest.moreThanOneArgument":282,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":87,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":228,"org.easymock.tests.GenericTest.testBridgedEquals":7,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":369,"org.easymock.tests.UsageExpectAndReturnTest.longType":132,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":158,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":259,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":416,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":126,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":405,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":349,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":124,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":211,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":356,"org.easymock.tests.UsageCallCountTest.tooManyCalls":370,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":67,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":137,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":113,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":168,"org.easymock.tests.MockingTest.testNiceClassMocking":32,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":75,"org.easymock.tests.MockingTest.testClassMocking":27,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":415,"org.easymock.tests2.UsageConstraintsTest.testContains":319,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":366,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":72,"org.easymock.tests2.UsageConstraintsTest.testFind":311,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":210,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":198,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":333,"org.easymock.tests.UsageExpectAndReturnTest.object":139,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":43,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":267,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":224,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":374,"org.easymock.tests.UsageTest.exactCallCountByLastCall":187,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":152,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":419,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":351,"org.easymock.tests2.ConstraintsToStringTest.findToString":91,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":342,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":145,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":220,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":195,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":432,"org.easymock.tests.MockClassControlTest.testHashCode":21,"org.easymock.tests2.EasyMockSupportTest.testVerify":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":61,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":352,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":388,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":194,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":299,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":406,"org.easymock.tests.UsageVarargTest.varargCharAccepted":223,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":294,"org.easymock.tests2.UsageTest.openCallCountByLastCall":286,"org.easymock.tests.DefaultClassInstantiatorTest.object":9,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":270,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":387,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":372,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":436,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":62,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":166,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":431,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":46,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":20,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":114,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":146,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":355,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":19,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":69,"org.easymock.tests2.UsageTest.resumeIfFailure":291,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":24,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":191,"org.easymock.tests2.StubTest.stubWithReturnValue":305,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":339,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":138,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":328,"org.easymock.tests2.SerializationTest.testAllMockedMethod":73,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":363,"org.easymock.samples.SupportTest.voteForRemovals":103,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":3,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":120,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":364,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":394,"org.easymock.tests.UsageExpectAndThrowTest.object":118,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":326,"org.easymock.tests2.DelegateToTest.testWrongClass":278,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":230,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":231,"org.easymock.samples.ConstructorCalledMockTest.testTax":105,"org.easymock.tests.UsageStrictMockTest.range":203,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":266,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":74,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":119,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":84,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":385,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":185,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":51,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":155,"org.easymock.tests2.CaptureTest.testCaptureNone":241,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":346,"org.easymock.tests.UsageUnorderedTest.message":128,"org.easymock.tests.UsageVerifyTest.twoReturns":178,"org.easymock.tests.UsageVarargTest.varargByteAccepted":227,"org.easymock.tests2.ThreadingTest.testThreadSafe":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":64,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":207,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":1,"org.easymock.tests2.CaptureTest.testCapture_2617107":235,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":174,"org.easymock.tests2.UsageConstraintsTest.any":317,"org.easymock.tests2.StubTest.stub":403,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":382,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":357,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":190,"org.easymock.tests.UsageExpectAndThrowTest.longType":111,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":13,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":381,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":296,"org.easymock.tests2.SerializationTest.testClass":257,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":306,"org.easymock.tests.LimitationsTest.mockNativeMethod":35,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":148,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":6,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":428,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":414,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":402,"org.easymock.tests2.NameTest.nameForMocksControl":399,"org.easymock.tests2.MockedExceptionTest.testMockedException":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":54,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":184,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":112,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":31,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":37,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":85,"org.easymock.tests.MockingTest.testNicePartialClassMocking":30,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":41,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":426,"org.easymock.tests2.CaptureTest.testCaptureLast":240,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":392,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":275,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":315,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":327,"org.easymock.tests.MockingTest.testTwoMocks":28,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":336,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":129,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":116,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":289,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":330,"org.easymock.samples.ExampleTest.removeNonExistingDocument":343,"org.easymock.tests.UsageStrictMockTest.differentMethods":204,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":379,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":433,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":11,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":393,"org.easymock.tests2.MockBuilderTest.testCreateMockString":88,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":16,"org.easymock.tests.UsageExpectAndThrowTest.floatType":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":56,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":322,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":254,"org.easymock.tests.UsageVerifyTest.twoThrows":177,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":63,"org.easymock.samples.ExampleTest.voteAgainstRemoval":98,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":344,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":47,"org.easymock.tests.LimitationsTest.privateConstructor":34,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":93,"org.easymock.tests2.UsageConstraintsTest.testNotNull":329,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":170,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":70,"org.easymock.tests2.UsageTest.defaultResetToNice":288,"org.easymock.samples.ExampleTest.voteAgainstRemovals":95,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":425,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":144,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":427,"org.easymock.tests.UsageVarargTest.differentLength":390,"org.easymock.tests2.CallbackTest.callback":251,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":422,"org.easymock.tests.UsageTest.openCallCountByLastCall":183,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":307,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":173,"org.easymock.tests.UsageCallCountTest.tooFewCalls":367,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":76,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":157,"org.easymock.tests.UsageThrowableTest.throwCheckedException":167,"org.easymock.tests.MockingTest.testStrictClassMocking":26,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":153,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":77,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":273,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":384,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":274,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":256,"org.easymock.tests2.CompareToTest.testGreateOrEqual":407,"org.easymock.tests.ObjectMethodsTest.testHashCode":373,"org.easymock.tests2.NameTest.nameForNiceMock":398,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":250,"org.easymock.tests2.DependencyTest.testInterfaceMocking":303,"org.easymock.samples.ExampleTest.addDocument":99,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":65,"org.easymock.tests2.DelegateToTest.testStubDelegate":277,"org.easymock.tests2.AnswerTest.stubAnswer":255,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":201,"org.easymock.tests.UsageVarargTest.varargLongAccepted":226,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":361,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":147,"org.easymock.tests.UsageExpectAndReturnTest.floatType":131,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":334,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":106,"org.easymock.tests.UsageThrowableTest.noUpperLimit":164,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":324,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":359,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":308,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":89,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":238,"org.easymock.tests2.SerializationTest.test":258,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":424,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":10,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":130,"org.easymock.tests2.UsageConstraintsTest.testSame":313,"org.easymock.samples.SupportTest.addDocument":102,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":57,"org.easymock.tests.GenericTest.testPackageScope":4,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":353,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":418,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":434,"org.easymock.tests2.NameTest.nameForMock":396,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":141,"org.easymock.tests2.UsageStrictMockTest.differentMethods":298,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":341,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":44,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":133,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":122,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":151,"org.easymock.tests2.MockedExceptionTest.testRealException":252,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":420,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":437,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":295,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":386,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":172,"org.easymock.tests2.NameTest.nameForStrictMock":397,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":81,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":332,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":40,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":90,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":409,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":12,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":325,"org.easymock.tests.ErrorMessageTest.testGetters":410,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":79,"org.easymock.tests2.UsageStrictMockTest.range":297,"org.easymock.tests2.UsageConstraintsTest.lessThan":331,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":60,"org.easymock.tests2.CaptureTest.testCaptureRightOne":243,"org.easymock.tests2.UsageConstraintsTest.testOr":314,"org.easymock.tests.UsageRangeTest.combination":149,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":38,"org.easymock.tests.UsageTest.wrongArguments":182,"org.easymock.tests2.MockBuilderTest.testWithConstructor":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":58,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":17,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":134,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":142,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":14,"org.easymock.tests.UsageVarargTest.varargShortAccepted":225,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":368,"org.easymock.tests2.UsageConstraintsTest.cmpTo":318,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":395,"org.easymock.tests2.CompareToTest.testLessThan":438,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":287,"org.easymock.tests2.CaptureTest.testCaptureFromStub":244,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":376,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":80,"org.easymock.tests.UsageTest.unexpectedCallWithArray":181,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":200,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":206,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":340,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":143,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":202,"org.easymock.tests2.UsageConstraintsTest.constraints":309,"org.easymock.samples.ExampleTest.addAndChangeDocument":101,"org.easymock.tests.UsageStrictMockTest.testVerify":362,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":104,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":199,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":159,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":239,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":413,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":217,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":135,"org.easymock.tests.LimitationsTest.abstractClass":33,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":218,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":360,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":411,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":221,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":265}}]
