[{"transplant":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[36,100,101,102,103,104,105,214],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[26,215,216,217,218,219,32,220,33,221,222,45,223,224,225,54,59,226,72,73,227,228,74,75,82,229,83,84,85,86,87,230,89,231,95,108,232,109,115,116,117,118,121,122,123,124,135,136,137,138,156,157,158,159,160,161,162,163,164,165,166,169,170,172,173,174,176,177,178,179,180,181,182,207,209,210,212,233,234],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"this.java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"add","type":"adrStmt","variableMapping":{"lock":"lock"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[235,236],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:288","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:268","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"genericInterface":"genericType","typeVariableMap":"typeVariableMap","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:48","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Object>.put(java.lang.Character.java.lang.Class<java.lang.Character>, java.lang.Character.java.lang.Character.valueOf(((char)(0))))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[237],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:141","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isResolvedTypeMatch(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:62","sourceCode":"if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n    throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n} ","type":"CtIfImpl"},"failures":[40,238],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:60","sourceCode":"if (!(java.util.Set<java.lang.String>.add(java.lang.String))) {\n    throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String));\n} ","type":"CtIfImpl"},"failures":[239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"failures":[0,2,17,22,257],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[258,235,236],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:63","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Long.java.lang.Class<java.lang.Long>, java.lang.Long.java.lang.Long)","type":"CtInvocationImpl"},"failures":[136,160,164,170,177,178],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.ConstructorArgs:77","sourceCode":"if (java.lang.Object == null) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:60","sourceCode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n} ","type":"CtIfImpl"},"failures":[259],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arg":"arg"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:128","sourceCode":"java.lang.ClassLoader = java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:135","sourceCode":"java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader()","type":"CtAssignmentImpl"},"failures":[260],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"failures":[29,261,261,262,262],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[47],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:319","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:140","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Results:56","sourceCode":"if (int > int) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"currentPosition":"result","callCount":"result"}},{"transplant":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,215,216,217,218,219,27,28,29,30,263,31,32,264,220,33,34,35,36,265,37,38,39,40,266,267,268,269,270,271,272,273,274,275,276,277,278,41,42,279,221,43,44,45,46,223,224,225,280,281,47,48,282,49,50,283,284,51,285,286,52,287,53,54,288,55,56,57,58,59,60,61,62,63,289,64,65,66,67,68,69,290,291,70,71,292,226,72,73,227,228,74,75,76,77,78,79,80,81,82,229,83,84,85,86,87,88,89,90,91,92,93,94,95,293,294,295,296,297,298,96,299,97,98,99,100,101,102,103,104,105,106,300,107,301,108,302,232,109,110,111,112,113,114,115,116,117,118,119,303,304,120,121,122,123,124,125,126,127,128,129,305,130,306,307,308,309,310,311,312,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,313,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,314,203,204,315,316,317,318,319,205,206,320,207,208,209,210,211,212,213,321,233,322,323,324,261,261,262,262,234],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[36,37,38,39,40,299,100,101,102,103,104,105,303],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.MocksControl:233","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:52","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,325,10,11,12,13,14,15,16,17,18,19,20,21,326,22,23,24,25,26,215,216,27,327,328,28,29,30,263,31,32,264,220,33,34,35,36,265,329,37,38,39,40,266,267,268,269,270,271,272,273,274,275,276,277,278,41,42,279,221,43,44,281,47,48,282,49,50,283,284,51,285,286,52,287,330,53,54,288,331,55,57,60,61,62,63,289,64,65,66,67,68,69,290,291,70,71,292,332,228,76,77,78,79,80,81,82,83,90,91,92,93,333,334,335,96,299,336,97,98,337,338,339,238,340,99,341,100,101,102,103,104,105,300,107,301,108,302,232,109,110,111,112,113,114,342,343,344,345,346,347,348,118,119,303,304,120,121,122,123,124,237,349,125,126,127,128,129,305,130,306,307,308,309,310,311,312,131,132,133,134,135,136,137,138,139,140,142,143,144,145,350,351,352,353,354,355,356,357,146,147,148,149,150,358,151,152,153,154,155,156,157,158,159,160,313,258,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,359,360,361,362,363,364,365,366,367,368,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,314,203,204,315,316,317,318,319,320,207,208,209,210,211,212,213,321,233,324],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"failures":[32,220,33,229,84,86,88,231,301,108,232,109,111,306],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[51],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"failures":[369,370],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[36,37,38,39,40,281,284,299,98,238,100,101,102,103,104,105,303,304,305,309,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,204,318,319],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:51","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[371],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:364","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[372,365],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":3,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":305,"org.easymock.tests2.UsageTest.argumentsOrdered":286,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":276,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":329,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":103,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":50,"org.easymock.tests2.StubTest.stubWithReturnValue":36,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":324,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":22,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":170,"org.easymock.tests2.SerializationTest.testAllMockedMethod":58,"org.easymock.tests2.DelegateToTest.testReturnException":53,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":237,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":101,"org.easymock.tests.MockingTest.testPartialClassMocking":115,"org.easymock.samples.SupportTest.voteForRemovals":233,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":241,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":348,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":195,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":349,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":217,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":183,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":327,"org.easymock.tests.UsageExpectAndThrowTest.object":193,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":215,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":20,"org.easymock.tests2.DelegateToTest.testWrongClass":288,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":181,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":182,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":9,"org.easymock.tests2.UsageTest.wrongArguments":282,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":118,"org.easymock.samples.ConstructorCalledMockTest.testTax":261,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":256,"org.easymock.tests.UsageStrictMockTest.range":232,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":133,"org.easymock.samples.ExampleTest.answerVsDelegate":208,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":273,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":226,"org.easymock.tests2.UsageConstraintsTest.testNull":5,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":194,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":84,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":275,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":223,"org.easymock.tests2.CaptureTest.testPrimitive":63,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":120,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":310,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":202,"org.easymock.tests.UsageTest.moreThanOneArgument":130,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":83,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":132,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":137,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":344,"org.easymock.tests2.CaptureTest.testCaptureNone":67,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":260,"org.easymock.tests.UsageUnorderedTest.message":313,"org.easymock.tests.UsageVerifyTest.twoReturns":114,"org.easymock.tests.UsageVarargTest.varargByteAccepted":153,"org.easymock.tests2.ThreadingTest.testThreadSafe":41,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":364,"org.easymock.tests.UsageTest.argumentsOrdered":311,"org.easymock.tests.UsageVarargTest.varargIntAccepted":148,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":145,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":334,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":322,"org.easymock.tests2.CaptureTest.testCapture_2617107":62,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":156,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":44,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":304,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":246,"org.easymock.tests2.UsageConstraintsTest.any":10,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":46,"org.easymock.tests2.StubTest.stub":35,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":363,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":160,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":102,"org.easymock.tests.UsageExpectAndThrowTest.longType":186,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":296,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":264,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":265,"org.easymock.tests2.SerializationTest.testClass":56,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":292,"org.easymock.tests.LimitationsTest.mockNativeMethod":95,"org.easymock.tests2.DependencyTest.testClassMocking":369,"org.easymock.tests2.AnswerTest.answer":27,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":180,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":325,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":79,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":249,"org.easymock.tests2.CaptureTest.testAnd":60,"org.easymock.tests2.UsageTest.strictResetToDefault":47,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":88,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":34,"org.easymock.tests2.NameTest.nameForMocksControl":93,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":251,"org.easymock.tests2.MockedExceptionTest.testMockedException":38,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":136,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":270,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":123,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":309,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":368,"org.easymock.tests2.DelegateToTest.testDelegate":55,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":117,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":187,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":82,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":224,"org.easymock.tests.MockingTest.testNicePartialClassMocking":116,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":198,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":86,"org.easymock.tests2.CaptureTest.testCaptureLast":66,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":104,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":360,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":75,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":8,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":21,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":129,"org.easymock.tests2.DependencyTest.testClassMockingSupport":370,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":359,"org.easymock.tests2.CaptureTest.testCapture1_2446744":289,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":161,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":196,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":77,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":191,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":285,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":24,"org.easymock.tests.UsageThrowableTest.throwError":314,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":295,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":252,"org.easymock.tests.UsageStrictMockTest.differentMethods":109,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":355,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":240,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":279,"org.easymock.tests2.MockBuilderTest.testCreateMockString":280,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":247,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":139,"org.easymock.tests.UsageExpectAndThrowTest.floatType":185,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":16,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":28,"org.easymock.tests.UsageVerifyTest.twoThrows":113,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":218,"org.easymock.samples.PartialClassMockTest.testGetArea":234,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":294,"org.easymock.tests2.CompareToTest.testLessOrEqual":257,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":157,"org.easymock.samples.ExampleTest.voteAgainstRemoval":210,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":343,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":342,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":89,"org.easymock.tests2.UsageTest.niceToStrict":49,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":184,"org.easymock.tests2.UsageConstraintsTest.testNotNull":23,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":319,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":37,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":45,"org.easymock.tests2.UsageTest.defaultResetToNice":51,"org.easymock.samples.ExampleTest.voteAgainstRemovals":207,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":176,"org.easymock.tests.UsageVarargTest.differentLength":358,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":248,"org.easymock.tests2.CallbackTest.callback":71,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":253,"org.easymock.tests.UsageTest.openCallCountByLastCall":308,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":192,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":271,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":0,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":347,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":140,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":303,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":131,"org.easymock.tests.UsageCallCountTest.tooFewCalls":143,"org.easymock.tests.UsageOverloadedMethodTest.overloading":97,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":238,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":14,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":336,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":227,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":172,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":13,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":68,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":134,"org.easymock.tests.UsageThrowableTest.throwCheckedException":316,"org.easymock.tests2.EasyMockSupportClassTest.testAll":216,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":206,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":200,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":78,"org.easymock.tests2.CaptureTest.testCaptureAll":61,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":127,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":299,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":74,"org.easymock.tests.MockNameTest.defaultName":335,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":332,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":73,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":297,"org.easymock.tests2.UsageConstraintsTest.testMatches":15,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":228,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":30,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":138,"org.easymock.samples.ExampleTest.voteForRemovals":212,"org.easymock.tests2.NameTest.nameForNiceMock":92,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":43,"org.easymock.tests.UsageVarargTest.allKinds":155,"org.easymock.tests2.DependencyTest.testInterfaceMocking":26,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":112,"org.easymock.samples.BasicClassMockTest.testPrintContent":323,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":128,"org.easymock.samples.ExampleTest.addDocument":211,"org.easymock.tests2.DelegateToTest.testStubDelegate":54,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":318,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":263,"org.easymock.tests2.AnswerTest.stubAnswer":29,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":331,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":243,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":105,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":108,"org.easymock.tests2.UsageConstraintsTest.greaterThan":17,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":122,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":231,"org.easymock.tests.UsageVarargTest.varargLongAccepted":152,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":110,"org.easymock.samples.ExampleTest.voteForRemoval":209,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":42,"org.easymock.tests.UsageExpectAndReturnTest.floatType":163,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":179,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":356,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":59,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":262,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":340,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":245,"org.easymock.tests.UsageThrowableTest.noUpperLimit":203,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":18,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":281,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":1,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":106,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":64,"org.easymock.tests2.SerializationTest.test":57,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":214,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":268,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":235,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":204,"org.easymock.tests2.UsageConstraintsTest.testSame":6,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":162,"org.easymock.samples.SupportTest.addDocument":321,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":100,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":330,"org.easymock.tests2.CaptureTest.testCaptureFirst":70,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":269,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":287,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":341,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":168,"org.easymock.tests.GenericTest.testPackageScope":205,"org.easymock.tests2.CaptureTest.testCapture2_2446744":291,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":221,"org.easymock.tests2.UsageTest.moreThanOneArgument":48,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":367,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":225,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":244,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":154,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":351,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":259,"org.easymock.tests2.NameTest.nameForMock":90,"org.easymock.tests.UsageExpectAndReturnTest.longType":164,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":266,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":125,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":201,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":173,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":353,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":326,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":199,"org.easymock.tests2.UsageStrictMockTest.differentMethods":33,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":362,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":135,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":165,"org.easymock.tests.UsageCallCountTest.tooManyCalls":352,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":197,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":124,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":142,"org.easymock.tests2.MockedExceptionTest.testRealException":40,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":357,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":169,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":255,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":32,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":188,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":317,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":298,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":119,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":72,"org.easymock.tests2.NameTest.nameForStrictMock":91,"org.easymock.tests2.UsageConstraintsTest.testContains":12,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":141,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":39,"org.easymock.tests2.UsageConstraintsTest.testFind":4,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":98,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":80,"org.easymock.tests.MockTypeTest.fromEasyMockClass":354,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":85,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":300,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":81,"org.easymock.tests.UsageExpectAndReturnTest.object":171,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":19,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":87,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":222,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":254,"org.easymock.tests2.UsageStrictMockTest.range":220,"org.easymock.tests2.UsageConstraintsTest.lessThan":25,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":274,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":150,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":242,"org.easymock.tests.UsageTest.exactCallCountByLastCall":312,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":96,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":267,"org.easymock.tests2.CaptureTest.testCaptureRightOne":69,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":365,"org.easymock.tests2.UsageConstraintsTest.testOr":7,"org.easymock.tests.UsageRangeTest.combination":121,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":229,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":146,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":177,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":339,"org.easymock.tests.UsageTest.wrongArguments":307,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":239,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":94,"org.easymock.tests2.EasyMockSupportTest.testVerify":278,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":166,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":372,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":174,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":366,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":346,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":337,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":236,"org.easymock.tests.UsageVarargTest.varargShortAccepted":151,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":350,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":76,"org.easymock.tests2.UsageConstraintsTest.cmpTo":11,"org.easymock.tests.UsageVarargTest.varargCharAccepted":149,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":328,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":31,"org.easymock.tests2.UsageTest.openCallCountByLastCall":283,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":284,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":277,"org.easymock.tests.DefaultClassInstantiatorTest.object":258,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":345,"org.easymock.tests2.CaptureTest.testCaptureFromStub":290,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":293,"org.easymock.tests.UsageTest.unexpectedCallWithArray":306,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":333,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":190,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":315,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":301,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":144,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":250,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":175,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":302,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":230,"org.easymock.tests2.UsageConstraintsTest.constraints":2,"org.easymock.samples.ExampleTest.addAndChangeDocument":213,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":189,"org.easymock.tests.CapturesMatcherTest.test":371,"org.easymock.tests.UsageStrictMockTest.testVerify":111,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":178,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":361,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":320,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":219,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":107,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":126,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":65,"org.easymock.tests2.UsageTest.resumeIfFailure":52,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":158,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":167,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":99,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":159,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":272,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":147}}]
