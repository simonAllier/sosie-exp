[{"transplant":{"position":"org.easymock.internal.InjectionPlan:34","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:187","sourceCode":"java.lang.Long java.lang.Long","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"failures":[17],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:162","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[18,19],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[20,21,18,19,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,2,3,4,5,152,153,154,155,156,157,158,158,159,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,6,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,7,302,303,304,8,9,10,11,12,13,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[336],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Any:36","failures":[68,93,96,127,133,134,139,184,6,204,205,206,207,208,259,295,300,301,7,302,303,12,323,324],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[337],"status":-1,"binaryOperator":"(((\"eq(\" + (java.lang.Number)) + \", \") + (java.lang.Number))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[49,240],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[55,56,68,69,338,86,87,88,89,90,91,92,93,94,95,339,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,184,6,185,204,205,206,207,208,258,259,295,300,301,7,302,303,12,13,323,324,335],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[75,76,82,83,340,341,342,343,258,287,288,289,292,293,344,345,346],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[347,348],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[18,19],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[70,71,261,262],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"failures":[349],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[59,350,155],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:72","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[24,25,27,28,30,48,50,51,53,60,63,115,116,117,118,124,145,146,147,148,149,150,151,161,205,240,241,242,304],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:125","sourceCode":"java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>()","type":"CtAssignmentImpl"},"failures":[20,21,18,19,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,2,3,4,5,152,153,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,177,178,179,180,181,182,183,184,6,185,186,187,188,189,198,200,201,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,256,257,258,259,260,261,262,263,351,351,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,298,299,300,301,7,302,303,304,8,9,10,11,12,13,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Captures:47","sourceCode":"this.T = T","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[126,127,128,129,130,131,132,133,135,136,137,138,139,351],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[56],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:80","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[352,210,211,353,354],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"candidateMethod","bridgeMethod":"candidateMethod"}},{"transplant":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[49],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","name":"name","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:62","sourceCode":"if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n    throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n} ","type":"CtIfImpl"},"failures":[5,201],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"throwable":"t"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":89,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":286,"org.easymock.tests2.UsageTest.argumentsOrdered":83,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":42,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":11,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":78,"org.easymock.tests2.StubTest.stubWithReturnValue":153,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":275,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":109,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":160,"org.easymock.tests2.SerializationTest.testAllMockedMethod":47,"org.easymock.tests2.DelegateToTest.testReturnException":62,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":9,"org.easymock.tests.MockingTest.testPartialClassMocking":240,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":342,"org.easymock.samples.SupportTest.voteForRemovals":164,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":352,"org.easymock.tests.MockClassControlTest.testToString":192,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":350,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":224,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":212,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":116,"org.easymock.tests.UsageExpectAndThrowTest.object":222,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":106,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":120,"org.easymock.tests2.DelegateToTest.testWrongClass":64,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":323,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":324,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":95,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":300,"org.easymock.tests2.UsageTest.wrongArguments":76,"org.easymock.tests.UsageStrictMockTest.range":261,"org.easymock.samples.ConstructorCalledMockTest.testTax":158,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":310,"org.easymock.samples.ExampleTest.answerVsDelegate":166,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":39,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":145,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":336,"org.easymock.tests2.UsageConstraintsTest.testNull":91,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":223,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":51,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":197,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":27,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":41,"org.easymock.tests2.CaptureTest.testPrimitive":129,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":303,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":292,"org.easymock.tests.UsageTest.moreThanOneArgument":287,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":253,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":231,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":309,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":50,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":344,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":187,"org.easymock.tests2.CaptureTest.testCaptureNone":134,"org.easymock.tests.UsageUnorderedTest.message":295,"org.easymock.tests.UsageVerifyTest.twoReturns":322,"org.easymock.tests.UsageVarargTest.varargByteAccepted":333,"org.easymock.tests2.ThreadingTest.testThreadSafe":121,"org.easymock.tests.UsageTest.argumentsOrdered":293,"org.easymock.tests.UsageVarargTest.varargIntAccepted":327,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":180,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":173,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":204,"org.easymock.tests2.CaptureTest.testCapture_2617107":128,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":343,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":23,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":302,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":26,"org.easymock.tests2.UsageConstraintsTest.any":96,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":250,"org.easymock.tests2.StubTest.stub":152,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":208,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":16,"org.easymock.tests.UsageExpectAndThrowTest.longType":215,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":10,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":249,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":69,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":61,"org.easymock.tests2.SerializationTest.testClass":45,"org.easymock.tests.LimitationsTest.mockNativeMethod":304,"org.easymock.tests.ReplayStateInvalidUsageTest.times":251,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":144,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":353,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":285,"org.easymock.tests2.AnswerTest.answer":20,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":339,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":143,"org.easymock.tests2.CaptureTest.testAnd":126,"org.easymock.tests2.UsageTest.strictResetToDefault":74,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":72,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":56,"org.easymock.tests2.NameTest.nameForMocksControl":157,"org.easymock.tests2.MockedExceptionTest.testMockedException":3,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":186,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":298,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":36,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":291,"org.easymock.tests2.DelegateToTest.testDelegate":65,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":242,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":216,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":48,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":28,"org.easymock.tests.MockingTest.testNicePartialClassMocking":241,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":227,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":53,"org.easymock.tests2.CaptureTest.testCaptureLast":133,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":12,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":255,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":94,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":151,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":316,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":107,"org.easymock.tests2.CaptureTest.testCapture1_2446744":130,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":266,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":225,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":220,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":141,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":82,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":111,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":245,"org.easymock.tests.UsageThrowableTest.throwError":232,"org.easymock.samples.ExampleTest.removeNonExistingDocument":171,"org.easymock.tests.UsageStrictMockTest.differentMethods":262,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":247,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":123,"org.easymock.tests2.MockBuilderTest.testCreateMockString":31,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":190,"org.easymock.tests.UsageExpectAndThrowTest.floatType":214,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":189,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":102,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":21,"org.easymock.tests.UsageVerifyTest.twoThrows":321,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":117,"org.easymock.samples.PartialClassMockTest.testGetArea":161,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":246,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":205,"org.easymock.samples.ExampleTest.voteAgainstRemoval":168,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":17,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":58,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":213,"org.easymock.tests2.UsageTest.niceToStrict":77,"org.easymock.tests2.UsageConstraintsTest.testNotNull":110,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":239,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":2,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":25,"org.easymock.tests2.UsageTest.defaultResetToNice":81,"org.easymock.tests2.MockBuilderTest.testCreateMock":29,"org.easymock.samples.ExampleTest.voteAgainstRemovals":165,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":281,"org.easymock.tests.UsageVarargTest.differentLength":330,"org.easymock.tests2.CallbackTest.callback":22,"org.easymock.tests.UsageTest.openCallCountByLastCall":290,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":340,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":221,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":37,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":86,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":175,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":308,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":7,"org.easymock.tests.UsageCallCountTest.tooFewCalls":178,"org.easymock.tests.UsageOverloadedMethodTest.overloading":318,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":201,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":100,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":317,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":277,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":148,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":99,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":135,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":311,"org.easymock.tests.UsageThrowableTest.throwCheckedException":236,"org.easymock.tests.MockClassControlTest.testEquals":196,"org.easymock.tests2.EasyMockSupportClassTest.testAll":115,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":211,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":345,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":341,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":229,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":314,"org.easymock.tests2.CaptureTest.testCaptureAll":127,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":142,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":6,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":150,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":147,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":252,"org.easymock.tests2.UsageConstraintsTest.testMatches":101,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":149,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":19,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":243,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":188,"org.easymock.tests.ObjectMethodsTest.testHashCode":306,"org.easymock.samples.ExampleTest.voteForRemovals":170,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":125,"org.easymock.tests2.NameTest.nameForNiceMock":156,"org.easymock.tests.UsageVarargTest.allKinds":335,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":320,"org.easymock.tests2.DependencyTest.testInterfaceMocking":119,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":315,"org.easymock.samples.BasicClassMockTest.testPrintContent":174,"org.easymock.samples.ExampleTest.addDocument":169,"org.easymock.tests2.DelegateToTest.testStubDelegate":63,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":238,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":66,"org.easymock.tests2.AnswerTest.stubAnswer":18,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":13,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":259,"org.easymock.tests2.UsageConstraintsTest.greaterThan":103,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":297,"org.easymock.tests.UsageVarargTest.varargLongAccepted":332,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":59,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":263,"org.easymock.samples.ExampleTest.voteForRemoval":167,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":122,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":284,"org.easymock.tests.UsageExpectAndReturnTest.floatType":268,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":349,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":60,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":54,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":159,"org.easymock.tests.UsageThrowableTest.noUpperLimit":233,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":104,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":209,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":87,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":73,"org.easymock.tests2.SerializationTest.test":46,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":131,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":347,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":34,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":234,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":267,"org.easymock.tests2.UsageConstraintsTest.testSame":92,"org.easymock.samples.SupportTest.addDocument":163,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":8,"org.easymock.tests2.CaptureTest.testCaptureFirst":139,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":35,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":85,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":248,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":203,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":273,"org.easymock.tests.GenericTest.testPackageScope":210,"org.easymock.tests2.UsageTest.moreThanOneArgument":75,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":124,"org.easymock.tests2.CaptureTest.testCapture2_2446744":138,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":0,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":30,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":334,"org.easymock.tests.GenericTest.testBridgedEquals":354,"org.easymock.tests2.NameTest.nameForMock":154,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":182,"org.easymock.tests.UsageExpectAndReturnTest.longType":269,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":312,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":32,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":278,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":230,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":108,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":228,"org.easymock.tests2.UsageStrictMockTest.differentMethods":71,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":15,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":185,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":270,"org.easymock.tests.UsageCallCountTest.tooManyCalls":183,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":226,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":299,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":177,"org.easymock.tests2.MockedExceptionTest.testRealException":5,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":274,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":217,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":68,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":301,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":254,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":237,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":146,"org.easymock.tests2.UsageConstraintsTest.testContains":98,"org.easymock.tests2.NameTest.nameForStrictMock":155,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":176,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":4,"org.easymock.tests2.UsageConstraintsTest.testFind":90,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":319,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":113,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":52,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":256,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":114,"org.easymock.tests.UsageExpectAndReturnTest.object":276,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":105,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":55,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":24,"org.easymock.tests2.UsageStrictMockTest.range":70,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":337,"org.easymock.tests2.UsageConstraintsTest.lessThan":112,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":40,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":329,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":307,"org.easymock.tests.UsageTest.exactCallCountByLastCall":294,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":184,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":33,"org.easymock.tests2.CaptureTest.testCaptureRightOne":136,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":346,"org.easymock.tests2.UsageConstraintsTest.testOr":93,"org.easymock.tests.UsageRangeTest.combination":296,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":325,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":282,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":49,"org.easymock.tests.UsageTest.wrongArguments":289,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":200,"org.easymock.tests.MockClassControlTest.testHashCode":195,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":191,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":271,"org.easymock.tests2.EasyMockSupportTest.testVerify":44,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":279,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":1,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":348,"org.easymock.tests.UsageVarargTest.varargShortAccepted":331,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":198,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":140,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":181,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":338,"org.easymock.tests2.UsageConstraintsTest.cmpTo":97,"org.easymock.tests.UsageVarargTest.varargCharAccepted":328,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":67,"org.easymock.tests2.UsageTest.openCallCountByLastCall":79,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":80,"org.easymock.tests.DefaultClassInstantiatorTest.object":265,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":43,"org.easymock.tests2.CaptureTest.testCaptureFromStub":137,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":244,"org.easymock.tests.UsageTest.unexpectedCallWithArray":288,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":305,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":219,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":258,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":235,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":179,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":280,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":260,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":194,"org.easymock.tests2.UsageConstraintsTest.constraints":88,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":57,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":218,"org.easymock.samples.ExampleTest.addAndChangeDocument":172,"org.easymock.tests.CapturesMatcherTest.test":351,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":283,"org.easymock.tests.UsageStrictMockTest.testVerify":264,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":14,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":162,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":257,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":193,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":118,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":313,"org.easymock.tests2.UsageTest.resumeIfFailure":84,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":132,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":206,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":272,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":207,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":202,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":326,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":38}}]
