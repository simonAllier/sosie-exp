[{"transplant":{"position":"org.easymock.internal.MocksBehavior:108","sourceCode":"org.easymock.internal.Invocation.validateCaptures()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:56","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.pushCurrentInvocation(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"invocation"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:67","sourceCode":"return !(java.util.List<T>.isEmpty())","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1568","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(T))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:255","failures":[79],"status":-1,"binaryOperator":"java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[80,81,82],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"clazz"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"this.org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"failures":[83,84,85,86,87,88,89,90,91,25,92,93,94],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"failures":[83,84,85,86,87,88,89,90,91,25,92,93,94],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:53","failures":[95,13,54],"status":-1,"binaryOperator":"(java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:58","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.IllegalArgumentException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2170","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[96,97],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1483","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[93,79],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[98,99,77],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:945","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[100,8,101],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"this.java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"toMock":"toMock","hashCodeMethod":"equalsMethod","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:72","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = org.easymock.internal.IClassInstantiator","type":"CtAssignmentImpl"},"failures":[102,103,104],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Not:42","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String).append(\", actual: \")","type":"CtInvocationImpl"},"failures":[10,11,13,14,17,19,20,105,106,107,108,50,52,54,55,58,59,60,61,109,110,111,73,76,77,78],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:160","sourceCode":"return java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:158","sourceCode":"if (((java.lang.reflect.Field.getModifiers()) & int) == int) {\n    java.lang.reflect.Field.setAccessible(true);\n    return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null));\n} ","type":"CtIfImpl"},"failures":[81,82],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"f":"f","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:204","sourceCode":"try {\n    java.lang.reflect.Constructor<?>.setAccessible(true);\n    T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException());\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:207","sourceCode":"T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","args":"args","cstr":"cstr"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[83,112,113,114],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.InjectionPlan:51","failures":[115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Any:36","failures":[141,142,17,143,2,144,5,145,146,147,148,149,150,59,151,152,153,154,155,156,157,158,159,73],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:72","sourceCode":"return org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, java.lang.String, ((java.lang.Class<?>[])(null)))","type":"CtReturnImpl"},"failures":[160,83,161,162,163,164,84,165,166,167,87,168,169,88,170,94,171,172,173],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[174,175,176,177,11,178,12,13,14,179,180,181,18,19,20,163,87,168,88,23,182,26,183,184,28,29,185,48,186,51,52,54,55,187,188,58,189,60,61,190,191,66,73,192,77,78,193,194,195],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:760","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1878","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.JavaProxyFactory:30","sourceCode":"return java.lang.reflect.Proxy.((T)(java.lang.reflect.Proxy.newProxyInstance(java.lang.Class<T>.getClassLoader(), new java.lang.Class[]{ java.lang.Class<T> }, java.lang.reflect.InvocationHandler)))","type":"CtReturnImpl"},"failures":[196,197,198,199,200,201,174,6,202,100,203,175,7,204,205,206,141,207,208,209,142,210,211,212,213,214,176,8,215,216,101,217,218,219,220,221,222,115,116,117,119,120,121,122,123,126,177,9,10,11,178,12,223,224,225,13,14,179,180,15,226,227,228,181,16,17,18,19,20,21,229,127,128,129,131,132,133,134,135,138,230,231,232,233,234,235,105,106,107,108,112,236,237,238,239,240,241,242,243,244,245,24,246,247,248,249,250,183,27,251,252,184,28,253,254,29,255,256,257,258,259,41,260,261,143,262,263,264,0,1,2,144,3,265,266,267,5,268,269,270,271,272,273,274,275,276,277,278,279,145,146,147,148,149,280,281,282,283,49,284,285,286,150,287,288,186,50,51,52,53,289,54,55,187,56,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,188,57,58,59,189,60,61,62,63,317,318,319,320,321,322,323,324,151,152,153,154,325,326,327,64,65,328,66,329,330,331,332,67,68,69,70,71,72,333,334,335,336,337,338,339,340,341,342,343,344,155,156,157,158,159,73,345,346,347,348,74,349,350,351,98,99,352,353,354,355,356,357,358,359,192,75,360,361,362,363,76,77,78,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,193,194,195,394,395,396,397,398,399,400,401,402,403,404,405,406,407,407,139,140,408,409],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[205,206,209,142,216,101,220,221],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":7,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":186,"org.easymock.tests2.UsageTest.argumentsOrdered":14,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":255,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":121,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":12,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":139,"org.easymock.tests2.DelegateToTest.testReturnException":197,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":284,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":354,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":92,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":56,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":109,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":228,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":208,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":155,"org.easymock.tests2.UsageTest.wrongArguments":11,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":138,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":282,"org.easymock.samples.ExampleTest.answerVsDelegate":400,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":172,"org.easymock.tests2.UsageConstraintsTest.testNull":205,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":279,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":29,"org.easymock.tests2.CaptureTest.testPrimitive":263,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":159,"org.easymock.tests.UsageTest.moreThanOneArgument":50,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":308,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":24,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":319,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":394,"org.easymock.tests.UsageTest.argumentsOrdered":55,"org.easymock.tests.UsageVarargTest.varargIntAccepted":357,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":39,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":145,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":161,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":125,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":165,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":149,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":34,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":132,"org.easymock.tests.ReplayStateInvalidUsageTest.times":341,"org.easymock.tests2.AnswerTest.answer":230,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":209,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":239,"org.easymock.tests2.CaptureTest.testAnd":261,"org.easymock.tests2.UsageTest.strictResetToDefault":9,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":318,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":252,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":330,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":398,"org.easymock.tests2.DelegateToTest.testDelegate":201,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":304,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":150,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":313,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":64,"org.easymock.tests2.CaptureTest.testCapture1_2446744":264,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":302,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":237,"org.easymock.tests.UsageThrowableTest.throwError":74,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":335,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":346,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":191,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":126,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":321,"org.easymock.samples.PartialClassMockTest.testGetArea":173,"org.easymock.tests.MockingTest.testInterfaceMocking":277,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":336,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":146,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":323,"org.easymock.tests2.UsageTest.niceToStrict":178,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":290,"org.easymock.tests2.ThreadingTest.testChangeDefault":97,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":84,"org.easymock.tests2.MockBuilderTest.testCreateMock":87,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":135,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":31,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":298,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":184,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":366,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":388,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":280,"org.easymock.tests.UsageOverloadedMethodTest.overloading":275,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":69,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":213,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":274,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":378,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":81,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":212,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":3,"org.easymock.tests2.EasyMockSupportClassTest.testAll":22,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":36,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":306,"org.easymock.tests2.CaptureTest.testCaptureAll":143,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":238,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":311,"org.easymock.tests.MockNameTest.defaultName":288,"org.easymock.tests2.UsageConstraintsTest.testMatches":214,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":320,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":333,"org.easymock.samples.ExampleTest.voteForRemovals":404,"org.easymock.tests.UsageVarargTest.allKinds":363,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":76,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":312,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":352,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":181,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":122,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":200,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":287,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":103,"org.easymock.tests2.UsageConstraintsTest.greaterThan":8,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":329,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":26,"org.easymock.samples.ExampleTest.voteForRemoval":401,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":241,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":347,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":170,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":177,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":86,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":27,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":350,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":49,"org.easymock.tests2.CaptureTest.testCaptureFirst":5,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":196,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":251,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":180,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":72,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":374,"org.easymock.tests2.UsageTest.moreThanOneArgument":10,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":243,"org.easymock.tests2.CaptureTest.testCapture2_2446744":267,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":168,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":362,"org.easymock.tests.GenericTest.testBridgedEquals":79,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":194,"org.easymock.tests.UsageExpectAndReturnTest.longType":370,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":250,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":309,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":169,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":307,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":387,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":218,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":305,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":315,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":317,"org.easymock.tests.UsageCallCountTest.tooManyCalls":195,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":43,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":390,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":375,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":137,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":294,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":99,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":389,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":162,"org.easymock.tests2.UsageConstraintsTest.testContains":211,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":248,"org.easymock.tests2.UsageConstraintsTest.testFind":204,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":276,"org.easymock.tests.MockTypeTest.fromEasyMockClass":345,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":188,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":202,"org.easymock.tests.UsageExpectAndReturnTest.object":377,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":136,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":254,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":359,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":272,"org.easymock.tests.UsageTest.exactCallCountByLastCall":187,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":153,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":395,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":47,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":90,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":355,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":383,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":68,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":116,"org.easymock.tests2.EasyMockSupportTest.testVerify":257,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":33,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":396,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":332,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":365,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":185,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":236,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":229,"org.easymock.tests.UsageVarargTest.varargCharAccepted":358,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":102,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":16,"org.easymock.tests2.UsageTest.openCallCountByLastCall":223,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":256,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":364,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":270,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":48,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":296,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":351,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":130,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":115,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":182,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":295,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":384,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":314,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":35,"org.easymock.tests2.UsageTest.resumeIfFailure":179,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":171,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":286,"org.easymock.tests2.StubTest.stubWithReturnValue":260,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":219,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":376,"org.easymock.tests2.SerializationTest.testAllMockedMethod":113,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":325,"org.easymock.samples.SupportTest.voteForRemovals":409,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":38,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":93,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":118,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":301,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":114,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":326,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":231,"org.easymock.tests.UsageExpectAndThrowTest.object":299,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":101,"org.easymock.tests2.DelegateToTest.testWrongClass":199,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":151,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":152,"org.easymock.samples.ConstructorCalledMockTest.testTax":407,"org.easymock.tests.UsageStrictMockTest.range":60,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":258,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":253,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":15,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":300,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":166,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":54,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":343,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":281,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":42,"org.easymock.tests2.CaptureTest.testCaptureNone":144,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":324,"org.easymock.tests.UsageUnorderedTest.message":73,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":190,"org.easymock.tests.UsageVerifyTest.twoReturns":78,"org.easymock.tests.UsageVarargTest.varargByteAccepted":361,"org.easymock.tests2.ThreadingTest.testThreadSafe":240,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":393,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":273,"org.easymock.tests2.CaptureTest.testCapture_2617107":262,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":40,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":328,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":158,"org.easymock.tests2.UsageConstraintsTest.any":142,"org.easymock.tests2.StubTest.stub":41,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":340,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":316,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":285,"org.easymock.tests.UsageExpectAndThrowTest.longType":292,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":80,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":339,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":18,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":120,"org.easymock.tests2.SerializationTest.testClass":83,"org.easymock.tests.LimitationsTest.mockNativeMethod":268,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":386,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":94,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":129,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":21,"org.easymock.tests2.NameTest.nameForMocksControl":108,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":131,"org.easymock.tests2.MockedExceptionTest.testMockedException":247,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":289,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":293,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":245,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":167,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":127,"org.easymock.tests2.CaptureTest.testCaptureLast":2,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":65,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":207,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":217,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":367,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":297,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":13,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":221,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":96,"org.easymock.samples.ExampleTest.removeNonExistingDocument":405,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":134,"org.easymock.tests.UsageStrictMockTest.differentMethods":61,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":337,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":117,"org.easymock.tests2.ConstraintsToStringTest.andToString":37,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":242,"org.easymock.tests2.MockBuilderTest.testCreateMockString":88,"org.easymock.tests.UsageExpectAndThrowTest.floatType":291,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":176,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":233,"org.easymock.tests.UsageVerifyTest.twoThrows":77,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":67,"org.easymock.samples.ExampleTest.voteAgainstRemoval":402,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":322,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":25,"org.easymock.tests2.UsageConstraintsTest.testNotNull":220,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":246,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":353,"org.easymock.tests2.UsageTest.defaultResetToNice":225,"org.easymock.samples.ExampleTest.voteAgainstRemovals":399,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":382,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":128,"org.easymock.tests.UsageVarargTest.differentLength":192,"org.easymock.tests2.CallbackTest.callback":174,"org.easymock.tests2.UsageConstraintsTest.equals":95,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":45,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":91,"org.easymock.tests.UsageTest.openCallCountByLastCall":53,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":100,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":157,"org.easymock.tests.UsageCallCountTest.tooFewCalls":391,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":283,"org.easymock.tests.UsageThrowableTest.throwCheckedException":98,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":44,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":154,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":133,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":342,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":226,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":235,"org.easymock.tests.ObjectMethodsTest.testHashCode":271,"org.easymock.tests2.NameTest.nameForNiceMock":107,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":244,"org.easymock.tests2.DependencyTest.testInterfaceMocking":227,"org.easymock.samples.ExampleTest.addDocument":403,"org.easymock.tests2.DelegateToTest.testStubDelegate":198,"org.easymock.tests2.AnswerTest.stubAnswer":234,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":59,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":85,"org.easymock.tests.UsageVarargTest.varargLongAccepted":360,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":62,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":385,"org.easymock.tests.UsageExpectAndReturnTest.floatType":369,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":89,"org.easymock.tests2.ConstraintsToStringTest.orToString":30,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":124,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":70,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":215,"org.easymock.tests.UsageThrowableTest.noUpperLimit":349,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":203,"org.easymock.tests2.SerializationTest.test":112,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":0,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":82,"org.easymock.tests2.UsageConstraintsTest.testSame":206,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":368,"org.easymock.samples.SupportTest.addDocument":408,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_Overriden":104,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":338,"org.easymock.tests.GenericTest.testPackageScope":327,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":397,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":123,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":278,"org.easymock.tests2.NameTest.nameForMock":105,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":379,"org.easymock.tests2.UsageStrictMockTest.differentMethods":20,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":371,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":303,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":269,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":331,"org.easymock.tests2.MockedExceptionTest.testRealException":249,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":348,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":259,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":46,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":17,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":156,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":344,"org.easymock.tests2.NameTest.nameForStrictMock":106,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":6,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":110,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":216,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":163,"org.easymock.tests2.UsageStrictMockTest.range":19,"org.easymock.tests2.UsageConstraintsTest.lessThan":222,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":119,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":183,"org.easymock.tests2.CaptureTest.testCaptureRightOne":265,"org.easymock.tests2.UsageConstraintsTest.testOr":141,"org.easymock.tests.UsageRangeTest.combination":66,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":23,"org.easymock.tests.UsageTest.wrongArguments":52,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":372,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":380,"org.easymock.tests.UsageVarargTest.varargShortAccepted":75,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":193,"org.easymock.tests2.UsageConstraintsTest.cmpTo":210,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":232,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":224,"org.easymock.tests2.CaptureTest.testCaptureFromStub":266,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":334,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":164,"org.easymock.tests.UsageTest.unexpectedCallWithArray":51,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":58,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":392,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":381,"org.easymock.tests2.CaptureTest.testCapture":4,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":189,"org.easymock.tests2.UsageConstraintsTest.constraints":175,"org.easymock.samples.ExampleTest.addAndChangeDocument":406,"org.easymock.tests2.ConstraintsToStringTest.notToString":32,"org.easymock.tests.UsageStrictMockTest.testVerify":63,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":140,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":57,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":310,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":1,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":160,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":147,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":373,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":148,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":71,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":111,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":28,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":356}}]
