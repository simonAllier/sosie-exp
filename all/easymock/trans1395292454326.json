[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"result"}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:127","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stream":"stream"}},{"position":"org.easymock.ConstructorArgs:50","failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,0,34,35,36,37,38,39,40,41,42,43],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:53","failures":[44,45,46],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[47,48,49],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.MocksControl:336","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[50,51,52,53,47,54,55,56,48,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,3,88,89,90,4,91,92,93,94,95,9,12,22,28,96,97,98,0,1,99,100,101,102,103,40,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[51,66,72,224],"status":-1,"binaryOperator":"int <= 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:932","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[69],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:72","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = org.easymock.internal.IClassInstantiator","type":"CtAssignmentImpl"},"failures":[225,226,227],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:70","sourceCode":"java.io.InputStream.close()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[228,229,230,231,232,233],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"in":"in"}},{"transplant":{"position":"org.easymock.internal.LastControl:48","sourceCode":"if (org.easymock.internal.MocksControl != null) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\n} else {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:148","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[234,235,236],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.InjectionPlan:51","failures":[237,238,239,240,241,76,242,243,244,245,246,247,248,249,250,251,252,96,253,254,255,256,257,258,259,260],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:130","sourceCode":"java.io.ObjectOutputStream.writeObject(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:121","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stream":"stream"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:261","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:557","failures":[261,262,50,263,264,265,266,267,268,51,52,53,47,54,55,56,48,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,3,88,89,90,4,91,92,93,94,95,9,12,22,28,96,97,269,270,271,98,272,0,1,99,100,101,102,103,40,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,273,274,119,275,120,121,122,123,124,125,126,127,128,129,130,131,276,132,133,134,136,137,138,139,140,141,277,142,143,144,145,146,147,148,149,150,151,152,153,154,155,278,279,280,281,282,283,157,158,159,160,161,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,162,163,164,307,308,309,310,311,165,166,167,168,169,171,172,312,313,178,314,315,179,180,181,182,316,317,318,183,319,184,185,320,321,186,187,188,322,189,190,191,192,193,194,195,196,323,197,324,325,326,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,327,328,329,330,331,332,333,218,334,219,220,221,335,42,42,43,43,222,223],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","sourceCode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)","type":"CtAssignmentImpl"},"failures":[336],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"m","equalsMethod":"m"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:193","sourceCode":"if (!(java.lang.Class<?>.isInstance(java.lang.Object[][int]))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[337,338,339,340,341,36,41],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:190","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:141","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isResolvedTypeMatch(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[342],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"m","bridgeMethod":"m"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[261,262,50,263,264,265,266,267,268,51,52,53,47,54,55,56,48,57,58,49,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,343,80,344,81,82,83,45,345,84,85,86,87,3,88,89,90,4,91,92,346,347,93,348,94,95,349,9,12,22,28,96,97,269,270,271,98,272,350,351,352,353,0,1,2,99,100,101,102,103,40,104,105,106,107,108,109,110,111,112,113,114,354,115,355,116,117,118,273,274,119,275,120,121,122,123,124,125,126,127,128,129,130,131,356,276,132,133,134,135,136,137,357,358,138,139,140,141,277,142,143,144,359,145,146,147,360,148,149,150,151,152,153,154,155,278,279,280,281,282,283,157,158,361,159,160,46,362,161,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,363,364,365,162,366,163,164,367,368,307,308,309,310,311,165,166,167,168,169,171,172,312,313,178,369,314,370,315,179,180,181,182,316,371,317,318,372,183,373,319,184,185,320,321,186,187,188,322,189,190,191,192,193,194,195,374,375,376,377,378,379,380,381,382,383,384,196,323,197,324,325,326,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,327,385,386,328,387,388,389,390,391,329,330,331,332,333,218,334,219,220,392,221,335,42,42,43,43,259,222,260,393,223,394,395],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[261],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"(((java.util.Comparator<? super T>) + \"(\") + (T))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[86,87,3,88,90,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,396,397,0,2,398,399,99,400,401,100,402,101,102,37,403,103,404,405,40,41,109,110,112,113,114,354,115,406,407,355,116,117,118,408,409,273,274,119,410,411,412,413,144,414,415,416,417,360,148,149,150,418,419,420,421,422,423,424,425,426,170,427,428,429,234,430,431,432,178,369,314,336,319,433,434,42,42,43,43,222,394,395],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"result"}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[337,338,339,435,436,0,36,37,40,41],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:827","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:288","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[264,437],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1319","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[65,344,113],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:83","failures":[50,266,55,59,65,73,77,79,343,81,82,45,345,85,93,348,94,95,97,98,350,351,352,353,132,134,135,137,357,358,138,139,143,147,282,157,158,361,159,160,46,362,161,365,162,366,163,164,185,186,187,189,384,196,323,197],"status":-1,"binaryOperator":"(int) == (java.lang.Integer.int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:62","sourceCode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} ","type":"CtIfImpl"},"failures":[261,262,50,263,264,265,266,267,438,268,51,52,53,47,44,54,55,56,48,57,58,49,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,237,238,239,240,241,76,242,243,244,245,246,247,77,78,79,343,80,344,81,82,83,45,345,84,85,86,87,3,88,439,89,90,4,5,440,441,91,92,346,347,93,348,94,95,349,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,442,248,249,250,251,252,96,253,254,255,256,257,258,97,269,270,271,98,272,443,350,351,352,353,0,1,2,398,99,400,401,100,402,101,102,444,37,403,103,405,445,446,447,448,40,41,228,229,231,232,233,104,449,105,106,107,108,109,110,111,112,113,114,354,450,115,406,407,355,116,117,118,408,409,273,274,119,275,120,121,122,123,124,125,126,127,128,129,130,131,356,410,451,452,411,453,454,276,132,133,134,135,136,137,357,358,138,139,140,141,277,142,143,412,413,144,414,455,359,456,457,458,415,145,146,147,416,417,360,148,149,459,150,460,461,418,151,152,153,154,155,156,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,278,279,280,281,282,283,487,157,158,488,361,159,160,46,362,161,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,489,490,491,492,493,304,305,306,363,364,365,162,366,163,164,367,368,419,420,421,422,423,424,425,426,307,308,309,310,311,165,166,167,168,169,170,427,428,429,234,430,431,171,172,494,495,437,496,497,498,499,500,501,173,502,174,503,504,505,506,312,507,508,509,175,176,313,177,432,178,369,314,336,370,315,510,179,180,181,182,316,371,317,318,372,183,373,319,511,512,513,514,515,516,517,518,519,520,521,522,184,185,320,321,186,187,433,523,524,525,526,434,527,528,188,322,189,190,191,192,193,194,529,195,530,374,375,376,531,377,378,379,380,381,382,383,384,196,323,197,324,325,326,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,327,385,386,328,387,388,389,532,390,391,329,330,331,332,333,218,334,219,220,392,221,533,335,42,43,259,222,260,393,223,394,395],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"in":"in"}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[304,305,306],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[442],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Matches:40","failures":[534],"status":-1,"binaryOperator":"((\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"expected"}},{"transplant":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.InstanceOf:40","sourceCode":"java.lang.StringBuffer.append(((\"isA(\" + (java.lang.Class<?>.getName())) + \")\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[51,63,66,67,75,93,132,151,152,153,154,155,162,307,308,309,310,311,168,169,494,497,498,505,509,511,184,185,186,327],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:93","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.LinkedList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[432],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:122","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":47,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":157,"org.easymock.tests2.UsageTest.argumentsOrdered":345,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":130,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":242,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":502,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":344,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":259,"org.easymock.tests2.DelegateToTest.testReturnException":262,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":279,"org.easymock.tests.MockingTest.testPartialClassMocking":148,"org.easymock.tests.MockClassControlTest.testToString":421,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":443,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":195,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":509,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":409,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":16,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":12,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":284,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":92,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":486,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":337,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":58,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":184,"org.easymock.tests2.UsageTest.wrongArguments":343,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":258,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":463,"org.easymock.samples.ExampleTest.answerVsDelegate":334,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":434,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":461,"org.easymock.tests2.UsageConstraintsTest.testNull":55,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":112,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":426,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":129,"org.easymock.tests2.CaptureTest.testPrimitive":136,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":186,"org.easymock.tests.UsageTest.moreThanOneArgument":158,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":303,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":111,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":309,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":329,"org.easymock.tests.UsageTest.argumentsOrdered":362,"org.easymock.tests.UsageVarargTest.varargIntAccepted":376,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":506,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":151,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":398,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":341,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":452,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":246,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":402,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":437,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":155,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":470,"org.easymock.tests.ReplayStateInvalidUsageTest.times":519,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":96,"org.easymock.tests2.DependencyTest.testClassMocking":440,"org.easymock.tests2.AnswerTest.answer":97,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":49,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":507,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":448,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":524,"org.easymock.tests2.CaptureTest.testAnd":133,"org.easymock.tests2.UsageTest.strictResetToDefault":78,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":35,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":355,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":308,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":181,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":124,"org.easymock.tests2.DelegateToTest.testDelegate":265,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":333,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":469,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":299,"org.easymock.tests.LimitationsTest.mockFinalMethod":414,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":282,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":493,"org.easymock.tests2.DependencyTest.testClassMockingSupport":441,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":370,"org.easymock.tests2.CaptureTest.testCapture1_2446744":137,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":450,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":297,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":446,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":513,"org.easymock.tests.UsageThrowableTest.throwError":188,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":526,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":247,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":311,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":30,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":473,"org.easymock.samples.PartialClassMockTest.testGetArea":222,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":514,"org.easymock.tests.MockingTest.testInterfaceMocking":459,"org.easymock.tests2.CompareToTest.testLessOrEqual":224,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":152,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":166,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":415,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":17,"org.easymock.tests2.UsageTest.niceToStrict":80,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":285,"org.easymock.tests2.ThreadingTest.testChangeDefault":449,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":494,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":100,"org.easymock.tests2.MockBuilderTest.testCreateMock":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":25,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":255,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":293,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":125,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":523,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":326,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":385,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":156,"org.easymock.tests.UsageOverloadedMethodTest.overloading":146,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":21,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":63,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":318,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":145,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":209,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":62,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":235,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":140,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":531,"org.easymock.tests.MockClassControlTest.testEquals":425,"org.easymock.tests2.EasyMockSupportClassTest.testAll":9,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":369,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":301,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":491,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":447,"org.easymock.tests2.CaptureTest.testCaptureAll":134,"org.easymock.tests.MockNameTest.defaultName":487,"org.easymock.tests2.UsageConstraintsTest.testMatches":64,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":511,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":310,"org.easymock.samples.ExampleTest.voteForRemovals":221,"org.easymock.tests.UsageVarargTest.allKinds":384,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":196,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":492,"org.easymock.samples.BasicClassMockTest.testPrintContent":395,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":193,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":346,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":243,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":264,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":283,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":436,"org.easymock.tests2.UsageConstraintsTest.greaterThan":66,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":10,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":180,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":118,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":474,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":431,"org.easymock.samples.ExampleTest.voteForRemoval":219,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":408,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":105,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":342,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":527,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":354,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":466,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":77,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":319,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":37,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":500,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":122,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":189,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":7,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":278,"org.easymock.tests2.CaptureTest.testCaptureFirst":143,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":261,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":499,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":123,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":85,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":373,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":205,"org.easymock.tests2.CaptureTest.testCapture2_2446744":142,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":107,"org.easymock.tests2.UsageTest.moreThanOneArgument":79,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":508,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":103,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":383,"org.easymock.tests.GenericTest.testBridgedEquals":336,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":390,"org.easymock.tests.UsageExpectAndReturnTest.longType":201,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":489,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":120,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":404,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":302,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":71,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":327,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":300,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":305,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":307,"org.easymock.tests.UsageCallCountTest.tooManyCalls":391,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":26,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":206,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":257,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":289,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":192,"org.easymock.tests.MockingTest.testNiceClassMocking":418,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":87,"org.easymock.tests.MockingTest.testClassMocking":417,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":399,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":386,"org.easymock.tests2.UsageConstraintsTest.testContains":61,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":119,"org.easymock.tests2.UsageConstraintsTest.testFind":54,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":147,"org.easymock.tests.MockTypeTest.fromEasyMockClass":525,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":268,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":363,"org.easymock.tests.UsageExpectAndReturnTest.object":208,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":115,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":256,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":128,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":338,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":378,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":457,"org.easymock.tests.UsageTest.exactCallCountByLastCall":161,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":33,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":171,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":498,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":529,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":330,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":41,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":214,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":374,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":317,"org.easymock.tests.MockClassControlTest.testHashCode":424,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":238,"org.easymock.tests2.EasyMockSupportTest.testVerify":356,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":19,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":331,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":316,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":325,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":445,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":442,"org.easymock.tests.UsageVarargTest.varargCharAccepted":377,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":225,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":347,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":177,"org.easymock.tests2.UsageTest.openCallCountByLastCall":81,"org.easymock.tests.DefaultClassInstantiatorTest.object":170,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":131,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":324,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":20,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":291,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":190,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":251,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":237,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":472,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":423,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":116,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":290,"org.easymock.tests.ReplayStateInvalidCallsTest.times":478,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":215,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":304,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":479,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":422,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":28,"org.easymock.tests2.UsageTest.resumeIfFailure":84,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":433,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":451,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":281,"org.easymock.tests2.StubTest.stubWithReturnValue":132,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":36,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":72,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":207,"org.easymock.tests2.SerializationTest.testAllMockedMethod":2,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":312,"org.easymock.samples.SupportTest.voteForRemovals":223,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":432,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":240,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":296,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":313,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":269,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":530,"org.easymock.tests.UsageExpectAndThrowTest.object":294,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":69,"org.easymock.tests2.DelegateToTest.testWrongClass":263,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":476,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":168,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":169,"org.easymock.tests.UsageStrictMockTest.range":163,"org.easymock.samples.ConstructorCalledMockTest.testTax":42,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":453,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":127,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":86,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":295,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":101,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":521,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":6,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":462,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":468,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":167,"org.easymock.tests2.CaptureTest.testCaptureNone":139,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":229,"org.easymock.tests.UsageUnorderedTest.message":187,"org.easymock.tests.UsageVerifyTest.twoReturns":197,"org.easymock.tests.UsageVarargTest.varargByteAccepted":382,"org.easymock.tests2.ThreadingTest.testThreadSafe":104,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":23,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":389,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":458,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":394,"org.easymock.tests2.CaptureTest.testCapture_2617107":135,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":510,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":175,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":321,"org.easymock.tests2.UsageConstraintsTest.any":59,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":518,"org.easymock.tests2.StubTest.stub":276,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":176,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":280,"org.easymock.tests.UsageExpectAndThrowTest.longType":287,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":234,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":517,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":348,"org.easymock.tests2.SerializationTest.testClass":0,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":76,"org.easymock.tests.LimitationsTest.mockNativeMethod":144,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":217,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":314,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":250,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":484,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":349,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":230,"org.easymock.tests2.NameTest.nameForMocksControl":353,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":252,"org.easymock.tests2.MockedExceptionTest.testMockedException":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":11,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":160,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":438,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":150,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":288,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":109,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":102,"org.easymock.tests.MockingTest.testNicePartialClassMocking":149,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":114,"org.easymock.tests2.CaptureTest.testCaptureLast":138,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":248,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":315,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":483,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":4,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":57,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":70,"org.easymock.tests.MockingTest.testTwoMocks":360,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":480,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":5,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":198,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":292,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":45,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":74,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":233,"org.easymock.samples.ExampleTest.removeNonExistingDocument":533,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":515,"org.easymock.tests.UsageStrictMockTest.differentMethods":164,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":254,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":239,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":428,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":232,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":106,"org.easymock.tests2.MockBuilderTest.testCreateMockString":405,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":419,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":13,"org.easymock.tests.UsageExpectAndThrowTest.floatType":286,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":8,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":271,"org.easymock.tests.UsageVerifyTest.twoThrows":323,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":371,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":22,"org.easymock.samples.ExampleTest.voteAgainstRemoval":220,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":174,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":165,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":117,"org.easymock.tests.LimitationsTest.privateConstructor":413,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":32,"org.easymock.tests2.UsageConstraintsTest.testNotNull":73,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":194,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":273,"org.easymock.tests2.UsageTest.defaultResetToNice":83,"org.easymock.samples.ExampleTest.voteAgainstRemovals":218,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":503,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":213,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":249,"org.easymock.tests.UsageVarargTest.differentLength":379,"org.easymock.tests2.CallbackTest.callback":266,"org.easymock.tests2.UsageConstraintsTest.equals":44,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":406,"org.easymock.tests.UsageTest.openCallCountByLastCall":159,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":51,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":320,"org.easymock.tests.UsageCallCountTest.tooFewCalls":387,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":88,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":464,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":231,"org.easymock.tests.UsageThrowableTest.throwCheckedException":191,"org.easymock.tests.MockingTest.testStrictClassMocking":416,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":172,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":90,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":3,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":253,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":520,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":89,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":272,"org.easymock.tests.ObjectMethodsTest.testHashCode":456,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":534,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":340,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":482,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":108,"org.easymock.tests2.NameTest.nameForNiceMock":352,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":477,"org.easymock.tests2.DependencyTest.testInterfaceMocking":91,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":339,"org.easymock.samples.ExampleTest.addDocument":392,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":24,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":29,"org.easymock.tests2.DelegateToTest.testStubDelegate":50,"org.easymock.tests2.AnswerTest.stubAnswer":98,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":162,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":444,"org.easymock.tests.UsageVarargTest.varargLongAccepted":381,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":367,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":173,"org.easymock.tests.UsageExpectAndReturnTest.floatType":200,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":216,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":40,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":43,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":67,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":245,"org.easymock.tests.UsageThrowableTest.noUpperLimit":322,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":372,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":52,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":410,"org.easymock.tests2.SerializationTest.test":1,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":357,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":236,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":427,"org.easymock.tests2.UsageConstraintsTest.testSame":56,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":199,"org.easymock.samples.SupportTest.addDocument":393,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_Overriden":227,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":439,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":467,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":516,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":14,"org.easymock.tests.GenericTest.testPackageScope":178,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":332,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":497,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":244,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":460,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":465,"org.easymock.tests2.NameTest.nameForMock":350,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":210,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":39,"org.easymock.tests2.UsageStrictMockTest.differentMethods":95,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":407,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":202,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":298,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":455,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":182,"org.easymock.tests2.MockedExceptionTest.testRealException":275,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":528,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":505,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":454,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":504,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":93,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":522,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":185,"org.easymock.tests2.NameTest.nameForStrictMock":351,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":401,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":267,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":113,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":411,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":429,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":68,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":99,"org.easymock.tests2.UsageStrictMockTest.range":94,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":471,"org.easymock.tests2.UsageConstraintsTest.lessThan":75,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":396,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":241,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":501,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":435,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":121,"org.easymock.tests2.CaptureTest.testCaptureRightOne":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":18,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":228,"org.easymock.tests2.UsageConstraintsTest.testOr":48,"org.easymock.tests.UsageRangeTest.combination":179,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":110,"org.easymock.tests.UsageTest.wrongArguments":361,"org.easymock.tests2.MockBuilderTest.testWithConstructor":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":15,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":420,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":203,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":495,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":211,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":430,"org.easymock.tests.UsageVarargTest.varargShortAccepted":380,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":532,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":485,"org.easymock.tests2.UsageConstraintsTest.cmpTo":60,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":270,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":475,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":496,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":82,"org.easymock.tests2.CaptureTest.testCaptureFromStub":277,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":512,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":400,"org.easymock.tests.UsageTest.unexpectedCallWithArray":488,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":481,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":365,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":388,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":38,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":212,"org.easymock.tests2.UsageConstraintsTest.constraints":53,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":366,"org.easymock.samples.ExampleTest.addAndChangeDocument":335,"org.easymock.tests.UsageStrictMockTest.testVerify":368,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":260,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":364,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":490,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":358,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":397,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":153,"org.easymock.tests.LimitationsTest.abstractClass":412,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":204,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":183,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":154,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":126,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":375}}]
