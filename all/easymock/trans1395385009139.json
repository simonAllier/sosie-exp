[{"transplant":{"position":"org.easymock.internal.Injector:122","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(org.easymock.internal.EasyMockProperties.java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"));\n} ","type":"CtIfImpl"},"failures":[0],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[1,2,3,4],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"primitiveType"}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:337","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[5,6,7],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:187","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:294","sourceCode":"org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[8],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[9],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:39","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:95","sourceCode":"for (int int = 0 ; int < int ; int++) {\n    java.util.Stack<org.easymock.IArgumentMatcher>.pop();\n}","type":"CtForImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:119","sourceCode":"if (java.lang.String == null) {\n    return ((java.lang.String)(java.util.Properties.remove(java.lang.String)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"key","properties":"properties","key":"value"}},{"transplant":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:257","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andReturn(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,1,2,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","answer":"value"}},{"position":"org.easymock.EasyMock:1135","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:63","sourceCode":"java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"in":"in"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:111","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[179,1],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"failures":[180,181],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:48","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"failures":[182,183,184,185,186],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:253","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"failures":[187,188],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:104","sourceCode":"throw new java.lang.IllegalStateException(java.lang.String)","type":"CtThrowImpl"},"failures":[189],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[47,190],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Null:35","failures":[27,191,72,192],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[193,194,14,195,196,197,198,60,61,63,64,65,199,66,200,201,202,67,9,203,204,205,206,207,97,98,99,100,102,103,3,208,104,209,210,211,212,213,214,215,216,217,110,218,219,220,221,222,223,187,224,225,226,227,228,147,148,149,229,230,231,156,232,233,234,235,236,237,238,239,240,241],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:60","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:322","sourceCode":"for (final java.lang.Class<?> java.lang.Class<?> : java.lang.Class<?>[]) {\n    if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n        return true;\n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"failures":[172,174],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[30,31,48,49,242,50,55,243],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[182,183,184,185,186,244],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:225","sourceCode":"final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":25,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":157,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":83,"org.easymock.tests2.StubTest.stubWithReturnValue":109,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":44,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":124,"org.easymock.tests2.SerializationTest.testAllMockedMethod":3,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":6,"org.easymock.tests.MockingTest.testPartialClassMocking":147,"org.easymock.samples.SupportTest.voteForRemovals":15,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":183,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":217,"org.easymock.tests.MockClassControlTest.testToString":235,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":138,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":204,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":4,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":105,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":17,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":42,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":170,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":171,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":31,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":167,"org.easymock.samples.ConstructorCalledMockTest.testTax":193,"org.easymock.tests.UsageStrictMockTest.range":113,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":97,"org.easymock.tests2.UsageConstraintsTest.testNull":27,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":63,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":240,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":86,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":82,"org.easymock.tests2.CaptureTest.testPrimitive":50,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":208,"org.easymock.tests.UsageTest.moreThanOneArgument":158,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":62,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":185,"org.easymock.tests2.CaptureTest.testCaptureNone":53,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":152,"org.easymock.tests.UsageVerifyTest.twoReturns":140,"org.easymock.tests2.ThreadingTest.testThreadSafe":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":214,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":195,"org.easymock.tests2.CaptureTest.testCapture_2617107":242,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":162,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":144,"org.easymock.tests2.UsageConstraintsTest.any":32,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":166,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":145,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":187,"org.easymock.tests2.SerializationTest.testClass":1,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":96,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":21,"org.easymock.tests.ReplayStateInvalidUsageTest.times":7,"org.easymock.tests.LimitationsTest.mockNativeMethod":156,"org.easymock.tests2.AnswerTest.answer":58,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":111,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":134,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":189,"org.easymock.tests2.CaptureTest.testAnd":48,"org.easymock.tests2.UsageTest.strictResetToDefault":89,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":201,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":0,"org.easymock.tests2.MockedExceptionTest.testMockedException":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":209,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":78,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":136,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":160,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":149,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":60,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":87,"org.easymock.tests.MockingTest.testNicePartialClassMocking":148,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":65,"org.easymock.tests.LimitationsTest.mockFinalMethod":232,"org.easymock.tests2.CaptureTest.testCaptureLast":52,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":30,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":103,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":43,"org.easymock.tests.MockingTest.testTwoMocks":228,"org.easymock.tests2.CaptureTest.testCapture1_2446744":51,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":115,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":46,"org.easymock.tests.UsageThrowableTest.throwError":172,"org.easymock.tests.UsageStrictMockTest.differentMethods":114,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":222,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":71,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":210,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":38,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":106,"org.easymock.samples.PartialClassMockTest.testGetArea":14,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":8,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":163,"org.easymock.samples.ExampleTest.voteAgainstRemoval":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":143,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":150,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":151,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":67,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":212,"org.easymock.tests2.UsageTest.niceToStrict":91,"org.easymock.tests.LimitationsTest.privateConstructor":231,"org.easymock.tests2.UsageConstraintsTest.testNotNull":45,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":205,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":178,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":85,"org.easymock.samples.ExampleTest.voteAgainstRemovals":10,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":5,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":130,"org.easymock.tests.UsageTest.openCallCountByLastCall":159,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":182,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":79,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":22,"org.easymock.tests.UsageOverloadedMethodTest.overloading":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":216,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":36,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":100,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":126,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":153,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":35,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":54,"org.easymock.tests.UsageThrowableTest.throwCheckedException":175,"org.easymock.tests.MockClassControlTest.testEquals":239,"org.easymock.tests2.EasyMockSupportClassTest.testAll":104,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":218,"org.easymock.tests.MockingTest.testStrictClassMocking":226,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":186,"org.easymock.tests2.CaptureTest.testCaptureAll":49,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":102,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":99,"org.easymock.tests2.UsageConstraintsTest.testMatches":37,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":101,"org.easymock.samples.ExampleTest.voteForRemovals":13,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":73,"org.easymock.tests.UsageVarargTest.allKinds":192,"org.easymock.tests2.DependencyTest.testInterfaceMocking":16,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":139,"org.easymock.samples.BasicClassMockTest.testPrintContent":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":215,"org.easymock.tests2.DelegateToTest.testStubDelegate":108,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":177,"org.easymock.tests2.AnswerTest.stubAnswer":59,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":112,"org.easymock.tests2.UsageConstraintsTest.greaterThan":39,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":9,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":225,"org.easymock.samples.ExampleTest.voteForRemoval":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":142,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":203,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":70,"org.easymock.tests.UsageExpectAndReturnTest.floatType":117,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":133,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":199,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":68,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":194,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":40,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":241,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":88,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":23,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":197,"org.easymock.tests2.SerializationTest.test":2,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":179,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":188,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":221,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":76,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":173,"org.easymock.tests2.UsageConstraintsTest.testSame":28,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":116,"org.easymock.tests2.CaptureTest.testCaptureFirst":57,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":77,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":95,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":122,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":211,"org.easymock.tests.GenericTest.testPackageScope":110,"org.easymock.tests2.UsageTest.moreThanOneArgument":90,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":72,"org.easymock.tests2.CaptureTest.testCapture2_2446744":56,"org.easymock.tests.GenericTest.testBridgedEquals":219,"org.easymock.tests.UsageExpectAndReturnTest.longType":118,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":74,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":127,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":191,"org.easymock.tests2.UsageStrictMockTest.differentMethods":20,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":200,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":119,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":137,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":123,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":18,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":168,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":176,"org.easymock.tests.MockingTest.testNiceClassMocking":229,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":98,"org.easymock.tests.MockingTest.testClassMocking":227,"org.easymock.tests2.UsageConstraintsTest.testContains":34,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":207,"org.easymock.tests2.UsageConstraintsTest.testFind":26,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":155,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":64,"org.easymock.tests.UsageExpectAndReturnTest.object":125,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":198,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":223,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":41,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":66,"org.easymock.tests2.UsageStrictMockTest.range":19,"org.easymock.tests2.UsageConstraintsTest.lessThan":47,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":81,"org.easymock.tests.UsageTest.exactCallCountByLastCall":161,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":141,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":75,"org.easymock.tests2.CaptureTest.testCaptureRightOne":55,"org.easymock.tests2.UsageConstraintsTest.testOr":29,"org.easymock.tests.UsageRangeTest.combination":135,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":61,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":131,"org.easymock.tests.MockClassControlTest.testHashCode":238,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":234,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":120,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":128,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":224,"org.easymock.tests2.UsageConstraintsTest.cmpTo":33,"org.easymock.tests2.CompareToTest.testLessThan":190,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":146,"org.easymock.tests2.UsageTest.openCallCountByLastCall":92,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":93,"org.easymock.tests.DefaultClassInstantiatorTest.object":220,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":84,"org.easymock.tests2.CaptureTest.testCaptureFromStub":243,"org.easymock.tests.UsageTest.unexpectedCallWithArray":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":213,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":174,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":184,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":129,"org.easymock.tests2.CaptureTest.testCapture":180,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":237,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":202,"org.easymock.tests2.UsageConstraintsTest.constraints":24,"org.easymock.tests.CapturesMatcherTest.test":181,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":132,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":236,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":107,"org.easymock.tests2.UsageTest.resumeIfFailure":94,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":164,"org.easymock.tests.LimitationsTest.abstractClass":230,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":121,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":165,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":80}}]
