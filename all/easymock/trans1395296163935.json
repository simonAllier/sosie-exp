[{"transplant":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[0,1,2],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1530","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(int))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:198","sourceCode":"return true","type":"CtReturnImpl"},"failures":[179,180,181,182,183,72,184,77,185,186],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[187,93],"status":-1,"binaryOperator":"int >= 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[81,82,84,86,87,188,98,102,141,189,148],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"failures":[190],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1135","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:108","sourceCode":"try {\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[77,78,191],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"toStringMethod","bridgeMethod":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockStatement:42","sourceCode":"org.easymock.EasyMockSupport.org.easymock.EasyMockSupport.injectMocks(java.lang.Object)","type":"CtInvocationImpl"},"failures":[70,73,192,193],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","failures":[72,184,77,119,123,194,195,196,185,186,197,198,199,200,201,202,203,157,204,205,158,206,207,208,209,210,211,212,213,214,159,215,216,217,218,219,160,220,221,222,223],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[12,224,20,23,24,25,26,27,225,226,227,228,229,35,36,37,230,45,46,74,79,80,83,84,85,86,91,93,94,96,97,102,103,104,231,222,222,223,223],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.ConstructorArgs:54","failures":[72,184,77,119,123,194,195,196,185,186,197,198,199,200,201,202,203,157,204,205,158,206,207,208,209,210,211,212,213,214,159,215,216,217,218,219,160,220,221,222,223],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:105","sourceCode":"if ((java.lang.Class<T>.isInterface()) && (java.lang.reflect.Method[] != null)) {\n    throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\");\n} ","type":"CtIfImpl"},"failures":[194],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[154],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[232,4,16,233,234,21,235,236,237,238,239,75,240,241,242],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[232,4,16,233,234,21,235,236,237,238,239,75,240,241,242],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[243,244,245,246,247,248,249,250,251,252,253,254,255,129,256,151],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[5,6,7,8,9,10,11,20,21,22,23,24,25,26,27,225,226,227,228,35,45,46,47,50,51,52,53,54,55,58,59,61,62,63,65,66,67,68,69,71,72,74,75,76,117,118,119,120,121,122,123,124,125,126,127,128,155,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:138","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[257,258,259],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[179,180,181,1,2,184,185],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl() : org.easymock.EasyMockSupport.createNiceControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[260,261,262,5,6,7,263,264,265,266,267,257,268,269,270,271,43,272,273,274,275,276,277,278,47,279,280,281,282,283,284,285,286,287,72,184,288,77,191,117,118,119,120,122,123,289,195,124,290,196,291,125,292,126,185,127,186,293,128,198,294,254,255,129,201,202,157,205,158,206,207,208,210,211,212,213,159,215,216,217,218,219,160,161,162,164,165,166,295,167,296,297,298,168,169,170,299,300,301,302,303,304,222,223,174],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:159","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injector:109","sourceCode":"org.easymock.internal.InjectionPlan.addTestSubjectField(java.lang.reflect.Field)","type":"CtInvocationImpl"},"failures":[305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,192,193],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:142","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:827","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"failures":[321],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[136,297],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[246,247,322,323],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[264,265,266,267,268,269],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[12,243,16,324,325,17,234,20,23,24,25,26,27,225,35,36,244,326,37,45,46,252,253,74,327,79,80,81,82,83,84,85,86,87,88,188,89,90,91,92,93,94,95,96,97,98,99,100,328,101,102,103,104,105,329,330,331,130,141,142,189,143,144,332,333,145,146,147,148,231,149,150,334,155,167,298],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":82,"org.easymock.tests2.UsageTest.argumentsOrdered":242,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":38,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":115,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":309,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":251,"org.easymock.tests2.StubTest.stubWithReturnValue":151,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":185,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":192,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":59,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":101,"org.easymock.tests2.SerializationTest.testAllMockedMethod":191,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":249,"org.easymock.tests.MockingTest.testPartialClassMocking":5,"org.easymock.samples.SupportTest.voteForRemovals":173,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":271,"org.easymock.tests.MockClassControlTest.testToString":282,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":48,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":209,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":321,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":158,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":99,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":172,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":179,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":45,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":46,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":88,"org.easymock.tests2.UsageTest.wrongArguments":240,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":35,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":320,"org.easymock.samples.ConstructorCalledMockTest.testTax":222,"org.easymock.tests.UsageStrictMockTest.range":21,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":112,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":276,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":117,"org.easymock.tests2.UsageConstraintsTest.testNull":84,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":164,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":287,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":114,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":126,"org.easymock.tests2.CaptureTest.testPrimitive":143,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":37,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":201,"org.easymock.tests.UsageTest.moreThanOneArgument":39,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":163,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":227,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":15,"org.easymock.tests2.CaptureTest.testCaptureNone":146,"org.easymock.tests.UsageUnorderedTest.message":16,"org.easymock.tests.UsageVerifyTest.twoReturns":4,"org.easymock.tests2.ThreadingTest.testThreadSafe":152,"org.easymock.tests.UsageTest.argumentsOrdered":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":215,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":303,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":23,"org.easymock.tests2.CaptureTest.testCapture_2617107":189,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":289,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":2,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":326,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":292,"org.easymock.tests2.UsageConstraintsTest.any":89,"org.easymock.tests2.StubTest.stub":334,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":247,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":27,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":250,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":257,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":327,"org.easymock.tests2.SerializationTest.testClass":77,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":70,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":73,"org.easymock.tests.LimitationsTest.mockNativeMethod":47,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":273,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":69,"org.easymock.tests2.AnswerTest.answer":139,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":188,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":315,"org.easymock.tests2.CaptureTest.testAnd":141,"org.easymock.tests2.UsageTest.strictResetToDefault":131,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":298,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":196,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":316,"org.easymock.tests2.MockedExceptionTest.testMockedException":255,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":205,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":10,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":109,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":41,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":7,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":161,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":127,"org.easymock.tests.MockingTest.testNicePartialClassMocking":6,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":166,"org.easymock.tests.LimitationsTest.mockFinalMethod":279,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":313,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":0,"org.easymock.tests2.CaptureTest.testCaptureLast":145,"org.easymock.tests2.CompareToTest.testCompareEqual":190,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":252,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":87,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":123,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":100,"org.easymock.tests.MockingTest.testTwoMocks":262,"org.easymock.tests2.CaptureTest.testCapture1_2446744":144,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":194,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":50,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":241,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":103,"org.easymock.tests.UsageThrowableTest.throwError":28,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":318,"org.easymock.tests.UsageStrictMockTest.differentMethods":22,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":307,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":266,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":154,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":312,"org.easymock.tests2.MockBuilderTest.testCreateMockString":294,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":280,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":206,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":203,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":288,"org.easymock.tests.UsageVerifyTest.twoThrows":232,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":159,"org.easymock.samples.PartialClassMockTest.testGetArea":174,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":24,"org.easymock.samples.ExampleTest.voteAgainstRemoval":177,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":14,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":13,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":210,"org.easymock.tests2.UsageTest.niceToStrict":133,"org.easymock.tests.LimitationsTest.privateConstructor":278,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":200,"org.easymock.tests2.UsageConstraintsTest.testNotNull":102,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":254,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":34,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":125,"org.easymock.tests2.MockBuilderTest.testCreateMock":293,"org.easymock.tests2.UsageTest.defaultResetToNice":136,"org.easymock.samples.ExampleTest.voteAgainstRemovals":175,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":65,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":217,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":319,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":296,"org.easymock.tests.UsageTest.openCallCountByLastCall":40,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":110,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":79,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":323,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":244,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":44,"org.easymock.tests.UsageOverloadedMethodTest.overloading":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":214,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":93,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":61,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":17,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":120,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":258,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":92,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":147,"org.easymock.tests.UsageThrowableTest.throwCheckedException":31,"org.easymock.tests.MockClassControlTest.testEquals":286,"org.easymock.tests2.EasyMockSupportClassTest.testAll":157,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":272,"org.easymock.tests.MockingTest.testStrictClassMocking":260,"org.easymock.tests2.CaptureTest.testCaptureAll":142,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":243,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":122,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":317,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":119,"org.easymock.tests2.UsageConstraintsTest.testMatches":94,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":121,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":230,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":228,"org.easymock.tests2.CompareToTest.testGreateOrEqual":187,"org.easymock.samples.ExampleTest.voteForRemovals":178,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":1,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":156,"org.easymock.tests.UsageVarargTest.allKinds":325,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":3,"org.easymock.tests2.DependencyTest.testInterfaceMocking":171,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":181,"org.easymock.samples.BasicClassMockTest.testPrintContent":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":220,"org.easymock.tests2.DelegateToTest.testStubDelegate":71,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":33,"org.easymock.tests2.AnswerTest.stubAnswer":140,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":310,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":253,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":20,"org.easymock.tests2.UsageConstraintsTest.greaterThan":96,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":183,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":204,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":9,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":170,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":269,"org.easymock.samples.ExampleTest.voteForRemoval":176,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":299,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":153,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":68,"org.easymock.tests.UsageExpectAndReturnTest.floatType":52,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":295,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":72,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":223,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":97,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":270,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":80,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":130,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":301,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":332,"org.easymock.tests2.SerializationTest.test":78,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":186,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":259,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":265,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":107,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":29,"org.easymock.tests2.UsageConstraintsTest.testSame":85,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":51,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":202,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":248,"org.easymock.tests2.CaptureTest.testCaptureFirst":150,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":108,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":138,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":239,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":207,"org.easymock.tests.GenericTest.testPackageScope":43,"org.easymock.tests2.UsageTest.moreThanOneArgument":132,"org.easymock.tests2.CaptureTest.testCapture2_2446744":149,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":155,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":128,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":311,"org.easymock.tests.GenericTest.testBridgedEquals":274,"org.easymock.tests.UsageExpectAndReturnTest.longType":53,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":105,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":62,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":328,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":224,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":198,"org.easymock.tests2.UsageStrictMockTest.differentMethods":76,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":246,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":225,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":297,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":54,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":11,"org.easymock.tests2.MockedExceptionTest.testRealException":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":218,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":58,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":74,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":32,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":36,"org.easymock.tests.MockingTest.testNiceClassMocking":263,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":118,"org.easymock.tests.MockingTest.testClassMocking":261,"org.easymock.tests2.UsageConstraintsTest.testContains":91,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":129,"org.easymock.tests2.UsageConstraintsTest.testFind":83,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":19,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":291,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":330,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":165,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":331,"org.easymock.tests.UsageExpectAndReturnTest.object":60,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":302,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":267,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":98,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":167,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":124,"org.easymock.tests2.UsageStrictMockTest.range":75,"org.easymock.tests2.UsageConstraintsTest.lessThan":104,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":113,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":180,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":308,"org.easymock.tests.UsageTest.exactCallCountByLastCall":42,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":12,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":106,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":211,"org.easymock.tests2.CaptureTest.testCaptureRightOne":148,"org.easymock.tests2.UsageConstraintsTest.testOr":86,"org.easymock.tests.UsageRangeTest.combination":8,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":184,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":324,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":66,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":162,"org.easymock.tests.UsageTest.wrongArguments":236,"org.easymock.tests2.MockBuilderTest.testWithConstructor":195,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":306,"org.easymock.tests.MockClassControlTest.testHashCode":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":208,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":281,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":55,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":212,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":322,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":268,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":329,"org.easymock.tests2.UsageConstraintsTest.cmpTo":90,"org.easymock.tests2.UsageTest.openCallCountByLastCall":134,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":135,"org.easymock.tests.DefaultClassInstantiatorTest.object":264,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":116,"org.easymock.tests2.CaptureTest.testCaptureFromStub":231,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":290,"org.easymock.tests.UsageTest.unexpectedCallWithArray":235,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":213,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":234,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":30,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":197,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":305,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":64,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":284,"org.easymock.tests2.UsageConstraintsTest.constraints":81,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":168,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":67,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":245,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":193,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":160,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":333,"org.easymock.tests2.UsageTest.resumeIfFailure":137,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":25,"org.easymock.tests.LimitationsTest.abstractClass":277,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":275,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":56,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":49,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":26,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":111}}]
