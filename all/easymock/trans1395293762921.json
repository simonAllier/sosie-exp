[{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[0,1,2],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:202","sourceCode":"final java.io.ObjectInputStream java.io.ObjectInputStream = new java.io.ObjectInputStream(new java.io.ByteArrayInputStream(byte[]))","type":"CtLocalVariableImpl"},"failures":[3,4,5],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:127","sourceCode":"java.lang.Object[][int] = java.lang.Object","type":"CtAssignmentImpl"},"failures":[6],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:785","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[7],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[8,9,10],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:152","sourceCode":"throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"))","type":"CtThrowImpl"},"failures":[11],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:325","sourceCode":"java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:82","sourceCode":"if ((this.java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + (org.easymock.Capture<T>.getValues())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"failures":[28],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:36","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"failures":[29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[55,56,57,58],"status":-1,"binaryOperator":"java.lang.Object != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:61","failures":[13,14,15,20,59,23,26,60,61,62,63,64,58,65,66,67,68],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:257","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andReturn(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[69,70,71,72,73,74,75,76,77,78,79,36,80,81,82,83,84,85,86,87,88,89,90,91,13,14,16,17,20,59,21,23,25,26,92,93,60,61,94,62,95,63,64,7,96,97,98,99,100,101,9,102,103,104,105,106,107,58,108,109,110,111,112,113,114,115,116,48,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,10,147,148,149,150,65,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","answer":"value"}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[69,218,70,71,219,72,220,221,75,222,223,76,77,224,78,225,80,55,56,226,81,227,82,83,228,84,85,86,229,87,8,88,89,230,231,90,91,13,14,15,16,17,18,19,20,59,21,23,24,25,26,92,93,60,61,94,62,95,63,64,7,96,97,98,99,100,101,9,102,103,104,105,106,57,107,58,108,109,114,232,233,234,235,118,119,122,123,124,236,125,237,126,238,127,128,129,130,131,143,144,145,146,10,147,148,149,239,240,241,242,150,65,66,67,151,152,243,153,154,155,156,157,158,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,68,162,286,287,288,164,289,165,166,290,291,167,168,292,169,170,293,294,171,295,296,297,298,299,300,301,172,173,174,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,302,210,211,303,212,213,214,215,216],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1506","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(double))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[69,70,71,72,73,74,75,76,77,78,79,36,80,81,82,83,84,85,86,87,88,89,304,90,91,13,14,16,17,20,59,21,23,25,26,92,93,60,61,94,62,95,63,64,7,96,97,98,99,100,101,9,102,103,104,105,106,107,58,108,109,110,111,112,113,305,114,115,116,306,48,234,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,307,139,140,141,142,143,144,145,146,10,147,148,308,149,309,242,150,65,151,152,153,154,155,156,157,158,159,160,161,245,162,164,165,166,167,168,169,170,171,172,173,174,180,310,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[69,218,70,71,219,72,311,220,312,313,73,314,74,29,315,316,30,317,221,75,222,318,223,76,77,224,319,320,78,79,31,32,33,34,35,36,37,38,39,40,41,42,321,322,323,324,325,326,327,225,80,55,328,56,329,330,331,332,333,226,81,227,82,83,228,84,85,86,229,87,8,88,89,304,230,231,90,91,13,14,15,16,17,18,19,20,59,21,23,24,25,26,92,93,60,61,334,94,62,95,63,64,7,335,96,97,98,99,100,101,9,102,103,104,105,106,57,107,58,108,109,336,337,338,110,339,340,111,341,342,343,344,345,346,347,348,349,112,350,351,352,353,354,113,355,356,357,358,359,305,360,361,362,114,363,115,364,116,365,366,367,306,368,369,43,44,45,46,47,48,49,50,51,52,53,54,232,233,234,235,370,371,372,373,374,117,118,119,120,375,121,122,123,376,124,377,378,236,125,237,126,379,380,238,127,128,129,130,131,132,133,134,135,136,137,138,307,139,140,141,142,381,143,144,145,146,10,147,382,383,148,384,385,386,308,149,309,387,388,239,389,240,241,390,242,391,392,393,394,150,65,66,67,151,395,396,397,398,152,243,153,154,155,156,157,158,399,400,401,402,244,403,159,160,161,245,246,247,248,249,250,251,252,253,254,255,256,404,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,405,280,281,406,282,283,284,285,68,407,408,409,410,411,412,413,414,415,416,417,418,419,420,6,421,422,423,3,424,425,426,427,162,286,163,428,429,287,288,164,289,165,166,290,430,431,432,433,434,291,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,167,168,451,292,169,170,293,294,171,452,453,295,296,297,298,454,299,300,301,455,456,457,458,459,460,172,173,174,461,462,463,464,465,466,467,468,469,175,470,176,471,472,473,474,475,476,477,478,177,178,479,179,180,310,181,182,480,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,481,482,208,483,209,302,210,484,485,486,487,488,211,303,489,490,491,212,213,492,214,493,494,495,215,216,496,217,497],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:91","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[13,14,15,16,23,24,60,61,94,62,95,63,64,7,335,96,104,105,58,108],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"value":"expected"}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"failures":[498,97,148],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Compare:47","failures":[],"status":0,"binaryOperator":"((((java.util.Comparator<? super T>) + \"(\") + (T)) + \") \")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:63","failures":[],"status":0,"binaryOperator":"(\"Failed to instantiate \" + (java.lang.Class<?>.getName()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Any:36","failures":[81,14,20,59,26,63,96,150,65,66,67,151,255,164,301,203,204,205,206,207,211,303,215,216],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[36,37,358,360,115,116,306,369,48,49,371,372,373,374,118,119,122,123,135,138,139,144,386,309,388,404,414,415,416,443,446,447,448,449,450,456,459,460],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[69,218,70,71,219,72,220,312,313,73,314,74,29,315,316,30,221,75,222,223,76,77,224,78,79,36,225,80,55,56,329,330,331,332,333,226,81,227,82,83,228,84,85,86,229,87,8,88,89,304,230,231,90,91,13,14,15,16,17,18,19,20,59,21,23,24,25,26,92,93,60,61,94,62,95,63,64,7,96,97,98,99,100,101,9,102,103,104,105,106,57,107,58,108,109,110,111,112,113,358,305,114,363,115,116,367,306,369,48,232,233,234,235,117,118,119,120,121,122,123,124,236,125,237,126,238,127,128,129,130,131,132,133,134,135,136,137,138,307,139,140,141,142,381,143,144,145,146,10,147,382,148,386,308,149,309,239,240,241,391,150,65,66,67,151,395,396,397,398,152,243,153,154,155,156,157,158,27,27,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,406,282,283,284,285,68,162,286,429,287,288,164,289,165,166,290,167,168,451,292,169,170,293,294,171,295,296,297,298,454,299,300,301,172,173,174,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,302,210,484,485,486,487,488,211,303,212,213,214,215,216],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:556","sourceCode":"final org.easymock.internal.MocksControl org.easymock.internal.MocksControl = org.easymock.internal.LastControl.org.easymock.internal.LastControl.lastControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"failures":[81,83,228,86,242,403,164,166,290,168,209,302,210],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:51","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[499,109],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[468],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[144],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[500,102],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:237","sourceCode":"return org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.reflect.Method.getParameterTypes())","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod"}},{"position":"org.easymock.Capture:82","failures":[12,13,15,16,17,18,19,20,21,22,23,24,26],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:112","sourceCode":"if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"method","paramTypes":"paramTypes","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[69,218,70,71,219,72,311,220,312,313,73,314,74,29,315,315,316,316,30,317,221,75,222,318,223,76,77,224,319,320,78,79,31,32,33,34,35,36,37,38,39,40,41,42,321,325,326,327,225,80,55,328,56,329,330,331,332,333,226,81,227,82,83,228,84,85,86,229,87,8,88,89,304,230,231,90,91,13,14,15,16,17,18,19,20,59,21,23,24,25,26,92,93,60,61,334,94,62,95,63,64,7,335,96,97,98,99,100,101,9,102,103,104,105,106,57,107,58,108,109,336,337,338,110,339,340,111,341,342,343,344,345,346,347,348,349,112,350,351,352,353,354,113,355,356,358,305,360,362,114,363,115,116,366,367,306,369,43,44,45,46,47,48,49,50,51,52,53,54,232,233,234,235,370,371,372,373,374,117,118,119,120,121,122,123,124,377,378,236,125,237,126,379,238,127,128,129,130,131,132,133,134,135,136,137,138,307,139,140,141,142,381,143,144,145,146,10,147,382,383,148,384,385,386,308,149,309,387,388,239,389,240,241,390,242,391,392,393,394,150,65,66,67,151,395,396,397,398,152,243,153,154,155,156,157,158,399,400,401,402,244,403,159,160,161,245,246,247,248,249,250,251,252,253,254,255,256,404,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,405,280,281,406,282,283,284,285,68,407,408,409,410,411,412,413,414,415,416,417,418,419,6,421,422,423,3,424,426,427,162,286,163,428,429,287,288,164,289,165,166,290,430,431,432,433,434,291,435,436,437,438,439,440,441,442,443,446,447,448,449,450,167,168,451,292,169,170,293,294,171,452,453,295,296,297,298,454,299,300,301,455,456,457,458,459,460,172,173,174,461,462,463,464,465,466,467,468,469,175,470,176,471,472,473,474,475,476,477,478,177,178,479,179,180,310,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,481,482,208,483,209,302,210,484,485,486,487,488,211,303,489,490,491,212,213,492,214,493,494,495,215,216,496,217,497],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:46","sourceCode":"java.lang.reflect.Field.getType()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"targetField":"targetField"}},{"position":"org.easymock.internal.ReflectionUtils:198","failures":[76,501,502,503,11,504,364,366,126,379],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.RecordState:233","failures":[69,218,70,71,219,72,220,312,313,73,314,74,29,315,315,316,316,30,317,221,75,222,318,223,76,77,224,78,79,36,225,80,55,56,333,226,81,227,82,83,228,84,85,86,229,87,8,88,89,304,230,231,90,91,13,14,15,16,17,18,19,20,59,21,23,24,25,26,92,93,60,61,94,62,95,63,64,7,335,96,97,98,99,100,101,9,102,103,104,105,106,57,107,58,108,109,110,111,112,113,305,114,115,116,306,48,232,233,234,235,371,372,373,374,117,118,119,120,121,122,123,124,377,378,236,125,237,126,238,127,128,129,130,131,132,133,134,135,136,137,138,307,139,140,141,142,381,143,144,145,146,10,147,148,308,149,309,239,240,241,242,392,393,394,150,65,66,67,151,152,243,153,154,155,156,157,158,399,400,401,159,160,161,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,406,282,283,284,285,68,407,408,409,162,286,163,429,287,288,164,289,165,166,290,430,442,167,168,292,169,170,293,294,171,452,295,296,297,298,299,300,301,172,173,174,475,479,180,310,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,302,210,211,303,212,213,214,215,216,217],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:53","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"position":"org.easymock.internal.RecordState:243","failures":[69,70,71,72,73,74,75,78,79,81,82,83,110,111,112,113,305,114,115,116,306,117,118,119,120,121,122,123,126,130,143,144,145,146,10,147,148,308,149,309,150,160,161,245,246,247,248,162,163,164,165,166,442,172,180,310,181,182,183,184,185,186,187,188,191,192,194,195,196,198,199,200,201,202,203,204,205,206,207,208,212,213,214,215,216,217],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:25","sourceCode":"try {\n    java.lang.Class.java.lang.Class.forName(\"dalvik.system.PathClassLoader\");\n    org.easymock.internal.AndroidSupport.boolean = true;\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    org.easymock.internal.AndroidSupport.boolean = false;\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:93","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.LinkedList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:77","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()","type":"CtLocalVariableImpl"},"failures":[69,218,70,71,219,72,220,312,313,314,74,29,30,317,221,75,222,318,223,76,77,78,79,36,225,80,55,56,329,333,226,81,227,82,83,228,84,85,86,229,87,8,88,89,304,230,231,90,91,13,14,15,16,17,18,19,20,59,21,23,24,25,26,92,93,60,61,94,62,95,63,64,7,335,96,97,98,99,100,101,9,102,103,104,105,106,57,107,58,108,109,110,114,115,116,48,124,377,378,236,125,238,127,128,129,130,131,132,133,134,135,136,137,138,307,139,140,141,142,381,144,10,148,386,308,149,309,239,389,240,241,390,242,392,393,394,150,65,66,67,151,395,152,243,153,154,155,156,157,158,399,400,401,402,244,160,161,245,246,247,248,249,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,406,282,283,284,285,68,412,286,429,287,288,164,289,165,166,290,430,442,167,168,292,169,170,293,294,171,301,456,172,173,174,475,479,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,209,302,210,211,303,212,215,216,217],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:176","failures":[505,501,502,503,506,507,504,126],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[508],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1107","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":61,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":167,"org.easymock.tests2.UsageTest.argumentsOrdered":231,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":141,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":49,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":470,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":8,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":30,"org.easymock.tests2.DelegateToTest.testReturnException":221,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":252,"org.easymock.tests.MockingTest.testPartialClassMocking":212,"org.easymock.tests.MockClassControlTest.testToString":414,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":370,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":217,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":478,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":344,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":111,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":257,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":79,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":501,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":7,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":150,"org.easymock.tests2.UsageTest.wrongArguments":229,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":42,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":397,"org.easymock.samples.ExampleTest.answerVsDelegate":218,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":448,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":494,"org.easymock.tests2.UsageConstraintsTest.testNull":62,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":146,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":419,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":140,"org.easymock.tests2.CaptureTest.testPrimitive":16,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":151,"org.easymock.tests.UsageTest.moreThanOneArgument":168,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":276,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":145,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":247,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":407,"org.easymock.tests.UsageTest.argumentsOrdered":294,"org.easymock.tests.UsageVarargTest.varargIntAccepted":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":474,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":203,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":507,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":358,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":53,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":323,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":363,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":463,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":207,"org.easymock.tests.ReplayStateInvalidUsageTest.times":438,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":36,"org.easymock.tests2.DependencyTest.testClassMocking":319,"org.easymock.tests2.AnswerTest.answer":124,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":335,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":476,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":332,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":445,"org.easymock.tests2.CaptureTest.testAnd":13,"org.easymock.tests2.UsageTest.strictResetToDefault":85,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":386,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":361,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":246,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":181,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":136,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":411,"org.easymock.tests2.DelegateToTest.testDelegate":223,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":272,"org.easymock.tests.LimitationsTest.mockFinalMethod":483,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":255,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":488,"org.easymock.tests2.DependencyTest.testClassMockingSupport":320,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":402,"org.easymock.tests2.CaptureTest.testCapture1_2446744":17,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":383,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":270,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":330,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":433,"org.easymock.tests.UsageThrowableTest.throwError":152,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":447,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":480,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":54,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":249,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":356,"org.easymock.samples.PartialClassMockTest.testGetArea":73,"org.easymock.tests.MockingTest.testInterfaceMocking":492,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":434,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":204,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":160,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":460,"org.easymock.tests2.UsageTest.niceToStrict":87,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":461,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":0,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":114,"org.easymock.tests2.MockBuilderTest.testCreateMock":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":352,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":39,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":266,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":137,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":444,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":401,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":452,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":395,"org.easymock.tests.UsageOverloadedMethodTest.overloading":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":349,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":354,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":100,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":241,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":172,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":194,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":99,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":4,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":21,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":405,"org.easymock.tests.MockClassControlTest.testEquals":418,"org.easymock.tests2.EasyMockSupportClassTest.testAll":110,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":286,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":274,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":486,"org.easymock.tests2.CaptureTest.testCaptureAll":14,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":331,"org.easymock.tests.MockNameTest.defaultName":404,"org.easymock.tests2.UsageConstraintsTest.testMatches":101,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":431,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":248,"org.easymock.samples.ExampleTest.voteForRemovals":72,"org.easymock.tests.UsageVarargTest.allKinds":68,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":209,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":487,"org.easymock.samples.BasicClassMockTest.testPrintContent":313,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":157,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":333,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":50,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":256,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":318,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":504,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":425,"org.easymock.tests2.UsageConstraintsTest.greaterThan":102,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":339,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":310,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":309,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":426,"org.easymock.samples.ExampleTest.voteForRemoval":70,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":387,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":128,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":449,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":324,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":382,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":84,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":250,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":366,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":468,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":134,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":337,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":251,"org.easymock.tests2.CaptureTest.testCaptureFirst":26,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":317,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":467,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":135,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":91,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":391,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":190,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":130,"org.easymock.tests2.CaptureTest.testCapture2_2446744":25,"org.easymock.tests2.UsageTest.moreThanOneArgument":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":477,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":306,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":285,"org.easymock.tests.GenericTest.testBridgedEquals":428,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":508,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":299,"org.easymock.tests.UsageExpectAndReturnTest.longType":186,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":484,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":132,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":275,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":442,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":57,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":273,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":393,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":245,"org.easymock.tests.UsageCallCountTest.tooManyCalls":300,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":353,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":191,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":41,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":262,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":156,"org.easymock.tests.MockingTest.testNiceClassMocking":495,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":118,"org.easymock.tests.MockingTest.testClassMocking":490,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":453,"org.easymock.tests2.UsageConstraintsTest.testContains":98,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":234,"org.easymock.tests2.UsageConstraintsTest.testFind":94,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":174,"org.easymock.tests.MockTypeTest.fromEasyMockClass":446,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":429,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":56,"org.easymock.tests.UsageExpectAndReturnTest.object":193,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":148,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":40,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":139,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":502,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":281,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":458,"org.easymock.tests.UsageTest.exactCallCountByLastCall":171,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":211,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":466,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":496,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":408,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":379,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":199,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":277,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":240,"org.easymock.tests.MockClassControlTest.testHashCode":417,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":44,"org.easymock.tests2.EasyMockSupportTest.testVerify":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":347,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":409,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":400,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":239,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":329,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":357,"org.easymock.tests.UsageVarargTest.varargCharAccepted":280,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":420,"org.easymock.tests2.CaptureTest.testCaptureMultiple":12,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":226,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":179,"org.easymock.tests2.UsageTest.openCallCountByLastCall":88,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":142,"org.easymock.tests.DefaultClassInstantiatorTest.object":6,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":1,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":399,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":456,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":348,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":154,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":34,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":43,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":416,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":308,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":263,"org.easymock.tests.CapturesMatcherTest.test":27,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":200,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":392,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":415,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":113,"org.easymock.tests2.UsageTest.resumeIfFailure":90,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":443,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":322,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":254,"org.easymock.tests2.StubTest.stubWithReturnValue":80,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":364,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":107,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":192,"org.easymock.tests2.SerializationTest.testAllMockedMethod":224,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":475,"org.easymock.samples.SupportTest.voteForRemovals":74,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":427,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":46,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":269,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":479,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":377,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":497,"org.easymock.tests.UsageExpectAndThrowTest.object":267,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":105,"org.easymock.tests2.DelegateToTest.testWrongClass":222,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":215,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":216,"org.easymock.tests.UsageStrictMockTest.range":165,"org.easymock.samples.ConstructorCalledMockTest.testTax":315,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":326,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":307,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":117,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":268,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":115,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":440,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":336,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":396,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":161,"org.easymock.tests2.CaptureTest.testCaptureNone":59,"org.easymock.tests.UsageUnorderedTest.message":301,"org.easymock.tests.UsageVerifyTest.twoReturns":210,"org.easymock.tests.UsageVarargTest.varargByteAccepted":284,"org.easymock.tests2.ThreadingTest.testThreadSafe":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":350,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":298,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":459,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":312,"org.easymock.tests2.CaptureTest.testCapture_2617107":15,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":403,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":177,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":67,"org.easymock.tests2.UsageConstraintsTest.any":96,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":437,"org.easymock.tests2.StubTest.stub":225,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":394,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":178,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":253,"org.easymock.tests.UsageExpectAndThrowTest.longType":260,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":3,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":436,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":227,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":48,"org.easymock.tests2.SerializationTest.testClass":76,"org.easymock.tests.LimitationsTest.mockNativeMethod":208,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":163,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":202,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":33,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":228,"org.easymock.tests2.NameTest.nameForMocksControl":374,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":35,"org.easymock.tests2.MockedExceptionTest.testMockedException":233,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":340,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":170,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":214,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":261,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":328,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":143,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":116,"org.easymock.tests.MockingTest.testNicePartialClassMocking":213,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":147,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":505,"org.easymock.tests2.CompareToTest.testCompareEqual":498,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":31,"org.easymock.tests2.CaptureTest.testCaptureLast":20,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":244,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":123,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":64,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":106,"org.easymock.tests.MockingTest.testTwoMocks":491,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":376,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":183,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":265,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":230,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":108,"org.easymock.samples.ExampleTest.removeNonExistingDocument":311,"org.easymock.tests.UsageStrictMockTest.differentMethods":166,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":38,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":291,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":45,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":422,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":129,"org.easymock.tests2.MockBuilderTest.testCreateMockString":369,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":412,"org.easymock.tests.UsageExpectAndThrowTest.floatType":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":341,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":338,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":236,"org.easymock.tests.UsageVerifyTest.twoThrows":302,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":380,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":389,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":112,"org.easymock.samples.ExampleTest.voteAgainstRemoval":71,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":176,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":159,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":149,"org.easymock.tests.LimitationsTest.privateConstructor":482,"org.easymock.tests2.UsageConstraintsTest.testNotNull":58,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":158,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":232,"org.easymock.tests2.UsageTest.defaultResetToNice":304,"org.easymock.samples.ExampleTest.voteAgainstRemovals":69,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":471,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":198,"org.easymock.tests.UsageVarargTest.differentLength":406,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":32,"org.easymock.tests2.CallbackTest.callback":238,"org.easymock.tests2.UsageConstraintsTest.equals":334,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":384,"org.easymock.tests.UsageTest.openCallCountByLastCall":169,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":92,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":66,"org.easymock.tests.UsageCallCountTest.tooFewCalls":296,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":120,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":398,"org.easymock.tests.UsageThrowableTest.throwCheckedException":155,"org.easymock.tests.MockingTest.testStrictClassMocking":489,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":122,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":303,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":119,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":37,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":439,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":121,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":237,"org.easymock.tests.ObjectMethodsTest.testHashCode":457,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":506,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":131,"org.easymock.tests2.NameTest.nameForNiceMock":373,"org.easymock.tests2.DependencyTest.testInterfaceMocking":78,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":503,"org.easymock.samples.ExampleTest.addDocument":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":351,"org.easymock.tests2.DelegateToTest.testStubDelegate":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":355,"org.easymock.tests2.AnswerTest.stubAnswer":125,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":164,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":365,"org.easymock.tests.UsageVarargTest.varargLongAccepted":283,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":290,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":175,"org.easymock.tests.UsageExpectAndReturnTest.floatType":185,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":201,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":126,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":316,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":390,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":103,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":52,"org.easymock.tests.UsageThrowableTest.noUpperLimit":243,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":93,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":321,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":18,"org.easymock.tests2.SerializationTest.test":77,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":5,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":421,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":184,"org.easymock.tests2.UsageConstraintsTest.testSame":95,"org.easymock.samples.SupportTest.addDocument":314,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":375,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":435,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":342,"org.easymock.tests.GenericTest.testPackageScope":162,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":465,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":51,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":493,"org.easymock.tests2.NameTest.nameForMock":371,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":195,"org.easymock.tests2.UsageStrictMockTest.differentMethods":83,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":368,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":385,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":187,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":271,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":455,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":182,"org.easymock.tests2.MockedExceptionTest.testRealException":235,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":450,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":473,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":327,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":472,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":81,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":441,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":65,"org.easymock.tests2.NameTest.nameForStrictMock":372,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":362,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":2,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":55,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":10,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":325,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":423,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":104,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":305,"org.easymock.tests2.UsageStrictMockTest.range":82,"org.easymock.tests2.UsageConstraintsTest.lessThan":109,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":47,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":469,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":133,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":11,"org.easymock.tests2.CaptureTest.testCaptureRightOne":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":346,"org.easymock.tests2.UsageConstraintsTest.testOr":63,"org.easymock.tests.UsageRangeTest.combination":180,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":144,"org.easymock.tests.UsageTest.wrongArguments":292,"org.easymock.tests2.MockBuilderTest.testWithConstructor":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":343,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":413,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":188,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":462,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":196,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":424,"org.easymock.tests.UsageVarargTest.varargShortAccepted":282,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":454,"org.easymock.tests2.UsageConstraintsTest.cmpTo":97,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":378,"org.easymock.tests2.CompareToTest.testLessThan":499,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":464,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":89,"org.easymock.tests2.CaptureTest.testCaptureFromStub":24,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":432,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":360,"org.easymock.tests.UsageTest.unexpectedCallWithArray":451,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":288,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":297,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":28,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":197,"org.easymock.tests2.CaptureTest.testCapture":22,"org.easymock.tests2.UsageConstraintsTest.constraints":60,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":289,"org.easymock.samples.ExampleTest.addAndChangeDocument":220,"org.easymock.tests.UsageStrictMockTest.testVerify":430,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":29,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":287,"org.easymock.tests2.CompareToTest.testGreateThan":500,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":485,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":19,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":205,"org.easymock.tests.LimitationsTest.abstractClass":481,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":189,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":206,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":242,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":138,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":278}}]
