[{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[0],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:188","sourceCode":"try {\n    net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, new net.sf.cglib.proxy.Callback[]{ org.easymock.internal.ClassProxyFactory.MockMethodInterceptor });\n    if (org.easymock.ConstructorArgs != null) {\n        java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?>;\n        try {\n            java.lang.reflect.Constructor<?> = java.lang.Class<?>.getDeclaredConstructor(org.easymock.ConstructorArgs.getConstructor().getParameterTypes());\n        } catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n            throw new java.lang.RuntimeException(\"Fail to find constructor for param types\" , java.lang.NoSuchMethodException);\n        }\n        T T;\n        try {\n            java.lang.reflect.Constructor<?>.setAccessible(true);\n            T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())));\n        } catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n            throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException);\n        } catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n            throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException);\n        } catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n            throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException());\n        }\n        return T;\n    } else {\n        net.sf.cglib.proxy.Factory net.sf.cglib.proxy.Factory;\n        try {\n            net.sf.cglib.proxy.Factory = ((net.sf.cglib.proxy.Factory)(org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getInstantiator().newInstance(java.lang.Class<?>)));\n        } catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n            throw new java.lang.RuntimeException(((((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM())) + \" JVM\"));\n        }\n        net.sf.cglib.proxy.Factory.getCallback(0);\n        return ((T)(net.sf.cglib.proxy.Factory));\n    }\n} finally {\n    net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, null);\n}","type":"CtTryImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,74,75,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:32","sourceCode":"new java.util.ArrayList<java.lang.reflect.Field>(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:221","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[44,45,46,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:194","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:363","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1038","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[154,155,156,157],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:41","sourceCode":"org.easymock.IArgumentMatcher.appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[158],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","shouldBeUsedInOneThread":"threadSafe"}},{"transplant":{"position":"org.easymock.EasyMock:665","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:91","sourceCode":"java.lang.StringBuilder.append(\", \")","type":"CtInvocationImpl"},"failures":[159,160,161,162],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.Capture:82","failures":[163,164,165,166,167,168,169,170,171,172,173,174],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[163,164,165,166,167,168,169,170,171,172,173,174],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:77","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:197","sourceCode":"org.easymock.internal.MocksControl.reset()","type":"CtInvocationImpl"},"failures":[175,176],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:43","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"failures":[177,178,179],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:48","sourceCode":"if (org.easymock.internal.MocksControl != null) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\n} else {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\n}","type":"CtIfImpl"},"failures":[180,181,182,183,184,185,186,187,188,1,189,190,191,192,193,194,195,6,9,19,25,196,197,198,199,200,201,159,202,203,204,205,206,207,208,209,210,211,154,212,213,214,215,216,217,155,218,219,220,156,30,34,36,38,41,163,221,165,166,169,222,170,172,173,223,174,224,225,226,227,228,229,230,231,175,232,233,234,235,44,45,46,114,236,237,238,239,240,241,115,242,243,0,244,116,176,245,246,49,52,53,54,55,247,56,57,248,117,58,59,249,60,61,62,64,68,69,70,250,251,73,74,74,75,75,252,253,254,255,256,257,258,259,260,261,262,263,118,119,120,121,122,123,264,265,124,266,267,268,269,270,78,271,272,273,274,275,276,277,278,279,280,281,90,282,283,125,284,285,286,287,288,289,290,126,127,291,161,292,293,294,295,296,297,298,95,97,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,320,321,149,322,323,324,325,326,327,328,329,330,331,332,150,333,334,335,151,152,336,153,102,103,104,337],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[1,189,2],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"actual":"expected"}},{"transplant":{"position":"org.easymock.EasyMock:1916","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[70,104],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:91","sourceCode":"java.lang.StringBuilder.append(\", \")","type":"CtInvocationImpl"},"failures":[160],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[338,126],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[206],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[201,164,172],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"candidateMethod"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"method"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[237,239,241,254,283],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[104],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[180,186,115,244,116,246,268,161,293,148,321,149,322],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:130","failures":[97],"status":-1,"binaryOperator":"(((!(java.lang.reflect.Method.isBridge())) && (!(java.lang.reflect.Method.equals(java.lang.reflect.Method)))) && (java.lang.reflect.Method.getName().equals(java.lang.reflect.Method.getName())))","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[267],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"failures":[181,182],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:138","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[37,339,49,50],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:265","sourceCode":"if (org.easymock.internal.RecordState.isValidThrowable(java.lang.Throwable)) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[44,45,46,114,115,116,117,118,119,120,121,122,123,124,125,292,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,331,150,333,334,335,151,152,153],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[340,187,188,198,41,226,230,231,233,0,341,269,270,272],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":159,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":148,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":234,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":121,"org.easymock.tests2.StubTest.stubWithReturnValue":117,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":37,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":308,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":218,"org.easymock.tests2.SerializationTest.testAllMockedMethod":2,"org.easymock.tests2.DelegateToTest.testReturnException":237,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":266,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":119,"org.easymock.tests.MockingTest.testPartialClassMocking":102,"org.easymock.samples.SupportTest.voteForRemovals":252,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":94,"org.easymock.tests.MockClassControlTest.testToString":108,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":285,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":72,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":140,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":13,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":267,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":9,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":128,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":181,"org.easymock.tests.UsageExpectAndThrowTest.object":138,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":251,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":217,"org.easymock.tests2.DelegateToTest.testWrongClass":239,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":329,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":330,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":207,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":289,"org.easymock.tests.UsageStrictMockTest.range":269,"org.easymock.samples.ConstructorCalledMockTest.testTax":74,"org.easymock.samples.ExampleTest.answerVsDelegate":254,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":175,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":93,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":52,"org.easymock.tests2.UsageConstraintsTest.testNull":203,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":60,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":139,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":233,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":36,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":113,"org.easymock.tests2.CaptureTest.testPrimitive":165,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":291,"org.easymock.tests.UsageTest.moreThanOneArgument":320,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":3,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":147,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":249,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":296,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":288,"org.easymock.tests2.CaptureTest.testCaptureNone":222,"org.easymock.tests.UsageUnorderedTest.message":319,"org.easymock.tests.UsageVerifyTest.twoReturns":293,"org.easymock.tests2.ThreadingTest.testThreadSafe":191,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":20,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":76,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":259,"org.easymock.tests2.CaptureTest.testCapture_2617107":164,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":28,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":127,"org.easymock.tests2.UsageConstraintsTest.any":208,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":35,"org.easymock.tests2.StubTest.stub":248,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":281,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":263,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":120,"org.easymock.tests.UsageExpectAndThrowTest.longType":131,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":84,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":178,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":224,"org.easymock.tests2.SerializationTest.testClass":1,"org.easymock.tests.LimitationsTest.mockNativeMethod":90,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":190,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":318,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":97,"org.easymock.tests2.AnswerTest.answer":180,"org.easymock.tests2.CaptureTest.testAnd":163,"org.easymock.tests2.UsageTest.strictResetToDefault":242,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":67,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":32,"org.easymock.tests2.MockedExceptionTest.testMockedException":45,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":295,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":274,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":8,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":149,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":327,"org.easymock.tests2.DelegateToTest.testDelegate":241,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":104,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":132,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":58,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":38,"org.easymock.tests.MockingTest.testNicePartialClassMocking":103,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":143,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":62,"org.easymock.tests.LimitationsTest.mockFinalMethod":91,"org.easymock.tests2.CaptureTest.testCaptureLast":169,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":122,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":328,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":206,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":57,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":155,"org.easymock.tests.MockingTest.testTwoMocks":101,"org.easymock.tests2.CaptureTest.testCapture1_2446744":166,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":299,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":141,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":136,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":220,"org.easymock.tests.UsageThrowableTest.throwError":331,"org.easymock.tests.UsageStrictMockTest.differentMethods":270,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":82,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":193,"org.easymock.tests2.MockBuilderTest.testCreateMockString":43,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":106,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":10,"org.easymock.tests.UsageExpectAndThrowTest.floatType":130,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":5,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":183,"org.easymock.tests.UsageVerifyTest.twoThrows":292,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":51,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":19,"org.easymock.samples.PartialClassMockTest.testGetArea":73,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":260,"org.easymock.samples.ExampleTest.voteAgainstRemoval":256,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":287,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":286,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":14,"org.easymock.tests2.UsageTest.niceToStrict":0,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":129,"org.easymock.tests.LimitationsTest.privateConstructor":89,"org.easymock.tests2.UsageConstraintsTest.testNotNull":219,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":44,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":152,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":34,"org.easymock.tests2.MockBuilderTest.testCreateMock":40,"org.easymock.tests2.UsageTest.defaultResetToNice":176,"org.easymock.samples.ExampleTest.voteAgainstRemovals":253,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":314,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":22,"org.easymock.tests2.CallbackTest.callback":198,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":65,"org.easymock.tests.UsageTest.openCallCountByLastCall":321,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":137,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":230,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":199,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":278,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":126,"org.easymock.tests.UsageOverloadedMethodTest.overloading":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":18,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":24,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":125,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":154,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":310,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":264,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":55,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":211,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":170,"org.easymock.tests.UsageThrowableTest.throwCheckedException":334,"org.easymock.tests2.EasyMockSupportClassTest.testAll":6,"org.easymock.tests.MockClassControlTest.testEquals":112,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":96,"org.easymock.tests.MockingTest.testStrictClassMocking":99,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":145,"org.easymock.tests2.CaptureTest.testCaptureAll":221,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":56,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":153,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":54,"org.easymock.tests2.UsageConstraintsTest.testMatches":212,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":247,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":185,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":297,"org.easymock.samples.ExampleTest.voteForRemovals":257,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":195,"org.easymock.tests2.DependencyTest.testInterfaceMocking":250,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":161,"org.easymock.samples.BasicClassMockTest.testPrintContent":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":21,"org.easymock.tests2.DelegateToTest.testStubDelegate":238,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":26,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":151,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":340,"org.easymock.tests2.AnswerTest.stubAnswer":184,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":240,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":123,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":268,"org.easymock.tests2.UsageConstraintsTest.greaterThan":214,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":86,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":7,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":273,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":70,"org.easymock.samples.ExampleTest.voteForRemoval":255,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":87,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":192,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":71,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":317,"org.easymock.tests.UsageExpectAndReturnTest.floatType":301,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":63,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":49,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":75,"org.easymock.tests.UsageThrowableTest.noUpperLimit":332,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":215,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":200,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":78,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":115,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":47,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":167,"org.easymock.tests2.SerializationTest.test":189,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":39,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":338,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":227,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":81,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":150,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":300,"org.easymock.tests2.UsageConstraintsTest.testSame":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":4,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":118,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":236,"org.easymock.tests2.CaptureTest.testCaptureFirst":174,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":228,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":246,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":11,"org.easymock.tests.GenericTest.testPackageScope":95,"org.easymock.tests2.UsageTest.moreThanOneArgument":243,"org.easymock.tests2.CaptureTest.testCapture2_2446744":223,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":194,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":326,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":41,"org.easymock.tests.GenericTest.testBridgedEquals":98,"org.easymock.tests.UsageExpectAndReturnTest.longType":302,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":225,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":311,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":146,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":271,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":42,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":144,"org.easymock.tests2.UsageStrictMockTest.differentMethods":188,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":294,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":280,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":66,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":303,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":142,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":179,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":275,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":23,"org.easymock.tests2.MockedExceptionTest.testRealException":114,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":307,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":339,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":133,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":186,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":335,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":290,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":53,"org.easymock.tests.MockingTest.testNiceClassMocking":105,"org.easymock.tests.MockingTest.testClassMocking":100,"org.easymock.tests2.UsageConstraintsTest.testContains":210,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":46,"org.easymock.tests2.UsageConstraintsTest.testFind":202,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":124,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":33,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":196,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":61,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":341,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":197,"org.easymock.tests.UsageExpectAndReturnTest.object":309,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":48,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":216,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":83,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":64,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":30,"org.easymock.tests2.UsageStrictMockTest.range":187,"org.easymock.tests2.UsageConstraintsTest.lessThan":156,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":232,"org.easymock.tests.UsageTest.exactCallCountByLastCall":322,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":336,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":15,"org.easymock.tests2.CaptureTest.testCaptureRightOne":172,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":324,"org.easymock.tests2.UsageConstraintsTest.testOr":205,"org.easymock.tests.UsageRangeTest.combination":272,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":50,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":315,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":59,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":283,"org.easymock.tests2.MockBuilderTest.testWithConstructor":29,"org.easymock.tests.MockClassControlTest.testHashCode":111,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":12,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":107,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":304,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":312,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":16,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":177,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":325,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":282,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":277,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":85,"org.easymock.tests.UsageVarargTest.varargShortAccepted":162,"org.easymock.tests2.UsageConstraintsTest.cmpTo":209,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":157,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":79,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":182,"org.easymock.tests2.UsageTest.openCallCountByLastCall":244,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":116,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":235,"org.easymock.tests.DefaultClassInstantiatorTest.object":80,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":276,"org.easymock.tests2.CaptureTest.testCaptureFromStub":173,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":31,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":17,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":135,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":333,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":313,"org.easymock.tests2.CaptureTest.testCapture":171,"org.easymock.tests2.UsageConstraintsTest.constraints":201,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":68,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":110,"org.easymock.samples.ExampleTest.addAndChangeDocument":258,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":134,"org.easymock.tests2.ConstraintsToStringTest.notToString":158,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":316,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":279,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":25,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":109,"org.easymock.tests2.UsageTest.resumeIfFailure":245,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":168,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":261,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":305,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":92,"org.easymock.tests.LimitationsTest.abstractClass":88,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":284,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":262,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":231}}]
