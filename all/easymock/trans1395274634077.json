[{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,1,2,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:234","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)))","type":"CtThrowImpl"},"failures":[4,5,6,7,8,9,3,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:77","failures":[25,26],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MocksControl:105","failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,42,43,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,0,112,113,1,2,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,4,5,6,7,8,9,3,10,11,12,13,14,15,16,17,18,329,19,20,21,22,23,330,24,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473],"status":-1,"binaryOperator":"(java.lang.Class<T>.isInterface()) && (java.lang.reflect.Method[] != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[86],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"expected","this":"this"}},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"(((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"failures":[68,272,275,276,277,278,279,314,409,414,421,422,423,442,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:233","failures":[27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,42,43,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,104,105,106,107,108,109,110,111,0,112,113,1,2,119,129,132,142,148,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,170,173,177,178,179,182,183,184,185,186,187,188,189,190,191,192,193,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,212,213,214,215,216,226,233,234,235,236,238,241,243,244,247,249,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,296,298,299,300,302,303,304,305,306,307,308,309,310,311,312,313,314,315,324,325,326,327,328,4,5,6,7,8,9,3,10,11,12,13,14,15,16,17,18,329,19,20,21,22,23,330,24,331,332,334,335,336,337,338,339,348,349,351,355,356,357,358,363,364,365,366,367,368,369,370,372,374,375,376,377,378,379,380,381,382,383,384,386,387,388,390,391,392,393,395,396,399,401,402,403,404,406,407,408,409,410,411,413,414,416,418,419,420,421,422,423,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[74],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[154,160,161,191,280,474,333,334,337,338,378,381,409,410,417],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:323","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[176],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","name":"name","this":"this"}},{"position":"org.easymock.ConstructorArgs:60","failures":[70,106,110,475,476,25,477,478,479,480,481],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[482],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:70","failures":[191,192,381,382],"status":-1,"binaryOperator":"(\"between \" + (int))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[288,292],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:643","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[385],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:83","failures":[45,46,48,49,50,51,52,57,63,68,77,83,89,97,111,1,151,153,154,157,158,160,161,163,189,190,191,192,212,213,214,215,216,274,280,309,314,331,332,334,335,336,337,338,339,378,379,380,381,382,393,408,409,410,440,443],"status":-1,"binaryOperator":"(int) == (java.lang.Integer.int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:68","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[73,89,151,154,155,156,160,161,163,166,177,179,187,190,191,199,203,204,207,216,280,483,474,304,331,333,334,337,338,339,376,378,380,381,409,410,417],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:193","sourceCode":"java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[330],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1495","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[99,484],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[287,288,292],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:623","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[58,59,60,485],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MocksControl:136","failures":[27,39,40,42,42,43,43,58,60,69,70,100,486,487,101,104,105,106,107,109,110,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,165,166,168,169,170,171,173,174,175,176,177,178,179,180,181,194,195,233,234,235,237,238,239,240,241,242,243,244,245,246,247,248,281,284,287,288,289,290,291,292,293,294,295,296,297,316,317,318,319,320,321,322,323,345,346,347,348,349,351,354,385,386,387,388,389,390],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[153,189,192,193,212,213,214,215,332,379,382,383,399,401,402,408,409,410],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[74],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:83","failures":[154,160,161,191,280,474,333,334,337,338,378,381,409,410,417],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:69","sourceCode":"return java.lang.StringBuffer.toString()","type":"CtReturnImpl"},"failures":[154,160,161,191,280,483,474,333,334,337,338,378,381,409,410],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[488,489,490,491,492,493,494,26],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"argType":"paramType","paramType":"paramType"}},{"position":"org.easymock.EasyMock:773","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:217","failures":[111,151,163,189,274,339,379,409,410],"status":-1,"binaryOperator":"((org.easymock.internal.Result) == null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"failures":[72,73],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","failures":[44,46,54,73,74,77,79,80,82,92,97],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[276,277,409],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:312","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[0,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[58,59,60,485],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"bridgeMethod"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":74,"org.easymock.tests2.UsageTest.argumentsOrdered":161,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":331,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":208,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":227,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":13,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":156,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":28,"org.easymock.tests2.DelegateToTest.testReturnException":62,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":311,"org.easymock.tests.MockingTest.testPartialClassMocking":348,"org.easymock.tests.MockClassControlTest.testToString":318,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":211,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":372,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":181,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":136,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":444,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":132,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":197,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":81,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":439,"org.easymock.tests2.UsageTest.wrongArguments":154,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":125,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":361,"org.easymock.samples.ExampleTest.answerVsDelegate":30,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":284,"org.easymock.tests2.UsageConstraintsTest.testNull":77,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":353,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":168,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":207,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":323,"org.easymock.tests2.CaptureTest.testPrimitive":47,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":443,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":463,"org.easymock.tests.UsageTest.moreThanOneArgument":332,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":167,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":326,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":394,"org.easymock.tests.UsageTest.argumentsOrdered":338,"org.easymock.tests.UsageVarargTest.varargIntAccepted":300,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":18,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":363,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":237,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":487,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":231,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":242,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":6,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":367,"org.easymock.tests.ReplayStateInvalidUsageTest.times":435,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":119,"org.easymock.tests2.DependencyTest.testClassMocking":194,"org.easymock.tests2.AnswerTest.answer":111,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":82,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":19,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":220,"org.easymock.tests2.CaptureTest.testAnd":44,"org.easymock.tests2.UsageTest.strictResetToDefault":152,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":478,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":176,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":325,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":202,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":357,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":398,"org.easymock.tests2.DelegateToTest.testDelegate":66,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":459,"org.easymock.tests.LimitationsTest.mockFinalMethod":297,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":314,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":344,"org.easymock.tests2.DependencyTest.testClassMockingSupport":195,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":424,"org.easymock.tests2.CaptureTest.testCapture1_2446744":48,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":172,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":457,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":218,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":429,"org.easymock.tests.UsageThrowableTest.throwError":272,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":283,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":232,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":328,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":476,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":150,"org.easymock.samples.PartialClassMockTest.testGetArea":27,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":430,"org.easymock.tests.MockingTest.testInterfaceMocking":350,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":364,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":419,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":472,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":445,"org.easymock.tests2.UsageTest.niceToStrict":155,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":137,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":26,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":4,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":241,"org.easymock.tests2.MockBuilderTest.testCreateMock":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":145,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":122,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":453,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":203,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":423,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":399,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":359,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":492,"org.easymock.tests.UsageOverloadedMethodTest.overloading":392,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":147,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":141,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":414,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":87,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":391,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":263,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":86,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":53,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":301,"org.easymock.tests2.EasyMockSupportClassTest.testAll":129,"org.easymock.tests.MockClassControlTest.testEquals":322,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":387,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":461,"org.easymock.tests2.CaptureTest.testCaptureAll":45,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":219,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":342,"org.easymock.tests.MockNameTest.defaultName":473,"org.easymock.tests2.UsageConstraintsTest.testMatches":88,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":427,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":327,"org.easymock.samples.ExampleTest.voteForRemovals":34,"org.easymock.tests.UsageVarargTest.allKinds":309,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":408,"org.easymock.samples.BasicClassMockTest.testPrintContent":40,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":343,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":278,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":187,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":65,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":228,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":315,"org.easymock.tests2.UsageConstraintsTest.greaterThan":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":130,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":356,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":179,"org.easymock.samples.ExampleTest.voteForRemoval":31,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":293,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":183,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":180,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":285,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":171,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":390,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":151,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":245,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":10,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":200,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":127,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":310,"org.easymock.tests2.CaptureTest.testCaptureFirst":57,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":61,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":3,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":201,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":163,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":417,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":259,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":185,"org.easymock.tests2.UsageTest.moreThanOneArgument":153,"org.easymock.tests2.CaptureTest.testCapture2_2446744":56,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":20,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":247,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":308,"org.easymock.tests.GenericTest.testBridgedEquals":389,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":493,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":490,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":406,"org.easymock.tests.UsageExpectAndReturnTest.longType":255,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":198,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":340,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":462,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":466,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":95,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":460,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":324,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":369,"org.easymock.tests.UsageCallCountTest.tooManyCalls":407,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":146,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":260,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":124,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":449,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":277,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":105,"org.easymock.tests.MockingTest.testNiceClassMocking":354,"org.easymock.tests.MockingTest.testClassMocking":346,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":400,"org.easymock.tests2.UsageConstraintsTest.testContains":85,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":235,"org.easymock.tests2.UsageConstraintsTest.testFind":76,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":393,"org.easymock.tests.MockTypeTest.fromEasyMockClass":282,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":251,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":376,"org.easymock.tests.UsageExpectAndReturnTest.object":262,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":173,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":123,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":206,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":303,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":470,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":494,"org.easymock.tests.UsageTest.exactCallCountByLastCall":339,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":374,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":9,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":395,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":371,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":70,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":268,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":298,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":413,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":222,"org.easymock.tests.MockClassControlTest.testHashCode":321,"org.easymock.tests2.EasyMockSupportTest.testVerify":210,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":139,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":396,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":422,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":411,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":217,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":164,"org.easymock.tests.UsageVarargTest.varargCharAccepted":302,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":188,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":24,"org.easymock.tests2.UsageTest.openCallCountByLastCall":157,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":488,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":209,"org.easymock.tests.DefaultClassInstantiatorTest.object":287,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":421,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":468,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":474,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":451,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":140,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":275,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":117,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":221,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":177,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":320,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":450,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":269,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":148,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":319,"org.easymock.tests2.UsageTest.resumeIfFailure":162,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":281,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":486,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":313,"org.easymock.tests2.StubTest.stubWithReturnValue":68,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":479,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":96,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":261,"org.easymock.tests2.SerializationTest.testAllMockedMethod":60,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":329,"org.easymock.samples.SupportTest.voteForRemovals":38,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":385,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":224,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":456,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":485,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":330,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":0,"org.easymock.tests.UsageExpectAndThrowTest.object":454,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":373,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":93,"org.easymock.tests2.DelegateToTest.testWrongClass":64,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":464,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":465,"org.easymock.samples.ConstructorCalledMockTest.testTax":42,"org.easymock.tests.UsageStrictMockTest.range":381,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":102,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":205,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":104,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":491,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":455,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":243,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":437,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":126,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":337,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":360,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":420,"org.easymock.tests2.CaptureTest.testCaptureNone":52,"org.easymock.tests.UsageUnorderedTest.message":280,"org.easymock.tests.UsageVerifyTest.twoReturns":410,"org.easymock.tests.UsageVarargTest.varargByteAccepted":307,"org.easymock.tests2.ThreadingTest.testThreadSafe":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":143,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":404,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":471,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":39,"org.easymock.tests2.CaptureTest.testCapture_2617107":46,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":426,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":442,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":22,"org.easymock.tests2.UsageConstraintsTest.any":83,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":434,"org.easymock.tests2.StubTest.stub":67,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":370,"org.easymock.tests.UsageExpectAndThrowTest.longType":447,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":23,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":312,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":291,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":433,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":190,"org.easymock.tests2.SerializationTest.testClass":58,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":226,"org.easymock.tests.LimitationsTest.mockNativeMethod":296,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":388,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":271,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":116,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":193,"org.easymock.tests2.NameTest.nameForMocksControl":215,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":118,"org.easymock.tests2.MockedExceptionTest.testMockedException":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":131,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":336,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":448,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":250,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":351,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":165,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":244,"org.easymock.tests.MockingTest.testNicePartialClassMocking":349,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":170,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":114,"org.easymock.tests2.CaptureTest.testCaptureLast":51,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":425,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":110,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":80,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":94,"org.easymock.tests.MockingTest.testTwoMocks":347,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":475,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":252,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":452,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":160,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":98,"org.easymock.samples.ExampleTest.removeNonExistingDocument":35,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":431,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":121,"org.easymock.tests.UsageStrictMockTest.differentMethods":382,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":223,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":289,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":184,"org.easymock.tests2.MockBuilderTest.testCreateMockString":248,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":316,"org.easymock.tests.UsageExpectAndThrowTest.floatType":446,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":133,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":128,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":113,"org.easymock.tests.UsageVerifyTest.twoThrows":409,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":412,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":142,"org.easymock.samples.ExampleTest.voteAgainstRemoval":32,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":418,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":14,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":178,"org.easymock.tests.LimitationsTest.privateConstructor":295,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":25,"org.easymock.tests2.UsageConstraintsTest.testNotNull":97,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":233,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":279,"org.easymock.tests2.UsageTest.defaultResetToNice":159,"org.easymock.samples.ExampleTest.voteAgainstRemovals":29,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":15,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":267,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":115,"org.easymock.tests.UsageVarargTest.differentLength":304,"org.easymock.tests2.CallbackTest.callback":216,"org.easymock.tests2.UsageConstraintsTest.equals":75,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":174,"org.easymock.tests.UsageTest.openCallCountByLastCall":335,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":71,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":441,"org.easymock.tests.UsageCallCountTest.tooFewCalls":402,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":107,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":362,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":482,"org.easymock.tests.UsageThrowableTest.throwCheckedException":276,"org.easymock.tests.MockingTest.testStrictClassMocking":345,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":109,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":375,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":120,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":106,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":436,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":108,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":2,"org.easymock.tests.ObjectMethodsTest.testHashCode":469,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":186,"org.easymock.tests2.NameTest.nameForNiceMock":214,"org.easymock.tests2.DependencyTest.testInterfaceMocking":196,"org.easymock.samples.ExampleTest.addDocument":33,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":149,"org.easymock.tests2.DelegateToTest.testStubDelegate":63,"org.easymock.tests2.AnswerTest.stubAnswer":1,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":379,"org.easymock.tests.UsageVarargTest.varargLongAccepted":306,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":383,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":12,"org.easymock.tests.UsageExpectAndReturnTest.floatType":254,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":270,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":69,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":43,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":415,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":91,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":230,"org.easymock.tests.UsageThrowableTest.noUpperLimit":273,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":72,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":100,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":49,"org.easymock.tests2.SerializationTest.test":59,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":288,"org.easymock.tests2.UsageConstraintsTest.testSame":78,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":253,"org.easymock.samples.SupportTest.addDocument":37,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":432,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":134,"org.easymock.tests.GenericTest.testPackageScope":386,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":397,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":8,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":229,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":352,"org.easymock.tests2.NameTest.nameForMock":212,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":264,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":481,"org.easymock.tests2.UsageStrictMockTest.differentMethods":192,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":175,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":256,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":458,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":467,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":358,"org.easymock.tests2.MockedExceptionTest.testRealException":236,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":286,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":103,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":17,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":483,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":16,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":440,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":438,"org.easymock.tests2.NameTest.nameForStrictMock":213,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":240,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":489,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":249,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":169,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":101,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":92,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":290,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":238,"org.easymock.tests2.UsageStrictMockTest.range":191,"org.easymock.tests2.UsageConstraintsTest.lessThan":99,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":225,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":11,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":138,"org.easymock.tests2.CaptureTest.testCaptureRightOne":54,"org.easymock.tests2.UsageConstraintsTest.testOr":79,"org.easymock.tests.UsageRangeTest.combination":355,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":166,"org.easymock.tests.UsageTest.wrongArguments":334,"org.easymock.tests2.MockBuilderTest.testWithConstructor":477,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":135,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":317,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":257,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":5,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":265,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":292,"org.easymock.tests.UsageVarargTest.varargShortAccepted":305,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":405,"org.easymock.tests2.UsageConstraintsTest.cmpTo":84,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":112,"org.easymock.tests2.CompareToTest.testLessThan":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":7,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":158,"org.easymock.tests2.CaptureTest.testCaptureFromStub":55,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":428,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":239,"org.easymock.tests.UsageTest.unexpectedCallWithArray":333,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":378,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":403,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":480,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":266,"org.easymock.tests2.UsageConstraintsTest.constraints":73,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":380,"org.easymock.samples.ExampleTest.addAndChangeDocument":36,"org.easymock.tests.UsageStrictMockTest.testVerify":384,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":41,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":377,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":341,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":50,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":365,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":258,"org.easymock.tests.LimitationsTest.abstractClass":294,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":416,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":366,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":204,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":299}}]
