[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:334","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>)","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:222","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","typeVariableArgument":"tv"}},{"position":"org.easymock.EasyMock:773","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:135","sourceCode":"java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader()","type":"CtAssignmentImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[2,3,4,5,6,7,8,9,10,11,12],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[13,14,15,16,17,18],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.EasyMock:773","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1878","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:116","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[58],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method","bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[13,60,14,15,61,16,62,63,64,65,66,67,68,17,69,70,71,72,73,3,6,74,75,76,77,78,8,79,80,81,82,83,84,21,85,86,87,88,89,90,91,92,93,94,95,96,97,98,1,10,99,11,100,101,102,103,104,105,12,106,31,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,32,134,135,136,33,137,138,139,140,141,142,143,144,145,146,147,148,149,150,38,41,51,57,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[13,60,14,15,61,16,62,246,63,64,65,66,67,68,17,19,19,20,20,247,248,249,69,70,250,251,252,253,71,72,73,254,255,256,257,258,2,3,259,4,260,5,6,74,75,76,261,77,262,263,78,264,265,8,79,80,82,9,266,267,83,84,21,85,86,87,88,89,90,268,269,91,92,93,94,95,96,270,97,98,271,1,272,10,99,11,100,273,101,102,103,104,105,12,274,275,106,31,107,108,276,277,109,110,111,112,113,114,115,116,117,118,119,120,121,278,122,123,124,279,125,126,127,280,281,128,129,130,282,131,132,133,32,134,135,136,33,283,137,284,138,285,286,139,140,141,142,143,144,145,146,147,148,287,149,288,150,38,41,51,57,289,290,291,292,293,294,295,296,297,298,151,152,299,153,300,301,302,303,154,304,305,306,307,155,308,309,310,311,156,157,158,159,160,312,313,18,314,315,161,316,317,162,163,318,164,319,320,321,322,165,323,324,325,326,166,327,328,329,330,331,332,333,334,335,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,336,337,214,215,338,339,216,217,218,219,220,221,222,223,340,224,341,342,225,226,227,343,344,345,230,346,231,347,348,349,350,351,232,352,233,234,235,236,353,237,238,354,239,355,356,240,241,357,242,243,358,359,244,245,360],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[193,194,242],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[361],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:142","sourceCode":"return true","type":"CtReturnImpl"},"failures":[362],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[363,364,365,366,367],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:172","failures":[94],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:919","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[79],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:707","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[74],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:194","failures":[22,368,369,370,364,365,27],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[78,127,144,173],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:932","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[79],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[148],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[25],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.Capture:134","failures":[371,372],"status":-1,"binaryOperator":"(java.util.List<T>.size()) == 1","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[373,374],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1607","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(char[]))","type":"CtInvocationImpl"},"failures":[77],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:50","sourceCode":"if ((java.lang.Object[].int) != (java.lang.Class<?>[].int)) {\n    throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\");\n} ","type":"CtIfImpl"},"failures":[375],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:226","sourceCode":"throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[279,284,286,139,337,354,356,240,357,242,243],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:51","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[13,60,14,15,61,16,246,63,64,68,17,247,248,249,69,70,250,251,252,253,71,72,73,254,255,256,257,258,2,3,259,4,260,5,6,74,7,75,76,261,77,262,263,78,264,265,8,79,80,81,82,9,266,267,83,84,21,85,86,87,88,89,376,377,90,268,269,378,98,271,1,379,272,10,99,11,100,273,101,102,103,104,105,12,274,275,106,31,107,276,277,109,110,111,112,113,114,115,116,117,118,119,120,121,278,122,380,123,124,279,125,126,127,280,281,128,129,130,282,131,135,283,137,284,138,285,286,139,142,150,381,289,290,291,292,293,294,295,296,297,298,151,152,299,153,300,301,302,303,154,304,305,306,307,155,308,309,310,311,382,312,313,18,314,315,316,317,162,163,318,164,319,320,321,322,165,323,324,325,326,166,327,328,329,330,331,332,333,334,335,383,384,385,386,387,179,180,181,182,183,388,184,185,186,187,188,189,190,191,192,193,194,195,196,197,389,390,391,205,206,207,208,209,392,393,394,395,396,397,398,399,210,211,212,213,336,337,214,215,338,339,216,217,218,219,220,400,340,341,342,225,226,227,228,229,343,344,345,230,346,401,231,347,402,403,404,405,348,349,350,351,232,352,233,234,406,235,236,407,353,237,238,354,239,355,356,240,241,357,242,243,358,359,244,245,360,408,409],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:40","sourceCode":"if (org.easymock.internal.DefaultClassInstantiator.isSerializable(java.lang.Class<?>)) {\n    try {\n        return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n    } catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n        throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n    }\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:41","sourceCode":"try {\n    return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[255,256,257,258,2,3,259,4,260,5,6,74,7,75,76,261,77,262,263,78,264,265,8,79,80,81,82,9,266,267,410,10,99,11,100,273,101,102,103,104,105,12,274,275,106,284,147,293,295,296,312,313,18,314,315,188,343,344,345,230,346,347,238,354,358,359],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[246,247,248,255,256,257,262,264,267,272,99,103,104,106,278,279,297,300,305,308,310,316,319,324,327,329,175,337,347,360,411,408],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[412,413,414,415,214,238],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:759","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[2,74,262,267],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[3],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:89","sourceCode":"return java.util.Properties.getProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[416],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:50","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"finalize\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:324","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    if (java.lang.reflect.Type == null) {\n        java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n    } \n    if (java.lang.reflect.Type != null) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:52","failures":[60,250,251,252,253,4,260,75,76,9,266,89,272,123,279,125,280,281,129,130,131,284,285,286,384,385,179,188,189,191,336,337,215,338,339,216,217,218,342,226,229,347,238,354,355,356,357,242,243,360],"status":-1,"binaryOperator":"(int) == (int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[31,107,108,417],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:39","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:29","sourceCode":"-1726286682930686024L","type":"CtUnaryOperatorImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:320","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[378,418],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:32","sourceCode":"new java.util.ArrayList<java.lang.reflect.Field>(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:171","sourceCode":"net.sf.cglib.proxy.Enhancer.setCallbackType(org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.getClass())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:44","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n        if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n            org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n        } \n    }\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1646","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(int[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[13,14,15,16,67,17,247,248,249,69,70,73,257,258,2,3,259,4,260,5,6,74,75,76,261,77,262,263,78,264,265,8,79,80,82,9,266,267,83,84,21,89,268,419,92,94,95,270,271,10,99,100,273,103,104,105,12,275,106,31,107,277,109,110,111,112,113,114,115,116,117,118,119,120,122,123,124,279,126,280,281,128,282,131,132,133,32,134,135,136,33,284,285,286,140,141,142,143,144,145,147,287,149,288,150,38,41,51,57,295,156,157,158,159,312,313,18,314,315,161,316,317,162,163,318,164,319,320,321,322,165,323,324,325,326,166,327,328,329,330,189,191,192,193,194,195,196,389,390,391,205,336,337,338,339,218,343,344,346,405,348,349,350,351,235,354,355,356,357,243,358,359,244,245,360],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:93","sourceCode":"if ((java.lang.Class<?>.getConstructors().int) == 0) {\n    throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"clazz"}},{"position":"org.easymock.internal.RecordState:117","failures":[60,255,256,89,90,269,278,232],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1333","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.InstanceOf:40","sourceCode":"java.lang.StringBuffer.append(((\"isA(\" + (java.lang.Class<?>.getName())) + \")\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:233","failures":[13,60,14,15,61,16,246,63,64,65,66,67,68,17,19,19,20,20,247,248,249,69,70,250,251,252,253,71,72,73,254,255,256,257,258,2,3,259,4,260,5,6,74,7,75,76,261,77,262,263,78,264,265,8,79,80,81,82,9,266,267,83,84,21,89,376,377,90,268,269,419,92,94,95,270,378,98,271,1,379,272,10,99,11,100,273,101,102,103,104,105,12,274,275,106,31,107,108,276,277,109,110,111,112,113,114,115,116,117,118,119,120,121,278,122,123,124,279,125,126,127,280,281,128,129,130,282,131,132,133,32,134,135,136,33,283,137,284,138,285,286,139,140,141,142,143,144,145,147,287,149,288,150,38,41,51,57,289,290,291,292,293,294,295,296,297,298,151,152,299,153,300,301,302,303,154,304,305,306,307,155,308,309,310,311,156,157,158,159,160,420,312,313,18,314,315,161,316,317,162,163,318,164,319,320,321,322,165,323,324,325,326,166,327,328,329,330,331,332,333,334,335,384,385,179,180,181,182,183,388,184,185,186,187,188,189,190,191,192,193,194,195,196,389,390,391,393,394,395,336,337,215,338,339,216,217,218,223,340,341,342,225,226,228,229,343,344,345,230,346,347,402,403,404,405,348,349,350,351,232,233,234,235,407,353,237,238,354,239,355,356,240,241,357,242,243,358,359,244,245,360,421,422,423,424,425,426,427,428,429,430,418,431,411,432,433,434,408,435,436,437,438,439,409,440],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:45","sourceCode":"java.lang.StringBuffer.append(\"[\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String).append(\", actual: \")","type":"CtInvocationImpl"},"failures":[250,251,252,253,279,125,129,130,284,285,286,441,442,443,337,215,216,217,347,238,354,355,356,357,242,243],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[272],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":3,"org.easymock.tests2.UsageTest.argumentsOrdered":130,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":336,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":119,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":380,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":418,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":127,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":63,"org.easymock.tests2.DelegateToTest.testReturnException":98,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":290,"org.easymock.tests.MockingTest.testPartialClassMocking":156,"org.easymock.tests.MockClassControlTest.testToString":199,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":405,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":437,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":45,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":41,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":297,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":441,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":84,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":368,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":74,"org.easymock.tests2.UsageTest.wrongArguments":125,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":343,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":212,"org.easymock.samples.ExampleTest.answerVsDelegate":60,"org.easymock.tests2.UsageConstraintsTest.testNull":4,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":143,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":118,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":204,"org.easymock.tests2.CaptureTest.testPrimitive":100,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":346,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":311,"org.easymock.tests.UsageTest.moreThanOneArgument":337,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":142,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":333,"org.easymock.tests.UsageTest.argumentsOrdered":217,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":383,"org.easymock.tests.UsageVarargTest.varargIntAccepted":181,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":434,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":312,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":91,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":365,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":93,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":423,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":315,"org.easymock.tests.ReplayStateInvalidUsageTest.times":175,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":150,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":361,"org.easymock.tests2.AnswerTest.answer":89,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":7,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":435,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":88,"org.easymock.tests2.CaptureTest.testAnd":10,"org.easymock.tests2.UsageTest.strictResetToDefault":124,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":148,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":26,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":332,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":113,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":350,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":387,"org.easymock.tests2.DelegateToTest.testDelegate":272,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":155,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":293,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":209,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":401,"org.easymock.tests2.CaptureTest.testCapture1_2446744":273,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":306,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":86,"org.easymock.tests.UsageThrowableTest.throwError":189,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":169,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":397,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":335,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":59,"org.easymock.samples.PartialClassMockTest.testGetArea":67,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":170,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":313,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":390,"org.easymock.tests2.UsageTest.niceToStrict":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":46,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":298,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":421,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":92,"org.easymock.tests2.MockBuilderTest.testCreateMock":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":54,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":412,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":303,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":114,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":404,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":340,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":210,"org.easymock.tests.UsageOverloadedMethodTest.overloading":245,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":50,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":56,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":234,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":262,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":244,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":323,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":77,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":105,"org.easymock.tests2.EasyMockSupportClassTest.testAll":38,"org.easymock.tests.MockClassControlTest.testEquals":203,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":160,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":309,"org.easymock.tests2.CaptureTest.testCaptureAll":99,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":87,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":207,"org.easymock.tests.MockNameTest.defaultName":392,"org.easymock.tests2.UsageConstraintsTest.testMatches":263,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":167,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":334,"org.easymock.samples.ExampleTest.voteForRemovals":16,"org.easymock.tests.UsageVarargTest.allKinds":188,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":357,"org.easymock.samples.BasicClassMockTest.testPrintContent":66,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":208,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":195,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":283,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":294,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":379,"org.easymock.tests2.UsageConstraintsTest.greaterThan":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":39,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":349,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":288,"org.easymock.samples.ExampleTest.voteForRemoval":14,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":248,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":398,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":146,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":123,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":223,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":28,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":428,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":111,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":36,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":289,"org.easymock.tests2.CaptureTest.testCaptureFirst":106,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":378,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":427,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":112,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":131,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":236,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":320,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":69,"org.easymock.tests2.CaptureTest.testCapture2_2446744":275,"org.easymock.tests2.UsageTest.moreThanOneArgument":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":436,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":270,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":187,"org.easymock.tests.GenericTest.testBridgedEquals":362,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":228,"org.easymock.tests.UsageExpectAndReturnTest.longType":163,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":109,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":205,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":310,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":407,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":81,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":308,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":394,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":331,"org.easymock.tests.UsageCallCountTest.tooManyCalls":229,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":55,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":321,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":153,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":194,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":133,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":224,"org.easymock.tests2.UsageConstraintsTest.testContains":261,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":73,"org.easymock.tests2.UsageConstraintsTest.testFind":259,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":360,"org.easymock.tests.MockTypeTest.fromEasyMockClass":396,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":256,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":353,"org.easymock.tests.UsageExpectAndReturnTest.object":165,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":147,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":117,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":183,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":369,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":221,"org.easymock.tests.UsageTest.exactCallCountByLastCall":218,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":375,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":426,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":384,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":22,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":179,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":327,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":233,"org.easymock.tests.MockClassControlTest.testHashCode":202,"org.easymock.tests2.EasyMockSupportTest.testVerify":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":48,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":385,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":403,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":232,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":85,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":410,"org.easymock.tests.UsageVarargTest.varargCharAccepted":182,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":137,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":440,"org.easymock.tests2.UsageTest.openCallCountByLastCall":280,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":120,"org.easymock.tests.DefaultClassInstantiatorTest.object":222,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":402,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":49,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":301,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":192,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":201,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":287,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":300,"org.easymock.tests.CapturesMatcherTest.test":372,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":328,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":57,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":200,"org.easymock.tests2.UsageTest.resumeIfFailure":282,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":292,"org.easymock.tests2.StubTest.stubWithReturnValue":277,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":27,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":82,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":322,"org.easymock.tests2.SerializationTest.testAllMockedMethod":108,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":408,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":367,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":413,"org.easymock.samples.SupportTest.voteForRemovals":17,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":305,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":417,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":409,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":376,"org.easymock.tests.UsageExpectAndThrowTest.object":154,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":79,"org.easymock.tests2.DelegateToTest.testWrongClass":1,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":358,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":359,"org.easymock.samples.ConstructorCalledMockTest.testTax":19,"org.easymock.tests.UsageStrictMockTest.range":355,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":116,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":132,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":304,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":94,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":177,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":35,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":216,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":211,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":414,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":391,"org.easymock.tests2.CaptureTest.testCaptureNone":104,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":0,"org.easymock.tests.UsageUnorderedTest.message":347,"org.easymock.tests.UsageVerifyTest.twoReturns":243,"org.easymock.tests.UsageVarargTest.varargByteAccepted":186,"org.easymock.tests2.ThreadingTest.testThreadSafe":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":52,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":226,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":400,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":65,"org.easymock.tests2.CaptureTest.testCapture_2617107":11,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":438,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":230,"org.easymock.tests2.UsageConstraintsTest.any":75,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":174,"org.easymock.tests2.StubTest.stub":276,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":395,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":439,"org.easymock.tests.UsageExpectAndThrowTest.longType":152,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":291,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":173,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":138,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":122,"org.easymock.tests2.SerializationTest.testClass":31,"org.easymock.tests.LimitationsTest.mockNativeMethod":161,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":420,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":330,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":139,"org.easymock.tests2.NameTest.nameForMocksControl":253,"org.easymock.tests2.MockedExceptionTest.testMockedException":72,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":40,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":339,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":158,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":299,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":140,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":95,"org.easymock.tests.MockingTest.testNicePartialClassMocking":157,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":145,"org.easymock.tests2.CaptureTest.testCaptureLast":103,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":363,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":231,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":33,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":6,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":80,"org.easymock.tests.MockingTest.testTwoMocks":382,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":34,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":316,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":302,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":129,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":266,"org.easymock.samples.ExampleTest.removeNonExistingDocument":62,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":171,"org.easymock.tests.UsageStrictMockTest.differentMethods":356,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":249,"org.easymock.tests2.MockBuilderTest.testCreateMockString":97,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":197,"org.easymock.tests.UsageExpectAndThrowTest.floatType":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":42,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":37,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":90,"org.easymock.tests.UsageVerifyTest.twoThrows":242,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":352,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":51,"org.easymock.samples.ExampleTest.voteAgainstRemoval":15,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":431,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":389,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":149,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":24,"org.easymock.tests2.UsageConstraintsTest.testNotNull":9,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":71,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":196,"org.easymock.tests2.UsageTest.defaultResetToNice":128,"org.easymock.samples.ExampleTest.voteAgainstRemovals":13,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":411,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":166,"org.easymock.tests.UsageVarargTest.differentLength":388,"org.easymock.tests2.CallbackTest.callback":278,"org.easymock.tests.UsageTest.openCallCountByLastCall":338,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":257,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":345,"org.easymock.tests.UsageCallCountTest.tooFewCalls":342,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":134,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":213,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":416,"org.easymock.tests.UsageThrowableTest.throwCheckedException":193,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":415,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":136,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":296,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":32,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":381,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":176,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":135,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":269,"org.easymock.tests.ObjectMethodsTest.testHashCode":220,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":364,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":70,"org.easymock.tests2.NameTest.nameForNiceMock":252,"org.easymock.tests2.DependencyTest.testInterfaceMocking":83,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":370,"org.easymock.samples.ExampleTest.addDocument":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":58,"org.easymock.tests2.DelegateToTest.testStubDelegate":271,"org.easymock.tests2.AnswerTest.stubAnswer":268,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":354,"org.easymock.tests.UsageVarargTest.varargLongAccepted":185,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":240,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":430,"org.easymock.tests.UsageExpectAndReturnTest.floatType":162,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":329,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":21,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":20,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":406,"org.easymock.tests.UsageThrowableTest.noUpperLimit":190,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":265,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":258,"org.easymock.tests2.SerializationTest.test":107,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":101,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":373,"org.easymock.tests2.UsageConstraintsTest.testSame":260,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":317,"org.easymock.samples.SupportTest.addDocument":68,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":172,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":43,"org.easymock.tests.GenericTest.testPackageScope":159,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":386,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":425,"org.easymock.tests2.NameTest.nameForMock":250,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":324,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":30,"org.easymock.tests2.UsageStrictMockTest.differentMethods":286,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":318,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":307,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":351,"org.easymock.tests2.MockedExceptionTest.testRealException":254,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":399,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":433,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":366,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":432,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":284,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":178,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":344,"org.easymock.tests2.NameTest.nameForStrictMock":251,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":255,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":144,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":442,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":8,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":419,"org.easymock.tests2.UsageStrictMockTest.range":285,"org.easymock.tests2.UsageConstraintsTest.lessThan":267,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":429,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":47,"org.easymock.tests2.CaptureTest.testCaptureRightOne":12,"org.easymock.tests2.UsageConstraintsTest.testOr":5,"org.easymock.tests.UsageRangeTest.combination":348,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":141,"org.easymock.tests.UsageTest.wrongArguments":215,"org.easymock.tests2.MockBuilderTest.testWithConstructor":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":44,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":198,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":164,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":422,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":325,"org.easymock.tests.UsageVarargTest.varargShortAccepted":184,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":374,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":227,"org.easymock.tests2.UsageConstraintsTest.cmpTo":76,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":377,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":424,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":281,"org.easymock.tests2.CaptureTest.testCaptureFromStub":274,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":168,"org.easymock.tests.UsageTest.unexpectedCallWithArray":214,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":238,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":225,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":29,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":326,"org.easymock.tests2.CaptureTest.testCapture":371,"org.easymock.tests2.UsageConstraintsTest.constraints":2,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":239,"org.easymock.samples.ExampleTest.addAndChangeDocument":246,"org.easymock.tests.UsageStrictMockTest.testVerify":241,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":64,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":237,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":206,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":102,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":18,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":319,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":235,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":314,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":443,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":180,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":115}}]
