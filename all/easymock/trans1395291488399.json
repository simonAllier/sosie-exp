[{"position":"org.easymock.internal.Range:83","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55],"status":-1,"binaryOperator":"(int) == (java.lang.Integer.int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:304","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[56,57,58,59,60],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:124","sourceCode":"if (java.util.Stack<org.easymock.internal.Invocation> == null) {\n    java.util.Stack<org.easymock.internal.Invocation> = new java.util.Stack<org.easymock.internal.Invocation>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>);\n} ","type":"CtIfImpl"},"failures":[0,1,2,61,62,63,64,65,66,67,68,69,70,71,72,73,3,74,75,76,77,78,79,80,81,82,83,4,84,85,5,86,87,6,7,8,9,10,88,89,90,91,92,93,94,95,96,97,98,99,100,101,11,102,103,104,105,106,107,12,108,109,13,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,14,15,130,16,17,18,19,20,21,131,132,133,134,135,136,137,138,139,140,141,142,143,144,144,145,146,147,148,149,150,151,22,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,23,179,180,181,24,182,183,184,25,26,27,28,185,186,187,188,189,190,191,192,193,29,194,195,196,197,30,198,199,200,201,202,31,203,204,205,206,207,208,209,32,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,33,251,34,35,252,253,36,37,254,38,39,255,40,41,256,42,257,258,47,48,259,49,50,51,52,53,260,261,262,263,54,264,55,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[57],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[72,73,3,74,4,84,6,7,89,90,91,92,93,94,107,12,108,109,13,145,146,22,152,25,26,189,190,191,192,193,29,194,195,196,197,304,30,198,199,200,201,202,31,203,204,205,206,207,208,209,32,210,211,212,305,249,250,33,258,47,48,259,49,50,51,52,53,260,261,262,263,54,264,268,281,282],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[306,307],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1901","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Compare<T>(T , java.util.Comparator<? super T> , org.easymock.LogicalOperator))","type":"CtInvocationImpl"},"failures":[31],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:223","failures":[236,239,245,271,280,308],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[309,310,311,312,313,314],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:315","failures":[73,5,11,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,14,18,148,149,150,151,22,152,155,245,246,247,248,33,37,55],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[196,258,48,261],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:217","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} ","type":"CtIfImpl"},"failures":[315,316],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[310,313],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Same:43","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:51","sourceCode":"java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1))","type":"CtInvocationImpl"},"failures":[1,2,9,317,27],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1107","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:217","sourceCode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException())","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[0,1,2,61,62,63,318,319,64,65,66,72,3,74,75,76,77,78,80,81,82,83,4,84,85,5,87,6,7,8,9,10,88,89,90,91,92,93,99,100,101,11,102,103,104,105,106,107,12,108,109,13,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,14,15,16,17,18,19,20,21,131,132,133,134,136,137,138,139,145,146,147,22,153,154,155,320,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,23,179,180,181,24,182,184,25,26,27,28,185,186,187,188,189,190,191,192,193,29,194,195,196,197,30,198,199,200,201,202,31,203,204,205,206,207,208,209,32,210,211,212,213,214,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,238,240,241,247,249,250,33,251,34,35,252,253,36,37,38,39,255,40,41,256,42,258,47,48,259,49,50,51,52,53,260,261,263,54,264,55,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,281,284,286,287,288,289,290,291,292,295,296,297,298,299,300,301,302,303],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[321,322,323,324,325,326,293,294],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"failures":[327,328],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[329,186,187,188],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:148","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"failures":[325],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[330,331,332,333,334,335,336],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[191,192,29,195,196,304,205,32,258,48,261],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:80","sourceCode":"if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[337],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.CompareTo:49","failures":[338,339,340,341,342],"status":-1,"binaryOperator":"(((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\")","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[0,1,2,343,344,345,61,62,346,63,347,348,349,350,318,319,351,352,64,353,65,66,67,68,69,70,71,354,355,356,357,358,359,360,56,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,309,310,311,312,378,313,379,314,72,73,380,381,382,3,74,75,76,383,77,78,79,80,81,82,83,4,384,84,85,5,385,386,387,388,389,390,391,86,87,6,7,8,9,10,88,392,89,90,91,92,93,94,95,96,97,98,99,100,101,11,102,103,104,105,106,107,12,108,109,13,393,57,58,59,394,395,396,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,14,15,130,16,17,18,19,20,21,397,398,131,132,133,134,135,136,137,327,138,139,399,328,400,401,402,403,404,405,406,407,140,141,142,143,408,409,410,411,412,413,414,415,416,417,60,418,145,146,419,420,147,421,148,149,150,151,22,152,422,423,424,425,426,427,428,429,430,431,432,433,434,435,153,436,154,155,437,320,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,438,439,440,441,442,177,443,444,445,446,447,448,306,178,23,179,307,180,181,335,449,24,450,451,452,453,454,182,455,456,457,458,459,460,183,184,25,26,27,28,185,186,187,188,189,190,191,192,461,193,29,194,195,196,197,304,30,198,199,200,201,202,31,203,204,205,206,207,208,209,32,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,462,229,230,231,463,232,233,234,235,236,464,237,465,466,467,238,239,240,336,241,321,468,242,243,323,244,245,246,247,248,305,249,469,250,33,251,34,35,252,253,36,37,254,38,39,255,40,41,470,471,256,42,257,472,43,44,45,46,258,47,48,259,49,50,51,52,53,260,261,262,263,54,264,55,265,266,267,268,269,473,474,475,270,476,477,271,478,479,480,481,482,483,484,485,486,272,487,488,489,490,491,273,492,493,274,275,276,277,278,279,280,494,281,326,495,282,283,284,285,496,308,497,498,286,287,499,500,501,502,503,504,505,288,289,290,291,292,293,294,295,296,297,298,299,300,301,506,302,303],"status":-1,"binaryOperator":"(int >= 1)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1361","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:37","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:168","sourceCode":"for (final org.easymock.internal.ErrorMessage org.easymock.internal.ErrorMessage : org.easymock.internal.UnorderedBehavior.getMessages(null)) {\n    org.easymock.internal.ErrorMessage.appendTo(java.lang.StringBuilder, 0);\n}","type":"CtForEachImpl"},"failures":[0,1,2,7,10,15,320,25,28,34,43,44,45,46],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:80","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n} ","type":"CtIfImpl"},"failures":[327,138,139,399,328],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:163","failures":[42,257],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:721","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.StartsWith:40","failures":[507],"status":-1,"binaryOperator":"((\"startsWith(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[192],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:108","sourceCode":"try {\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[186,187,188],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:57","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"hashCode\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"hashCodeMethod","equalsMethod":"hashCodeMethod"}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:39","sourceCode":"return int <= 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"failures":[340],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"failures":[339,189,203,206],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[0,2,61,62,63,64,353,65,66,362,364,373,374,376,72,381,382,84,85,5,7,9,10,89,90,91,92,93,100,11,102,103,104,105,106,107,12,13,14,15,17,18,21,138,399,145,146,147,434,320,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,23,181,182,25,27,28,186,187,189,190,191,192,193,29,194,195,196,197,30,198,199,200,201,202,31,203,204,205,206,207,209,32,210,211,212,213,214,215,216,217,218,219,220,221,222,223,225,226,227,228,229,230,231,237,238,240,241,243,247,33,251,34,252,36,37,254,255,40,41,42,258,47,259,49,52,53,260,261,263,54,55,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,281,283,284,285,286,287,289,295,296,298,299,301],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:40","sourceCode":"return java.lang.Object.equals(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:45","sourceCode":"return org.easymock.internal.matchers.CompareTo<T>.matchResult(((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Comparable<T>))","type":"CtReturnImpl"},"failures":[338,339,340,341,342,189,191,201,203,211],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[1,2,3,508,6,9,130,16,19,20,27,35,38,39],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MocksControl:105","failures":[0,1,2,343,344,345,61,62,346,63,347,348,349,350,318,319,351,352,64,353,65,66,67,68,69,70,71,354,355,356,357,358,359,360,56,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,309,310,311,312,378,313,314,72,73,380,381,382,3,74,75,76,383,77,78,79,80,81,82,83,4,84,85,5,385,386,387,388,389,390,391,86,87,6,7,8,9,10,88,392,89,90,91,92,93,94,95,96,97,98,99,100,101,11,102,103,104,105,106,107,12,108,109,13,393,57,58,59,394,395,396,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,14,15,130,16,17,18,19,20,21,397,398,131,132,133,134,135,136,137,327,138,139,399,328,400,403,404,405,406,407,140,141,142,143,408,409,410,411,412,413,414,415,416,417,60,418,145,146,419,420,147,421,148,149,150,151,22,152,422,423,424,425,426,427,428,429,430,431,432,433,434,435,153,436,154,155,437,320,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,438,439,440,441,442,177,443,444,445,446,447,448,306,178,23,179,307,180,181,335,24,450,451,452,453,454,182,455,456,457,458,459,460,183,184,25,26,27,28,185,186,187,188,189,190,191,192,461,193,29,194,195,196,197,304,30,198,199,200,201,202,31,203,204,205,206,207,208,209,32,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,465,467,238,239,240,241,468,242,243,244,245,246,247,248,305,249,469,250,33,251,34,35,252,253,36,37,254,38,39,255,40,41,470,471,256,42,257,472,43,44,45,46,258,47,48,259,49,50,51,52,53,260,261,262,263,54,264,55,265,266,267,268,269,473,474,475,270,476,477,271,478,479,480,481,482,483,484,485,486,272,487,488,489,490,491,273,492,493,274,275,276,277,278,279,280,494,281,326,495,282,283,284,285,496,308,497,498,286,287,499,503,504,505,288,289,290,291,292,293,293,294,294,295,296,297,298,299,300,301,506,302,303],"status":-1,"binaryOperator":"(java.lang.Class<T>.isInterface()) && (java.lang.reflect.Method[] != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[153,154,178,179,41],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[192],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1633","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(float[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[144,145,509,258,47,48,259,49,50,51,52,53,260,510,261,262,263,54,264],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:317","failures":[58,59,423,424],"status":-1,"binaryOperator":"java.lang.Throwable instanceof java.lang.Error","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":192,"org.easymock.tests2.UsageTest.argumentsOrdered":39,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":14,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":222,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":443,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":363,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":253,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":292,"org.easymock.tests2.DelegateToTest.testReturnException":178,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":149,"org.easymock.tests.MockingTest.testPartialClassMocking":61,"org.easymock.tests.MockClassControlTest.testToString":427,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":472,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":434,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":308,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":372,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":481,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":110,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":271,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":287,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":330,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":197,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":107,"org.easymock.tests2.UsageTest.wrongArguments":35,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":460,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":142,"org.easymock.samples.ExampleTest.answerVsDelegate":297,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":405,"org.easymock.tests2.UsageConstraintsTest.testNull":29,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":348,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":277,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":432,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":221,"org.easymock.tests2.CaptureTest.testPrimitive":259,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":13,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":129,"org.easymock.tests.UsageTest.moreThanOneArgument":15,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":276,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":96,"org.easymock.tests.UsageTest.argumentsOrdered":20,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":350,"org.easymock.tests.UsageVarargTest.varargIntAccepted":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":368,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":89,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":236,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":334,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":501,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":447,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":239,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":356,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":93,"org.easymock.tests.ReplayStateInvalidUsageTest.times":416,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":182,"org.easymock.tests2.DependencyTest.testClassMocking":497,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":325,"org.easymock.tests2.AnswerTest.answer":41,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":304,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":370,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":235,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":402,"org.easymock.tests2.CaptureTest.testAnd":258,"org.easymock.tests2.UsageTest.strictResetToDefault":251,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":466,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":282,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":95,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":65,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":216,"org.easymock.tests2.DelegateToTest.testDelegate":180,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":352,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":125,"org.easymock.tests.LimitationsTest.mockFinalMethod":421,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":22,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":71,"org.easymock.tests2.DependencyTest.testClassMockingSupport":498,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":394,"org.easymock.tests2.CaptureTest.testCapture1_2446744":49,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":494,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":123,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":233,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":410,"org.easymock.tests.UsageThrowableTest.throwError":100,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":404,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":448,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":384,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":98,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":493,"org.easymock.samples.PartialClassMockTest.testGetArea":295,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":411,"org.easymock.tests.MockingTest.testInterfaceMocking":346,"org.easymock.tests2.CompareToTest.testLessOrEqual":342,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":90,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":482,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":391,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":111,"org.easymock.tests2.UsageTest.niceToStrict":252,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":354,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":238,"org.easymock.tests2.MockBuilderTest.testCreateMock":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":489,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":457,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":119,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":217,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":401,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":424,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":397,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":140,"org.easymock.tests.UsageOverloadedMethodTest.overloading":85,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":491,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":486,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":155,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":201,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":168,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":84,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":200,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":260,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":383,"org.easymock.tests.MockClassControlTest.testEquals":431,"org.easymock.tests2.EasyMockSupportClassTest.testAll":270,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":139,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":127,"org.easymock.tests2.CaptureTest.testCaptureAll":47,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":69,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":234,"org.easymock.tests.MockNameTest.defaultName":393,"org.easymock.tests2.UsageConstraintsTest.testMatches":202,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":408,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":97,"org.easymock.samples.ExampleTest.voteForRemovals":301,"org.easymock.tests.UsageVarargTest.allKinds":4,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":0,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":70,"org.easymock.samples.BasicClassMockTest.testPrintContent":291,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":105,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":183,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":444,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":152,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":307,"org.easymock.tests2.UsageConstraintsTest.greaterThan":203,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":379,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":476,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":353,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":285,"org.easymock.samples.ExampleTest.voteForRemoval":298,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":314,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":496,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":266,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":406,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":502,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":280,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":99,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":33,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":468,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":56,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":214,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":474,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":148,"org.easymock.tests2.CaptureTest.testCaptureFirst":54,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":360,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":215,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":40,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":156,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":164,"org.easymock.tests2.UsageTest.moreThanOneArgument":34,"org.easymock.tests2.CaptureTest.testCapture2_2446744":263,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":268,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":371,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":83,"org.easymock.tests.GenericTest.testBridgedEquals":328,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":136,"org.easymock.tests.UsageExpectAndReturnTest.longType":160,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":67,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":212,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":128,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":316,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":385,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":208,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":126,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":58,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":94,"org.easymock.tests.UsageCallCountTest.tooManyCalls":137,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":490,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":165,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":459,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":115,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":104,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":226,"org.easymock.tests.MockingTest.testNiceClassMocking":349,"org.easymock.tests.MockingTest.testClassMocking":344,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":398,"org.easymock.tests2.UsageConstraintsTest.testContains":199,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":315,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":247,"org.easymock.tests2.UsageConstraintsTest.testFind":193,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":5,"org.easymock.tests.MockTypeTest.fromEasyMockClass":403,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":86,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":250,"org.easymock.tests.UsageExpectAndReturnTest.object":167,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":281,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":458,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":220,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":78,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":331,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":389,"org.easymock.tests.UsageTest.exactCallCountByLastCall":21,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":72,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":359,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":433,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":318,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":335,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":173,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":74,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":154,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":439,"org.easymock.tests.MockClassControlTest.testHashCode":430,"org.easymock.tests2.EasyMockSupportTest.testVerify":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":484,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":319,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":423,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":153,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":232,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":305,"org.easymock.tests.UsageVarargTest.varargCharAccepted":77,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":377,"org.easymock.tests2.CaptureTest.testCaptureMultiple":509,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":184,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":376,"org.easymock.tests2.UsageTest.openCallCountByLastCall":36,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":223,"org.easymock.tests.DefaultClassInstantiatorTest.object":309,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":422,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":387,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":508,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":485,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":117,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":102,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":453,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":438,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":429,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":283,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":116,"org.easymock.tests.CapturesMatcherTest.test":144,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":174,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":57,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":428,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":273,"org.easymock.tests2.UsageTest.resumeIfFailure":255,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":400,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":500,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":151,"org.easymock.tests2.StubTest.stubWithReturnValue":55,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":336,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":166,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":209,"org.easymock.tests2.SerializationTest.testAllMockedMethod":188,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":369,"org.easymock.samples.SupportTest.voteForRemovals":289,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":327,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":441,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":122,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":329,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":375,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":470,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":435,"org.easymock.tests.UsageExpectAndThrowTest.object":120,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":206,"org.easymock.tests2.DelegateToTest.testWrongClass":179,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":145,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":146,"org.easymock.tests.UsageStrictMockTest.range":9,"org.easymock.samples.ConstructorCalledMockTest.testTax":293,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":504,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":219,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":225,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":121,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":240,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":473,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":19,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":60,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":141,"org.easymock.tests2.CaptureTest.testCaptureNone":53,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":382,"org.easymock.tests.UsageUnorderedTest.message":3,"org.easymock.tests.UsageVerifyTest.twoReturns":2,"org.easymock.tests.UsageVarargTest.varargByteAccepted":82,"org.easymock.tests2.ThreadingTest.testThreadSafe":265,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":487,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":134,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":390,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":290,"org.easymock.tests2.CaptureTest.testCapture_2617107":48,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":396,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":109,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":373,"org.easymock.tests2.UsageConstraintsTest.any":30,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":415,"org.easymock.tests2.StubTest.stub":264,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":59,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":150,"org.easymock.tests.UsageExpectAndThrowTest.longType":113,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":374,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":378,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":414,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":26,"org.easymock.tests2.SerializationTest.testClass":186,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":177,"org.easymock.tests.LimitationsTest.mockNativeMethod":147,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":399,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":176,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":452,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":185,"org.easymock.tests2.NameTest.nameForMocksControl":46,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":454,"org.easymock.tests2.MockedExceptionTest.testMockedException":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":477,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":18,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":469,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":114,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":63,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":274,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":241,"org.easymock.tests.MockingTest.testNicePartialClassMocking":62,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":279,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":450,"org.easymock.tests2.CaptureTest.testCaptureLast":52,"org.easymock.tests2.CompareToTest.testCompareEqual":340,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":395,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":196,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":231,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":207,"org.easymock.tests.MockingTest.testTwoMocks":345,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":463,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":157,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":118,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":38,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":210,"org.easymock.samples.ExampleTest.removeNonExistingDocument":506,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":456,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":412,"org.easymock.tests.UsageStrictMockTest.differentMethods":10,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":440,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":311,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":267,"org.easymock.tests2.MockBuilderTest.testCreateMockString":244,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":425,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":478,"org.easymock.tests.UsageExpectAndThrowTest.floatType":112,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":475,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":256,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":449,"org.easymock.tests.UsageVerifyTest.twoThrows":1,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":436,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":272,"org.easymock.samples.ExampleTest.voteAgainstRemoval":299,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":364,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":380,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":284,"org.easymock.tests.LimitationsTest.privateConstructor":420,"org.easymock.tests2.UsageConstraintsTest.testNotNull":32,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":106,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":245,"org.easymock.tests2.UsageTest.defaultResetToNice":254,"org.easymock.samples.ExampleTest.voteAgainstRemovals":296,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":172,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":365,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":451,"org.easymock.tests.UsageVarargTest.differentLength":79,"org.easymock.tests2.CallbackTest.callback":24,"org.easymock.tests2.UsageConstraintsTest.equals":461,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":326,"org.easymock.tests.UsageTest.openCallCountByLastCall":17,"org.easymock.tests2.ConstraintsToStringTest.startsWithToString":507,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":189,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":108,"org.easymock.tests.UsageCallCountTest.tooFewCalls":132,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":228,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":143,"org.easymock.tests.UsageThrowableTest.throwCheckedException":103,"org.easymock.tests.MockingTest.testStrictClassMocking":343,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":73,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":230,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":455,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":227,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":417,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":229,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":257,"org.easymock.tests.ObjectMethodsTest.testHashCode":388,"org.easymock.tests2.CompareToTest.testGreateOrEqual":341,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":333,"org.easymock.tests2.NameTest.nameForNiceMock":45,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":269,"org.easymock.tests2.DependencyTest.testInterfaceMocking":286,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":332,"org.easymock.samples.ExampleTest.addDocument":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":488,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":492,"org.easymock.tests2.DelegateToTest.testStubDelegate":23,"org.easymock.tests2.AnswerTest.stubAnswer":42,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":7,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":321,"org.easymock.tests.UsageVarargTest.varargLongAccepted":81,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":88,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":362,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":175,"org.easymock.tests.UsageExpectAndReturnTest.floatType":159,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":181,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":294,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":446,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":437,"org.easymock.tests.UsageThrowableTest.noUpperLimit":101,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":204,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":190,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":499,"org.easymock.tests2.SerializationTest.test":187,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":50,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":310,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":158,"org.easymock.tests2.UsageConstraintsTest.testSame":194,"org.easymock.samples.SupportTest.addDocument":288,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":462,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":413,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":479,"org.easymock.tests.GenericTest.testPackageScope":138,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":351,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":358,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":445,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":347,"org.easymock.tests2.NameTest.nameForMock":43,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":169,"org.easymock.tests2.UsageStrictMockTest.differentMethods":28,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":323,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":495,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":161,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":124,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":386,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":66,"org.easymock.tests2.MockedExceptionTest.testRealException":248,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":407,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":505,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":367,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":25,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":366,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":418,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":12,"org.easymock.tests2.NameTest.nameForStrictMock":44,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":467,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":249,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":278,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":503,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":205,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":312,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":237,"org.easymock.tests2.UsageStrictMockTest.range":27,"org.easymock.tests2.UsageConstraintsTest.lessThan":211,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":442,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":213,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":483,"org.easymock.tests2.CaptureTest.testCaptureRightOne":261,"org.easymock.tests2.UsageConstraintsTest.testOr":195,"org.easymock.tests.UsageRangeTest.combination":64,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":275,"org.easymock.tests.UsageTest.wrongArguments":16,"org.easymock.tests2.MockBuilderTest.testWithConstructor":464,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":480,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":426,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":162,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":170,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":355,"org.easymock.tests.UsageVarargTest.varargShortAccepted":80,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":313,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":135,"org.easymock.tests2.UsageConstraintsTest.cmpTo":198,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":471,"org.easymock.tests2.CompareToTest.testLessThan":338,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":357,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":37,"org.easymock.tests2.CaptureTest.testCaptureFromStub":262,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":409,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":465,"org.easymock.tests.UsageTest.unexpectedCallWithArray":130,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":6,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":133,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":322,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":171,"org.easymock.tests2.CaptureTest.testCapture":510,"org.easymock.tests2.UsageConstraintsTest.constraints":191,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":8,"org.easymock.samples.ExampleTest.addAndChangeDocument":302,"org.easymock.tests.UsageStrictMockTest.testVerify":392,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":303,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":87,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":68,"org.easymock.tests2.CompareToTest.testGreateThan":339,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":51,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":91,"org.easymock.tests.LimitationsTest.abstractClass":419,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":163,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":92,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":320,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":75,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":218,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":317}}]
