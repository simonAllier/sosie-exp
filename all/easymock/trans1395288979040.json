[{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"control":"control","this":"this"}},{"transplant":{"position":"org.easymock.ConstructorArgs:71","sourceCode":"final java.lang.Exception java.lang.Exception","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1660","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"qualifier","key":"qualifier"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1928","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[2,2,3,3,4,5],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"failures":[6,7,8,9],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Any:36","failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"failures":[34,35,36,37,38],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:310","sourceCode":"return java.lang.Class<?>.equals(java.lang.Void.java.lang.Class<java.lang.Void>)","type":"CtReturnImpl"},"failures":[39,40,41,42,43,44,2,2,3,3,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,10,83,84,11,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,12,100,101,36,102,103,13,104,105,14,15,106,107,108,109,16,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,6,139,140,141,142,143,144,145,146,147,148,149,17,18,21,150,151,152,23,24,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,25,27,191,192,193,194,195,29,30,31,32,33,196,197,198,199,200,201,202],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[39,203,40,41,204,42,205,206,43,207,208,209,44,2,2,3,3,210,45,46,47,48,211,49,212,50,51,52,213,214,53,54,215,55,56,57,58,59,216,217,60,218,219,220,61,62,221,63,64,65,66,67,68,69,70,71,72,73,74,222,223,34,75,35,224,225,76,77,78,79,80,81,82,10,83,84,226,11,85,86,87,88,89,90,91,92,93,94,95,227,96,97,98,99,228,229,12,230,100,101,231,232,233,234,235,36,236,237,238,102,239,103,13,240,104,105,241,242,14,15,106,107,108,109,16,243,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,6,139,244,140,141,142,143,144,145,146,245,147,148,246,247,149,17,18,19,20,21,22,248,150,151,152,23,24,153,249,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,250,180,181,182,183,184,185,186,187,188,189,190,25,26,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,27,284,191,192,285,286,37,287,38,288,289,193,194,290,195,291,292,293,294,28,295,29,30,31,32,33,196,197,198,199,296,297,298,299,200,201,202,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[212,90,129],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[100,101,191,192],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[316],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[317,138,318],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1901","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Compare<T>(T , java.util.Comparator<? super T> , org.easymock.LogicalOperator))","type":"CtInvocationImpl"},"failures":[90],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[319,320,321,322,323,324,325,326,327,328],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"parameterType":"parameterType","this":"this"}},{"position":"org.easymock.internal.Range:70","failures":[100,101,191,192],"status":-1,"binaryOperator":"(\"between \" + (int))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[76,91,94,329],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[330],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[272,273,297,298],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:261","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[141,331,332,333,334,335,299,200,201],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","value":"shouldBeUsedInOneThread"}},{"position":"org.easymock.internal.ReflectionUtils:181","failures":[319,336,320,321,322,324,325,326,61,327],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[319,320,321,322,324,325,327],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:107","sourceCode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Null:35","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocation:85","sourceCode":"return ((this.org.easymock.internal.Invocation.getMock().equals(org.easymock.internal.Invocation.getMock())) && (this.org.easymock.internal.Invocation.getMethod().equals(org.easymock.internal.Invocation.getMethod()))) && org.easymock.internal.ExpectedInvocation.(matches(org.easymock.internal.Invocation.getArguments()))","type":"CtReturnImpl"},"failures":[39,203,40,41,204,42,205,206,43,207,208,209,44,2,3,210,45,46,47,48,49,212,50,51,53,54,215,55,56,57,58,59,216,217,60,218,219,220,61,62,221,63,64,65,66,67,68,69,71,72,73,74,222,34,75,35,225,76,77,78,79,80,81,82,10,83,84,11,85,86,87,88,89,90,91,92,93,94,95,227,96,97,98,99,229,12,230,100,101,231,36,238,102,239,103,13,240,104,105,241,242,14,15,106,107,108,109,16,243,110,111,112,113,114,115,116,117,119,120,121,123,124,125,126,127,128,129,130,131,133,135,136,137,138,6,139,244,140,142,143,144,145,146,147,148,149,17,18,19,20,21,22,150,151,152,23,24,153,249,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,250,180,181,182,183,184,185,186,187,188,189,190,25,26,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,275,276,277,278,279,280,282,27,284,191,192,285,37,38,288,194,290,195,291,292,293,294,28,295,29,30,31,32,33,196,198,199,305,306,307,308,309,311,312,313,314,315],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:40","sourceCode":"if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:44","sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[337,338,339],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:89","failures":[46,211,49,212,213,214,53,54,64,68,69,72,78,90,228,230,100,101,243,118,340,122,341,126,132,134,145,342,245,246,247,149,22,343,344,345,279,280,281,283,284,191,192,290,195,196,310,346,347],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[39,203,40,41,204,42,348,205,206,43,207,208,209,44,2,3,210,45,319,349,46,47,48,211,49,212,50,51,52,213,214,53,54,350,215,55,351,352,353,56,354,355,57,356,357,358,359,360,361,362,363,364,58,365,366,367,368,369,59,370,371,216,217,60,218,219,372,220,61,62,221,63,64,65,66,67,68,69,70,71,72,73,74,222,223,34,75,35,224,225,76,77,78,79,373,80,81,82,10,83,84,226,11,85,86,87,88,89,90,91,92,93,94,95,227,96,97,98,99,228,229,12,230,100,101,231,374,232,233,234,235,36,236,237,238,102,239,103,13,240,104,105,241,242,14,15,106,107,108,109,16,375,376,377,378,243,379,380,381,0,382,110,383,384,385,386,387,388,111,112,113,114,389,115,116,117,390,391,392,118,393,394,395,119,396,120,327,121,397,398,340,122,399,341,400,401,123,124,402,403,404,405,406,407,408,125,126,127,128,129,130,409,410,131,5,411,412,132,133,134,317,413,414,415,416,1,417,135,418,419,420,421,422,423,136,137,138,6,139,244,424,425,140,426,427,428,429,430,7,141,8,431,432,433,434,435,142,143,144,145,146,342,245,147,148,246,247,149,17,18,19,20,21,22,436,437,248,150,151,438,152,439,440,441,23,24,330,153,249,154,316,155,156,442,443,444,445,446,447,448,449,450,451,331,452,332,453,454,455,456,157,457,458,459,333,334,158,335,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,460,461,462,318,463,9,464,465,466,467,468,469,179,250,180,181,182,183,184,185,186,187,188,189,190,25,26,470,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,471,472,473,474,475,476,477,478,271,272,273,274,479,275,276,277,278,345,279,280,281,282,283,27,284,191,192,285,286,37,287,38,288,289,193,480,194,290,195,481,482,483,484,485,486,487,488,489,291,292,293,294,28,295,29,30,31,32,33,196,197,198,199,296,297,298,299,200,201,202,300,301,302,303,304,305,306,307,490,308,309,310,311,312,313,314,315,491,492,493,494,495,496,497,498,499,500,501,502,503,504,347],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:183","sourceCode":"throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" seems to have vanished\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":79,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":145,"org.easymock.tests2.UsageTest.argumentsOrdered":214,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":73,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":383,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":452,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":212,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":207,"org.easymock.tests2.DelegateToTest.testReturnException":34,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":292,"org.easymock.tests.MockingTest.testPartialClassMocking":150,"org.easymock.tests.MockClassControlTest.testToString":499,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":374,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":141,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":459,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":413,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":359,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":57,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":251,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":124,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":320,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":84,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":17,"org.easymock.tests2.UsageTest.wrongArguments":211,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":423,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":429,"org.easymock.samples.ExampleTest.answerVsDelegate":203,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":476,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":440,"org.easymock.tests2.UsageConstraintsTest.testNull":81,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":128,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":504,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":72,"org.easymock.tests2.CaptureTest.testPrimitive":104,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":21,"org.easymock.tests.UsageTest.moreThanOneArgument":146,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":270,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":127,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":188,"org.easymock.tests.UsageTest.argumentsOrdered":247,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":300,"org.easymock.tests.UsageVarargTest.varargIntAccepted":307,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":456,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":29,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":391,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":325,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":404,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":387,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":396,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":445,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":33,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":338,"org.easymock.tests.ReplayStateInvalidUsageTest.times":466,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":135,"org.easymock.tests2.DependencyTest.testClassMocking":400,"org.easymock.tests2.AnswerTest.answer":36,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":226,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":457,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":378,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":473,"org.easymock.tests2.CaptureTest.testAnd":103,"org.easymock.tests2.UsageTest.strictResetToDefault":47,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":412,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":394,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":187,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":67,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":198,"org.easymock.tests2.DelegateToTest.testDelegate":225,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":304,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":266,"org.easymock.tests.LimitationsTest.mockFinalMethod":426,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":28,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":435,"org.easymock.tests2.DependencyTest.testClassMockingSupport":401,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":155,"org.easymock.tests2.CaptureTest.testCapture1_2446744":105,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":410,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":264,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":376,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":462,"org.easymock.tests.UsageThrowableTest.throwError":179,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":475,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":388,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":347,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":371,"org.easymock.samples.PartialClassMockTest.testGetArea":44,"org.easymock.tests.MockingTest.testInterfaceMocking":438,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":318,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":30,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":200,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":496,"org.easymock.tests2.UsageTest.niceToStrict":49,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":360,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":443,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":119,"org.easymock.tests2.MockBuilderTest.testCreateMock":340,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":367,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":420,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":260,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":68,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":472,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":273,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":274,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":427,"org.easymock.tests.UsageOverloadedMethodTest.overloading":143,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":364,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":369,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":88,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":288,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":170,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":142,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":87,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":106,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":490,"org.easymock.tests.MockClassControlTest.testEquals":503,"org.easymock.tests2.EasyMockSupportClassTest.testAll":56,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":249,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":268,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":433,"org.easymock.tests2.CaptureTest.testCaptureAll":13,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":377,"org.easymock.tests.MockNameTest.defaultName":470,"org.easymock.tests2.UsageConstraintsTest.testMatches":89,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":460,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":189,"org.easymock.samples.ExampleTest.voteForRemovals":42,"org.easymock.tests.UsageVarargTest.allKinds":315,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":194,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":434,"org.easymock.samples.BasicClassMockTest.testPrintContent":209,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":184,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":228,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":384,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":224,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":295,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":488,"org.easymock.tests2.UsageConstraintsTest.greaterThan":91,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":354,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":197,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":134,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":489,"org.easymock.samples.ExampleTest.voteForRemoval":40,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":137,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":317,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":477,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":405,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":409,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":46,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":244,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":398,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":450,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":65,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":352,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":291,"org.easymock.tests2.CaptureTest.testCaptureFirst":16,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":449,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":66,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":54,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":480,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":166,"org.easymock.tests2.CaptureTest.testCapture2_2446744":109,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":6,"org.easymock.tests2.UsageTest.moreThanOneArgument":48,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":458,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":122,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":314,"org.easymock.tests.GenericTest.testBridgedEquals":316,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":279,"org.easymock.tests.UsageExpectAndReturnTest.longType":162,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":431,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":63,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":269,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":202,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":227,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":267,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":186,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":297,"org.easymock.tests.UsageCallCountTest.tooManyCalls":280,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":339,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":368,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":167,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":422,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":256,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":183,"org.easymock.tests.MockingTest.testNiceClassMocking":441,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":112,"org.easymock.tests.MockingTest.testClassMocking":437,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":479,"org.easymock.tests2.UsageConstraintsTest.testContains":86,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":60,"org.easymock.tests2.UsageConstraintsTest.testFind":80,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":144,"org.easymock.tests.MockTypeTest.fromEasyMockClass":474,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":220,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":281,"org.easymock.tests.UsageExpectAndReturnTest.object":169,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":131,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":421,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":71,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":309,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":321,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":494,"org.easymock.tests.UsageTest.exactCallCountByLastCall":149,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":25,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":448,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":7,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":301,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":319,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":175,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":305,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":38,"org.easymock.tests.MockClassControlTest.testHashCode":502,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":380,"org.easymock.tests2.EasyMockSupportTest.testVerify":222,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":362,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":337,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":302,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":37,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":272,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":343,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":375,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":350,"org.easymock.tests.UsageVarargTest.varargCharAccepted":308,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":481,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":229,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":335,"org.easymock.tests2.UsageTest.openCallCountByLastCall":50,"org.easymock.tests.DefaultClassInstantiatorTest.object":482,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":74,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":271,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":492,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":344,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":363,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":181,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":1,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":379,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":501,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":132,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":257,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":176,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":296,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":500,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":59,"org.easymock.tests2.UsageTest.resumeIfFailure":53,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":471,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":403,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":294,"org.easymock.tests2.StubTest.stubWithReturnValue":55,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":327,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":168,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":96,"org.easymock.tests2.SerializationTest.testAllMockedMethod":221,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":157,"org.easymock.samples.SupportTest.voteForRemovals":43,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":330,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":0,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":263,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":158,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":236,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":8,"org.easymock.tests.UsageExpectAndThrowTest.object":261,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":94,"org.easymock.tests2.DelegateToTest.testWrongClass":35,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":23,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":24,"org.easymock.tests.UsageStrictMockTest.range":191,"org.easymock.samples.ConstructorCalledMockTest.testTax":2,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":407,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":70,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":111,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":262,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":120,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":468,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":351,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":428,"org.easymock.tests2.CaptureTest.testCaptureNone":15,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":201,"org.easymock.tests.UsageUnorderedTest.message":22,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":346,"org.easymock.tests.UsageVerifyTest.twoReturns":195,"org.easymock.tests.UsageVarargTest.varargByteAccepted":313,"org.easymock.tests2.ThreadingTest.testThreadSafe":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":365,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":278,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":495,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":208,"org.easymock.tests2.CaptureTest.testCapture_2617107":240,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":442,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":20,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":333,"org.easymock.tests2.UsageConstraintsTest.any":11,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":465,"org.easymock.tests2.StubTest.stub":215,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":298,"org.easymock.tests.UsageExpectAndThrowTest.longType":254,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":293,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":334,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":486,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":464,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":230,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":110,"org.easymock.tests2.SerializationTest.testClass":61,"org.easymock.tests.LimitationsTest.mockNativeMethod":140,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":178,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":154,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":416,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":231,"org.easymock.tests2.NameTest.nameForMocksControl":235,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":417,"org.easymock.tests2.MockedExceptionTest.testMockedException":217,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":355,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":148,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":152,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":255,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":372,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":125,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":121,"org.easymock.tests.MockingTest.testNicePartialClassMocking":151,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":130,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":414,"org.easymock.tests2.CaptureTest.testCaptureLast":14,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":336,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":156,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":117,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":83,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":95,"org.easymock.tests.MockingTest.testTwoMocks":248,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":390,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":159,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":259,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":213,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":98,"org.easymock.samples.ExampleTest.removeNonExistingDocument":348,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":463,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":419,"org.easymock.tests.UsageStrictMockTest.differentMethods":192,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":381,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":484,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":138,"org.easymock.tests2.MockBuilderTest.testCreateMockString":341,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":497,"org.easymock.tests.UsageExpectAndThrowTest.floatType":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":356,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":90,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":353,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":238,"org.easymock.tests.UsageVerifyTest.twoThrows":290,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":349,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":58,"org.easymock.samples.ExampleTest.voteAgainstRemoval":41,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":299,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":332,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":133,"org.easymock.tests.LimitationsTest.privateConstructor":425,"org.easymock.tests2.UsageConstraintsTest.testNotNull":97,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":185,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":216,"org.easymock.tests2.UsageTest.defaultResetToNice":52,"org.easymock.samples.ExampleTest.voteAgainstRemovals":39,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":453,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":174,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":415,"org.easymock.tests.UsageVarargTest.differentLength":310,"org.easymock.tests2.CallbackTest.callback":243,"org.easymock.tests2.UsageConstraintsTest.equals":373,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":5,"org.easymock.tests.UsageTest.openCallCountByLastCall":147,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":76,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":19,"org.easymock.tests.UsageCallCountTest.tooFewCalls":276,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":114,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":430,"org.easymock.tests.UsageThrowableTest.throwCheckedException":182,"org.easymock.tests.MockingTest.testStrictClassMocking":436,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":116,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":26,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":418,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":113,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":467,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":115,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":239,"org.easymock.tests.ObjectMethodsTest.testHashCode":493,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":324,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":139,"org.easymock.tests2.NameTest.nameForNiceMock":234,"org.easymock.tests2.DependencyTest.testInterfaceMocking":123,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":322,"org.easymock.samples.ExampleTest.addDocument":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":366,"org.easymock.tests2.DelegateToTest.testStubDelegate":75,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":370,"org.easymock.tests2.AnswerTest.stubAnswer":102,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":27,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":397,"org.easymock.tests.UsageVarargTest.varargLongAccepted":312,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":285,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":331,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":177,"org.easymock.tests.UsageExpectAndReturnTest.floatType":161,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":45,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":3,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":386,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":92,"org.easymock.tests.UsageThrowableTest.noUpperLimit":250,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":289,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":77,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":402,"org.easymock.tests2.SerializationTest.test":62,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":241,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":483,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":160,"org.easymock.tests2.UsageConstraintsTest.testSame":82,"org.easymock.samples.SupportTest.addDocument":206,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":389,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":357,"org.easymock.tests.GenericTest.testPackageScope":153,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":303,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":447,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":385,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":439,"org.easymock.tests2.NameTest.nameForMock":232,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":171,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":399,"org.easymock.tests2.UsageStrictMockTest.differentMethods":101,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":411,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":163,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":265,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":491,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":199,"org.easymock.tests2.MockedExceptionTest.testRealException":218,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":478,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":455,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":408,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":328,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":454,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":12,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":469,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":18,"org.easymock.tests2.NameTest.nameForStrictMock":233,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":395,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":219,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":129,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":406,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":485,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":93,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":118,"org.easymock.tests2.UsageStrictMockTest.range":100,"org.easymock.tests2.UsageConstraintsTest.lessThan":99,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":382,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":451,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":64,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":323,"org.easymock.tests2.CaptureTest.testCaptureRightOne":107,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":361,"org.easymock.tests2.UsageConstraintsTest.testOr":10,"org.easymock.tests.UsageRangeTest.combination":196,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":126,"org.easymock.tests.UsageTest.wrongArguments":245,"org.easymock.tests2.MockBuilderTest.testWithConstructor":392,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":358,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":498,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":164,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":444,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":172,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":487,"org.easymock.tests.UsageVarargTest.varargShortAccepted":311,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":345,"org.easymock.tests2.UsageConstraintsTest.cmpTo":85,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":237,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":446,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":51,"org.easymock.tests2.CaptureTest.testCaptureFromStub":108,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":461,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":393,"org.easymock.tests.UsageTest.unexpectedCallWithArray":342,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":283,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":277,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":4,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":173,"org.easymock.tests2.UsageConstraintsTest.constraints":78,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":284,"org.easymock.samples.ExampleTest.addAndChangeDocument":205,"org.easymock.tests.UsageStrictMockTest.testVerify":286,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":210,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":282,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":432,"org.easymock.tests2.CompareToTest.testGreateThan":329,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":242,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":31,"org.easymock.tests.LimitationsTest.abstractClass":424,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":165,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":32,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":193,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":69,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":306}}]
