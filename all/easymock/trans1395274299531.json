[{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:320","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[2,3],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1459","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:141","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[4],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","shouldBeUsedInOneThread":"value"}},{"position":"org.easymock.EasyMock:920","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:48","failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,135,136,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,1,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256],"status":-1,"binaryOperator":"org.easymock.internal.MocksControl != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:45","sourceCode":"final org.easymock.internal.ThrowableWrapper org.easymock.internal.ThrowableWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[257,109,110,111,258,157,159,234,235,236],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:210","failures":[135,135,136,136,259,260,214,216,261],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.RecordState:153","failures":[45,64,100,101,102,103,104,105,196,197,198,199],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:77","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[262],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:37","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1495","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.NotNull:36","failures":[263,187,200,201],"status":-1,"binaryOperator":"java.lang.Object != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[264,265,266,267,268],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"message":"key"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[269,269,246,247,270,248,249,271,272,250,251,252,253,254,255,256],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:249","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[262,273],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:37","failures":[5,6,7,8,9,10,11,12,13,14,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,274,275,276,277,278,279,280,281,282,283,44,53,54,55,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,284,100,101,102,103,104,105,285,109,286,110,111,287,112,113,123,124,125,126,127,288,289,129,130,131,132,290,133,134,291,292,293,137,138,139,140,141,294,142,143,145,146,148,149,150,152,153,155,158,162,167,169,171,172,187,190,193,194,202,203,204,206,207,208,209,210,211,213,214,215,217,218,219,220,221,222,223,225,226,227,228,233,295,234,296,235,236,297,237,238,246,247,250,251,253,256],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[298,299,300,301,302,303,261],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:109","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"toStringMethod","method":"toStringMethod"}},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[304,194,195],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:309","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:251","sourceCode":"java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[19,20,21],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[298,259,299,300,301,305,214,216,261],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:61","sourceCode":"throw new java.lang.RuntimeException(java.lang.String.java.lang.String.format(\"At least two mocks have fieldName qualifier \\'%s\\'\", java.lang.String))","type":"CtThrowImpl"},"failures":[306,307],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"failures":[118],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Any:36","failures":[44,45,61,62,63,64,65,66,104,109,112,113,123,124,125,126,127,171,174,234,247,250,251,256],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:90","failures":[308,309,310,311,312,61,68,69,257,110,313,314,315,235],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:127","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:123","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[214,215,316],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:879","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:61","failures":[283,44,45,61,62,63,64,65,66,104,257,109,112,113,123,124,125,126,127,160,164,165,166,167,168,169,170,171,172,173,317,174,175,176,177,178,179,180,181,182,183,184,185,263,186,187,188,189,200,201,205,234,318,246,247,270,248,249,271,272,250,251,252,253,254,255,256],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.IArgumentMatcher> == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[308,319,320,257,321,322],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:107","failures":[323,324,42,325,326,327,46,47,48,328,262,98,284,99,273,329,330,106,331,332,2,333,334,335,3,336,337,338,339,340,341,342,343,344,345,128,135,135,136,136,291,292,346,347,147,348,349,148,350,149,150,259,351,151,352,353,154,155,157,158,159,354,160,260,355,356,161,162,163,357,358,196,197,198,359,214,316,216,261,360,361,362,363,364,229,365,366,230,367,368,369,4,370,371,372,373,374,231,375,376,377,378,379,232,380,381,239,240,241,242,244,245],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[262],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.InjectionPlan:36","sourceCode":"new java.util.ArrayList<org.easymock.internal.Injection>(5)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:53","sourceCode":"java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection)","type":"CtInvocationImpl"},"failures":[382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1554","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(short))","type":"CtInvocationImpl"},"failures":[167,172,183],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":167,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":10,"org.easymock.tests2.UsageTest.argumentsOrdered":315,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":227,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":0,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":294,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":289,"org.easymock.tests2.DelegateToTest.testReturnException":209,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":101,"org.easymock.tests.MockingTest.testPartialClassMocking":46,"org.easymock.tests.MockClassControlTest.testToString":340,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":15,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":4,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":22,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":230,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":153,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":299,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":173,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":62,"org.easymock.tests2.UsageTest.wrongArguments":313,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":397,"org.easymock.samples.ExampleTest.answerVsDelegate":130,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":324,"org.easymock.tests2.UsageConstraintsTest.testNull":169,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":157,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":226,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":345,"org.easymock.tests2.CaptureTest.testPrimitive":248,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":66,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":41,"org.easymock.tests.UsageTest.moreThanOneArgument":11,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":156,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":7,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":118,"org.easymock.tests.UsageTest.argumentsOrdered":311,"org.easymock.tests.UsageVarargTest.varargIntAccepted":276,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":123,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":303,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":346,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":388,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":350,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":127,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":233,"org.easymock.tests2.AnswerTest.answer":190,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":317,"org.easymock.tests2.CaptureTest.testAnd":246,"org.easymock.tests2.UsageTest.strictResetToDefault":139,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":356,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":6,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":51,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":221,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":122,"org.easymock.tests2.DelegateToTest.testDelegate":213,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":37,"org.easymock.tests.LimitationsTest.mockFinalMethod":331,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":104,"org.easymock.tests2.CaptureTest.testCapture1_2446744":249,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":264,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":35,"org.easymock.tests.UsageThrowableTest.throwError":90,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":389,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":9,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":381,"org.easymock.samples.PartialClassMockTest.testGetArea":128,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":124,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":115,"org.easymock.tests2.UsageTest.niceToStrict":141,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":23,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":370,"org.easymock.tests2.ThreadingTest.testChangeDefault":268,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":148,"org.easymock.tests2.MockBuilderTest.testCreateMock":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":377,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":394,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":31,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":321,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":222,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":21,"org.easymock.tests.UsageOverloadedMethodTest.overloading":58,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":379,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":178,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":55,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":57,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":81,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":177,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":252,"org.easymock.tests2.EasyMockSupportClassTest.testAll":229,"org.easymock.tests.MockClassControlTest.testEquals":344,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":284,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":39,"org.easymock.tests2.CaptureTest.testCaptureAll":247,"org.easymock.tests2.UsageConstraintsTest.testMatches":179,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":8,"org.easymock.samples.ExampleTest.voteForRemovals":133,"org.easymock.tests.UsageVarargTest.allKinds":283,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":67,"org.easymock.samples.BasicClassMockTest.testPrintContent":292,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":96,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":385,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":105,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":212,"org.easymock.tests2.UsageConstraintsTest.greaterThan":181,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":365,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":50,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":163,"org.easymock.samples.ExampleTest.voteForRemoval":131,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":336,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":203,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":357,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":354,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":138,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":42,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":259,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":219,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":92,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":363,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":100,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":1,"org.easymock.tests2.CaptureTest.testCaptureFirst":256,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":304,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":220,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":146,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":77,"org.easymock.tests2.UsageTest.moreThanOneArgument":140,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":205,"org.easymock.tests2.CaptureTest.testCapture2_2446744":255,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":151,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":282,"org.easymock.tests.GenericTest.testBridgedEquals":273,"org.easymock.tests.UsageExpectAndReturnTest.longType":73,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":217,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":40,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":352,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":117,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":263,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":38,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":5,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":17,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":378,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":78,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":396,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":27,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":95,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":240,"org.easymock.tests.MockingTest.testNiceClassMocking":328,"org.easymock.tests.MockingTest.testClassMocking":326,"org.easymock.tests2.UsageConstraintsTest.testContains":176,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":347,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":198,"org.easymock.tests2.UsageConstraintsTest.testFind":168,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":59,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":201,"org.easymock.tests.UsageExpectAndReturnTest.object":80,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":160,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":395,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":225,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":278,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":300,"org.easymock.tests.UsageTest.exactCallCountByLastCall":14,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":44,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":119,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":261,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":86,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":274,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":54,"org.easymock.tests.MockClassControlTest.testHashCode":343,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":382,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":372,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":120,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":20,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":53,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":318,"org.easymock.tests.UsageVarargTest.varargCharAccepted":277,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":295,"org.easymock.tests2.UsageTest.openCallCountByLastCall":142,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":228,"org.easymock.tests.DefaultClassInstantiatorTest.object":332,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":19,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":312,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":373,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":93,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":307,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":161,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":342,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":28,"org.easymock.tests.CapturesMatcherTest.test":269,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":87,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":16,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":232,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":341,"org.easymock.tests2.UsageTest.resumeIfFailure":145,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":323,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":103,"org.easymock.tests2.StubTest.stubWithReturnValue":238,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":298,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":186,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":79,"org.easymock.tests2.SerializationTest.testAllMockedMethod":316,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":107,"org.easymock.samples.SupportTest.voteForRemovals":137,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":322,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":262,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":306,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":34,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":108,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":191,"org.easymock.tests.UsageExpectAndThrowTest.object":32,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":184,"org.easymock.tests2.DelegateToTest.testWrongClass":211,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":112,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":113,"org.easymock.samples.ConstructorCalledMockTest.testTax":135,"org.easymock.tests.UsageStrictMockTest.range":110,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":224,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":239,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":33,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":149,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":362,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":319,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":116,"org.easymock.tests2.CaptureTest.testCaptureNone":251,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":265,"org.easymock.tests.UsageUnorderedTest.message":61,"org.easymock.tests.UsageVerifyTest.twoReturns":69,"org.easymock.tests.UsageVarargTest.varargByteAccepted":281,"org.easymock.tests2.ThreadingTest.testThreadSafe":202,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":375,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":291,"org.easymock.tests2.CaptureTest.testCapture_2617107":270,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":65,"org.easymock.tests2.UsageConstraintsTest.any":174,"org.easymock.tests2.StubTest.stub":237,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":18,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":102,"org.easymock.tests.UsageExpectAndThrowTest.longType":25,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":335,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":296,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":208,"org.easymock.tests2.SerializationTest.testClass":214,"org.easymock.tests.LimitationsTest.mockNativeMethod":106,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":99,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":89,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":391,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":297,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":392,"org.easymock.tests2.MockedExceptionTest.testMockedException":197,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":366,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":13,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":26,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":48,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":154,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":150,"org.easymock.tests.MockingTest.testNicePartialClassMocking":47,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":159,"org.easymock.tests2.CaptureTest.testCaptureLast":250,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":60,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":172,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":245,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":185,"org.easymock.tests.MockingTest.testTwoMocks":327,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":70,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":30,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":314,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":188,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":267,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":393,"org.easymock.tests.UsageStrictMockTest.differentMethods":111,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":383,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":266,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":333,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":204,"org.easymock.tests2.MockBuilderTest.testCreateMockString":353,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":338,"org.easymock.tests.UsageExpectAndThrowTest.floatType":24,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":367,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":364,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":193,"org.easymock.tests.UsageVerifyTest.twoThrows":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":231,"org.easymock.samples.ExampleTest.voteAgainstRemoval":132,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":114,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":162,"org.easymock.tests.LimitationsTest.privateConstructor":330,"org.easymock.tests2.UsageConstraintsTest.testNotNull":187,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":97,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":196,"org.easymock.tests2.UsageTest.defaultResetToNice":144,"org.easymock.samples.ExampleTest.voteAgainstRemovals":129,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":85,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":390,"org.easymock.tests2.CallbackTest.callback":207,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":260,"org.easymock.tests.UsageTest.openCallCountByLastCall":12,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":164,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":64,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":242,"org.easymock.tests.UsageThrowableTest.throwCheckedException":94,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":320,"org.easymock.tests.MockingTest.testStrictClassMocking":325,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":45,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":244,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":241,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":243,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":195,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":302,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":206,"org.easymock.tests2.DependencyTest.testInterfaceMocking":152,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":301,"org.easymock.samples.ExampleTest.addDocument":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":376,"org.easymock.tests2.DelegateToTest.testStubDelegate":210,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":380,"org.easymock.tests2.AnswerTest.stubAnswer":194,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":109,"org.easymock.tests.UsageVarargTest.varargLongAccepted":280,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":287,"org.easymock.tests.UsageExpectAndReturnTest.floatType":72,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":88,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":216,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":136,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":387,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":182,"org.easymock.tests.UsageThrowableTest.noUpperLimit":91,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":165,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":360,"org.easymock.tests2.SerializationTest.test":215,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":271,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":2,"org.easymock.tests2.UsageConstraintsTest.testSame":170,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":71,"org.easymock.samples.SupportTest.addDocument":293,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":368,"org.easymock.tests.GenericTest.testPackageScope":98,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":121,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":386,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":82,"org.easymock.tests2.UsageStrictMockTest.differentMethods":236,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":355,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":74,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":36,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":52,"org.easymock.tests2.MockedExceptionTest.testRealException":199,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":234,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":63,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":349,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":200,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":158,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":361,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":183,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":334,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":147,"org.easymock.tests2.UsageStrictMockTest.range":235,"org.easymock.tests2.UsageConstraintsTest.lessThan":189,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":384,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":218,"org.easymock.tests2.CaptureTest.testCaptureRightOne":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":371,"org.easymock.tests2.UsageConstraintsTest.testOr":171,"org.easymock.tests.UsageRangeTest.combination":49,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":155,"org.easymock.tests.UsageTest.wrongArguments":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":369,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":339,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":75,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":83,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":3,"org.easymock.tests.UsageVarargTest.varargShortAccepted":279,"org.easymock.tests2.UsageConstraintsTest.cmpTo":175,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":192,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":143,"org.easymock.tests2.CaptureTest.testCaptureFromStub":254,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":348,"org.easymock.tests.UsageTest.unexpectedCallWithArray":308,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":257,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":84,"org.easymock.tests2.UsageConstraintsTest.constraints":166,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":286,"org.easymock.samples.ExampleTest.addAndChangeDocument":134,"org.easymock.tests.UsageStrictMockTest.testVerify":258,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":288,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":285,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":272,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":125,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":359,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":76,"org.easymock.tests.LimitationsTest.abstractClass":329,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":126,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":56,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":223,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":275}}]
