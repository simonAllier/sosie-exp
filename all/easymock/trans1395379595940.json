[{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[0,1,2,3],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1708","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"failures":[4,5],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:354","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"failures":[6],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:62","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>()","type":"CtAssignmentImpl"},"failures":[7,8,9,10,11,12,13,14,4,15,16,17,18,19,20,21,22,23,24,25,0,1,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,5,57,58,59,60,61,62,63,64,65,66,67,68,69],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"method"}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[70,71,72,73,74],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:1964","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1409","sourceCode":"return float","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[75,76,77,78,79,80,81,82,9,83,84,85,10,11,12,13,14,4,15,16,17,18,20,21,22,23,24,25,0,1,26,27,28,29,30,31,32,33,34,35,36,37,38,39,42,43,44,45,47,48,86,87,88,89,90,91,2,92,50,93,94,95,96,97,98,99,51,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,70,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,53,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,71,72,73,167,168,55,56,169,170,171,172,173,174,175,176,177,178,179,180,57,58,59,60,61,62,63,66,67,68,181,182,183,184,185,186,187,188,189],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[95],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[190,191,192,193,194],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[75,195,76,77,196,78,197,198,199,200,201,79,202,203,80,204,205,206,207,81,82,208,209,210,211,7,212,8,213,214,9,215,83,84,216,217,218,219,220,221,222,223,224,225,85,226,227,228,229,230,231,10,11,12,13,232,14,4,15,16,17,18,19,20,21,22,23,24,25,0,1,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,86,233,234,235,87,236,88,89,90,91,2,92,237,190,50,238,239,240,93,94,95,241,242,96,243,97,98,99,51,100,101,102,103,104,105,106,107,108,109,110,111,112,244,245,113,246,247,114,248,115,116,249,250,117,251,118,119,120,252,121,3,122,123,124,253,254,70,125,255,256,126,257,258,259,260,261,262,127,263,264,265,266,267,268,128,129,130,131,269,132,133,134,270,135,136,271,272,273,274,137,275,276,138,277,278,279,280,281,282,283,284,285,139,286,287,288,289,290,140,291,292,293,294,295,296,297,298,299,141,300,301,302,303,304,142,305,306,307,308,309,143,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,52,53,327,144,145,328,329,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,330,331,332,333,54,334,166,71,72,73,335,336,337,167,338,168,55,56,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,74,359,360,361,362,363,364,365,366,367,169,170,368,171,369,370,371,372,373,374,172,173,174,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,175,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,176,177,424,425,178,179,426,427,180,428,429,430,431,432,433,434,435,436,437,438,5,57,58,59,60,61,439,440,441,62,63,64,65,66,67,68,181,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,69,182,466,183,184,185,186,187,188,467,468,469,470,471,472,473,474,475,476,477,478,479,189,480],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:346","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[350,467,470,471],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:356","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.lang.reflect.Type = java.lang.reflect.Type;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","this":"this","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if (java.lang.Object == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[0],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"expected":"actual","actual":"actual"}},{"transplant":{"position":"org.easymock.internal.Range:79","sourceCode":"return (int <= int) && (int <= int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"failures":[1,481],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"count":"result","minimum":"result","maximum":"result"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[64],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:373","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[74,408],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidClassProxyFactory:53","sourceCode":"throw new java.lang.RuntimeException((\"Fail to instantiate mock for \" + java.lang.Class<T>))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[75,195,76,77,196,78,197,198,201,79,202,203,80,204,205,206,207,81,82,208,209,210,211,7,212,8,213,214,9,215,83,84,216,217,218,219,220,221,222,223,224,225,85,226,227,228,229,230,231,10,11,12,13,232,14,4,15,16,17,18,19,20,21,22,23,24,25,0,1,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,86,233,234,235,87,236,49,88,89,90,91,2,92,237,190,50,239,240,93,94,95,241,242,97,98,99,51,100,101,102,103,104,105,106,107,108,109,110,111,112,244,245,113,246,247,114,248,115,116,250,117,251,118,119,120,252,121,3,122,123,124,253,254,70,125,255,256,126,257,258,259,260,261,262,127,263,264,265,266,267,268,128,129,131,132,270,136,271,272,273,137,276,138,277,278,281,284,139,286,287,288,289,290,140,293,294,295,296,297,298,299,141,300,301,302,303,304,142,305,306,307,308,309,143,310,311,312,313,314,315,316,317,482,318,319,320,321,322,323,483,324,325,326,52,53,327,144,145,328,329,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,330,331,332,333,54,334,166,71,72,73,335,336,337,167,338,168,55,56,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,74,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,172,173,174,375,376,377,378,379,380,381,384,385,386,387,388,389,390,175,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,176,177,424,425,178,179,426,427,180,428,429,430,431,432,433,434,435,436,437,438,5,57,58,59,60,61,439,440,441,62,63,64,65,66,67,68,181,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,69,182,466,183,184,185,186,187,188,467,468,469,470,471,472,473,474,475,476,477,478,479,189,480],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:138","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[322,484,485],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[344],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:59","sourceCode":"try {\n    return org.easymock.internal.Result.answer();\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    if (org.easymock.internal.Result.shouldFillInStackTrace()) {\n        throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable);\n    } \n    throw java.lang.Throwable;\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:60","sourceCode":"return org.easymock.internal.Result.answer()","type":"CtReturnImpl"},"failures":[118,123,255,256,126,257,142,330,331,332,333,54,334,338,56,174,176,179,64,65,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,182,183,184,185,186,187,188,478],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[257,478],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[243,486,487,488,489,490,491],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"failures":[492],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:104","sourceCode":"throw new java.lang.IllegalStateException(java.lang.String)","type":"CtThrowImpl"},"failures":[19],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"methodName":"message"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:41","sourceCode":"try {\n    return org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.readObject(org.easymock.internal.DefaultClassInstantiator.org.easymock.internal.DefaultClassInstantiator.getSerializedBytes(java.lang.Class<?>));\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.io.IOException);\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.ClassNotFoundException);\n}","type":"CtTryImpl"},"failures":[322,484,485],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[9,84,216,120,53,145,328,167,338,168,341,177,189],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[243,493,494,486,495,496,497,498,130,134,270],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"paramType"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":13,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":176,"org.easymock.tests2.UsageTest.argumentsOrdered":254,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":111,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":263,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":352,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":3,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":202,"org.easymock.tests2.DelegateToTest.testReturnException":299,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":331,"org.easymock.tests.MockingTest.testPartialClassMocking":169,"org.easymock.tests.MockClassControlTest.testToString":415,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":293,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":336,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":242,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":360,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":280,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":446,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":138,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":82,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":487,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":18,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":62,"org.easymock.tests2.UsageTest.wrongArguments":252,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":231,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":307,"org.easymock.samples.ExampleTest.answerVsDelegate":195,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":386,"org.easymock.tests2.UsageConstraintsTest.testNull":4,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":370,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":91,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":420,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":110,"org.easymock.tests2.CaptureTest.testPrimitive":38,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":66,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":465,"org.easymock.tests.UsageTest.moreThanOneArgument":177,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":90,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":315,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":467,"org.easymock.tests.UsageTest.argumentsOrdered":427,"org.easymock.tests.UsageVarargTest.varargIntAccepted":430,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":357,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":57,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":491,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":245,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":267,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":248,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":344,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":61,"org.easymock.tests.ReplayStateInvalidUsageTest.times":409,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":85,"org.easymock.tests2.DependencyTest.testClassMocking":206,"org.easymock.tests2.AnswerTest.answer":86,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":19,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":74,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":220,"org.easymock.tests2.CaptureTest.testAnd":35,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":383,"org.easymock.tests2.UsageTest.strictResetToDefault":119,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":494,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":240,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":314,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":105,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":72,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":471,"org.easymock.tests2.DelegateToTest.testDelegate":302,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":461,"org.easymock.tests.LimitationsTest.mockFinalMethod":391,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":54,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":445,"org.easymock.tests2.DependencyTest.testClassMockingSupport":207,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":339,"org.easymock.tests2.CaptureTest.testCapture1_2446744":39,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":190,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":459,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":218,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":403,"org.easymock.tests.UsageThrowableTest.throwError":182,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":385,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":268,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":317,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":497,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":292,"org.easymock.samples.PartialClassMockTest.testGetArea":79,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":404,"org.easymock.tests.MockingTest.testInterfaceMocking":368,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":58,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":373,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":447,"org.easymock.tests2.UsageTest.niceToStrict":121,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":281,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":380,"org.easymock.tests2.ThreadingTest.testChangeDefault":191,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":342,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":114,"org.easymock.tests2.MockBuilderTest.testCreateMock":250,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":288,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":228,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":455,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":106,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":382,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":474,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":392,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":305,"org.easymock.tests.UsageOverloadedMethodTest.overloading":173,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":290,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":478,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":24,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":172,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":157,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":484,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":23,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":44,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":431,"org.easymock.tests.MockClassControlTest.testEquals":419,"org.easymock.tests2.EasyMockSupportClassTest.testAll":137,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":310,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":463,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":443,"org.easymock.tests2.CaptureTest.testCaptureAll":36,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":219,"org.easymock.tests.MockNameTest.defaultName":440,"org.easymock.tests2.UsageConstraintsTest.testMatches":25,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":401,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":316,"org.easymock.samples.ExampleTest.voteForRemovals":78,"org.easymock.tests.UsageVarargTest.allKinds":5,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":167,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":444,"org.easymock.samples.BasicClassMockTest.testPrintContent":205,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":187,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":213,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":264,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":301,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":334,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":483,"org.easymock.tests2.UsageConstraintsTest.greaterThan":1,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":275,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":71,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":95,"org.easymock.samples.ExampleTest.voteForRemoval":76,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":324,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":98,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":241,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":387,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":237,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":441,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":118,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":249,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":349,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":103,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":183,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":273,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":330,"org.easymock.tests2.CaptureTest.testCaptureFirst":48,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":298,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":348,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":104,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":125,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":480,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":153,"org.easymock.tests2.UsageTest.moreThanOneArgument":120,"org.easymock.tests2.CaptureTest.testCapture2_2446744":47,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":51,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":117,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":359,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":438,"org.easymock.tests.GenericTest.testBridgedEquals":312,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":399,"org.easymock.tests.UsageExpectAndReturnTest.longType":149,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":181,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":101,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":464,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":439,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":30,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":462,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":422,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":313,"org.easymock.tests.UsageCallCountTest.tooManyCalls":400,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":394,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":289,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":154,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":230,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":451,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":186,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":129,"org.easymock.tests.MockingTest.testNiceClassMocking":371,"org.easymock.tests.MockingTest.testClassMocking":366,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":393,"org.easymock.tests2.UsageConstraintsTest.testContains":22,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":126,"org.easymock.tests2.UsageConstraintsTest.testFind":14,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":174,"org.easymock.tests.MockTypeTest.fromEasyMockClass":384,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":8,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":325,"org.easymock.tests.UsageExpectAndReturnTest.object":156,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":50,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":229,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":109,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":488,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":433,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":378,"org.easymock.tests.UsageTest.exactCallCountByLastCall":180,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":55,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":347,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":468,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":335,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":243,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":428,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":162,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":477,"org.easymock.tests.MockClassControlTest.testHashCode":418,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":259,"org.easymock.tests2.EasyMockSupportTest.testVerify":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":283,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":469,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":475,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":473,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":217,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":49,"org.easymock.tests.UsageVarargTest.varargCharAccepted":432,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":482,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":214,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":364,"org.easymock.tests2.UsageTest.openCallCountByLastCall":122,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":112,"org.easymock.tests.DefaultClassInstantiatorTest.object":318,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":472,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":376,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":453,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":284,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":184,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":224,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":258,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":417,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":93,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":452,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":163,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":421,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":416,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":140,"org.easymock.tests2.UsageTest.resumeIfFailure":70,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":381,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":333,"org.easymock.tests2.StubTest.stubWithReturnValue":142,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":486,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":155,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":31,"org.easymock.tests2.SerializationTest.testAllMockedMethod":271,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":358,"org.easymock.samples.SupportTest.voteForRemovals":80,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":309,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":261,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":458,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":363,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":233,"org.easymock.tests.UsageExpectAndThrowTest.object":456,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":337,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":28,"org.easymock.tests2.DelegateToTest.testWrongClass":300,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":67,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":68,"org.easymock.tests.UsageStrictMockTest.range":144,"org.easymock.samples.ConstructorCalledMockTest.testTax":199,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":210,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":108,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":128,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":457,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":115,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":426,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":411,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":272,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":306,"org.easymock.tests2.CaptureTest.testCaptureNone":43,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":374,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":192,"org.easymock.tests.UsageUnorderedTest.message":69,"org.easymock.tests.UsageVerifyTest.twoReturns":168,"org.easymock.tests.UsageVarargTest.varargByteAccepted":437,"org.easymock.tests2.ThreadingTest.testThreadSafe":97,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":286,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":397,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":204,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":379,"org.easymock.tests2.CaptureTest.testCapture_2617107":37,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":341,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":65,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":361,"org.easymock.tests2.UsageConstraintsTest.any":20,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":408,"org.easymock.tests2.StubTest.stub":304,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":423,"org.easymock.tests.UsageExpectAndThrowTest.longType":449,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":332,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":362,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":322,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":407,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":215,"org.easymock.tests2.SerializationTest.testClass":135,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":127,"org.easymock.tests.LimitationsTest.mockNativeMethod":175,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":165,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":311,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":223,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":216,"org.easymock.tests2.NameTest.nameForMocksControl":297,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":225,"org.easymock.tests2.MockedExceptionTest.testMockedException":256,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":276,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":179,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":450,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":171,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":212,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":88,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":116,"org.easymock.tests.MockingTest.testNicePartialClassMocking":170,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":92,"org.easymock.tests2.CaptureTest.testCaptureLast":42,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":221,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":340,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":134,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":17,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":29,"org.easymock.tests.MockingTest.testTwoMocks":367,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":270,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":146,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":454,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":253,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":33,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":194,"org.easymock.samples.ExampleTest.removeNonExistingDocument":197,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":405,"org.easymock.tests.UsageStrictMockTest.differentMethods":145,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":227,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":260,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":193,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":320,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":99,"org.easymock.tests2.MockBuilderTest.testCreateMockString":251,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":413,"org.easymock.tests.UsageExpectAndThrowTest.floatType":448,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":277,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":0,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":274,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":235,"org.easymock.tests.UsageVerifyTest.twoThrows":338,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":476,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":139,"org.easymock.samples.ExampleTest.voteAgainstRemoval":77,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":353,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":372,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":94,"org.easymock.tests.LimitationsTest.privateConstructor":390,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":498,"org.easymock.tests2.UsageConstraintsTest.testNotNull":32,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":188,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":255,"org.easymock.tests2.UsageTest.defaultResetToNice":124,"org.easymock.samples.ExampleTest.voteAgainstRemovals":75,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":161,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":354,"org.easymock.tests.UsageVarargTest.differentLength":434,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":222,"org.easymock.tests2.CallbackTest.callback":303,"org.easymock.tests2.UsageConstraintsTest.equals":232,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":238,"org.easymock.tests.UsageTest.openCallCountByLastCall":178,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":10,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":64,"org.easymock.tests.UsageCallCountTest.tooFewCalls":395,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":131,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":308,"org.easymock.tests.UsageThrowableTest.throwCheckedException":185,"org.easymock.tests.MockingTest.testStrictClassMocking":365,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":133,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":56,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":130,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":226,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":410,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":132,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":236,"org.easymock.tests.ObjectMethodsTest.testHashCode":377,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":490,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":100,"org.easymock.tests2.NameTest.nameForNiceMock":296,"org.easymock.tests2.DependencyTest.testInterfaceMocking":81,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":489,"org.easymock.samples.ExampleTest.addDocument":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":287,"org.easymock.tests2.DelegateToTest.testStubDelegate":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":291,"org.easymock.tests2.AnswerTest.stubAnswer":87,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":53,"org.easymock.tests.UsageVarargTest.varargLongAccepted":436,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":328,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":351,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":164,"org.easymock.tests.UsageExpectAndReturnTest.floatType":148,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":96,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":200,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":479,"org.easymock.tests.UsageThrowableTest.noUpperLimit":466,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":26,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":266,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":11,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":208,"org.easymock.tests2.SerializationTest.test":136,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":40,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":485,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":319,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":147,"org.easymock.tests2.UsageConstraintsTest.testSame":15,"org.easymock.samples.SupportTest.addDocument":203,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":269,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":278,"org.easymock.tests.GenericTest.testPackageScope":143,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":470,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":346,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":265,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":369,"org.easymock.tests2.NameTest.nameForMock":294,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":158,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":496,"org.easymock.tests2.UsageStrictMockTest.differentMethods":84,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":239,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":150,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":460,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":375,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":73,"org.easymock.tests2.MockedExceptionTest.testRealException":257,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":388,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":211,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":356,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":9,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":355,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":412,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":63,"org.easymock.tests2.NameTest.nameForStrictMock":295,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":247,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":7,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":2,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":209,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":27,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":321,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":113,"org.easymock.tests2.UsageStrictMockTest.range":83,"org.easymock.tests2.UsageConstraintsTest.lessThan":34,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":492,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":262,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":102,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":350,"org.easymock.tests2.CaptureTest.testCaptureRightOne":45,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":282,"org.easymock.tests2.UsageConstraintsTest.testOr":16,"org.easymock.tests.UsageRangeTest.combination":166,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":89,"org.easymock.tests.UsageTest.wrongArguments":425,"org.easymock.tests2.MockBuilderTest.testWithConstructor":493,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":279,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":414,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":151,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":159,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":343,"org.easymock.tests.UsageVarargTest.varargShortAccepted":435,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":323,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":398,"org.easymock.tests2.UsageConstraintsTest.cmpTo":21,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":234,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":345,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":123,"org.easymock.tests2.CaptureTest.testCaptureFromStub":46,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":402,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":246,"org.easymock.tests.UsageTest.unexpectedCallWithArray":424,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":52,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":396,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":495,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":160,"org.easymock.tests2.CaptureTest.testCapture":6,"org.easymock.tests2.UsageConstraintsTest.constraints":12,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":327,"org.easymock.samples.ExampleTest.addAndChangeDocument":198,"org.easymock.tests.UsageStrictMockTest.testVerify":329,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":201,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":326,"org.easymock.tests2.CompareToTest.testGreateThan":481,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":442,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":41,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":59,"org.easymock.tests.LimitationsTest.abstractClass":389,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":152,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":189,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":60,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":429,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":107}}]
