[{"position":"org.easymock.internal.LastControl:124","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:103","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"failures":[295],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.LessOrEqual:39","failures":[13,15,30,36,296],"status":-1,"binaryOperator":"int <= 0","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"failures":[297,298,299,300,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,42,43,47,48,49,50,51,52,53,54,55,56,57,59,60,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,301,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,131,132,134,135,138,139,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,171,172,173,174,175,176,177,179,180,181,182,183,184,185,186,302,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,303,304,305,216,217,218,219,223,224,306,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,307,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,308,280,281,282,283,284,285,286,287,288,289,290,309],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[49,50,51,310],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:243","sourceCode":"if (java.lang.Object == null) {\n    final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType();\n    if (java.lang.Class<?>.isPrimitive()) {\n        throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n    } \n    return ;\n} ","type":"CtIfImpl"},"failures":[170,184,311,312],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[93,194,313,314,315],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[316],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:205","sourceCode":"java.lang.reflect.Constructor<?>.setAccessible(true)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[317,318],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:188","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"failures":[319,320,321,322,323,324],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"failures":[297,298,299,300,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,325,326,42,43,46,47,48,49,50,51,52,53,54,55,56,57,58,59,327,60,61,62,63,328,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,329,330,331,332,333,301,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,131,132,134,135,138,139,149,150,151,152,153,154,334,155,156,157,158,159,160,161,162,163,164,165,166,167,168,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,302,187,188,189,190,191,192,193,194,195,335,336,337,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,338,303,339,340,341,342,343,344,304,305,216,217,218,219,220,221,222,345,346,347,348,349,350,223,224,351,352,313,353,306,354,316,355,356,357,358,359,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,307,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,360,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,308,361,280,281,282,283,284,285,286,287,362,363,288,289,364,290,365,366,367,291,368,292,293,309,294],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[369],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:122","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:57","sourceCode":"final java.lang.Object java.lang.Object = java.lang.Object[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:106","sourceCode":"if (java.lang.Class<?>[] == null) {\n    if (java.lang.reflect.Method != null) {\n        throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n    } \n    java.lang.reflect.Method = java.lang.reflect.Method;\n} else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[40,370,41,325,326,42,43,44,45,371,46,47,372,48,49,51,52,53,55,56,57,58,59,373,327,60,61,62,63,328,374,375,332,376,377,378,379,380,95,96,97,99,324,381,382,383,107,384,385,108,386,387,388,389,390,391,392,393,394,109,395,396,397,398,399,110,400,401,133,134,135,136,138,139,140,141,142,142,143,143,145,402,184,185,311,403,404,338,303,339,340,341,342,343,344,345,348,405,406,225,407,240,360,408,409,410,411,412,413,362,363,414,288,289,290,367],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[49,50,51],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Invocation:126","sourceCode":"if (java.lang.Object != java.lang.Object) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[26],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"otherArgument":"expected","myArgument":"actual"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.LastControl:92","failures":[295],"status":-1,"binaryOperator":"(\"\" + int)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[94,95,96,97,98,190,193,250,251,252,253,254,255],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:48","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"toString\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:36","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Character.java.lang.Class<java.lang.Character>.getName(), java.lang.Character.java.lang.Class<java.lang.Character>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[415,416,417,418,234,243],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:36","failures":[419,297,298,299,300,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,420,17,18,19,20,21,22,295,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,421,41,325,422,326,42,43,44,319,45,423,371,46,47,424,48,49,50,51,52,53,54,55,56,57,58,425,59,373,327,60,61,62,63,328,374,64,65,66,67,68,69,70,71,72,426,73,74,75,427,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,375,329,330,331,332,428,333,301,429,430,91,92,93,94,95,96,97,98,99,324,431,100,101,102,103,104,105,106,381,382,383,107,384,385,108,386,387,388,389,390,391,392,393,394,109,395,396,397,398,399,110,400,401,432,433,434,435,436,111,437,438,439,440,441,442,112,113,114,115,116,117,118,119,120,121,122,123,124,125,443,444,126,127,128,445,446,447,448,449,129,450,451,452,453,454,455,130,456,131,132,133,134,135,136,457,137,138,139,458,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,334,155,156,157,158,159,160,161,162,163,164,165,166,167,168,459,460,461,462,170,171,172,173,174,175,463,176,177,178,179,180,181,182,183,402,184,185,311,403,464,186,302,187,188,189,190,191,192,193,194,195,465,335,336,337,466,404,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,338,303,339,340,341,342,343,344,304,305,216,217,218,219,220,221,222,345,467,468,346,347,348,349,350,223,224,469,470,317,471,472,351,352,313,353,306,354,316,355,356,357,358,359,405,406,225,407,473,474,312,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,314,490,491,318,492,493,494,315,495,496,497,498,226,227,228,229,230,231,232,233,234,235,236,237,238,239,307,240,241,242,243,244,245,246,247,248,249,499,500,501,250,251,252,253,254,255,256,257,258,259,502,360,408,409,410,411,412,503,413,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,504,308,361,280,281,282,283,284,285,286,287,505,362,363,414,288,289,364,290,365,366,367,291,368,292,293,506,309,294],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:117","failures":[125,126,128,130,131,132,150,291],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[26],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String)","type":"CtInvocationImpl"},"failures":[297,298,299,300,102,104,105,114,115,121,122,226,234,235,237,238,507,508,509,242,244,247,248,280,281,282],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:93","failures":[40,370,41,325,42,43,44,45,46,47,372,48,49,51,52,53,55,56,57,58,59,60,61,62,63,376,378,379,97,99,107,108,109,110,133,134,135,136,138,139,140,141,142,142,143,143,145,184,185,311,303,345,348,225,240,414,288,289,290],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[18,19,295,23,32,33,37,38],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[184,311,403],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"type":"leafClass"}},{"transplant":{"position":"org.easymock.EasyMock:1408","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[40,370,41,325,326,42,43,44,45,371,46,47,372,48,49,51,52,53,55,56,57,58,59,373,327,60,61,62,63,328,374,375,332,378,95,96,97,99,324,381,382,383,107,384,385,108,386,387,388,389,390,391,392,393,394,109,395,396,397,398,399,110,400,401,133,134,135,136,138,139,140,141,142,142,143,143,145,402,184,185,311,403,404,338,303,339,340,341,342,343,344,345,348,405,406,225,407,240,360,408,409,410,411,412,413,362,363,414,288,289,290,367],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:122","sourceCode":"final java.util.List<org.easymock.internal.ErrorMessage> java.util.List<org.easymock.internal.ErrorMessage> = new java.util.ArrayList<org.easymock.internal.ErrorMessage>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:241","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:188","sourceCode":"try {\n    java.lang.Long = ((java.lang.Long)(java.lang.reflect.Method.invoke(null, new java.lang.Object[]{ java.lang.Class<?> })));\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" should have been accessible\"));\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.InternalError((((\"ObjectStreamClass.\" + java.lang.String) + \" failled to be called: \") + (java.lang.reflect.InvocationTargetException.getMessage())));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method","bridgeMethod":"method"}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String).append(\", actual: \")","type":"CtInvocationImpl"},"failures":[297,298,299,300,102,104,105,114,115,121,122,226,234,235,237,238,507,508,509,242,244,247,248,280,281,282],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1319","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1531","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[15,16,20,21,295,32,77,79,87],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"failures":[510],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"failures":[420],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[511],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[95,96,97,98,190,193,358,499,500,501,250,251,252,253,254,255],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[426,427],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":16,"org.easymock.tests2.UsageTest.argumentsOrdered":122,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":241,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":10,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":450,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":485,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":117,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":144,"org.easymock.tests2.DelegateToTest.testReturnException":73,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":251,"org.easymock.tests.MockingTest.testPartialClassMocking":288,"org.easymock.tests.MockClassControlTest.testToString":339,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":419,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":460,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":492,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":374,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":389,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":108,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":196,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":507,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":92,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":320,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":22,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":191,"org.easymock.tests2.UsageTest.wrongArguments":115,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":442,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":258,"org.easymock.samples.ExampleTest.answerVsDelegate":150,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":348,"org.easymock.tests2.UsageConstraintsTest.testNull":18,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":366,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":55,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":9,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":344,"org.easymock.tests2.CaptureTest.testPrimitive":80,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":195,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":215,"org.easymock.tests.UsageTest.moreThanOneArgument":242,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":54,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":285,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":469,"org.easymock.tests.UsageTest.argumentsOrdered":248,"org.easymock.tests.UsageVarargTest.varargIntAccepted":175,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":314,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":164,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":40,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":454,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":330,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":43,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":477,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":168,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":111,"org.easymock.tests.ReplayStateInvalidUsageTest.times":356,"org.easymock.tests2.DependencyTest.testClassMocking":429,"org.easymock.tests2.AnswerTest.answer":125,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":491,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":67,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":468,"org.easymock.tests2.CaptureTest.testAnd":77,"org.easymock.tests2.UsageTest.strictResetToDefault":113,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":422,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":60,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":284,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":187,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":4,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":472,"org.easymock.tests2.DelegateToTest.testDelegate":76,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":211,"org.easymock.tests.LimitationsTest.mockFinalMethod":407,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":254,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":231,"org.easymock.tests2.DependencyTest.testClassMockingSupport":430,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":504,"org.easymock.tests2.CaptureTest.testCapture1_2446744":81,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":425,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":209,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":65,"org.easymock.tests.UsageThrowableTest.throwError":156,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":313,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":347,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":464,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":455,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":287,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":401,"org.easymock.samples.PartialClassMockTest.testGetArea":145,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":353,"org.easymock.tests.MockingTest.testInterfaceMocking":364,"org.easymock.tests2.CompareToTest.testLessOrEqual":296,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":165,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":474,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":404,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":390,"org.easymock.tests2.UsageTest.niceToStrict":116,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":197,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":475,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":42,"org.easymock.tests2.MockBuilderTest.testCreateMock":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":397,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":439,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":415,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":205,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":5,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":467,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":498,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":304,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":256,"org.easymock.tests.UsageOverloadedMethodTest.overloading":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":394,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":27,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":293,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":170,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":271,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":26,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":369,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":86,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":463,"org.easymock.tests2.EasyMockSupportClassTest.testAll":107,"org.easymock.tests.MockClassControlTest.testEquals":343,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":185,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":213,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":376,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":66,"org.easymock.tests2.CaptureTest.testCaptureAll":78,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":229,"org.easymock.tests.MockNameTest.defaultName":505,"org.easymock.tests2.UsageConstraintsTest.testMatches":28,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":286,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":351,"org.easymock.samples.ExampleTest.voteForRemovals":154,"org.easymock.tests.UsageVarargTest.allKinds":183,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":280,"org.easymock.samples.BasicClassMockTest.testPrintContent":141,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":230,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":162,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":100,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":451,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":427,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":255,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":503,"org.easymock.tests2.UsageConstraintsTest.greaterThan":30,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":323,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":384,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":302,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":63,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":413,"org.easymock.samples.ExampleTest.voteForRemoval":151,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":69,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":328,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":349,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":331,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":58,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":112,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":240,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":371,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":482,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":2,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":382,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":250,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":426,"org.easymock.tests2.CaptureTest.testCaptureFirst":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":481,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":3,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":124,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":294,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":267,"org.easymock.tests2.UsageTest.moreThanOneArgument":114,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":71,"org.easymock.tests2.CaptureTest.testCapture2_2446744":89,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":47,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":318,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":182,"org.easymock.tests.GenericTest.testBridgedEquals":403,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":221,"org.easymock.tests.UsageExpectAndReturnTest.longType":263,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":0,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":227,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":214,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":372,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":462,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":35,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":212,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":500,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":283,"org.easymock.tests.UsageCallCountTest.tooManyCalls":222,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":398,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":268,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":441,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":201,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":161,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":134,"org.easymock.tests.MockingTest.testNiceClassMocking":367,"org.easymock.tests.MockingTest.testClassMocking":363,"org.easymock.tests2.UsageConstraintsTest.testContains":25,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":305,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":370,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":97,"org.easymock.tests2.UsageConstraintsTest.testFind":17,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":172,"org.easymock.tests.MockTypeTest.fromEasyMockClass":346,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":131,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":232,"org.easymock.tests.UsageExpectAndReturnTest.object":270,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":59,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":440,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":8,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":177,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":321,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":337,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":511,"org.easymock.tests.UsageTest.exactCallCountByLastCall":249,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":189,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":480,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":470,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":459,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":324,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":173,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":276,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":292,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":446,"org.easymock.tests.MockClassControlTest.testHashCode":342,"org.easymock.tests2.EasyMockSupportTest.testVerify":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":392,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":317,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":497,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":291,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":64,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":301,"org.easymock.tests.UsageVarargTest.varargCharAccepted":176,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":502,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":101,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":495,"org.easymock.tests2.UsageTest.openCallCountByLastCall":118,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":11,"org.easymock.tests.DefaultClassInstantiatorTest.object":360,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":496,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":335,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":393,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":203,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":159,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":380,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":435,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":445,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":61,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":341,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":202,"org.easymock.tests.CapturesMatcherTest.test":169,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":277,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":499,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":110,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":340,"org.easymock.tests2.UsageTest.resumeIfFailure":123,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":345,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":329,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":253,"org.easymock.tests2.StubTest.stubWithReturnValue":94,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":319,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":36,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":269,"org.easymock.tests2.SerializationTest.testAllMockedMethod":51,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":490,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":416,"org.easymock.samples.SupportTest.voteForRemovals":148,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":402,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":448,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":208,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":310,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":315,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":443,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":461,"org.easymock.tests.UsageExpectAndThrowTest.object":206,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":33,"org.easymock.tests2.DelegateToTest.testWrongClass":75,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":223,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":224,"org.easymock.samples.ConstructorCalledMockTest.testTax":142,"org.easymock.tests.UsageStrictMockTest.range":237,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":428,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":7,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":133,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":207,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":44,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":247,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":381,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":257,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":417,"org.easymock.tests2.CaptureTest.testCaptureNone":85,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":312,"org.easymock.tests.UsageUnorderedTest.message":226,"org.easymock.tests.UsageVerifyTest.twoReturns":282,"org.easymock.tests.UsageVarargTest.varargByteAccepted":181,"org.easymock.tests2.ThreadingTest.testThreadSafe":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":395,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":219,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":466,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":140,"org.easymock.tests2.CaptureTest.testCapture_2617107":79,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":493,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":194,"org.easymock.tests2.UsageConstraintsTest.any":23,"org.easymock.tests2.StubTest.stub":93,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":355,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":501,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":494,"org.easymock.tests.UsageExpectAndThrowTest.longType":199,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":252,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":411,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":316,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":103,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":129,"org.easymock.tests2.SerializationTest.testClass":49,"org.easymock.tests.LimitationsTest.mockNativeMethod":225,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":279,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":311,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":434,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":379,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":106,"org.easymock.tests2.NameTest.nameForMocksControl":300,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":436,"org.easymock.tests2.MockedExceptionTest.testMockedException":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":385,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":246,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":456,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":200,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":290,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":52,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":45,"org.easymock.tests.MockingTest.testNicePartialClassMocking":289,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":57,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":432,"org.easymock.tests2.CaptureTest.testCaptureLast":84,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":308,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":139,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":21,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":34,"org.easymock.tests.MockingTest.testTwoMocks":414,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":458,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":260,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":204,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":121,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":38,"org.easymock.samples.ExampleTest.removeNonExistingDocument":334,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":438,"org.easymock.tests.UsageStrictMockTest.differentMethods":238,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":306,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":447,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":409,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":70,"org.easymock.tests2.MockBuilderTest.testCreateMockString":48,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":338,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":386,"org.easymock.tests.UsageExpectAndThrowTest.floatType":198,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":383,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":126,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":431,"org.easymock.tests.UsageVerifyTest.twoThrows":281,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":368,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":109,"org.easymock.samples.ExampleTest.voteAgainstRemoval":152,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":486,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":473,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":62,"org.easymock.tests.LimitationsTest.privateConstructor":406,"org.easymock.tests2.UsageConstraintsTest.testNotNull":37,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":163,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":95,"org.easymock.tests2.UsageTest.defaultResetToNice":120,"org.easymock.samples.ExampleTest.voteAgainstRemovals":149,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":487,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":275,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":433,"org.easymock.tests.UsageVarargTest.differentLength":178,"org.easymock.tests2.CallbackTest.callback":132,"org.easymock.tests2.UsageConstraintsTest.equals":420,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":373,"org.easymock.tests.UsageTest.openCallCountByLastCall":245,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":13,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":193,"org.easymock.tests.UsageCallCountTest.tooFewCalls":217,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":136,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":259,"org.easymock.tests.UsageThrowableTest.throwCheckedException":160,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":418,"org.easymock.tests.MockingTest.testStrictClassMocking":362,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":190,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":138,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":437,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":135,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":357,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":137,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":128,"org.easymock.tests.ObjectMethodsTest.testHashCode":336,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":72,"org.easymock.tests2.NameTest.nameForNiceMock":299,"org.easymock.tests2.DependencyTest.testInterfaceMocking":91,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":322,"org.easymock.samples.ExampleTest.addDocument":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":396,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":400,"org.easymock.tests2.DelegateToTest.testStubDelegate":74,"org.easymock.tests2.AnswerTest.stubAnswer":127,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":235,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":423,"org.easymock.tests.UsageVarargTest.varargLongAccepted":180,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":239,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":484,"org.easymock.tests.UsageExpectAndReturnTest.floatType":262,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":278,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":99,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":143,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":506,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":453,"org.easymock.tests.UsageThrowableTest.noUpperLimit":157,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":31,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":14,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":375,"org.easymock.tests2.SerializationTest.test":50,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":82,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":408,"org.easymock.tests2.UsageConstraintsTest.testSame":19,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":261,"org.easymock.samples.SupportTest.addDocument":147,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":457,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":387,"org.easymock.tests.GenericTest.testPackageScope":184,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":471,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":479,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":452,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":365,"org.easymock.tests2.NameTest.nameForMock":297,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":272,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":424,"org.easymock.tests2.UsageStrictMockTest.differentMethods":105,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":327,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":264,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":210,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":465,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":188,"org.easymock.tests2.MockedExceptionTest.testRealException":98,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":350,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":489,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":333,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":488,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":102,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":192,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":359,"org.easymock.tests2.NameTest.nameForStrictMock":298,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":326,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":130,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":56,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":332,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":508,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":410,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":32,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":41,"org.easymock.tests2.UsageStrictMockTest.range":104,"org.easymock.tests2.UsageConstraintsTest.lessThan":39,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":377,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":449,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":483,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":1,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":391,"org.easymock.tests2.CaptureTest.testCaptureRightOne":87,"org.easymock.tests2.UsageConstraintsTest.testOr":20,"org.easymock.tests.UsageRangeTest.combination":186,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":53,"org.easymock.tests.UsageTest.wrongArguments":244,"org.easymock.tests2.MockBuilderTest.testWithConstructor":421,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":388,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":303,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":265,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":476,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":273,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":412,"org.easymock.tests.UsageVarargTest.varargShortAccepted":179,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":220,"org.easymock.tests2.UsageConstraintsTest.cmpTo":24,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":444,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":478,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":119,"org.easymock.tests2.CaptureTest.testCaptureFromStub":88,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":352,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":325,"org.easymock.tests.UsageTest.unexpectedCallWithArray":243,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":234,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":218,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":274,"org.easymock.tests2.CaptureTest.testCapture":510,"org.easymock.tests2.UsageConstraintsTest.constraints":15,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":236,"org.easymock.samples.ExampleTest.addAndChangeDocument":155,"org.easymock.tests.UsageStrictMockTest.testVerify":307,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":146,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":233,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":228,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":83,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":166,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":378,"org.easymock.tests.LimitationsTest.abstractClass":405,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":266,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":167,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":309,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":509,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":174,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":6}}]
