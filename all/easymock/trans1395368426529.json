[{"transplant":{"position":"org.easymock.internal.UnorderedBehavior:44","sourceCode":"final org.easymock.internal.Results org.easymock.internal.Results = new org.easymock.internal.Results()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:36","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(char.char, java.lang.Character.java.lang.Character)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:52","sourceCode":"java.lang.InstantiationException java.lang.InstantiationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:178","failures":[66,67],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[68,69],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,4,5,6,7,8,100,101,102,103,10,15,16,18,104,105,106,107,108,109,110,111,112,67,113,114,115,116,117,118,119,120,64,121,122,123,124,125,126,127,128,129,130,65,131,132,133,134,135,136],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"type":"returnedType"}},{"transplant":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:61","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>);\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,106,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:96","sourceCode":"return java.lang.Class<?>.getConstructors()[0]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:89","sourceCode":"try {\n    return java.lang.Class<?>.getConstructor(new java.lang.Class[0]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    if ((java.lang.Class<?>.getConstructors().int) == 0) {\n        throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n    } \n    return java.lang.Class<?>.getConstructors()[0];\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"clazz"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:251","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[137,138,139,140],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[70,71,72,73,74,75,141,142,76,143,144,145,146,147,148,149,150,151,2,152,153,154,155,156,157,158,81,82,83,84,85,86,87,88,89,159,160,90,91,161,92,93,94,162,95,96,97,98,99,4,5,6,7,8,163,164,100,101,102,103,10,11,14,15,16,165,18,104,105,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,186,187,188,189,106,190,191,48,49,51,52,55,56,57,58,60,61,107,108,192,193,109,110,111,112,67,113,194,195,196,197,198,199,200,201,202,114,203,139,115,116,117,118,119,120,64,121,122,123,124,125,126,127,128,129,130,204,65,131,132,133,134,135,136],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"failures":[205,206,207,1,148,208,209,210,163,211,164,17,18,104,105,196,212,213,214,215,216,217,218,65,131,132],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[36,219,119],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[220,221,222,223,224],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:71","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:90","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[225,226,227],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1361","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2143","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[70,71,72,73,74,75,141,142,76,143,144,145,146,147,148,149,150,151,2,152,153,154,155,156,157,158,81,82,83,84,85,86,87,88,89,159,160,90,91,161,92,93,94,162,95,96,97,98,99,4,5,6,7,8,163,164,100,101,102,103,10,11,14,15,16,165,18,104,105,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,186,187,188,189,106,190,191,48,49,51,52,55,56,57,58,60,61,107,108,192,193,109,110,111,112,67,113,194,195,196,197,198,199,200,201,202,114,203,139,115,116,117,118,119,120,64,121,122,123,124,125,126,127,128,129,130,204,65,131,132,133,134,135,136],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:233","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[116],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","name":"name","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:182","sourceCode":"if (java.lang.reflect.Proxy.java.lang.reflect.Proxy.isProxyClass(V.getClass())) {\n    return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]));\n} ","type":"CtIfImpl"},"failures":[1,228,148,229,208,209,210,163,211,164,230,231,232,233,17,18,104,105,234,235,236,186,191,196,212,213,214,65,131,132],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[17,237],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:999","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Byte>(byte))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[72,238,73,74,239,75,240,241,242,243,244,245,141,246,76,247,248,249,250,0,251,252,253,254,255,256,257,258,77,78,79,80,259,144,145,148,2,260,153,81,82,83,84,85,86,87,88,89,159,160,90,91,161,92,93,94,162,95,96,97,98,99,4,5,6,7,8,163,211,164,261,262,263,264,265,266,267,268,269,9,270,100,101,102,103,10,11,14,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,15,16,165,292,293,294,295,296,18,105,297,298,299,300,185,301,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,187,188,190,48,49,50,51,53,54,55,56,57,58,61,107,192,193,302,303,109,304,305,306,307,308,309,111,310,195,196,197,219,200,201,114,203,311,139,140,62,63,115,117,118,119,120,64,312,122,125,126,129,130,313,204,314,215,216,217,218,315,65,132,316],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[206,207,1,211,164,104,131],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[70,317,318,319,320,320,321,321,322,323,71,72,238,73,74,239,75,324,240,325,326,327,328,329,241,242,243,244,245,68,141,246,142,69,330,331,76,332,247,248,249,250,0,251,252,253,254,255,256,257,333,334,335,1,336,337,338,339,340,341,342,343,344,345,346,347,258,77,78,79,80,259,143,144,145,348,146,349,228,147,148,229,208,149,150,209,210,151,2,3,350,351,352,152,260,153,154,155,156,157,158,353,354,355,356,357,358,359,360,361,362,81,82,363,83,364,365,366,84,85,86,87,88,89,159,160,90,91,161,92,93,94,162,95,96,97,98,99,4,5,6,7,8,163,211,164,261,262,263,367,264,265,368,266,267,268,269,9,369,270,370,371,372,373,374,375,100,101,102,103,10,11,12,13,14,230,231,271,66,232,225,376,377,233,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,378,15,16,379,380,381,382,383,165,384,385,386,387,292,293,294,295,388,296,17,18,389,104,105,297,298,390,166,167,391,234,392,393,235,394,395,396,397,398,399,400,137,401,402,168,403,169,404,405,406,407,408,409,410,411,170,171,412,172,173,174,175,176,177,178,179,180,181,182,183,184,413,414,415,236,416,299,300,185,301,19,20,21,22,417,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,418,419,420,421,422,186,226,423,424,425,426,427,187,188,189,106,190,428,429,430,431,432,191,227,433,434,435,436,437,48,49,50,51,52,53,54,55,56,57,58,59,60,61,438,439,107,108,192,193,302,440,303,109,441,442,304,305,306,307,308,309,110,443,444,111,310,112,67,445,446,113,447,194,195,196,212,197,219,198,199,200,213,214,201,202,114,448,203,138,449,311,139,140,62,450,63,115,116,117,118,119,120,451,452,64,453,454,312,121,122,123,455,456,124,125,126,127,128,129,130,313,204,314,457,215,216,217,218,458,315,65,459,131,132,316,460,461,462,133,463,464,134,465,466,467,468,469,470,471,472,473,135,474,475,476,477,478,136,479,480],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:42","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[481,482,483],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.LastControl:93","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.LinkedList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:188","sourceCode":"try {\n    java.lang.Long = ((java.lang.Long)(java.lang.reflect.Method.invoke(null, new java.lang.Object[]{ java.lang.Class<?> })));\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" should have been accessible\"));\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.InternalError((((\"ObjectStreamClass.\" + java.lang.String) + \" failled to be called: \") + (java.lang.reflect.InvocationTargetException.getMessage())));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[24,29,39,44],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.Range:70","failures":[],"status":-2,"binaryOperator":"((\"between \" + (int)) + \" and \")","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:58","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>, java.lang.Boolean.java.lang.Boolean)","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":-2,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[1,484,229,208,209,210,211,164,17,104,212,213,214,131],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:35","sourceCode":"new org.easymock.internal.JavaProxyFactory()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResult:25","sourceCode":"-1951159588262854559L","type":"CtUnaryOperatorImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:49","sourceCode":"java.lang.StringBuffer.append((((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\"))","type":"CtInvocationImpl"},"failures":[485,486,487,488,489],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:116","sourceCode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[206,207,1,211,164,104,131],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1915","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<T>(org.easymock.Capture<T>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"captured"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[13,407,313],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":22,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":147,"org.easymock.tests2.UsageTest.argumentsOrdered":214,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":183,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":226,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":403,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":219,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":319,"org.easymock.tests2.DelegateToTest.testReturnException":303,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":248,"org.easymock.tests.MockingTest.testPartialClassMocking":81,"org.easymock.tests.MockClassControlTest.testToString":370,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":457,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":146,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":456,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":411,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":468,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":134,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":272,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":205,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":108,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":28,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":10,"org.easymock.tests2.UsageTest.wrongArguments":212,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":437,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":294,"org.easymock.samples.ExampleTest.answerVsDelegate":238,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":376,"org.easymock.tests2.UsageConstraintsTest.testNull":24,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":365,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":118,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":182,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":375,"org.easymock.tests2.CaptureTest.testPrimitive":51,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":14,"org.easymock.tests.UsageTest.moreThanOneArgument":148,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":291,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":117,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":79,"org.easymock.tests.UsageTest.argumentsOrdered":210,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":325,"org.easymock.tests.UsageVarargTest.varargIntAccepted":263,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":407,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":4,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":224,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":309,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":426,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":310,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":397,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":8,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":483,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":191,"org.easymock.tests.ReplayStateInvalidUsageTest.times":344,"org.easymock.tests2.DependencyTest.testClassMocking":438,"org.easymock.tests2.AnswerTest.answer":203,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":29,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":409,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":308,"org.easymock.tests2.CaptureTest.testAnd":48,"org.easymock.tests2.UsageTest.strictResetToDefault":195,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":312,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":78,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":177,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":102,"org.easymock.tests2.DelegateToTest.testDelegate":304,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":329,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":287,"org.easymock.tests.LimitationsTest.mockFinalMethod":332,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":0,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":245,"org.easymock.tests2.DependencyTest.testClassMockingSupport":439,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":230,"org.easymock.tests2.CaptureTest.testCapture1_2446744":52,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":452,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":285,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":306,"org.easymock.tests.UsageThrowableTest.throwError":152,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":338,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":225,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":427,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":259,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":480,"org.easymock.samples.PartialClassMockTest.testGetArea":70,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":339,"org.easymock.tests.MockingTest.testInterfaceMocking":363,"org.easymock.tests2.CompareToTest.testLessOrEqual":489,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":5,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":166,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":469,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":394,"org.easymock.tests2.UsageTest.niceToStrict":197,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":273,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":395,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":111,"org.easymock.tests2.MockBuilderTest.testCreateMock":446,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":476,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":434,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":237,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":281,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":178,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":352,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":252,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":292,"org.easymock.tests.UsageOverloadedMethodTest.overloading":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":478,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":473,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":34,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":382,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":143,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":92,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":33,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":57,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":367,"org.easymock.tests2.EasyMockSupportClassTest.testAll":133,"org.easymock.tests.MockClassControlTest.testEquals":374,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":246,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":289,"org.easymock.tests2.CaptureTest.testCaptureAll":49,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":243,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":307,"org.easymock.tests.MockNameTest.defaultName":228,"org.easymock.tests2.UsageConstraintsTest.testMatches":35,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":80,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":336,"org.easymock.samples.ExampleTest.voteForRemovals":75,"org.easymock.tests.UsageVarargTest.allKinds":9,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":163,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":244,"org.easymock.samples.BasicClassMockTest.testPrintContent":318,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":157,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":458,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":442,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":423,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":251,"org.easymock.tests2.UsageConstraintsTest.greaterThan":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":463,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":101,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":123,"org.easymock.samples.ExampleTest.voteForRemoval":73,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":359,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":455,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":188,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":377,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":451,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":194,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":258,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":445,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":401,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":175,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":461,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":247,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":440,"org.easymock.tests2.CaptureTest.testCaptureFirst":61,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":137,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":176,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":202,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":384,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":160,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":106,"org.easymock.tests2.CaptureTest.testCapture2_2446744":60,"org.easymock.tests2.UsageTest.moreThanOneArgument":196,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":410,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":113,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":269,"org.easymock.tests.GenericTest.testBridgedEquals":69,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":334,"org.easymock.tests.UsageExpectAndReturnTest.longType":87,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":173,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":241,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":290,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":42,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":378,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":288,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":386,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":77,"org.easymock.tests.UsageCallCountTest.tooManyCalls":335,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":481,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":254,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":477,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":90,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":436,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":277,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":156,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":125,"org.easymock.tests.MockingTest.testNiceClassMocking":366,"org.easymock.tests.MockingTest.testClassMocking":361,"org.easymock.tests2.UsageConstraintsTest.testContains":32,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":253,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":185,"org.easymock.tests2.UsageConstraintsTest.testFind":23,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":145,"org.easymock.tests.MockTypeTest.fromEasyMockClass":232,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":388,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":63,"org.easymock.tests.UsageExpectAndReturnTest.object":161,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":64,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":435,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":181,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":265,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":393,"org.easymock.tests.UsageTest.exactCallCountByLastCall":151,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":2,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":400,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":326,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":348,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":448,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":96,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":261,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":381,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":419,"org.easymock.tests.MockClassControlTest.testHashCode":373,"org.easymock.tests2.EasyMockSupportTest.testVerify":413,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":471,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":482,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":327,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":351,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":379,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":305,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":47,"org.easymock.tests.UsageVarargTest.varargCharAccepted":264,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":315,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":172,"org.easymock.tests2.UsageTest.openCallCountByLastCall":198,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":184,"org.easymock.tests.DefaultClassInstantiatorTest.object":353,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":350,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":234,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":484,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":472,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":279,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":154,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":431,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":418,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":121,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":372,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":278,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":97,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":136,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":371,"org.easymock.tests2.UsageTest.resumeIfFailure":201,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":66,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":250,"org.easymock.tests2.StubTest.stubWithReturnValue":204,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":43,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":91,"org.easymock.tests2.SerializationTest.testAllMockedMethod":302,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":408,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":221,"org.easymock.samples.SupportTest.voteForRemovals":71,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":68,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":421,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":284,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":412,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":138,"org.easymock.tests.UsageExpectAndThrowTest.object":282,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":349,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":40,"org.easymock.tests2.DelegateToTest.testWrongClass":441,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":15,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":16,"org.easymock.tests.UsageStrictMockTest.range":104,"org.easymock.samples.ConstructorCalledMockTest.testTax":320,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":236,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":180,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":124,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":283,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":112,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":460,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":209,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":346,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":293,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":167,"org.easymock.tests2.CaptureTest.testCaptureNone":56,"org.easymock.tests.UsageUnorderedTest.message":1,"org.easymock.tests.UsageVerifyTest.twoReturns":164,"org.easymock.tests.UsageVarargTest.varargByteAccepted":268,"org.easymock.tests2.ThreadingTest.testThreadSafe":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":474,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":257,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":235,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":317,"org.easymock.tests2.CaptureTest.testCapture_2617107":50,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":271,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":170,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":13,"org.easymock.tests2.UsageConstraintsTest.any":30,"org.easymock.tests2.StubTest.stub":313,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":343,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":387,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":171,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":249,"org.easymock.tests.UsageExpectAndThrowTest.longType":275,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":357,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":342,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":459,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":186,"org.easymock.tests2.SerializationTest.testClass":192,"org.easymock.tests.LimitationsTest.mockNativeMethod":76,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":142,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":99,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":430,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":316,"org.easymock.tests2.NameTest.nameForMocksControl":218,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":432,"org.easymock.tests2.MockedExceptionTest.testMockedException":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":464,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":150,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":450,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":83,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":276,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":115,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":67,"org.easymock.tests.MockingTest.testNicePartialClassMocking":82,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":120,"org.easymock.tests2.CompareToTest.testCompareEqual":487,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":428,"org.easymock.tests2.CaptureTest.testCaptureLast":55,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":222,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":231,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":130,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":27,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":41,"org.easymock.tests.MockingTest.testTwoMocks":362,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":84,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":280,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":213,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":45,"org.easymock.samples.ExampleTest.removeNonExistingDocument":324,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":433,"org.easymock.tests.UsageStrictMockTest.differentMethods":105,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":340,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":420,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":355,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":189,"org.easymock.tests2.MockBuilderTest.testCreateMockString":447,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":465,"org.easymock.tests.UsageExpectAndThrowTest.floatType":274,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":36,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":462,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":311,"org.easymock.tests.UsageVerifyTest.twoThrows":211,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":135,"org.easymock.samples.ExampleTest.voteAgainstRemoval":74,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":390,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":169,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":122,"org.easymock.tests.LimitationsTest.privateConstructor":331,"org.easymock.tests2.UsageConstraintsTest.testNotNull":44,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":158,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":299,"org.easymock.tests2.UsageTest.defaultResetToNice":200,"org.easymock.samples.ExampleTest.voteAgainstRemovals":72,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":404,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":95,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":429,"org.easymock.tests.UsageVarargTest.differentLength":368,"org.easymock.tests2.CallbackTest.callback":314,"org.easymock.tests2.UsageConstraintsTest.equals":417,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":453,"org.easymock.tests.UsageTest.openCallCountByLastCall":149,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":19,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":12,"org.easymock.tests.UsageCallCountTest.tooFewCalls":255,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":127,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":295,"org.easymock.tests.UsageThrowableTest.throwCheckedException":155,"org.easymock.tests.MockingTest.testStrictClassMocking":360,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":129,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":3,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":126,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":227,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":345,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":128,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":140,"org.easymock.tests2.CompareToTest.testGreateOrEqual":488,"org.easymock.tests.ObjectMethodsTest.testHashCode":392,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":223,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":190,"org.easymock.tests2.NameTest.nameForNiceMock":217,"org.easymock.tests2.DependencyTest.testInterfaceMocking":107,"org.easymock.samples.ExampleTest.addDocument":239,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":475,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":479,"org.easymock.tests2.DelegateToTest.testStubDelegate":109,"org.easymock.tests2.AnswerTest.stubAnswer":139,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":18,"org.easymock.tests.UsageVarargTest.varargLongAccepted":267,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":297,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":168,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":98,"org.easymock.tests.UsageExpectAndReturnTest.floatType":86,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":114,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":321,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":425,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":38,"org.easymock.tests.UsageThrowableTest.noUpperLimit":260,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":383,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":20,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":414,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":53,"org.easymock.tests2.SerializationTest.test":193,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":354,"org.easymock.tests2.UsageConstraintsTest.testSame":25,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":85,"org.easymock.samples.SupportTest.addDocument":323,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":341,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":466,"org.easymock.tests.GenericTest.testPackageScope":141,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":328,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":399,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":424,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":364,"org.easymock.tests2.NameTest.nameForMock":215,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":93,"org.easymock.tests2.UsageStrictMockTest.differentMethods":132,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":454,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":88,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":286,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":391,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":103,"org.easymock.tests2.MockedExceptionTest.testRealException":301,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":233,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":416,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":406,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":220,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":405,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":65,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":11,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":347,"org.easymock.tests2.NameTest.nameForStrictMock":216,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":444,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":62,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":119,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":415,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":39,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":206,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":356,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":110,"org.easymock.tests2.UsageStrictMockTest.range":131,"org.easymock.tests2.UsageConstraintsTest.lessThan":46,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":422,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":402,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":470,"org.easymock.tests2.CaptureTest.testCaptureRightOne":58,"org.easymock.tests2.UsageConstraintsTest.testOr":26,"org.easymock.tests.UsageRangeTest.combination":100,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":116,"org.easymock.tests.UsageTest.wrongArguments":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":467,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":270,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":89,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":396,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":94,"org.easymock.tests.UsageVarargTest.varargShortAccepted":266,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":358,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":333,"org.easymock.tests2.UsageConstraintsTest.cmpTo":31,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":449,"org.easymock.tests2.CompareToTest.testLessThan":485,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":398,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":199,"org.easymock.tests2.CaptureTest.testCaptureFromStub":59,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":337,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":443,"org.easymock.tests.UsageTest.unexpectedCallWithArray":229,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":17,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":256,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":162,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":389,"org.easymock.tests2.UsageConstraintsTest.constraints":21,"org.easymock.samples.ExampleTest.addAndChangeDocument":240,"org.easymock.tests.UsageStrictMockTest.testVerify":298,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":322,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":296,"org.easymock.tests2.CompareToTest.testGreateThan":486,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":242,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":54,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":6,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":159,"org.easymock.tests.LimitationsTest.abstractClass":330,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":165,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":7,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":179,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":207,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":262}}]
