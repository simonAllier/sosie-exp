[{"transplant":{"position":"org.easymock.internal.LastControl:117","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:119","sourceCode":"return java.util.Stack<org.easymock.internal.Invocation>.lastElement()","type":"CtReturnImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:127","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[19],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.Equals:53","failures":[26,27,28],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:269","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException((\"last method called on mock cannot throw \" + (java.lang.Throwable.getClass().getName()))))","type":"CtThrowImpl"},"failures":[29,30,31,32],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[33,34,35,36,37,38],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[39,40,41,42,43,44,45],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1607","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(char[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[1,46,47,2,3,4,5,6,7,8,9,10,11,48,12,13,14,15,49],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[50,51],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:205","failures":[52,53,54,44,55,56,57,45,58,59,60,61,62],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:37","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Integer.java.lang.Class<java.lang.Integer>.getName(), java.lang.Integer.java.lang.Class<java.lang.Integer>)","type":"CtInvocationImpl"},"failures":[63,53,64],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[65],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:36","failures":[66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,35,179,180,181,26,182,183,184,29,30,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,0,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,36,279,280,281,282,283,284,285,31,32,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,46,314,315,316,317,318,319,320,321,52,322,323,324,325,326,327,328,53,64,329,2,3,4,5,6,7,8,9,10,11,12,13,14,15,49,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,27,369,370,371,372,16,17,18,373,19,54,44,55,374,56,375,376,57,377,378,379,380,45,381,58,59,382,383,60,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,28,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,50,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,20,484,485,21,22,486,487,23,488,24,489,490,61,62,491,25,492,493,494,495,496,497,498,499,500,501,502],"status":-1,"binaryOperator":"(int <= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1349","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:206","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[93,98,103,106,319,324,325,328,374,375,376,377,378,379,380,381,382,383,384,391,401,407,419,489],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:36","sourceCode":"if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[34,503,37,38,446],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"value"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[1],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1952","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"failures":[211,504,505],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.Compare:53","failures":[446],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[63,53,64,329],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"values":"values","this":"this"}},{"position":"org.easymock.Capture:82","failures":[2,4,5,6,7,8,9,11,48,12,13,15],"status":-1,"binaryOperator":"(this.java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:156","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable))","type":"CtInvocationImpl"},"failures":[197,224,228,229,230,231,232,233,330,419,420,421,422],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:785","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Short>(short))","type":"CtInvocationImpl"},"failures":[438],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"this.java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"lock":"lock"}},{"position":"org.easymock.internal.Range:44","failures":[66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,35,179,180,181,26,182,183,184,29,30,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,0,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,36,279,280,281,282,283,284,285,31,32,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,46,314,315,316,317,318,319,320,321,52,322,323,324,325,326,327,328,53,64,329,2,3,4,5,6,7,8,9,10,11,12,13,14,15,49,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,27,369,370,371,372,16,17,18,373,19,54,44,55,374,56,375,376,57,377,378,379,380,45,381,58,59,382,383,60,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,28,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,50,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,20,484,485,21,22,486,487,23,488,24,489,490,61,62,491,25,492,493,494,495,496,497,498,499,500,501,502],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.RecordState:243","failures":[91,101,102,117,118,119,120,129,130,131,132,158,159,160,161,162,164,191,193,195,234,235,236,237,238,239,242,243,245,246,247,249,250,251,252,253,258,259,261,279,281,282,46,314,315,316,317,318,321,324,325,326,17,54,375,378,380,381,383,388,391,401,407,417,418,426,456,457,458,459,461,462,463,467,469,470,489,491,492,493,495,502],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:166","sourceCode":"java.lang.StringBuilder.append(\"\\n  Expectation failure on verify:\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:53","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[506,254],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"errorMessage":"buffer"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:190","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtInvocationImpl"},"failures":[117,277,281,282,332,336,337,340,364,383,465,469,470,487],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:51","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"hashCodeMethod","method":"hashCodeMethod"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[2,4,12,431,432,434,436,437,439,449,454],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[372,17],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:86","sourceCode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))","type":"CtReturnImpl"},"failures":[142,215,220],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[20],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[507,508,509],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1687","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(T[]))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[33,34,35,36,37,38],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[510,175,176,35,179,26,182,205,254,36,281,363,27,369,469],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,35,179,180,181,26,182,183,184,29,30,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,0,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,36,279,280,281,282,283,284,285,31,32,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,46,314,315,316,317,318,319,320,321,52,322,323,324,325,326,327,328,53,64,329,2,3,4,5,6,7,8,9,10,11,12,13,14,15,49,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,27,369,370,371,372,16,17,18,373,19,54,44,55,374,56,375,376,57,377,378,379,380,45,381,58,59,382,383,60,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,28,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,50,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,20,484,485,21,22,486,487,23,488,24,489,490,61,62,491,25,492,493,494,495,496,497,498,499,500,501,502],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidClassProxyFactory:43","sourceCode":"com.google.dexmaker.stock.ProxyBuilder<T>.constructorArgTypes(org.easymock.ConstructorArgs.getConstructor().getParameterTypes()).constructorArgValues(org.easymock.ConstructorArgs.getInitArgs())","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:46","sourceCode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}","type":"CtForImpl"},"failures":[33,34,35,36,37,38],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[2,4,12,431,432,434,436,437,439,449,454],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[361],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[2,3,4,5,12,13,431,432,433,434,435,436,437,438,439,440,449,450,454,455],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"count":"count","stack":"stack","this":"this"}},{"transplant":{"position":"org.easymock.internal.Invocation:126","sourceCode":"if (java.lang.Object != java.lang.Object) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:55","sourceCode":"return org.easymock.LogicalOperator.matchResult(java.util.Comparator<? super T>.compare(((T)(java.lang.Object)), T))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"otherArgument":"actual","myArgument":"actual"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":432,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":177,"org.easymock.tests2.UsageTest.argumentsOrdered":369,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":341,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":478,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":76,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":365,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":490,"org.easymock.tests2.DelegateToTest.testReturnException":16,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":229,"org.easymock.tests.MockingTest.testPartialClassMocking":258,"org.easymock.tests.MockClassControlTest.testToString":217,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":410,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":164,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":85,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":395,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":391,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":286,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":418,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":39,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":438,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":195,"org.easymock.tests2.UsageTest.wrongArguments":363,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":355,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":187,"org.easymock.samples.ExampleTest.answerVsDelegate":25,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":98,"org.easymock.tests2.UsageConstraintsTest.testNull":434,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":263,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":316,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":222,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":340,"org.easymock.tests2.CaptureTest.testPrimitive":5,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":199,"org.easymock.tests.UsageTest.moreThanOneArgument":178,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":305,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":315,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":131,"org.easymock.tests.UsageTest.argumentsOrdered":182,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":169,"org.easymock.tests.UsageVarargTest.varargIntAccepted":148,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":81,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":158,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":43,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":374,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":482,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":309,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":379,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":68,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":162,"org.easymock.tests.ReplayStateInvalidUsageTest.times":273,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":349,"org.easymock.tests2.DependencyTest.testClassMocking":415,"org.easymock.tests2.AnswerTest.answer":20,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":439,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":83,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":359,"org.easymock.tests2.CaptureTest.testAnd":2,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":95,"org.easymock.tests2.UsageTest.strictResetToDefault":361,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":57,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":323,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":130,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":119,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":335,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":173,"org.easymock.tests2.DelegateToTest.testDelegate":19,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":301,"org.easymock.tests.LimitationsTest.mockFinalMethod":192,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":232,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":139,"org.easymock.tests2.DependencyTest.testClassMockingSupport":416,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":225,"org.easymock.tests2.CaptureTest.testCapture1_2446744":6,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":320,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":299,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":357,"org.easymock.tests.UsageThrowableTest.throwError":121,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":267,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":97,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":483,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":194,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":133,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":409,"org.easymock.samples.PartialClassMockTest.testGetArea":489,"org.easymock.tests.MockingTest.testInterfaceMocking":260,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":268,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":159,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":396,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":145,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":287,"org.easymock.tests2.UsageTest.niceToStrict":364,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":509,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":66,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":378,"org.easymock.tests2.MockBuilderTest.testCreateMock":382,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":404,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":352,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":37,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":295,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":336,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":94,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":30,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":108,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":185,"org.easymock.tests.UsageOverloadedMethodTest.overloading":167,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":400,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":444,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":202,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":166,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":245,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":504,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":443,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":11,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":149,"org.easymock.tests2.EasyMockSupportClassTest.testAll":388,"org.easymock.tests.MockClassControlTest.testEquals":221,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":105,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":303,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":137,"org.easymock.tests2.CaptureTest.testCaptureAll":3,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":358,"org.easymock.tests.MockNameTest.defaultName":134,"org.easymock.tests2.UsageConstraintsTest.testMatches":445,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":132,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":265,"org.easymock.samples.ExampleTest.voteForRemovals":495,"org.easymock.tests.UsageVarargTest.allKinds":157,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":174,"org.easymock.samples.BasicClassMockTest.testPrintContent":499,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":138,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":127,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":465,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":479,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":233,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":373,"org.easymock.tests2.UsageConstraintsTest.greaterThan":447,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":213,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":389,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":118,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":326,"org.easymock.samples.ExampleTest.voteForRemoval":492,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":214,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":424,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":327,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":99,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":310,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":319,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":306,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":360,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":59,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":73,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":333,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":386,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":228,"org.easymock.tests2.CaptureTest.testCaptureFirst":15,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":72,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":334,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":371,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":205,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":241,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":426,"org.easymock.tests2.CaptureTest.testCapture2_2446744":14,"org.easymock.tests2.UsageTest.moreThanOneArgument":362,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":84,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":383,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":156,"org.easymock.tests.GenericTest.testBridgedEquals":107,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":115,"org.easymock.tests.UsageExpectAndReturnTest.longType":237,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":135,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":331,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":304,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":452,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":193,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":302,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":129,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":31,"org.easymock.tests.UsageCallCountTest.tooManyCalls":116,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":405,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":242,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":354,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":291,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":126,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":457,"org.easymock.tests.MockingTest.testNiceClassMocking":264,"org.easymock.tests.MockingTest.testClassMocking":256,"org.easymock.tests2.UsageConstraintsTest.testContains":442,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":109,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":421,"org.easymock.tests2.UsageConstraintsTest.testFind":433,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":168,"org.easymock.tests.MockTypeTest.fromEasyMockClass":96,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":24,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":277,"org.easymock.tests.UsageExpectAndReturnTest.object":244,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":321,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":353,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":339,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":151,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":40,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":143,"org.easymock.tests.UsageTest.exactCallCountByLastCall":183,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":65,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":223,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":71,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":170,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":163,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":44,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":146,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":250,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":0,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":473,"org.easymock.tests.MockClassControlTest.testHashCode":220,"org.easymock.tests2.EasyMockSupportTest.testVerify":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":398,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":171,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":29,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":200,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":356,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":428,"org.easymock.tests.UsageVarargTest.varargCharAccepted":150,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":206,"org.easymock.tests2.CaptureTest.testCaptureMultiple":47,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":466,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":89,"org.easymock.tests2.UsageTest.openCallCountByLastCall":366,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":507,"org.easymock.tests.DefaultClassInstantiatorTest.object":207,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":342,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":184,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":141,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":510,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":399,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":293,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":124,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":347,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":472,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":219,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":324,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":292,"org.easymock.tests.CapturesMatcherTest.test":1,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":251,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":285,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":407,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":218,"org.easymock.tests2.UsageTest.resumeIfFailure":370,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":93,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":308,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":231,"org.easymock.tests2.StubTest.stubWithReturnValue":330,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":45,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":453,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":243,"org.easymock.tests2.SerializationTest.testAllMockedMethod":329,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":82,"org.easymock.samples.SupportTest.voteForRemovals":502,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":38,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":103,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":475,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":298,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":63,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":88,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":484,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":165,"org.easymock.tests.UsageExpectAndThrowTest.object":296,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":450,"org.easymock.tests2.DelegateToTest.testWrongClass":18,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":101,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":102,"org.easymock.samples.ConstructorCalledMockTest.testTax":61,"org.easymock.tests.UsageStrictMockTest.range":281,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":312,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":338,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":456,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":297,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":385,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":26,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":275,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":186,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":33,"org.easymock.tests2.CaptureTest.testCaptureNone":10,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":92,"org.easymock.tests.UsageUnorderedTest.message":254,"org.easymock.tests.UsageVerifyTest.twoReturns":176,"org.easymock.tests.UsageVarargTest.varargByteAccepted":155,"org.easymock.tests2.ThreadingTest.testThreadSafe":423,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":402,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":113,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":498,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":144,"org.easymock.tests2.CaptureTest.testCapture_2617107":4,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":227,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":86,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":198,"org.easymock.tests2.UsageConstraintsTest.any":440,"org.easymock.tests2.StubTest.stub":49,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":272,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":32,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":87,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":230,"org.easymock.tests.UsageExpectAndThrowTest.longType":289,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":211,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":271,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":468,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":477,"org.easymock.tests2.SerializationTest.testClass":53,"org.easymock.tests.LimitationsTest.mockNativeMethod":191,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":106,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":253,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":346,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":471,"org.easymock.tests2.NameTest.nameForMocksControl":414,"org.easymock.tests2.MockedExceptionTest.testMockedException":420,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":390,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":181,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":488,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":261,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":290,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":46,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":381,"org.easymock.tests.MockingTest.testNicePartialClassMocking":259,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":318,"org.easymock.tests2.CaptureTest.testCaptureLast":9,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":344,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":226,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":463,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":437,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":451,"org.easymock.tests.MockingTest.testTwoMocks":257,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":464,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":234,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":294,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":27,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":455,"org.easymock.samples.ExampleTest.removeNonExistingDocument":496,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":269,"org.easymock.tests.UsageStrictMockTest.differentMethods":282,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":351,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":474,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":209,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":425,"org.easymock.tests2.MockBuilderTest.testCreateMockString":384,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":215,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":392,"org.easymock.tests.UsageExpectAndThrowTest.floatType":288,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":446,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":387,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":21,"org.easymock.tests.UsageVerifyTest.twoThrows":175,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":55,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":401,"org.easymock.samples.ExampleTest.voteAgainstRemoval":493,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":77,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":90,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":325,"org.easymock.tests.LimitationsTest.privateConstructor":190,"org.easymock.tests2.UsageConstraintsTest.testNotNull":454,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":419,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":128,"org.easymock.tests2.UsageTest.defaultResetToNice":368,"org.easymock.samples.ExampleTest.voteAgainstRemovals":491,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":78,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":249,"org.easymock.tests.UsageVarargTest.differentLength":152,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":345,"org.easymock.tests2.CallbackTest.callback":487,"org.easymock.tests2.UsageConstraintsTest.equals":28,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":503,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":52,"org.easymock.tests.UsageTest.openCallCountByLastCall":180,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":429,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":197,"org.easymock.tests.UsageCallCountTest.tooFewCalls":111,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":459,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":188,"org.easymock.tests.UsageThrowableTest.throwCheckedException":125,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":34,"org.easymock.tests.MockingTest.testStrictClassMocking":255,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":462,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":224,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":458,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":350,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":274,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":461,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":486,"org.easymock.tests.ObjectMethodsTest.testHashCode":142,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":42,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":427,"org.easymock.tests2.NameTest.nameForNiceMock":413,"org.easymock.tests2.DependencyTest.testInterfaceMocking":417,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":41,"org.easymock.samples.ExampleTest.addDocument":494,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":408,"org.easymock.tests2.DelegateToTest.testStubDelegate":17,"org.easymock.tests2.AnswerTest.stubAnswer":22,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":279,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":58,"org.easymock.tests.UsageVarargTest.varargLongAccepted":154,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":283,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":75,"org.easymock.tests.UsageExpectAndReturnTest.floatType":236,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":252,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":54,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":62,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":481,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":448,"org.easymock.tests.UsageThrowableTest.noUpperLimit":122,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":203,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":430,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":307,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":7,"org.easymock.tests2.SerializationTest.test":64,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":505,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":208,"org.easymock.tests2.UsageConstraintsTest.testSame":435,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":235,"org.easymock.samples.SupportTest.addDocument":501,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":460,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":393,"org.easymock.tests.GenericTest.testPackageScope":104,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":172,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":70,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":480,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":262,"org.easymock.tests2.NameTest.nameForMock":411,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":246,"org.easymock.tests2.UsageStrictMockTest.differentMethods":470,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":60,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":322,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":238,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":300,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":140,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":120,"org.easymock.tests2.MockedExceptionTest.testRealException":422,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":100,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":80,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":313,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":467,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":79,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":196,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":276,"org.easymock.tests2.NameTest.nameForStrictMock":412,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":377,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":508,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":23,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":317,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":311,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":506,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":449,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":210,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":375,"org.easymock.tests2.UsageStrictMockTest.range":469,"org.easymock.tests2.UsageConstraintsTest.lessThan":50,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":476,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":74,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":397,"org.easymock.tests2.CaptureTest.testCaptureRightOne":12,"org.easymock.tests2.UsageConstraintsTest.testOr":436,"org.easymock.tests.UsageRangeTest.combination":117,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":314,"org.easymock.tests.UsageTest.wrongArguments":179,"org.easymock.tests2.MockBuilderTest.testWithConstructor":56,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":394,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":216,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":239,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":67,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":247,"org.easymock.tests.UsageVarargTest.varargShortAccepted":153,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":212,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":114,"org.easymock.tests2.UsageConstraintsTest.cmpTo":441,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":485,"org.easymock.tests2.CompareToTest.testLessThan":51,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":69,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":367,"org.easymock.tests2.CaptureTest.testCaptureFromStub":13,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":266,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":376,"org.easymock.tests.UsageTest.unexpectedCallWithArray":35,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":36,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":112,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":248,"org.easymock.tests2.CaptureTest.testCapture":48,"org.easymock.tests2.UsageConstraintsTest.constraints":431,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":280,"org.easymock.samples.ExampleTest.addAndChangeDocument":497,"org.easymock.tests.UsageStrictMockTest.testVerify":284,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":500,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":278,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":136,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":8,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":160,"org.easymock.tests.LimitationsTest.abstractClass":189,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":240,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":161,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":204,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":147,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":337}}]
