[{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"failures":[0,1,2,3,4],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[5,6,7,8,9],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MocksControl:192","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,0,1,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,5,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,2,3,143,4,144,145,146,147,148,149,150,151,152,153,154,7,8,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:233","sourceCode":"if ((org.easymock.internal.ExpectedInvocation) == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException((\"method call on the mock needed before setting \" + java.lang.String)));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"failMessage"}},{"transplant":{"position":"org.easymock.internal.RecordState:257","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[253],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:50","failures":[254,255,256,39,257,258,40,259,260,261,262,263,264,265,266,267,41,268,269,270,271,272,42,273,274,275,276,277,278,279,280,90,93,281,111,115,282,283,284,253,285,286],"status":-1,"binaryOperator":"(this.int) != (this.int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[12,26,287,48,49,0,1,50,53,288,56,58,60,61,62,63,289,290,291,73,74,292,293,294,75,77,78,79,80,83,84,5,85,107,108,295,110,111,114,115,119,296,127,297,298,299,300,301,302,303,304,305,306,307,308,309,310,136,311,312,140,141,142,2,3,143,4,144,145,154,155,156,313,157,160,161,162,314,163,164,315,167,168,316,317,318,319,320,321,322,184,323,324],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:110","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[90,91,92],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:58","sourceCode":"java.lang.String[][int] = java.lang.Class<?>[][int].getName()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:69","sourceCode":"if (java.lang.Class<?> != null) {\n    java.lang.Class<?>[][int] = java.lang.Class<?>;\n} else {\n    java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader());\n}","type":"CtIfImpl"},"failures":[90,91,92,325],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:60","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:666","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:135","sourceCode":"java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:135","sourceCode":"java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:161","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    return java.lang.reflect.Constructor<T>;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:162","sourceCode":"return java.lang.reflect.Constructor<T>","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"ret":"ret"}},{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[127],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:161","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method"}},{"position":"org.easymock.internal.DefaultClassInstantiator:157","failures":[326],"status":-1,"binaryOperator":"(java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1148","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[18],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1763","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"failures":[34],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[15,327,29,34],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.LastControl:48","sourceCode":"if (org.easymock.internal.MocksControl != null) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\n} else {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[93,281],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,45,48,0,1,52,53,54,55,56,57,58,59,60,61,328,62,63,64,65,67,68,69,70,71,290,72,73,74,293,75,76,77,79,81,82,329,5,85,87,90,91,93,94,95,97,98,101,102,103,104,105,106,108,109,110,111,112,113,114,115,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,136,141,2,3,4,145,330,331,332,146,147,148,333,149,150,153,154,6,7,8,334,335,336,337,338,155,156,158,159,162,179,180,181,182,183,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,229,231,232,233,234,235,236,237,339,240,242,243,245,248,252],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[340],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[181,240,242,243,245,248],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:356","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.lang.reflect.Type = java.lang.reflect.Type;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:254","sourceCode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","this":"this","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:315","sourceCode":"return true","type":"CtReturnImpl"},"failures":[52,341,342,54,343,75,82,344,132,135,345,346,347,348,137,349,151,152,155,159,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,231,235,236],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:206","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:214","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[275,276,277,278,280,90,93,281,350,351,285,286],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[352,353],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[354,355,356,357,77,78,83,84,358,359,360,140,156,313,157,160,161],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":13,"org.easymock.tests2.UsageTest.argumentsOrdered":84,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":155,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":64,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":348,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":288,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":80,"org.easymock.tests2.StubTest.stubWithReturnValue":52,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":277,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":251,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":194,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":33,"org.easymock.tests2.SerializationTest.testAllMockedMethod":92,"org.easymock.tests2.DelegateToTest.testReturnException":86,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":346,"org.easymock.tests.MockingTest.testPartialClassMocking":146,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":356,"org.easymock.samples.SupportTest.voteForRemovals":248,"org.easymock.tests.MockClassControlTest.testToString":305,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":333,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":297,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":262,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":325,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":209,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":40,"org.easymock.tests.UsageExpectAndThrowTest.object":219,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":30,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":38,"org.easymock.tests2.DelegateToTest.testWrongClass":88,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":205,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":206,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":19,"org.easymock.tests2.UsageTest.wrongArguments":78,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":149,"org.easymock.samples.ConstructorCalledMockTest.testTax":285,"org.easymock.tests.UsageStrictMockTest.range":2,"org.easymock.samples.ExampleTest.answerVsDelegate":241,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":328,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":319,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":109,"org.easymock.tests2.UsageConstraintsTest.testNull":15,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":220,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":121,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":73,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":63,"org.easymock.tests2.CaptureTest.testPrimitive":97,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":254,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":228,"org.easymock.tests.UsageTest.moreThanOneArgument":156,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":160,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":120,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":358,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":332,"org.easymock.tests2.CaptureTest.testCaptureNone":102,"org.easymock.tests.UsageUnorderedTest.message":184,"org.easymock.tests.UsageVerifyTest.twoReturns":145,"org.easymock.tests.UsageVarargTest.varargByteAccepted":176,"org.easymock.tests2.ThreadingTest.testThreadSafe":67,"org.easymock.tests.UsageTest.argumentsOrdered":161,"org.easymock.tests.UsageVarargTest.varargIntAccepted":171,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":268,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":166,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":303,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":249,"org.easymock.tests2.CaptureTest.testCapture_2617107":96,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":179,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":357,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":289,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":336,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":152,"org.easymock.tests2.UsageConstraintsTest.any":20,"org.easymock.tests2.StubTest.stub":51,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":183,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":347,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":337,"org.easymock.tests.UsageExpectAndThrowTest.longType":212,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":49,"org.easymock.tests2.SerializationTest.testClass":90,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":53,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":108,"org.easymock.tests.LimitationsTest.mockNativeMethod":128,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":339,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":204,"org.easymock.tests2.AnswerTest.answer":43,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":327,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":9,"org.easymock.tests2.CaptureTest.testAnd":94,"org.easymock.tests2.UsageTest.strictResetToDefault":76,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":296,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":276,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":50,"org.easymock.tests2.NameTest.nameForMocksControl":301,"org.easymock.tests2.MockedExceptionTest.testMockedException":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":258,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":59,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":7,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":159,"org.easymock.tests2.DelegateToTest.testDelegate":89,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":213,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":148,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":118,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":74,"org.easymock.tests.MockingTest.testNicePartialClassMocking":147,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":224,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":123,"org.easymock.tests2.CaptureTest.testCaptureLast":101,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":137,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":324,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":18,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":115,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":31,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":323,"org.easymock.tests2.CaptureTest.testCapture1_2446744":98,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":282,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":185,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":222,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":217,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":83,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":35,"org.easymock.tests.UsageThrowableTest.throwError":229,"org.easymock.tests.UsageStrictMockTest.differentMethods":3,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":318,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":69,"org.easymock.tests2.MockBuilderTest.testCreateMockString":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":259,"org.easymock.tests.UsageExpectAndThrowTest.floatType":211,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":256,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":44,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":350,"org.easymock.tests.UsageVerifyTest.twoThrows":144,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":309,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":283,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":41,"org.easymock.samples.PartialClassMockTest.testGetArea":252,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":180,"org.easymock.samples.ExampleTest.voteAgainstRemoval":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":335,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":331,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":330,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":126,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":304,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":263,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":210,"org.easymock.tests2.UsageTest.niceToStrict":79,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":284,"org.easymock.tests2.UsageConstraintsTest.testNotNull":34,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":341,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":236,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":72,"org.easymock.tests2.UsageTest.defaultResetToNice":329,"org.easymock.tests2.MockBuilderTest.testCreateMock":292,"org.easymock.samples.ExampleTest.voteAgainstRemovals":240,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":200,"org.easymock.tests.UsageVarargTest.differentLength":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":270,"org.easymock.tests2.CallbackTest.callback":107,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":351,"org.easymock.tests.UsageTest.openCallCountByLastCall":158,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":354,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":218,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":60,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":10,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":314,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":151,"org.easymock.tests.UsageCallCountTest.tooFewCalls":164,"org.easymock.tests.UsageOverloadedMethodTest.overloading":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":272,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":267,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":24,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":135,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":196,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":112,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":130,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":23,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":103,"org.easymock.tests.UsageThrowableTest.throwCheckedException":233,"org.easymock.tests2.EasyMockSupportClassTest.testAll":39,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":238,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":359,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":355,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":226,"org.easymock.tests2.CaptureTest.testCaptureAll":95,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":344,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":114,"org.easymock.tests.MockNameTest.defaultName":308,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":295,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":111,"org.easymock.tests2.UsageConstraintsTest.testMatches":25,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":113,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":46,"org.easymock.samples.ExampleTest.voteForRemovals":245,"org.easymock.tests2.NameTest.nameForNiceMock":300,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":71,"org.easymock.tests.UsageVarargTest.allKinds":178,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":4,"org.easymock.tests2.DependencyTest.testInterfaceMocking":37,"org.easymock.samples.BasicClassMockTest.testPrintContent":250,"org.easymock.samples.ExampleTest.addDocument":244,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":273,"org.easymock.tests2.DelegateToTest.testStubDelegate":87,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":235,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":287,"org.easymock.tests2.AnswerTest.stubAnswer":45,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":353,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":349,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":141,"org.easymock.tests2.UsageConstraintsTest.greaterThan":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":257,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":6,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":127,"org.easymock.tests.UsageVarargTest.varargLongAccepted":175,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":143,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":334,"org.easymock.samples.ExampleTest.voteForRemoval":242,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":68,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":203,"org.easymock.tests.UsageExpectAndReturnTest.floatType":187,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":320,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":93,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":286,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":310,"org.easymock.tests.UsageThrowableTest.noUpperLimit":230,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":28,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":75,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":11,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":138,"org.easymock.tests2.SerializationTest.test":91,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":99,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":278,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":326,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":57,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":231,"org.easymock.tests2.UsageConstraintsTest.testSame":16,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":255,"org.easymock.samples.SupportTest.addDocument":247,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":345,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":352,"org.easymock.tests2.CaptureTest.testCaptureFirst":106,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":58,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":85,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":311,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":260,"org.easymock.tests.GenericTest.testPackageScope":237,"org.easymock.tests2.UsageTest.moreThanOneArgument":77,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":70,"org.easymock.tests2.CaptureTest.testCapture2_2446744":105,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":293,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":177,"org.easymock.tests2.NameTest.nameForMock":298,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":167,"org.easymock.tests.UsageExpectAndReturnTest.longType":188,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":55,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":227,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":197,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":32,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":280,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":225,"org.easymock.tests2.UsageStrictMockTest.differentMethods":1,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":189,"org.easymock.tests.UsageCallCountTest.tooManyCalls":168,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":223,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":8,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":163,"org.easymock.tests2.MockedExceptionTest.testRealException":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":271,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":321,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":193,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":214,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":48,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":234,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":150,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":110,"org.easymock.tests2.NameTest.nameForStrictMock":299,"org.easymock.tests2.UsageConstraintsTest.testContains":22,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":54,"org.easymock.tests2.UsageConstraintsTest.testFind":14,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":132,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":116,"org.easymock.tests.MockTypeTest.fromEasyMockClass":317,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":122,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":312,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":117,"org.easymock.tests.UsageExpectAndReturnTest.object":195,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":29,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":124,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":290,"org.easymock.tests2.UsageStrictMockTest.range":0,"org.easymock.tests2.UsageConstraintsTest.lessThan":36,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":62,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":173,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":253,"org.easymock.tests.UsageTest.exactCallCountByLastCall":162,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":129,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":56,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":264,"org.easymock.tests2.CaptureTest.testCaptureRightOne":104,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":207,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":360,"org.easymock.tests2.UsageConstraintsTest.testOr":17,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":281,"org.easymock.tests.UsageRangeTest.combination":154,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":201,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":119,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":169,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":134,"org.easymock.tests.UsageTest.wrongArguments":157,"org.easymock.tests2.MockBuilderTest.testWithConstructor":275,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":261,"org.easymock.tests2.EasyMockSupportTest.testVerify":66,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":190,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":265,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":208,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":133,"org.easymock.tests.UsageVarargTest.varargShortAccepted":174,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":315,"org.easymock.tests2.UsageConstraintsTest.cmpTo":21,"org.easymock.tests.UsageVarargTest.varargCharAccepted":172,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":47,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":338,"org.easymock.tests2.UsageTest.openCallCountByLastCall":81,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":82,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":65,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":291,"org.easymock.tests.UsageTest.unexpectedCallWithArray":313,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":266,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":216,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":232,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":140,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":165,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":279,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":199,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":307,"org.easymock.tests2.UsageConstraintsTest.constraints":12,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":125,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":142,"org.easymock.samples.ExampleTest.addAndChangeDocument":246,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":215,"org.easymock.tests.CapturesMatcherTest.test":340,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":202,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":239,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":42,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":139,"org.easymock.tests2.UsageTest.resumeIfFailure":5,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":100,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":181,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":316,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":191,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":136,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":182,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":61,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":170}}]
