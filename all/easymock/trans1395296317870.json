[{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"failures":[0,1,2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"failures":[3,4,5],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:633","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (this.java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:60","sourceCode":"java.util.List<T>.clear()","type":"CtInvocationImpl"},"failures":[6,7,8],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[9,10,11,12,13,14,15,16,17,18,19,20],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.Injector:208","sourceCode":"final java.lang.SecurityException java.lang.SecurityException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:94","sourceCode":"final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:194","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[21,22],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1026","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:150","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[23,24,25,26,27,28,29,30],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"ret":"constructor","clazz":"toMock"}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[31],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:144","sourceCode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())","type":"CtInvocationImpl"},"failures":[32,33,31],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:142","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.AndroidClassProxyFactory()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:147","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory()","type":"CtReturnImpl"},"failures":[23,23,24,24,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,1,30,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,9,10,11,102,103,104,105,32,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,21,123,124,125,22,126,127,128,129,130,131,132],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:157","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"failures":[32,33,31],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"failures":[2],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[89],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","constructorArgs":"constructorArgs","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.Any:40","sourceCode":"java.lang.StringBuffer.append(\"<any>\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.MocksControl:105","failures":[156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,0,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,6,220,7,221,222,223,224,225,226,227,228,229,3,230,4,231,232,233,234,235,133,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,9,10,11,12,293,294,140,295,141,142,296,297,298,299,300,301,302,303,304,13,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,146,147,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,14,371,372,373,148,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,149,150,151,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,5,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,152,465,466,467,153,468,154,155,469,470,15,16,17,18,19,20,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[178],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:747","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[156,157,158,159,161,36,167,168,37,169,45,48,58,64,175,176,177,178,180,181,182,183,184,185,187,0,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,207,208,213,214,215,216,217,6,220,7,221,223,224,225,226,227,228,229,230,4,231,233,234,235,133,237,239,240,241,244,245,246,247,248,249,250,251,252,253,254,255,256,257,68,71,73,74,77,79,80,260,81,82,83,1,87,88,89,92,93,94,95,261,96,97,262,263,269,100,286,11,140,141,142,298,304,13,111,112,113,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,335,336,337,338,123,354,355,369,370,372,373,148,376,377,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,149,150,151,414,416,417,418,419,420,421,131,422,424,425,427,429,430,431,432,433,435,442,445,450,451,153,154,155,19],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.EasyMockProperties:133","failures":[490,491,492],"status":-1,"binaryOperator":"java.lang.ClassLoader == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:37","sourceCode":"java.lang.StringBuffer.append(\"\\\"\")","type":"CtInvocationImpl"},"failures":[133,236,242,243,135,493,494,495,496,143,497,148,374,375,378,379,467],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:62","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>()","type":"CtAssignmentImpl"},"failures":[172,174,175,176,177,178,180,181,182,183,184,185,186,187,0,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,213,214,215,216,217,218,219,6,220,7,221,222,223,224,228,259,1,140,304,13,353,354,355,369,370,14,371,372,429,430,431,432,433,152,467,153,19],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:37","failures":[156,157,158,159,160,161,163,34,35,164,165,166,167,168,37,169,178,181,183,184,200,203,206,207,213,214,6,220,221,224,225,226,227,229,230,4,231,233,234,235,133,237,238,239,240,244,245,246,247,248,249,250,251,252,254,255,256,257,71,73,74,80,82,88,262,263,269,286,294,140,295,141,142,296,297,298,304,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,124,342,343,344,346,347,349,350,351,352,353,354,355,369,370,14,371,372,373,148,376,377,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,149,150,151,414,415,416,417,418,419,420,421,422,424,425,429,430,431,432,433,152,466,153,468,154,155,469,15,16,17,18,19,20,476,477,478,479,480],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[21,123,124,125,22],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"leafClass"}},{"position":"org.easymock.internal.ReflectionUtils:150","failures":[37,498,75,499,500,501,502,100,101],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.Range:44","failures":[23,24,156,157,158,159,160,161,162,163,34,35,164,165,36,166,167,168,37,169,38,39,40,503,504,41,170,171,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,0,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,6,220,7,221,222,223,224,225,226,227,228,229,3,230,4,231,232,233,234,235,133,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,67,505,68,69,506,70,71,72,73,498,74,25,75,76,77,27,78,79,80,260,81,82,83,84,507,1,30,85,86,87,88,89,90,91,92,93,94,95,508,261,96,97,509,98,99,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,100,101,510,281,282,283,284,285,286,287,288,289,290,291,292,9,10,11,12,293,294,140,295,141,142,296,297,298,299,300,301,302,303,304,13,511,102,103,104,105,32,106,512,107,108,109,110,111,112,305,113,306,307,114,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,146,147,328,329,330,331,332,333,334,335,336,337,338,115,116,117,118,119,120,121,122,21,123,124,125,22,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,513,356,126,357,358,359,360,361,362,363,364,365,366,367,368,369,370,14,371,372,373,148,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,149,150,151,404,405,406,127,514,515,407,408,128,409,410,411,412,413,414,415,416,417,418,419,420,421,129,130,131,132,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,5,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,152,465,466,467,153,468,154,155,469,470,15,16,17,18,19,20,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489],"status":-1,"binaryOperator":"(int >= 1)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:173","sourceCode":"throw new org.easymock.internal.AssertionErrorWrapper(new java.lang.AssertionError(java.lang.StringBuilder.toString()))","type":"CtThrowImpl"},"failures":[133,277,278,279,280,140,142,296,148,149,150,151,153,155,469,481,483,484],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:217","failures":[156,157,158,159,160,161,163,34,35,164,165,36,166,167,168,37,169,38,45,48,58,64,178,181,184,185,187,0,189,192,195,196,197,198,199,200,203,206,213,214,215,216,218,219,6,220,7,221,224,228,229,230,231,233,234,235,236,237,238,242,243,245,246,247,248,249,250,251,252,254,255,256,257,258,71,73,74,79,80,260,81,82,83,1,88,92,93,94,95,261,96,97,262,263,269,100,286,11,294,140,295,141,142,296,111,112,113,310,311,313,318,323,146,147,335,123,124,342,343,344,346,347,349,350,351,352,353,126,369,370,14,371,375,378,379,380,383,384,386,391,396,401,402,150,151,414,415,416,417,418,419,420,421,131,422,424,425,427,152,466,467,153,468,154,155,469,484,485,486,488,489],"status":-1,"binaryOperator":"(boolean) && ((org.easymock.internal.Result) == null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:305","sourceCode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())","type":"CtReturnImpl"},"failures":[156,157,158,159,160,161,163,34,35,164,165,36,166,167,168,37,169,38,45,48,58,64,172,174,175,176,177,178,180,181,182,183,184,185,186,187,0,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,206,207,208,213,214,215,216,217,218,219,6,220,7,221,223,224,225,226,227,228,229,230,4,231,233,234,235,133,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,68,71,73,74,77,79,80,260,81,82,83,1,87,88,89,92,93,94,95,261,96,97,262,263,269,277,278,279,280,100,286,11,293,294,140,295,141,142,296,297,298,304,13,111,112,113,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,335,336,337,338,123,124,342,343,344,346,347,348,349,350,351,352,353,354,355,126,369,370,14,371,372,373,148,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,149,150,151,414,415,416,417,418,419,420,421,131,422,424,425,427,429,430,431,432,433,152,465,466,467,153,468,154,155,469,470,19,472,473,481,483,484,485,486,488,489],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[156,157,158,159,160,161,162,34,35,164,165,36,166,167,37,169,38,45,48,58,64,178,184,185,187,0,189,192,195,196,197,198,199,203,206,209,210,211,212,213,214,215,216,218,219,6,220,7,221,224,228,229,230,231,234,235,236,237,238,241,242,243,245,246,247,248,249,250,251,252,253,254,255,256,257,258,67,68,71,72,73,74,76,78,79,80,260,81,82,83,84,1,86,88,92,93,94,95,261,96,97,262,263,269,100,286,9,10,11,294,295,296,299,300,301,302,102,111,112,113,310,311,313,318,323,147,330,331,332,115,116,117,118,119,120,121,122,123,124,342,343,344,346,347,349,350,351,352,353,126,357,358,359,360,361,362,363,364,365,366,367,368,371,374,375,378,379,380,383,384,386,391,396,401,402,150,151,414,415,416,417,418,419,420,421,131,422,424,425,427,428,457,458,459,460,461,466,467,468,469,470,482,485,486,487,488,489],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1248","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[178],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:131","sourceCode":"return ","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[328],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[135,494,496,143,374,467],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[516,517,518],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1039","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[103,106],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":178,"org.easymock.tests2.UsageTest.argumentsOrdered":243,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":373,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":256,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":287,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":5,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":238,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":165,"org.easymock.tests2.DelegateToTest.testReturnException":230,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":16,"org.easymock.tests.MockingTest.testPartialClassMocking":111,"org.easymock.tests.MockClassControlTest.testToString":117,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":276,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":340,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":452,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":91,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":52,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":48,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":381,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":263,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":499,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":185,"org.easymock.tests2.UsageTest.wrongArguments":236,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":369,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":275,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":301,"org.easymock.samples.ExampleTest.answerVsDelegate":157,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":128,"org.easymock.tests2.UsageConstraintsTest.testNull":181,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":307,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":81,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":122,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":255,"org.easymock.tests2.CaptureTest.testPrimitive":216,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":372,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":400,"org.easymock.tests.UsageTest.moreThanOneArgument":148,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":260,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":478,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":471,"org.easymock.tests.UsageTest.argumentsOrdered":379,"org.easymock.tests.UsageVarargTest.varargIntAccepted":344,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":448,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":139,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":429,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":67,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":503,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":291,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":72,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":436,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":433,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":269,"org.easymock.tests.ReplayStateInvalidUsageTest.times":365,"org.easymock.tests2.DependencyTest.testClassMocking":98,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":29,"org.easymock.tests2.AnswerTest.answer":203,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":186,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":450,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":212,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":515,"org.easymock.tests2.CaptureTest.testAnd":213,"org.easymock.tests2.UsageTest.strictResetToDefault":235,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":506,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":86,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":477,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":250,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":337,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":475,"org.easymock.tests2.DelegateToTest.testDelegate":233,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":396,"org.easymock.tests.LimitationsTest.mockFinalMethod":132,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":19,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":461,"org.easymock.tests2.DependencyTest.testClassMockingSupport":99,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":146,"org.easymock.tests2.CaptureTest.testCapture1_2446744":217,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":507,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":394,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":210,"org.easymock.tests.UsageThrowableTest.throwError":414,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":359,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":408,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":513,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":292,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":480,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":28,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":66,"org.easymock.samples.PartialClassMockTest.testGetArea":36,"org.easymock.tests.MockingTest.testInterfaceMocking":305,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":360,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":430,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":405,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":53,"org.easymock.tests2.UsageTest.niceToStrict":237,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":334,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":382,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":516,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":434,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":71,"org.easymock.tests2.MockBuilderTest.testCreateMock":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":61,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":272,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":390,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":135,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":251,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":514,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":464,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":481,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":299,"org.easymock.tests.UsageOverloadedMethodTest.overloading":402,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":57,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":63,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":425,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":190,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":401,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":319,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":189,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":33,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":7,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":345,"org.easymock.tests.MockClassControlTest.testEquals":121,"org.easymock.tests2.EasyMockSupportClassTest.testAll":45,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":124,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":493,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":398,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":459,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":211,"org.easymock.tests2.CaptureTest.testCaptureAll":214,"org.easymock.tests.MockNameTest.defaultName":303,"org.easymock.tests2.UsageConstraintsTest.testMatches":191,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":479,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":357,"org.easymock.samples.ExampleTest.voteForRemovals":161,"org.easymock.tests.UsageVarargTest.allKinds":353,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":149,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":460,"org.easymock.samples.BasicClassMockTest.testPrintContent":35,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":420,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":293,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":20,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":232,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":288,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":512,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":502,"org.easymock.tests2.UsageConstraintsTest.greaterThan":193,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":46,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":336,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":89,"org.easymock.samples.ExampleTest.voteForRemoval":158,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":107,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":90,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":226,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":409,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":504,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":84,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":126,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":234,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":75,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":441,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":248,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":416,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":43,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":15,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":3,"org.easymock.tests2.CaptureTest.testCaptureFirst":224,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":440,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":249,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":245,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":428,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":315,"org.easymock.tests2.UsageTest.moreThanOneArgument":133,"org.easymock.tests2.CaptureTest.testCapture2_2446744":223,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":228,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":451,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":77,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":352,"org.easymock.tests.GenericTest.testBridgedEquals":22,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":488,"org.easymock.tests.UsageExpectAndReturnTest.longType":311,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":457,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":246,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":399,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":198,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":356,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":397,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":476,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":412,"org.easymock.tests.UsageCallCountTest.tooManyCalls":489,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":483,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":62,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":316,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":274,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":386,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":419,"org.easymock.tests.MockingTest.testNiceClassMocking":114,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":93,"org.easymock.tests.MockingTest.testClassMocking":109,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":482,"org.easymock.tests2.UsageConstraintsTest.testContains":188,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":11,"org.easymock.tests2.UsageConstraintsTest.testFind":180,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":403,"org.easymock.tests.MockTypeTest.fromEasyMockClass":407,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":465,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":174,"org.easymock.tests.UsageExpectAndReturnTest.object":318,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":1,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":273,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":254,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":500,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":347,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":332,"org.easymock.tests.UsageTest.exactCallCountByLastCall":380,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":304,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":439,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":472,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":339,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":497,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":101,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":324,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":342,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":424,"org.easymock.tests.MockClassControlTest.testHashCode":120,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":282,"org.easymock.tests2.EasyMockSupportTest.testVerify":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":55,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":473,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":463,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":422,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":209,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":259,"org.easymock.tests.UsageVarargTest.varargCharAccepted":346,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":511,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":456,"org.easymock.tests2.UsageTest.openCallCountByLastCall":239,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":517,"org.easymock.tests.DefaultClassInstantiatorTest.object":102,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":257,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":462,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":330,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":145,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":388,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":56,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":417,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":267,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":281,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":119,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":87,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":387,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":325,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":411,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":137,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":118,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":64,"org.easymock.tests2.UsageTest.resumeIfFailure":244,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":127,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":40,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":18,"org.easymock.tests2.StubTest.stubWithReturnValue":298,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":498,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":199,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":317,"org.easymock.tests2.SerializationTest.testAllMockedMethod":38,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":449,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":494,"org.easymock.samples.SupportTest.voteForRemovals":167,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":21,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":284,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":393,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":455,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":204,"org.easymock.tests.UsageExpectAndThrowTest.object":391,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":341,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":196,"org.easymock.tests2.DelegateToTest.testWrongClass":231,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":354,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":355,"org.easymock.tests.UsageStrictMockTest.range":154,"org.easymock.samples.ConstructorCalledMockTest.testTax":23,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":170,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":253,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":92,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":392,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":73,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":42,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":367,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":378,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":300,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":496,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":406,"org.easymock.tests2.CaptureTest.testCaptureNone":220,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":491,"org.easymock.tests.UsageUnorderedTest.message":152,"org.easymock.tests.UsageVerifyTest.twoReturns":151,"org.easymock.tests.UsageVarargTest.varargByteAccepted":351,"org.easymock.tests2.ThreadingTest.testThreadSafe":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":59,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":486,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":34,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":333,"org.easymock.tests2.CaptureTest.testCapture_2617107":215,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":495,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":328,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":453,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":371,"org.easymock.tests2.UsageConstraintsTest.any":187,"org.easymock.tests2.StubTest.stub":297,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":364,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":413,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":454,"org.easymock.tests.UsageExpectAndThrowTest.longType":384,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":17,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":32,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":363,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":295,"org.easymock.tests2.SerializationTest.testClass":37,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":286,"org.easymock.tests.LimitationsTest.mockNativeMethod":131,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":125,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":327,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":266,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":296,"org.easymock.tests2.NameTest.nameForMocksControl":280,"org.easymock.tests2.MockedExceptionTest.testMockedException":10,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":268,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":47,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":377,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":385,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":173,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":113,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":79,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":74,"org.easymock.tests.MockingTest.testNicePartialClassMocking":112,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":83,"org.easymock.tests2.CaptureTest.testCaptureLast":6,"org.easymock.tests2.CompareToTest.testCompareEqual":2,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":264,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":147,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":184,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":97,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":197,"org.easymock.tests.MockingTest.testTwoMocks":110,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":509,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":308,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":389,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":242,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":201,"org.easymock.samples.ExampleTest.removeNonExistingDocument":162,"org.easymock.tests.UsageStrictMockTest.differentMethods":155,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":271,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":361,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":283,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":492,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":104,"org.easymock.tests2.ConstraintsToStringTest.andToString":138,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":227,"org.easymock.tests2.MockBuilderTest.testCreateMockString":78,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":49,"org.easymock.tests.UsageExpectAndThrowTest.floatType":383,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":44,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":206,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":510,"org.easymock.tests.UsageVerifyTest.twoThrows":150,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":423,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":58,"org.easymock.samples.ExampleTest.voteAgainstRemoval":159,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":444,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":404,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":88,"org.easymock.tests.LimitationsTest.privateConstructor":130,"org.easymock.tests2.UsageConstraintsTest.testNotNull":200,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":421,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":9,"org.easymock.tests2.UsageTest.defaultResetToNice":241,"org.easymock.samples.ExampleTest.voteAgainstRemovals":156,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":445,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":323,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":265,"org.easymock.tests.UsageVarargTest.differentLength":348,"org.easymock.tests2.CallbackTest.callback":168,"org.easymock.tests2.UsageConstraintsTest.equals":179,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":30,"org.easymock.tests.UsageTest.openCallCountByLastCall":376,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":175,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":14,"org.easymock.tests.UsageCallCountTest.tooFewCalls":484,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":95,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":302,"org.easymock.tests.UsageThrowableTest.throwCheckedException":418,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":143,"org.easymock.tests.MockingTest.testStrictClassMocking":108,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":96,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":13,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":94,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":270,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":366,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":261,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":208,"org.easymock.tests.ObjectMethodsTest.testHashCode":331,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":229,"org.easymock.tests2.NameTest.nameForNiceMock":279,"org.easymock.tests2.DependencyTest.testInterfaceMocking":262,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":501,"org.easymock.samples.ExampleTest.addDocument":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":60,"org.easymock.tests2.DelegateToTest.testStubDelegate":4,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":65,"org.easymock.tests2.AnswerTest.stubAnswer":207,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":153,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":25,"org.easymock.tests.UsageVarargTest.varargLongAccepted":350,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":469,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":443,"org.easymock.tests.UsageExpectAndReturnTest.floatType":310,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":326,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":100,"org.easymock.tests2.ConstraintsToStringTest.orToString":134,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":24,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":426,"org.easymock.tests.UsageThrowableTest.noUpperLimit":415,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":194,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":290,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":176,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":39,"org.easymock.tests2.SerializationTest.test":169,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":218,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":31,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":103,"org.easymock.tests2.UsageConstraintsTest.testSame":182,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":309,"org.easymock.samples.SupportTest.addDocument":166,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":508,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":50,"org.easymock.tests.GenericTest.testPackageScope":123,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":474,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":438,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":289,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":306,"org.easymock.tests2.NameTest.nameForMock":277,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":320,"org.easymock.tests2.UsageStrictMockTest.differentMethods":142,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":27,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":85,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":312,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":395,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":329,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":338,"org.easymock.tests2.MockedExceptionTest.testRealException":12,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":447,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":171,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":144,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":446,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":140,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":368,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":370,"org.easymock.tests2.NameTest.nameForStrictMock":278,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":70,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":518,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":172,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":82,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":41,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":105,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":195,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":68,"org.easymock.tests2.UsageStrictMockTest.range":141,"org.easymock.tests2.UsageConstraintsTest.lessThan":202,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":285,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":442,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":54,"org.easymock.tests2.CaptureTest.testCaptureRightOne":221,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":490,"org.easymock.tests2.UsageConstraintsTest.testOr":183,"org.easymock.tests.UsageRangeTest.combination":335,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":80,"org.easymock.tests.UsageTest.wrongArguments":375,"org.easymock.tests2.MockBuilderTest.testWithConstructor":505,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":51,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":116,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":313,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":435,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":321,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":106,"org.easymock.tests.UsageVarargTest.varargShortAccepted":349,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":487,"org.easymock.tests2.UsageConstraintsTest.cmpTo":0,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":205,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":437,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":240,"org.easymock.tests2.CaptureTest.testCaptureFromStub":222,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":358,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":69,"org.easymock.tests.UsageTest.unexpectedCallWithArray":374,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":467,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":485,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":26,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":322,"org.easymock.tests2.CaptureTest.testCapture":8,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":468,"org.easymock.tests2.UsageConstraintsTest.constraints":177,"org.easymock.samples.ExampleTest.addAndChangeDocument":163,"org.easymock.tests2.ConstraintsToStringTest.notToString":136,"org.easymock.tests.UsageStrictMockTest.testVerify":470,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":164,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":466,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":458,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":219,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":431,"org.easymock.tests.LimitationsTest.abstractClass":129,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":314,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":432,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":427,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":252,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":343}}]
