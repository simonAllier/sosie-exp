[{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[0],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"position":"org.easymock.EasyMock:1065","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[1,2,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.MocksControl:136","failures":[4,4,5,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,3,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:759","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[113,114,115,116],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[9,48],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.EasyMock:1555","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[117,118,119],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1385","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"failures":[120,121,122,123,124,125,126],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:30","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:355","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:853","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.NotNull:36","sourceCode":"return java.lang.Object != null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1163","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[127,128,129,130],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Invocation:122","sourceCode":"if (!(java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[120,131,132,133,134,135,136,137,138,139],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"otherArgument":"o","myArgument":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:50","sourceCode":"if (int == 1) {\n    java.lang.StringBuilder.append((org.easymock.internal.ErrorMessage.(getActualCount()) + 1));\n} else {\n    java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount());\n    java.lang.StringBuilder.append(\" (+1)\");\n}","type":"CtIfImpl"},"failures":[140,141,142,143,144,145,146],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:111","sourceCode":"for (int int = 0 ; int < (java.lang.Class<?>[].int) ; int++) {\n    if (java.lang.Class<?>[][int].isPrimitive()) {\n        java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n    } else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n        java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n    } else {\n        final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n        org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n        java.lang.Object[][int] = java.lang.Object;\n    }\n}","type":"CtForImpl"},"failures":[79,80,81,82,84,85],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:79","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"m"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1107","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:41","sourceCode":"new java.util.Properties()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:60","sourceCode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Short.java.lang.Class<java.lang.Short>, java.lang.Short.java.lang.Short)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[9,147,10,148],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:172","failures":[46],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"failures":[131],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"this.org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(this.org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","state":"state"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[9,147,10,148],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[149,120,150,151,152,153,154,6,7,155,156,8,157,158,159,9,147,10,18,21,31,37,160,132,161,114,162,163,164,1,165,166,167,168,169,134,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,121,122,124,185,186,187,188,2,136,189,190,191,192,193,194,195,196,197,198,199,200,201,202,44,46,47,52,53,203,54,3,55,57,62,66,67,68,69,204,70,71,205,206,207,74,208,78,209,210,211,140,212,213,89,90,91,214,215,216,217,218,219,102,103,137,220,221,222,223,224,225,226,227,138,106,228,229,230,231,232,139,233,234,235,236,237,238,239,240,241,141,142,242,243,244,245,246,247,248,249,111,250,125,251,252,143,253,254,255,256,144,257,258,259,260,261,262,263],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ClassProxyFactory:168","failures":[4,5,6,7,8,10,11,14,15,18,20,22,23,26,29,32,33,36,52,53,54,3,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,109,110,111,112],"status":-1,"binaryOperator":"java.lang.reflect.Method[] != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[160,264],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:573","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Equals:53","failures":[131,136,139],"status":-1,"binaryOperator":"(java.lang.Object == null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"control":"control","this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[80,84],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[9,265,48,266,267,268,269,270,74,75],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Null:35","failures":[132],"status":-1,"binaryOperator":"java.lang.Object == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1471","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:143","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:124","failures":[4,5,149,120,150,151,152,153,154,6,7,155,156,8,157,158,159,9,147,10,18,21,31,37,271,272,273,274,113,160,264,132,133,275,161,114,162,163,276,164,115,277,1,278,279,165,166,167,168,169,134,135,116,170,171,118,119,280,281,282,283,172,173,174,175,284,176,177,178,179,180,181,285,286,182,287,288,289,183,184,121,290,122,124,185,186,291,187,188,2,292,293,294,136,189,295,190,191,192,193,194,195,196,197,296,198,199,200,201,202,40,41,44,45,46,47,49,50,51,52,53,203,54,3,55,56,57,60,61,62,63,66,67,68,69,204,70,71,205,206,207,74,208,76,77,78,297,298,209,210,211,140,212,213,299,300,301,302,303,304,305,306,89,90,91,307,308,214,215,309,216,310,311,312,313,217,314,315,316,317,218,318,319,320,321,219,322,323,102,103,137,220,221,222,223,324,224,225,226,227,138,325,326,106,228,229,230,231,327,328,329,330,232,331,332,139,233,234,333,334,235,236,335,237,336,337,338,339,238,340,341,342,343,239,344,345,346,347,240,241,348,349,141,142,350,350,242,243,244,245,246,247,248,249,111,250,125,251,351,352,353,354,355,356,357,358,359,360,361,143,362,253,254,255,256,144,257,258,363,364,365,366,367,368,369,370,371,372,373,374,259,260,261,375,262,263],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:86","sourceCode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")","type":"CtThrowImpl"},"failures":[376],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:131","failures":[101,102,103,104,105],"status":-1,"binaryOperator":"((java.lang.reflect.Method.getParameterTypes().int) == (java.lang.reflect.Method.getParameterTypes().int))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":160,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":328,"org.easymock.tests2.UsageTest.argumentsOrdered":189,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":200,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":366,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":2,"org.easymock.tests2.StubTest.stubWithReturnValue":300,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":265,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":313,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":156,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":169,"org.easymock.tests2.SerializationTest.testAllMockedMethod":10,"org.easymock.tests2.DelegateToTest.testReturnException":121,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":364,"org.easymock.tests.MockingTest.testPartialClassMocking":89,"org.easymock.samples.SupportTest.voteForRemovals":158,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":101,"org.easymock.tests.MockClassControlTest.testToString":95,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":341,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":65,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":25,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":148,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":333,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":21,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":117,"org.easymock.tests.UsageExpectAndThrowTest.object":238,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":206,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":166,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":266,"org.easymock.tests2.DelegateToTest.testWrongClass":122,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":325,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":326,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":114,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":228,"org.easymock.tests2.UsageTest.wrongArguments":187,"org.easymock.samples.ConstructorCalledMockTest.testTax":4,"org.easymock.tests.UsageStrictMockTest.range":144,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":303,"org.easymock.samples.ExampleTest.answerVsDelegate":120,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":296,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":66,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":108,"org.easymock.tests2.UsageConstraintsTest.testNull":132,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":340,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":54,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":199,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":46,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":100,"org.easymock.tests2.CaptureTest.testPrimitive":175,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":327,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":347,"org.easymock.tests.UsageTest.moreThanOneArgument":329,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":15,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":139,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":302,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":203,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":371,"org.easymock.tests2.CaptureTest.testCaptureNone":179,"org.easymock.tests.UsageUnorderedTest.message":143,"org.easymock.tests.UsageVerifyTest.twoReturns":142,"org.easymock.tests.UsageVarargTest.varargByteAccepted":226,"org.easymock.tests2.ThreadingTest.testThreadSafe":287,"org.easymock.tests.UsageTest.argumentsOrdered":233,"org.easymock.tests.UsageVarargTest.varargIntAccepted":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":32,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":261,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":6,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":352,"org.easymock.tests2.CaptureTest.testCapture_2617107":174,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":40,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":231,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":13,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":45,"org.easymock.tests2.UsageConstraintsTest.any":162,"org.easymock.tests2.StubTest.stub":299,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":126,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":356,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":365,"org.easymock.tests.UsageExpectAndThrowTest.longType":236,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":83,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":211,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":208,"org.easymock.tests2.SerializationTest.testClass":9,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":207,"org.easymock.tests.LimitationsTest.mockNativeMethod":111,"org.easymock.tests2.DependencyTest.testClassMocking":72,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":321,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":104,"org.easymock.tests2.AnswerTest.answer":170,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":283,"org.easymock.tests2.CaptureTest.testAnd":172,"org.easymock.tests2.UsageTest.strictResetToDefault":186,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":213,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":60,"org.easymock.tests2.MockedExceptionTest.testMockedException":77,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":370,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":322,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":195,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":20,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":332,"org.easymock.tests2.DelegateToTest.testDelegate":124,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":335,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":91,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":52,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":47,"org.easymock.tests.MockingTest.testNicePartialClassMocking":90,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":239,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":55,"org.easymock.tests.LimitationsTest.mockFinalMethod":112,"org.easymock.tests2.CaptureTest.testCaptureLast":178,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":367,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":128,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":71,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":161,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":361,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":167,"org.easymock.tests.MockingTest.testTwoMocks":88,"org.easymock.tests2.DependencyTest.testClassMockingSupport":73,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":127,"org.easymock.tests2.CaptureTest.testCapture1_2446744":284,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":307,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":342,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":338,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":281,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":136,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":135,"org.easymock.tests.UsageThrowableTest.throwError":242,"org.easymock.tests.UsageStrictMockTest.differentMethods":257,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":81,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":289,"org.easymock.tests2.MockBuilderTest.testCreateMockString":51,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":93,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":373,"org.easymock.tests.UsageExpectAndThrowTest.floatType":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":22,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":1,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":17,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":171,"org.easymock.tests.UsageVerifyTest.twoThrows":141,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":39,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":31,"org.easymock.samples.PartialClassMockTest.testGetArea":8,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":353,"org.easymock.samples.ExampleTest.voteAgainstRemoval":151,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":62,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":334,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":26,"org.easymock.tests2.UsageTest.niceToStrict":188,"org.easymock.tests.LimitationsTest.privateConstructor":110,"org.easymock.tests2.UsageConstraintsTest.testNotNull":134,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":249,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":76,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":44,"org.easymock.tests2.UsageTest.defaultResetToNice":294,"org.easymock.tests2.MockBuilderTest.testCreateMock":49,"org.easymock.samples.ExampleTest.voteAgainstRemovals":149,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":218,"org.easymock.tests.UsageVarargTest.differentLength":324,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":34,"org.easymock.tests2.CallbackTest.callback":159,"org.easymock.tests2.UsageConstraintsTest.equals":131,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":58,"org.easymock.tests.UsageTest.openCallCountByLastCall":331,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":339,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":196,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":273,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":301,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":230,"org.easymock.tests.UsageCallCountTest.tooFewCalls":259,"org.easymock.tests.UsageOverloadedMethodTest.overloading":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":30,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":36,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":251,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":115,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":314,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":240,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":69,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":0,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":164,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":180,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":304,"org.easymock.tests.UsageThrowableTest.throwCheckedException":246,"org.easymock.tests2.EasyMockSupportClassTest.testAll":18,"org.easymock.tests.MockClassControlTest.testEquals":99,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":103,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":345,"org.easymock.tests.MockingTest.testStrictClassMocking":86,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":359,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":282,"org.easymock.tests2.CaptureTest.testCaptureAll":173,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":306,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":70,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":68,"org.easymock.tests2.UsageConstraintsTest.testMatches":277,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":204,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":119,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":372,"org.easymock.samples.ExampleTest.voteForRemovals":153,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":184,"org.easymock.tests.UsageVarargTest.allKinds":138,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":349,"org.easymock.tests2.DependencyTest.testInterfaceMocking":205,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":268,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":360,"org.easymock.samples.BasicClassMockTest.testPrintContent":7,"org.easymock.samples.ExampleTest.addDocument":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":33,"org.easymock.tests2.DelegateToTest.testStubDelegate":290,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":38,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":248,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":298,"org.easymock.tests2.AnswerTest.stubAnswer":118,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":368,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":123,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":255,"org.easymock.tests2.UsageConstraintsTest.greaterThan":278,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":270,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":19,"org.easymock.tests.UsageVarargTest.varargLongAccepted":225,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":63,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":258,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":85,"org.easymock.samples.ExampleTest.voteForRemoval":150,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":288,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":64,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":320,"org.easymock.tests.UsageExpectAndReturnTest.floatType":214,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":74,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":56,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":5,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":279,"org.easymock.tests.UsageThrowableTest.noUpperLimit":243,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":130,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":274,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":106,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":185,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":11,"org.easymock.tests2.SerializationTest.test":147,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":176,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":48,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":193,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":80,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":244,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":308,"org.easymock.tests2.UsageConstraintsTest.testSame":133,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":16,"org.easymock.samples.SupportTest.addDocument":157,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":363,"org.easymock.tests2.CaptureTest.testCaptureFirst":182,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":194,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":190,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":351,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":23,"org.easymock.tests.GenericTest.testPackageScope":102,"org.easymock.tests2.UsageTest.moreThanOneArgument":291,"org.easymock.tests2.CaptureTest.testCapture2_2446744":286,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":183,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":50,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":227,"org.easymock.tests.GenericTest.testBridgedEquals":105,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":262,"org.easymock.tests.UsageExpectAndReturnTest.longType":215,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":357,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":191,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":346,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":315,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":168,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":344,"org.easymock.tests2.UsageStrictMockTest.differentMethods":212,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":369,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":59,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":309,"org.easymock.tests.UsageCallCountTest.tooManyCalls":263,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":343,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":323,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":374,"org.easymock.tests2.MockedExceptionTest.testRealException":297,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":35,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":312,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":237,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":210,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":247,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":229,"org.easymock.tests.MockingTest.testNiceClassMocking":92,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":67,"org.easymock.tests.MockingTest.testClassMocking":87,"org.easymock.tests2.UsageConstraintsTest.testContains":276,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":78,"org.easymock.tests2.UsageConstraintsTest.testFind":264,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":348,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":43,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":271,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":3,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":362,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":272,"org.easymock.tests.UsageExpectAndReturnTest.object":217,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":14,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":82,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":145,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":165,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":57,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":41,"org.easymock.tests2.UsageStrictMockTest.range":140,"org.easymock.tests2.UsageConstraintsTest.lessThan":116,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":198,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":267,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":223,"org.easymock.tests.UsageTest.exactCallCountByLastCall":234,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":305,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":269,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":192,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":27,"org.easymock.tests2.CaptureTest.testCaptureRightOne":181,"org.easymock.tests2.UsageConstraintsTest.testOr":275,"org.easymock.tests.UsageRangeTest.combination":219,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":75,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":318,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":53,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":137,"org.easymock.tests.UsageTest.wrongArguments":232,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":125,"org.easymock.tests.MockClassControlTest.testHashCode":98,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":24,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":94,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":216,"org.easymock.tests2.EasyMockSupportTest.testVerify":202,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":316,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":28,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":250,"org.easymock.tests.UsageVarargTest.varargShortAccepted":224,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":84,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":375,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":280,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":376,"org.easymock.tests2.UsageConstraintsTest.cmpTo":163,"org.easymock.tests.UsageVarargTest.varargCharAccepted":222,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":209,"org.easymock.tests2.UsageTest.openCallCountByLastCall":292,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":293,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":201,"org.easymock.tests.DefaultClassInstantiatorTest.object":79,"org.easymock.tests2.CaptureTest.testCaptureFromStub":285,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":42,"org.easymock.tests.UsageTest.unexpectedCallWithArray":330,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":337,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":29,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":254,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":245,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":260,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":317,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":256,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":61,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":97,"org.easymock.tests2.UsageConstraintsTest.constraints":113,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":336,"org.easymock.samples.ExampleTest.addAndChangeDocument":154,"org.easymock.tests.CapturesMatcherTest.test":350,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":319,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":155,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":37,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":96,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":358,"org.easymock.tests2.UsageTest.resumeIfFailure":295,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":177,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":354,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":310,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":107,"org.easymock.tests.LimitationsTest.abstractClass":109,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":355,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":252,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":220,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":197,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":146,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":12}}]
