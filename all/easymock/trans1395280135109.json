[{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[3,4,5,6],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:336","sourceCode":"this.org.easymock.internal.IMocksBehavior.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior","threadSafe":"shouldBeUsedInOneThread"}},{"transplant":{"position":"org.easymock.internal.RecordState:197","sourceCode":"return java.lang.Number.shortValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:203","sourceCode":"return java.lang.Number.floatValue()","type":"CtReturnImpl"},"failures":[7,8,9,10,11,12],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"failures":[13,14],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1531","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"failures":[15],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,7,77,8,78,79,80,81,82,83,84,85,86,87,88,89,90,9,10,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,0,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,11,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,12,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,1,414,2,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,4,5,6,491],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[418,420,428,464,465,468,470,471,473,483,488],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareEqual:39","failures":[396,492,475],"status":-1,"binaryOperator":"int == 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[493,494,495],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[3,4,5,6],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,7,77,8,78,79,80,81,82,83,84,85,86,87,88,89,90,9,10,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,0,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,11,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,12,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,1,414,2,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,4,5,6,491],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Any:36","failures":[16,17,36,37,38,39,40,41,61,133,134,135,136,137,186,11,201,293,419,425,426,431,470,474],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:372","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:99","sourceCode":"continue","type":"CtContinueImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[112,406,409,410],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[496,497,498],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1543","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[499,478],"status":-1,"binaryOperator":"int >= 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:224","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else {\n    return java.lang.reflect.Type;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:220","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    return java.lang.reflect.Type != null ? java.lang.reflect.Type : java.lang.Object.java.lang.Object;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else {\n    return java.lang.reflect.Type;\n}","type":"CtIfImpl"},"failures":[30],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericType":"genericType"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[60,500,501,99,502,503],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value"}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1444","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[483],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[468,473,483,488],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"type"}},{"transplantationPoint":{"position":"org.easymock.Capture:134","sourceCode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} ","type":"CtIfImpl"},"failures":[504,505],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[16,17,31,36,37,40,41,56,61,63,64,67,69,70,71,72,73,74,75,76,7,77,8,78,79,80,81,82,83,84,85,86,87,88,89,90,9,10,97,98,101,102,105,133,134,135,136,137,138,143,145,146,148,175,176,178,186,11,201,203,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,258,259,260,261,263,268,274,280,289,290,293,295,296,299,307,308,309,310,312,313,314,316,317,318,320,322,323,324,327,328,331,333,334,335,336,337,338,348,352,354,356,360,366,369,379,385,388,389,390,391,392,393,396,400,401,402,405,409,410,414,2,415,417,418,419,420,421,422,425,426,427,428,430,431,432,433,434,435,436,437,438,439,440,441,442,443,451,462,463,464,465,467,468,469,470,471,472,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,4,5,491],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:38","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(long.long, java.lang.Long.java.lang.Long)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[506,507,508,509,510,338,339,355,358,4],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:223","failures":[369],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:89","failures":[511,13,352,400,401],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.LastControl:95","failures":[418,420,428,464,465,468,470,471,473,483,488],"status":-1,"binaryOperator":"int < int","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[504],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:40","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[512],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[41,61,63,64,91,92,98,100,103,104,238,239,240,293,295,296,318,319,325,326,513,514,515,516,503,517,518],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.MocksControl:148","sourceCode":"final java.lang.NoClassDefFoundError java.lang.NoClassDefFoundError","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:115","sourceCode":"final java.util.Stack<org.easymock.internal.Invocation> java.util.Stack<org.easymock.internal.Invocation> = org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.get()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,7,77,8,78,79,80,81,82,83,84,85,86,87,88,89,90,9,10,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,0,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,11,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,12,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,1,414,2,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,4,5,6,491],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"toStringMethod","method":"toStringMethod"}},{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:78","sourceCode":"continue","type":"CtContinueImpl"},"failures":[519],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[30,34],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:682","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[389],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:201","sourceCode":"java.util.Set<java.lang.reflect.Method>.toArray(new java.lang.reflect.Method[java.util.Set<java.lang.reflect.Method>.size()])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockMethodInterceptor:115","sourceCode":"for (final org.easymock.internal.MethodSerializationWrapper org.easymock.internal.MethodSerializationWrapper : java.util.Set<org.easymock.internal.MethodSerializationWrapper>) {\n    try {\n        java.util.Set<java.lang.reflect.Method>.add(org.easymock.internal.MethodSerializationWrapper.getMethod());\n    } catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n        throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n    }\n}","type":"CtForEachImpl"},"failures":[4],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[506,507,508,497,498,339,355],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Captures:53","failures":[504,418,419,420,421,422,423,424,425,426,427,428,429,430,431],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":465,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":97,"org.easymock.tests2.UsageTest.argumentsOrdered":326,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":442,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":281,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":0,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":321,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":269,"org.easymock.tests2.DelegateToTest.testReturnException":414,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":183,"org.easymock.tests.MockingTest.testPartialClassMocking":175,"org.easymock.tests.MockClassControlTest.testToString":205,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":341,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":95,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":404,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":124,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":373,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":214,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":369,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":290,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":506,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":472,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":36,"org.easymock.tests2.UsageTest.wrongArguments":319,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":457,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":243,"org.easymock.samples.ExampleTest.answerVsDelegate":259,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":198,"org.easymock.tests2.UsageConstraintsTest.testNull":468,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":180,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":391,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":441,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":210,"org.easymock.tests2.CaptureTest.testPrimitive":421,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":40,"org.easymock.tests.UsageTest.moreThanOneArgument":98,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":233,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":390,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":255,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":188,"org.easymock.tests.UsageTest.argumentsOrdered":104,"org.easymock.tests.UsageVarargTest.varargIntAccepted":152,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":517,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":120,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":133,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":498,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":346,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":285,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":302,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":353,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":108,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":137,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":515,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":451,"org.easymock.tests.ReplayStateInvalidUsageTest.times":50,"org.easymock.tests2.DependencyTest.testClassMocking":287,"org.easymock.tests2.AnswerTest.answer":405,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":473,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":122,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":461,"org.easymock.tests2.CaptureTest.testAnd":418,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":195,"org.easymock.tests2.UsageTest.strictResetToDefault":317,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":399,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":350,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":254,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":436,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":236,"org.easymock.tests2.DelegateToTest.testDelegate":417,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":192,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":229,"org.easymock.tests.LimitationsTest.mockFinalMethod":57,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":186,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":142,"org.easymock.tests2.DependencyTest.testClassMockingSupport":288,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":91,"org.easymock.tests2.CaptureTest.testCapture1_2446744":422,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":395,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":227,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":459,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":44,"org.easymock.tests.UsageThrowableTest.throwError":67,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":197,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":35,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":286,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":387,"org.easymock.samples.PartialClassMockTest.testGetArea":268,"org.easymock.tests.MockingTest.testInterfaceMocking":177,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":45,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":134,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":163,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":170,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":215,"org.easymock.tests2.UsageTest.niceToStrict":320,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":374,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":495,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":106,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":352,"org.easymock.tests2.MockBuilderTest.testCreateMock":359,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":382,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":454,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":502,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":223,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":437,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":194,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":20,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":21,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":241,"org.easymock.tests.UsageOverloadedMethodTest.overloading":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":384,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":378,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":478,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":146,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":84,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":211,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":477,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":427,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":153,"org.easymock.tests.MockClassControlTest.testEquals":209,"org.easymock.tests2.EasyMockSupportClassTest.testAll":366,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":32,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":231,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":460,"org.easymock.tests2.CaptureTest.testCaptureAll":419,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":140,"org.easymock.tests.MockNameTest.defaultName":202,"org.easymock.tests2.UsageConstraintsTest.testMatches":479,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":42,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":256,"org.easymock.samples.ExampleTest.voteForRemovals":263,"org.easymock.tests.UsageVarargTest.allKinds":161,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":238,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":141,"org.easymock.samples.BasicClassMockTest.testPrintContent":272,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":73,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":291,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":416,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":187,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":282,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":510,"org.easymock.tests2.UsageConstraintsTest.greaterThan":481,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":367,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":235,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":402,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":253,"org.easymock.samples.ExampleTest.voteForRemoval":260,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":403,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":334,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":199,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":303,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":394,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":132,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":316,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":358,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":113,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":434,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":69,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":364,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":182,"org.easymock.tests2.CaptureTest.testCaptureFirst":431,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":112,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":435,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":328,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":149,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":80,"org.easymock.tests2.CaptureTest.testCapture2_2446744":430,"org.easymock.tests2.UsageTest.moreThanOneArgument":318,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":336,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":123,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":360,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":160,"org.easymock.tests.GenericTest.testBridgedEquals":34,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":28,"org.easymock.tests.UsageExpectAndReturnTest.longType":77,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":432,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":138,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":14,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":232,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":486,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":171,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":230,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":130,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":12,"org.easymock.tests.UsageCallCountTest.tooManyCalls":29,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":383,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":81,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":456,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":219,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":72,"org.easymock.tests.MockingTest.testNiceClassMocking":181,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":308,"org.easymock.tests.MockingTest.testClassMocking":173,"org.easymock.tests2.UsageConstraintsTest.testContains":476,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":13,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":22,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":331,"org.easymock.tests2.UsageConstraintsTest.testFind":467,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":213,"org.easymock.tests.MockTypeTest.fromEasyMockClass":196,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":413,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":58,"org.easymock.tests.UsageExpectAndReturnTest.object":83,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":396,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":455,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":440,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":507,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":155,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":168,"org.easymock.tests.UsageTest.exactCallCountByLastCall":105,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":16,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":111,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":189,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":94,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":339,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":150,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":89,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":145,"org.easymock.tests.MockClassControlTest.testHashCode":208,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":276,"org.easymock.tests2.EasyMockSupportTest.testVerify":444,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":376,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":190,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":143,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":19,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":458,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":445,"org.easymock.tests.UsageVarargTest.varargCharAccepted":154,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":245,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":292,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":128,"org.easymock.tests2.UsageTest.openCallCountByLastCall":322,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":493,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":443,"org.easymock.tests.DefaultClassInstantiatorTest.object":246,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":18,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":166,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":377,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":70,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":449,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":275,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":400,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":207,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":220,"org.easymock.tests.CapturesMatcherTest.test":504,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":90,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":385,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":206,"org.easymock.tests2.UsageTest.resumeIfFailure":327,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":193,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":301,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":185,"org.easymock.tests2.StubTest.stubWithReturnValue":299,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":355,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":487,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":82,"org.easymock.tests2.SerializationTest.testAllMockedMethod":6,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":121,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":503,"org.easymock.samples.SupportTest.voteForRemovals":274,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":30,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":278,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":226,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":3,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":127,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":406,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":96,"org.easymock.tests.UsageExpectAndThrowTest.object":224,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":484,"org.easymock.tests2.DelegateToTest.testWrongClass":415,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":11,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":201,"org.easymock.tests.UsageStrictMockTest.range":63,"org.easymock.samples.ConstructorCalledMockTest.testTax":266,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":305,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":439,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":307,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":225,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":354,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":103,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":52,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":363,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":242,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":500,"org.easymock.tests2.CaptureTest.testCaptureNone":426,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":164,"org.easymock.tests.UsageUnorderedTest.message":41,"org.easymock.tests.UsageVerifyTest.twoReturns":240,"org.easymock.tests.UsageVarargTest.varargByteAccepted":159,"org.easymock.tests2.ThreadingTest.testThreadSafe":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":380,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":26,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":169,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":271,"org.easymock.tests2.CaptureTest.testCapture_2617107":420,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":518,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":93,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":125,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":39,"org.easymock.tests2.UsageConstraintsTest.any":474,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":49,"org.easymock.tests2.StubTest.stub":298,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":131,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":184,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":126,"org.easymock.tests.UsageExpectAndThrowTest.longType":217,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":250,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":48,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":294,"org.easymock.tests2.SerializationTest.testClass":4,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":280,"org.easymock.tests.LimitationsTest.mockNativeMethod":56,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":33,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":10,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":448,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":297,"org.easymock.tests2.NameTest.nameForMocksControl":345,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":450,"org.easymock.tests2.MockedExceptionTest.testMockedException":330,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":368,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":102,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":412,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":178,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":218,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":388,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":356,"org.easymock.tests.MockingTest.testNicePartialClassMocking":176,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":393,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":496,"org.easymock.tests2.CompareToTest.testCompareEqual":492,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":446,"org.easymock.tests2.CaptureTest.testCaptureLast":425,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":92,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":471,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":314,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":485,"org.easymock.tests.MockingTest.testTwoMocks":174,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":315,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":75,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":222,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":325,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":489,"org.easymock.samples.ExampleTest.removeNonExistingDocument":264,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":453,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":46,"org.easymock.tests.UsageStrictMockTest.differentMethods":64,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":277,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":248,"org.easymock.tests2.ConstraintsToStringTest.andToString":516,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":335,"org.easymock.tests2.MockBuilderTest.testCreateMockString":362,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":203,"org.easymock.tests.UsageExpectAndThrowTest.floatType":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":370,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":480,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":365,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":408,"org.easymock.tests.UsageVerifyTest.twoThrows":239,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":340,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":144,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":379,"org.easymock.samples.ExampleTest.voteAgainstRemoval":261,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":162,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":116,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":401,"org.easymock.tests.LimitationsTest.privateConstructor":55,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":519,"org.easymock.tests2.UsageConstraintsTest.testNotNull":488,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":74,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":329,"org.easymock.tests2.UsageTest.defaultResetToNice":324,"org.easymock.samples.ExampleTest.voteAgainstRemovals":258,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":117,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":88,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":447,"org.easymock.tests.UsageVarargTest.differentLength":156,"org.easymock.tests2.CallbackTest.callback":491,"org.easymock.tests2.UsageConstraintsTest.equals":466,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":397,"org.easymock.tests.UsageTest.openCallCountByLastCall":101,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":462,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":38,"org.easymock.tests.UsageCallCountTest.tooFewCalls":24,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":310,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":244,"org.easymock.tests.UsageThrowableTest.throwCheckedException":71,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":501,"org.easymock.tests.MockingTest.testStrictClassMocking":172,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":17,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":313,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":452,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":309,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":51,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":312,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":410,"org.easymock.tests2.CompareToTest.testGreateOrEqual":499,"org.easymock.tests.ObjectMethodsTest.testHashCode":167,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":497,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":337,"org.easymock.tests2.NameTest.nameForNiceMock":344,"org.easymock.tests2.DependencyTest.testInterfaceMocking":289,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":508,"org.easymock.samples.ExampleTest.addDocument":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":386,"org.easymock.tests2.DelegateToTest.testStubDelegate":2,"org.easymock.tests2.AnswerTest.stubAnswer":409,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":61,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":357,"org.easymock.tests.UsageVarargTest.varargLongAccepted":158,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":65,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":115,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":9,"org.easymock.tests.UsageExpectAndReturnTest.floatType":7,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":338,"org.easymock.tests2.ConstraintsToStringTest.orToString":513,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":267,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":482,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":147,"org.easymock.tests.UsageThrowableTest.noUpperLimit":68,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":284,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":463,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":300,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":423,"org.easymock.tests2.SerializationTest.test":5,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":247,"org.easymock.tests2.UsageConstraintsTest.testSame":469,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":76,"org.easymock.samples.SupportTest.addDocument":273,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":311,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":47,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":371,"org.easymock.tests.GenericTest.testPackageScope":31,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":191,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":110,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":283,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":179,"org.easymock.tests2.NameTest.nameForMock":342,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":85,"org.easymock.tests2.UsageStrictMockTest.differentMethods":296,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":361,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":398,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":8,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":228,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":165,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":237,"org.easymock.tests2.MockedExceptionTest.testRealException":332,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":200,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":119,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":118,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":293,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":37,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":53,"org.easymock.tests2.NameTest.nameForStrictMock":343,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":351,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":494,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":411,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":392,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":304,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":483,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":249,"org.easymock.tests.ErrorMessageTest.testGetters":512,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":348,"org.easymock.tests2.UsageStrictMockTest.range":295,"org.easymock.tests2.UsageConstraintsTest.lessThan":490,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":15,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":279,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":511,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":509,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":433,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":114,"org.easymock.tests2.CaptureTest.testCaptureRightOne":428,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":375,"org.easymock.tests2.UsageConstraintsTest.testOr":470,"org.easymock.tests.UsageRangeTest.combination":234,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":389,"org.easymock.tests.UsageTest.wrongArguments":100,"org.easymock.tests2.MockBuilderTest.testWithConstructor":347,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":372,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":204,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":78,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":107,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":86,"org.easymock.tests.UsageVarargTest.varargShortAccepted":157,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":251,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":27,"org.easymock.tests2.UsageConstraintsTest.cmpTo":475,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":407,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":109,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":323,"org.easymock.tests2.CaptureTest.testCaptureFromStub":429,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":43,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":349,"org.easymock.tests.UsageTest.unexpectedCallWithArray":99,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":60,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":25,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":87,"org.easymock.tests2.CaptureTest.testCapture":505,"org.easymock.tests2.UsageConstraintsTest.constraints":464,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":62,"org.easymock.samples.ExampleTest.addAndChangeDocument":265,"org.easymock.tests2.ConstraintsToStringTest.notToString":514,"org.easymock.tests.UsageStrictMockTest.testVerify":66,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":270,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":59,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":139,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":424,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":135,"org.easymock.tests.LimitationsTest.abstractClass":54,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":79,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":148,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":136,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":438,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":151}}]
