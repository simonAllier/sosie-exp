[{"transplant":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:80","failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:87","sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.InjectionPlan:51","failures":[21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[47,48,49,50,51],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:40","failures":[52,53,54,55,56,57,58,59,60,21,22,23,24,25,26,27,28,29,30,31,32,61,62,63,64,65,66,2,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,3,123,5,6,124,125,7,8,9,126,10,127,128,11,12,129,15,33,34,35,36,37,38,39,40,41,42,43,44,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,16,226,227,228,229,230,0,231,232,233,234,235,236,237,238,239,240,47,241,242,243,244,245,246,48,247,248,249,49,1,250,251,252,50,51,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,17,300,301,302,303,304,305,18,306,307,308,309,19,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,20,45,489,490,46],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1385","sourceCode":"return 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:786","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[491,492,493,494,427,447],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:280","sourceCode":"for (final java.lang.reflect.Type java.lang.reflect.Type : java.lang.reflect.Type[]) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n        if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n            org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n        } \n    } else if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n        org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.Type)).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:321","sourceCode":"for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n    final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int];\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = java.lang.reflect.TypeVariable<?>[][int];\n    if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n    } else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n        final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n        java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n        if (java.lang.reflect.Type == null) {\n            java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n        } \n        if (java.lang.reflect.Type != null) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } \n    } \n}","type":"CtForImpl"},"failures":[297],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericInterfaces":"actualTypeArguments","typeVariableMap":"typeVariableMap","this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"mock"}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[120,145,146,150,151,152,153,159,161,162,164,165,171,172,173,186,301,302,303,304,305,355,357,358,359,360,361,414,415,448,460,461,464,487,487,488,488],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:85","failures":[53,54,55,56,57,58,59,60,26,61,62,63,64,65,66,2,68,71,72,73,74,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,94,95,96,97,98,99,100,101,102,103,104,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,3,5,7,8,9,10,11,12,15,38,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,152,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,180,181,182,184,185,186,187,188,189,190,191,193,204,207,217,223,16,226,227,228,0,232,233,234,236,258,259,260,261,262,263,264,265,267,268,269,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,295,298,299,301,302,303,304,305,315,316,317,318,319,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,396,397,398,399,401,403,404,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,437,438,440,444,445,446,447,448,449,450,451,452,453,460,461,462,463,464,466,474,475,476,477,478,479,480,481,482,483,484,485,486,487,487,488,488,20,45,489,490,46],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[16,226,227,495],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[16,226,227,495],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:259","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"argType":"type","paramType":"type"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1304","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[148,150,153,154],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.Results:92","sourceCode":"for (final org.easymock.internal.Range org.easymock.internal.Range : java.util.LinkedList<org.easymock.internal.Range>) {\n    int += org.easymock.internal.Range.getMinimum();\n    if ((org.easymock.internal.Range.hasOpenCount()) || (int == (java.lang.Integer.int))) {\n        int = java.lang.Integer.int;\n    } else {\n        int += org.easymock.internal.Range.getMaximum();\n    }\n}","type":"CtForEachImpl"},"failures":[53,54,55,56,26,61,62,63,64,65,66,68,72,73,74,77,78,79,80,81,82,83,85,86,87,88,89,90,93,94,95,96,97,100,103,107,108,109,110,111,112,114,115,116,117,118,119,122,5,7,9,10,12,38,130,131,132,133,134,135,136,137,141,142,143,144,145,146,147,148,150,151,152,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,170,171,172,173,175,176,177,178,180,181,182,184,185,186,187,188,189,190,191,193,204,207,217,223,16,226,227,228,0,232,233,236,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,295,298,299,301,302,303,304,305,315,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,347,348,349,350,351,352,353,354,355,367,368,369,388,389,396,397,398,399,406,412,414,415,416,418,419,420,421,423,424,425,426,428,431,432,433,437,438,440,444,445,446,447,448,449,450,451,452,460,461,462,463,464,475,476,477,478,479,480,481,482,484,485,486,20,45,489,490,46],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Same:42","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:49","sourceCode":"java.lang.StringBuffer.append((((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\"))","type":"CtInvocationImpl"},"failures":[496,497,498,499,500],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocationAndResults:46","sourceCode":"return ((org.easymock.internal.ExpectedInvocation.toString()) + \": \") + (org.easymock.internal.Results.toString())","type":"CtReturnImpl"},"failures":[53,54,55,56,134,135,141,142,186,188,189,315,367,368,369,406,426,428,431,432,447,448,450,451],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[16,226,227],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.Invocation:154","sourceCode":"return (java.lang.String + \".\") + java.lang.String","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.LogicalOperator:62","sourceCode":"return java.lang.String","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"mockName":"symbol","methodName":"symbol"}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[52,53,54,55,56,57,58,59,60,21,22,23,24,25,26,27,28,29,30,31,32,61,62,63,64,65,66,2,67,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,3,5,6,125,7,8,9,10,11,12,15,33,34,35,36,37,38,39,40,41,42,43,44,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,178,180,183,184,185,186,187,188,189,190,191,192,193,194,198,199,200,201,202,204,206,207,208,209,212,215,217,218,219,220,221,222,223,226,227,0,231,232,233,234,235,236,237,238,239,240,47,241,242,243,244,245,246,48,247,248,249,49,1,250,251,252,50,51,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,17,300,301,302,303,304,305,18,308,309,19,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,439,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,20,45,489,490,46],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"position":"org.easymock.internal.ArgumentToString:83","failures":[135,141,142,188,501,502,315,368,369,407,427,428,431,432,447,450],"status":-1,"binaryOperator":"java.lang.Object[] == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[467,468,469,471,473],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:63","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[491,492,493,494,427,447],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"negateConditional","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[109,111,112,113,114,115,116,118,503,119,120,122],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1093","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:233","failures":[53,54,55,56,26,61,62,63,64,65,66,68,72,73,74,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,5,7,9,10,12,38,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,175,176,177,178,180,181,182,184,185,186,187,188,189,190,191,193,204,207,217,223,16,226,227,228,0,231,232,233,234,235,236,240,47,241,242,243,244,245,246,48,247,248,249,49,1,250,251,252,50,51,253,254,255,256,257,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,295,298,299,17,301,302,303,304,305,312,313,314,315,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,363,364,367,368,369,387,388,389,390,391,392,393,394,396,397,398,399,400,401,403,404,406,408,409,410,411,412,413,414,415,416,418,419,420,421,423,424,425,426,428,429,430,431,432,433,437,438,440,444,445,446,447,448,449,450,451,452,453,454,455,456,458,460,461,462,463,464,474,475,476,477,478,479,480,481,482,484,485,486,487,487,488,488,20,45,489,490,46],"status":-1,"binaryOperator":"(org.easymock.internal.ExpectedInvocation) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[467,471],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[126,128,504,505,506,507,508,509,510,511,512,16,228,229],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:134","sourceCode":"java.lang.Object = org.easymock.internal.RecordState.convertNumberClassIfNeccessary(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[120,145,146,150,151,152,153,159,161,162,164,165,171,172,173,186,301,302,303,304,305,355,357,358,359,360,361,400,414,415,448,460,461,464,487,487,488,488],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:986","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[168],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"failures":[192],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\")","type":"CtInvocationImpl"},"failures":[513],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:218","failures":[69,73,76,7,127,128,11,15,207,217,16,228,229,297,17,487,488,20],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:304","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[246,385,454,455,456],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[16,226,227,495],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.Range:52","failures":[188,189,363,364,367,450,451],"status":-1,"binaryOperator":"(int) == (int)","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":148,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":425,"org.easymock.tests2.UsageTest.argumentsOrdered":142,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":87,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":27,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":248,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":137,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":46,"org.easymock.tests2.DelegateToTest.testReturnException":232,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":409,"org.easymock.tests.MockingTest.testPartialClassMocking":437,"org.easymock.tests.MockClassControlTest.testToString":260,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":52,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":458,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":76,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":211,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":207,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":323,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":108,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":507,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":155,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":460,"org.easymock.tests2.UsageTest.wrongArguments":135,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":44,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":318,"org.easymock.samples.ExampleTest.answerVsDelegate":478,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":19,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":442,"org.easymock.tests2.UsageConstraintsTest.testNull":151,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":64,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":86,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":265,"org.easymock.tests2.CaptureTest.testPrimitive":112,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":464,"org.easymock.tests.UsageTest.moreThanOneArgument":426,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":342,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":63,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":359,"org.easymock.tests.UsageTest.argumentsOrdered":432,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":362,"org.easymock.tests.UsageVarargTest.varargIntAccepted":345,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":251,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":301,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":511,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":3,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":31,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":196,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":241,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":305,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":38,"org.easymock.tests.ReplayStateInvalidUsageTest.times":383,"org.easymock.tests2.DependencyTest.testClassMocking":105,"org.easymock.tests2.AnswerTest.answer":90,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":156,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":50,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":60,"org.easymock.tests2.CaptureTest.testAnd":109,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":307,"org.easymock.tests2.UsageTest.strictResetToDefault":133,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":124,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":71,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":358,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":398,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":81,"org.easymock.tests2.DelegateToTest.testDelegate":236,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":366,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":338,"org.easymock.tests.LimitationsTest.mockFinalMethod":296,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":412,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":374,"org.easymock.tests2.DependencyTest.testClassMockingSupport":106,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":237,"org.easymock.tests2.CaptureTest.testCapture1_2446744":113,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":67,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":336,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":58,"org.easymock.tests.UsageThrowableTest.throwError":387,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":377,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":309,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":395,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":32,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":225,"org.easymock.samples.PartialClassMockTest.testGetArea":20,"org.easymock.tests.MockingTest.testInterfaceMocking":439,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":378,"org.easymock.tests2.CompareToTest.testLessOrEqual":500,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":302,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":313,"org.easymock.tests2.UsageTest.niceToStrict":136,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":212,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":271,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":324,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":240,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":7,"org.easymock.tests2.MockBuilderTest.testCreateMock":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":220,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":41,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":491,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":332,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":82,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":306,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":322,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":416,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":316,"org.easymock.tests.UsageOverloadedMethodTest.overloading":475,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":222,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":404,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":161,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":474,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":283,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":160,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":118,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":346,"org.easymock.tests2.EasyMockSupportClassTest.testAll":204,"org.easymock.tests.MockClassControlTest.testEquals":264,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":299,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":340,"org.easymock.tests2.CaptureTest.testCaptureAll":110,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":59,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":372,"org.easymock.tests.MockNameTest.defaultName":292,"org.easymock.tests2.UsageConstraintsTest.testMatches":162,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":360,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":375,"org.easymock.samples.ExampleTest.voteForRemovals":482,"org.easymock.tests.UsageVarargTest.allKinds":354,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":367,"org.easymock.samples.BasicClassMockTest.testPrintContent":486,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":373,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":393,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":184,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":413,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":28,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":235,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":512,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":472,"org.easymock.tests2.UsageConstraintsTest.greaterThan":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":205,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":397,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":74,"org.easymock.samples.ExampleTest.voteForRemoval":479,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":473,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":97,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":75,"org.easymock.tests2.MockBuilderTest.testAddMethod_NotExisting":13,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":310,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":197,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":2,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":444,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":132,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":128,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":246,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":79,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":389,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":202,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":408,"org.easymock.tests2.CaptureTest.testCaptureFirst":122,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":231,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":245,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":80,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":144,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":407,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":279,"org.easymock.tests2.UsageTest.moreThanOneArgument":134,"org.easymock.tests2.CaptureTest.testCapture2_2446744":121,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":99,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":12,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":51,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":353,"org.easymock.tests.GenericTest.testBridgedEquals":300,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":423,"org.easymock.tests.UsageExpectAndReturnTest.longType":275,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":77,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":370,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":14,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":341,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":400,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":169,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":339,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":455,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":357,"org.easymock.tests.UsageCallCountTest.tooManyCalls":424,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":418,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":221,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":280,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":43,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":328,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":392,"org.easymock.tests.MockingTest.testNiceClassMocking":443,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":176,"org.easymock.tests.MockingTest.testClassMocking":435,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":417,"org.easymock.tests2.UsageConstraintsTest.testContains":159,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":4,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":103,"org.easymock.tests2.UsageConstraintsTest.testFind":150,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":476,"org.easymock.tests.MockTypeTest.fromEasyMockClass":308,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":445,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":193,"org.easymock.tests.UsageExpectAndReturnTest.object":282,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":68,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":42,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":85,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":508,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":348,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":269,"org.easymock.tests.UsageTest.exactCallCountByLastCall":433,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":355,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":244,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":457,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":363,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":229,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":288,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":343,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":403,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":22,"org.easymock.tests.MockClassControlTest.testHashCode":263,"org.easymock.tests2.EasyMockSupportTest.testVerify":89,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":214,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":364,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":401,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":321,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":501,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":57,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":174,"org.easymock.tests.UsageVarargTest.varargCharAccepted":347,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":465,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":185,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":257,"org.easymock.tests2.UsageTest.openCallCountByLastCall":138,"org.easymock.tests.DefaultClassInstantiatorTest.object":466,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":88,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":320,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":267,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":502,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":215,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":330,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":390,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":36,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":21,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":72,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":262,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":329,"org.easymock.tests.CapturesMatcherTest.test":513,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":289,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":454,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":223,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":261,"org.easymock.tests2.UsageTest.resumeIfFailure":143,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":18,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":195,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":411,"org.easymock.tests2.StubTest.stubWithReturnValue":131,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":126,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":170,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":281,"org.easymock.tests2.SerializationTest.testAllMockedMethod":227,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":252,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":505,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":492,"org.easymock.samples.SupportTest.voteForRemovals":490,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":297,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":24,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":335,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":495,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":256,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":91,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":459,"org.easymock.tests.UsageExpectAndThrowTest.object":333,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":167,"org.easymock.tests2.DelegateToTest.testWrongClass":234,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":414,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":415,"org.easymock.samples.ConstructorCalledMockTest.testTax":487,"org.easymock.tests.UsageStrictMockTest.range":450,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":199,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":84,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":175,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":334,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":9,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":431,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":385,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":201,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":317,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":493,"org.easymock.tests2.CaptureTest.testCaptureNone":117,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":314,"org.easymock.tests.UsageUnorderedTest.message":315,"org.easymock.tests.UsageVerifyTest.twoReturns":369,"org.easymock.tests.UsageVarargTest.varargByteAccepted":352,"org.easymock.tests2.ThreadingTest.testThreadSafe":96,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":218,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":421,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":485,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":270,"org.easymock.tests2.CaptureTest.testCapture_2617107":111,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":239,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":463,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":254,"org.easymock.tests2.UsageConstraintsTest.any":157,"org.easymock.tests2.StubTest.stub":130,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":382,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":456,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":410,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":255,"org.easymock.tests.UsageExpectAndThrowTest.longType":326,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":470,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":381,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":187,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":26,"org.easymock.tests2.SerializationTest.testClass":16,"org.easymock.tests.LimitationsTest.mockNativeMethod":295,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":17,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":291,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":35,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":190,"org.easymock.tests2.NameTest.nameForMocksControl":56,"org.easymock.tests2.MockedExceptionTest.testMockedException":102,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":37,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":206,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":430,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":440,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":192,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":327,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":61,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":10,"org.easymock.tests.MockingTest.testNicePartialClassMocking":438,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":66,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":506,"org.easymock.tests2.CompareToTest.testCompareEqual":498,"org.easymock.tests2.CaptureTest.testCaptureLast":116,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":33,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":238,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":182,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":154,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":168,"org.easymock.tests.MockingTest.testTwoMocks":436,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":183,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":272,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":331,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":141,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":172,"org.easymock.samples.ExampleTest.removeNonExistingDocument":483,"org.easymock.tests.UsageStrictMockTest.differentMethods":451,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":40,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":379,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":23,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":468,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":98,"org.easymock.tests2.MockBuilderTest.testCreateMockString":15,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":258,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":208,"org.easymock.tests.UsageExpectAndThrowTest.floatType":325,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":203,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":93,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":230,"org.easymock.tests.UsageVerifyTest.twoThrows":368,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":402,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":217,"org.easymock.samples.ExampleTest.voteAgainstRemoval":480,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":249,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":312,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":73,"org.easymock.tests.LimitationsTest.privateConstructor":294,"org.easymock.tests2.UsageConstraintsTest.testNotNull":171,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":394,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":101,"org.easymock.tests2.UsageTest.defaultResetToNice":140,"org.easymock.samples.ExampleTest.voteAgainstRemovals":477,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":49,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":287,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":34,"org.easymock.tests.UsageVarargTest.differentLength":349,"org.easymock.tests2.CallbackTest.callback":0,"org.easymock.tests2.UsageConstraintsTest.equals":149,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":69,"org.easymock.tests.UsageTest.openCallCountByLastCall":429,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":145,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":462,"org.easymock.tests.UsageCallCountTest.tooFewCalls":419,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":178,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":319,"org.easymock.tests.UsageThrowableTest.throwCheckedException":391,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":494,"org.easymock.tests.MockingTest.testStrictClassMocking":434,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":181,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":356,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":177,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":39,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":384,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":180,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":95,"org.easymock.tests2.CompareToTest.testGreateOrEqual":499,"org.easymock.tests.ObjectMethodsTest.testHashCode":268,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":510,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":100,"org.easymock.tests2.NameTest.nameForNiceMock":55,"org.easymock.tests2.DependencyTest.testInterfaceMocking":107,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":509,"org.easymock.samples.ExampleTest.addDocument":481,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":224,"org.easymock.tests2.DelegateToTest.testStubDelegate":233,"org.easymock.tests2.AnswerTest.stubAnswer":94,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":448,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":127,"org.easymock.tests.UsageVarargTest.varargLongAccepted":351,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":452,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":247,"org.easymock.tests.UsageExpectAndReturnTest.floatType":274,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":290,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":228,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":488,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":405,"org.easymock.tests.UsageThrowableTest.noUpperLimit":388,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":165,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":30,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":146,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":194,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":114,"org.easymock.tests2.SerializationTest.test":226,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":467,"org.easymock.tests2.UsageConstraintsTest.testSame":152,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":273,"org.easymock.samples.SupportTest.addDocument":489,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":179,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":209,"org.easymock.tests.GenericTest.testPackageScope":298,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":365,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":243,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":29,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":441,"org.easymock.tests2.NameTest.nameForMock":53,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":284,"org.easymock.tests2.UsageStrictMockTest.differentMethods":189,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":129,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":70,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":276,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":337,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":266,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":399,"org.easymock.tests2.MockedExceptionTest.testRealException":104,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":311,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":200,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":250,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":504,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":186,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":1,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":461,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":386,"org.easymock.tests2.NameTest.nameForStrictMock":54,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":125,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":191,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":65,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":198,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":469,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":166,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":5,"org.easymock.tests2.UsageStrictMockTest.range":188,"org.easymock.tests2.UsageConstraintsTest.lessThan":173,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":25,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":48,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":78,"org.easymock.tests2.CaptureTest.testCaptureRightOne":119,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":213,"org.easymock.tests2.UsageConstraintsTest.testOr":153,"org.easymock.tests.UsageRangeTest.combination":396,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":62,"org.easymock.tests.UsageTest.wrongArguments":428,"org.easymock.tests2.MockBuilderTest.testWithConstructor":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":210,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":259,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":277,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":47,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":285,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":471,"org.easymock.tests.UsageVarargTest.varargShortAccepted":350,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":422,"org.easymock.tests2.UsageConstraintsTest.cmpTo":158,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":92,"org.easymock.tests2.CompareToTest.testLessThan":496,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":242,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":139,"org.easymock.tests2.CaptureTest.testCaptureFromStub":120,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":376,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":6,"org.easymock.tests.UsageTest.unexpectedCallWithArray":427,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":447,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":420,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":286,"org.easymock.tests2.CaptureTest.testCapture":503,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":449,"org.easymock.tests2.UsageConstraintsTest.constraints":147,"org.easymock.samples.ExampleTest.addAndChangeDocument":484,"org.easymock.tests.UsageStrictMockTest.testVerify":453,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":45,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":446,"org.easymock.tests2.CompareToTest.testGreateThan":497,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":371,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":115,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":303,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":278,"org.easymock.tests.LimitationsTest.abstractClass":293,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":406,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":304,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":83,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":344}}]
