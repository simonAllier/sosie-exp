[{"transplant":{"position":"org.easymock.internal.MockBuilder:163","sourceCode":"if (org.easymock.ConstructorArgs != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"failures":[15,16,17,18,19,20,21,22,23,24,25,25,26,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,0,54,55,56,57,58,59,60,61,62,63,64,65,66,2,67,68,69,3,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Same:43","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:41","sourceCode":"org.easymock.IArgumentMatcher.appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[483],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"failures":[447,454,458,463,464],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MockBuilder:201","failures":[25,25,26,26,28,53,0,61,90,93,96,97,100,104,185,186,187,188,189,191,192,484,193,195,196,220,230,236,300,303,315,318],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:39","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.vm.vendor\")","type":"CtReturnImpl"},"failures":[485],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[486],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[85,427],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:275","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[18,64,101,103,179,181,182,184,352,459],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:40","failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,0,487,54,55,56,57,58,59,60,61,62,63,64,65,66,2,67,488,68,69,3,4,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,489,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,11,186,187,12,188,189,190,191,13,192,484,193,194,195,14,196,197,490,491,492,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,493,281,282,283,284,285,286,494,287,288,289,290,291,292,293,294,295,296,297,298,299,495,300,496,497,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1249","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[202],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:363","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.Capture:43","sourceCode":"org.easymock.Capture<T>.this(org.easymock.CaptureType.org.easymock.CaptureType)","type":"CtInvocationImpl"},"failures":[70,72,73,74,75,76,79,498,80],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"failures":[499],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[148],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:189","sourceCode":"return this.boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Injection:82","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"isThreadSafe":"matched"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:51","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[160],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[500],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:91","sourceCode":"java.lang.StringBuilder.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocation:104","sourceCode":"java.lang.StringBuffer.append(org.easymock.internal.Invocation.getMockAndMethodName())","type":"CtInvocationImpl"},"failures":[56,58,59,175,176,177,178,203,204,210,211,247,248,249,258,259,271,272,274,275,379,475,477,480,481],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:147","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[143],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"verified":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:323","sourceCode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[248,265,266],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:79","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    } \n}","type":"CtForEachImpl"},"failures":[315,316,317,318,319],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:210","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:103","sourceCode":"final java.lang.StringBuffer java.lang.StringBuffer = new java.lang.StringBuffer()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.Capture:112","sourceCode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MockBuilder:235","failures":[25,26,53,0,61,93,11,12,13,193,501,14,502,503,500],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:104","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.reflect.Method);\n}","type":"CtForEachImpl"},"failures":[189,504],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1234","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:89","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]));\n}","type":"CtForImpl"},"failures":[54,57,58,59,64,85,96,98,131,135,136,139,147,163,186,194,195,196,201,204,205,206,210,211,212,213,248,249,505,506,269,271,273,274,275,507,495,312,313,314,358,379,411,470,474,476,477,480,481,482],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[16,17,19,20,22,25,25,26,26,28,32,33,34,35,36,42,51,52,53,56,58,59,61,62,65,66,2,67,68,69,3,70,71,73,74,77,78,79,80,81,82,83,84,85,86,87,88,89,92,96,97,98,106,113,126,130,131,132,133,134,135,136,137,138,139,140,141,144,145,146,147,148,150,151,152,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,170,171,172,173,183,186,189,191,192,195,201,202,203,205,207,208,209,212,213,217,220,230,236,239,241,242,247,249,250,251,252,253,254,256,261,263,264,265,266,267,268,272,274,275,316,318,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,357,382,389,397,398,401,402,403,404,417,418,419,420,421,422,423,427,428,430,470,471,472,473,474,475,478,479,482],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:189","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, new net.sf.cglib.proxy.Callback[]{ org.easymock.internal.ClassProxyFactory.MockMethodInterceptor })","type":"CtInvocationImpl"},"failures":[25,25,26,26,28,29,30,53,61,63,65,66,2,67,69,3,84,85,87,88,89,90,92,94,95,96,97,98,99,100,101,104,105,106,185,186,187,188,189,190,191,192,194,195,196,198,217,220,230,236,281,300,303,316,317,318,382,424,425,426,427,428,430,433,434,435,436,437,438,439,440,441,442],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":148,"org.easymock.tests.ClassInstantiatorFactoryTest.getJVM":485,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":474,"org.easymock.tests2.UsageTest.argumentsOrdered":211,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":140,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":114,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":456,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":206,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":27,"org.easymock.tests2.DelegateToTest.testReturnException":125,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":295,"org.easymock.tests.MockingTest.testPartialClassMocking":427,"org.easymock.tests.MockClassControlTest.testToString":436,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":174,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":256,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":465,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":100,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":224,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":220,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":359,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":52,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":155,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":397,"org.easymock.tests2.UsageTest.wrongArguments":204,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":48,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":245,"org.easymock.samples.ExampleTest.answerVsDelegate":18,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":303,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":432,"org.easymock.tests2.UsageConstraintsTest.testNull":151,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":87,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":441,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":139,"org.easymock.tests2.CaptureTest.testPrimitive":73,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":401,"org.easymock.tests.UsageTest.moreThanOneArgument":475,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":378,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":86,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":421,"org.easymock.tests.UsageTest.argumentsOrdered":481,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":384,"org.easymock.tests.UsageVarargTest.varargIntAccepted":407,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":461,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":250,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":185,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":491,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":118,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":190,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":448,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":254,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":42,"org.easymock.tests.ReplayStateInvalidUsageTest.times":348,"org.easymock.tests2.DependencyTest.testClassMocking":49,"org.easymock.tests2.AnswerTest.answer":179,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":156,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":463,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":123,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":497,"org.easymock.tests2.CaptureTest.testAnd":70,"org.easymock.tests2.UsageTest.strictResetToDefault":202,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":12,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":95,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":420,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":472,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":134,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":388,"org.easymock.tests2.DelegateToTest.testDelegate":129,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":374,"org.easymock.tests.LimitationsTest.mockFinalMethod":383,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":298,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":396,"org.easymock.tests2.DependencyTest.testClassMockingSupport":50,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":258,"org.easymock.tests2.CaptureTest.testCapture1_2446744":74,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":91,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":372,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":121,"org.easymock.tests.UsageThrowableTest.throwError":261,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":342,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":302,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":495,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":119,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":423,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":502,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":238,"org.easymock.samples.PartialClassMockTest.testGetArea":28,"org.easymock.tests.MockingTest.testInterfaceMocking":429,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":343,"org.easymock.tests2.CompareToTest.testLessOrEqual":499,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":251,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":241,"org.easymock.tests2.UsageTest.niceToStrict":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":225,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":293,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":360,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":446,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":189,"org.easymock.tests2.MockBuilderTest.testCreateMock":194,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":233,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":45,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":368,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":135,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":496,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":445,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":306,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":243,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":8,"org.easymock.tests.UsageOverloadedMethodTest.overloading":403,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":235,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":161,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":355,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":402,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":331,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":160,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":79,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":408,"org.easymock.tests.MockClassControlTest.testEquals":440,"org.easymock.tests2.EasyMockSupportClassTest.testAll":217,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":317,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":376,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":394,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":122,"org.easymock.tests2.CaptureTest.testCaptureAll":71,"org.easymock.tests.MockNameTest.defaultName":391,"org.easymock.tests2.UsageConstraintsTest.testMatches":162,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":422,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":340,"org.easymock.samples.ExampleTest.voteForRemovals":22,"org.easymock.tests.UsageVarargTest.allKinds":416,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":247,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":395,"org.easymock.samples.BasicClassMockTest.testPrintContent":30,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":267,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":54,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":128,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":115,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":299,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":494,"org.easymock.tests2.UsageConstraintsTest.greaterThan":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":218,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":471,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":98,"org.easymock.samples.ExampleTest.voteForRemoval":19,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":287,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":99,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":33,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":304,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":492,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":90,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":442,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":201,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":193,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":453,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":132,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":215,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":294,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":124,"org.easymock.tests2.CaptureTest.testCaptureFirst":83,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":452,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":133,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":213,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":358,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":327,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":35,"org.easymock.tests2.CaptureTest.testCapture2_2446744":82,"org.easymock.tests2.UsageTest.moreThanOneArgument":203,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":464,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":195,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":415,"org.easymock.tests.GenericTest.testBridgedEquals":319,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":9,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":313,"org.easymock.tests.UsageExpectAndReturnTest.longType":323,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":392,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":130,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":504,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":377,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":169,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":239,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":375,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":419,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":279,"org.easymock.tests.UsageCallCountTest.tooManyCalls":314,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":308,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":234,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":328,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":47,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":364,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":266,"org.easymock.tests.MockingTest.testNiceClassMocking":433,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":66,"org.easymock.tests.MockingTest.testClassMocking":425,"org.easymock.tests2.UsageConstraintsTest.testContains":159,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":307,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":106,"org.easymock.tests2.UsageConstraintsTest.testFind":150,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":404,"org.easymock.tests.MockTypeTest.fromEasyMockClass":301,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":103,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":269,"org.easymock.tests.UsageExpectAndReturnTest.object":330,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":92,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":46,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":138,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":410,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":291,"org.easymock.tests.UsageTest.exactCallCountByLastCall":482,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":10,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":389,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":451,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":385,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":255,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":0,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":405,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":336,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":354,"org.easymock.tests.MockClassControlTest.testHashCode":439,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":109,"org.easymock.tests2.EasyMockSupportTest.testVerify":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":227,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":386,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":444,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":352,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":505,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":120,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":489,"org.easymock.tests.UsageVarargTest.varargCharAccepted":409,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":493,"org.easymock.tests2.CaptureTest.testCaptureMultiple":486,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":55,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":469,"org.easymock.tests2.UsageTest.openCallCountByLastCall":207,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":141,"org.easymock.tests.DefaultClassInstantiatorTest.object":281,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":443,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":289,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":506,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":228,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":366,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":264,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":40,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":108,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":438,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":96,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":365,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":337,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":278,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":437,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":236,"org.easymock.tests2.UsageTest.resumeIfFailure":212,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":300,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":490,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":297,"org.easymock.tests2.StubTest.stubWithReturnValue":144,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":13,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":170,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":329,"org.easymock.tests2.SerializationTest.testAllMockedMethod":63,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":462,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":500,"org.easymock.samples.SupportTest.voteForRemovals":16,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":315,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":111,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":371,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":468,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":180,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":257,"org.easymock.tests.UsageExpectAndThrowTest.object":369,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":167,"org.easymock.tests2.DelegateToTest.testWrongClass":127,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":417,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":418,"org.easymock.samples.ConstructorCalledMockTest.testTax":25,"org.easymock.tests.UsageStrictMockTest.range":274,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":199,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":137,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":65,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":7,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":370,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":191,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":480,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":214,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":350,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":244,"org.easymock.tests2.CaptureTest.testCaptureNone":78,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":242,"org.easymock.tests.UsageUnorderedTest.message":379,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":507,"org.easymock.tests.UsageVerifyTest.twoReturns":249,"org.easymock.tests.UsageVarargTest.varargByteAccepted":414,"org.easymock.tests2.ThreadingTest.testThreadSafe":32,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":231,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":311,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":29,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":292,"org.easymock.tests2.CaptureTest.testCapture_2617107":72,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":260,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":466,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":400,"org.easymock.tests2.UsageConstraintsTest.any":157,"org.easymock.tests2.StubTest.stub":143,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":347,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":280,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":467,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":296,"org.easymock.tests.UsageExpectAndThrowTest.longType":362,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":285,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":346,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":57,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":113,"org.easymock.tests2.SerializationTest.testClass":61,"org.easymock.tests.LimitationsTest.mockNativeMethod":382,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":318,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":339,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":39,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":60,"org.easymock.tests2.NameTest.nameForMocksControl":178,"org.easymock.tests2.MockedExceptionTest.testMockedException":105,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":219,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":479,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":430,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":102,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":363,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":84,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":192,"org.easymock.tests.MockingTest.testNicePartialClassMocking":428,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":89,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":37,"org.easymock.tests2.CaptureTest.testCaptureLast":77,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":259,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":154,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":3,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":168,"org.easymock.tests.MockingTest.testTwoMocks":426,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":4,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":320,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":367,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":210,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":172,"org.easymock.samples.ExampleTest.removeNonExistingDocument":23,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":44,"org.easymock.tests.UsageStrictMockTest.differentMethods":275,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":344,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":110,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":283,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":34,"org.easymock.tests2.MockBuilderTest.testCreateMockString":196,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":434,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":221,"org.easymock.tests.UsageExpectAndThrowTest.floatType":361,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":163,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":216,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":182,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":487,"org.easymock.tests.UsageVerifyTest.twoThrows":248,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":353,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":230,"org.easymock.samples.ExampleTest.voteAgainstRemoval":20,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":457,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":240,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":97,"org.easymock.tests.LimitationsTest.privateConstructor":381,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":6,"org.easymock.tests2.UsageConstraintsTest.testNotNull":171,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":104,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":268,"org.easymock.tests2.UsageTest.defaultResetToNice":209,"org.easymock.samples.ExampleTest.voteAgainstRemovals":17,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":458,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":335,"org.easymock.tests.UsageVarargTest.differentLength":411,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":38,"org.easymock.tests2.CallbackTest.callback":64,"org.easymock.tests2.UsageConstraintsTest.equals":149,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":93,"org.easymock.tests.UsageTest.openCallCountByLastCall":478,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":145,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":399,"org.easymock.tests.UsageCallCountTest.tooFewCalls":309,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":67,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":246,"org.easymock.tests.UsageThrowableTest.throwCheckedException":265,"org.easymock.tests.MockingTest.testStrictClassMocking":424,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":390,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":69,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":43,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":2,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":349,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":68,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":184,"org.easymock.tests.ObjectMethodsTest.testHashCode":290,"org.easymock.tests2.NameTest.nameForNiceMock":177,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":36,"org.easymock.tests2.DependencyTest.testInterfaceMocking":51,"org.easymock.samples.ExampleTest.addDocument":21,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":232,"org.easymock.tests2.DelegateToTest.testStubDelegate":126,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":237,"org.easymock.tests2.AnswerTest.stubAnswer":183,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":272,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":484,"org.easymock.tests.UsageVarargTest.varargLongAccepted":413,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":276,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":455,"org.easymock.tests.UsageExpectAndReturnTest.floatType":322,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":338,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":53,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":26,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":165,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":117,"org.easymock.tests.UsageThrowableTest.noUpperLimit":262,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":356,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":146,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":197,"org.easymock.tests2.SerializationTest.test":62,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":75,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":282,"org.easymock.tests2.UsageConstraintsTest.testSame":152,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":321,"org.easymock.samples.SupportTest.addDocument":15,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":488,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":222,"org.easymock.tests.GenericTest.testPackageScope":316,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":387,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":450,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":116,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":431,"org.easymock.tests2.NameTest.nameForMock":175,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":332,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":14,"org.easymock.tests2.UsageStrictMockTest.differentMethods":59,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":94,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":324,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":373,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":288,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":473,"org.easymock.tests2.MockedExceptionTest.testRealException":107,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":305,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":460,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":200,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":503,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":459,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":56,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":398,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":351,"org.easymock.tests2.NameTest.nameForStrictMock":176,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":188,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":101,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":1,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":88,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":198,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":166,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":284,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":186,"org.easymock.tests2.UsageStrictMockTest.range":58,"org.easymock.tests2.UsageConstraintsTest.lessThan":173,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":112,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":454,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":131,"org.easymock.tests2.CaptureTest.testCaptureRightOne":80,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":226,"org.easymock.tests2.UsageConstraintsTest.testOr":153,"org.easymock.tests.UsageRangeTest.combination":470,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":85,"org.easymock.tests.UsageTest.wrongArguments":477,"org.easymock.tests2.MockBuilderTest.testWithConstructor":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":223,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":435,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":325,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":447,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":333,"org.easymock.tests.UsageVarargTest.varargShortAccepted":412,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":286,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":312,"org.easymock.tests2.UsageConstraintsTest.cmpTo":158,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":181,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":449,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":208,"org.easymock.tests2.CaptureTest.testCaptureFromStub":81,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":341,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":187,"org.easymock.tests.UsageTest.unexpectedCallWithArray":476,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":271,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":310,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":501,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":334,"org.easymock.tests2.CaptureTest.testCapture":498,"org.easymock.tests2.UsageConstraintsTest.constraints":147,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":273,"org.easymock.samples.ExampleTest.addAndChangeDocument":24,"org.easymock.tests2.ConstraintsToStringTest.notToString":483,"org.easymock.tests.UsageStrictMockTest.testVerify":277,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":31,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":270,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":393,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":76,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":252,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":326,"org.easymock.tests.LimitationsTest.abstractClass":380,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":253,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":357,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":406,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":136}}]
