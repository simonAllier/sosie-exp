[{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[0,1,2,3],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:37","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))","type":"CtThrowImpl"},"failures":[4],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[5,6,7,8],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:340","sourceCode":"org.easymock.internal.IMocksBehavior.shouldBeUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[9,10],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[11],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int)","name":"math","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[12,13,14,15,16,9,10,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"position":"org.easymock.internal.LastControl:92","failures":[42,43,44,0,45,46,1,2,3],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:172","failures":[47,48],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[49,50,51,52,53],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[54],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:603","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Range:68","sourceCode":"return \"at least \" + (int)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"failures":[55,56,57,58,59,60,22,61,62,63,35,64,65,66,36,67,68,69,70,71],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[72,73,74,75,76,77],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:814","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"method","equalsMethod":"result"}},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","sourceCode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Same:37","failures":[78],"status":-1,"binaryOperator":"(java.lang.Object) == java.lang.Object","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[5,6,7],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:70","sourceCode":"return ((\"between \" + (int)) + \" and \") + (int)","type":"CtReturnImpl"},"failures":[79,60,80,66],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:149","sourceCode":"if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n    if (java.lang.reflect.Constructor<T> != null) {\n        throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n    } \n    java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n} ","type":"CtIfImpl"},"failures":[5,81,82,83,84,85],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"position":"org.easymock.EasyMock:1249","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:54","sourceCode":"return false","type":"CtReturnImpl"},"failures":[86],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:171","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:154","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[87,88,89],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:158","failures":[11,90],"status":-1,"binaryOperator":"((java.lang.reflect.Field.getModifiers()) & int) == int","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:185","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[12,91,42,92,93,78,44,94,95,13,96,14,97,98,15,16,9,10,17,18,2,99,100,19,20,101,21,102,79,60,22,89,103,104,105,23,24,25,26,106,27,107,108,109,110,28,111,112,29,113,114,115,116,30,117,118,31,119,32,120,121,35,80,66,122,36,123,124,37,125,126,38,127,128,129,130,39,131,132,40,133,41,134,135],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[79,61,62,63,136,35,64,80,137,67,68,69,70,71,138],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"failures":[139,140],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:190","sourceCode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:83","sourceCode":"return java.lang.Boolean.java.lang.Boolean.valueOf((java.lang.Object == (java.lang.Object[][0])))","type":"CtReturnImpl"},"failures":[141,142,143,144,145,146,147,148,149,150,151,152,12,91,42,43,92,93,78,44,0,153,154,155,94,95,13,96,87,14,97,46,156,157,158,159,160,98,15,6,7,161,162,163,164,88,165,166,167,16,9,10,168,169,170,171,172,17,1,18,2,173,99,100,174,19,20,175,3,176,101,21,177,178,102,179,180,181,182,183,184,185,59,186,79,60,187,188,189,190,191,22,61,192,89,103,104,62,63,105,193,194,195,196,197,198,23,24,25,199,200,201,202,203,204,205,206,72,73,207,74,75,208,76,26,209,106,210,211,212,213,214,215,216,217,77,218,219,220,221,27,222,223,224,225,226,227,228,229,230,231,232,233,234,235,107,109,110,236,237,238,239,139,240,241,242,243,28,111,244,245,112,246,29,113,114,115,247,116,30,117,118,248,31,119,32,120,249,250,121,251,252,253,254,255,256,257,258,259,260,35,261,262,263,64,65,264,80,66,265,266,267,122,36,67,123,124,68,69,268,269,270,271,272,273,274,37,125,275,276,126,277,38,127,128,129,278,130,39,131,132,279,40,133,41,134,135,70,71,280,281,282,283,284,285,286,287],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"value":"proxy"}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:225","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[141,142,143,144,145,146,147,148,149,150,151,152,43,93,0,153,154,155,95,87,46,156,157,158,159,160,288,47,289,5,6,7,161,162,163,164,88,165,166,290,168,169,170,172,17,1,18,2,173,100,174,19,20,175,3,21,177,178,182,85,185,59,186,79,60,187,188,291,292,293,189,190,191,61,192,89,62,63,193,194,195,198,25,199,294,295,200,201,296,297,202,203,204,298,205,206,72,73,207,74,75,208,76,26,209,106,210,211,212,213,214,215,220,221,222,223,224,225,226,228,229,230,231,232,233,234,107,238,239,139,240,244,245,246,247,248,251,252,253,254,255,260,35,263,64,65,264,80,66,265,267,67,68,69,268,275,276,277,278,279,70,71,299,300,301,285,286,287,302],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:113","sourceCode":"for (int int = 0 ; int < (java.util.List<java.lang.reflect.Method>.size()) ; int++) {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(int);\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n        return java.lang.reflect.Method;\n    } \n}","type":"CtForImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"bridgeMethod"}},{"position":"org.easymock.internal.LastControl:95","failures":[42,43,93,44,0,45,46,160,1,2,3],"status":-1,"binaryOperator":"int < int","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[191],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[15,303],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[194,304,195,197,23,24,25,207,305,285],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1235","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:201","failures":[306,307,308,309,288,47,289,310,311,312,313,5,314,315,316,290,317,180,85,318,291,292,293,319,319,320,320,298,54,321,322,48],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MockInvocationHandler:37","failures":[],"status":0,"binaryOperator":"(org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:681","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)","type":"CtInvocationImpl"},"failures":[154],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:68","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[79,61,62,63,323,136,35,64,80,137,67,68,69,70,71,138],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.InjectionPlan:51","failures":[324,325,326,327,328,189,329,330,331,332,333,334,335,336,337,338,339,198,340,341,342,343,344,345,204,205],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":43,"org.easymock.tests2.UsageTest.argumentsOrdered":63,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":122,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":150,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":340,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":272,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":89,"org.easymock.tests2.StubTest.stubWithReturnValue":179,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":204,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":129,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":159,"org.easymock.tests2.SerializationTest.testAllMockedMethod":7,"org.easymock.tests2.DelegateToTest.testReturnException":170,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":270,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":34,"org.easymock.tests.MockingTest.testPartialClassMocking":299,"org.easymock.samples.SupportTest.voteForRemovals":72,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":54,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":338,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":317,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":30,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":8,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":291,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":28,"org.easymock.tests.UsageExpectAndThrowTest.object":247,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":156,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":178,"org.easymock.tests2.DelegateToTest.testWrongClass":172,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":256,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":257,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":153,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":238,"org.easymock.tests2.UsageTest.wrongArguments":61,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":334,"org.easymock.samples.ConstructorCalledMockTest.testTax":319,"org.easymock.tests.UsageStrictMockTest.range":80,"org.easymock.samples.ExampleTest.answerVsDelegate":207,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":199,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":48,"org.easymock.tests2.UsageConstraintsTest.testNull":93,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":116,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":164,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":250,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":47,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":149,"org.easymock.tests2.CaptureTest.testPrimitive":173,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":241,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":68,"org.easymock.tests.UsageTest.moreThanOneArgument":36,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":120,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":163,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":282,"org.easymock.tests2.CaptureTest.testCaptureNone":20,"org.easymock.tests.UsageUnorderedTest.message":35,"org.easymock.tests.UsageVerifyTest.twoReturns":71,"org.easymock.tests.UsageVarargTest.varargByteAccepted":230,"org.easymock.tests2.ThreadingTest.testThreadSafe":16,"org.easymock.tests.UsageTest.argumentsOrdered":69,"org.easymock.tests.UsageVarargTest.varargIntAccepted":224,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":253,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":202,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":216,"org.easymock.tests2.CaptureTest.testCapture_2617107":2,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":306,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":344,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":240,"org.easymock.tests2.UsageConstraintsTest.any":154,"org.easymock.tests2.StubTest.stub":102,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":219,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":271,"org.easymock.tests.UsageExpectAndThrowTest.longType":245,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":186,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":198,"org.easymock.tests2.SerializationTest.testClass":5,"org.easymock.tests.LimitationsTest.mockNativeMethod":260,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":189,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":321,"org.easymock.tests2.AnswerTest.answer":194,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":134,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":45,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":326,"org.easymock.tests2.CaptureTest.testAnd":1,"org.easymock.tests2.UsageTest.strictResetToDefault":191,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":187,"org.easymock.tests2.NameTest.nameForMocksControl":58,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":328,"org.easymock.tests2.MockedExceptionTest.testMockedException":181,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":281,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":109,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":145,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":124,"org.easymock.tests2.DelegateToTest.testDelegate":17,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":4,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":301,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":112,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":161,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":289,"org.easymock.tests.MockingTest.testNicePartialClassMocking":300,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":248,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":165,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":324,"org.easymock.tests2.CaptureTest.testCaptureLast":19,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":273,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":297,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":0,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":157,"org.easymock.tests2.CaptureTest.testCapture1_2446744":99,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":37,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":117,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":114,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":62,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":98,"org.easymock.tests.UsageThrowableTest.throwError":209,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":330,"org.easymock.tests.UsageStrictMockTest.differentMethods":66,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":337,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":50,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":10,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":345,"org.easymock.tests2.MockBuilderTest.testCreateMockString":313,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":284,"org.easymock.tests.UsageExpectAndThrowTest.floatType":244,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":87,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":195,"org.easymock.tests.UsageVerifyTest.twoThrows":70,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":292,"org.easymock.samples.PartialClassMockTest.testGetArea":298,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":217,"org.easymock.samples.ExampleTest.voteAgainstRemoval":75,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":290,"org.easymock.tests2.UsageTest.niceToStrict":192,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":111,"org.easymock.tests2.UsageConstraintsTest.testNotNull":160,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":215,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":180,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":288,"org.easymock.samples.ExampleTest.voteAgainstRemovals":73,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":33,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":325,"org.easymock.tests.UsageVarargTest.differentLength":227,"org.easymock.tests2.CallbackTest.callback":25,"org.easymock.tests2.UsageConstraintsTest.equals":86,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":331,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":315,"org.easymock.tests.UsageTest.openCallCountByLastCall":123,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":115,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":146,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":12,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":139,"org.easymock.tests.UsageCallCountTest.tooFewCalls":251,"org.easymock.tests.UsageOverloadedMethodTest.overloading":221,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":287,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":13,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":220,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":200,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":130,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":95,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":11,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":175,"org.easymock.tests.UsageThrowableTest.throwCheckedException":212,"org.easymock.tests.MockClassControlTest.testEquals":249,"org.easymock.tests2.EasyMockSupportClassTest.testAll":188,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":234,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":119,"org.easymock.tests2.CaptureTest.testCaptureAll":18,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":296,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":237,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":329,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":295,"org.easymock.tests2.UsageConstraintsTest.testMatches":96,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":201,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":197,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":283,"org.easymock.samples.ExampleTest.voteForRemovals":76,"org.easymock.tests2.NameTest.nameForNiceMock":57,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":169,"org.easymock.tests.UsageVarargTest.allKinds":232,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":135,"org.easymock.tests2.DependencyTest.testInterfaceMocking":177,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":82,"org.easymock.samples.BasicClassMockTest.testPrintContent":203,"org.easymock.samples.ExampleTest.addDocument":208,"org.easymock.tests2.DelegateToTest.testStubDelegate":171,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":214,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":184,"org.easymock.tests2.AnswerTest.stubAnswer":196,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":341,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":274,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":65,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":84,"org.easymock.tests2.UsageConstraintsTest.greaterThan":14,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":310,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":108,"org.easymock.tests.UsageVarargTest.varargLongAccepted":229,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":167,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":265,"org.easymock.samples.ExampleTest.voteForRemoval":74,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":53,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":9,"org.easymock.tests.UsageExpectAndReturnTest.floatType":275,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":41,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":314,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":85,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":320,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":343,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":97,"org.easymock.tests.UsageThrowableTest.noUpperLimit":106,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":267,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":91,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":190,"org.easymock.tests2.SerializationTest.test":6,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":100,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":311,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":90,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":140,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":49,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":143,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":210,"org.easymock.tests2.UsageConstraintsTest.testSame":78,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":125,"org.easymock.samples.SupportTest.addDocument":206,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":269,"org.easymock.tests2.CaptureTest.testCaptureFirst":21,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":144,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":193,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":138,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":127,"org.easymock.tests.GenericTest.testPackageScope":233,"org.easymock.tests2.UsageTest.moreThanOneArgument":22,"org.easymock.tests2.CaptureTest.testCapture2_2446744":101,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":168,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":312,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":342,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":231,"org.easymock.tests.GenericTest.testBridgedEquals":235,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":254,"org.easymock.tests2.NameTest.nameForMock":55,"org.easymock.tests.UsageExpectAndReturnTest.longType":276,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":261,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":141,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":32,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":39,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":158,"org.easymock.tests2.UsageStrictMockTest.differentMethods":60,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":31,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":280,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":126,"org.easymock.tests.UsageCallCountTest.tooManyCalls":255,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":118,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":242,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":110,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":121,"org.easymock.tests2.MockedExceptionTest.testRealException":183,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":128,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":333,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":323,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":305,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":246,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":59,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":239,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":213,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":294,"org.easymock.tests2.UsageConstraintsTest.testContains":94,"org.easymock.tests2.NameTest.nameForStrictMock":56,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":182,"org.easymock.tests2.UsageConstraintsTest.testFind":92,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":27,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":309,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":23,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":88,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":262,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":24,"org.easymock.tests.UsageExpectAndReturnTest.object":278,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":51,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":46,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":166,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":307,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":332,"org.easymock.tests2.UsageStrictMockTest.range":79,"org.easymock.tests2.UsageConstraintsTest.lessThan":15,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":148,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":226,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":81,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":339,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":243,"org.easymock.tests.UsageTest.exactCallCountByLastCall":268,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":236,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":83,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":142,"org.easymock.tests2.CaptureTest.testCaptureRightOne":3,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":258,"org.easymock.tests2.UsageConstraintsTest.testOr":44,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":318,"org.easymock.tests.UsageRangeTest.combination":107,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":222,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":40,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":162,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":286,"org.easymock.tests.UsageTest.wrongArguments":67,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":336,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":277,"org.easymock.tests2.EasyMockSupportTest.testVerify":152,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":131,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":259,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":285,"org.easymock.tests.UsageVarargTest.varargShortAccepted":228,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":52,"org.easymock.tests2.UsageConstraintsTest.cmpTo":155,"org.easymock.tests.UsageVarargTest.varargCharAccepted":225,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":304,"org.easymock.tests2.CompareToTest.testLessThan":303,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":185,"org.easymock.tests2.UsageTest.openCallCountByLastCall":103,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":104,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":151,"org.easymock.tests2.CaptureTest.testCaptureFromStub":176,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":308,"org.easymock.tests.UsageTest.unexpectedCallWithArray":137,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":136,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":113,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":211,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":64,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":252,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":327,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":335,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":132,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":316,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":264,"org.easymock.tests2.UsageConstraintsTest.constraints":42,"org.easymock.samples.ExampleTest.addAndChangeDocument":26,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":29,"org.easymock.tests.UsageStrictMockTest.testVerify":266,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":133,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":293,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":263,"org.easymock.tests2.UsageTest.resumeIfFailure":105,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":174,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":77,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":322,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":38,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":302,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":218,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":223,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":147}}]
