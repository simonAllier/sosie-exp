[{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[0,1,2,3],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"failures":[4,5],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","sourceCode":"return \"cmpEq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1816","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","failures":[36,37,38,39,40,41],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:37","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"failures":[42,43,44,45,6,46,47,7,48,49,50,51,0,52,53,54,55,56,57,58,8,59,60,9,10,2,61,62,63,3,64,11,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,12,18,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,25,26,27,28,29,31,32,33,34,35,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:176","sourceCode":"return false","type":"CtReturnImpl"},"failures":[148,149,150,151,152,153,154,155],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[156],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:205","sourceCode":"return java.lang.Number.doubleValue()","type":"CtReturnImpl"},"failures":[16,98,99,103,157,35],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[0,1,2,3],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:37","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[58],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:385","sourceCode":"new org.easymock.internal.Range(1 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[158,159,160,161],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[11,162],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:80","sourceCode":"throw new java.lang.AssertionError(\"Nothing captured yet\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:261","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[163,164,165,166,167,168,169,170,171],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[172,173],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:113","sourceCode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:311","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:46","sourceCode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:45","sourceCode":"try {\n    return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation);\n} finally {\n    java.util.concurrent.locks.ReentrantLock.unlock();\n}","type":"CtTryImpl"},"failures":[],"status":-2,"name":"replace","type":"adrStmt","variableMapping":{"invocation":"invocation","this":"this"}},{"transplant":{"position":"org.easymock.internal.Injector:116","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.reflect.Field.getType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:66","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)))","type":"CtLocalVariableImpl"},"failures":[174,175,176,177,178,179,180,181,182,183,184],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"f":"field"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[2],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:800","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[63],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[185],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:80","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[49,54,186,187,71],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:250","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:866","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:48","sourceCode":"if (org.easymock.internal.MocksControl != null) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\n} else {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"failures":[188,189],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[7,9,61,190],"status":-1,"binaryOperator":"int > 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:302","sourceCode":"org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:38","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[191,191,192,192,43,193,194,195,196,197,75,198,199,200,201,202,76,156,148,203,204,205,206,86,207,208,209,210,211,212,213,214,215,216,182,217,218,183,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":50,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":123,"org.easymock.tests2.StubTest.stubWithReturnValue":12,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":177,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":63,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":104,"org.easymock.tests2.SerializationTest.testAllMockedMethod":220,"org.easymock.tests.MockingTest.testPartialClassMocking":232,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":37,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":4,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":163,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":23,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":135,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":222,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":127,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":61,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":150,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":34,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":35,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":55,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":31,"org.easymock.tests.UsageStrictMockTest.range":96,"org.easymock.samples.ConstructorCalledMockTest.testTax":191,"org.easymock.samples.ExampleTest.answerVsDelegate":42,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":236,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":215,"org.easymock.tests2.UsageConstraintsTest.testNull":0,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":197,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":134,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":208,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":84,"org.easymock.tests2.CaptureTest.testPrimitive":66,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":33,"org.easymock.tests.UsageTest.moreThanOneArgument":124,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":141,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":15,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":39,"org.easymock.tests2.CaptureTest.testCaptureNone":69,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":171,"org.easymock.tests2.ThreadingTest.testThreadSafe":77,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":193,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":25,"org.easymock.tests2.CaptureTest.testCapture_2617107":187,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":203,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":154,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":166,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":173,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":207,"org.easymock.tests2.UsageConstraintsTest.any":56,"org.easymock.tests2.StubTest.stub":172,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":29,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":167,"org.easymock.tests2.SerializationTest.testClass":219,"org.easymock.tests.LimitationsTest.mockNativeMethod":237,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":230,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":112,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":1,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":227,"org.easymock.tests2.CaptureTest.testAnd":186,"org.easymock.tests2.UsageTest.strictResetToDefault":87,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":201,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":176,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":14,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":116,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":126,"org.easymock.tests2.DelegateToTest.testDelegate":94,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":234,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":129,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":195,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":209,"org.easymock.tests.MockingTest.testNicePartialClassMocking":233,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":198,"org.easymock.tests2.CaptureTest.testCaptureLast":68,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":149,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":113,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":159,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":54,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":183,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":62,"org.easymock.tests.MockingTest.testTwoMocks":231,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":158,"org.easymock.tests2.CaptureTest.testCapture1_2446744":67,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":184,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":98,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":136,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":132,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":64,"org.easymock.tests.UsageThrowableTest.throwError":142,"org.easymock.tests.UsageStrictMockTest.differentMethods":97,"org.easymock.tests2.MockBuilderTest.testCreateMockString":213,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":17,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":60,"org.easymock.tests.UsageVerifyTest.twoThrows":119,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":160,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":223,"org.easymock.samples.PartialClassMockTest.testGetArea":43,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":185,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":26,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":165,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":169,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":170,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":76,"org.easymock.tests2.UsageTest.niceToStrict":89,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":128,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":181,"org.easymock.tests2.UsageConstraintsTest.testNotNull":3,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":19,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":86,"org.easymock.tests2.MockBuilderTest.testCreateMock":210,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":157,"org.easymock.tests2.CallbackTest.callback":95,"org.easymock.tests.UsageTest.openCallCountByLastCall":125,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":36,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":133,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":82,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":7,"org.easymock.tests.UsageOverloadedMethodTest.overloading":121,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":8,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":217,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":105,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":58,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":70,"org.easymock.tests.UsageThrowableTest.throwCheckedException":144,"org.easymock.tests2.EasyMockSupportClassTest.testAll":221,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":229,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":40,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":139,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":225,"org.easymock.tests2.CaptureTest.testCaptureAll":65,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":218,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":182,"org.easymock.tests2.UsageConstraintsTest.testMatches":59,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":74,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":16,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":24,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":153,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":118,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":152,"org.easymock.samples.BasicClassMockTest.testPrintContent":194,"org.easymock.tests2.DelegateToTest.testStubDelegate":93,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":146,"org.easymock.tests2.AnswerTest.stubAnswer":73,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":189,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":18,"org.easymock.tests2.UsageConstraintsTest.greaterThan":9,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":155,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":115,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":156,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":164,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":78,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":111,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":199,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":148,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":192,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":10,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":161,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":239,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":48,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":81,"org.easymock.tests2.UsageConstraintsTest.testSame":52,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":99,"org.easymock.tests2.CaptureTest.testCaptureFirst":72,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":188,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":102,"org.easymock.tests.GenericTest.testPackageScope":228,"org.easymock.tests2.UsageTest.moreThanOneArgument":88,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":211,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":20,"org.easymock.tests.GenericTest.testBridgedEquals":5,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":79,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":212,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":106,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":140,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":30,"org.easymock.tests2.UsageStrictMockTest.differentMethods":47,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":138,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":179,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":13,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":100,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":137,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":117,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":103,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":22,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":6,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":32,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":145,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":216,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":204,"org.easymock.tests2.UsageConstraintsTest.testContains":57,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":214,"org.easymock.tests2.UsageConstraintsTest.testFind":51,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":122,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":44,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":75,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":45,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":2,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":200,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":205,"org.easymock.tests2.UsageStrictMockTest.range":46,"org.easymock.tests2.UsageConstraintsTest.lessThan":11,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":151,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":120,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":21,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":80,"org.easymock.tests2.CaptureTest.testCaptureRightOne":71,"org.easymock.tests2.UsageConstraintsTest.testOr":53,"org.easymock.tests.UsageRangeTest.combination":114,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":174,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":196,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":109,"org.easymock.tests2.MockBuilderTest.testWithConstructor":175,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":238,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":107,"org.easymock.tests2.CompareToTest.testLessThan":162,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":168,"org.easymock.tests2.UsageTest.openCallCountByLastCall":90,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":91,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":85,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":206,"org.easymock.tests.UsageTest.unexpectedCallWithArray":41,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":131,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":38,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":143,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":178,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":108,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":202,"org.easymock.tests2.UsageConstraintsTest.constraints":49,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":130,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":110,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":224,"org.easymock.tests2.CompareToTest.testGreateThan":190,"org.easymock.tests2.UsageTest.resumeIfFailure":92,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":226,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":27,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":235,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":101,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":28,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":83}}]
