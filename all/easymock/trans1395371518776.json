[{"transplantationPoint":{"position":"org.easymock.ConstructorArgs:75","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:135","sourceCode":"java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader()","type":"CtAssignmentImpl"},"failures":[0],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:310","sourceCode":"org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[1,2,3,4],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[5,6],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:149","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[7,8,9],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:58","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"toString\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,7,104,105,106,107,108,109,110,111,112,113,113,114,114,115],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[116,117,118,119],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[120,121],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:177","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.internal.LastControl:73","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.remove()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:126","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>.set(java.util.Stack<org.easymock.internal.Invocation>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state","threadSafe":"value"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1471","sourceCode":"return false","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"position":"org.easymock.internal.ReflectionUtils:161","failures":[122,48,123,124,52,54,55,125,126,127,128,129,130,131],"status":-1,"binaryOperator":"java.lang.reflect.Constructor<T> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"failures":[132],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:124","failures":[133],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1607","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(char[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[5,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,63,165,73,74,166,167,168,169,170,171,172,173,174,175,121,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,100,198,199],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:57","sourceCode":"final java.lang.IllegalArgumentException java.lang.IllegalArgumentException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"failures":[200,201,202,5,203,204,205,6,116,206,207,208,209,210,211,212,134,213,214,215,216,217,218,219,220,2,3,148,150,151,221,222,223,154,224,155,156,225,226,227,44,157,158,228,229,230,231,232,233,234,235,236,237,238,239,119,240,241,133,242,65,73,173,243,244,245,181,182,183,186,187,246,247,248,249,250,251,252,253,189,192,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,115],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:433","sourceCode":"do {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n} while (java.lang.Class<?> != null )","type":"CtDoImpl"},"failures":[108],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"failures":[200,201,202,5,203,204,205,6,116,206,207,299,208,209,210,211,212,134,213,214,215,216,217,218,219,220,300,301,15,18,28,34,146,302,2,3,147,148,151,152,153,221,303,37,38,39,120,222,223,154,304,305,224,155,306,307,156,308,225,309,226,227,310,40,44,45,46,47,157,158,228,160,311,231,312,232,233,52,313,53,54,117,234,118,235,314,315,237,238,239,119,240,241,164,56,57,58,59,316,60,61,317,318,319,320,133,242,62,165,64,65,66,68,71,73,321,322,323,324,79,88,173,243,244,177,325,326,327,328,245,329,90,179,181,183,184,185,186,187,188,94,95,96,246,247,248,249,250,251,252,330,331,332,333,334,189,195,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,196,354,355,356,357,255,256,257,258,259,260,261,358,359,262,360,263,264,265,266,361,267,268,269,270,362,271,272,273,274,275,276,363,277,278,364,365,279,366,280,281,282,283,367,284,285,286,287,368,288,289,290,291,369,370,107,108,371,372,298,373,374,375,376,377,378,379,111,112,380,113,114,115],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[150,159,161,162,172,178,180,182,187,188,190,191,193,194,197],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[74],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.LastControl:35","sourceCode":"new java.lang.ThreadLocal<org.easymock.internal.MocksControl>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:352","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[381],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:64","sourceCode":"try {\n    final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n    final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n    if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n        continue;\n    } \n} catch (final java.lang.Exception java.lang.Exception) {\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n}","type":"CtTryImpl"},"failures":[382,383,384,385,386,387],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"argType":"paramType","paramType":"paramType"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:285","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:257","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":5,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":253,"org.easymock.tests2.UsageTest.argumentsOrdered":162,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":308,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":328,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":160,"org.easymock.tests2.StubTest.stubWithReturnValue":221,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":122,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":380,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":266,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":217,"org.easymock.tests2.SerializationTest.testAllMockedMethod":53,"org.easymock.tests2.DelegateToTest.testReturnException":312,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":326,"org.easymock.tests.MockingTest.testPartialClassMocking":94,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":124,"org.easymock.samples.SupportTest.voteForRemovals":379,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":143,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":106,"org.easymock.tests.MockClassControlTest.testToString":80,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":285,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":22,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":277,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":18,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":1,"org.easymock.tests.UsageExpectAndThrowTest.object":367,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":301,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":215,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":126,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":275,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":276,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":206,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":246,"org.easymock.tests2.UsageTest.wrongArguments":159,"org.easymock.samples.ConstructorCalledMockTest.testTax":113,"org.easymock.tests.UsageStrictMockTest.range":182,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":336,"org.easymock.samples.ExampleTest.answerVsDelegate":298,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":306,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":56,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":99,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongPrimitive":384,"org.easymock.tests2.UsageConstraintsTest.testNull":204,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":284,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":64,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":85,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":46,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":156,"org.easymock.tests2.CaptureTest.testPrimitive":235,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":248,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":291,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":193,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":12,"org.easymock.tests.UsageTest.moreThanOneArgument":189,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":335,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":165,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":340,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":166,"org.easymock.tests2.CaptureTest.testCaptureNone":238,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":0,"org.easymock.tests.UsageUnorderedTest.message":197,"org.easymock.tests.UsageVerifyTest.twoReturns":188,"org.easymock.tests.UsageVarargTest.varargByteAccepted":355,"org.easymock.tests2.ThreadingTest.testThreadSafe":226,"org.easymock.tests.UsageTest.argumentsOrdered":194,"org.easymock.tests.UsageVarargTest.varargIntAccepted":351,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":29,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":348,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":111,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":144,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":255,"org.easymock.tests2.CaptureTest.testCapture_2617107":118,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":145,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":40,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":130,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":363,"org.easymock.tests2.UsageConstraintsTest.any":207,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":45,"org.easymock.tests2.StubTest.stub":153,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":259,"org.easymock.tests.UsageExpectAndThrowTest.longType":365,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":327,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":7,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":139,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":149,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":303,"org.easymock.tests2.SerializationTest.testClass":52,"org.easymock.tests.LimitationsTest.mockNativeMethod":88,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":164,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":274,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":109,"org.easymock.tests2.AnswerTest.answer":146,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":320,"org.easymock.tests2.CaptureTest.testAnd":117,"org.easymock.tests2.UsageTest.strictResetToDefault":157,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":71,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":152,"org.easymock.tests2.NameTest.nameForMocksControl":324,"org.easymock.tests2.MockedExceptionTest.testMockedException":38,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":339,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":305,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":17,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":254,"org.easymock.tests2.DelegateToTest.testDelegate":233,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":279,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":96,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":62,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":47,"org.easymock.tests.MockingTest.testNicePartialClassMocking":95,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":368,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":66,"org.easymock.tests.LimitationsTest.mockFinalMethod":89,"org.easymock.tests2.CaptureTest.testCaptureLast":237,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":125,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":245,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":199,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":61,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":116,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":334,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":216,"org.easymock.tests.MockingTest.testTwoMocks":93,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":198,"org.easymock.tests2.CaptureTest.testCapture1_2446744":236,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":260,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":286,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":318,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":282,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":161,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":219,"org.easymock.tests.UsageThrowableTest.throwError":292,"org.easymock.tests.UsageStrictMockTest.differentMethods":183,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":102,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":381,"org.easymock.tests2.ConstraintsToStringTest.andToString":142,"org.easymock.tests2.MockBuilderTest.testCreateMockString":51,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":78,"org.easymock.tests.UsageExpectAndThrowTest.floatType":364,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":342,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":19,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":14,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":302,"org.easymock.tests.UsageVerifyTest.twoThrows":187,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":174,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":36,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":28,"org.easymock.samples.PartialClassMockTest.testGetArea":115,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":256,"org.easymock.samples.ExampleTest.voteAgainstRemoval":374,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":73,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":278,"org.easymock.tests2.UsageTest.niceToStrict":228,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":77,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":23,"org.easymock.tests.LimitationsTest.privateConstructor":87,"org.easymock.tests2.UsageConstraintsTest.testNotNull":218,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":297,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":37,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":44,"org.easymock.tests2.UsageTest.defaultResetToNice":311,"org.easymock.tests2.MockBuilderTest.testCreateMock":49,"org.easymock.samples.ExampleTest.voteAgainstRemovals":372,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":362,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":31,"org.easymock.tests2.CallbackTest.callback":241,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":69,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":169,"org.easymock.tests.UsageTest.openCallCountByLastCall":192,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":283,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":136,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":224,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":200,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":343,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":195,"org.easymock.tests.UsageCallCountTest.tooFewCalls":346,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":385,"org.easymock.tests.UsageOverloadedMethodTest.overloading":243,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":27,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":33,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":210,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":121,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":267,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":59,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":209,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":8,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":239,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":337,"org.easymock.tests.UsageThrowableTest.throwCheckedException":294,"org.easymock.tests.MockClassControlTest.testEquals":84,"org.easymock.tests2.EasyMockSupportClassTest.testAll":15,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":108,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":289,"org.easymock.tests.MockingTest.testStrictClassMocking":91,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":141,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":168,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":332,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":319,"org.easymock.tests2.CaptureTest.testCaptureAll":234,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":60,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":58,"org.easymock.tests2.UsageConstraintsTest.testMatches":211,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":316,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":3,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":341,"org.easymock.tests2.CompareToTest.testGreateOrEqual":132,"org.easymock.samples.ExampleTest.voteForRemovals":376,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":129,"org.easymock.tests2.NameTest.nameForNiceMock":323,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":310,"org.easymock.tests.UsageVarargTest.allKinds":357,"org.easymock.tests2.DependencyTest.testInterfaceMocking":300,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":186,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":128,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":333,"org.easymock.samples.BasicClassMockTest.testPrintContent":112,"org.easymock.samples.ExampleTest.addDocument":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":30,"org.easymock.tests2.DelegateToTest.testStubDelegate":232,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":35,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":296,"org.easymock.tests2.AnswerTest.stubAnswer":2,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":329,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":181,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":131,"org.easymock.tests2.UsageConstraintsTest.greaterThan":134,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":16,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":250,"org.easymock.tests.UsageVarargTest.varargLongAccepted":354,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":74,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":184,"org.easymock.samples.ExampleTest.voteForRemoval":373,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":105,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":227,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":75,"org.easymock.tests.UsageExpectAndReturnTest.floatType":358,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":273,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":67,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":54,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":114,"org.easymock.tests2.ConstraintsToStringTest.orToString":135,"org.easymock.tests.UsageThrowableTest.noUpperLimit":369,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":213,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":176,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":201,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":90,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":10,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":314,"org.easymock.tests2.SerializationTest.test":313,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":48,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":9,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":101,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":154,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":370,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":261,"org.easymock.tests2.UsageConstraintsTest.testSame":205,"org.easymock.samples.SupportTest.addDocument":378,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":13,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":325,"org.easymock.tests2.CaptureTest.testCaptureFirst":240,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":163,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":4,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":304,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":178,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":20,"org.easymock.tests.GenericTest.testPackageScope":107,"org.easymock.tests2.UsageTest.moreThanOneArgument":158,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":50,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":356,"org.easymock.tests.GenericTest.testBridgedEquals":110,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":386,"org.easymock.tests2.NameTest.nameForMock":321,"org.easymock.tests.UsageExpectAndReturnTest.longType":359,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":330,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":222,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":290,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":268,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":288,"org.easymock.tests2.UsageStrictMockTest.differentMethods":151,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":338,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":70,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":262,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":287,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":167,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":252,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":32,"org.easymock.tests2.MockedExceptionTest.testRealException":120,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":265,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":170,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":123,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":366,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":148,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":295,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":247,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":57,"org.easymock.tests.MockingTest.testNiceClassMocking":97,"org.easymock.tests.MockingTest.testClassMocking":92,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":344,"org.easymock.tests2.NameTest.nameForStrictMock":322,"org.easymock.tests2.UsageConstraintsTest.testContains":208,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":39,"org.easymock.tests2.UsageConstraintsTest.testFind":203,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":244,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":43,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":383,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":133,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":65,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":242,"org.easymock.tests.UsageExpectAndReturnTest.object":361,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":11,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":214,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":103,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":68,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":41,"org.easymock.tests2.UsageStrictMockTest.range":150,"org.easymock.tests2.UsageConstraintsTest.lessThan":220,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":307,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":353,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":127,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":387,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":173,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":223,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":24,"org.easymock.tests2.CaptureTest.testCaptureRightOne":119,"org.easymock.tests2.UsageConstraintsTest.testOr":6,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":171,"org.easymock.tests.UsageRangeTest.combination":249,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":55,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":349,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":271,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":63,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":175,"org.easymock.tests.UsageTest.wrongArguments":191,"org.easymock.tests.MockClassControlTest.testHashCode":83,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":21,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":79,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":360,"org.easymock.tests2.EasyMockSupportTest.testVerify":309,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":25,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":138,"org.easymock.tests.UsageVarargTest.varargShortAccepted":196,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":104,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":317,"org.easymock.tests2.UsageConstraintsTest.cmpTo":299,"org.easymock.tests.UsageVarargTest.varargCharAccepted":352,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":147,"org.easymock.tests2.UsageTest.openCallCountByLastCall":229,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":230,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":382,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":225,"org.easymock.tests.DefaultClassInstantiatorTest.object":100,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":42,"org.easymock.tests.UsageTest.unexpectedCallWithArray":190,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":172,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":281,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":26,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":293,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":180,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":347,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":270,"org.easymock.tests2.UsageConstraintsTest.constraints":202,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":82,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":72,"org.easymock.samples.ExampleTest.addAndChangeDocument":377,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":280,"org.easymock.tests2.ConstraintsToStringTest.notToString":137,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":272,"org.easymock.tests.UsageStrictMockTest.testVerify":185,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":371,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":34,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":140,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":179,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":331,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":315,"org.easymock.tests2.UsageTest.resumeIfFailure":231,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":257,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":263,"org.easymock.tests.LimitationsTest.abstractClass":86,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":98,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":258,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":177,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":350,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":155}}]
