[{"transplant":{"position":"org.easymock.internal.ArgumentToString:35","sourceCode":"java.lang.StringBuffer.append(\"null\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \")","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[26],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:172","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType) : org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,0,1,2,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,7,130,131,132,133,134,135,136,137,138,139,14,15,16,140,141,142,143,144,145,146,147,148,149,150,151,18,19,20,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,22,217,218,219],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:185","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:183","sourceCode":"return ((java.lang.Class<T>)(V.getClass().getInterfaces()[0]))","type":"CtReturnImpl"},"failures":[39,0,1,2,75,220,7,8,9,10,14,15,16,221,222,17,18,19,20,223,224,225,226,21,227,22,228,23,24,25],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"proxy":"proxy"}},{"transplant":{"position":"org.easymock.EasyMock:1746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[229,34,35,36,45,54,58,59,63,230,231,79,93,107,110,119,7,154,160,166,170,172,232,233,178,184,190,194,196,21,206,234,235,22],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[0,2,236,7,14,15,16,237,18,20,238,177,182,186,187,189,192,22],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:137","sourceCode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:174","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(null, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"failures":[129],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.Invocation:54","sourceCode":"return java.lang.Object[] == null ? java.lang.Object[] : java.lang.Object[]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:130","sourceCode":"return java.lang.Object[]","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.Invocation.NO_ARGS":"methodArgs","args":"methodArgs"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","sourceCode":"java.lang.Class<?> java.lang.Class<?>","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:244","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:237","sourceCode":"return org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.reflect.Method.getParameterTypes())","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"bridgeMethod"}},{"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[27,28,29,30,31,32,229,239,239,240,240,33,34,35,36,37,38,39,40,41,42,0,1,2,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,241,62,63,64,65,66,67,68,69,70,71,72,73,230,231,242,243,74,244,75,245,76,77,78,246,79,80,81,82,83,84,85,86,87,88,89,90,91,247,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,119,120,248,249,250,121,122,123,124,125,126,127,128,129,7,130,131,132,133,134,135,136,137,138,139,251,252,253,254,14,15,16,140,141,142,143,144,255,222,145,256,146,147,148,149,150,151,18,19,20,257,258,259,260,261,262,263,152,264,265,153,266,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,21,198,267,268,269,270,271,199,200,201,202,272,273,203,204,205,206,207,208,274,275,276,277,278,209,210,211,279,280,281,282,235,283,212,213,214,215,216,22,217,218,219],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1646","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(int[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[284,53,54,55,56,57,285,286,58,59,60,287,61,241,62,63,64,26,288],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:117","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[29,76,78,79,175],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[43,289,290],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:111","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Or(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))","type":"CtInvocationImpl"},"failures":[96,100,291],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:267","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:115","sourceCode":"if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"result":"bridgeMethod"}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:60","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.ArrayList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:369","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"this.org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:111","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createThrowResult(java.lang.Throwable)","type":"CtAssignmentImpl"},"failures":[92,128,132,15,145,146,147,148,149,150,151,152,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,273,206,216,218],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastResult":"lastResult"}},{"transplant":{"position":"org.easymock.internal.LastControl:93","sourceCode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.LinkedList<org.easymock.IArgumentMatcher>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:321","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Throwable.getClass()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:131","sourceCode":"if (this.java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:135","sourceCode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))","type":"CtReturnImpl"},"failures":[287,26],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":96,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":216,"org.easymock.tests2.UsageTest.argumentsOrdered":10,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":90,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":263,"org.easymock.tests2.StubTest.stubWithReturnValue":92,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":116,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":163,"org.easymock.tests2.DelegateToTest.testReturnException":76,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":261,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":235,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":290,"org.easymock.tests.MockingTest.testPartialClassMocking":209,"org.easymock.samples.SupportTest.voteForRemovals":27,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":255,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":190,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":283,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":137,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":178,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":248,"org.easymock.tests.UsageExpectAndThrowTest.object":188,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":11,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":41,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":113,"org.easymock.tests2.DelegateToTest.testWrongClass":78,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":207,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":208,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":102,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":201,"org.easymock.tests2.UsageTest.wrongArguments":8,"org.easymock.samples.ConstructorCalledMockTest.testTax":239,"org.easymock.tests.UsageStrictMockTest.range":19,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":220,"org.easymock.samples.ExampleTest.answerVsDelegate":29,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":87,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":46,"org.easymock.tests2.UsageConstraintsTest.testNull":98,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":67,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":189,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":89,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":125,"org.easymock.tests2.CaptureTest.testPrimitive":56,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":203,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":197,"org.easymock.tests.UsageTest.moreThanOneArgument":22,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":24,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":66,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":276,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":254,"org.easymock.tests2.CaptureTest.testCaptureNone":59,"org.easymock.tests.UsageUnorderedTest.message":21,"org.easymock.tests.UsageVerifyTest.twoReturns":16,"org.easymock.tests2.ThreadingTest.testThreadSafe":34,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":267,"org.easymock.tests.UsageTest.argumentsOrdered":25,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":224,"org.easymock.tests2.CaptureTest.testCapture_2617107":55,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":140,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":237,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":273,"org.easymock.tests2.UsageConstraintsTest.any":103,"org.easymock.tests2.StubTest.stub":247,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":259,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":144,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":262,"org.easymock.tests.UsageExpectAndThrowTest.longType":181,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":75,"org.easymock.tests2.SerializationTest.testClass":43,"org.easymock.tests.ReplayStateInvalidUsageTest.times":232,"org.easymock.tests.LimitationsTest.mockNativeMethod":198,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":39,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":266,"org.easymock.tests2.AnswerTest.answer":120,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":173,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":291,"org.easymock.tests2.CaptureTest.testAnd":53,"org.easymock.tests2.UsageTest.strictResetToDefault":129,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":236,"org.easymock.tests2.NameTest.nameForMocksControl":6,"org.easymock.tests2.MockedExceptionTest.testMockedException":243,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":275,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":214,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":84,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":218,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":271,"org.easymock.tests2.DelegateToTest.testDelegate":79,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":211,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":182,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":64,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":126,"org.easymock.tests.MockingTest.testNicePartialClassMocking":210,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":193,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":69,"org.easymock.tests2.CaptureTest.testCaptureLast":58,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":152,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":222,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":52,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":101,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":114,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":221,"org.easymock.tests2.CaptureTest.testCapture1_2446744":57,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":154,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":191,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":186,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":9,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":118,"org.easymock.tests.UsageThrowableTest.throwError":145,"org.easymock.tests.UsageStrictMockTest.differentMethods":20,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":36,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":288,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":278,"org.easymock.tests.UsageExpectAndThrowTest.floatType":180,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":109,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":250,"org.easymock.tests.UsageVerifyTest.twoThrows":15,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":138,"org.easymock.samples.PartialClassMockTest.testGetArea":33,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":141,"org.easymock.samples.ExampleTest.voteAgainstRemoval":31,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":253,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":252,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":72,"org.easymock.tests2.UsageTest.niceToStrict":130,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":179,"org.easymock.tests2.UsageConstraintsTest.testNotNull":117,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":242,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":151,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":124,"org.easymock.tests2.UsageTest.defaultResetToNice":133,"org.easymock.samples.ExampleTest.voteAgainstRemovals":28,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":234,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":169,"org.easymock.tests2.CallbackTest.callback":45,"org.easymock.tests.UsageTest.openCallCountByLastCall":217,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":187,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":85,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":93,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":282,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":272,"org.easymock.tests.UsageOverloadedMethodTest.overloading":205,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":107,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":176,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":204,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":49,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":165,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":106,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":60,"org.easymock.tests.UsageThrowableTest.throwCheckedException":148,"org.easymock.tests2.EasyMockSupportClassTest.testAll":136,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":195,"org.easymock.tests2.CaptureTest.testCaptureAll":54,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":200,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":51,"org.easymock.tests.MockNameTest.defaultName":227,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":48,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":233,"org.easymock.tests2.UsageConstraintsTest.testMatches":108,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":50,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":122,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":277,"org.easymock.samples.ExampleTest.voteForRemovals":32,"org.easymock.tests2.NameTest.nameForNiceMock":5,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":38,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":14,"org.easymock.tests2.DependencyTest.testInterfaceMocking":40,"org.easymock.tests2.DelegateToTest.testStubDelegate":77,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":150,"org.easymock.tests2.AnswerTest.stubAnswer":121,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":264,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":246,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":18,"org.easymock.tests2.UsageConstraintsTest.greaterThan":110,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":213,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":73,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":238,"org.easymock.samples.ExampleTest.voteForRemoval":30,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":35,"org.easymock.tests.UsageExpectAndReturnTest.floatType":156,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":172,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":42,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":240,"org.easymock.tests.UsageThrowableTest.noUpperLimit":256,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":111,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":279,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":94,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":128,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":285,"org.easymock.tests2.SerializationTest.test":44,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":289,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":82,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":146,"org.easymock.tests2.UsageConstraintsTest.testSame":99,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":155,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":260,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":245,"org.easymock.tests2.CaptureTest.testCaptureFirst":63,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":83,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":135,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":161,"org.easymock.tests.GenericTest.testPackageScope":153,"org.easymock.tests2.CaptureTest.testCapture2_2446744":62,"org.easymock.tests2.UsageTest.moreThanOneArgument":7,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":37,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":270,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":127,"org.easymock.tests2.NameTest.nameForMock":3,"org.easymock.tests.UsageExpectAndReturnTest.longType":157,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":80,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":196,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":166,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":251,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":115,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":194,"org.easymock.tests2.UsageStrictMockTest.differentMethods":2,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":274,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":258,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":158,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":192,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":215,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":265,"org.easymock.tests2.MockedExceptionTest.testRealException":244,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":226,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":162,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":0,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":183,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":202,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":149,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":47,"org.easymock.tests2.NameTest.nameForStrictMock":4,"org.easymock.tests2.UsageConstraintsTest.testContains":105,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":74,"org.easymock.tests2.UsageConstraintsTest.testFind":97,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":206,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":230,"org.easymock.tests.MockTypeTest.fromEasyMockClass":225,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":68,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":231,"org.easymock.tests.UsageExpectAndReturnTest.object":164,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":12,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":112,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":70,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":123,"org.easymock.tests2.UsageStrictMockTest.range":1,"org.easymock.tests2.UsageConstraintsTest.lessThan":119,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":88,"org.easymock.tests.UsageTest.exactCallCountByLastCall":219,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":199,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":81,"org.easymock.tests2.CaptureTest.testCaptureRightOne":61,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":268,"org.easymock.tests2.UsageConstraintsTest.testOr":100,"org.easymock.tests.UsageRangeTest.combination":212,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":65,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":170,"org.easymock.tests.UsageTest.wrongArguments":23,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":175,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":159,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":167,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":269,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":281,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":174,"org.easymock.tests2.UsageConstraintsTest.cmpTo":104,"org.easymock.tests2.CaptureTest.testCaptureMultiple":284,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":249,"org.easymock.tests2.UsageTest.openCallCountByLastCall":131,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":132,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":91,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":280,"org.easymock.tests2.CaptureTest.testCaptureFromStub":241,"org.easymock.tests.UsageTest.unexpectedCallWithArray":228,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":223,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":185,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":17,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":147,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":168,"org.easymock.tests2.CaptureTest.testCapture":287,"org.easymock.tests2.UsageConstraintsTest.constraints":95,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":71,"org.easymock.samples.ExampleTest.addAndChangeDocument":229,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":184,"org.easymock.tests.CapturesMatcherTest.test":26,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":171,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":257,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":139,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":286,"org.easymock.tests2.UsageTest.resumeIfFailure":134,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":142,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":160,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":143,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":177,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":86,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":13}}]
