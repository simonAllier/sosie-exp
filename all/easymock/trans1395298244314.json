[{"transplant":{"position":"org.easymock.internal.MocksBehavior:177","sourceCode":"this.boolean = boolean","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:79","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"checkOrder":"lastInvocationUsed","value":"lastInvocationUsed"}},{"transplant":{"position":"org.easymock.EasyMock:1349","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidClassProxyFactory:39","sourceCode":"try {\n    com.google.dexmaker.stock.ProxyBuilder<T> com.google.dexmaker.stock.ProxyBuilder<T> = com.google.dexmaker.stock.ProxyBuilder.com.google.dexmaker.stock.ProxyBuilder.forClass(java.lang.Class<T>).handler(org.easymock.internal.AndroidClassProxyFactory.MockHandler);\n    if (org.easymock.ConstructorArgs != null) {\n        com.google.dexmaker.stock.ProxyBuilder<T>.constructorArgTypes(org.easymock.ConstructorArgs.getConstructor().getParameterTypes()).constructorArgValues(org.easymock.ConstructorArgs.getInitArgs());\n    } else {\n        try {\n            org.easymock.internal.DefaultClassInstantiator org.easymock.internal.DefaultClassInstantiator = new org.easymock.internal.DefaultClassInstantiator();\n            java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> = org.easymock.internal.DefaultClassInstantiator.getConstructorToUse(java.lang.Class<T>);\n            java.lang.Object[] java.lang.Object[] = org.easymock.internal.DefaultClassInstantiator.getArgsForTypes(java.lang.reflect.Constructor<?>.getParameterTypes());\n            com.google.dexmaker.stock.ProxyBuilder<T>.constructorArgTypes(java.lang.reflect.Constructor<?>.getParameterTypes()).constructorArgValues(java.lang.Object[]);\n        } catch (java.lang.InstantiationException java.lang.InstantiationException) {\n            throw new java.lang.RuntimeException((\"Fail to instantiate mock for \" + java.lang.Class<T>));\n        }\n    }\n    return com.google.dexmaker.stock.ProxyBuilder<T>.build();\n} catch (java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException((\"Failed to mock \" + java.lang.Class<T>) , java.io.IOException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.EqualsWithDelta:45","failures":[0],"status":-1,"binaryOperator":"(\"eq(\" + (java.lang.Number))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:54","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:50","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[329,330,331,332,172,206],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer","value":"value"}},{"transplant":{"position":"org.easymock.EasyMock:1176","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:80","sourceCode":"return org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(org.easymock.internal.Invocation.getMethod().getReturnType())","type":"CtReturnImpl"},"failures":[333,1,2,3,334,4,5,6,7,8,9,10,11,12,13,14,15,16,17,335,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,336,337,71,72,73,74,75,76,77,78,79,80,82,83,85,86,88,94,95,96,97,98,99,100,101,102,103,104,105,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,149,150,151,338,152,153,154,155,156,157,158,159,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,339,340,341,204,205,206,207,208,209,210,211,212,221,222,223,224,225,342,343,344,226,227,229,230,345,346,231,232,347,348,349,233,234,235,236,237,350,238,239,351,240,242,255,256,257,258,259,260,261,262,263,264,265,266,267,268,352,269,270,271,272,273,274,275,276,277,278,279,280,281,282,353,354,355,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,356,303,305,306,307,308,310,311,357,358,359,360,361,312,313,314,315,316,317,319,320,320,321,321,322,323,324,325,326,327,328],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1916","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:299","sourceCode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[362],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidClassProxyFactory:53","sourceCode":"throw new java.lang.RuntimeException((\"Fail to instantiate mock for \" + java.lang.Class<T>))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[363,364,365,366,367,78,368,369,94,370],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1459","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:434","sourceCode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[371,119],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:279","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[337,372],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[108],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","constructorArgs":"constructorArgs","this":"this"}},{"position":"org.easymock.EasyMock:1421","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"equalsMethod","method":"equalsMethod"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Any:40","sourceCode":"java.lang.StringBuffer.append(\"<any>\")","type":"CtInvocationImpl"},"failures":[373,260],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[21],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[228,374,375],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.Range:40","failures":[333,1,2,3,334,4,5,6,376,7,8,9,10,11,377,12,13,14,15,16,17,335,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,378,379,380,381,382,35,383,384,385,386,387,388,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,389,53,54,55,390,391,392,56,57,58,59,60,61,62,63,64,393,394,395,65,396,397,66,371,398,399,400,401,402,403,404,362,67,405,406,407,408,409,68,410,411,412,413,414,415,416,417,69,418,419,420,421,422,423,70,336,337,71,72,73,424,74,75,76,77,78,79,80,81,425,82,426,427,428,83,84,85,368,86,429,369,87,88,430,89,90,91,92,93,94,370,431,95,96,97,98,99,100,101,102,103,104,105,106,432,107,433,434,108,109,110,111,435,436,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,437,438,439,440,441,442,443,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,444,445,145,446,447,146,147,148,448,449,149,150,151,450,451,338,152,153,452,154,453,454,455,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,456,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,339,340,341,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,342,343,344,226,227,457,228,374,458,459,460,375,461,462,229,230,463,464,465,466,467,468,469,470,471,472,473,474,475,476,372,477,478,345,479,480,481,482,483,346,484,485,231,232,347,486,348,349,487,233,234,235,236,237,350,238,239,351,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,488,489,490,491,492,493,494,495,261,262,263,264,265,266,267,268,496,352,497,269,270,271,498,272,273,274,275,276,277,278,279,280,281,282,353,354,355,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,356,303,304,305,306,307,308,309,310,311,357,358,359,360,361,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328],"status":-1,"binaryOperator":"(int >= 0)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","sourceCode":"java.lang.Class<?> = java.lang.Class<?>","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"cls":"type","type":"type"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:268","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:138","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:97","sourceCode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String);\n}","type":"CtForEachImpl"},"failures":[83,85,86,499,323],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"failures":[49,52,393,65,397,371,398,401,404,405,406,409,80,100,101,103,104,105,107,434,108,111,435,436,113,114,437,441,444,445,145,446,450,451,338,455,213,214,215,216,217,218,219,220,228,374,458,459,460,375,462,231,232,486,242,327,328],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"interceptor":"interceptor","mockedMethods":"mockedMethods"}},{"position":"org.easymock.internal.matchers.EndsWith:40","failures":[500],"status":-1,"binaryOperator":"((\"endsWith(\\\"\" + (java.lang.String)) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:101","sourceCode":"return java.util.Properties.getProperty(java.lang.String)","type":"CtReturnImpl"},"failures":[501,502,503,504,432],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:317","sourceCode":"if (java.lang.Throwable instanceof java.lang.Error) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[340,341,261,264,265,266,281,354,355],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[347],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[6,7,8,9,10,11,12,13,14,15,16,17,335,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,60,61,412,69,98,107,108,131,132,133,134,135,136,137,138,139,140,141,142,143,144,155,156,157,158,159,160,168,169,206,207,226,227,229,230,345,255,256,257,258,259,260,261,279,280],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.internal.MockBuilder:201","failures":[66,67,68,78,81,82,426,428,83,85,86,429,369,88,89,94,370,106,433,109,110,436,112,485,347,488,493,320,320,321,321,323],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:148","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[460,505,506],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:269","sourceCode":"net.sf.cglib.proxy.Enhancer.setSuperclass(java.lang.Class<?>)","type":"CtInvocationImpl"},"failures":[49,50,51,52,54,55,393,394,395,65,396,397,66,371,398,399,400,401,402,403,404,362,67,405,406,407,408,409,68,410,411,78,80,81,82,426,428,83,84,85,86,369,87,88,89,94,370,100,101,103,104,105,106,107,433,434,108,109,110,111,435,436,112,113,114,437,441,444,145,446,338,152,153,154,213,214,215,216,217,220,457,228,374,458,459,460,375,461,462,485,231,232,347,486,242,488,493,320,320,321,321,323,327,328],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:25","sourceCode":"new org.easymock.internal.ObjenesisClassInstantiator()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[507,508,509],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[329,330,331,332,172,206],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[78,79,80,510],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[78,79,80,510],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[511,433,320,320,321,321],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:107","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1776","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Find(java.lang.String))","type":"CtInvocationImpl"},"failures":[12],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"name":"regex"}},{"transplant":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[512],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[39,45,46,62,513,172,173,176,177,206,209,260,281,282],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:120","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(org.easymock.ConstructorArgs.getConstructor()))","type":"CtAssignmentImpl"},"failures":[427],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:99","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[51,390,101,108,111],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":11,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":170,"org.easymock.tests2.UsageTest.argumentsOrdered":46,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":126,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":383,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":474,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":41,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":322,"org.easymock.tests2.DelegateToTest.testReturnException":1,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":165,"org.easymock.tests.MockingTest.testPartialClassMocking":152,"org.easymock.tests.MockClassControlTest.testToString":215,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":424,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":352,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":481,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":436,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":400,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":179,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":66,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":57,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":363,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":17,"org.easymock.tests2.UsageTest.wrongArguments":39,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":255,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":423,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":162,"org.easymock.samples.ExampleTest.answerVsDelegate":313,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":493,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":454,"org.easymock.tests2.UsageConstraintsTest.testNull":13,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":103,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":125,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":220,"org.easymock.tests2.CaptureTest.testPrimitive":134,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":259,"org.easymock.tests.UsageTest.moreThanOneArgument":171,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":198,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":102,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":223,"org.easymock.tests.UsageTest.argumentsOrdered":177,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":357,"org.easymock.tests.UsageVarargTest.varargIntAccepted":271,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":478,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":155,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":81,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":439,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":387,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":84,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":466,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":159,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":69,"org.easymock.tests.ReplayStateInvalidUsageTest.times":251,"org.easymock.tests2.DependencyTest.testClassMocking":391,"org.easymock.tests2.AnswerTest.answer":70,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":335,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":479,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":93,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":490,"org.easymock.tests2.CaptureTest.testAnd":131,"org.easymock.tests2.UsageTest.strictResetToDefault":37,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":427,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":108,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":222,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":120,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":235,"org.easymock.tests2.DelegateToTest.testDelegate":4,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":361,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":194,"org.easymock.tests.LimitationsTest.mockFinalMethod":446,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":168,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":203,"org.easymock.tests2.DependencyTest.testClassMockingSupport":392,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":348,"org.easymock.tests2.CaptureTest.testCapture1_2446744":135,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":432,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":192,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":91,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":245,"org.easymock.tests.UsageThrowableTest.throwError":261,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":492,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":463,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":388,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":225,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":411,"org.easymock.samples.PartialClassMockTest.testGetArea":323,"org.easymock.tests.MockingTest.testInterfaceMocking":452,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":246,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":156,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":343,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":449,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":401,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":180,"org.easymock.tests2.UsageTest.niceToStrict":40,"org.easymock.tests2.ThreadingTest.testChangeDefault":504,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":507,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":464,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":83,"org.easymock.tests2.MockBuilderTest.testCreateMock":87,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":407,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":420,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":188,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":329,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":121,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":489,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":355,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":303,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":160,"org.easymock.tests.UsageOverloadedMethodTest.overloading":150,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":409,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":362,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":22,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":239,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":149,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":294,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":505,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":21,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":140,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":498,"org.easymock.tests2.EasyMockSupportClassTest.testAll":65,"org.easymock.tests.MockClassControlTest.testEquals":219,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":232,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":196,"org.easymock.tests2.CaptureTest.testCaptureAll":132,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":92,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":201,"org.easymock.tests.MockNameTest.defaultName":456,"org.easymock.tests2.UsageConstraintsTest.testMatches":23,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":224,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":243,"org.easymock.samples.ExampleTest.voteForRemovals":317,"org.easymock.tests.UsageVarargTest.allKinds":279,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":280,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":202,"org.easymock.samples.BasicClassMockTest.testPrintContent":328,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":267,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":58,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":384,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":169,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":334,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":461,"org.easymock.tests2.UsageConstraintsTest.greaterThan":25,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":367,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":396,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":234,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":111,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":462,"org.easymock.samples.ExampleTest.voteForRemoval":314,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":435,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":96,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":494,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":440,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":106,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":36,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":242,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":369,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":471,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":118,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":394,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":164,"org.easymock.tests2.CaptureTest.testCaptureFirst":144,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":333,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":470,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":119,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":48,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":241,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":290,"org.easymock.tests2.CaptureTest.testCapture2_2446744":143,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":98,"org.easymock.tests2.UsageTest.moreThanOneArgument":38,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":480,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":88,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":278,"org.easymock.tests.GenericTest.testBridgedEquals":486,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":310,"org.easymock.tests.UsageExpectAndReturnTest.longType":286,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":116,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":199,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":499,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":197,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":30,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":356,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":195,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":221,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":340,"org.easymock.tests.UsageCallCountTest.tooManyCalls":311,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":408,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":291,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":422,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":184,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":266,"org.easymock.tests.MockingTest.testNiceClassMocking":455,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":50,"org.easymock.tests.MockingTest.testClassMocking":451,"org.easymock.tests2.UsageConstraintsTest.testContains":20,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":304,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":114,"org.easymock.tests2.UsageConstraintsTest.testFind":12,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":151,"org.easymock.tests.MockTypeTest.fromEasyMockClass":491,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":7,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":204,"org.easymock.tests.UsageExpectAndReturnTest.object":293,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":107,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":421,"org.easymock.tests2.ConstraintsToStringTest.equalsWithDeltaToString":0,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":124,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":273,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":364,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":148,"org.easymock.tests.UsageTest.exactCallCountByLastCall":178,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":229,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":469,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":496,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":358,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":370,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":269,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":299,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":238,"org.easymock.tests.MockClassControlTest.testHashCode":218,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":379,"org.easymock.tests2.EasyMockSupportTest.testVerify":128,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":403,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":359,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":237,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":354,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":90,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":412,"org.easymock.tests.UsageVarargTest.varargCharAccepted":272,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":457,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":59,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":484,"org.easymock.tests2.UsageTest.openCallCountByLastCall":42,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":508,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":127,"org.easymock.tests.DefaultClassInstantiatorTest.object":228,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":353,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":146,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":513,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":404,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":186,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":264,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":416,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":378,"org.easymock.tests2.ConstraintsToStringTest.anyToString":373,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":109,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":217,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":185,"org.easymock.tests.CapturesMatcherTest.test":512,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":300,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":339,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":68,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":216,"org.easymock.tests2.UsageTest.resumeIfFailure":47,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":488,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":438,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":167,"org.easymock.tests2.StubTest.stubWithReturnValue":130,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":368,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":31,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":292,"org.easymock.tests2.SerializationTest.testAllMockedMethod":80,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":345,"org.easymock.samples.SupportTest.voteForRemovals":326,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":330,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":485,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":381,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":191,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":510,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":346,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":336,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":497,"org.easymock.tests.UsageExpectAndThrowTest.object":189,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":28,"org.easymock.tests2.DelegateToTest.testWrongClass":3,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":226,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":227,"org.easymock.tests.UsageStrictMockTest.range":209,"org.easymock.samples.ConstructorCalledMockTest.testTax":320,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":442,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":123,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":49,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":190,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":85,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":393,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":176,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":253,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":161,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":331,"org.easymock.tests2.CaptureTest.testCaptureNone":139,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":344,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":501,"org.easymock.tests.UsageUnorderedTest.message":260,"org.easymock.tests2.ConstraintsToStringTest.endsWithToString":500,"org.easymock.tests.UsageVerifyTest.twoReturns":282,"org.easymock.tests.UsageVarargTest.varargByteAccepted":277,"org.easymock.tests2.ThreadingTest.testThreadSafe":95,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":405,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":308,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":448,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":327,"org.easymock.tests2.CaptureTest.testCapture_2617107":133,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":482,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":258,"org.easymock.tests2.UsageConstraintsTest.any":18,"org.easymock.tests2.StubTest.stub":129,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":250,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":341,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":483,"org.easymock.tests.UsageExpectAndThrowTest.longType":182,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":166,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":460,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":249,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":61,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":35,"org.easymock.tests2.SerializationTest.testClass":78,"org.easymock.tests.LimitationsTest.mockNativeMethod":145,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":302,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":347,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":415,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":64,"org.easymock.tests2.NameTest.nameForMocksControl":77,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":417,"org.easymock.tests2.MockedExceptionTest.testMockedException":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":397,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":175,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":183,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":154,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":376,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":100,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":86,"org.easymock.tests.MockingTest.testNicePartialClassMocking":153,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":105,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":413,"org.easymock.tests2.CaptureTest.testCaptureLast":138,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":349,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":16,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":55,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":29,"org.easymock.tests.MockingTest.testTwoMocks":338,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":390,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":283,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":187,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":45,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":33,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":503,"org.easymock.samples.ExampleTest.removeNonExistingDocument":318,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":419,"org.easymock.tests.UsageStrictMockTest.differentMethods":210,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":247,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":380,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":502,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":458,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":97,"org.easymock.tests2.MockBuilderTest.testCreateMockString":89,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":213,"org.easymock.tests.UsageExpectAndThrowTest.floatType":181,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":371,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":24,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":395,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":71,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":431,"org.easymock.tests.UsageVerifyTest.twoThrows":281,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":350,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":67,"org.easymock.samples.ExampleTest.voteAgainstRemoval":315,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":475,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":342,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":110,"org.easymock.tests.LimitationsTest.privateConstructor":445,"org.easymock.tests2.UsageConstraintsTest.testNotNull":32,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":112,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":268,"org.easymock.tests2.UsageTest.defaultResetToNice":44,"org.easymock.samples.ExampleTest.voteAgainstRemovals":312,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":476,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":298,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":414,"org.easymock.tests.UsageVarargTest.differentLength":274,"org.easymock.tests2.CallbackTest.callback":5,"org.easymock.tests2.UsageConstraintsTest.equals":377,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":433,"org.easymock.tests.UsageTest.openCallCountByLastCall":174,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":8,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":257,"org.easymock.tests.UsageCallCountTest.tooFewCalls":306,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":52,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":163,"org.easymock.tests.UsageThrowableTest.throwCheckedException":265,"org.easymock.tests.MockingTest.testStrictClassMocking":450,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":332,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":54,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":230,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":418,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":51,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":252,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":53,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":73,"org.easymock.tests.ObjectMethodsTest.testHashCode":147,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":99,"org.easymock.tests2.NameTest.nameForNiceMock":76,"org.easymock.tests2.DependencyTest.testInterfaceMocking":56,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":365,"org.easymock.samples.ExampleTest.addDocument":316,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":406,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":410,"org.easymock.tests2.DelegateToTest.testStubDelegate":2,"org.easymock.tests2.AnswerTest.stubAnswer":72,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":207,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":429,"org.easymock.tests.UsageVarargTest.varargLongAccepted":276,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":211,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":473,"org.easymock.tests.UsageExpectAndReturnTest.floatType":285,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":301,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":94,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":321,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":386,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":26,"org.easymock.tests.UsageThrowableTest.noUpperLimit":262,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":351,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":9,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":437,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":136,"org.easymock.tests2.SerializationTest.test":79,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":506,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":374,"org.easymock.tests2.UsageConstraintsTest.testSame":14,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":284,"org.easymock.samples.SupportTest.addDocument":325,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":389,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":248,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":398,"org.easymock.tests.GenericTest.testPackageScope":231,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":360,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":468,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":385,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":453,"org.easymock.tests2.NameTest.nameForMock":74,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":295,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":430,"org.easymock.tests2.UsageStrictMockTest.differentMethods":63,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":434,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":287,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":193,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":447,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":236,"org.easymock.tests2.MockedExceptionTest.testRealException":115,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":495,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":477,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":443,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":60,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":372,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":254,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":256,"org.easymock.tests2.NameTest.nameForStrictMock":75,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":428,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":509,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":6,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":104,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":441,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":459,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":27,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":82,"org.easymock.tests2.UsageStrictMockTest.range":62,"org.easymock.tests2.UsageConstraintsTest.lessThan":34,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":382,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":472,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":117,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":402,"org.easymock.tests2.CaptureTest.testCaptureRightOne":141,"org.easymock.tests2.UsageConstraintsTest.testOr":15,"org.easymock.tests.UsageRangeTest.combination":233,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":101,"org.easymock.tests.UsageTest.wrongArguments":173,"org.easymock.tests2.MockBuilderTest.testWithConstructor":425,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":399,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":214,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":288,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":465,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":296,"org.easymock.tests.UsageVarargTest.varargShortAccepted":275,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":375,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":309,"org.easymock.tests2.UsageConstraintsTest.cmpTo":19,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":337,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":467,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":43,"org.easymock.tests2.CaptureTest.testCaptureFromStub":142,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":244,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":426,"org.easymock.tests.UsageTest.unexpectedCallWithArray":172,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":206,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":307,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":511,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":297,"org.easymock.tests2.UsageConstraintsTest.constraints":10,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":208,"org.easymock.samples.ExampleTest.addAndChangeDocument":319,"org.easymock.tests.UsageStrictMockTest.testVerify":212,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":324,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":205,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":200,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":137,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":157,"org.easymock.tests.LimitationsTest.abstractClass":444,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":289,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":158,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":240,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":122,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":270}}]
