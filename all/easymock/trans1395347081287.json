[{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[1,2,3,4,5,6],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:42","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"failures":[7],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[8,9,10],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:721","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.Injector:72","sourceCode":"java.lang.Object java.lang.Object","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:826","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessOrEqual<java.lang.Double>(double))","type":"CtInvocationImpl"},"failures":[11],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:241","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:153","sourceCode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[12],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[13],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:60","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:136","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:131","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"failures":[39,40],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,14,57,58,9,59,60,61,62,63,10,64,65,66,67,68,69,70,71,33,72,73,74,75,76,77,78,79,80,81,82,38,83,84],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,85,86,87,41,88,89,90,91,92,93,46,94,95,96,47,48,97,98,49,99,100,101,102,103,104,105,106,107,8,108,109,110,111,112,113,114,115,116,117,118,56,119,120,121,58,9,122,61,123,124,63,13,125,126,127,128,129,130,131,132,133,134,135,136,10,137,138,139,140,141,11,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,16,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,1,212,213,214,215,216,217,218,219,220,2,221,222,223,18,19,224,225,20,226,21,22,23,24,227,25,26,27,28,228,29,30,31,32,229,230,231,232,233,234,235,236,71,237,238,239,240,241,3,242,243,244,245,246,4,247,248,249,250,251,252,5,6,253,254,255,78,256,257,258,259,260,261,262,263,264,265,266,36,267,268,269,270,271,272,273,274,275,276,277,37,278,38,83,279,280,281,282,283,284,285,286,287,288,289,290],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.InjectionPlan:32","sourceCode":"new java.util.ArrayList<java.lang.reflect.Field>(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[291,292],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:747","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:358","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:268","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","this":"this","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.MockInvocationHandler:41","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:879","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1092","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Contains(java.lang.String))","type":"CtInvocationImpl"},"failures":[63,129,133,139],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"substring","key":"substring"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[293,294,295,296,297],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"failures":[104,105,50,107,8,108,109,298,110,52,299,300,301,302,303,147,304,305,306,307,308,309,310,311,172,175,180,181,202,203,312,215,313,314,315,316,317,318,221,222,223,319,320,321,322,323,324,325,326,327,328,329,330,331,332,262,333],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"interceptor":"interceptor","mockedMethods":"mockedMethods"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[334,335,336,88,337,42,338,89,90,91,92,43,44,339,45,102,104,105,50,107,8,108,340,109,110,51,111,52,112,147,148,149,150,172,173,174,175,177,178,181,188,188,189,189,191,202,203,215,221,222,223,341,322,231,232,233,262,342,343],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[0,85,86,87,41,88,42,89,90,91,92,43,44,45,93,46,94,95,96,47,48,97,98,49,99,100,101,102,103,104,105,50,106,107,8,108,340,109,110,51,111,52,112,113,114,115,344,116,53,117,118,54,55,56,119,14,120,121,57,58,9,345,15,122,59,60,61,62,123,124,63,13,125,126,127,128,129,130,131,132,133,134,135,136,10,137,138,139,140,141,346,11,142,143,144,145,146,147,148,149,150,151,152,153,154,291,347,155,156,157,158,159,348,160,161,162,163,164,165,349,350,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,16,184,185,186,187,188,188,189,189,190,191,192,193,194,195,196,197,198,199,200,351,201,202,203,204,205,206,207,208,209,64,65,66,210,352,211,1,212,213,214,312,215,313,314,315,316,317,318,353,354,355,356,216,357,217,218,219,220,2,221,222,223,18,19,224,225,20,226,21,22,23,24,227,25,26,27,28,228,29,30,31,32,358,229,230,359,360,361,362,363,231,232,233,364,365,366,367,368,369,370,371,372,292,373,374,375,67,235,68,236,69,70,71,237,238,324,239,240,241,3,242,243,244,245,246,4,247,248,249,250,251,252,5,6,253,254,33,255,72,73,376,34,74,75,76,77,78,256,257,258,259,260,377,35,261,262,263,264,265,266,36,267,378,379,380,268,269,270,271,272,273,274,275,276,381,277,37,278,38,83,279,280,281,282,283,284,285,84,286,287,288,289,290],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:194","sourceCode":"return false","type":"CtReturnImpl"},"failures":[382,383,384,385,386,387,388],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"failures":[109,389,298,110,51,111,52,299,300,112,388,301,390,302,303,391,392,147,393,304,148,305,306,394,395,307,396,397,308,398,149,309,310,399,400,311,150,401,402,172,173,174,175,177,178,179,180,181,188,188,189,189,191,202,203,312,215,313,314,315,316,317,318,221,403,222,223,341,319,320,321,322,231,232,233,323,324,325,326,327,328,329,330,331,332,262,333,342,343],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:557","sourceCode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:37","sourceCode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} ","type":"CtIfImpl"},"failures":[0,404,405,85,86,87,41,42,89,91,92,44,93,46,94,95,96,47,48,97,98,49,99,100,102,103,105,50,106,107,8,108,109,51,111,52,112,113,406,114,115,344,407,116,118,55,56,14,120,121,58,345,15,122,61,62,123,124,63,13,125,126,127,128,129,130,131,132,133,134,135,136,10,137,138,139,140,141,11,142,143,144,145,146,147,148,149,150,151,152,153,154,291,347,155,156,157,159,348,162,163,164,165,349,350,166,171,172,173,174,175,176,177,178,179,180,181,182,183,16,188,188,189,189,191,194,195,196,197,198,200,201,206,210,352,211,1,212,213,214,353,355,356,216,217,218,219,220,2,221,222,341,408,409,410,411,412,18,19,224,225,20,226,21,22,23,24,227,25,26,27,28,228,29,30,31,32,358,229,230,359,360,361,362,363,231,232,233,375,236,70,71,239,240,241,3,242,243,244,245,246,4,247,248,249,250,251,252,5,6,253,254,413,414,415,33,255,376,34,76,77,78,256,257,258,259,260,377,35,261,262,416,417,418,419,420,263,264,265,266,36,267,421,422,423,424,381,277,37,278,38,83,279,280,425],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lastControl":"control","this":"this"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:63","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.reflect.InvocationTargetException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1726","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:103","sourceCode":"continue","type":"CtContinueImpl"},"failures":[335,222,223,341],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:159","sourceCode":"if ((this.java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"failures":[426,427,387,428,429,430,12,431,432,102,389,112,388,188,189],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":13,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":33,"org.easymock.tests2.UsageTest.argumentsOrdered":60,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":99,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":9,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":190,"org.easymock.tests2.DelegateToTest.testReturnException":114,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":264,"org.easymock.tests.MockingTest.testPartialClassMocking":231,"org.easymock.tests.MockClassControlTest.testToString":313,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":424,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":300,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":395,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":148,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":18,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":152,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":382,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":130,"org.easymock.tests2.UsageTest.wrongArguments":57,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":259,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":270,"org.easymock.samples.ExampleTest.answerVsDelegate":196,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":343,"org.easymock.tests2.UsageConstraintsTest.testNull":126,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":107,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":49,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":318,"org.easymock.tests2.CaptureTest.testPrimitive":159,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":261,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":32,"org.easymock.tests.UsageTest.moreThanOneArgument":255,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":106,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":212,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":416,"org.easymock.tests.UsageTest.argumentsOrdered":75,"org.easymock.tests.UsageVarargTest.varargIntAccepted":283,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":217,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":386,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":88,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":90,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":2,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":171,"org.easymock.tests.ReplayStateInvalidUsageTest.times":372,"org.easymock.tests2.AnswerTest.answer":0,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":170,"org.easymock.tests2.CaptureTest.testAnd":156,"org.easymock.tests2.UsageTest.strictResetToDefault":120,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":427,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":110,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":1,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":96,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":257,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":420,"org.easymock.tests2.DelegateToTest.testDelegate":116,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":228,"org.easymock.tests.LimitationsTest.mockFinalMethod":333,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":36,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":276,"org.easymock.tests2.CaptureTest.testCapture1_2446744":348,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":27,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":168,"org.easymock.tests.UsageThrowableTest.throwError":358,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":366,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":80,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":214,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":12,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":402,"org.easymock.samples.PartialClassMockTest.testGetArea":191,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":367,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":218,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":414,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":19,"org.easymock.tests2.UsageTest.niceToStrict":58,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":307,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":89,"org.easymock.tests2.MockBuilderTest.testCreateMock":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":399,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":24,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":47,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":412,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":204,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":268,"org.easymock.tests.UsageOverloadedMethodTest.overloading":277,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":398,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":311,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":135,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":356,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":248,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":381,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":134,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":164,"org.easymock.tests2.EasyMockSupportClassTest.testAll":147,"org.easymock.tests.MockClassControlTest.testEquals":317,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":223,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":30,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":334,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":169,"org.easymock.tests2.CaptureTest.testCaptureAll":157,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":274,"org.easymock.tests2.UsageConstraintsTest.testMatches":136,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":213,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":364,"org.easymock.samples.ExampleTest.voteForRemovals":200,"org.easymock.tests.UsageVarargTest.allKinds":290,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":278,"org.easymock.samples.BasicClassMockTest.testPrintContent":203,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":275,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":362,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":53,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":407,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":267,"org.easymock.tests2.UsageConstraintsTest.greaterThan":137,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":393,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":256,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":52,"org.easymock.samples.ExampleTest.voteForRemoval":197,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":330,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":154,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":299,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":340,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":14,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":221,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":428,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":94,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":230,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":391,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":263,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":406,"org.easymock.tests2.CaptureTest.testCaptureFirst":166,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":95,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":62,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":357,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":245,"org.easymock.tests2.UsageTest.moreThanOneArgument":121,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":347,"org.easymock.tests2.CaptureTest.testCapture2_2446744":350,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":44,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":289,"org.easymock.tests.GenericTest.testBridgedEquals":319,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":65,"org.easymock.tests.UsageExpectAndReturnTest.longType":3,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":93,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":272,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":31,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":339,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":425,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":346,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":29,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":422,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":211,"org.easymock.tests.UsageCallCountTest.tooManyCalls":66,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":400,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":246,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":226,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":361,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":173,"org.easymock.tests.MockingTest.testNiceClassMocking":323,"org.easymock.tests.MockingTest.testClassMocking":321,"org.easymock.tests2.UsageConstraintsTest.testContains":133,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":205,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":337,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":181,"org.easymock.tests2.UsageConstraintsTest.testFind":125,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":37,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":146,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":67,"org.easymock.tests.UsageExpectAndReturnTest.object":247,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":109,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":98,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":285,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":383,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":380,"org.easymock.tests.UsageTest.exactCallCountByLastCall":76,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":210,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":417,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":388,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":5,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":281,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":355,"org.easymock.tests.MockClassControlTest.testHashCode":316,"org.easymock.tests2.EasyMockSupportTest.testVerify":101,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":397,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":418,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":411,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":353,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":167,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":81,"org.easymock.tests.UsageVarargTest.varargCharAccepted":284,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":117,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":297,"org.easymock.tests2.UsageTest.openCallCountByLastCall":345,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":100,"org.easymock.tests.DefaultClassInstantiatorTest.object":324,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":410,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":378,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":82,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":22,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":308,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":359,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":51,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":315,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":21,"org.easymock.tests.CapturesMatcherTest.test":40,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":6,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":421,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":150,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":314,"org.easymock.tests2.UsageTest.resumeIfFailure":61,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":342,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":390,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":266,"org.easymock.tests2.StubTest.stubWithReturnValue":16,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":387,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":11,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":4,"org.easymock.tests2.SerializationTest.testAllMockedMethod":104,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":408,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":432,"org.easymock.samples.SupportTest.voteForRemovals":194,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":403,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":26,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":409,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":404,"org.easymock.tests.UsageExpectAndThrowTest.object":227,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":140,"org.easymock.tests2.DelegateToTest.testWrongClass":344,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":279,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":280,"org.easymock.samples.ConstructorCalledMockTest.testTax":188,"org.easymock.tests.UsageStrictMockTest.range":70,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":97,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":172,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":25,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":91,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":74,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":303,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":373,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":269,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":415,"org.easymock.tests2.CaptureTest.testCaptureNone":163,"org.easymock.tests.UsageUnorderedTest.message":77,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":79,"org.easymock.tests.UsageVerifyTest.twoReturns":83,"org.easymock.tests.UsageVarargTest.varargByteAccepted":288,"org.easymock.tests2.ThreadingTest.testThreadSafe":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":309,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":209,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":202,"org.easymock.tests2.CaptureTest.testCapture_2617107":158,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":234,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":35,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":295,"org.easymock.tests2.UsageConstraintsTest.any":131,"org.easymock.tests2.StubTest.stub":183,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":371,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":423,"org.easymock.tests.UsageExpectAndThrowTest.longType":225,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":265,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":296,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":328,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":370,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":54,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":113,"org.easymock.tests2.SerializationTest.testClass":102,"org.easymock.tests.LimitationsTest.mockNativeMethod":262,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":254,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":341,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":336,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":119,"org.easymock.tests2.NameTest.nameForMocksControl":187,"org.easymock.tests2.MockedExceptionTest.testMockedException":180,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":304,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":34,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":20,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":233,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":105,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":92,"org.easymock.tests.MockingTest.testNicePartialClassMocking":232,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":108,"org.easymock.tests2.CaptureTest.testCaptureLast":162,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":375,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":178,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":129,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":141,"org.easymock.tests.MockingTest.testTwoMocks":322,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":239,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":23,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":59,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":143,"org.easymock.samples.ExampleTest.removeNonExistingDocument":351,"org.easymock.tests.UsageStrictMockTest.differentMethods":71,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":368,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":326,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":291,"org.easymock.tests2.MockBuilderTest.testCreateMockString":45,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":312,"org.easymock.tests.UsageExpectAndThrowTest.floatType":224,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":305,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":10,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":392,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":85,"org.easymock.tests.UsageVerifyTest.twoThrows":38,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":354,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":149,"org.easymock.samples.ExampleTest.voteAgainstRemoval":198,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":413,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":294,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":111,"org.easymock.tests.LimitationsTest.privateConstructor":332,"org.easymock.tests2.UsageConstraintsTest.testNotNull":142,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":179,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":363,"org.easymock.tests2.UsageTest.defaultResetToNice":122,"org.easymock.samples.ExampleTest.voteAgainstRemovals":195,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":252,"org.easymock.tests.UsageVarargTest.differentLength":84,"org.easymock.tests2.CallbackTest.callback":41,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":389,"org.easymock.tests.UsageTest.openCallCountByLastCall":376,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":123,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":377,"org.easymock.tests.UsageCallCountTest.tooFewCalls":207,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":175,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":271,"org.easymock.tests.UsageThrowableTest.throwCheckedException":360,"org.easymock.tests.MockingTest.testStrictClassMocking":320,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":177,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":352,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":174,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":292,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":176,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":87,"org.easymock.tests.ObjectMethodsTest.testHashCode":379,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":385,"org.easymock.tests2.NameTest.nameForNiceMock":186,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":155,"org.easymock.tests2.DependencyTest.testInterfaceMocking":151,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":384,"org.easymock.samples.ExampleTest.addDocument":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":401,"org.easymock.tests2.DelegateToTest.testStubDelegate":115,"org.easymock.tests2.AnswerTest.stubAnswer":86,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":236,"org.easymock.tests.UsageVarargTest.varargLongAccepted":287,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":237,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":293,"org.easymock.tests.UsageExpectAndReturnTest.floatType":241,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":253,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":112,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":189,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":138,"org.easymock.tests.UsageThrowableTest.noUpperLimit":229,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":124,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":301,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":160,"org.easymock.tests2.SerializationTest.test":103,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":325,"org.easymock.tests2.UsageConstraintsTest.testSame":127,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":240,"org.easymock.samples.SupportTest.addDocument":193,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":306,"org.easymock.tests.GenericTest.testPackageScope":222,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":419,"org.easymock.tests2.NameTest.nameForMock":184,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":249,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":430,"org.easymock.tests2.UsageStrictMockTest.differentMethods":56,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":298,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":242,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":28,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":258,"org.easymock.tests2.MockedExceptionTest.testRealException":182,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":431,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":118,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":260,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":374,"org.easymock.tests2.NameTest.nameForStrictMock":185,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":145,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":8,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":302,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":139,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":327,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":42,"org.easymock.tests2.UsageStrictMockTest.range":55,"org.easymock.tests2.UsageConstraintsTest.lessThan":144,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":46,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":396,"org.easymock.tests2.CaptureTest.testCaptureRightOne":165,"org.easymock.tests2.UsageConstraintsTest.testOr":128,"org.easymock.tests.UsageRangeTest.combination":78,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":50,"org.easymock.tests.UsageTest.wrongArguments":73,"org.easymock.tests2.MockBuilderTest.testWithConstructor":426,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":394,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":215,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":243,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":250,"org.easymock.tests.UsageVarargTest.varargShortAccepted":286,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":329,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":64,"org.easymock.tests2.UsageConstraintsTest.cmpTo":132,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":405,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":17,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":15,"org.easymock.tests2.CaptureTest.testCaptureFromStub":349,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":365,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":338,"org.easymock.tests.UsageTest.unexpectedCallWithArray":72,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":68,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":208,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":429,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":251,"org.easymock.tests2.CaptureTest.testCapture":39,"org.easymock.tests2.UsageConstraintsTest.constraints":63,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":69,"org.easymock.samples.ExampleTest.addAndChangeDocument":201,"org.easymock.tests2.ConstraintsToStringTest.notToString":7,"org.easymock.tests.UsageStrictMockTest.testVerify":238,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":192,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":235,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":273,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":161,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":219,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":335,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":244,"org.easymock.tests.LimitationsTest.abstractClass":331,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":216,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":220,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":48,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":282}}]
