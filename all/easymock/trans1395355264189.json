[{"transplant":{"position":"org.easymock.internal.matchers.Not:40","sourceCode":"java.lang.StringBuffer.append(\"not(\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[0,1],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.Capture:131","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:137","sourceCode":"return java.util.List<T>.toString()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"position":"org.easymock.internal.MockBuilder:235","failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:760","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[17],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.Capture:60","sourceCode":"this.java.util.List<T>.clear()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[34,35,36,37],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:270","sourceCode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:284","sourceCode":"if ((java.lang.reflect.ParameterizedType.getRawType()) instanceof java.lang.Class<?>) {\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())).getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","pt":"pt","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[38],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MocksControl:105","failures":[39,40,17,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,19,20,21,22,23,24,25,26,108,27,29,30,31,32,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,38,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,1,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,34,256,257,35,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,36,37,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385],"status":-1,"binaryOperator":"(java.lang.reflect.Method[] != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:2125","sourceCode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[386],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:36","sourceCode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(char.char, java.lang.Character.java.lang.Character)","type":"CtInvocationImpl"},"failures":[387,388,389,390,391,392,393],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[46,47,67,69,71,72,78,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,394,107,19,20,21,22,23,24,25,26,108,27,29,30,31,32,114,395,396,181,182,183,184,185,186,190,191,1,221,270,271,272,273,274,299,301,326,327,362,363,372,373],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[84,89,99,104],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:48","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"failures":[0,397,1,398,399],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[39,41,42,43,44,46,47,48,49,50,2,51,57,64,65,66,67,68,400,401,402,403,78,79,80,81,83,84,85,86,87,88,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,394,404,405,406,407,408,409,410,19,22,23,27,29,30,31,114,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,12,411,412,413,414,162,415,416,165,417,418,166,419,420,421,422,395,396,423,424,425,167,168,426,15,15,16,16,173,174,176,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,219,1,221,222,223,224,225,226,227,228,229,230,233,234,235,236,427,240,241,242,243,244,245,246,247,248,249,250,251,428,255,34,256,257,258,259,270,271,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,429,301,302,303,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,37,362,363,364,366,367,368,369,370,371,372,373,430,431,432,378,383,433,434,435,436,437,438,439,440],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:213","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[39,41,42,43,44,45,46,47,48,49,50,2,51,441,57,64,65,66,67,68,400,401,402,403,69,71,72,74,75,76,77,78,79,80,81,83,84,85,86,87,88,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,394,404,405,406,407,409,410,19,20,21,22,23,24,25,26,108,27,29,30,31,32,114,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,12,411,412,413,414,162,415,416,164,165,417,418,166,419,420,421,395,396,424,167,168,426,169,15,15,16,16,170,171,172,173,174,175,176,177,178,180,442,443,181,182,183,184,185,186,187,188,189,190,191,193,194,219,220,1,221,222,223,224,225,226,227,228,229,230,444,233,234,235,236,241,243,244,246,249,251,428,258,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,429,445,288,289,290,292,293,295,296,297,298,299,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,362,363,364,365,366,367,368,369,370,371,372,373,430,431,432,377,378,379,380,381,382,434],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:311","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[99],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1646","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(int[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:34","sourceCode":"if (java.lang.Object == null) {\n    java.lang.StringBuffer.append(\"null\");\n} else if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}","type":"CtIfImpl"},"failures":[45,46,47,48,49,50,2,74,81,97,123,127,130,150,151,152,154,158,159,12,446,0,447,448,449,450,451,452,397,453,454,164,418,166,424,425,220,1,221,223,224,225,226,34,256,257,35,258,259,398,455,399,456,457,458,459,275,276,277,295,326,327,348,349,350,351,353,354,356,36,37,362],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1803","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"failures":[395,14,460,396,423,424,425,461,462,426,15,15,16,16,442,443,444,427,463,464,465,466,467,468,469,470,428,471,472,473,474,429,445,475,476,477,478,479,430,431,432,480,433,434,435,436,437,438,439,440],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:560","sourceCode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:45","sourceCode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))","type":"CtThrowImpl"},"failures":[73],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1877","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.CompareEqual<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[91,395],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:133","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:128","sourceCode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)","type":"CtInvocationImpl"},"failures":[39,41,42,43,44,45,46,47,48,49,50,2,51,441,57,64,65,66,67,68,400,401,402,403,69,71,72,78,79,80,81,83,84,85,86,87,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,394,481,404,405,406,407,408,409,410,19,20,21,22,23,24,25,26,108,27,29,30,31,32,114,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,12,411,412,413,414,162,415,416,164,165,417,418,166,419,420,421,422,395,396,423,424,425,167,168,426,169,15,16,170,171,172,173,174,175,176,177,178,180,442,443,181,182,183,184,185,186,187,188,189,190,191,192,193,194,219,220,1,221,222,223,224,225,227,228,229,230,444,233,235,236,428,255,256,257,259,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,429,445,288,289,290,292,293,294,295,296,297,298,299,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,362,363,364,365,366,367,368,369,370,371,372,373,430,431,432,379,380,381,382,383,384,385,33,33],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"stack":"stack"}},{"position":"org.easymock.EasyMock:721","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:39","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.vm.vendor\")","type":"CtReturnImpl"},"failures":[482],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:69","sourceCode":"try {\n    java.io.InputStream.close();\n} catch (final java.io.IOException java.io.IOException) {\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[483,484,485,486,487,488],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"in":"in"}},{"position":"org.easymock.internal.BridgeMethodResolver:193","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2053","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[48,49,396,223,224],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:162","sourceCode":"final java.lang.NoSuchFieldException java.lang.NoSuchFieldException","type":"CtLocalVariableImpl"},"failures":[489],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:130","sourceCode":"throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[11],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1776","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Find(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"regex"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":81,"org.easymock.tests.ClassInstantiatorFactoryTest.getJVM":482,"org.easymock.tests2.UsageTest.argumentsOrdered":159,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":347,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":131,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":115,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":205,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":154,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":169,"org.easymock.tests2.DelegateToTest.testReturnException":139,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":187,"org.easymock.tests.MockingTest.testPartialClassMocking":430,"org.easymock.tests.MockClassControlTest.testToString":435,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":73,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":261,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":462,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":214,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":401,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":327,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":168,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":387,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":88,"org.easymock.tests2.UsageTest.wrongArguments":152,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":270,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":63,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":229,"org.easymock.samples.ExampleTest.answerVsDelegate":174,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":473,"org.easymock.tests2.UsageConstraintsTest.testNull":84,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":376,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":419,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":440,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":130,"org.easymock.tests2.CaptureTest.testPrimitive":22,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":274,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":346,"org.easymock.tests.UsageTest.moreThanOneArgument":348,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":166,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":280,"org.easymock.tests.UsageTest.argumentsOrdered":354,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":356,"org.easymock.tests.UsageVarargTest.varargIntAccepted":290,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithObject":453,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":210,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":181,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":394,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":392,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":119,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":405,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":197,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":185,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":449,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":57,"org.easymock.tests.ReplayStateInvalidUsageTest.times":248,"org.easymock.tests2.AnswerTest.answer":39,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":89,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":212,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":148,"org.easymock.tests2.CaptureTest.testAnd":19,"org.easymock.tests2.UsageTest.strictResetToDefault":150,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":396,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":4,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":279,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":125,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":235,"org.easymock.tests2.DelegateToTest.testDelegate":142,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":360,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":342,"org.easymock.tests.LimitationsTest.mockFinalMethod":471,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":190,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":287,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":36,"org.easymock.tests2.CaptureTest.testCapture1_2446744":23,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":340,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":146,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":242,"org.easymock.tests.UsageThrowableTest.throwError":364,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":264,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":120,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":282,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":9,"org.easymock.samples.PartialClassMockTest.testGetArea":426,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":243,"org.easymock.tests.MockingTest.testInterfaceMocking":374,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":182,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":268,"org.easymock.tests2.UsageTest.niceToStrict":153,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":305,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":328,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":195,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":404,"org.easymock.tests2.MockBuilderTest.testCreateMock":408,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":60,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":0,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":336,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":126,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":239,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":377,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":227,"org.easymock.tests.UsageOverloadedMethodTest.overloading":193,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":94,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":257,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":192,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":317,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":93,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":27,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":291,"org.easymock.tests.MockClassControlTest.testEquals":439,"org.easymock.tests2.EasyMockSupportClassTest.testAll":400,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":445,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":451,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":344,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":147,"org.easymock.tests2.CaptureTest.testCaptureAll":20,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":285,"org.easymock.tests.MockNameTest.defaultName":231,"org.easymock.tests2.UsageConstraintsTest.testMatches":95,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":240,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":281,"org.easymock.samples.ExampleTest.voteForRemovals":178,"org.easymock.tests.UsageVarargTest.allKinds":299,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":275,"org.easymock.samples.BasicClassMockTest.testPrintContent":443,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":286,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":370,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":44,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":191,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":116,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":38,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":393,"org.easymock.tests2.UsageConstraintsTest.greaterThan":97,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":234,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":425,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":468,"org.easymock.samples.ExampleTest.voteForRemoval":175,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":461,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":65,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":265,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":422,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":444,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":149,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":6,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":202,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":123,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":366,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":186,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":138,"org.easymock.tests2.CaptureTest.testCaptureFirst":32,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":201,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":124,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":161,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":259,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":313,"org.easymock.tests2.UsageTest.moreThanOneArgument":151,"org.easymock.tests2.CaptureTest.testCapture2_2446744":31,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":67,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":409,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":213,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":298,"org.easymock.tests.GenericTest.testBridgedEquals":476,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":386,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":384,"org.easymock.tests.UsageExpectAndReturnTest.longType":309,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":121,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":283,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":345,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":102,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":232,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":343,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":253,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":278,"org.easymock.tests.UsageCallCountTest.tooManyCalls":385,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":455,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":379,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":314,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":62,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":332,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":369,"org.easymock.tests.MockingTest.testNiceClassMocking":480,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":412,"org.easymock.tests.MockingTest.testClassMocking":478,"org.easymock.tests2.UsageConstraintsTest.testContains":92,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":378,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":136,"org.easymock.tests2.UsageConstraintsTest.testFind":83,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":194,"org.easymock.tests.MockTypeTest.fromEasyMockClass":263,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":71,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":219,"org.easymock.tests.UsageExpectAndReturnTest.object":316,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":395,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":61,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":129,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":388,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":293,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":303,"org.easymock.tests.UsageTest.exactCallCountByLastCall":355,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":200,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":260,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":357,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":458,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":13,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":288,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":322,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":256,"org.easymock.tests.MockClassControlTest.testHashCode":438,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":110,"org.easymock.tests2.EasyMockSupportTest.testVerify":133,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":448,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":358,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":238,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":255,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":145,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":107,"org.easymock.tests.UsageVarargTest.varargCharAccepted":292,"org.easymock.tests2.CaptureTest.testCaptureMultiple":18,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":45,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":218,"org.easymock.tests2.UsageTest.openCallCountByLastCall":155,"org.easymock.tests.DefaultClassInstantiatorTest.object":427,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":132,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":237,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":301,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":459,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":334,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":367,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":55,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":109,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":437,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":423,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":333,"org.easymock.tests.CapturesMatcherTest.test":33,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":323,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":252,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":450,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":436,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":403,"org.easymock.tests2.UsageTest.resumeIfFailure":160,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":472,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":189,"org.easymock.tests2.StubTest.stubWithReturnValue":165,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":5,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":103,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":315,"org.easymock.tests2.SerializationTest.testAllMockedMethod":441,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":211,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":11,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":397,"org.easymock.samples.SupportTest.voteForRemovals":171,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":474,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":112,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":339,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":217,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":40,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":262,"org.easymock.tests.UsageExpectAndThrowTest.object":337,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":100,"org.easymock.tests2.DelegateToTest.testWrongClass":141,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":362,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":363,"org.easymock.samples.ConstructorCalledMockTest.testTax":15,"org.easymock.tests.UsageStrictMockTest.range":223,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":143,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":128,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":411,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":338,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":406,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":250,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":353,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":228,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":398,"org.easymock.tests2.CaptureTest.testCaptureNone":108,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":269,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":484,"org.easymock.tests.UsageUnorderedTest.message":326,"org.easymock.tests.UsageVerifyTest.twoReturns":277,"org.easymock.tests.UsageVarargTest.varargByteAccepted":297,"org.easymock.tests2.ThreadingTest.testThreadSafe":64,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":382,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":442,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":304,"org.easymock.tests2.CaptureTest.testCapture_2617107":21,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":454,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":215,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":273,"org.easymock.tests2.UsageConstraintsTest.any":90,"org.easymock.tests2.StubTest.stub":164,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":247,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":254,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":188,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":216,"org.easymock.tests.UsageExpectAndThrowTest.longType":330,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":466,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":246,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":47,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":114,"org.easymock.tests2.SerializationTest.testClass":2,"org.easymock.tests.LimitationsTest.mockNativeMethod":428,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":475,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":325,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":54,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":50,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":485,"org.easymock.tests2.NameTest.nameForMocksControl":77,"org.easymock.tests2.MockedExceptionTest.testMockedException":135,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":56,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":352,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":432,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":70,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":331,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":417,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":407,"org.easymock.tests.MockingTest.testNicePartialClassMocking":431,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":421,"org.easymock.tests2.CaptureTest.testCaptureLast":26,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":52,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":37,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":416,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":87,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":101,"org.easymock.tests.MockingTest.testTwoMocks":479,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":163,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":306,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":335,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":158,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":105,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":488,"org.easymock.samples.ExampleTest.removeNonExistingDocument":179,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":59,"org.easymock.tests.UsageStrictMockTest.differentMethods":224,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":244,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":111,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":487,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":464,"org.easymock.tests2.ConstraintsToStringTest.andToString":452,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":66,"org.easymock.tests2.MockBuilderTest.testCreateMockString":410,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":433,"org.easymock.tests.UsageExpectAndThrowTest.floatType":329,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":96,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":41,"org.easymock.tests.UsageVerifyTest.twoThrows":276,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":402,"org.easymock.samples.ExampleTest.voteAgainstRemoval":176,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":206,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":267,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":424,"org.easymock.tests.LimitationsTest.privateConstructor":470,"org.easymock.tests2.UsageConstraintsTest.testNotNull":104,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":134,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":371,"org.easymock.tests2.UsageTest.defaultResetToNice":157,"org.easymock.samples.ExampleTest.voteAgainstRemovals":173,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":207,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":321,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":53,"org.easymock.tests.UsageVarargTest.differentLength":294,"org.easymock.tests2.CallbackTest.callback":72,"org.easymock.tests2.UsageConstraintsTest.equals":82,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_null":456,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":14,"org.easymock.tests.UsageTest.openCallCountByLastCall":351,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":78,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":272,"org.easymock.tests.UsageCallCountTest.tooFewCalls":380,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":414,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":230,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":486,"org.easymock.tests.UsageThrowableTest.throwCheckedException":368,"org.easymock.tests.MockingTest.testStrictClassMocking":477,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":399,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":415,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":373,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":413,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":58,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":249,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":162,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":43,"org.easymock.tests.ObjectMethodsTest.testHashCode":302,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":391,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":68,"org.easymock.tests2.NameTest.nameForNiceMock":76,"org.easymock.tests2.DependencyTest.testInterfaceMocking":167,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":389,"org.easymock.samples.ExampleTest.addDocument":177,"org.easymock.tests2.DelegateToTest.testStubDelegate":140,"org.easymock.tests2.AnswerTest.stubAnswer":42,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":221,"org.easymock.tests.UsageVarargTest.varargLongAccepted":296,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":225,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":204,"org.easymock.tests.UsageExpectAndReturnTest.floatType":308,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":324,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":12,"org.easymock.tests2.ConstraintsToStringTest.orToString":446,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":16,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":118,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":98,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":35,"org.easymock.tests.UsageThrowableTest.noUpperLimit":365,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":79,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":24,"org.easymock.tests2.SerializationTest.test":51,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":489,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":463,"org.easymock.tests2.UsageConstraintsTest.testSame":85,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":307,"org.easymock.samples.SupportTest.addDocument":170,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":245,"org.easymock.tests.GenericTest.testPackageScope":429,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":359,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":199,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":117,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":375,"org.easymock.tests2.NameTest.nameForMock":74,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":318,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":8,"org.easymock.tests2.UsageStrictMockTest.differentMethods":49,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":460,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":310,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":341,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":300,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":236,"org.easymock.tests2.MockedExceptionTest.testRealException":137,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":266,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":144,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":209,"org.easymock.tests.ArgumentToStringTest.testArgumentToString":457,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":10,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":46,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":208,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":251,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":271,"org.easymock.tests2.NameTest.nameForStrictMock":75,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":69,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":420,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":465,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":99,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":481,"org.easymock.tests2.UsageStrictMockTest.range":48,"org.easymock.tests2.UsageConstraintsTest.lessThan":106,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":113,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":390,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":122,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":203,"org.easymock.tests2.CaptureTest.testCaptureRightOne":29,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":483,"org.easymock.tests2.UsageConstraintsTest.testOr":86,"org.easymock.tests.UsageRangeTest.combination":233,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":418,"org.easymock.tests.UsageTest.wrongArguments":350,"org.easymock.tests2.MockBuilderTest.testWithConstructor":3,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":434,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":311,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":196,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":319,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":467,"org.easymock.tests.UsageVarargTest.varargShortAccepted":295,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":383,"org.easymock.tests2.UsageConstraintsTest.cmpTo":91,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":17,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":198,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":156,"org.easymock.tests2.CaptureTest.testCaptureFromStub":30,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":241,"org.easymock.tests.UsageTest.unexpectedCallWithArray":349,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":1,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":381,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":7,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":320,"org.easymock.tests2.CaptureTest.testCapture":28,"org.easymock.tests2.UsageConstraintsTest.constraints":80,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":222,"org.easymock.samples.ExampleTest.addAndChangeDocument":180,"org.easymock.tests2.ConstraintsToStringTest.notToString":447,"org.easymock.tests.UsageStrictMockTest.testVerify":226,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":172,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":220,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":284,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":25,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":183,"org.easymock.tests.LimitationsTest.abstractClass":469,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":312,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":184,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":258,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":127,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":289}}]
