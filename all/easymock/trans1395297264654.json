[{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:93","sourceCode":"while (java.lang.Class<?> != null) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    java.lang.reflect.Method java.lang.reflect.Method = null;\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isPrivate(java.lang.reflect.Method.getModifiers())) {\n            continue;\n        } \n        if (java.lang.reflect.Method.isBridge()) {\n            continue;\n        } \n        if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n            if (java.lang.Class<?>[] == null) {\n                if (java.lang.reflect.Method != null) {\n                    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n                } \n                java.lang.reflect.Method = java.lang.reflect.Method;\n            } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n                return java.lang.reflect.Method;\n            } \n        } \n    }\n    if (java.lang.reflect.Method != null) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}","type":"CtWhileImpl"},"failures":[0,1,2,3,3,4,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksBehavior:156","sourceCode":"boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"org.easymock.internal.AndroidSupport.boolean = false","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"verified":"org.easymock.internal.AndroidSupport.isAndroid"}},{"position":"org.easymock.EasyMock:623","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1361","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:185","sourceCode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:56","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"parameterTypes":"paramTypes","i":"i"}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[57,58,59,60,61,62,63,64,0,1,2,65,66,67,3,3,4,4,68,69,70,71,72,5,73,6,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,10,11,12,13,146,14,16,18,19,20,21,22,23,25,147,148,149,26,150,151,152,153,154,27,28,29,30,155,31,32,156,157,158,159,33,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,34,35,179,36,37,38,39,40,41,42,43,44,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,45,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,46,247,248,249,250,251,252,253,47,48,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,52,329,330,331,332,333,334,335,336,337,338,54,55,56,339,340],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[89,90,98,99,126,137,196,341,342,259,260,279,280,286,299,343,300,329],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"this.java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[57,58,59,60,61,62,64,0,1,2,65,66,67,3,4,68,69,70,71,72,5,73,6,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,10,11,12,13,14,16,18,19,20,21,22,23,25,147,148,149,26,150,27,28,29,30,155,31,32,156,157,158,159,33,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,34,35,179,36,37,38,39,40,41,42,43,44,180,182,183,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,204,205,206,207,208,45,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,47,48,254,255,256,257,258,259,260,261,275,276,277,278,279,280,281,282,283,286,287,288,289,290,291,292,293,297,298,299,300,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,52,329,330,331,332,333,334,335,336,337,338,54,55,56,339,340],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"lock":"lock"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[344,128,133,145],"status":-1,"binaryOperator":"int >= 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.Matches:40","failures":[345],"status":-1,"binaryOperator":"((\"matches(\\\"\" + (java.lang.String.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \"\\\")\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:149","sourceCode":"throw new java.lang.RuntimeException(\"Class mocking requires to have cglib and objenesis librairies in the classpath\" , java.lang.NoClassDefFoundError)","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:230","sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:173","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[70],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[5,73,6,346],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"failures":[87,89,90,35,36,38,41,44,256,257,259,260,262,277],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[5,73,6,346],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:55","sourceCode":"java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection)","type":"CtInvocationImpl"},"failures":[67,68,347,348,349,350],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.EasyMockProperties:116","failures":[],"status":0,"binaryOperator":"((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\")","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[97,135,37],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1384","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[138],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1190","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[124,351,138,143],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[203,267],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:172","failures":[20],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","failures":[344,121,128,133,145],"status":-1,"binaryOperator":"int >= 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[352],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:45","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[269],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:47","sourceCode":"if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n    org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:49","sourceCode":"org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:433","sourceCode":"do {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n} while (java.lang.Class<?> != null )","type":"CtDoImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"clazz":"leafClass"}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[138,139],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"failures":[0,1,6,353,354,355,10,356,357,358,359,360,361,362,363,149,26,27,30,34,35,36,37,38,40,364,41,44,365,366,45,246,46,247,248,249,250,251,252,253,367,368,369,370,371,372,47,48,373,374,375,52,376,377,378,53,379],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"interceptor":"interceptor","mockedMethods":"mockedMethods"}},{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.Capture:113","sourceCode":"java.util.List<T>.add(T)","type":"CtInvocationImpl"},"failures":[118],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[380,145],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:37","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:61","sourceCode":"org.easymock.internal.MocksBehavior.lastBehaviorList().addExpected(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result, org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[96],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:137","sourceCode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)","type":"CtInvocationImpl"},"failures":[370,381,382],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:416","sourceCode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:105","sourceCode":"if (java.lang.String.equals(java.lang.reflect.Method.getName())) {\n    if (java.lang.Class<?>[] == null) {\n        if (java.lang.reflect.Method != null) {\n            throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n        } \n        java.lang.reflect.Method = java.lang.reflect.Method;\n    } else if (java.util.Arrays.java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes())) {\n        return java.lang.reflect.Method;\n    } \n} ","type":"CtIfImpl"},"failures":[0,1,2,3,3,4,4,5,6,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:48","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.specification.version\")","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":122,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":275,"org.easymock.tests2.UsageTest.argumentsOrdered":102,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":176,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":350,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":212,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":97,"org.easymock.tests2.StubTest.stubWithReturnValue":78,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":313,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":68,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":142,"org.easymock.tests2.SerializationTest.testAllMockedMethod":6,"org.easymock.tests2.DelegateToTest.testReturnException":69,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":352,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":210,"org.easymock.tests.MockingTest.testPartialClassMocking":54,"org.easymock.samples.SupportTest.voteForRemovals":66,"org.easymock.tests.MockClassControlTest.testToString":247,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":366,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":227,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":346,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":215,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":11,"org.easymock.tests.UsageExpectAndThrowTest.object":225,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":75,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":139,"org.easymock.tests2.DelegateToTest.testWrongClass":71,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":339,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":340,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":128,"org.easymock.tests2.UsageTest.wrongArguments":95,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":186,"org.easymock.tests.UsageStrictMockTest.range":259,"org.easymock.samples.ConstructorCalledMockTest.testTax":3,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":193,"org.easymock.samples.ExampleTest.answerVsDelegate":58,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":173,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":51,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":27,"org.easymock.tests2.UsageConstraintsTest.testNull":124,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":226,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":36,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":252,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":20,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":175,"org.easymock.tests2.CaptureTest.testPrimitive":108,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":355,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":281,"org.easymock.tests.UsageTest.moreThanOneArgument":276,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":273,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":234,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":192,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":179,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":206,"org.easymock.tests2.CaptureTest.testCaptureNone":113,"org.easymock.tests.UsageUnorderedTest.message":293,"org.easymock.tests.UsageVerifyTest.twoReturns":331,"org.easymock.tests.UsageVarargTest.varargByteAccepted":243,"org.easymock.tests2.ThreadingTest.testThreadSafe":161,"org.easymock.tests.UsageTest.argumentsOrdered":282,"org.easymock.tests.UsageVarargTest.varargIntAccepted":237,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":361,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":289,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":0,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":324,"org.easymock.tests2.CaptureTest.testCapture_2617107":107,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":14,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":189,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":19,"org.easymock.tests2.UsageConstraintsTest.any":129,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":270,"org.easymock.tests2.StubTest.stub":77,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":328,"org.easymock.tests.UsageExpectAndThrowTest.longType":218,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":211,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":370,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":269,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":88,"org.easymock.tests2.SerializationTest.testClass":5,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":147,"org.easymock.tests.ReplayStateInvalidUsageTest.times":271,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":76,"org.easymock.tests.LimitationsTest.mockNativeMethod":52,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":323,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":49,"org.easymock.tests2.AnswerTest.answer":156,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":351,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":84,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":9,"org.easymock.tests2.CaptureTest.testAnd":105,"org.easymock.tests2.UsageTest.strictResetToDefault":93,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":91,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":41,"org.easymock.tests2.NameTest.nameForMocksControl":154,"org.easymock.tests2.MockedExceptionTest.testMockedException":149,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":205,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":356,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":302,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":170,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":280,"org.easymock.tests2.DelegateToTest.testDelegate":72,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":219,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":56,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":34,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":21,"org.easymock.tests.MockingTest.testNicePartialClassMocking":55,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":230,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":38,"org.easymock.tests.LimitationsTest.mockFinalMethod":376,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":347,"org.easymock.tests2.CaptureTest.testCaptureLast":112,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":213,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":203,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":32,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":127,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":336,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":140,"org.easymock.tests.MockingTest.testTwoMocks":53,"org.easymock.tests2.CaptureTest.testCapture1_2446744":109,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":304,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":228,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":223,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":82,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":101,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":144,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":265,"org.easymock.tests.UsageThrowableTest.throwError":195,"org.easymock.samples.ExampleTest.removeNonExistingDocument":63,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":267,"org.easymock.tests.UsageStrictMockTest.differentMethods":260,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":368,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":163,"org.easymock.tests2.MockBuilderTest.testCreateMockString":25,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":357,"org.easymock.tests.UsageExpectAndThrowTest.floatType":217,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":208,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":135,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":157,"org.easymock.tests.UsageVerifyTest.twoThrows":330,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":181,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":12,"org.easymock.samples.PartialClassMockTest.testGetArea":2,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":266,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":325,"org.easymock.samples.ExampleTest.voteAgainstRemoval":60,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":43,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":359,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":216,"org.easymock.tests2.UsageTest.niceToStrict":96,"org.easymock.tests.LimitationsTest.privateConstructor":375,"org.easymock.tests2.UsageConstraintsTest.testNotNull":143,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":202,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":148,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":18,"org.easymock.tests2.MockBuilderTest.testCreateMock":22,"org.easymock.tests2.UsageTest.defaultResetToNice":100,"org.easymock.samples.ExampleTest.voteAgainstRemovals":57,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":319,"org.easymock.tests.UsageVarargTest.differentLength":240,"org.easymock.tests2.CallbackTest.callback":160,"org.easymock.tests.UsageTest.openCallCountByLastCall":279,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":224,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":171,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":119,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":284,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":188,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":191,"org.easymock.tests.UsageCallCountTest.tooFewCalls":287,"org.easymock.tests.UsageOverloadedMethodTest.overloading":298,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":363,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":133,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":183,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":315,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":297,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":30,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":381,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":132,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":114,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":194,"org.easymock.tests.UsageThrowableTest.throwCheckedException":199,"org.easymock.tests.MockClassControlTest.testEquals":251,"org.easymock.tests2.EasyMockSupportClassTest.testAll":10,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":48,"org.easymock.tests.MockingTest.testStrictClassMocking":377,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":232,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":7,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":334,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":83,"org.easymock.tests2.CaptureTest.testCaptureAll":106,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":338,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":31,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":348,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":29,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":272,"org.easymock.tests2.UsageConstraintsTest.testMatches":134,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":155,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":159,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":263,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":207,"org.easymock.tests2.CompareToTest.testGreateOrEqual":344,"org.easymock.tests.ObjectMethodsTest.testHashCode":295,"org.easymock.samples.ExampleTest.voteForRemovals":62,"org.easymock.tests2.ConstraintsToStringTest.matchesToString":345,"org.easymock.tests2.NameTest.nameForNiceMock":153,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":165,"org.easymock.tests.UsageVarargTest.allKinds":245,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":329,"org.easymock.tests2.DependencyTest.testInterfaceMocking":74,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":335,"org.easymock.samples.BasicClassMockTest.testPrintContent":1,"org.easymock.samples.ExampleTest.addDocument":61,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":362,"org.easymock.tests2.DelegateToTest.testStubDelegate":70,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":201,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":85,"org.easymock.tests2.AnswerTest.stubAnswer":158,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":214,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":257,"org.easymock.tests2.UsageConstraintsTest.greaterThan":136,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":301,"org.easymock.tests.UsageVarargTest.varargLongAccepted":242,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":44,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":261,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":372,"org.easymock.samples.ExampleTest.voteForRemoval":59,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":365,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":162,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":322,"org.easymock.tests.UsageExpectAndReturnTest.floatType":306,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":33,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":39,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":4,"org.easymock.tests.UsageThrowableTest.noUpperLimit":196,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":137,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":92,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":45,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":120,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":353,"org.easymock.tests2.SerializationTest.test":73,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":110,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":382,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":367,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":168,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":197,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":305,"org.easymock.tests2.UsageConstraintsTest.testSame":125,"org.easymock.samples.SupportTest.addDocument":65,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":209,"org.easymock.tests2.CaptureTest.testCaptureFirst":118,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":169,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":104,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":268,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":185,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":358,"org.easymock.tests.GenericTest.testPackageScope":47,"org.easymock.tests2.UsageTest.moreThanOneArgument":94,"org.easymock.tests2.CaptureTest.testCapture2_2446744":117,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":164,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":23,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":244,"org.easymock.tests.GenericTest.testBridgedEquals":373,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":291,"org.easymock.tests2.NameTest.nameForMock":151,"org.easymock.tests.UsageExpectAndReturnTest.longType":307,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":332,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":166,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":316,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":233,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":24,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":141,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":231,"org.easymock.tests2.UsageStrictMockTest.differentMethods":90,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":204,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":364,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":308,"org.easymock.tests.UsageCallCountTest.tooManyCalls":292,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":229,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":303,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":286,"org.easymock.tests2.MockedExceptionTest.testRealException":150,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":312,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":220,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":87,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":274,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":200,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":187,"org.easymock.tests.MockingTest.testNiceClassMocking":379,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":28,"org.easymock.tests.MockingTest.testClassMocking":378,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":285,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":15,"org.easymock.tests2.UsageConstraintsTest.testContains":131,"org.easymock.tests2.NameTest.nameForStrictMock":152,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":26,"org.easymock.tests2.UsageConstraintsTest.testFind":123,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":299,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":79,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":37,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":254,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":80,"org.easymock.tests.UsageExpectAndReturnTest.object":314,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":354,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":369,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":138,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":40,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":16,"org.easymock.tests2.UsageStrictMockTest.range":89,"org.easymock.tests2.UsageConstraintsTest.lessThan":145,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":174,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":239,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":296,"org.easymock.tests.UsageTest.exactCallCountByLastCall":283,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":337,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":167,"org.easymock.tests2.CaptureTest.testCaptureRightOne":115,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":341,"org.easymock.tests2.UsageConstraintsTest.testOr":126,"org.easymock.tests.UsageRangeTest.combination":300,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":320,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":235,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":35,"org.easymock.tests.UsageTest.wrongArguments":278,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":182,"org.easymock.tests.MockClassControlTest.testHashCode":250,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":46,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":309,"org.easymock.tests2.EasyMockSupportTest.testVerify":178,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":343,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":317,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":342,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":371,"org.easymock.tests.UsageVarargTest.varargShortAccepted":241,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":180,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":290,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":81,"org.easymock.tests2.UsageConstraintsTest.cmpTo":130,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":146,"org.easymock.tests.UsageVarargTest.varargCharAccepted":238,"org.easymock.tests2.CompareToTest.testLessThan":380,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":86,"org.easymock.tests2.UsageTest.openCallCountByLastCall":98,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":99,"org.easymock.tests.DefaultClassInstantiatorTest.object":253,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":177,"org.easymock.tests2.CaptureTest.testCaptureFromStub":116,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":264,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":17,"org.easymock.tests.UsageTest.unexpectedCallWithArray":277,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":294,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":360,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":222,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":256,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":198,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":288,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":349,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":318,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":258,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":249,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":42,"org.easymock.tests2.UsageConstraintsTest.constraints":121,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":221,"org.easymock.samples.ExampleTest.addAndChangeDocument":64,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":321,"org.easymock.tests.UsageStrictMockTest.testVerify":262,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":67,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":255,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":248,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":13,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":333,"org.easymock.tests2.UsageTest.resumeIfFailure":103,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":111,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":326,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":8,"org.easymock.tests.LimitationsTest.abstractClass":374,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":310,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":50,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":327,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":184,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":236,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":172}}]
