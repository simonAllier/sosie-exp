[{"position":"org.easymock.internal.ArgumentToString:46","failures":[0,1,2,3,4,5],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:213","failures":[19,20],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:224","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else {\n    return java.lang.reflect.Type;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:220","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    return java.lang.reflect.Type != null ? java.lang.reflect.Type : java.lang.Object.java.lang.Object;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else {\n    return java.lang.reflect.Type;\n}","type":"CtIfImpl"},"failures":[19],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"genericType":"genericType"}},{"position":"org.easymock.internal.ArgumentToString:90","failures":[21,22,23,24,2,25,26,27,5,28,29,30,31,18],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:139","sourceCode":"java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>, java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"constructor"}},{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[21,22,23,24,2,25,26,27,5,28,29,30,32,31,18],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:191","sourceCode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)","type":"CtAssignmentImpl"},"failures":[33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,6,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,7,99,21,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,8,209,210,22,211,212,9,10,213,23,24,214,11,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,2,12,306,25,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,19,326,327,328,20,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,27,430,431,432,433,434,435,436,437,438,13,439,5,28,14,15,29,30,16,440,441,442,443,444,445,32,446,447,448,449,450,451,452,453,454,455,456,457,458,459,17,31,18,460,461,462,463,464,465,466,467,467,468,468,469,470,471,472,473,474,475,476],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:223","sourceCode":"org.easymock.EasyMockSupport.createNiceControl()","type":"CtInvocationImpl"},"failures":[80,168,178,197,202],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.Null:35","failures":[139,157,182,396],"status":-1,"binaryOperator":"java.lang.Object == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:275","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[38,40,6,64,65,67,84,419,440,470],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,6,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,7,99,21,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,477,129,478,479,480,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,481,188,189,190,482,191,192,193,194,195,196,197,483,198,199,484,200,201,202,203,485,204,486,205,206,207,487,208,8,209,210,22,211,212,9,10,213,23,24,214,11,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,488,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,489,288,289,290,291,292,293,490,294,295,296,297,298,299,300,301,302,303,304,305,2,12,306,25,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,19,326,327,328,20,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,491,492,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,27,430,431,432,433,434,435,436,437,438,13,439,5,28,14,15,29,30,16,440,441,442,443,444,445,32,446,447,448,449,450,451,452,453,454,455,456,457,458,459,17,31,18,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.matchers.CompareTo:49","failures":[493,494,495,496,497],"status":-1,"binaryOperator":"((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[21,100,198,206,207,208,22,23,24,214,224,269,498,488,2,25,307,499,26,403,404,405,27,5,28,29,30,32,31,18],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:45","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:43","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[148],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:72","sourceCode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)","type":"CtThrowImpl"},"failures":[500,501,502,503],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:48","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"failures":[0,1,2,3,4],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:98","sourceCode":"return (java.lang.String) != null ? java.lang.String : \"EasyMock for \" + org.easymock.internal.MocksControl.(org.easymock.internal.MocksControl.getMockedType(java.lang.Object))","type":"CtReturnImpl"},"failures":[34,35,36,37,73,74,90,91,163,173,176,178,185,186,189,190,197,199,203,204,207,208,218,221,223,320,321,322,353,354,355,356,357,358,359,455,458,459],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[161,493],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[7,21,100,105,108,118,124,127,162,163,164,165,166,167,170,174,175,176,182,184,185,186,187,188,189,190,195,196,198,201,203,204,207,230,267,268,269,270,271,272,295,12,25,307,329,330,331,332,340,341,343,365,366,367,368,369,370,373,374,376,377,378,380,381,382,383,384,430,431,432,433,434,437,461,465,469,471,472,474],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"returnedType"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:221","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")))","type":"CtThrowImpl"},"failures":[334,335,441,444],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:163","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[66,67],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"this.java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:44","sourceCode":"java.util.concurrent.locks.ReentrantLock.lock()","type":"CtInvocationImpl"},"failures":[38,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,6,65,66,67,73,80,81,82,83,84,90,97,98,7,99,21,100,101,105,108,118,124,127,133,134,135,136,138,139,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,170,173,174,175,176,179,180,182,183,184,185,186,187,188,189,190,191,192,195,196,197,198,201,202,203,204,206,207,208,8,209,210,22,211,212,9,10,213,23,24,214,11,215,216,217,218,219,220,221,222,223,224,225,226,227,229,230,231,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,267,268,269,271,272,295,296,297,298,299,304,305,2,12,306,25,307,308,310,311,312,313,314,315,316,317,326,327,329,330,331,332,333,340,341,343,347,348,349,350,351,352,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,389,390,391,392,393,394,395,396,399,400,401,402,403,404,405,27,430,431,432,433,434,437,13,439,5,28,14,15,29,30,16,440,442,443,32,446,447,448,449,450,451,452,453,17,31,18,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,476],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"lock":"lock"}},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:99","sourceCode":"continue","type":"CtContinueImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:85","failures":[34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,6,65,66,67,73,80,81,82,83,84,90,97,98,7,99,21,100,101,105,108,118,124,127,133,134,135,136,138,139,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,170,173,174,175,176,179,180,181,182,183,184,185,186,187,188,189,190,191,192,195,196,197,198,201,202,203,204,206,207,208,8,209,210,22,211,212,9,10,213,23,24,214,11,215,216,217,218,219,220,221,222,223,224,225,226,227,229,230,231,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,267,268,269,270,271,272,276,277,278,279,280,281,282,283,284,285,286,287,288,295,296,297,298,299,304,305,2,12,306,25,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,329,330,331,332,333,340,341,343,347,348,349,350,351,352,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,27,430,431,432,433,434,437,13,439,5,28,14,15,29,30,16,440,442,443,445,32,446,447,448,449,450,451,452,453,455,456,457,17,31,18,460,461,462,463,464,465,466,467,467,468,468,469,470,471,472,473,474,475,476],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[415,417,426,427,429],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:68","sourceCode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[504,505,128,186,190,482,483,484,485,506,487],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"returnedType":"paramType"}},{"position":"org.easymock.EasyMock:1235","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[49,50,51,52,53,54,55,56,57,58,59,60,61,62,507,507],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[19],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"failures":[482],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:267","sourceCode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)","type":"CtInvocationImpl"},"failures":[192,8,351,409,13,31],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"throwable":"throwable","state":"state"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[45,46,47,508],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[105,108,118,124,127,162,164,165,167,182,184,185,186,187,188,189,190,198,201,203,204,207,230,340,341,343,431,437,465],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.EasyMock:190","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMockSupport:93","sourceCode":"return org.easymock.EasyMockSupport.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:89","failures":[174,175,509,201],"status":-1,"binaryOperator":"java.lang.reflect.Method == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"o":"expected","this":"expected"}},{"position":"org.easymock.internal.DefaultClassInstantiator:63","failures":[],"status":0,"binaryOperator":"(\"Failed to instantiate \" + (java.lang.Class<?>.getName()))","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":136,"org.easymock.tests2.UsageTest.argumentsOrdered":24,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":13,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":225,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":416,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":212,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":464,"org.easymock.tests2.DelegateToTest.testReturnException":229,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":348,"org.easymock.tests.MockingTest.testPartialClassMocking":340,"org.easymock.tests.MockClassControlTest.testToString":320,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":33,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":274,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":425,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":178,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":112,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":108,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":238,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":196,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":143,"org.easymock.tests2.UsageTest.wrongArguments":22,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":295,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":79,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":236,"org.easymock.samples.ExampleTest.answerVsDelegate":470,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":356,"org.easymock.tests2.UsageConstraintsTest.testNull":139,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":345,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":165,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":224,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":325,"org.easymock.tests2.CaptureTest.testPrimitive":52,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":299,"org.easymock.tests.UsageTest.moreThanOneArgument":439,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":257,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":164,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":331,"org.easymock.tests.UsageTest.argumentsOrdered":30,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":262,"org.easymock.tests.UsageVarargTest.varargIntAccepted":387,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":421,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":430,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":197,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":479,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":95,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":202,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":408,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":434,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":73,"org.easymock.tests.ReplayStateInvalidUsageTest.times":284,"org.easymock.tests2.DependencyTest.testClassMocking":193,"org.easymock.tests2.AnswerTest.answer":6,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":144,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":423,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":44,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":492,"org.easymock.tests2.CaptureTest.testAnd":49,"org.easymock.tests2.UsageTest.strictResetToDefault":209,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":484,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":173,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":330,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":219,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":271,"org.easymock.tests2.DelegateToTest.testDelegate":233,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":266,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":253,"org.easymock.tests.LimitationsTest.mockFinalMethod":438,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":351,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":453,"org.easymock.tests2.DependencyTest.testClassMockingSupport":194,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":334,"org.easymock.tests2.CaptureTest.testCapture1_2446744":53,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":169,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":251,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":42,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":278,"org.easymock.tests.UsageThrowableTest.throwError":310,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":355,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":488,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":96,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":333,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":504,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":126,"org.easymock.samples.PartialClassMockTest.testGetArea":465,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":279,"org.easymock.tests.MockingTest.testInterfaceMocking":342,"org.easymock.tests2.CompareToTest.testLessOrEqual":497,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":431,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":260,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":459,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":113,"org.easymock.tests2.UsageTest.niceToStrict":211,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":239,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":406,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":201,"org.easymock.tests2.MockBuilderTest.testCreateMock":206,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":121,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":76,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":0,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":247,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":220,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":491,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":362,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":397,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":234,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongArgument":500,"org.easymock.tests.UsageOverloadedMethodTest.overloading":447,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":123,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":117,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":443,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":149,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":446,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":376,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":148,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":58,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":388,"org.easymock.tests2.EasyMockSupportClassTest.testAll":105,"org.easymock.tests.MockClassControlTest.testEquals":324,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":327,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":255,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":451,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":43,"org.easymock.tests2.CaptureTest.testCaptureAll":50,"org.easymock.tests.MockNameTest.defaultName":359,"org.easymock.tests2.UsageConstraintsTest.testMatches":150,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":276,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":332,"org.easymock.samples.ExampleTest.voteForRemovals":474,"org.easymock.tests.UsageVarargTest.allKinds":396,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":17,"org.easymock.samples.BasicClassMockTest.testPrintContent":463,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":452,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":316,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":97,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":92,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":232,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":352,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":490,"org.easymock.tests2.UsageConstraintsTest.greaterThan":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":106,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":270,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":176,"org.easymock.samples.ExampleTest.voteForRemoval":471,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":294,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":180,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":177,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":357,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":480,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":168,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":8,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":258,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":205,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":413,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":217,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":312,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":103,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":347,"org.easymock.tests2.CaptureTest.testCaptureFirst":62,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":228,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":412,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":218,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":11,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":32,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":372,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":182,"org.easymock.tests2.CaptureTest.testCapture2_2446744":61,"org.easymock.tests2.UsageTest.moreThanOneArgument":210,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":424,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":207,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":395,"org.easymock.tests.GenericTest.testBridgedEquals":20,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButNotStatic":501,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":404,"org.easymock.tests.UsageExpectAndReturnTest.longType":368,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":449,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":215,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":256,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":157,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":300,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":254,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":302,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":329,"org.easymock.tests.UsageCallCountTest.tooManyCalls":405,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":399,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":122,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":373,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":78,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":243,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":315,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":185,"org.easymock.tests.MockingTest.testNiceClassMocking":346,"org.easymock.tests.MockingTest.testClassMocking":338,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":509,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":398,"org.easymock.tests2.UsageConstraintsTest.testContains":147,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":82,"org.easymock.tests2.UsageConstraintsTest.testFind":138,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":448,"org.easymock.tests.MockTypeTest.fromEasyMockClass":354,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":40,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":304,"org.easymock.tests.UsageExpectAndReturnTest.object":375,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":170,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":77,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":223,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":390,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":457,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_TypeExistsButPrivate":502,"org.easymock.tests.UsageTest.exactCallCountByLastCall":16,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":363,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":411,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":263,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":273,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":128,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":385,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":381,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":442,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":86,"org.easymock.tests.MockClassControlTest.testHashCode":323,"org.easymock.tests2.EasyMockSupportTest.testVerify":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":115,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":264,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":440,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":361,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":499,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":41,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":48,"org.easymock.tests.UsageVarargTest.varargCharAccepted":389,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":489,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":98,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":429,"org.easymock.tests2.UsageTest.openCallCountByLastCall":9,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":226,"org.easymock.tests.DefaultClassInstantiatorTest.object":288,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":360,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":455,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":26,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":116,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":245,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":313,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":71,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":85,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":174,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":322,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":244,"org.easymock.tests.CapturesMatcherTest.test":507,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":382,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":124,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":321,"org.easymock.tests2.UsageTest.resumeIfFailure":214,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":353,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":478,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":350,"org.easymock.tests2.StubTest.stubWithReturnValue":192,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":485,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":158,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":374,"org.easymock.tests2.SerializationTest.testAllMockedMethod":47,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":422,"org.easymock.samples.SupportTest.voteForRemovals":461,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":1,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":19,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":88,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":250,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":508,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":428,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":63,"org.easymock.tests.UsageExpectAndThrowTest.object":248,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":275,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":155,"org.easymock.tests2.DelegateToTest.testWrongClass":231,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":267,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":268,"org.easymock.samples.ConstructorCalledMockTest.testTax":467,"org.easymock.tests.UsageStrictMockTest.range":25,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":131,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":222,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":184,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":249,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":203,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":102,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":29,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":286,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":235,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":3,"org.easymock.tests2.CaptureTest.testCaptureNone":57,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":261,"org.easymock.tests.UsageUnorderedTest.message":27,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":498,"org.easymock.tests.UsageVerifyTest.twoReturns":18,"org.easymock.tests.UsageVarargTest.varargByteAccepted":394,"org.easymock.tests2.ThreadingTest.testThreadSafe":179,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":119,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":402,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":462,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":458,"org.easymock.tests2.CaptureTest.testCapture_2617107":51,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":336,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":426,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":298,"org.easymock.tests2.UsageConstraintsTest.any":145,"org.easymock.tests2.StubTest.stub":191,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":283,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":303,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":427,"org.easymock.tests.UsageExpectAndThrowTest.longType":241,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":349,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":292,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":282,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":99,"org.easymock.tests2.SerializationTest.testClass":45,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":90,"org.easymock.tests.LimitationsTest.mockNativeMethod":437,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":384,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":328,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":70,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":101,"org.easymock.tests2.NameTest.nameForMocksControl":37,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":72,"org.easymock.tests2.MockedExceptionTest.testMockedException":81,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":107,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":15,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":39,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":242,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":343,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":162,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":204,"org.easymock.tests.MockingTest.testNicePartialClassMocking":341,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":167,"org.easymock.tests2.CompareToTest.testCompareEqual":495,"org.easymock.tests2.CaptureTest.testCaptureLast":56,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":68,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":335,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":190,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":142,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":156,"org.easymock.tests.MockingTest.testTwoMocks":339,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":482,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":365,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":246,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":23,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":160,"org.easymock.samples.ExampleTest.removeNonExistingDocument":475,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":75,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":280,"org.easymock.tests.UsageStrictMockTest.differentMethods":307,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":87,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":290,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":181,"org.easymock.tests2.MockBuilderTest.testCreateMockString":208,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":318,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":109,"org.easymock.tests.UsageExpectAndThrowTest.floatType":240,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":104,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":65,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":477,"org.easymock.tests.UsageVerifyTest.twoThrows":31,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":441,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":118,"org.easymock.samples.ExampleTest.voteAgainstRemoval":472,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":417,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":259,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":175,"org.easymock.tests.LimitationsTest.privateConstructor":436,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":505,"org.easymock.tests2.UsageConstraintsTest.testNotNull":159,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":80,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":317,"org.easymock.tests2.UsageTest.defaultResetToNice":213,"org.easymock.samples.ExampleTest.voteAgainstRemovals":469,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":418,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":380,"org.easymock.tests.UsageVarargTest.differentLength":391,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":69,"org.easymock.tests2.CallbackTest.callback":84,"org.easymock.tests2.UsageConstraintsTest.equals":137,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":171,"org.easymock.tests.UsageTest.openCallCountByLastCall":14,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":133,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":297,"org.easymock.tests.UsageCallCountTest.tooFewCalls":400,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":187,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":237,"org.easymock.tests.UsageThrowableTest.throwCheckedException":314,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":4,"org.easymock.tests.MockingTest.testStrictClassMocking":337,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":189,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":364,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":186,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":74,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":285,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":188,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":67,"org.easymock.tests2.CompareToTest.testGreateOrEqual":496,"org.easymock.tests.ObjectMethodsTest.testHashCode":456,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":183,"org.easymock.tests2.NameTest.nameForNiceMock":36,"org.easymock.tests2.DependencyTest.testInterfaceMocking":195,"org.easymock.samples.ExampleTest.addDocument":473,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":120,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":125,"org.easymock.tests2.DelegateToTest.testStubDelegate":230,"org.easymock.tests2.AnswerTest.stubAnswer":66,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":12,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":486,"org.easymock.tests.UsageVarargTest.varargLongAccepted":393,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":308,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":415,"org.easymock.tests.UsageExpectAndReturnTest.floatType":367,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":383,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":127,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":468,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":444,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":153,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":94,"org.easymock.tests.UsageThrowableTest.noUpperLimit":311,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":134,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":129,"org.easymock.tests2.SerializationTest.test":46,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":54,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":289,"org.easymock.tests2.UsageConstraintsTest.testSame":140,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":366,"org.easymock.samples.SupportTest.addDocument":460,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":481,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":281,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":110,"org.easymock.tests.GenericTest.testPackageScope":326,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":265,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":410,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":93,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":344,"org.easymock.tests2.NameTest.nameForMock":34,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":377,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":487,"org.easymock.tests2.UsageStrictMockTest.differentMethods":100,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":172,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":369,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":252,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":454,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":272,"org.easymock.tests2.MockedExceptionTest.testRealException":83,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":358,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":420,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":132,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":419,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":7,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":287,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":296,"org.easymock.tests2.NameTest.nameForStrictMock":35,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":200,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":503,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":38,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":166,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":130,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":154,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":291,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":198,"org.easymock.tests2.UsageStrictMockTest.range":21,"org.easymock.tests2.UsageConstraintsTest.lessThan":161,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":89,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":414,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":114,"org.easymock.tests2.CaptureTest.testCaptureRightOne":59,"org.easymock.tests2.UsageConstraintsTest.testOr":141,"org.easymock.tests.UsageRangeTest.combination":269,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":163,"org.easymock.tests.UsageTest.wrongArguments":28,"org.easymock.tests2.MockBuilderTest.testWithConstructor":483,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":111,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":319,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":370,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":407,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":378,"org.easymock.tests.UsageVarargTest.varargShortAccepted":392,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":293,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":403,"org.easymock.tests2.UsageConstraintsTest.cmpTo":146,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":64,"org.easymock.tests2.CompareToTest.testLessThan":493,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":409,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":10,"org.easymock.tests2.CaptureTest.testCaptureFromStub":60,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":277,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":199,"org.easymock.tests.UsageTest.unexpectedCallWithArray":5,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":2,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":401,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":506,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":379,"org.easymock.tests2.UsageConstraintsTest.constraints":135,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":306,"org.easymock.samples.ExampleTest.addAndChangeDocument":476,"org.easymock.tests.UsageStrictMockTest.testVerify":309,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":466,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":305,"org.easymock.tests2.CompareToTest.testGreateThan":494,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":450,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":55,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":432,"org.easymock.tests.LimitationsTest.abstractClass":435,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":371,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":445,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":433,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":386,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":221}}]
