[{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[0],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1349","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:210","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[1,2],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:189","sourceCode":"java.lang.Class<?> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.wrapPrimitive(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[3,4,5,6,7,8,9,10,11,12],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"clazz":"parameterType"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:77","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.ArrayList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:430","sourceCode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))","type":"CtInvocationImpl"},"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1135","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:1519","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1396","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[28],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","sourceCode":"assert java.lang.Class<?> != null : \"Class must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:59","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} ","type":"CtIfImpl"},"failures":[29,30,31,3,32,33,34,35,36,4,37,38],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"paramType"}},{"position":"org.easymock.internal.Range:44","failures":[39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,13,14,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,3,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,28,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,1,185,186,187,188,189,190,191,192,193,32,194,195,196,197,33,34,198,199,200,201,202,203,204,35,205,206,36,207,208,209,210,4,211,212,213,214,215,38,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,15,257,258,259,16,17,260,18,261,262,19,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,20,21,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,0,344,345,346,347,348,349,350,351,352,353,354,355,356,357,2,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,22,385,386,387,23,24,388,25,389,390,26,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,27,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[51,52,53,500],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:113","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"method"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:126","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2159","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[188,189],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:231","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkOrder(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[161,175,222,293],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:279","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[71,429],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksControl:136","failures":[51,53,87,88,89,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,3,136,137,138,140,171,172,174,175,176,177,179,180,181,182,183,184,1,185,186,192,193,32,194,197,33,200,201,204,205,206,207,208,209,210,211,213,214,215,216,268,300,301,302,303,304,305,307,332,333,334,335,336,337,338,339,340,341,342,343,0,352,353,354,355,356,2,360,367,372,446,447,448,449,485,486,488,490,490,491,491],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1687","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(T[]))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[199],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.EasyMockProperties:62","failures":[39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,13,14,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,3,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,28,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,1,185,186,187,501,188,189,190,191,192,193,32,194,195,196,197,33,34,502,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,15,257,258,259,16,17,260,18,261,262,19,263,264,265,266,267,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,300,301,302,303,304,305,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,20,21,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,0,344,345,346,347,348,349,350,351,352,353,354,355,356,357,2,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,22,385,386,387,23,24,388,25,389,390,26,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,27,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499],"status":-1,"binaryOperator":"java.io.InputStream != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[51,52,53,500],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:986","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[165],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ReflectionUtils:184","failures":[51,134,3,4,213,6,7,8,9,12],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ArgumentToString:84","sourceCode":"java.lang.Object[] = new java.lang.Object[0]","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:89","sourceCode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    java.lang.StringBuilder.append(org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.argumentToString(java.lang.Object[][int]));\n}","type":"CtForImpl"},"failures":[13,220,226,227,319,20,525,440,452,453,456,457,465,481,482],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"arguments":"arguments"}},{"transplant":{"position":"org.easymock.internal.MocksControl:327","sourceCode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:121","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"failures":[51,52,53],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"this.org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","sourceCode":"org.easymock.EasyMockSupport.createControl()","type":"CtInvocationImpl"},"failures":[51,134,3,180,184,186,208,212,213,214,216,340,343],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<java.lang.Float>(float))","type":"CtInvocationImpl"},"failures":[153],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MockBuilder:188","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[177,186,204,209],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1940","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","failures":[526,527,319,528,529,452],"status":-1,"binaryOperator":"int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object))","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1000","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.EasyMock:866","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.Any:36","failures":[56,62,63,68,106,151,155,277,278,308,309,310,311,312,320,365,379,380,440,441,442,443,444,445],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"position":"org.easymock.internal.RecordState:85","failures":[40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,72,73,74,80,87,88,89,90,91,97,104,105,106,107,13,14,108,112,115,125,131,134,143,144,145,146,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,28,164,165,166,167,168,169,170,171,172,173,174,175,176,177,179,182,183,184,1,187,188,189,190,191,192,193,32,194,196,197,33,198,199,202,203,204,205,208,209,210,211,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,244,245,246,248,249,250,251,252,253,254,255,256,15,257,258,259,16,17,260,18,261,262,19,263,264,265,266,267,268,277,278,279,280,281,282,287,288,289,290,291,292,293,294,295,296,297,298,300,308,309,310,311,312,317,318,319,320,321,20,21,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,341,342,344,345,346,347,348,355,356,2,361,362,363,364,365,366,379,380,381,382,383,384,22,385,386,387,23,24,388,25,389,390,26,391,392,393,394,395,396,397,398,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,440,441,442,443,444,445,448,450,451,452,453,454,455,456,457,458,459,461,462,464,465,466,467,468,469,470,471,472,473,475,476,477,480,481,482,483,484,485,486,487,488,489,490,490,491,491,492,493,494,495,496,497,498,499],"status":-1,"binaryOperator":"org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:262","sourceCode":"if (java.lang.Throwable == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:301","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubThrow(java.lang.Throwable);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[87,88,89,90,199,297,310,314,315,316,361,362,363,364,365,366,380,424],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:193","failures":[340,0],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[51,52,53,500],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[51,52,53,500],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[146],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.RecordState:315","failures":[87,88,89,90,199,217,224,253,254,255,256,15,257,258,259,16,17,260,18,261,262,19,263,264,265,266,267,310,311,326,330,331,361,362,363,364,365,366,380,450,455,462,468],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:132","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T>)","type":"CtAssignmentImpl"},"failures":[51,213],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:39","sourceCode":"return java.lang.System.java.lang.System.getProperty(\"java.vm.vendor\")","type":"CtReturnImpl"},"failures":[530],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[170,531],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2038","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"failures":[44,46,51,52,55,56,57,58,59,60,61,62,64,65,66,67,68,69,72,73,74,91,104,106,107,13,14,108,134,143,144,145,146,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,28,164,165,167,168,169,170,171,173,174,176,187,189,190,191,193,32,197,33,199,202,208,215,216,217,218,219,220,221,222,223,224,226,227,229,244,245,246,248,253,254,255,256,15,257,258,259,16,17,260,18,261,262,19,263,264,265,266,267,277,278,279,291,308,309,310,311,312,317,319,320,321,20,21,322,324,326,327,328,329,330,331,344,345,346,347,348,350,355,356,2,361,362,363,364,366,379,380,381,382,383,384,22,385,386,387,23,24,388,25,389,390,26,391,392,393,394,395,440,441,442,443,444,445,448,450,451,452,453,454,455,456,457,458,464,467,468,480,481,482,493,494,497],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[300,301,305],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:47","failures":[526,527,319,528,529,452],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[3,4,6,7,8,10,11],"status":-1,"name":"inlineConstant","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":146,"org.easymock.tests.ClassInstantiatorFactoryTest.getJVM":530,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":450,"org.easymock.tests2.UsageTest.argumentsOrdered":227,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":240,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":98,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":426,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":222,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":487,"org.easymock.tests2.DelegateToTest.testReturnException":244,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":362,"org.easymock.tests.MockingTest.testPartialClassMocking":355,"org.easymock.tests.MockClassControlTest.testToString":334,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":39,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":285,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":435,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":119,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":115,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":253,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":203,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":524,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":6,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":153,"org.easymock.tests2.UsageTest.wrongArguments":220,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":308,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":86,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":251,"org.easymock.samples.ExampleTest.answerVsDelegate":493,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":372,"org.easymock.tests2.UsageConstraintsTest.testNull":149,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":359,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":174,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":239,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":339,"org.easymock.tests2.CaptureTest.testPrimitive":58,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":312,"org.easymock.tests.UsageTest.moreThanOneArgument":451,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":267,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":173,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":346,"org.easymock.tests.UsageTest.argumentsOrdered":457,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":272,"org.easymock.tests.UsageVarargTest.varargIntAccepted":398,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":431,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":441,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":11,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":204,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":138,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":102,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":209,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":419,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":445,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":508,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":80,"org.easymock.tests.ReplayStateInvalidUsageTest.times":295,"org.easymock.tests2.DependencyTest.testClassMocking":200,"org.easymock.tests2.AnswerTest.answer":69,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":154,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":433,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":50,"org.easymock.tests2.CaptureTest.testAnd":55,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":369,"org.easymock.tests2.UsageTest.strictResetToDefault":218,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":182,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":36,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":345,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":234,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":281,"org.easymock.tests2.DelegateToTest.testDelegate":248,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":276,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":507,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":263,"org.easymock.tests.LimitationsTest.mockFinalMethod":449,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":365,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":473,"org.easymock.tests2.DependencyTest.testClassMockingSupport":201,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":349,"org.easymock.tests2.CaptureTest.testCapture1_2446744":59,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":178,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":262,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":48,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":289,"org.easymock.tests.UsageThrowableTest.throwError":324,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":371,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":103,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":283,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":348,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":29,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":133,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":511,"org.easymock.samples.PartialClassMockTest.testGetArea":488,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":290,"org.easymock.tests.MockingTest.testInterfaceMocking":357,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":442,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":270,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":479,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":120,"org.easymock.tests2.UsageTest.niceToStrict":221,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":254,"org.easymock.tests2.ThreadingTest.testChangeDefault":501,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":417,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":208,"org.easymock.tests2.MockBuilderTest.testCreateMock":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":128,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":83,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":526,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":17,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":235,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":368,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":378,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":408,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":249,"org.easymock.tests.UsageOverloadedMethodTest.overloading":467,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":130,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":124,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":462,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":159,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":466,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":25,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":158,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":64,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":399,"org.easymock.tests2.EasyMockSupportClassTest.testAll":112,"org.easymock.tests.MockClassControlTest.testEquals":338,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":342,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":265,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":471,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":49,"org.easymock.tests2.CaptureTest.testCaptureAll":56,"org.easymock.tests.MockNameTest.defaultName":375,"org.easymock.tests2.UsageConstraintsTest.testMatches":160,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":287,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":347,"org.easymock.samples.ExampleTest.voteForRemovals":497,"org.easymock.tests.UsageVarargTest.allKinds":407,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":480,"org.easymock.samples.BasicClassMockTest.testPrintContent":486,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":472,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":330,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":104,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":99,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":247,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":366,"org.easymock.tests2.UsageConstraintsTest.greaterThan":162,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_AllPrimitives":12,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":306,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":113,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":280,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":1,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":512,"org.easymock.samples.ExampleTest.voteForRemoval":494,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":307,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":188,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":185,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":373,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":139,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":177,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":504,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":217,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":268,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":213,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":424,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":232,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":326,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":110,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":361,"org.easymock.tests2.CaptureTest.testCaptureFirst":68,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":243,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":423,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":233,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":229,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":465,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":387,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":190,"org.easymock.tests2.CaptureTest.testCapture2_2446744":67,"org.easymock.tests2.UsageTest.moreThanOneArgument":219,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":434,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":215,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":406,"org.easymock.tests.GenericTest.testBridgedEquals":0,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":415,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":31,"org.easymock.tests.UsageExpectAndReturnTest.longType":384,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":469,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":230,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":266,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":166,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":313,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":264,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":315,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":344,"org.easymock.tests.UsageCallCountTest.tooManyCalls":416,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":410,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":129,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":23,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":85,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":257,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":329,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":193,"org.easymock.tests.MockingTest.testNiceClassMocking":360,"org.easymock.tests.MockingTest.testClassMocking":353,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":409,"org.easymock.tests2.UsageConstraintsTest.testContains":157,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":89,"org.easymock.tests2.UsageConstraintsTest.testFind":148,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":468,"org.easymock.tests.MockTypeTest.fromEasyMockClass":370,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":46,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":317,"org.easymock.tests.UsageExpectAndReturnTest.object":388,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":179,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":84,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":238,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":401,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":7,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":477,"org.easymock.tests.UsageTest.exactCallCountByLastCall":458,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":379,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":422,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":273,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":284,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":3,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":396,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":392,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":461,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":93,"org.easymock.tests.MockClassControlTest.testHashCode":337,"org.easymock.tests2.EasyMockSupportTest.testVerify":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":122,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":274,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":459,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":377,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":47,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":54,"org.easymock.tests.UsageVarargTest.varargCharAccepted":400,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":299,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":105,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":439,"org.easymock.tests2.UsageTest.openCallCountByLastCall":223,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":241,"org.easymock.tests.DefaultClassInstantiatorTest.object":300,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":376,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":475,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":525,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":123,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":259,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":327,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":78,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":92,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":510,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":183,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":336,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":258,"org.easymock.tests.ReplayStateInvalidCallsTest.times":516,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":393,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":314,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":517,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":131,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":335,"org.easymock.tests2.UsageTest.resumeIfFailure":228,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":367,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":137,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":364,"org.easymock.tests2.StubTest.stubWithReturnValue":199,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":4,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":167,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":24,"org.easymock.tests2.SerializationTest.testAllMockedMethod":53,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":432,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":527,"org.easymock.samples.SupportTest.voteForRemovals":484,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":340,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":95,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":261,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":500,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":438,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":70,"org.easymock.tests.UsageExpectAndThrowTest.object":260,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":286,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":164,"org.easymock.tests2.DelegateToTest.testWrongClass":246,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":514,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":277,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":278,"org.easymock.samples.ConstructorCalledMockTest.testTax":490,"org.easymock.tests.UsageStrictMockTest.range":20,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":141,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":237,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":192,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":18,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":210,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":456,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":109,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":297,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":250,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":528,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":506,"org.easymock.tests2.CaptureTest.testCaptureNone":63,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":271,"org.easymock.tests.UsageUnorderedTest.message":440,"org.easymock.tests.UsageVerifyTest.twoReturns":482,"org.easymock.tests.UsageVarargTest.varargByteAccepted":405,"org.easymock.tests2.ThreadingTest.testThreadSafe":187,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":126,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":413,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":485,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":478,"org.easymock.tests2.CaptureTest.testCapture_2617107":57,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":351,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":436,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":311,"org.easymock.tests2.UsageConstraintsTest.any":155,"org.easymock.tests2.StubTest.stub":198,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":294,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":316,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":437,"org.easymock.tests.UsageExpectAndThrowTest.longType":256,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":363,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":304,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":293,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":107,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":97,"org.easymock.tests2.SerializationTest.testClass":51,"org.easymock.tests.LimitationsTest.mockNativeMethod":448,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":395,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":343,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":77,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":522,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":108,"org.easymock.tests2.NameTest.nameForMocksControl":43,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":79,"org.easymock.tests2.MockedExceptionTest.testMockedException":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":114,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":455,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":45,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":2,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":15,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":171,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":211,"org.easymock.tests.MockingTest.testNicePartialClassMocking":356,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":176,"org.easymock.tests2.CaptureTest.testCaptureLast":62,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":75,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":350,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":521,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":152,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":33,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":165,"org.easymock.tests.MockingTest.testTwoMocks":354,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":518,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":34,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":381,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":16,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":226,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":169,"org.easymock.samples.ExampleTest.removeNonExistingDocument":498,"org.easymock.tests.UsageStrictMockTest.differentMethods":21,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":82,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":291,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":94,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":502,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":302,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":189,"org.easymock.tests2.MockBuilderTest.testCreateMockString":216,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":332,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":116,"org.easymock.tests.UsageExpectAndThrowTest.floatType":255,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":161,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":111,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":72,"org.easymock.tests.UsageVerifyTest.twoThrows":481,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":135,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":460,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":125,"org.easymock.samples.ExampleTest.voteAgainstRemoval":495,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":427,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":269,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":184,"org.easymock.tests.LimitationsTest.privateConstructor":447,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":30,"org.easymock.tests2.UsageConstraintsTest.testNotNull":168,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":87,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":331,"org.easymock.tests2.UsageTest.defaultResetToNice":225,"org.easymock.samples.ExampleTest.voteAgainstRemovals":492,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":428,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":391,"org.easymock.tests.UsageVarargTest.differentLength":402,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":76,"org.easymock.tests2.CallbackTest.callback":91,"org.easymock.tests2.UsageConstraintsTest.equals":147,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":180,"org.easymock.tests.UsageTest.openCallCountByLastCall":454,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":143,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":310,"org.easymock.tests.UsageCallCountTest.tooFewCalls":411,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":194,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":252,"org.easymock.tests.UsageThrowableTest.throwCheckedException":328,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":529,"org.easymock.tests.MockingTest.testStrictClassMocking":352,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":197,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":380,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":32,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":81,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":296,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":196,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":74,"org.easymock.tests.ObjectMethodsTest.testHashCode":476,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":10,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":520,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":191,"org.easymock.tests2.NameTest.nameForNiceMock":42,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":515,"org.easymock.tests2.DependencyTest.testInterfaceMocking":202,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":8,"org.easymock.samples.ExampleTest.addDocument":496,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":132,"org.easymock.tests2.DelegateToTest.testStubDelegate":245,"org.easymock.tests2.AnswerTest.stubAnswer":73,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":320,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":212,"org.easymock.tests.UsageVarargTest.varargLongAccepted":404,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":322,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":425,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":394,"org.easymock.tests.UsageExpectAndReturnTest.floatType":383,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":134,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":491,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":463,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":163,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":101,"org.easymock.tests.UsageThrowableTest.noUpperLimit":325,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":144,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":136,"org.easymock.tests2.SerializationTest.test":52,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":60,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":301,"org.easymock.tests2.UsageConstraintsTest.testSame":150,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":382,"org.easymock.samples.SupportTest.addDocument":483,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":195,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":505,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":292,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":117,"org.easymock.tests.GenericTest.testPackageScope":341,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":275,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":421,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":100,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":358,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":503,"org.easymock.tests2.NameTest.nameForMock":40,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":389,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":38,"org.easymock.tests2.UsageStrictMockTest.differentMethods":14,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":181,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":22,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":19,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":474,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":282,"org.easymock.tests2.MockedExceptionTest.testRealException":90,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":374,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":430,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":142,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs_NotExisting":5,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":429,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":106,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":298,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":309,"org.easymock.tests2.NameTest.nameForStrictMock":41,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":207,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":44,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":175,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":140,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":28,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":303,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":205,"org.easymock.tests2.UsageStrictMockTest.range":13,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":509,"org.easymock.tests2.UsageConstraintsTest.lessThan":170,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":27,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_twoMatching":9,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":231,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":121,"org.easymock.tests2.CaptureTest.testCaptureRightOne":65,"org.easymock.tests2.UsageConstraintsTest.testOr":151,"org.easymock.tests.UsageRangeTest.combination":279,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":172,"org.easymock.tests.UsageTest.wrongArguments":453,"org.easymock.tests2.MockBuilderTest.testWithConstructor":35,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":118,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":333,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":385,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":418,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":390,"org.easymock.tests.UsageVarargTest.varargShortAccepted":403,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":305,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":414,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":523,"org.easymock.tests2.UsageConstraintsTest.cmpTo":156,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":71,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":513,"org.easymock.tests2.CompareToTest.testLessThan":531,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":420,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":224,"org.easymock.tests2.CaptureTest.testCaptureFromStub":66,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":288,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":206,"org.easymock.tests.UsageTest.unexpectedCallWithArray":452,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":519,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":319,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":412,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":37,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":26,"org.easymock.tests2.UsageConstraintsTest.constraints":145,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":321,"org.easymock.samples.ExampleTest.addAndChangeDocument":499,"org.easymock.tests.UsageStrictMockTest.testVerify":323,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":489,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":318,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":470,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":61,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":443,"org.easymock.tests.LimitationsTest.abstractClass":446,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":386,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":464,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":444,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":397,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":236}}]
