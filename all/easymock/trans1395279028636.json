[{"transplant":{"position":"org.easymock.internal.MockBuilder:192","sourceCode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:231","sourceCode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)","type":"CtReturnImpl"},"failures":[0,1],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:172","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:150","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[2,3,4,5,6,7,8,9],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:173","failures":[10],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.Capture:82","failures":[11,12,13,14,15,16,17,18,19,20,21,22],"status":-1,"binaryOperator":"(java.util.List<T>.size()) > 1","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:45","sourceCode":"return org.easymock.internal.matchers.CompareTo<T>.matchResult(((java.lang.Comparable)(java.lang.Object)).compareTo(java.lang.Comparable<T>))","type":"CtReturnImpl"},"failures":[23,24,25,26,27,28,29,30,31,32],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:39","sourceCode":"return java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:49","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[33],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"expected","actual":"actual","this":"this"}},{"position":"org.easymock.internal.LastControl:95","inlineConstant":"int int = 0","failures":[29,34,35,36,37,38,39,40,11,12,20],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.RecordState:274","failures":[41,42,43,44,45,46,47,48,49,50,51],"status":-1,"binaryOperator":"org.easymock.IAnswer<?> == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1162","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1939","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Integer>(org.easymock.Capture<java.lang.Integer>))","type":"CtInvocationImpl"},"failures":[52,13,17,53,18,22],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:281","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"failures":[54],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:117","sourceCode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:115","sourceCode":"java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int])","type":"CtAssignmentImpl"},"failures":[55,56],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","inlineConstant":"int int = 0","failures":[57,58,59],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:355","sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[60],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"position":"org.easymock.internal.matchers.Captures:53","failures":[61,11,52,12,13,14,15,16,17,53,18,20,21,62,22],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","sourceCode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:300","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"failures":[63],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[34],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:361","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[64,65,66,67,68,69,70,71,72,29,73,74,36,75,76,77,78,79,80],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockMethodInterceptor:130","sourceCode":"java.io.ObjectOutputStream.writeObject(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:121","sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","type":"CtInvocationImpl"},"failures":[81,82,83],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:54","failures":[84,85,81,86,87,54,88,89,90,91,3,4,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,8,9],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1149","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"method":"result"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[119,81,82,83],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[61,11,52,12,13,14,15,16,17,18,20,21,62,22],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:354","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.lang.reflect.Type = java.lang.reflect.Type;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"genericType","this":"this","bound":"genericType"}},{"transplant":{"position":"org.easymock.internal.matchers.Null:39","sourceCode":"java.lang.StringBuffer.append(\"isNull()\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:38","sourceCode":"java.lang.StringBuffer.append(java.lang.Object)","type":"CtInvocationImpl"},"failures":[120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"failures":[137],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[119,81,82,83],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:137","sourceCode":"return java.util.List<T>.toString()","type":"CtReturnImpl"},"failures":[61],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:75","sourceCode":"return java.io.Serializable.java.io.Serializable.isAssignableFrom(java.lang.Class<?>)","type":"CtReturnImpl"},"failures":[138,55,139,140,56,141],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[55,56],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[120,121,123,125,129,131],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:355","sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[60],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[120,121,123,125,129,131],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[142,143,144],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[6],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1026","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1746","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.NotNull.org.easymock.internal.matchers.NotNull)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:551","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.getControlForLastCall()","type":"CtReturnImpl"},"failures":[145,146,65,138,147,68,148,149,150,151,152,42,153,154,71,43,44,48,155,156],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[157,158,159,160,60],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"type":"leafClass"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1470","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(boolean))","type":"CtInvocationImpl"},"failures":[34,37,39],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")","type":"CtThrowImpl"},"failures":[6],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:102","sourceCode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"method":"method"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.NotNull:40","sourceCode":"java.lang.StringBuffer.append(\"notNull()\")","type":"CtInvocationImpl"},"failures":[161],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.CompareEqual:39","sourceCode":"return int == 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:83","sourceCode":"return (int) == (java.lang.Integer.int)","type":"CtReturnImpl"},"failures":[64,67,162,68,69,70,154,71,79,80],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"maximum"}},{"position":"org.easymock.EasyMock:1361","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:232","sourceCode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[142,143,144],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","threadSafe":"value"}},{"transplant":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[64,163,164,165,166,167,168,169,170,171,172,145,173,146,174,65,175,176,177,178,179,180,181,182,183,66,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,63,204,205,138,55,139,140,206,56,207,141,208,209,210,211,212,147,213,214,215,216,217,218,219,220,221,222,223,224,225,226,67,227,228,229,230,231,232,233,234,235,123,236,237,162,68,238,239,240,241,242,243,244,245,246,247,248,249,148,250,251,252,253,254,255,256,257,258,259,149,150,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,124,125,126,69,70,127,128,289,290,291,151,292,293,294,295,296,297,157,158,159,160,60,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,152,335,336,337,338,339,340,341,342,343,344,41,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,10,385,386,387,42,388,389,390,391,392,393,394,395,396,397,398,399,400,401,153,402,154,71,403,82,83,28,72,29,34,404,73,35,74,36,37,405,38,406,407,75,33,30,76,142,31,77,39,408,409,410,411,40,78,32,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,54,429,430,431,432,433,434,435,436,437,438,439,440,441,0,442,443,444,445,446,447,43,448,44,449,450,133,134,451,143,79,80,452,135,136,453,454,45,46,47,48,49,50,455,456,457,458,459,11,52,12,13,14,15,16,17,53,18,20,21,62,22,155,460,461,462,463,464,465,94,95,97,99,100,101,102,105,108,110,111,112,113,114,115,116,466,467,468,469,144,470,471,472,473,474,475,476,477,478,479,1,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,51,495,496,497,498,499,156,500],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":34,"org.easymock.tests2.UsageTest.argumentsOrdered":136,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":288,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":422,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":377,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":192,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":143,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":492,"org.easymock.tests2.DelegateToTest.testReturnException":384,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":327,"org.easymock.tests.MockClassControlTest.testToString":336,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":455,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":343,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":1,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":201,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":104,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":100,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":268,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":483,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":405,"org.easymock.tests2.UsageTest.wrongArguments":134,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":258,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":399,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":306,"org.easymock.samples.ExampleTest.answerVsDelegate":51,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":301,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":170,"org.easymock.tests2.UsageConstraintsTest.testNull":35,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":469,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":421,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":341,"org.easymock.tests2.CaptureTest.testPrimitive":13,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":260,"org.easymock.tests.UsageTest.moreThanOneArgument":124,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":287,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":468,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":247,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":172,"org.easymock.tests.UsageTest.argumentsOrdered":128,"org.easymock.tests.UsageVarargTest.varargIntAccepted":215,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":197,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":240,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":433,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":381,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":438,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":184,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":244,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":393,"org.easymock.tests.ReplayStateInvalidUsageTest.times":316,"org.easymock.tests2.DependencyTest.testClassMocking":480,"org.easymock.tests2.MockBuilderTest.testWithConstructor_Twice":6,"org.easymock.tests2.AnswerTest.answer":45,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":38,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":199,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":432,"org.easymock.tests2.CaptureTest.testAnd":11,"org.easymock.tests2.UsageTest.strictResetToDefault":450,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":475,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":89,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":246,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":416,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":176,"org.easymock.tests2.DelegateToTest.testDelegate":387,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":174,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":283,"org.easymock.tests.LimitationsTest.mockFinalMethod":325,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":330,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":182,"org.easymock.tests2.DependencyTest.testClassMockingSupport":481,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":265,"org.easymock.tests2.CaptureTest.testCapture1_2446744":14,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":472,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":281,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":430,"org.easymock.tests.UsageThrowableTest.throwError":250,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":310,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":300,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":382,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":249,"org.easymock.tests2.MockBuilderTest.testWithConstructor_WrongClass":5,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":92,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":118,"org.easymock.samples.PartialClassMockTest.testGetArea":493,"org.easymock.tests.MockingTest.testInterfaceMocking":168,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":311,"org.easymock.tests2.CompareToTest.testLessOrEqual":27,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":241,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":211,"org.easymock.tests2.UsageTest.niceToStrict":451,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":105,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":233,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":269,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":183,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_PrimitiveForObject":59,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":437,"org.easymock.tests2.MockBuilderTest.testCreateMock":441,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":113,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":396,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":129,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":277,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":417,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":334,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":290,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":304,"org.easymock.tests.UsageOverloadedMethodTest.overloading":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":109,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":30,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":347,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":225,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":362,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":33,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":18,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":216,"org.easymock.tests2.EasyMockSupportClassTest.testAll":97,"org.easymock.tests.MockClassControlTest.testEquals":340,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":159,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":130,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":285,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":431,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":180,"org.easymock.tests2.CaptureTest.testCaptureAll":52,"org.easymock.tests.MockNameTest.defaultName":261,"org.easymock.tests2.UsageConstraintsTest.testMatches":76,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":248,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":308,"org.easymock.samples.ExampleTest.voteForRemovals":498,"org.easymock.tests2.ConstraintsToStringTest.notNullToString":161,"org.easymock.tests.UsageVarargTest.allKinds":224,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":64,"org.easymock.samples.BasicClassMockTest.testPrintContent":491,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":181,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":256,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":400,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":386,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":331,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":378,"org.easymock.tests2.UsageConstraintsTest.greaterThan":31,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":98,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":175,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":478,"org.easymock.samples.ExampleTest.voteForRemoval":495,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":141,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":479,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":462,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":302,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":471,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":449,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":148,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":91,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":189,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":414,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":95,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":326,"org.easymock.tests2.CaptureTest.testCaptureFirst":22,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":383,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":188,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":415,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":454,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":350,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":358,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":464,"org.easymock.tests2.UsageTest.moreThanOneArgument":133,"org.easymock.tests2.CaptureTest.testCapture2_2446744":62,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":0,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":200,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":223,"org.easymock.tests.GenericTest.testBridgedEquals":60,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":296,"org.easymock.tests.UsageExpectAndReturnTest.longType":354,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":412,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":178,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":286,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":410,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":227,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":284,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":245,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":263,"org.easymock.tests.UsageCallCountTest.tooManyCalls":297,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":151,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":114,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":359,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":398,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":273,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":255,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":426,"org.easymock.tests.MockingTest.testNiceClassMocking":171,"org.easymock.tests.MockingTest.testClassMocking":166,"org.easymock.tests2.UsageConstraintsTest.testContains":75,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":291,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":445,"org.easymock.tests2.UsageConstraintsTest.testFind":73,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":67,"org.easymock.tests.MockTypeTest.fromEasyMockClass":299,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":44,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":234,"org.easymock.tests.UsageExpectAndReturnTest.object":361,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":473,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":397,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":420,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":218,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":231,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_WrongNumberOfArgs":137,"org.easymock.tests.UsageTest.exactCallCountByLastCall":289,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":208,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":187,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":145,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":342,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_String":122,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":85,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":213,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":367,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":346,"org.easymock.tests.MockClassControlTest.testHashCode":339,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":372,"org.easymock.tests2.EasyMockSupportTest.testVerify":424,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":107,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":173,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":41,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":333,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":429,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":447,"org.easymock.tests.UsageVarargTest.varargCharAccepted":217,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":205,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":401,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":204,"org.easymock.tests2.UsageTest.openCallCountByLastCall":79,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":423,"org.easymock.tests.DefaultClassInstantiatorTest.object":138,"org.easymock.tests2.PartialMockingTest.testPartialMock_ConstructorNotFound":57,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":332,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":108,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":275,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":253,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":391,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":371,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":476,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":338,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":274,"org.easymock.tests.CapturesMatcherTest.test":61,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":368,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":262,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":116,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":337,"org.easymock.tests2.UsageTest.resumeIfFailure":453,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":298,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":329,"org.easymock.tests2.StubTest.stubWithReturnValue":460,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":90,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":411,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":360,"org.easymock.tests2.SerializationTest.testAllMockedMethod":83,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":198,"org.easymock.samples.SupportTest.voteForRemovals":489,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":131,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":157,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":374,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":280,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":119,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":63,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":46,"org.easymock.tests.UsageExpectAndThrowTest.object":278,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":344,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":408,"org.easymock.tests2.DelegateToTest.testWrongClass":385,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":320,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":321,"org.easymock.tests.UsageStrictMockTest.range":162,"org.easymock.samples.ConstructorCalledMockTest.testTax":8,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":486,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":419,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":425,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":279,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":439,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":94,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":318,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":305,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":120,"org.easymock.tests2.CaptureTest.testCaptureNone":53,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":212,"org.easymock.tests.UsageUnorderedTest.message":147,"org.easymock.tests.UsageVerifyTest.twoReturns":164,"org.easymock.tests.UsageVarargTest.varargByteAccepted":222,"org.easymock.tests2.ThreadingTest.testThreadSafe":461,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":111,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":294,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":490,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":232,"org.easymock.tests2.CaptureTest.testCapture_2617107":12,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithString":132,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":267,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":150,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":202,"org.easymock.tests2.UsageConstraintsTest.any":406,"org.easymock.tests2.StubTest.stub":155,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":315,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":264,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":203,"org.easymock.tests.UsageExpectAndThrowTest.longType":271,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":328,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":206,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":314,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":402,"org.easymock.tests2.SerializationTest.testClass":81,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":376,"org.easymock.tests.LimitationsTest.mockNativeMethod":324,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":160,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":370,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":390,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":403,"org.easymock.tests2.NameTest.nameForMocksControl":459,"org.easymock.tests2.MockedExceptionTest.testMockedException":444,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":392,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":99,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":70,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":448,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":272,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":466,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":440,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":470,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":388,"org.easymock.tests2.CompareToTest.testCompareEqual":25,"org.easymock.tests2.CaptureTest.testCaptureLast":17,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":266,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":37,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":87,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":409,"org.easymock.tests.MockingTest.testTwoMocks":167,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":54,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":351,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":276,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":135,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":78,"org.easymock.samples.ExampleTest.removeNonExistingDocument":499,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":395,"org.easymock.tests.UsageStrictMockTest.differentMethods":68,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":312,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":373,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":139,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":463,"org.easymock.tests2.MockBuilderTest.testCreateMockString":442,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":152,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":101,"org.easymock.tests.UsageExpectAndThrowTest.floatType":270,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":142,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":96,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":48,"org.easymock.tests.UsageVerifyTest.twoThrows":163,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":345,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":110,"org.easymock.samples.ExampleTest.voteAgainstRemoval":496,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":193,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":210,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":477,"org.easymock.tests.LimitationsTest.privateConstructor":323,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":93,"org.easymock.tests2.UsageConstraintsTest.testNotNull":40,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":443,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":257,"org.easymock.tests2.UsageTest.defaultResetToNice":452,"org.easymock.samples.ExampleTest.voteAgainstRemovals":494,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":194,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":366,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":389,"org.easymock.tests.UsageVarargTest.differentLength":219,"org.easymock.tests2.CallbackTest.callback":42,"org.easymock.tests2.UsageConstraintsTest.equals":404,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":7,"org.easymock.tests.UsageTest.openCallCountByLastCall":69,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":28,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":149,"org.easymock.tests.UsageCallCountTest.tooFewCalls":292,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":427,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":307,"org.easymock.tests.UsageThrowableTest.throwCheckedException":254,"org.easymock.tests.MockingTest.testStrictClassMocking":165,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":121,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":209,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":394,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":86,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":317,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":428,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":50,"org.easymock.tests2.CompareToTest.testGreateOrEqual":26,"org.easymock.tests.ObjectMethodsTest.testHashCode":230,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":465,"org.easymock.tests2.NameTest.nameForNiceMock":458,"org.easymock.tests2.DependencyTest.testInterfaceMocking":482,"org.easymock.samples.ExampleTest.addDocument":497,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":112,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":117,"org.easymock.tests2.DelegateToTest.testStubDelegate":10,"org.easymock.tests2.AnswerTest.stubAnswer":49,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":236,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":2,"org.easymock.tests.UsageVarargTest.varargLongAccepted":221,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":238,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":191,"org.easymock.tests.UsageExpectAndReturnTest.floatType":353,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":369,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":84,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":9,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":77,"org.easymock.tests.UsageThrowableTest.noUpperLimit":251,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":348,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":380,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":72,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":484,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":15,"org.easymock.tests2.SerializationTest.test":82,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":55,"org.easymock.tests2.UsageConstraintsTest.testSame":74,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":352,"org.easymock.samples.SupportTest.addDocument":488,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":102,"org.easymock.tests.GenericTest.testPackageScope":158,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":146,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":186,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":379,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":169,"org.easymock.tests2.NameTest.nameForMock":456,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":363,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":4,"org.easymock.tests2.UsageStrictMockTest.differentMethods":71,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":474,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":355,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":282,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":228,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":177,"org.easymock.tests2.MockedExceptionTest.testRealException":446,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":303,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":487,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":196,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":153,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":195,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":259,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":319,"org.easymock.tests2.NameTest.nameForStrictMock":457,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":436,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":43,"org.easymock.tests2.PartialMockingTest.testPartialMock_InvalidParams":58,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":144,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":485,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":140,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":39,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":434,"org.easymock.tests2.UsageStrictMockTest.range":154,"org.easymock.tests2.UsageConstraintsTest.lessThan":32,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":375,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":413,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":190,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":106,"org.easymock.tests2.CaptureTest.testCaptureRightOne":20,"org.easymock.tests2.UsageConstraintsTest.testOr":36,"org.easymock.tests.UsageRangeTest.combination":65,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":467,"org.easymock.tests.UsageTest.wrongArguments":126,"org.easymock.tests2.MockBuilderTest.testWithConstructor":88,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":103,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":335,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":356,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":66,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":364,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":56,"org.easymock.tests.UsageVarargTest.varargShortAccepted":220,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":295,"org.easymock.tests2.UsageConstraintsTest.cmpTo":407,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":47,"org.easymock.tests2.CompareToTest.testLessThan":23,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":185,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":80,"org.easymock.tests2.CaptureTest.testCaptureFromStub":21,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":309,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":435,"org.easymock.tests.UsageTest.unexpectedCallWithArray":125,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":123,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":293,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":3,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":365,"org.easymock.tests2.CaptureTest.testCapture":19,"org.easymock.tests2.UsageConstraintsTest.constraints":29,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":237,"org.easymock.samples.ExampleTest.addAndChangeDocument":156,"org.easymock.tests.UsageStrictMockTest.testVerify":239,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":500,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":235,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":179,"org.easymock.tests2.CompareToTest.testGreateThan":24,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":16,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":242,"org.easymock.tests.LimitationsTest.abstractClass":322,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":357,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":243,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":349,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":418,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":214}}]
