[{"position":"org.easymock.internal.ArgumentToString:89","inlineConstant":"int int = 0","failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ReflectionUtils:106","failures":[15,16,16,17,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72],"status":-1,"binaryOperator":"java.lang.Class<?>[] == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[42],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[73],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ClassProxyFactory:157","failures":[],"status":0,"binaryOperator":"(((java.lang.StackTraceElement[].int) > 2) && (java.lang.StackTraceElement[][2].getClassName().equals(org.easymock.internal.MockInvocationHandler.org.easymock.internal.MockInvocationHandler.getName())))","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:135","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[74],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.EasyMock:1107","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.LastControl:85","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[75,76,77,78,79,80,2,3,81,82,83,84,85,73,86,87,88,89],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[90,91,92,93,94,95,96],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[0,97,98,99,100,1,2,3,101,4,5,6,7,102,103,9,104,10,84,105,106,107,108,33,40,42,109,110,111,112,113,62,68,69,71,114,11,115,116,12,13,117,118,119,120,14,88,121,122],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[123,124,125,126],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:106","failures":[15,16,16,17,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72],"status":-1,"binaryOperator":"java.lang.Class<?>[] == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.InjectionPlan:51","failures":[127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152],"status":-1,"binaryOperator":"(java.lang.String.length()) != 0","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[153,154,155,156,157],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:52","failures":[153,0,158,159,160,80,2,3,101,81,5,161,162,6,7,102,9,83,10,84,163,164,107,165,166,167,168,169,170,171,172,173,157,114,86,11,174,175,12,13,118,87,14,88,176,177,178,179,180,181],"status":-1,"binaryOperator":"(int) == (int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"failures":[73],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:124","failures":[182],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:92","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState(((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int), ((((\"\" + int) + \" matchers expected, \") + (java.util.Stack<org.easymock.IArgumentMatcher>.size())) + \" recorded.\"))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[15,183,153,184,185,186,187,188,189,190,191,127,16,16,17,17,18,19,128,192,193,194,195,75,196,197,198,76,77,199,78,200,201,79,202,203,204,205,206,207,208,209,210,211,212,213,20,21,22,214,215,0,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,97,236,237,238,239,240,74,241,158,159,242,243,23,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,24,264,265,266,267,268,269,270,271,160,272,273,274,275,276,277,278,279,280,281,80,2,3,282,26,283,101,81,4,5,161,162,6,7,102,284,285,286,287,288,289,290,291,154,292,293,82,8,103,294,9,83,104,10,84,85,295,296,297,27,28,29,298,30,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,163,329,164,105,106,107,330,331,165,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,166,363,364,365,366,367,108,368,369,370,371,167,168,372,373,374,31,375,376,377,73,32,33,378,34,35,36,37,38,379,380,39,40,41,42,381,123,382,124,383,384,385,386,387,388,389,125,390,391,392,393,394,395,396,397,398,43,399,44,400,401,402,403,404,405,45,406,407,46,408,409,109,410,411,47,412,169,413,414,415,416,417,48,418,49,419,110,420,421,111,422,113,423,424,425,129,130,131,132,133,134,135,136,137,138,139,140,56,57,426,58,427,155,428,156,429,157,62,430,64,65,66,431,68,432,433,434,435,114,436,86,11,115,116,174,175,437,12,13,117,118,119,438,87,120,14,88,89,439,440,441,442,443,444,445,446,141,142,143,144,145,146,147,148,149,150,151,152,447,448,121,449,450,451,176,177,452,126,453,454,178,179,455,456,457,458,122,459,460,461,462,463,464,465,180,181,466,467,182,468,469,72,96],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:246","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.ConstructorArgs:61","sourceCode":"throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int))","type":"CtThrowImpl"},"failures":[470],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:189","sourceCode":"return this.boolean","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:36","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"isThreadSafe":"matching"}},{"transplant":{"position":"org.easymock.internal.Results:40","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"failures":[61,70],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:206","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:214","sourceCode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[16,17,379,48,471,472,95,431,473,72,96,474],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.RecordState:117","failures":[153,290,109,169,415,417,182,469],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Captures:47","sourceCode":"this.T = T","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"potentialValue":"potentialValue"}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:164","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"this.org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[189,192,197,200,203,205,0,216,222,228,232,234,81,314,318,165,382,387,388,392,393,394,109,157,86,447,457,459,466,182,469],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:146","sourceCode":"java.io.DataOutputStream.writeByte(2)","type":"CtInvocationImpl"},"failures":[248,475,476],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"data":"data"}},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:67","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"))","type":"CtThrowImpl"},"failures":[477],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MocksBehavior:200","failures":[395],"status":-1,"binaryOperator":"(((\"\\n Mock isn\\'t supposed to be called from multiple threads. Last: \" + (java.lang.Thread)) + \" Current: \") + java.lang.Thread.(java.lang.Thread.currentThread()))","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:321","failures":[213],"status":-1,"binaryOperator":"int < (java.lang.reflect.Type[].int)","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:100","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[80,3,101,161,162,102,83,169,114,174,175,118,87],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[478,48,418,49],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.EasyMock:958","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Long>(long))","type":"CtInvocationImpl"},"failures":[462],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:262","failures":[192,193,194,195,75,196,197,198,76,77,199,78,200,201,79,202,203,204,205,206,240,260,261,262,270,160,272,273,274,275,276,279,280,2,101,162,284,285,286,287,288,289,292,165,360,361,362,410,411,47,412,114,175,446],"status":-1,"binaryOperator":"java.lang.Throwable == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[478,48,418,49],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:120","sourceCode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))","type":"CtReturnImpl"},"failures":[479,38,379,380,39,40,41,42,381,480,481,398,482,483,43,484,399,44,485,400,401,486,487,402,403,404,405,45,488,406,489,490,407,46,408,409,410,411,47,48,49,54,55,56,57,58,59,60,62,63,430,64,65,66,67,431,68,69,71,432,491,433,72,96],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:116","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"method":"candidateMethod"}},{"transplant":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"failures":[183,153,184,185,186,187,188,189,192,193,194,195,75,196,197,198,76,77,199,78,200,201,79,202,203,204,205,206,20,21,0,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,97,236,237,238,239,240,23,244,251,252,253,254,255,256,257,258,259,263,24,264,265,266,267,268,269,270,271,160,272,273,274,275,276,277,278,279,280,281,80,2,3,25,282,492,26,493,283,101,81,4,5,161,162,6,7,102,284,285,286,287,288,289,290,291,154,292,82,8,103,294,9,83,104,10,84,85,295,296,297,28,29,298,30,299,300,301,326,327,328,163,329,164,105,106,107,330,331,165,332,333,334,335,336,338,339,340,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,166,363,364,366,367,108,368,369,370,371,167,168,372,31,377,73,32,33,378,34,35,36,37,38,380,39,40,41,42,381,123,382,124,383,384,385,386,387,388,389,125,390,391,392,393,394,395,396,397,109,410,411,47,412,169,415,416,417,48,418,49,55,56,58,59,170,171,172,173,155,428,156,157,60,62,63,430,64,65,68,69,71,491,494,495,433,435,114,436,86,11,115,116,174,175,437,12,13,117,118,119,438,87,120,14,88,89,439,440,441,442,443,445,446,447,448,121,449,451,176,177,452,126,453,178,179,455,456,457,458,122,459,460,461,462,463,464,465,180,181,466,467,182,469,72],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[35,116,122],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.CompareTo:41","failures":[496],"status":-1,"binaryOperator":"(java.lang.Object instanceof java.lang.Comparable)","name":"removeConditional","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":449,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":101,"org.easymock.tests2.UsageTest.argumentsOrdered":13,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":423,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":147,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":312,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":116,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":128,"org.easymock.tests2.DelegateToTest.testReturnException":155,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":285,"org.easymock.tests.MockingTest.testPartialClassMocking":28,"org.easymock.tests.MockClassControlTest.testToString":264,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":211,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":480,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":486,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":44,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":192,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":444,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":90,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":453,"org.easymock.tests2.UsageTest.wrongArguments":11,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":277,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":140,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":253,"org.easymock.samples.ExampleTest.answerVsDelegate":153,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":26,"org.easymock.tests2.UsageConstraintsTest.testNull":176,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":300,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":34,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":113,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":269,"org.easymock.tests2.CaptureTest.testPrimitive":383,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":281,"org.easymock.tests.UsageTest.moreThanOneArgument":81,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":206,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":378,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":334,"org.easymock.tests.UsageTest.argumentsOrdered":7,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":241,"org.easymock.tests.UsageVarargTest.varargIntAccepted":364,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":317,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":355,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":60,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":94,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":494,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":151,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":65,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":304,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":359,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":134,"org.easymock.tests.ReplayStateInvalidUsageTest.times":351,"org.easymock.tests2.AnswerTest.answer":169,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":454,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":319,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":442,"org.easymock.tests2.CaptureTest.testAnd":123,"org.easymock.tests2.UsageTest.strictResetToDefault":436,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":472,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":39,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":333,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":421,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":237,"org.easymock.tests2.DelegateToTest.testDelegate":157,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":243,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":202,"org.easymock.tests.LimitationsTest.mockFinalMethod":375,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":288,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":259,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":376,"org.easymock.tests2.CaptureTest.testCapture1_2446744":384,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":479,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":201,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":440,"org.easymock.tests.UsageThrowableTest.throwError":270,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":345,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":492,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":152,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":99,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":336,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":409,"org.easymock.samples.PartialClassMockTest.testGetArea":15,"org.easymock.tests.MockingTest.testInterfaceMocking":298,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":346,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":356,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":208,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":487,"org.easymock.tests2.UsageTest.niceToStrict":115,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":193,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":342,"org.easymock.tests2.ThreadingTest.testChangeDefault":481,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":302,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":64,"org.easymock.tests2.MockBuilderTest.testCreateMock":68,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":489,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":137,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":77,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":111,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":362,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":326,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":251,"org.easymock.tests.UsageOverloadedMethodTest.overloading":331,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":407,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":405,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":457,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":292,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":227,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":330,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":475,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":456,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":389,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":365,"org.easymock.tests2.EasyMockSupportClassTest.testAll":43,"org.easymock.tests.MockClassControlTest.testEquals":268,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":21,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":204,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":50,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":441,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":257,"org.easymock.tests2.CaptureTest.testCaptureAll":382,"org.easymock.tests.MockNameTest.defaultName":215,"org.easymock.tests2.UsageConstraintsTest.testMatches":458,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":335,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":343,"org.easymock.samples.ExampleTest.voteForRemovals":187,"org.easymock.tests.UsageVarargTest.allKinds":167,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":80,"org.easymock.samples.BasicClassMockTest.testPrintContent":19,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":258,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":275,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":119,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":429,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":148,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":289,"org.easymock.tests2.UsageConstraintsTest.greaterThan":459,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":484,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":236,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":42,"org.easymock.samples.ExampleTest.voteForRemoval":184,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":250,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":394,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":381,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":493,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":495,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":37,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":114,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":23,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":431,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":309,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":420,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":160,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":482,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":284,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":427,"org.easymock.tests2.CaptureTest.testCaptureFirst":392,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":308,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":118,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":8,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":223,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":396,"org.easymock.tests2.CaptureTest.testCapture2_2446744":391,"org.easymock.tests2.UsageTest.moreThanOneArgument":86,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":69,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":320,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":371,"org.easymock.tests.GenericTest.testBridgedEquals":214,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullPrimitive":470,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":106,"org.easymock.tests.UsageExpectAndReturnTest.longType":219,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":419,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":255,"org.easymock.tests2.MockBuilderTest.testAddMethods_Final":70,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":205,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":464,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":74,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":203,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":261,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":332,"org.easymock.tests.UsageCallCountTest.tooManyCalls":107,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":328,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":490,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":224,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":139,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":196,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":274,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":55,"org.easymock.tests.MockingTest.testNiceClassMocking":301,"org.easymock.tests.MockingTest.testClassMocking":297,"org.easymock.tests2.UsageConstraintsTest.testContains":455,"org.easymock.tests2.MockBuilderTest.testAddMethod_Final":61,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":327,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":47,"org.easymock.tests2.UsageConstraintsTest.testFind":451,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":165,"org.easymock.tests.MockTypeTest.fromEasyMockClass":282,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":469,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":103,"org.easymock.tests.UsageExpectAndReturnTest.object":226,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":38,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":138,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":91,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":367,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":340,"org.easymock.tests.UsageTest.exactCallCountByLastCall":102,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":239,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":307,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":158,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":210,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":96,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":166,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":232,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":154,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":142,"org.easymock.tests.MockClassControlTest.testHashCode":267,"org.easymock.tests2.EasyMockSupportTest.testVerify":425,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":403,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":159,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":290,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":361,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":439,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":100,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":467,"org.easymock.tests.UsageVarargTest.varargCharAccepted":366,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":438,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":325,"org.easymock.tests2.UsageTest.openCallCountByLastCall":174,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":424,"org.easymock.tests.DefaultClassInstantiatorTest.object":244,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":360,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":338,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":1,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":404,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":198,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_WrongParams":53,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":272,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":132,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":141,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":40,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":266,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":197,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":233,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":46,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":265,"org.easymock.tests2.UsageTest.resumeIfFailure":117,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":25,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":491,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":287,"org.easymock.tests2.StubTest.stubWithReturnValue":446,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":95,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":465,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":225,"org.easymock.tests2.SerializationTest.testAllMockedMethod":49,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":318,"org.easymock.samples.SupportTest.voteForRemovals":191,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":213,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":144,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":200,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":478,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":324,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":413,"org.easymock.tests.UsageExpectAndThrowTest.object":199,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":212,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":462,"org.easymock.tests2.DelegateToTest.testWrongClass":156,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":168,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":372,"org.easymock.tests.UsageStrictMockTest.range":10,"org.easymock.samples.ConstructorCalledMockTest.testTax":16,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":434,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":422,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":54,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":78,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":66,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":398,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":6,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":353,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":252,"org.easymock.tests2.CaptureTest.testCaptureNone":388,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":209,"org.easymock.tests.UsageUnorderedTest.message":0,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":98,"org.easymock.tests.UsageVerifyTest.twoReturns":3,"org.easymock.tests.UsageVarargTest.varargByteAccepted":370,"org.easymock.tests2.ThreadingTest.testThreadSafe":393,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":488,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":164,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":18,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":341,"org.easymock.tests2.CaptureTest.testCapture_2617107":124,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":73,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":280,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":322,"org.easymock.tests2.UsageConstraintsTest.any":178,"org.easymock.tests2.StubTest.stub":445,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":350,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":262,"org.easymock.tests.UsageExpectAndThrowTest.longType":195,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":323,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":248,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":349,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":120,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":146,"org.easymock.tests2.SerializationTest.testClass":48,"org.easymock.tests.LimitationsTest.mockNativeMethod":31,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":22,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":235,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":131,"org.easymock.tests2.ReflectionUtilsTest.testFindMethodClassOfQStringClassOfQArray":52,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":89,"org.easymock.tests2.NameTest.nameForMocksControl":173,"org.easymock.tests2.MockedExceptionTest.testMockedException":411,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":133,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":399,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":162,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":468,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":30,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":75,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":32,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":67,"org.easymock.tests.MockingTest.testNicePartialClassMocking":29,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":36,"org.easymock.tests2.CompareToTest.testNotComparable":496,"org.easymock.tests2.CaptureTest.testCaptureLast":387,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":129,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":377,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":126,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":59,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":463,"org.easymock.tests.MockingTest.testTwoMocks":27,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":216,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":76,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":12,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":181,"org.easymock.samples.ExampleTest.removeNonExistingDocument":188,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":136,"org.easymock.tests.UsageStrictMockTest.differentMethods":84,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":347,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":143,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":246,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":395,"org.easymock.tests2.MockBuilderTest.testCreateMockString":71,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":263,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":485,"org.easymock.tests.UsageExpectAndThrowTest.floatType":194,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":122,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":483,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":415,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":474,"org.easymock.tests.UsageVerifyTest.twoThrows":2,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":291,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":45,"org.easymock.samples.ExampleTest.voteAgainstRemoval":185,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":207,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":313,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":41,"org.easymock.tests.LimitationsTest.privateConstructor":374,"org.easymock.tests2.UsageConstraintsTest.testNotNull":180,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":410,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":276,"org.easymock.tests2.UsageTest.defaultResetToNice":437,"org.easymock.samples.ExampleTest.voteAgainstRemovals":183,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":231,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":314,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":130,"org.easymock.tests.UsageVarargTest.differentLength":108,"org.easymock.tests2.CallbackTest.callback":109,"org.easymock.tests2.UsageConstraintsTest.equals":450,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":379,"org.easymock.tests.UsageTest.openCallCountByLastCall":161,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":447,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":279,"org.easymock.tests.UsageCallCountTest.tooFewCalls":163,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":57,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":254,"org.easymock.tests.UsageThrowableTest.throwCheckedException":273,"org.easymock.tests.MockingTest.testStrictClassMocking":296,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":58,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":240,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":135,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":56,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":352,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":426,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":417,"org.easymock.tests.ObjectMethodsTest.testHashCode":339,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":93,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":397,"org.easymock.tests2.NameTest.nameForNiceMock":172,"org.easymock.tests2.DependencyTest.testInterfaceMocking":443,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":92,"org.easymock.samples.ExampleTest.addDocument":186,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":406,"org.easymock.tests2.DelegateToTest.testStubDelegate":428,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":408,"org.easymock.tests2.AnswerTest.stubAnswer":416,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":83,"org.easymock.tests.UsageVarargTest.varargLongAccepted":369,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":311,"org.easymock.tests.UsageExpectAndReturnTest.floatType":218,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":234,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":72,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":17,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":460,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":150,"org.easymock.tests.UsageThrowableTest.noUpperLimit":271,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":293,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":448,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":432,"org.easymock.tests2.SerializationTest.test":418,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":385,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":476,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":245,"org.easymock.tests2.UsageConstraintsTest.testSame":177,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":217,"org.easymock.samples.SupportTest.addDocument":190,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":348,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":400,"org.easymock.tests.GenericTest.testPackageScope":20,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":242,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":306,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":149,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":299,"org.easymock.tests2.NameTest.nameForMock":170,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":228,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":473,"org.easymock.tests2.UsageStrictMockTest.differentMethods":88,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":380,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":220,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":79,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":337,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":238,"org.easymock.tests2.MockedExceptionTest.testRealException":412,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":283,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":435,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":316,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":87,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":315,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":278,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":354,"org.easymock.tests2.NameTest.nameForStrictMock":171,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":430,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":182,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":35,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":433,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":461,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":247,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":62,"org.easymock.tests2.UsageStrictMockTest.range":14,"org.easymock.tests2.UsageConstraintsTest.lessThan":466,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":145,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":110,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":402,"org.easymock.tests2.CaptureTest.testCaptureRightOne":125,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":477,"org.easymock.tests2.UsageConstraintsTest.testOr":452,"org.easymock.tests.UsageRangeTest.combination":97,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":33,"org.easymock.tests.UsageTest.wrongArguments":5,"org.easymock.tests2.MockBuilderTest.testWithConstructor":471,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":401,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":24,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":221,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":229,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":303,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":249,"org.easymock.tests.UsageVarargTest.varargShortAccepted":368,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":105,"org.easymock.tests2.UsageConstraintsTest.cmpTo":179,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":414,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":305,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":175,"org.easymock.tests2.CaptureTest.testCaptureFromStub":390,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":344,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":63,"org.easymock.tests.UsageTest.unexpectedCallWithArray":4,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":9,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":329,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":230,"org.easymock.tests2.UsageConstraintsTest.constraints":121,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":104,"org.easymock.samples.ExampleTest.addAndChangeDocument":189,"org.easymock.tests.UsageStrictMockTest.testVerify":295,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":127,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":294,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":256,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":386,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod":51,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":357,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":222,"org.easymock.tests.LimitationsTest.abstractClass":373,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":82,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":358,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":112,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":363}}]
