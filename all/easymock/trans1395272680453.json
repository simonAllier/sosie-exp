[{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"org.easymock.internal.AndroidSupport.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:27","sourceCode":"org.easymock.internal.AndroidSupport.boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:252","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:253","sourceCode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)","type":"CtAssignmentImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.RecordState.primitiveToWrapperType":"org.easymock.internal.RecordState.primitiveToWrapperType","returnedType":"returnedType"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()","type":"CtInvocationImpl"},"failures":[79,80,81,82,83,84,85,86,87,88,89,90,91,92],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1373","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:160","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:41","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))","type":"CtThrowImpl"},"failures":[93],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:879","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.BridgeMethodResolver:210","failures":[],"status":0,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:122","sourceCode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))","type":"CtReturnImpl"},"failures":[94,95,96],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:125","sourceCode":"org.easymock.internal.RecordState.requireValidDelegation(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:98","sourceCode":"org.easymock.internal.RecordState.requireAssignable(java.lang.Object)","type":"CtInvocationImpl"},"failures":[97,98,99,100,101],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"delegateTo":"value","this":"this"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:71","sourceCode":"final java.io.IOException java.io.IOException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:90","sourceCode":"return java.lang.Class<?>.getConstructor(new java.lang.Class[0])","type":"CtReturnImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.LessThan:39","failures":[102,103],"status":-1,"binaryOperator":"int < 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:63","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:61","sourceCode":"if (java.util.Stack<org.easymock.IArgumentMatcher> == null) {\n    java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>();\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<java.util.Stack<org.easymock.IArgumentMatcher>>.set(java.util.Stack<org.easymock.IArgumentMatcher>);\n} ","type":"CtIfImpl"},"failures":[104,105,106,107,11,108,109,110,111,112,113,29,32,33,34,35,36,37,38,58,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,102,141,142,62,69,143,80,81,82,83,84,85,86,87,144,88,89,90,91,92],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[145,146,147,148],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[149,150,151,113,152,153],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:47","sourceCode":"org.easymock.internal.DefaultClassInstantiator org.easymock.internal.DefaultClassInstantiator = new org.easymock.internal.DefaultClassInstantiator()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:113","sourceCode":"if (java.lang.Class<?>[][int].isPrimitive()) {\n    java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n} else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[154],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.RecordState:163","failures":[155,156],"status":-1,"binaryOperator":"(org.easymock.internal.Result) != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.EasyMock:1483","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Any:40","sourceCode":"java.lang.StringBuffer.append(\"<any>\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Not:41","sourceCode":"org.easymock.IArgumentMatcher.appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[157],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[158,159],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:67","inlineConstant":"int int = 0","failures":[145,146,147,148],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.Capture:124","sourceCode":"throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[160,161,63],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.ConstructorArgs:50","failures":[162,163,164,165,166,167,168,169,170,171,146,64,172,173,174,175,65,176,177,66,178,179,180,181,182,183,184,185,186,67,187,188,189,190,191,68,192,193,74,78,194],"status":-1,"binaryOperator":"(java.lang.Object[].int) != (java.lang.Class<?>[].int)","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","sourceCode":"java.lang.reflect.Type java.lang.reflect.Type = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:194","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[195,196],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[131],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[61],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.ObjectMethodsFilter:44","failures":[0,1,2,3,197,198,199,149,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,104,249,250,251,252,253,254,255,256,257,258,259,105,106,260,261,262,4,5,263,6,264,265,266,7,8,9,10,267,268,269,270,271,272,273,97,274,275,276,277,278,107,11,108,109,110,111,279,280,281,12,13,14,15,16,17,282,283,18,19,284,20,21,22,285,23,24,25,26,27,286,287,288,289,290,291,292,293,294,295,296,297,298,195,98,299,99,196,300,301,302,303,112,304,305,306,28,307,308,309,310,311,312,313,314,315,316,317,318,319,320,158,321,322,323,159,324,325,326,327,328,329,330,331,332,333,334,160,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,113,29,360,30,31,361,362,32,33,100,363,101,364,365,366,367,93,368,369,370,371,372,373,374,375,376,34,35,36,37,38,377,39,378,40,379,41,42,380,43,381,382,162,162,163,163,383,384,385,44,386,387,388,389,390,391,392,393,394,395,396,397,398,45,399,46,400,47,167,401,50,51,52,53,54,55,56,57,402,58,403,404,405,59,60,61,406,114,115,116,117,407,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,102,408,409,410,411,155,156,412,413,414,415,416,417,418,419,141,420,142,421,422,423,62,424,425,426,427,428,429,430,431,432,433,434,435,436,437,161,438,63,439,440,154,146,147,148,64,172,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,173,65,177,66,179,180,183,184,185,186,67,188,191,68,192,193,456,457,458,459,460,461,462,463,464,465,466,467,468,469,69,470,70,71,471,472,473,143,74,75,76,77,80,81,82,83,84,85,86,87,144,88,89,90,91,92],"status":-1,"binaryOperator":"(java.lang.String != null)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:275","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[474],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","sourceCode":"assert java.lang.String != null : \"Method name must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1815","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EndsWith(java.lang.String))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"name":"suffix"}},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[158,159],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:140","sourceCode":"java.io.DataOutputStream.writeUTF(java.lang.Class<?>.getName())","type":"CtInvocationImpl"},"failures":[323,475,476],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"data":"data"}},{"transplantationPoint":{"position":"org.easymock.internal.ReplayState:48","sourceCode":"java.util.concurrent.locks.ReentrantLock.unlock()","type":"CtInvocationImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.Results:56","sourceCode":"if (int > int) {\n    return true;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessThan:39","sourceCode":"return int < 0","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"currentPosition":"result","callCount":"result"}},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[477,210,249,260,261,262,4,5,6,266,195,98,299,99,196,305,306,28,307,320,158,321,322,323,159,324,369,370,371,372,373,374,375,376,39,162,163,383,384,478,164,45,479,165,399,46,400,47,166,48,167,401,49,169,480,52,53,55,56,57,402,58,403,404,405,59,60,61,406,481,416,417,418,146,148,64,172,482,452,453,173,174,65,177,66,178,179,180,182,183,184,185,67,187,188,189,190,191,68,72,73,74,75,77,78],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:89","failures":[198,149,200,203,204,205,483,484,244,256,257,258,7,107,280,281,358,113,360,30,31,485,486,386,389,390,391,395,396,397,398,45,401,49,480,53,59,61,116,131,425,442,445,487,447,468,470,70,71],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:255","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:324","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    if (java.lang.reflect.Type == null) {\n        java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n    } \n    if (java.lang.reflect.Type != null) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"typeVariableMap":"typeVariableMap","genericType":"actualTypeArgument","this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:274","sourceCode":"if (org.easymock.IAnswer<?> == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:166","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createAnswerResult(org.easymock.IAnswer<?>))","type":"CtInvocationImpl"},"failures":[155,156],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"answer":"answer"}},{"transplantationPoint":{"position":"org.easymock.internal.AndroidSupport:25","sourceCode":"try {\n    java.lang.Class.java.lang.Class.forName(\"dalvik.system.PathClassLoader\");\n    org.easymock.internal.AndroidSupport.boolean = true;\n} catch (final java.lang.ClassNotFoundException java.lang.ClassNotFoundException) {\n    org.easymock.internal.AndroidSupport.boolean = false;\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"position":"org.easymock.ConstructorArgs:54","failures":[162,163,164,165,166,167,168,169,170,171,146,64,172,173,174,175,65,176,177,66,178,179,180,181,182,183,184,185,186,67,187,188,189,190,191,68,192,193,74,78,194],"status":-1,"binaryOperator":"int < (java.lang.Object[].int)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.EasyMock:1483","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","failures":[320,158,321,322,159,324],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":117,"org.easymock.tests2.UsageTest.argumentsOrdered":396,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":198,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":448,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":432,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":160,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":391,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":378,"org.easymock.tests2.DelegateToTest.testReturnException":438,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":301,"org.easymock.tests.MockingTest.testPartialClassMocking":4,"org.easymock.tests.MockClassControlTest.testToString":371,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":451,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":207,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":481,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":343,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":181,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":66,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":218,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":51,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":123,"org.easymock.tests2.UsageTest.wrongArguments":389,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":11,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":467,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":350,"org.easymock.samples.ExampleTest.answerVsDelegate":379,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":210,"org.easymock.tests2.UsageConstraintsTest.testNull":119,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":265,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":55,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":447,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":376,"org.easymock.tests2.CaptureTest.testPrimitive":83,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":111,"org.easymock.tests.UsageTest.moreThanOneArgument":199,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":237,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":54,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":2,"org.easymock.tests.UsageTest.argumentsOrdered":204,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":365,"org.easymock.tests.UsageVarargTest.varargIntAccepted":240,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":339,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":34,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":478,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":436,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":400,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":327,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":38,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":461,"org.easymock.tests.ReplayStateInvalidUsageTest.times":316,"org.easymock.tests2.AnswerTest.answer":408,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":124,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":341,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":415,"org.easymock.tests2.CaptureTest.testAnd":80,"org.easymock.tests2.UsageTest.strictResetToDefault":387,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":405,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":165,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":1,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":444,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":9,"org.easymock.tests2.DelegateToTest.testDelegate":154,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":368,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":233,"org.easymock.tests.LimitationsTest.mockFinalMethod":307,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":112,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":298,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":276,"org.easymock.tests2.CaptureTest.testCapture1_2446744":84,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":94,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":231,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":413,"org.easymock.tests.UsageThrowableTest.throwError":286,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":310,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":486,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":437,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":197,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs":170,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":193,"org.easymock.samples.PartialClassMockTest.testGetArea":39,"org.easymock.tests.MockingTest.testInterfaceMocking":263,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":311,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":35,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":363,"org.easymock.tests2.UsageTest.niceToStrict":390,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":182,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":219,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":357,"org.easymock.tests2.ThreadingTest.testChangeDefault":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":325,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":46,"org.easymock.tests2.MockBuilderTest.testCreateMock":401,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":189,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":464,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":152,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":227,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":445,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":217,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":250,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":348,"org.easymock.tests.UsageOverloadedMethodTest.overloading":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":186,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":129,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":270,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":97,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":20,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":475,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":128,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":88,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":241,"org.easymock.tests2.EasyMockSupportClassTest.testAll":65,"org.easymock.tests.MockClassControlTest.testEquals":375,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":299,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":235,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":414,"org.easymock.tests2.CaptureTest.testCaptureAll":81,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":296,"org.easymock.tests.MockNameTest.defaultName":259,"org.easymock.tests2.UsageConstraintsTest.testMatches":130,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":3,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":308,"org.easymock.samples.ExampleTest.voteForRemovals":43,"org.easymock.tests.UsageVarargTest.allKinds":104,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":279,"org.easymock.samples.BasicClassMockTest.testPrintContent":384,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":297,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":292,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":468,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":440,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":433,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":304,"org.easymock.tests2.UsageConstraintsTest.greaterThan":132,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":176,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":8,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":61,"org.easymock.samples.ExampleTest.voteForRemoval":41,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":324,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":422,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":406,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":402,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":386,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":249,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":167,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":332,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":443,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":288,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":174,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":300,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":161,"org.easymock.tests2.CaptureTest.testCaptureFirst":92,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":331,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":398,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":273,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":283,"org.easymock.tests2.UsageTest.moreThanOneArgument":388,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":62,"org.easymock.tests2.CaptureTest.testCapture2_2446744":91,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":49,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":342,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":248,"org.easymock.tests.GenericTest.testBridgedEquals":196,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":257,"org.easymock.tests.UsageExpectAndReturnTest.longType":15,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":441,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":294,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":236,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":137,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":364,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":234,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":0,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":213,"org.easymock.tests.UsageCallCountTest.tooManyCalls":258,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":252,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":190,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":18,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":466,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":223,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":291,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":73,"org.easymock.tests.MockingTest.testNiceClassMocking":266,"org.easymock.tests.MockingTest.testClassMocking":261,"org.easymock.tests2.UsageConstraintsTest.testContains":127,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":251,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":418,"org.easymock.tests2.UsageConstraintsTest.testFind":118,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":275,"org.easymock.tests.MockTypeTest.fromEasyMockClass":209,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":142,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":358,"org.easymock.tests.UsageExpectAndReturnTest.object":284,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":58,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":465,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":243,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":355,"org.easymock.tests.UsageTest.exactCallCountByLastCall":205,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":105,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":330,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":206,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":366,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":172,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":24,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":238,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":269,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":427,"org.easymock.tests.MockClassControlTest.testHashCode":374,"org.easymock.tests2.EasyMockSupportTest.testVerify":450,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":184,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":367,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":216,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":267,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString_null":483,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":412,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":143,"org.easymock.tests.UsageVarargTest.varargCharAccepted":242,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":469,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":347,"org.easymock.tests2.UsageTest.openCallCountByLastCall":392,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":449,"org.easymock.tests.DefaultClassInstantiatorTest.object":320,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":215,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":353,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":484,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":185,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":225,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":289,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":459,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":426,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":59,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":373,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":224,"org.easymock.tests.CapturesMatcherTest.test":79,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":25,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":68,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":372,"org.easymock.tests2.UsageTest.resumeIfFailure":397,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":477,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":303,"org.easymock.tests2.StubTest.stubWithReturnValue":473,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":166,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":138,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":19,"org.easymock.tests2.SerializationTest.testAllMockedMethod":148,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":340,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":153,"org.easymock.samples.SupportTest.voteForRemovals":44,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":195,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":429,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":230,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":145,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":346,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":409,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":208,"org.easymock.tests.UsageExpectAndThrowTest.object":228,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":135,"org.easymock.tests2.DelegateToTest.testWrongClass":439,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":32,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":33,"org.easymock.samples.ConstructorCalledMockTest.testTax":162,"org.easymock.tests.UsageStrictMockTest.range":30,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":454,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":446,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":72,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":229,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":47,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":173,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":203,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":318,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":349,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":150,"org.easymock.tests2.CaptureTest.testCaptureNone":144,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":101,"org.easymock.tests.UsageUnorderedTest.message":107,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfNoToStringMethod":485,"org.easymock.tests.UsageVerifyTest.twoReturns":281,"org.easymock.tests.UsageVarargTest.varargByteAccepted":247,"org.easymock.tests2.ThreadingTest.testThreadSafe":421,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":187,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":255,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":356,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":383,"org.easymock.tests2.CaptureTest.testCapture_2617107":82,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":278,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":110,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":344,"org.easymock.tests2.UsageConstraintsTest.any":125,"org.easymock.tests2.StubTest.stub":472,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":315,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":214,"org.easymock.tests.UsageExpectAndThrowTest.longType":221,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":302,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":345,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":323,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":314,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":470,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":431,"org.easymock.tests2.SerializationTest.testClass":146,"org.easymock.tests.LimitationsTest.mockNativeMethod":28,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":99,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":27,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":458,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":471,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":460,"org.easymock.tests2.MockedExceptionTest.testMockedException":417,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":177,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":202,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":420,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":6,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":222,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":52,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":48,"org.easymock.tests.MockingTest.testNicePartialClassMocking":5,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":57,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":456,"org.easymock.tests2.CaptureTest.testCaptureLast":87,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":277,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":122,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":78,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":136,"org.easymock.tests.MockingTest.testTwoMocks":262,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":194,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":12,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":226,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":395,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":140,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":95,"org.easymock.samples.ExampleTest.removeNonExistingDocument":381,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":463,"org.easymock.tests.UsageStrictMockTest.differentMethods":31,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":312,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":428,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":321,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":423,"org.easymock.tests2.MockBuilderTest.testCreateMockString":480,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":369,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":178,"org.easymock.tests.UsageExpectAndThrowTest.floatType":220,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":131,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":175,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":411,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":482,"org.easymock.tests.UsageVerifyTest.twoThrows":280,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":268,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":67,"org.easymock.samples.ExampleTest.voteAgainstRemoval":42,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":100,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":335,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":60,"org.easymock.tests.LimitationsTest.privateConstructor":306,"org.easymock.tests2.ConstructorArgsTest.testConstructorArgs_NullObject":171,"org.easymock.tests2.UsageConstraintsTest.testNotNull":139,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":416,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":293,"org.easymock.tests2.UsageTest.defaultResetToNice":394,"org.easymock.samples.ExampleTest.voteAgainstRemovals":40,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":23,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":336,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":457,"org.easymock.tests.UsageVarargTest.differentLength":244,"org.easymock.tests2.CallbackTest.callback":425,"org.easymock.tests2.UsageConstraintsTest.equals":407,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":403,"org.easymock.tests.UsageTest.openCallCountByLastCall":201,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":114,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":109,"org.easymock.tests.UsageCallCountTest.tooFewCalls":253,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":75,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":351,"org.easymock.tests.UsageThrowableTest.throwCheckedException":290,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":151,"org.easymock.tests.MockingTest.testStrictClassMocking":260,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":106,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":77,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":462,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":74,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":317,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":76,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":156,"org.easymock.tests.ObjectMethodsTest.testHashCode":354,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":424,"org.easymock.tests2.DependencyTest.testInterfaceMocking":50,"org.easymock.samples.ExampleTest.addDocument":380,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":188,"org.easymock.tests2.DelegateToTest.testStubDelegate":63,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":192,"org.easymock.tests2.AnswerTest.stubAnswer":155,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":29,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":474,"org.easymock.tests.UsageVarargTest.varargLongAccepted":246,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":361,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":334,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":26,"org.easymock.tests.UsageExpectAndReturnTest.floatType":14,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":64,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":163,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":435,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":133,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":271,"org.easymock.tests.UsageThrowableTest.noUpperLimit":287,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":115,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":452,"org.easymock.tests2.SerializationTest.test":147,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":85,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":476,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":158,"org.easymock.tests2.UsageConstraintsTest.testSame":120,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":13,"org.easymock.samples.SupportTest.addDocument":385,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":179,"org.easymock.tests.GenericTest.testPackageScope":98,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":93,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":329,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":434,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":264,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":21,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":169,"org.easymock.tests2.UsageStrictMockTest.differentMethods":71,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":404,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":16,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":232,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":352,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":10,"org.easymock.tests2.MockedExceptionTest.testRealException":419,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":211,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":455,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":338,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":69,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":337,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":108,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":319,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":399,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":141,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":56,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":453,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":134,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":322,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":45,"org.easymock.tests2.UsageStrictMockTest.range":70,"org.easymock.tests2.UsageConstraintsTest.lessThan":102,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":430,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":442,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":183,"org.easymock.tests2.CaptureTest.testCaptureRightOne":89,"org.easymock.tests2.UsageConstraintsTest.testOr":121,"org.easymock.tests.UsageRangeTest.combination":7,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":53,"org.easymock.tests.UsageTest.wrongArguments":200,"org.easymock.tests2.MockBuilderTest.testWithConstructor":164,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":180,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":370,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":17,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":22,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":326,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":159,"org.easymock.tests.UsageVarargTest.varargShortAccepted":245,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":256,"org.easymock.tests2.UsageConstraintsTest.cmpTo":126,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":410,"org.easymock.tests2.CompareToTest.testLessThan":103,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":328,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":393,"org.easymock.tests2.CaptureTest.testCaptureFromStub":90,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":309,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":479,"org.easymock.tests.UsageTest.unexpectedCallWithArray":149,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":113,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":254,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":168,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":285,"org.easymock.tests2.UsageConstraintsTest.constraints":116,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":360,"org.easymock.samples.ExampleTest.addAndChangeDocument":382,"org.easymock.tests2.ConstraintsToStringTest.notToString":157,"org.easymock.tests.UsageStrictMockTest.testVerify":362,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":377,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":359,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":295,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":86,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":36,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":282,"org.easymock.tests.LimitationsTest.abstractClass":305,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":37,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":272,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":487,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":239}}]
