[{"transplant":{"position":"org.easymock.EasyMock:1276","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:380","sourceCode":"new org.easymock.internal.Range(1)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:390","sourceCode":"new org.easymock.internal.Range(0 , java.lang.Integer.int)","type":"CtNewClassImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:96","sourceCode":"return java.lang.Class<?>.getConstructors()[0]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:89","sourceCode":"try {\n    return java.lang.Class<?>.getConstructor(new java.lang.Class[0]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    if ((java.lang.Class<?>.getConstructors().int) == 0) {\n        throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n    } \n    return java.lang.Class<?>.getConstructors()[0];\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"clazz"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[181,182,183,184,185],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.EasyMock:1221","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:79","sourceCode":"return org.easymock.internal.MocksControl.createMock(null, java.lang.Class<T>, ((java.lang.reflect.Method[])(null)))","type":"CtReturnImpl"},"failures":[186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,8,204,9,205,10,11,12,13,14,15,206,207,208,209,210,16,211,212,213,214,17,215,216,217,218,219,20,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,21,237,22,238,239,240,241,242,243,244,245,23,24,25,26,246,247,27,28,248,249,29,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,30,273,274,275,276,277,278,279,280,281,282,283,284,31,285,32,33,286,287,34,35,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,317,66,318,67,68,319,320,69,321,322,323,324,325,326,327,328,329,330,331,332,333,70,71,72,73,334,74,75,335,76,336,337,338,339,77,340,341,84,85,86,87,88,342,343,344,345,346,89,347,90,348,349,350,351,182,183,352,93,353,354,355,94,95,96,97,98,356,99,357,100,101,102,358,359,103,104,105,106,107,108,109,110,360,111,361,362,112,114,363,184,115,116,117,119,120,122,124,125,126,364,365,366,127,367,128,129,368,369,370,371,372,373,130,131,132,133,134,135,136,137,138,139,374,140,141,142,143,144,145,146,147,148,149,150,151,375,152,153,154,155,156,376,377,378,185,158,379,380,381,159,382,162,383,166,167,384,385,170,386,387,388,171,172,389,173,174,390,391,175,176,177,178,392,179,180],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1863","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:196","sourceCode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)","type":"CtReturnImpl"},"failures":[79,90,112],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:182","sourceCode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[181,206,334,184,376,378,379],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","sourceCode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:118","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"result"}},{"position":"org.easymock.EasyMock:1832","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:107","sourceCode":"java.io.ObjectInputStream.defaultReadObject()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:210","sourceCode":"try {\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[161,162,383],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stream":"stream"}},{"transplant":{"position":"org.easymock.internal.matchers.Same:42","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:49","sourceCode":"java.lang.StringBuffer.append((((org.easymock.internal.matchers.CompareTo<T>.(getName()) + \"(\") + (java.lang.Comparable<T>)) + \")\"))","type":"CtInvocationImpl"},"failures":[393,394,395,396,397],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:248","sourceCode":"org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean)","type":"CtInvocationImpl"},"failures":[85,86],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Compare:53","sourceCode":"return false","type":"CtReturnImpl"},"failures":[146],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:69","sourceCode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:166","sourceCode":"throw new java.lang.NoSuchMethodException((\"Couldn\\'t find constructor for class \" + (java.lang.Class<T>.getName())))","type":"CtThrowImpl"},"failures":[398,399,400],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:96","sourceCode":"return java.lang.Class<?>.getConstructors()[0]","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:89","sourceCode":"try {\n    return java.lang.Class<?>.getConstructor(new java.lang.Class[0]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    if ((java.lang.Class<?>.getConstructors().int) == 0) {\n        throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n    } \n    return java.lang.Class<?>.getConstructors()[0];\n}","type":"CtTryImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"clazz":"clazz"}},{"transplant":{"position":"org.easymock.internal.InjectionTarget:56","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionTarget:58","sourceCode":"try {\n    java.lang.reflect.Field.set(java.lang.Object, org.easymock.internal.Injection.getMock());\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n}","type":"CtTryImpl"},"failures":[338,401,402,403,404,405,406,407,408,409,410,411],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[394,147],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:52","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method","type":"CtAssignmentImpl"},"failures":[186,187,188,190,191,192,193,194,195,196,197,412,413,198,199,200,201,202,8,204,9,205,10,11,12,13,14,15,206,207,208,209,210,16,211,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,21,239,240,241,242,243,244,245,23,24,25,26,246,247,27,28,248,249,29,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,30,282,283,284,31,285,32,33,286,287,34,35,289,292,293,294,296,297,298,299,312,313,314,315,316,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,317,66,318,67,68,319,320,69,321,329,330,331,332,333,70,71,72,73,334,74,75,335,76,337,338,339,77,401,84,85,86,87,88,342,343,344,345,182,183,352,93,353,414,415,416,94,95,96,97,98,356,99,357,100,101,102,358,359,103,104,105,107,184,115,116,117,118,119,120,121,122,123,124,125,126,364,365,366,127,367,128,129,368,130,131,132,133,134,135,136,137,138,139,374,140,141,142,143,144,145,146,147,148,149,150,151,375,152,153,154,155,156,157,417,376,377,378,185,158,379,380,381,159,382,160,418,162,167,384,385,170,386,387,388,171,172,389,173,174,390,391,175,176,177,178,392,179,180],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[135,374,149,153],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"stack":"stack"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[357],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"this.org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:211","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.replay();\n    org.easymock.internal.IMocksControlState = new org.easymock.internal.ReplayState(org.easymock.internal.IMocksBehavior);\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[189,194,199,200,201,202,8,204,9,10,11,12,13,14,15,206,207,208,209,16,211,17,18,19,20,220,221,222,223,224,225,21,239,240,241,242,243,244,25,26,246,247,27,28,248,249,29,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,274,282,284,31,285,32,33,286,287,34,35,289,290,291,294,300,301,302,303,304,305,306,307,308,309,310,311,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,317,66,67,68,69,321,322,323,324,325,326,327,328,329,330,331,332,333,70,71,72,73,334,75,336,419,419,420,420,78,421,80,422,81,82,423,83,424,84,85,86,87,88,342,343,344,345,89,90,91,92,93,94,95,96,97,98,356,99,100,101,102,358,359,103,104,105,106,107,108,109,110,425,111,362,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,364,365,127,367,128,129,368,373,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,376,158,379,380,381,159,382,160,161,162,163,164,165,166,167,168,169,385,170,386,388,171,173,174,177,178,392,179],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:36","sourceCode":"return boolean","type":"CtReturnImpl"},"failures":[239,32,317,66,426,128],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:325","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:370","sourceCode":"org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[427,57,58,59,103],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:174","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[170],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[12,13,317],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:284","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:275","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[181,206,334,182,183,184,376,378,185,379],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.LastControl:71","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocation:58","sourceCode":"return java.util.List<org.easymock.IArgumentMatcher>","type":"CtReturnImpl"},"failures":[8,204,224,236,239,284,31,34,35,60,61,62,63,64,67,68,319,320,69,87,182,183,111,127,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,375,152,153,154,155,171,172,389,173,174,390,391,175,176,177,178,392,179,180],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:55","sourceCode":"java.util.List<org.easymock.internal.Injection>.add(org.easymock.internal.Injection)","type":"CtInvocationImpl"},"failures":[338,401,402,417,407,418],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"failures":[140],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:48","sourceCode":"org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getDeclaredMethod(java.lang.Object.java.lang.Object, \"toString\", ((java.lang.Class[])(null)))","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:314","sourceCode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} ","type":"CtIfImpl"},"failures":[204,10,14,15,209,220,221,222,223,224,225,25,28,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,319,320,72,93,96,101,380,381,159,382],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:169","sourceCode":"org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[])","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:168","sourceCode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} ","type":"CtIfImpl"},"failures":[203,212,213,214,218,219,428,20,429,21,237,238,274,275,276,277,278,279,281,321,322,323,324,325,326,327,328,340,341,346,89,347,430,348,431,349,432,350,351,105,106,108,109,110,111,361,362,114,363,433,369,370,381,159,383,163,166],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"interceptor":"interceptor","mockedMethods":"mockedMethods"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:945","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<java.lang.Integer>(int))","type":"CtInvocationImpl"},"failures":[130,147,150],"status":-1,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":133,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":25,"org.easymock.tests2.UsageTest.argumentsOrdered":359,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":125,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":418,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":357,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":401,"org.easymock.tests2.DelegateToTest.testReturnException":385,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":221,"org.easymock.tests.MockingTest.testPartialClassMocking":17,"org.easymock.tests.MockClassControlTest.testToString":323,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":30,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":433,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":90,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":253,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":95,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":139,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":67,"org.easymock.tests2.UsageTest.wrongArguments":356,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":406,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":201,"org.easymock.samples.ExampleTest.answerVsDelegate":334,"org.easymock.tests2.UsageConstraintsTest.testNull":135,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":217,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":108,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":124,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":328,"org.easymock.tests2.CaptureTest.testPrimitive":173,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":69,"org.easymock.tests.UsageTest.moreThanOneArgument":26,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":272,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":107,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":331,"org.easymock.tests.UsageTest.argumentsOrdered":249,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":312,"org.easymock.tests.UsageVarargTest.varargIntAccepted":228,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":60,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":421,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":400,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":422,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":64,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithChar":2,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":157,"org.easymock.tests.ReplayStateInvalidUsageTest.times":308,"org.easymock.tests2.DependencyTest.testClassMocking":354,"org.easymock.tests2.AnswerTest.answer":376,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":374,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":427,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":345,"org.easymock.tests2.CaptureTest.testAnd":171,"org.easymock.tests2.UsageTest.strictResetToDefault":97,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":362,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":330,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":119,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":58,"org.easymock.tests2.DelegateToTest.testDelegate":388,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":316,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":268,"org.easymock.tests.LimitationsTest.mockFinalMethod":429,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":224,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":244,"org.easymock.tests2.DependencyTest.testClassMockingSupport":355,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":293,"org.easymock.tests2.CaptureTest.testCapture1_2446744":174,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":360,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":266,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":343,"org.easymock.tests.UsageThrowableTest.throwError":9,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":302,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":412,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":411,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":333,"org.easymock.samples.PartialClassMockTest.testGetArea":78,"org.easymock.tests.MockingTest.testInterfaceMocking":215,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":303,"org.easymock.tests2.CompareToTest.testLessOrEqual":397,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":61,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":23,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":431,"org.easymock.tests2.UsageTest.niceToStrict":99,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":254,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":80,"org.easymock.tests2.MockBuilderTest.testCreateMock":423,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":405,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":262,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":120,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":252,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":188,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":199,"org.easymock.tests.UsageOverloadedMethodTest.overloading":71,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":351,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":144,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":209,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":47,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":70,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":143,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":177,"org.easymock.tests2.EasyMockSupportClassTest.testAll":89,"org.easymock.tests.MockClassControlTest.testEquals":327,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":237,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":270,"org.easymock.tests2.CaptureTest.testCaptureAll":172,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":242,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":344,"org.easymock.tests.MockNameTest.defaultName":299,"org.easymock.tests2.UsageConstraintsTest.testMatches":145,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":300,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":332,"org.easymock.samples.ExampleTest.voteForRemovals":76,"org.easymock.tests.UsageVarargTest.allKinds":236,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":65,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":243,"org.easymock.samples.BasicClassMockTest.testPrintContent":341,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":14,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":365,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":387,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":225,"org.easymock.tests2.UsageConstraintsTest.greaterThan":147,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":280,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":57,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":114,"org.easymock.samples.ExampleTest.voteForRemoval":74,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":281,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":85,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":363,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":413,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":425,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":96,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":203,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":117,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":10,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":220,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":384,"org.easymock.tests2.CaptureTest.testCaptureFirst":180,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":118,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":104,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":211,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":43,"org.easymock.tests2.CaptureTest.testCapture2_2446744":179,"org.easymock.tests2.UsageTest.moreThanOneArgument":98,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":87,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":83,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":235,"org.easymock.tests.GenericTest.testBridgedEquals":238,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":195,"org.easymock.tests.UsageExpectAndReturnTest.longType":39,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":115,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":240,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":271,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":318,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":375,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":269,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":297,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":329,"org.easymock.tests.UsageCallCountTest.tooManyCalls":196,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Character":0,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":190,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":44,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":258,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":13,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":164,"org.easymock.tests.MockingTest.testNiceClassMocking":218,"org.easymock.tests.MockingTest.testClassMocking":213,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":189,"org.easymock.tests2.UsageConstraintsTest.testContains":142,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":159,"org.easymock.tests2.UsageConstraintsTest.testFind":134,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":72,"org.easymock.tests.MockTypeTest.fromEasyMockClass":197,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":183,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":282,"org.easymock.tests.UsageExpectAndReturnTest.object":46,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":111,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":123,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":230,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":291,"org.easymock.tests.UsageTest.exactCallCountByLastCall":29,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":8,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":313,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":52,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":226,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":208,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":408,"org.easymock.tests.MockClassControlTest.testHashCode":326,"org.easymock.tests2.EasyMockSupportTest.testVerify":364,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":1,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":314,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":206,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":251,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":342,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":373,"org.easymock.tests.UsageVarargTest.varargCharAccepted":229,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":273,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":366,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":7,"org.easymock.tests2.UsageTest.openCallCountByLastCall":100,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":126,"org.easymock.tests.DefaultClassInstantiatorTest.object":274,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":250,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":289,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":260,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":349,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":11,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":407,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":112,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":325,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":259,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":53,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":296,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":92,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":324,"org.easymock.tests2.UsageTest.resumeIfFailure":103,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":223,"org.easymock.tests2.StubTest.stubWithReturnValue":93,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":152,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":45,"org.easymock.tests2.SerializationTest.testAllMockedMethod":383,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":186,"org.easymock.samples.SupportTest.voteForRemovals":77,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":265,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":187,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":377,"org.easymock.tests.UsageExpectAndThrowTest.object":263,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":150,"org.easymock.tests2.DelegateToTest.testWrongClass":386,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":34,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":35,"org.easymock.samples.ConstructorCalledMockTest.testTax":419,"org.easymock.tests.UsageStrictMockTest.range":32,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":371,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":122,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":163,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":264,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":81,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":248,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":310,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":346,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":200,"org.easymock.tests2.CaptureTest.testCaptureNone":176,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":24,"org.easymock.tests.UsageUnorderedTest.message":239,"org.easymock.tests.UsageVerifyTest.twoReturns":66,"org.easymock.tests.UsageVarargTest.varargByteAccepted":234,"org.easymock.tests2.ThreadingTest.testThreadSafe":84,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":432,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":193,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":292,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":340,"org.easymock.tests2.CaptureTest.testCapture_2617107":389,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":295,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":5,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":320,"org.easymock.tests2.UsageConstraintsTest.any":140,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":307,"org.easymock.tests2.StubTest.stub":352,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":298,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":6,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":222,"org.easymock.tests.UsageExpectAndThrowTest.longType":256,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":278,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":306,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":367,"org.easymock.tests2.SerializationTest.testClass":161,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":160,"org.easymock.tests.LimitationsTest.mockNativeMethod":20,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":22,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":55,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":404,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":368,"org.easymock.tests2.NameTest.nameForMocksControl":416,"org.easymock.tests2.MockedExceptionTest.testMockedException":381,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":347,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":28,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":19,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":257,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":105,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":82,"org.easymock.tests.MockingTest.testNicePartialClassMocking":18,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":110,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":402,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_WrongParams":398,"org.easymock.tests2.CompareToTest.testCompareEqual":395,"org.easymock.tests2.CaptureTest.testCaptureLast":175,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":294,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":169,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":138,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":151,"org.easymock.tests.MockingTest.testTwoMocks":214,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":36,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":261,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":358,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":154,"org.easymock.samples.ExampleTest.removeNonExistingDocument":336,"org.easymock.tests.UsageStrictMockTest.differentMethods":33,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":304,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":409,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":276,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":86,"org.easymock.tests2.MockBuilderTest.testCreateMockString":424,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":430,"org.easymock.tests.UsageExpectAndThrowTest.floatType":255,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":146,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":185,"org.easymock.tests.UsageVerifyTest.twoThrows":317,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":207,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":91,"org.easymock.samples.ExampleTest.voteAgainstRemoval":75,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":4,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":245,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":113,"org.easymock.tests.LimitationsTest.privateConstructor":428,"org.easymock.tests2.UsageConstraintsTest.testNotNull":153,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":15,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":380,"org.easymock.tests2.UsageTest.defaultResetToNice":102,"org.easymock.samples.ExampleTest.voteAgainstRemovals":73,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":51,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":403,"org.easymock.tests.UsageVarargTest.differentLength":231,"org.easymock.tests2.CallbackTest.callback":184,"org.easymock.tests.UsageTest.openCallCountByLastCall":27,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":130,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":319,"org.easymock.tests.UsageCallCountTest.tooFewCalls":191,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":166,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":202,"org.easymock.tests.UsageThrowableTest.throwCheckedException":12,"org.easymock.tests.MockingTest.testStrictClassMocking":212,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":168,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":204,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":417,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":165,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":309,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":167,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":379,"org.easymock.tests2.CompareToTest.testGreateOrEqual":396,"org.easymock.tests.ObjectMethodsTest.testHashCode":290,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":399,"org.easymock.tests2.NameTest.nameForNiceMock":415,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":88,"org.easymock.tests2.DependencyTest.testInterfaceMocking":94,"org.easymock.samples.ExampleTest.addDocument":335,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":350,"org.easymock.tests2.DelegateToTest.testStubDelegate":170,"org.easymock.tests2.AnswerTest.stubAnswer":158,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":31,"org.easymock.tests.UsageVarargTest.varargLongAccepted":233,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":286,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":3,"org.easymock.tests.UsageExpectAndReturnTest.floatType":38,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":54,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":156,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":420,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":148,"org.easymock.tests.UsageThrowableTest.noUpperLimit":205,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":210,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":131,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":369,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":390,"org.easymock.tests2.SerializationTest.test":162,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":275,"org.easymock.tests2.UsageConstraintsTest.testSame":136,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":37,"org.easymock.samples.SupportTest.addDocument":339,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":305,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":348,"org.easymock.tests.GenericTest.testPackageScope":21,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":315,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":410,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":216,"org.easymock.tests2.NameTest.nameForMock":353,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":48,"org.easymock.tests2.UsageStrictMockTest.differentMethods":129,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":361,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":40,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":267,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":288,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":59,"org.easymock.tests2.MockedExceptionTest.testRealException":382,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":198,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":372,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":181,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":127,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":68,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":311,"org.easymock.tests2.NameTest.nameForStrictMock":414,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":182,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":109,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":370,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":149,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":277,"org.easymock.tests.ErrorMessageTest.testGetters":426,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":79,"org.easymock.tests2.UsageStrictMockTest.range":128,"org.easymock.tests2.UsageConstraintsTest.lessThan":155,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":116,"org.easymock.tests2.CaptureTest.testCaptureRightOne":178,"org.easymock.tests2.UsageConstraintsTest.testOr":137,"org.easymock.tests.UsageRangeTest.combination":56,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":106,"org.easymock.tests.UsageTest.wrongArguments":247,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":322,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":41,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":49,"org.easymock.tests.UsageVarargTest.varargShortAccepted":232,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":279,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":194,"org.easymock.tests2.UsageConstraintsTest.cmpTo":141,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":378,"org.easymock.tests2.CompareToTest.testLessThan":393,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":101,"org.easymock.tests2.CaptureTest.testCaptureFromStub":392,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":301,"org.easymock.tests.UsageTest.unexpectedCallWithArray":246,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":284,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":192,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":50,"org.easymock.tests2.UsageConstraintsTest.constraints":132,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":285,"org.easymock.samples.ExampleTest.addAndChangeDocument":337,"org.easymock.tests.UsageStrictMockTest.testVerify":287,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":338,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":283,"org.easymock.tests2.CompareToTest.testGreateThan":394,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":241,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":391,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":62,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":42,"org.easymock.tests.LimitationsTest.abstractClass":219,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":16,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":63,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":121,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":227}}]
