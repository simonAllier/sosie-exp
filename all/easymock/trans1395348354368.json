[{"transplant":{"position":"org.easymock.EasyMock:136","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:155","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[0,1,2,3],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:71","failures":[4,5,6,7,8,9,10],"status":-1,"binaryOperator":"(java.util.Set<java.lang.reflect.Method>) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:235","sourceCode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:127","sourceCode":"try {\n    java.lang.reflect.Constructor<T> = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.getConstructor(java.lang.Class<T>);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"No empty constructor can be found\" , java.lang.NoSuchMethodException);\n}","type":"CtTryImpl"},"failures":[11,12,13],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:63","sourceCode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")","type":"CtThrowImpl"},"failures":[14],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:176","sourceCode":"final net.sf.cglib.core.CodeGenerationException net.sf.cglib.core.CodeGenerationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:893","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterThan<T>(java.lang.Comparable<T>))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:159","sourceCode":"java.lang.reflect.Field.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:71","sourceCode":"java.util.List<java.lang.reflect.Field>.add(java.lang.reflect.Field)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"f":"f"}},{"position":"org.easymock.internal.MethodSerializationWrapper:67","failures":[13,15,16,17],"status":-1,"binaryOperator":"int < (java.lang.String[].int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,0,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,5,111,112,6,113,114,9,10,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,13,15,16,3,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:106","sourceCode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:234","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[241],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","sourceCode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} ","type":"CtIfImpl"},"failures":[328],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:1725","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"failures":[50],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1290","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1177","sourceCode":"return 0","type":"CtReturnImpl"},"failures":[47,53],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:41","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)))","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:53","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[58,160,274],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:134","sourceCode":"final java.io.ByteArrayOutputStream java.io.ByteArrayOutputStream = new java.io.ByteArrayOutputStream()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1687","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(T[]))","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1220","sourceCode":"org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[48],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:146","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null))","type":"CtInvocationImpl"},"failures":[144,284],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"failures":[329],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:438","sourceCode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()","type":"CtAssignmentImpl"},"failures":[],"status":-2,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Captures:47","sourceCode":"this.T = T","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"potentialValue":"potentialValue"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:39","sourceCode":"return int > 0","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:83","sourceCode":"return (int) == (java.lang.Integer.int)","type":"CtReturnImpl"},"failures":[36,37,38,39,50,55,61,69,73,74,76,77,78,79,80,85,86,88,115,117,118,121,122,124,125,127,3,136,137,138,140,143,145,160,161,162,163,164,191,197,198,199,215,255,256,258,259,260,261,262,263,274,282,285,313,316],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"maximum"}},{"transplant":{"position":"org.easymock.EasyMock:440","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[99],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.Capture:79","sourceCode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"failures":[330],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:109","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:111","sourceCode":"java.lang.reflect.Method = java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:112","sourceCode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"finalizeMethod","method":"finalizeMethod"}},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:86","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.Not(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(1).get(0)))","type":"CtInvocationImpl"},"failures":[50,331,64,69],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2080","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)","type":"CtInvocationImpl"},"failures":[18,19,20,21,22,23,25,26,32,33,35,36,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,75,77,78,79,80,81,82,85,86,87,88,89,91,92,93,94,95,97,99,101,104,105,106,109,110,6,113,116,117,119,120,123,126,128,129,130,131,132,133,134,135,13,15,16,3,136,137,138,139,140,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,159,161,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,203,206,207,209,214,215,225,226,227,228,229,230,231,248,256,264,265,266,267,268,270,271,272,273,274,275,276,277,278,279,280,281,282,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,315,316,326],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:230","sourceCode":"throw new java.lang.RuntimeException(java.lang.NoSuchMethodException)","type":"CtThrowImpl"},"failures":[332],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:30","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:328","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    if (java.lang.reflect.Type == null) {\n        java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n    } \n    if (java.lang.reflect.Type != null) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } \n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","sourceCode":"assert java.lang.reflect.Method != null : \"Method must not be null\"","type":"CtAssertImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:79","sourceCode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    } \n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"bridgeMethod":"bridgeMethod"}},{"transplant":{"position":"org.easymock.EasyMock:2011","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2052","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}","type":"CtForEachImpl"},"failures":[116],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"failures":[333],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1318","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[19,32,33,86,334,87,89,143,322],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:72","sourceCode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = org.easymock.internal.IClassInstantiator","type":"CtAssignmentImpl"},"failures":[335,336,337],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":48,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":255,"org.easymock.tests2.UsageTest.argumentsOrdered":125,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":190,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":120,"org.easymock.tests2.StubTest.stubWithReturnValue":145,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":68,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":176,"org.easymock.tests2.SerializationTest.testAllMockedMethod":16,"org.easymock.tests2.DelegateToTest.testReturnException":139,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":188,"org.easymock.tests.MockingTest.testPartialClassMocking":206,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor_NoEmptyConstructor":12,"org.easymock.tests.MockClassControlTest.testToString":249,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":2,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":305,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":1,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":17,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":293,"org.easymock.tests.UsageExpectAndThrowTest.object":303,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":65,"org.easymock.tests2.DelegateToTest.testWrongClass":141,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":286,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":287,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":54,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":281,"org.easymock.tests2.UsageTest.wrongArguments":118,"org.easymock.tests.UsageStrictMockTest.range":163,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":148,"org.easymock.samples.ExampleTest.answerVsDelegate":19,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":222,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":211,"org.easymock.tests2.UsageConstraintsTest.testNull":50,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":304,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":93,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":254,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":7,"org.easymock.tests2.CaptureTest.testPrimitive":75,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":285,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":312,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":261,"org.easymock.tests.UsageTest.moreThanOneArgument":256,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":245,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":92,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":147,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":154,"org.easymock.tests2.CaptureTest.testCaptureNone":80,"org.easymock.tests.UsageUnorderedTest.message":313,"org.easymock.tests.UsageVerifyTest.twoReturns":199,"org.easymock.tests.UsageVarargTest.varargByteAccepted":272,"org.easymock.tests2.ThreadingTest.testThreadSafe":105,"org.easymock.tests.UsageTest.argumentsOrdered":262,"org.easymock.tests.UsageVarargTest.varargIntAccepted":266,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":231,"org.easymock.tests2.ReflectionUtilsTest.testGetDeclareMethod_NotFound":332,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":275,"org.easymock.tests2.CaptureTest.testCapture_2617107":74,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":110,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":203,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":284,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":28,"org.easymock.tests2.UsageConstraintsTest.any":55,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":113,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":242,"org.easymock.tests2.StubTest.stub":144,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":279,"org.easymock.tests.UsageExpectAndThrowTest.longType":296,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":189,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":241,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":37,"org.easymock.tests2.SerializationTest.testClass":13,"org.easymock.tests.ReplayStateInvalidUsageTest.times":243,"org.easymock.tests.LimitationsTest.mockNativeMethod":225,"org.easymock.tests2.AnswerTest.answer":86,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":186,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":331,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":44,"org.easymock.tests2.CaptureTest.testAnd":72,"org.easymock.tests2.UsageTest.strictResetToDefault":116,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":40,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":99,"org.easymock.tests2.NameTest.nameForMocksControl":138,"org.easymock.tests2.MockedExceptionTest.testMockedException":129,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":153,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":195,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":260,"org.easymock.tests2.DelegateToTest.testDelegate":142,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":297,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":209,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":91,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":8,"org.easymock.tests.MockingTest.testNicePartialClassMocking":207,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":308,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":95,"org.easymock.tests2.CaptureTest.testCaptureLast":79,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":191,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":202,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":53,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":135,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":292,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":66,"org.easymock.tests2.CaptureTest.testCapture1_2446744":76,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":167,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":306,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":301,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":42,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":124,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":70,"org.easymock.tests.UsageThrowableTest.throwError":314,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":237,"org.easymock.samples.ExampleTest.removeNonExistingDocument":24,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":239,"org.easymock.tests.UsageStrictMockTest.differentMethods":164,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":221,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":107,"org.easymock.tests2.MockBuilderTest.testCreateMockString":10,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":247,"org.easymock.tests.UsageExpectAndThrowTest.floatType":295,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":156,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":61,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":87,"org.easymock.tests.UsageVerifyTest.twoThrows":198,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":323,"org.easymock.samples.PartialClassMockTest.testGetArea":4,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":238,"org.easymock.tests.MockingTest.testInterfaceMocking":208,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":276,"org.easymock.samples.ExampleTest.voteAgainstRemoval":21,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":329,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":101,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":294,"org.easymock.tests2.UsageTest.niceToStrict":119,"org.easymock.tests2.UsageConstraintsTest.testNotNull":69,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":321,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":128,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":6,"org.easymock.tests2.MockBuilderTest.testCreateMock":114,"org.easymock.tests2.UsageTest.defaultResetToNice":123,"org.easymock.samples.ExampleTest.voteAgainstRemovals":18,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":182,"org.easymock.tests.UsageVarargTest.differentLength":269,"org.easymock.tests2.CallbackTest.callback":143,"org.easymock.tests2.UsageConstraintsTest.equals":14,"org.easymock.tests.UsageTest.openCallCountByLastCall":259,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":302,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":45,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":226,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":283,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":146,"org.easymock.tests.UsageCallCountTest.tooFewCalls":229,"org.easymock.tests.UsageOverloadedMethodTest.overloading":214,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":325,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":59,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":213,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":178,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":58,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":81,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":149,"org.easymock.tests.UsageThrowableTest.throwCheckedException":318,"org.easymock.tests.MockClassControlTest.testEquals":253,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":151,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":310,"org.easymock.tests.MockingTest.testStrictClassMocking":204,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":290,"org.easymock.tests2.CaptureTest.testCaptureAll":73,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":43,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":201,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":134,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":133,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":244,"org.easymock.tests2.UsageConstraintsTest.testMatches":60,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":89,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":235,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":155,"org.easymock.tests.ObjectMethodsTest.testHashCode":217,"org.easymock.samples.ExampleTest.voteForRemovals":23,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":109,"org.easymock.tests2.NameTest.nameForNiceMock":137,"org.easymock.tests.UsageVarargTest.allKinds":274,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":197,"org.easymock.tests2.DependencyTest.testInterfaceMocking":26,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":291,"org.easymock.samples.ExampleTest.addDocument":22,"org.easymock.tests2.DelegateToTest.testStubDelegate":140,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":320,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":34,"org.easymock.tests2.AnswerTest.stubAnswer":88,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":192,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":161,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":336,"org.easymock.tests2.UsageConstraintsTest.greaterThan":62,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":194,"org.easymock.tests.UsageVarargTest.varargLongAccepted":271,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":102,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":165,"org.easymock.samples.ExampleTest.voteForRemoval":20,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":103,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":106,"org.easymock.tests.UsageExpectAndReturnTest.floatType":169,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":185,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":223,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":29,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":96,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":104,"org.easymock.tests.UsageThrowableTest.noUpperLimit":315,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":63,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":280,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":46,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":115,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":77,"org.easymock.tests2.SerializationTest.test":15,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":11,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":316,"org.easymock.tests2.UsageConstraintsTest.testSame":51,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":168,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":187,"org.easymock.tests.ClassInstantiatorFactoryTest.getInstantiator_Overriden":337,"org.easymock.tests2.CaptureTest.testCaptureFirst":85,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":333,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":127,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":327,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":240,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":174,"org.easymock.tests.GenericTest.testPackageScope":150,"org.easymock.tests2.CaptureTest.testCapture2_2446744":84,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":108,"org.easymock.tests2.UsageTest.moreThanOneArgument":117,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":9,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":273,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":210,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":233,"org.easymock.tests2.NameTest.nameForMock":3,"org.easymock.tests.UsageExpectAndReturnTest.longType":170,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":288,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":311,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":179,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":67,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":309,"org.easymock.tests2.UsageStrictMockTest.differentMethods":39,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":152,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":98,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":171,"org.easymock.tests.UsageCallCountTest.tooManyCalls":234,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":307,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":196,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":228,"org.easymock.tests2.MockedExceptionTest.testRealException":131,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":224,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":175,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":31,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":298,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":36,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":319,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":282,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":246,"org.easymock.tests.MockingTest.testNiceClassMocking":212,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":132,"org.easymock.tests.MockingTest.testClassMocking":205,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":227,"org.easymock.tests2.UsageConstraintsTest.testContains":57,"org.easymock.tests2.NameTest.nameForStrictMock":136,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":130,"org.easymock.tests2.UsageConstraintsTest.testFind":49,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":215,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":112,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":32,"org.easymock.tests.MockTypeTest.fromEasyMockClass":220,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":94,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":33,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":158,"org.easymock.tests.UsageExpectAndReturnTest.object":177,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":30,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":64,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":97,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":5,"org.easymock.tests2.UsageStrictMockTest.range":38,"org.easymock.tests2.UsageConstraintsTest.lessThan":71,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":268,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":218,"org.easymock.tests.UsageTest.exactCallCountByLastCall":263,"org.easymock.tests2.MockBuilderTest.testAddMethodWithParams_NotExisting":328,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":200,"org.easymock.tests2.CaptureTest.testCaptureRightOne":82,"org.easymock.tests2.UsageConstraintsTest.testOr":52,"org.easymock.tests.UsageRangeTest.combination":193,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":264,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":0,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":183,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":324,"org.easymock.tests.UsageTest.wrongArguments":258,"org.easymock.tests.MockClassControlTest.testHashCode":252,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":248,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":172,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":180,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":322,"org.easymock.tests.UsageVarargTest.varargShortAccepted":270,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":232,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":41,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":90,"org.easymock.tests2.UsageConstraintsTest.cmpTo":56,"org.easymock.tests.UsageVarargTest.varargCharAccepted":267,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":335,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":334,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":35,"org.easymock.tests2.UsageTest.openCallCountByLastCall":121,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":122,"org.easymock.tests.DefaultClassInstantiatorTest.object":157,"org.easymock.tests2.CaptureTest.testCaptureFromStub":83,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":236,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":111,"org.easymock.tests.UsageTest.unexpectedCallWithArray":257,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":216,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":300,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":317,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":160,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":230,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":181,"org.easymock.tests2.CaptureTest.testCapture":330,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":251,"org.easymock.tests2.UsageConstraintsTest.constraints":47,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":100,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":162,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":299,"org.easymock.samples.ExampleTest.addAndChangeDocument":25,"org.easymock.tests.UsageStrictMockTest.testVerify":166,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":184,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":250,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":159,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":289,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":78,"org.easymock.tests2.UsageTest.resumeIfFailure":126,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":277,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":219,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":173,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":326,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":278,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":265,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":27}}]
