[{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"this.org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:41","sourceCode":"java.lang.StringBuffer.append(\"\\'\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:43","sourceCode":"java.lang.StringBuffer.append(\"capture(\").append(org.easymock.Capture<T>)","type":"CtInvocationImpl"},"failures":[32],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:68","sourceCode":"org.easymock.internal.LastControl.popCurrentInvocation()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[33,34],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:133","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[35,36,37,38,39,40,41,42,0,43,43,44,44,45,46,47,48,49,1,2,3,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,4,66,67,68,69,70,71,72,73,5,74,75,76,77,78,6,7,79,80,81,82,8,83,84,85,86,87,88,89,90,91,92,93,94,9,10,95,96,97,98,99,100,101,102,103,104,11,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,12,120,121,122,123,124,125,126,127,128,129,130,131,132,133,13,134,135,14,136,33,34,137,138,139,140,141,15,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,16,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,17,225,226,227,228,229,18,230,231,232,233,234,19,235,236,237,20,238,21,239,240,241,242,243,244,245,22,246,247,248,249,250,23,251,252,253,254,255,24,256,257,258,25,259,26,260,27,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,28,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,30,304,305,306,307,308,309,31,310,311,312,313,314,315],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1420","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[33],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:224","sourceCode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType();\n} else {\n    return java.lang.reflect.Type;\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:85","sourceCode":"if ((org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:52","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation().addCapture(((org.easymock.internal.matchers.Captures<java.lang.Object>)(this)), java.lang.Object)","type":"CtInvocationImpl"},"failures":[73,5,74,75,76,77,78,6,79,80,81,82,8,32],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:280","sourceCode":"if (java.lang.Object == null) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:285","sourceCode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[38,101,103,11,242,316],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"delegateTo":"answer"}},{"transplant":{"position":"org.easymock.internal.RecordState:96","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:116","sourceCode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:1964","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:88","sourceCode":"return org.easymock.internal.MocksControl.createMock(java.lang.String, java.lang.Class<T>, null, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[35,36,37,38,39,40,41,42,317,0,45,46,47,48,49,1,2,3,50,51,318,319,320,321,322,52,323,324,325,326,327,328,329,330,53,54,56,57,58,59,60,61,62,64,65,4,66,67,69,70,331,73,5,74,75,76,77,78,6,7,79,80,81,82,8,83,84,85,86,87,88,89,332,90,333,91,92,93,94,334,335,9,336,10,95,96,97,98,337,338,339,340,341,99,342,343,344,345,346,347,348,349,350,351,352,100,101,102,103,104,11,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,12,120,121,122,353,123,124,125,126,127,128,129,130,131,132,133,13,134,135,14,136,33,34,137,138,139,140,141,15,354,142,143,144,145,146,147,148,149,150,151,152,153,355,356,154,357,155,156,358,157,359,360,361,362,363,158,159,16,160,161,162,163,164,165,166,167,168,169,364,365,170,366,171,367,368,369,370,172,371,372,373,374,375,173,174,175,176,177,376,377,378,379,178,179,180,181,182,183,184,185,380,186,381,187,188,382,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,209,210,211,212,213,214,398,399,400,401,402,403,215,404,216,217,218,219,405,220,221,406,222,223,224,407,17,225,226,227,228,229,18,230,231,232,233,234,19,235,236,237,20,238,21,239,408,409,410,411,412,413,414,415,416,417,418,419,240,241,242,243,244,245,420,22,246,247,248,249,250,23,251,252,253,254,255,24,256,257,258,25,259,26,260,27,421,422,261,423,262,263,264,265,266,267,268,424,269,425,426,427,428,270,271,272,273,274,275,276,28,277,278,279,429,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,430,431,295,432,433,434,435,299,436,437,438,439,440,441,442,300,301,302,303,443,444,316,445,446,447,448,449,450,451,452,453,29,454,455,456,30,457,458,459,460,461,304,462,305,306,307,308,309,31,463,310,311,312,313,314,315],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:64","sourceCode":"try {\n    java.util.Properties.load(java.io.InputStream);\n} catch (final java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n} finally {\n    try {\n        java.io.InputStream.close();\n    } catch (final java.io.IOException java.io.IOException) {\n    }\n}","type":"CtTryImpl"},"failures":[464,465,466,467],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[468,14],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:320","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[100,452],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:196","sourceCode":"org.easymock.MockType = org.easymock.MockType.org.easymock.MockType","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:189","sourceCode":"org.easymock.internal.IMocksBehavior = new org.easymock.internal.MocksBehavior(((org.easymock.MockType) == (org.easymock.MockType.org.easymock.MockType)))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"type":"type","org.easymock.MockType.NICE":"type"}},{"transplant":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:201","sourceCode":"return java.lang.Number.longValue()","type":"CtReturnImpl"},"failures":[185,227,232,20,238,291],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:55","sourceCode":"new java.util.HashMap<java.lang.Class<?>, java.lang.Class<?>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:79","sourceCode":"return java.lang.reflect.Method","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"result":"m"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"failures":[35,36,37,38,39,40,41,42,45,46,47,48,49,50,51,52,53,54,55,57,59,62,63,64,65,66,67,68,69,70,71,72,73,5,74,75,77,78,6,7,79,80,8,83,84,85,86,87,88,90,93,97,99,348,101,103,105,106,107,108,109,110,111,113,114,115,116,117,122,127,128,130,131,133,135,33,34,137,138,139,146,149,154,155,156,158,159,160,161,162,166,167,169,170,171,172,173,179,180,188,189,190,191,192,193,194,195,196,198,199,201,204,218,219,220,221,222,223,226,227,229,233,237,240,242,243,245,247,248,250,254,258,261,273,275,276,277,278,279,280,281,283,284,285,286,287,296,297,298,300,310,313,314,315],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:211","sourceCode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")","type":"CtThrowImpl"},"failures":[469],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.Capture:67","sourceCode":"return !(java.util.List<T>.isEmpty())","type":"CtReturnImpl"},"failures":[77,78,6,79,470,8],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:145","sourceCode":"org.easymock.internal.RecordState.requireVoidMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"failures":[456],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ReplayState:65","sourceCode":"throw java.lang.Throwable","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReplayState:63","sourceCode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)","type":"CtThrowImpl"},"failures":[98,243],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:155","sourceCode":"try {\n    final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = org.easymock.internal.MocksControl.getProxyFactory(java.lang.Object);\n    final org.easymock.internal.ObjectMethodsFilter org.easymock.internal.ObjectMethodsFilter = ((org.easymock.internal.ObjectMethodsFilter)(org.easymock.internal.IProxyFactory.getInvocationHandler(java.lang.Object)));\n    return org.easymock.internal.ObjectMethodsFilter.getDelegate().getControl();\n} catch (final java.lang.ClassCastException java.lang.ClassCastException) {\n    throw new java.lang.IllegalArgumentException((\"Not a mock: \" + (java.lang.Object.getClass().getName())));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2110","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getControl(java.lang.Object)","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2124","sourceCode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} ","type":"CtIfImpl"},"failures":[336],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:225","sourceCode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:227","sourceCode":"return java.lang.reflect.Type","type":"CtReturnImpl"},"failures":[406,407],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:152","sourceCode":"boolean boolean = true","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:126","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1204","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:122","sourceCode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))","type":"CtInvocationImpl"},"failures":[63,64,65],"status":-1,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":122,"org.easymock.tests2.UsageTest.argumentsOrdered":167,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":309,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":115,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":342,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":452,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":162,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":45,"org.easymock.tests2.DelegateToTest.testReturnException":101,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":210,"org.easymock.tests.MockingTest.testPartialClassMocking":296,"org.easymock.tests.MockClassControlTest.testToString":437,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":354,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":186,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":459,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":335,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":171,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":22,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":54,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":128,"org.easymock.tests2.UsageTest.wrongArguments":160,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":270,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":328,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":378,"org.easymock.samples.ExampleTest.answerVsDelegate":38,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":401,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":434,"org.easymock.tests2.UsageConstraintsTest.testNull":124,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":86,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":442,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":114,"org.easymock.tests2.CaptureTest.testPrimitive":75,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":274,"org.easymock.tests.UsageTest.moreThanOneArgument":31,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":260,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":85,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":292,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":262,"org.easymock.tests.UsageTest.argumentsOrdered":314,"org.easymock.tests.UsageVarargTest.varargIntAccepted":279,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":456,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":181,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":152,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":346,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":357,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":316,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":185,"org.easymock.tests.ReplayStateInvalidUsageTest.times":416,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":52,"org.easymock.tests2.DependencyTest.testClassMocking":329,"org.easymock.tests2.AnswerTest.answer":146,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":129,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":457,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":352,"org.easymock.tests2.CaptureTest.testAnd":73,"org.easymock.tests2.UsageTest.strictResetToDefault":159,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":91,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":291,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":109,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":307,"org.easymock.tests2.DelegateToTest.testDelegate":11,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":266,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":258,"org.easymock.tests.LimitationsTest.mockFinalMethod":423,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":213,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":428,"org.easymock.tests2.DependencyTest.testClassMockingSupport":330,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":187,"org.easymock.tests2.CaptureTest.testCapture1_2446744":76,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":332,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":256,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":350,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":410,"org.easymock.tests.UsageThrowableTest.throwError":189,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":400,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":347,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":294,"org.easymock.samples.PartialClassMockTest.testGetArea":46,"org.easymock.tests.MockingTest.testInterfaceMocking":432,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":411,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":182,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":176,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":397,"org.easymock.tests2.UsageTest.niceToStrict":161,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":246,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":369,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":443,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":154,"org.easymock.tests2.MockBuilderTest.testCreateMock":358,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":373,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":325,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":253,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":110,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":303,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":215,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":376,"org.easymock.tests.UsageOverloadedMethodTest.overloading":276,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":375,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":13,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":243,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":234,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":275,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":133,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":79,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":429,"org.easymock.tests.MockClassControlTest.testEquals":441,"org.easymock.tests2.EasyMockSupportClassTest.testAll":170,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":223,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":259,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":426,"org.easymock.tests2.CaptureTest.testCaptureAll":5,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":351,"org.easymock.tests.MockNameTest.defaultName":424,"org.easymock.tests2.UsageConstraintsTest.testMatches":134,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":408,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":293,"org.easymock.samples.ExampleTest.voteForRemovals":42,"org.easymock.tests.UsageVarargTest.allKinds":287,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":178,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":427,"org.easymock.samples.BasicClassMockTest.testPrintContent":48,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":195,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":56,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":104,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":214,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":343,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":390,"org.easymock.tests2.UsageConstraintsTest.greaterThan":14,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":306,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":94,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":391,"org.easymock.samples.ExampleTest.voteForRemoval":39,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":2,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":334,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":402,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":89,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":158,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":300,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":449,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":107,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":191,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":365,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":209,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":100,"org.easymock.tests2.CaptureTest.testCaptureFirst":8,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":448,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":108,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":169,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":420,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":230,"org.easymock.tests2.UsageTest.moreThanOneArgument":16,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":50,"org.easymock.tests2.CaptureTest.testCapture2_2446744":82,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":458,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":157,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":286,"org.easymock.tests.GenericTest.testBridgedEquals":407,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":220,"org.easymock.tests.UsageExpectAndReturnTest.longType":227,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":105,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":269,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":26,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":174,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":138,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":25,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":207,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":290,"org.easymock.tests.UsageCallCountTest.tooManyCalls":221,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":216,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":374,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":231,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":327,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":250,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":194,"org.easymock.tests.MockingTest.testNiceClassMocking":435,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":67,"org.easymock.tests.MockingTest.testClassMocking":431,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":404,"org.easymock.tests2.UsageConstraintsTest.testContains":132,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":97,"org.easymock.tests2.UsageConstraintsTest.testFind":123,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":28,"org.easymock.tests.MockTypeTest.fromEasyMockClass":399,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":10,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":197,"org.easymock.tests.UsageExpectAndReturnTest.object":233,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":90,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":326,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":113,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":281,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":395,"org.easymock.tests.UsageTest.exactCallCountByLastCall":315,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":267,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":447,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":263,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":380,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":20,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":277,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":242,"org.easymock.tests.MockClassControlTest.testHashCode":440,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":338,"org.easymock.tests2.EasyMockSupportTest.testVerify":117,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":264,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":240,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":302,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":349,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":348,"org.easymock.tests.UsageVarargTest.varargCharAccepted":280,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":383,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":57,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":462,"org.easymock.tests2.UsageTest.openCallCountByLastCall":163,"org.easymock.tests.DefaultClassInstantiatorTest.object":384,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":116,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":301,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":393,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":251,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":370,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":192,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":321,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":337,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":439,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":92,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":23,"org.easymock.tests.CapturesMatcherTest.test":32,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":238,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":206,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":438,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":173,"org.easymock.tests2.UsageTest.resumeIfFailure":168,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":398,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":212,"org.easymock.tests2.StubTest.stubWithReturnValue":119,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":139,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":232,"org.easymock.tests2.SerializationTest.testAllMockedMethod":65,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":30,"org.easymock.samples.SupportTest.voteForRemovals":36,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":406,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":340,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":24,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":304,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":147,"org.easymock.tests.UsageExpectAndThrowTest.object":254,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":381,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":34,"org.easymock.tests2.DelegateToTest.testWrongClass":103,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":288,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":289,"org.easymock.samples.ConstructorCalledMockTest.testTax":43,"org.easymock.tests.UsageStrictMockTest.range":202,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":362,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":112,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":66,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":255,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":155,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":418,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":313,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":364,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":377,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":177,"org.easymock.tests2.CaptureTest.testCaptureNone":7,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":465,"org.easymock.tests.UsageUnorderedTest.message":27,"org.easymock.tests.UsageVerifyTest.twoReturns":180,"org.easymock.tests.UsageVarargTest.varargByteAccepted":285,"org.easymock.tests2.ThreadingTest.testThreadSafe":1,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":371,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":219,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":396,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":47,"org.easymock.tests2.CaptureTest.testCapture_2617107":74,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":382,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":460,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":273,"org.easymock.tests2.UsageConstraintsTest.any":130,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":415,"org.easymock.tests2.StubTest.stub":118,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":208,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":461,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":211,"org.easymock.tests.UsageExpectAndThrowTest.longType":248,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":388,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":414,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":59,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":99,"org.easymock.tests2.SerializationTest.testClass":63,"org.easymock.tests.LimitationsTest.mockNativeMethod":261,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":224,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":239,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":320,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":62,"org.easymock.tests2.NameTest.nameForMocksControl":145,"org.easymock.tests2.MockedExceptionTest.testMockedException":96,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":322,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":366,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":312,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":249,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":298,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":336,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":83,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":156,"org.easymock.tests.MockingTest.testNicePartialClassMocking":297,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":88,"org.easymock.tests2.CaptureTest.testCaptureLast":6,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":318,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":188,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":127,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":72,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":137,"org.easymock.tests.MockingTest.testTwoMocks":295,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":331,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":17,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":252,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":166,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":141,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":467,"org.easymock.samples.ExampleTest.removeNonExistingDocument":317,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":412,"org.easymock.tests.UsageStrictMockTest.differentMethods":203,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":324,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":339,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":386,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":3,"org.easymock.tests2.MockBuilderTest.testCreateMockString":359,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":299,"org.easymock.tests.UsageExpectAndThrowTest.floatType":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":367,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":135,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":149,"org.easymock.tests.UsageVerifyTest.twoThrows":179,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":172,"org.easymock.samples.ExampleTest.voteAgainstRemoval":40,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":453,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":175,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":93,"org.easymock.tests.LimitationsTest.privateConstructor":422,"org.easymock.tests2.UsageConstraintsTest.testNotNull":140,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":95,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":196,"org.easymock.tests2.UsageTest.defaultResetToNice":165,"org.easymock.samples.ExampleTest.voteAgainstRemovals":37,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":29,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":237,"org.easymock.tests.UsageVarargTest.differentLength":282,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":319,"org.easymock.tests2.CallbackTest.callback":4,"org.easymock.tests2.UsageConstraintsTest.equals":353,"org.easymock.tests.UsageTest.openCallCountByLastCall":311,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":12,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":272,"org.easymock.tests.UsageCallCountTest.tooFewCalls":217,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":69,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":379,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":466,"org.easymock.tests.UsageThrowableTest.throwCheckedException":193,"org.easymock.tests.MockingTest.testStrictClassMocking":430,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":71,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":268,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":68,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":323,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":417,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":70,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":151,"org.easymock.tests.ObjectMethodsTest.testHashCode":394,"org.easymock.tests2.NameTest.nameForNiceMock":144,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":51,"org.easymock.tests2.DependencyTest.testInterfaceMocking":53,"org.easymock.samples.ExampleTest.addDocument":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":372,"org.easymock.tests2.DelegateToTest.testStubDelegate":102,"org.easymock.tests2.AnswerTest.stubAnswer":150,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":200,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":469,"org.easymock.tests.UsageVarargTest.varargLongAccepted":284,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":204,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":451,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":21,"org.easymock.tests.UsageExpectAndReturnTest.floatType":226,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":55,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":44,"org.easymock.tests.UsageThrowableTest.noUpperLimit":190,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":136,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":244,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":345,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":120,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":360,"org.easymock.tests2.SerializationTest.test":64,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":77,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":385,"org.easymock.tests2.UsageConstraintsTest.testSame":125,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":225,"org.easymock.samples.SupportTest.addDocument":35,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":413,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":368,"org.easymock.tests.GenericTest.testPackageScope":222,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":265,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":446,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":344,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":433,"org.easymock.tests2.NameTest.nameForMock":142,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":19,"org.easymock.tests2.UsageStrictMockTest.differentMethods":61,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":333,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":228,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":257,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":392,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":308,"org.easymock.tests2.MockedExceptionTest.testRealException":98,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":403,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":455,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":363,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":454,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":58,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":419,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":271,"org.easymock.tests2.NameTest.nameForStrictMock":143,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":356,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":9,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":87,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":361,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":387,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":33,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":153,"org.easymock.tests2.UsageStrictMockTest.range":60,"org.easymock.tests2.UsageConstraintsTest.lessThan":15,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":341,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":450,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":106,"org.easymock.tests2.CaptureTest.testCaptureRightOne":80,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":464,"org.easymock.tests2.UsageConstraintsTest.testOr":126,"org.easymock.tests.UsageRangeTest.combination":305,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":84,"org.easymock.tests.UsageTest.wrongArguments":310,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":436,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":229,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":444,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":235,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":389,"org.easymock.tests.UsageVarargTest.varargShortAccepted":283,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":405,"org.easymock.tests2.UsageConstraintsTest.cmpTo":131,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":148,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":445,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":164,"org.easymock.tests2.CaptureTest.testCaptureFromStub":81,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":409,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":355,"org.easymock.tests.UsageTest.unexpectedCallWithArray":463,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":199,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":218,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":236,"org.easymock.tests2.CaptureTest.testCapture":470,"org.easymock.tests2.UsageConstraintsTest.constraints":121,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":201,"org.easymock.samples.ExampleTest.addAndChangeDocument":0,"org.easymock.tests.UsageStrictMockTest.testVerify":205,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":49,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":198,"org.easymock.tests2.CompareToTest.testGreateThan":468,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":425,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":78,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":183,"org.easymock.tests.LimitationsTest.abstractClass":421,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":18,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":184,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":245,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":111,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":278}}]
