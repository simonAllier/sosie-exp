[{"transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:30","sourceCode":"new java.util.HashMap<java.lang.String, java.lang.Class<?>>(10)","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1999","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Character>(org.easymock.Capture<java.lang.Character>))","type":"CtInvocationImpl"},"failures":[0],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1348","sourceCode":"org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1120","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.RecordState:240","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:153","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[1],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:157","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:216","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[13,14],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:79","sourceCode":"if (this.java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:105","sourceCode":"switch (org.easymock.CaptureType) {\n    case NONE :\n        break;\n    case ALL :\n        java.util.List<T>.add(T);\n        break;\n    case FIRST :\n        if (!org.easymock.Capture<T>.(hasCaptured())) {\n            java.util.List<T>.add(T);\n        } \n        break;\n    case LAST :\n        if (org.easymock.Capture<T>.hasCaptured()) {\n            org.easymock.Capture<T>.reset();\n        } \n        java.util.List<T>.add(T);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));\n}","type":"CtSwitchImpl"},"failures":[15,16,17,18,19,0,20,21,22,23,24,25,26,27,28,29,30],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"values":"values"}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:48","sourceCode":"java.lang.StringBuffer.append(\", \")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:48","sourceCode":"java.lang.StringBuilder.append(\"\\n    \").append(java.lang.String).append(\", actual: \")","type":"CtInvocationImpl"},"failures":[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:87","sourceCode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportMatcher(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MockBuilder:113","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:157","sourceCode":"java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"constructor":"ret"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:121","sourceCode":"this.org.easymock.ConstructorArgs = org.easymock.ConstructorArgs","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:167","sourceCode":"org.easymock.ConstructorArgs = new org.easymock.ConstructorArgs(java.lang.reflect.Constructor<T> , java.lang.Object[])","type":"CtAssignmentImpl"},"failures":[57,57,58,58,59,60],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"constructorArgs":"constructorArgs"}},{"transplant":{"position":"org.easymock.internal.ReflectionUtils:95","sourceCode":"java.lang.reflect.Method java.lang.reflect.Method = null","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:79","sourceCode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<T>, java.lang.String)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:52","sourceCode":"java.lang.StringBuffer.append(\"]\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.And:49","sourceCode":"java.util.Iterator<org.easymock.IArgumentMatcher>.next().appendTo(java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[61],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"position":"org.easymock.internal.Range:44","failures":[62,63,64,65,66,67,68,69,70,13,71,72,31,73,32,74,75,33,34,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,1,91,92,93,94,95,96,2,3,4,5,6,7,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,35,36,37,38,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,14,214,215,216,217,218,219,220,221,8,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,39,40,254,41,42,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,57,58,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,46,47,306,307,308,309,310,48,49,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,60,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,9,10,11,12,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,50,51,52,53,445,446,447,448,449,450,451,452,453,454,54,455,55,56,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,17,18,19,0,20,21,22,23,24,25,27,28,29,30,493,494,495],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:48","sourceCode":"if (org.easymock.internal.MocksControl != null) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\n} else {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:49","sourceCode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[73,496,497,39,498,499],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"this.org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:317","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[171,445],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","delegateTo":"delegateTo"}},{"transplant":{"position":"org.easymock.internal.RecordState:151","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[70,13,72,31,32,74,75,33,34,76,77,78,79,81,82,83,84,85,86,87,88,89,90,1,91,92,93,94,95,96,2,3,4,5,6,7,97,105,106,107,108,109,110,112,113,114,116,123,124,125,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,154,155,156,157,159,160,177,183,185,188,35,36,37,38,190,191,192,193,194,195,196,197,198,199,202,203,204,206,210,221,8,222,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,39,40,254,41,42,255,256,266,267,268,269,270,271,272,273,274,275,276,277,278,280,281,282,285,286,287,288,289,290,57,57,58,58,291,292,293,294,295,296,298,299,300,301,302,303,304,305,46,47,306,307,308,309,310,48,49,311,312,322,326,328,330,334,337,338,339,340,342,343,344,346,347,348,349,350,351,354,356,357,358,359,367,377,380,390,396,404,415,416,417,418,419,420,422,425,426,427,428,429,9,10,11,12,430,431,432,433,434,435,436,437,438,439,440,441,442,443,50,51,52,53,445,446,447,448,449,450,451,452,453,454,54,455,55,56,456,457,458,459,460,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,488,489,490,491,492,17,18,19,0,20,21,22,23,24,25,27,28,29,30,493,495],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:41","sourceCode":"java.lang.StringBuffer.append(\"same(\")","type":"CtInvocationImpl"},"failures":[500,501,502],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[310],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1134","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[466],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ReflectionUtils:184","inlineConstant":"int int = 0","failures":[329,503,504,505,506,507,423],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:106","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:331","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[307,350,475],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.Equals:48","sourceCode":"return java.lang.Object","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:94","sourceCode":"return org.easymock.internal.MockInvocationHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])","type":"CtReturnImpl"},"failures":[70,13,72,31,73,32,74,75,33,34,76,88,89,90,1,91,92,93,94,95,96,2,3,4,5,6,7,105,106,107,108,109,110,111,112,113,114,116,118,119,120,121,122,123,124,125,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,154,177,183,185,188,35,36,37,38,190,191,192,193,194,195,196,197,198,199,202,203,204,206,221,8,222,223,224,225,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,39,40,254,41,42,255,266,267,268,269,270,271,272,273,274,275,276,277,278,280,282,285,286,287,288,290,57,57,58,58,291,292,293,294,296,298,301,304,305,46,47,306,307,308,309,310,48,49,311,312,320,322,326,327,328,330,333,334,336,337,338,339,340,342,343,344,346,347,348,349,350,351,352,354,356,357,358,359,367,377,380,390,396,404,411,412,413,414,415,416,417,418,419,420,422,425,426,427,428,429,9,10,11,12,430,431,432,433,434,435,436,437,438,439,440,441,443,445,446,447,448,449,450,451,452,453,54,455,55,56,456,457,458,459,460,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,488,489,490,491,17,18,19,0,20,21,22,23,24,25,27,28,29,30,493,495],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"expected":"proxy"}},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:70","sourceCode":"java.io.InputStream.close()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:65","sourceCode":"java.util.Properties.load(java.io.InputStream)","type":"CtInvocationImpl"},"failures":[508,509,510,511,512,513],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"in":"in"}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:693","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.anyObject()","type":"CtReturnImpl"},"failures":[469],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:209","sourceCode":"if (!(java.lang.Class<?>.equals(org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.getRawType(java.lang.reflect.Type, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)))) {\n    return false;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:292","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:346","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[169,227,230,231],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[73,496,497,39,498,499],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.ArgumentToString:46","inlineConstant":"int int = 0","failures":[73,496,497,39,498,499],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.matchers.Compare:53","failures":[475],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MockBuilder:229","sourceCode":"this.org.easymock.EasyMockSupport.createStrictControl()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:178","sourceCode":"org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtInvocationImpl"},"failures":[62],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"support":"support"}},{"transplant":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:371","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[347],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[171,445,447],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.AndroidSupport:29","sourceCode":"this.boolean = false","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:167","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"lastInvocationUsed"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":460,"org.easymock.tests2.UsageTest.argumentsOrdered":49,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":72,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":440,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":405,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":171,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":307,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":303,"org.easymock.tests2.DelegateToTest.testReturnException":446,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":3,"org.easymock.tests.MockingTest.testPartialClassMocking":203,"org.easymock.tests.MockClassControlTest.testToString":99,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":444,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":116,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":180,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":361,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":384,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":232,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":380,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":43,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":489,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_protected":503,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":467,"org.easymock.tests2.UsageTest.wrongArguments":47,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":89,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":373,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":224,"org.easymock.samples.ExampleTest.answerVsDelegate":292,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":67,"org.easymock.tests2.UsageConstraintsTest.testNull":463,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":208,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":349,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":439,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":104,"org.easymock.tests2.CaptureTest.testPrimitive":0,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":92,"org.easymock.tests.UsageTest.moreThanOneArgument":31,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":251,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":348,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":194,"org.easymock.tests.UsageTest.argumentsOrdered":34,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":227,"org.easymock.tests.UsageVarargTest.varargIntAccepted":79,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":176,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":274,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_private":507,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":320,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":409,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":315,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":327,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":163,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":278,"org.easymock.tests.ReplayStateInvalidUsageTest.times":217,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":367,"org.easymock.tests2.DependencyTest.testClassMocking":486,"org.easymock.tests2.AnswerTest.answer":415,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":468,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":178,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":414,"org.easymock.tests2.CaptureTest.testAnd":17,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":64,"org.easymock.tests2.UsageTest.strictResetToDefault":305,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":324,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":356,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":193,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":434,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":95,"org.easymock.tests2.DelegateToTest.testDelegate":450,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":231,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":247,"org.easymock.tests.LimitationsTest.mockFinalMethod":189,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":6,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":122,"org.easymock.tests2.DependencyTest.testClassMockingSupport":487,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":70,"org.easymock.tests2.CaptureTest.testCapture1_2446744":20,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":353,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":245,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":412,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":212,"org.easymock.tests.UsageThrowableTest.throwError":266,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":66,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":410,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":284,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":196,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":398,"org.easymock.samples.PartialClassMockTest.testGetArea":301,"org.easymock.tests.MockingTest.testInterfaceMocking":205,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":213,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":275,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":286,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":385,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":131,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":233,"org.easymock.tests2.UsageTest.niceToStrict":306,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":161,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":326,"org.easymock.tests2.MockBuilderTest.testCreateMock":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":393,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":370,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":498,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":241,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":435,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":63,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":125,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":152,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":222,"org.easymock.tests.UsageOverloadedMethodTest.overloading":198,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":395,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":389,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":473,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":108,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":143,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":197,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":472,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":25,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":80,"org.easymock.tests.MockClassControlTest.testEquals":103,"org.easymock.tests2.EasyMockSupportClassTest.testAll":377,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":281,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":502,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":249,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":413,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":120,"org.easymock.tests2.CaptureTest.testCaptureAll":18,"org.easymock.tests.MockNameTest.defaultName":226,"org.easymock.tests2.UsageConstraintsTest.testMatches":474,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":195,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":210,"org.easymock.samples.ExampleTest.voteForRemovals":296,"org.easymock.tests.UsageVarargTest.allKinds":88,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":35,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":121,"org.easymock.samples.BasicClassMockTest.testPrintContent":300,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":272,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":453,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":449,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":406,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":7,"org.easymock.tests2.UsageConstraintsTest.greaterThan":476,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":264,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":378,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":94,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":359,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":265,"org.easymock.samples.ExampleTest.voteForRemoval":293,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":426,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":360,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":68,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":316,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":352,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":288,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":304,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":332,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":168,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":432,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":268,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":375,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":2,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":445,"org.easymock.tests2.CaptureTest.testCaptureFirst":30,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":167,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":433,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":312,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":111,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":139,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":428,"org.easymock.tests2.UsageTest.moreThanOneArgument":46,"org.easymock.tests2.CaptureTest.testCapture2_2446744":29,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":179,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":334,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":87,"org.easymock.tests.GenericTest.testBridgedEquals":283,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":159,"org.easymock.tests.UsageExpectAndReturnTest.longType":135,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":430,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":118,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":250,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":481,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":185,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":248,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":113,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":192,"org.easymock.tests.UsageCallCountTest.tooManyCalls":160,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":154,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":394,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":140,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":372,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":237,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":271,"org.easymock.tests.MockingTest.testNiceClassMocking":209,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":338,"org.easymock.tests.MockingTest.testClassMocking":201,"org.easymock.tests2.UsageConstraintsTest.testContains":471,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":153,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":11,"org.easymock.tests2.UsageConstraintsTest.testFind":462,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":199,"org.easymock.tests.MockTypeTest.fromEasyMockClass":65,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":495,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":252,"org.easymock.tests.UsageExpectAndReturnTest.object":142,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":354,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":371,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":438,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_public":504,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":82,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":129,"org.easymock.tests.UsageTest.exactCallCountByLastCall":76,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":221,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":166,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":115,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":228,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":423,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":148,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":77,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":107,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":400,"org.easymock.tests.MockClassControlTest.testHashCode":102,"org.easymock.tests2.EasyMockSupportTest.testVerify":442,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":387,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":500,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":229,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":124,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":105,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":411,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":421,"org.easymock.tests.UsageVarargTest.varargCharAccepted":81,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":257,"org.easymock.tests2.CaptureTest.testCaptureMultiple":16,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":454,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":184,"org.easymock.tests2.UsageTest.openCallCountByLastCall":308,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":441,"org.easymock.tests.DefaultClassInstantiatorTest.object":258,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":123,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":127,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":388,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":239,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":269,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":365,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":399,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":101,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":357,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":238,"org.easymock.tests.CapturesMatcherTest.test":15,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":149,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":112,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":501,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":396,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":100,"org.easymock.tests2.UsageTest.resumeIfFailure":311,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":62,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":314,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":5,"org.easymock.tests2.StubTest.stubWithReturnValue":452,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":329,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":482,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":141,"org.easymock.tests2.SerializationTest.testAllMockedMethod":492,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":177,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":499,"org.easymock.samples.SupportTest.voteForRemovals":290,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":279,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":402,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":244,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":183,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":416,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":117,"org.easymock.tests.UsageExpectAndThrowTest.object":242,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":479,"org.easymock.tests2.DelegateToTest.testWrongClass":448,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":190,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":191,"org.easymock.tests.UsageStrictMockTest.range":41,"org.easymock.samples.ConstructorCalledMockTest.testTax":57,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":318,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":437,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":337,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":243,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":328,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":33,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":219,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":374,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":223,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":496,"org.easymock.tests2.CaptureTest.testCaptureNone":24,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":287,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":509,"org.easymock.tests.UsageUnorderedTest.message":38,"org.easymock.tests.UsageVerifyTest.twoReturns":37,"org.easymock.tests.UsageVarargTest.varargByteAccepted":86,"org.easymock.tests2.ThreadingTest.testThreadSafe":425,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":391,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":157,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":130,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":299,"org.easymock.tests2.CaptureTest.testCapture_2617107":19,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":71,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":181,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":91,"org.easymock.tests2.UsageConstraintsTest.any":469,"org.easymock.tests2.StubTest.stub":451,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":216,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":114,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":182,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":4,"org.easymock.tests.UsageExpectAndThrowTest.longType":235,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":262,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":215,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":455,"org.easymock.tests2.SerializationTest.testClass":490,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":404,"org.easymock.tests.LimitationsTest.mockNativeMethod":188,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":151,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":282,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":364,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":456,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":510,"org.easymock.tests2.NameTest.nameForMocksControl":53,"org.easymock.tests2.MockedExceptionTest.testMockedException":10,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":366,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":379,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":75,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":494,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":206,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":236,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":346,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":330,"org.easymock.tests.MockingTest.testNicePartialClassMocking":204,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":351,"org.easymock.tests2.CaptureTest.testCaptureLast":23,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":362,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":13,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":466,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":344,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":480,"org.easymock.tests.MockingTest.testTwoMocks":202,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":345,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":132,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":240,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":48,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":484,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":513,"org.easymock.samples.ExampleTest.removeNonExistingDocument":297,"org.easymock.tests.UsageStrictMockTest.differentMethods":42,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":14,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":369,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":401,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":512,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":260,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":427,"org.easymock.tests2.ConstraintsToStringTest.andToString":61,"org.easymock.tests2.MockBuilderTest.testCreateMockString":336,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":97,"org.easymock.tests.UsageExpectAndThrowTest.floatType":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":381,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":475,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":376,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":418,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":424,"org.easymock.tests.UsageVerifyTest.twoThrows":36,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":106,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":390,"org.easymock.samples.ExampleTest.voteAgainstRemoval":294,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":172,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":285,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":358,"org.easymock.tests.LimitationsTest.privateConstructor":187,"org.easymock.tests2.UsageConstraintsTest.testNotNull":483,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":9,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":273,"org.easymock.tests2.UsageTest.defaultResetToNice":310,"org.easymock.samples.ExampleTest.voteAgainstRemovals":291,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":173,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":147,"org.easymock.tests.UsageVarargTest.differentLength":83,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":363,"org.easymock.tests2.CallbackTest.callback":443,"org.easymock.tests2.UsageConstraintsTest.equals":461,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":60,"org.easymock.tests.UsageTest.openCallCountByLastCall":74,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":457,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":1,"org.easymock.tests.UsageCallCountTest.tooFewCalls":155,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":340,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":225,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":511,"org.easymock.tests.UsageThrowableTest.throwCheckedException":270,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":497,"org.easymock.tests.MockingTest.testStrictClassMocking":200,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":8,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":343,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":339,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":368,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":218,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":342,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":420,"org.easymock.tests.ObjectMethodsTest.testHashCode":128,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_notFound":506,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":429,"org.easymock.tests2.NameTest.nameForNiceMock":52,"org.easymock.tests2.DependencyTest.testInterfaceMocking":488,"org.easymock.tests2.ReflectionUtilsTest.testGetConstructor_default":505,"org.easymock.samples.ExampleTest.addDocument":295,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":392,"org.easymock.tests2.DelegateToTest.testStubDelegate":447,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":397,"org.easymock.tests2.AnswerTest.stubAnswer":419,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":40,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":331,"org.easymock.tests.UsageVarargTest.varargLongAccepted":85,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":255,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":170,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":150,"org.easymock.tests.UsageExpectAndReturnTest.floatType":134,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":422,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":58,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":477,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":408,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":109,"org.easymock.tests.UsageThrowableTest.noUpperLimit":267,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":458,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":313,"org.easymock.tests2.SerializationTest.test":491,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":21,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":259,"org.easymock.tests2.UsageConstraintsTest.testSame":464,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":133,"org.easymock.samples.SupportTest.addDocument":289,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":341,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":214,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":382,"org.easymock.tests.GenericTest.testPackageScope":280,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":230,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":165,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":407,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":207,"org.easymock.tests2.NameTest.nameForMock":50,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":144,"org.easymock.tests2.UsageStrictMockTest.differentMethods":56,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":335,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":355,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":136,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":246,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":126,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":96,"org.easymock.tests2.MockedExceptionTest.testRealException":12,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":69,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":175,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":319,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":174,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":54,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":90,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":220,"org.easymock.tests2.NameTest.nameForStrictMock":51,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":325,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":493,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":350,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":317,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":478,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingMultiple":44,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":261,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":322,"org.easymock.tests2.UsageStrictMockTest.range":55,"org.easymock.tests2.UsageConstraintsTest.lessThan":485,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":403,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":431,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":386,"org.easymock.tests2.CaptureTest.testCaptureRightOne":27,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":508,"org.easymock.tests2.UsageConstraintsTest.testOr":465,"org.easymock.tests.UsageRangeTest.combination":93,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":347,"org.easymock.tests.UsageTest.wrongArguments":32,"org.easymock.tests2.MockBuilderTest.testWithConstructor":321,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":383,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":98,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":137,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":162,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":145,"org.easymock.tests.UsageVarargTest.varargShortAccepted":84,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":263,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":158,"org.easymock.tests2.UsageConstraintsTest.cmpTo":470,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":417,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":164,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":309,"org.easymock.tests2.CaptureTest.testCaptureFromStub":28,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":211,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":323,"org.easymock.tests.UsageTest.unexpectedCallWithArray":73,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":39,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":156,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":59,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":146,"org.easymock.tests2.CaptureTest.testCapture":26,"org.easymock.tests2.UsageConstraintsTest.constraints":459,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":254,"org.easymock.samples.ExampleTest.addAndChangeDocument":298,"org.easymock.tests.UsageStrictMockTest.testVerify":256,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":302,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":253,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":119,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":22,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":276,"org.easymock.tests.LimitationsTest.abstractClass":186,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":138,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":110,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":277,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":436,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingOne":45,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":78}}]
