[{"position":"org.easymock.EasyMock:593","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:416","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:161","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:99","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMockSupport:480","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:172","sourceCode":"final org.easymock.IMocksControl org.easymock.IMocksControl = (org.easymock.EasyMockSupport) == null ? org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType) : org.easymock.EasyMockSupport.createControl(org.easymock.MockType)","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksBehavior:137","sourceCode":"if (int > 1) {\n    java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\");\n} else {\n    java.lang.StringBuilder.append(\":\");\n}","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ArgumentToString:90","sourceCode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} ","type":"CtIfImpl"},"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"errorMessage":"result","matches":"i"}},{"transplant":{"position":"org.easymock.internal.RecordState:91","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:224","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[15],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:256","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[0],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","mockedMethods":"mockedMethods","constructorArgs":"constructorArgs","this":"this"}},{"position":"org.easymock.internal.MethodSerializationWrapper:57","inlineConstant":"int int = 0","failures":[16,17,18,19],"status":-1,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1360","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"failures":[20],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.Compare:52","sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Null:35","sourceCode":"return java.lang.Object == null","type":"CtReturnImpl"},"failures":[21,22,23,24],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:34","sourceCode":"org.easymock.internal.MethodSerializationWrapper.java.util.Map<java.lang.String, java.lang.Class<?>>.put(java.lang.Byte.java.lang.Class<java.lang.Byte>.getName(), java.lang.Byte.java.lang.Class<java.lang.Byte>)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:245","sourceCode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:251","sourceCode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, null)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"returnedType":"mockClass"}},{"transplant":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"failures":[25,26,27,28,29,30,31,32,33,23,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","sourceCode":"this.java.lang.reflect.Method = this.java.lang.reflect.Method","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:59","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.findMethod(java.lang.Class<?>, \"finalize\", ((java.lang.Class[])(null)))","type":"CtAssignmentImpl"},"failures":[53,25,26,54,27,28,55,29,56,16,18,30,57,32,58,33,59,60,0,61,62,63,64,35,36,37,38,39,40,41,42,43,45,46,65,66,67,67,68,68,47,69,70,71,72,49,73,74,50,51,52],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"finalizeMethod","equalsMethod":"finalizeMethod"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:263","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))","type":"CtThrowImpl"},"failures":[75,76],"status":-1,"name":"delete","type":"adrStmt"},{"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"failures":[],"status":0,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.LastControl:96","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.pop()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.LastControl:65","sourceCode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(org.easymock.IArgumentMatcher)","type":"CtInvocationImpl"},"failures":[77,78,79,80,81,21,82,83,84,85,86,87,88,89,90,91,92,93,94,95,20,96,97,22,98,99,100,101,53,60,0,23,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,48,125,126,127,24,128,129,130,131,132,133,134,135,136,6,137,7,138,139,140],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.LastControl:124","failures":[141,142,143,144,145,146,147,148,149,150,151,152,153,77,78,79,80,81,21,82,83,84,85,87,88,89,90,91,92,93,94,95,20,96,97,22,98,99,100,101,53,25,26,54,27,28,55,29,56,16,17,18,30,57,31,32,58,33,59,60,0,61,62,63,154,155,156,157,158,159,160,23,161,162,34,163,164,103,104,105,106,107,108,109,110,111,112,113,114,115,116,165,166,118,167,168,169,64,170,35,171,172,119,120,1,173,174,36,37,38,39,175,176,177,178,2,179,180,181,182,183,3,4,184,185,186,187,188,189,190,121,122,123,40,41,42,43,44,45,46,65,66,67,68,191,47,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,124,48,125,126,127,210,210,211,212,213,214,215,216,217,218,219,220,221,222,223,24,69,70,224,225,226,128,129,130,131,132,133,134,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,135,136,49,6,137,254,255,256,257,258,259,7,138,260,8,261,262,73,263,264,9,10,265,266,11,12,267,268,269,270,271,139,140,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,13,14,297,298,299,300,301,50,51,52,302,303,304,305],"status":-1,"binaryOperator":"java.util.Stack<org.easymock.internal.Invocation> == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.MocksControl:136","failures":[53,25,306,307,26,54,27,28,308,55,29,56,16,18,30,57,32,58,33,59,60,309,310,0,61,62,63,311,312,313,314,315,316,317,318,168,169,64,35,319,320,321,322,36,323,324,37,325,326,327,328,329,330,331,332,333,38,334,335,336,337,338,39,339,340,40,41,42,43,45,46,65,66,67,67,68,68,47,341,69,70,71,342,343,72,344,345,346,347,348,349,350,351,352,353,49,354,73,355,356,357,358,359,360,361,362,363,74,50,51,52,364],"status":-1,"binaryOperator":"org.easymock.internal.IProxyFactory != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:57","failures":[16,17,18,19],"status":-1,"binaryOperator":"int < (java.lang.Class<?>[].int)","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:76","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:220","sourceCode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} ","type":"CtIfImpl"},"failures":[365,366,367,368,141,142,143,144,145,146,147,148,149,150,151,152,153,80,81,21,82,84,85,86,87,88,90,91,93,94,20,96,97,22,98,99,25,26,27,28,29,16,17,18,30,57,31,32,58,33,60,61,62,63,23,161,162,163,164,103,104,105,106,107,108,109,110,111,112,113,116,165,166,64,35,171,172,119,120,1,173,174,36,37,38,39,175,176,177,2,179,180,183,3,4,185,186,187,189,190,123,40,41,42,43,44,45,46,65,66,191,47,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,124,48,125,126,127,211,212,214,215,216,217,218,219,220,221,222,223,24,69,70,224,128,129,130,131,132,133,134,369,229,230,232,237,242,370,248,249,250,252,253,135,136,371,49,6,137,258,259,7,138,260,8,261,262,372,73,10,11,12,267,139,278,279,281,286,291,373,374,13,14,50,51,52,302,375,303,304,376,377],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.MockBuilder:210","failures":[378,308,16,309,35,319,67,67,68,68],"status":-1,"binaryOperator":"(org.easymock.ConstructorArgs) == null","name":"negateConditional","type":"mutation"},{"position":"org.easymock.internal.ClassProxyFactory:191","failures":[53,379,25,306,380,307,26,54,27,381,28,308,55,29,382,56,16,18,30,57,32,58,33,59,60,309,310,0,61,62,63,311,312,313,316,168,169,64,35,319,383,320,321,36,324,37,325,326,327,329,330,331,332,38,334,335,336,337,338,39,40,41,42,43,45,46,65,66,67,68,47,341,69,70,71,342,343,72,344,345,346,347,348,349,350,351,352,353,49,354,73,355,356,357,358,359,360,361,362,363,74,50,51,52,364],"status":-1,"binaryOperator":"org.easymock.ConstructorArgs != null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:199","sourceCode":"return java.lang.Number.intValue()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"failures":[67,67,68,68],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:90","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[384,385,386],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","sourceCode":"return \"gt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:158","sourceCode":"return ((java.lang.Class<?>.getSimpleName()) + \".\") + java.lang.String","type":"CtReturnImpl"},"failures":[119,1,173,178,2,3,4,387,6,7,138,8,261,264,9,10,11,12,373,374,296,13,14],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:214","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1262","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:326","sourceCode":"org.easymock.internal.IMocksControlState.asStub()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","sourceCode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))","type":"CtInvocationImpl"},"failures":[77,91,94,101,158,159,160,164,104,110,111,116,178,123,213,227,233,239,243,245,388,6,264,276,282,288,292,294],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:240","sourceCode":"this.org.easymock.internal.IMocksControlState.makeThreadSafe(boolean)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:239","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[389],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","threadSafe":"threadSafe"}},{"transplant":{"position":"org.easymock.internal.matchers.And:40","sourceCode":"return false","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:213","sourceCode":"return true","type":"CtReturnImpl"},"failures":[341,342],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1708","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Null.org.easymock.internal.matchers.Null)","type":"CtInvocationImpl"},"failures":[21,24],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2039","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:332","sourceCode":"org.easymock.internal.IMocksBehavior.checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[93,58,180],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.EasyMock:1177","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:111","inlineConstant":"int int = 0","failures":[356,360],"status":-1,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.internal.DefaultClassInstantiator:93","failures":[355,356,360],"status":-1,"binaryOperator":"(java.lang.Class<?>.getConstructors().int) == 0","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:1459","sourceCode":"return null","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:301","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[57,50],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:142","failures":[342],"status":-1,"name":"returnValue","return":"return true","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:222","sourceCode":"org.easymock.internal.IMocksControlState.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:247","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.checkIsUsedInOneThread(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[159,160,390],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","sourceCode":"java.lang.reflect.Method.setAccessible(true)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:108","sourceCode":"try {\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n    java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod();\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.io.IOException(java.lang.NoSuchMethodException.toString());\n}","type":"CtTryImpl"},"failures":[16,17,18],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"method":"toStringMethod"}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":80,"org.easymock.tests2.UsageTest.argumentsOrdered":4,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":263,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":151,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":385,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":180,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":191,"org.easymock.tests2.DelegateToTest.testReturnException":162,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":269,"org.easymock.tests.MockingTest.testPartialClassMocking":50,"org.easymock.tests.MockClassControlTest.testToString":344,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":312,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":328,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":37,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":227,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":166,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":85,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":130,"org.easymock.tests2.UsageTest.wrongArguments":2,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":274,"org.easymock.samples.ExampleTest.answerVsDelegate":196,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":351,"org.easymock.tests2.UsageConstraintsTest.testNull":21,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":32,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":150,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":349,"org.easymock.tests2.CaptureTest.testPrimitive":106,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":134,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":246,"org.easymock.tests.UsageTest.moreThanOneArgument":264,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":31,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":299,"org.easymock.tests.UsageTest.argumentsOrdered":12,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":371,"org.easymock.tests.UsageVarargTest.varargIntAccepted":216,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":124,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":53,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":315,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":54,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":127,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":175,"org.easymock.tests2.DependencyTest.testClassMocking":317,"org.easymock.tests2.AnswerTest.answer":186,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":86,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":157,"org.easymock.tests2.CaptureTest.testAnd":103,"org.easymock.tests2.UsageTest.strictResetToDefault":177,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":0,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":380,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":298,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":145,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":225,"org.easymock.tests2.DelegateToTest.testDelegate":164,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":242,"org.easymock.tests.LimitationsTest.mockFinalMethod":354,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":139,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":257,"org.easymock.tests2.DependencyTest.testClassMockingSupport":318,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":373,"org.easymock.tests2.CaptureTest.testCapture1_2446744":107,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":240,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":155,"org.easymock.tests.UsageThrowableTest.throwError":202,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":386,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":387,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":301,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":340,"org.easymock.samples.PartialClassMockTest.testGetArea":47,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":389,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":48,"org.easymock.tests2.UsageTest.niceToStrict":179,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":228,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":329,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":26,"org.easymock.tests2.MockBuilderTest.testCreateMock":55,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":336,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":236,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":146,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":370,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":272,"org.easymock.tests.UsageOverloadedMethodTest.overloading":212,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":333,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":338,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":91,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":304,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":211,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":287,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":90,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":112,"org.easymock.tests2.EasyMockSupportClassTest.testAll":36,"org.easymock.tests.MockClassControlTest.testEquals":348,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":70,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":244,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":156,"org.easymock.tests2.CaptureTest.testCaptureAll":104,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":255,"org.easymock.tests2.UsageConstraintsTest.testMatches":92,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":300,"org.easymock.samples.ExampleTest.voteForRemovals":200,"org.easymock.tests.UsageVarargTest.allKinds":24,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":296,"org.easymock.samples.BasicClassMockTest.testPrintContent":66,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":256,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":208,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":171,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":140,"org.easymock.tests2.UsageConstraintsTest.greaterThan":94,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":323,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":63,"org.easymock.samples.ExampleTest.voteForRemoval":197,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":361,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":159,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":311,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":59,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":176,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":73,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":308,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":143,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":204,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":321,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":268,"org.easymock.tests2.CaptureTest.testCaptureFirst":116,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":102,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":144,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":185,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":305,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":283,"org.easymock.tests2.UsageTest.moreThanOneArgument":178,"org.easymock.tests2.CaptureTest.testCapture2_2446744":115,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":23,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":29,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":223,"org.easymock.tests.GenericTest.testBridgedEquals":342,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":252,"org.easymock.tests.UsageExpectAndReturnTest.longType":279,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":141,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":137,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":245,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":22,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":243,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":297,"org.easymock.tests.UsageCallCountTest.tooManyCalls":253,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":337,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":284,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":232,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":207,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":41,"org.easymock.tests.MockingTest.testNiceClassMocking":364,"org.easymock.tests.MockingTest.testClassMocking":363,"org.easymock.tests2.UsageConstraintsTest.testContains":89,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":64,"org.easymock.tests2.UsageConstraintsTest.testFind":81,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":213,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":122,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":258,"org.easymock.tests.UsageExpectAndReturnTest.object":286,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":60,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":149,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":218,"org.easymock.tests.UsageTest.exactCallCountByLastCall":267,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":128,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":319,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":214,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":292,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":303,"org.easymock.tests.MockClassControlTest.testHashCode":347,"org.easymock.tests2.EasyMockSupportTest.testVerify":153,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":331,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":302,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":154,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":117,"org.easymock.tests.UsageVarargTest.varargCharAccepted":217,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":172,"org.easymock.tests2.UsageTest.openCallCountByLastCall":181,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":152,"org.easymock.tests.DefaultClassInstantiatorTest.object":355,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":75,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":369,"org.easymock.tests.ArgumentToStringTest.testArgumentsToString":5,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":234,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":332,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":205,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":61,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":346,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":233,"org.easymock.tests.CapturesMatcherTest.test":210,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":293,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":76,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":39,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":345,"org.easymock.tests2.UsageTest.resumeIfFailure":184,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":350,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":314,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":271,"org.easymock.tests2.StubTest.stubWithReturnValue":167,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":381,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":98,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":285,"org.easymock.tests2.SerializationTest.testAllMockedMethod":18,"org.easymock.samples.SupportTest.voteForRemovals":194,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":341,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":239,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":19,"org.easymock.tests.UsageExpectAndThrowTest.object":237,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":96,"org.easymock.tests2.DelegateToTest.testWrongClass":163,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":135,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":136,"org.easymock.tests.UsageStrictMockTest.range":8,"org.easymock.samples.ConstructorCalledMockTest.testTax":67,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":148,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":40,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":238,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":27,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":11,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":320,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":273,"org.easymock.tests2.CaptureTest.testCaptureNone":111,"org.easymock.tests.UsageUnorderedTest.message":6,"org.easymock.tests.UsageVerifyTest.twoReturns":14,"org.easymock.tests.UsageVarargTest.varargByteAccepted":222,"org.easymock.tests2.ThreadingTest.testThreadSafe":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":334,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":250,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":65,"org.easymock.tests2.CaptureTest.testCapture_2617107":105,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":15,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":133,"org.easymock.tests2.UsageConstraintsTest.any":87,"org.easymock.tests2.StubTest.stub":118,"org.easymock.tests.UsageExpectAndThrowTest.longType":230,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":270,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":359,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":120,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":190,"org.easymock.tests2.SerializationTest.testClass":16,"org.easymock.tests.LimitationsTest.mockNativeMethod":49,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":71,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":295,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":174,"org.easymock.tests2.NameTest.nameForMocksControl":368,"org.easymock.tests2.MockedExceptionTest.testMockedException":169,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":324,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":266,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":52,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":231,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":30,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":28,"org.easymock.tests.MockingTest.testNicePartialClassMocking":51,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":33,"org.easymock.tests2.CaptureTest.testCaptureLast":110,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":374,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":46,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":84,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":97,"org.easymock.tests.MockingTest.testTwoMocks":74,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":276,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":235,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":3,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":100,"org.easymock.tests.UsageStrictMockTest.differentMethods":261,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":357,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":160,"org.easymock.tests2.MockBuilderTest.testCreateMockString":56,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":343,"org.easymock.tests.UsageExpectAndThrowTest.floatType":229,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":325,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":93,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":322,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":187,"org.easymock.tests.UsageVerifyTest.twoThrows":13,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":383,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":375,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":38,"org.easymock.samples.ExampleTest.voteAgainstRemoval":198,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":62,"org.easymock.tests.LimitationsTest.privateConstructor":353,"org.easymock.tests2.UsageConstraintsTest.testNotNull":99,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":168,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":209,"org.easymock.tests2.UsageTest.defaultResetToNice":183,"org.easymock.samples.ExampleTest.voteAgainstRemovals":195,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":388,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":291,"org.easymock.tests.UsageVarargTest.differentLength":219,"org.easymock.tests2.CallbackTest.callback":123,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":309,"org.easymock.tests.UsageTest.openCallCountByLastCall":265,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":77,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":132,"org.easymock.tests.UsageCallCountTest.tooFewCalls":248,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":43,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":275,"org.easymock.tests.UsageThrowableTest.throwCheckedException":206,"org.easymock.tests.MockingTest.testStrictClassMocking":362,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":129,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":45,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":384,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":42,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":390,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":44,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":189,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":161,"org.easymock.tests2.NameTest.nameForNiceMock":367,"org.easymock.tests2.DependencyTest.testInterfaceMocking":165,"org.easymock.samples.ExampleTest.addDocument":199,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":335,"org.easymock.tests2.DelegateToTest.testStubDelegate":34,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":339,"org.easymock.tests2.AnswerTest.stubAnswer":188,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":138,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":378,"org.easymock.tests.UsageVarargTest.varargLongAccepted":221,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":262,"org.easymock.tests.UsageExpectAndReturnTest.floatType":278,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":294,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":35,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":68,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":95,"org.easymock.tests.UsageThrowableTest.noUpperLimit":203,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":376,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":78,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":313,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":108,"org.easymock.tests2.SerializationTest.test":17,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":356,"org.easymock.tests2.UsageConstraintsTest.testSame":82,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":277,"org.easymock.samples.SupportTest.addDocument":193,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":326,"org.easymock.tests.GenericTest.testPackageScope":69,"org.easymock.tests2.NameTest.nameForMock":365,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":288,"org.easymock.tests2.UsageStrictMockTest.differentMethods":173,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":382,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":310,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":280,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":241,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":226,"org.easymock.tests2.MockedExceptionTest.testRealException":170,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":119,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":131,"org.easymock.tests2.NameTest.nameForStrictMock":366,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":307,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":121,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":58,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":316,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":20,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":358,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":25,"org.easymock.tests2.UsageStrictMockTest.range":1,"org.easymock.tests2.UsageConstraintsTest.lessThan":101,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":142,"org.easymock.tests2.CaptureTest.testCaptureRightOne":113,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":330,"org.easymock.tests2.UsageConstraintsTest.testOr":83,"org.easymock.tests.UsageRangeTest.combination":224,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":57,"org.easymock.tests.UsageTest.wrongArguments":10,"org.easymock.tests2.MockBuilderTest.testWithConstructor":379,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":327,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":72,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":281,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":289,"org.easymock.tests.UsageVarargTest.varargShortAccepted":220,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":360,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":251,"org.easymock.tests2.UsageConstraintsTest.cmpTo":88,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":182,"org.easymock.tests2.CaptureTest.testCaptureFromStub":114,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":306,"org.easymock.tests.UsageTest.unexpectedCallWithArray":9,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":7,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":249,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":290,"org.easymock.tests2.UsageConstraintsTest.constraints":79,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":260,"org.easymock.samples.ExampleTest.addAndChangeDocument":201,"org.easymock.tests.UsageStrictMockTest.testVerify":372,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":192,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":259,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":254,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":109,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":125,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":282,"org.easymock.tests.LimitationsTest.abstractClass":352,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":126,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":377,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":147,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":215}}]
