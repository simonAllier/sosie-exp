[{"transplant":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:47","sourceCode":"return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)))","type":"CtReturnImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"o":"actual","this":"actual"}},{"transplant":{"position":"org.easymock.Capture:117","sourceCode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.Capture:82","sourceCode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} ","type":"CtIfImpl"},"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.ArgumentToString:47","failures":[13,14,15,16,17,18],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.MocksControl:293","sourceCode":"try {\n    this.org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:318","sourceCode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)","type":"CtInvocationImpl"},"failures":[19,20,21],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state","value":"delegateTo"}},{"transplant":{"position":"org.easymock.internal.RecordState:297","sourceCode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:289","sourceCode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:67","sourceCode":"throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"))","type":"CtThrowImpl"},"failures":[22],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:207","sourceCode":"return java.lang.Number","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:195","sourceCode":"return java.lang.Number.byteValue()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"number":"number"}},{"transplant":{"position":"org.easymock.EasyMock:2170","sourceCode":"return org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2189","sourceCode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().setProperty(java.lang.String, java.lang.String)","type":"CtReturnImpl"},"failures":[23,24],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this","key":"key"}},{"transplant":{"position":"org.easymock.internal.RecordState:181","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:108","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"failures":[25,26,27,28,29,30],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.ConstructorArgs:51","sourceCode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockInvocationHandler:42","sourceCode":"throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()","type":"CtThrowImpl"},"failures":[31],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MethodSerializationWrapper:72","sourceCode":"java.lang.Class<?>[][int] = java.lang.Class.java.lang.Class.forName(java.lang.String[][int], true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())","type":"CtAssignmentImpl"},"failures":[32,33,34,35],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.ReplayState:149","sourceCode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:312","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[36,37],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.Injector:75","sourceCode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:103","sourceCode":"continue","type":"CtContinueImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"position":"org.easymock.EasyMock:1988","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"transplant":{"position":"org.easymock.EasyMock:170","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:466","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[38],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.Injection:74","sourceCode":"boolean = true","type":"CtAssignmentImpl"},"failures":[39,40,41,42,43,44,45,46,47,48,49,50],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2012","sourceCode":"org.easymock.EasyMock.getControl(java.lang.Object).replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2096","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).checkOrder(boolean)","type":"CtInvocationImpl"},"failures":[51,52,53,54],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:84","sourceCode":"org.easymock.internal.RecordState.closeMethod()","type":"CtInvocationImpl"},"failures":[55,56,57,58,59,60,61,62,25,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,26,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,16,101,102,103,104,105,106,107,108,109,110,111,112,51,113,114,115,33,34,35,1,116,2,3,5,6,7,117,8,10,12,118,119,120,121,122,123,124,125,126,127,128,129,130,29,131,132,133,52,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,53,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:355","sourceCode":"java.lang.reflect.Type = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:260","sourceCode":"java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()","type":"CtAssignmentImpl"},"failures":[189],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"result":"genericType","bound":"genericType"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[190,26,80,191,90,192,193,194,102,195,196,197,172],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2079","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}","type":"CtForEachImpl"},"failures":[190,26,80,191,90,192,193,194,102,198,199,200,201,202,195,196,197,172],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1106","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)","type":"CtInvocationImpl"},"failures":[153],"status":-1,"name":"delete","type":"adrStmt"},{"position":"org.easymock.internal.Range:44","failures":[203,204,205,206,207,208,36,209,210,211,19,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,55,56,239,189,240,241,242,243,57,58,244,59,60,245,246,247,248,61,62,25,63,64,65,66,67,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,68,69,70,266,71,72,267,73,74,75,76,77,268,269,270,271,272,273,274,275,78,79,276,277,278,279,280,281,190,26,80,27,191,15,81,282,28,82,83,84,283,284,285,286,287,288,289,290,291,85,292,293,294,295,296,297,86,298,87,299,88,89,300,90,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,31,91,192,321,322,323,324,325,326,327,328,92,93,329,94,330,331,332,333,95,334,335,336,337,96,338,339,340,341,342,343,344,345,97,98,346,99,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,100,16,193,101,363,194,102,364,365,366,367,368,369,103,104,198,105,370,371,199,200,106,201,372,373,202,107,374,375,376,377,108,378,379,380,381,382,383,384,109,110,111,112,51,113,385,386,114,387,388,38,389,115,390,391,392,33,34,35,1,116,2,3,4,5,6,7,117,8,10,11,393,12,394,395,118,119,120,121,122,123,124,396,125,126,127,128,129,397,39,40,398,41,130,399,42,43,400,401,44,402,403,404,405,29,131,195,132,133,52,406,30,407,134,135,408,136,20,137,21,138,409,410,139,411,412,413,414,415,416,417,418,140,419,141,420,142,421,422,423,424,425,426,427,428,429,143,430,431,144,432,433,434,435,436,437,438,439,440,145,441,442,443,444,445,146,446,447,448,449,450,451,452,453,454,147,148,455,456,149,457,458,459,460,150,151,461,462,463,464,152,465,466,467,468,469,153,154,470,155,156,471,157,472,473,53,54,474,158,159,160,161,162,475,476,477,163,164,165,166,478,167,168,169,479,480,170,196,171,481,197,172,482,45,46,483,47,173,484,48,49,485,486,50,174,37,487,175,488,489,490,491,492,493,176,177,494,495,178,179,180,181,182,183,496,497,184,185,186,187,188],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.LastControl:92","failures":[1,2,10,464,152,469,153,470,158],"status":-1,"binaryOperator":"((java.util.Stack<org.easymock.IArgumentMatcher>.size()) >= int)","name":"conditionalBoundary","type":"mutation"},{"transplant":{"position":"org.easymock.internal.matchers.Equals:53","sourceCode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:37","sourceCode":"if ((this.java.lang.Object) == null) {\n    return java.lang.Object == null;\n} ","type":"CtIfImpl"},"failures":[77,296],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"o":"actual","this":"actual"}},{"position":"org.easymock.internal.RecordState:327","failures":[284,285,366,367],"status":-1,"name":"returnValue","return":"return false","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:152","sourceCode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:324","sourceCode":"return true","type":"CtReturnImpl"},"failures":[64,65,26],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.ReflectionUtils:117","failures":[55,56,239,85,345,97,98,99,108,109,110,112,51,113,385,114,38,389,115,390,33,35,498,139,413,415,416,140,419,141,142,423,424,426,143,144,145,146,149,163,164,165,166,168,169,176,494,494,495,495,184,185],"status":-1,"binaryOperator":"java.lang.reflect.Method != null","name":"removeConditional","type":"mutation"},{"position":"org.easymock.internal.matchers.Equals:37","failures":[236,237,56,61,62,25,63,64,65,66,67,249,250,251,252,253,68,69,70,71,72,73,74,75,76,77,268,269,270,271,272,78,79,276,190,26,80,27,191,282,28,84,295,296,297,86,298,87,88,89,319,321,322,323,324,325,326,327,328,92,93,329,94,330,331,332,333,95,334,335,336,337,96,338,339,340,341,342,100,193,101,363,194,102,368,369,103,104,198,105,370,371,199,200,106,201,372,373,202,107,374,375,376,377,110,51,115,33,34,1,116,7,117,10,12,394,395,118,119,120,121,122,123,124,125,126,127,128,130,29,131,195,133,52,406,30,408,136,137,21,138,410,140,141,142,147,148,458,459,460,151,152,467,469,153,475,170,196,171,481,197,172,173,174,175,488,490,177,178,179,180,181,182,183,497,184,185,186,187,188],"status":-1,"binaryOperator":"(this.java.lang.Object) == null","name":"negateConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:45","sourceCode":"synchronized(org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) {\n    if ((org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties) == null) {\n        org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties = new org.easymock.internal.EasyMockProperties();\n    } \n}","type":"CtSynchronizedImpl"},"failures":[203,204,205,206,207,208,36,209,210,211,19,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,238,55,56,239,189,240,241,242,243,57,58,244,59,60,245,246,247,248,61,62,25,63,64,65,66,67,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,68,69,70,266,71,72,267,73,74,75,76,77,268,269,270,271,272,273,274,275,78,79,276,277,278,279,280,281,190,26,80,27,191,15,81,282,28,82,83,84,283,284,285,286,287,288,289,290,291,85,292,293,295,296,297,86,298,87,299,88,89,300,90,301,303,304,305,306,307,308,310,311,312,313,314,315,316,317,318,319,320,31,91,192,321,322,323,324,325,326,327,328,92,93,329,94,330,331,332,333,95,334,335,336,337,96,338,339,340,341,342,343,344,345,97,98,346,99,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,100,16,193,101,363,194,102,364,365,366,367,368,369,103,104,198,105,370,371,199,200,106,201,372,373,202,107,374,375,376,377,108,378,379,380,382,383,384,109,110,111,112,51,113,385,386,114,387,388,38,389,115,390,391,392,33,34,35,1,116,2,3,4,5,6,7,117,8,10,11,393,12,394,395,118,119,120,121,122,123,124,396,125,126,127,128,129,397,39,40,398,41,130,399,42,43,400,401,44,402,403,404,405,22,521,522,523,524,23,29,131,195,132,133,52,406,30,407,134,135,408,136,20,137,21,138,409,410,139,411,413,415,416,418,140,419,141,142,421,422,423,424,426,427,428,429,143,430,431,144,432,433,434,435,436,437,438,439,440,145,441,442,443,444,445,146,446,447,448,449,450,451,452,453,454,147,148,455,456,149,457,458,24,459,460,150,151,461,462,463,464,152,465,466,467,468,469,153,154,470,155,156,471,157,472,473,53,54,474,158,159,160,161,162,475,476,477,163,164,165,166,478,167,168,169,479,480,170,196,171,481,197,172,482,45,46,483,47,173,484,48,49,485,486,50,174,37,487,175,488,489,490,491,492,493,176,177,494,495,178,179,180,181,182,183,496,497,184,185,186,187,188],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.RecordState:186","sourceCode":"org.easymock.internal.Result = null","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:129","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[88,137,138,410,179],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2025","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2067","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict()","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mock":"mock","this":"this"}},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.matchers.GreaterThan:39","failures":[54,525],"status":-1,"binaryOperator":"int > 0","name":"conditionalBoundary","type":"mutation"},{"position":"org.easymock.internal.MethodSerializationWrapper:69","failures":[32,33,34,35],"status":-1,"binaryOperator":"java.lang.Class<?> != null","name":"removeConditional","type":"mutation"},{"transplantationPoint":{"position":"org.easymock.internal.matchers.Same:43","sourceCode":"java.lang.StringBuffer.append(\")\")","type":"CtInvocationImpl"},"failures":[526,527,528],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","sourceCode":"return \"geq\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1777","sourceCode":"return null","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.EasyMock:734","failures":[],"status":0,"name":"returnValue","return":"return 0","type":"mutation"},{"position":"org.easymock.internal.MockBuilder:159","failures":[387,414,529,530,425,494,495],"status":-1,"binaryOperator":"(java.lang.reflect.Constructor<T>) == null","name":"negateConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.ErrorMessage:54","sourceCode":"java.lang.StringBuilder.append(\" (+1)\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.ErrorMessage:57","sourceCode":"java.lang.StringBuilder.append(org.easymock.internal.ErrorMessage.getActualCount())","type":"CtInvocationImpl"},"failures":[190,26,80,531,191,81,82,83,16,193,363,194,195,132,134,135,449,450,451,452,196,481,197],"status":-1,"name":"add","type":"adrStmt","variableMapping":{"buffer":"buffer"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:81","sourceCode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:108","sourceCode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))","type":"CtThrowImpl"},"failures":[532],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"methodName":"name"}},{"transplant":{"position":"org.easymock.internal.MocksControl:110","sourceCode":"org.easymock.internal.IMocksControlState.assertRecordState()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[214,87,174,487,175,489,490,491,493,179],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.Range:44","failures":[203,204,205,206,207,208,36,209,210,211,19,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,55,56,239,189,240,241,242,243,57,58,244,59,60,245,246,247,248,61,62,25,63,64,65,66,67,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,68,69,70,266,71,72,267,73,74,75,76,77,268,269,270,271,272,273,274,275,78,79,276,277,278,279,280,281,190,26,80,27,191,15,81,282,28,82,83,84,283,284,285,286,287,288,289,290,291,85,292,293,294,295,296,297,86,298,87,299,88,89,300,90,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,31,91,192,321,322,323,324,325,326,327,328,92,93,329,94,330,331,332,333,95,334,335,336,337,96,338,339,340,341,342,343,344,345,97,98,346,99,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,100,16,193,101,363,194,102,364,365,366,367,368,369,103,104,198,105,370,371,199,200,106,201,372,373,202,107,374,375,376,377,108,378,379,380,381,382,383,384,109,110,111,112,51,113,385,386,114,387,388,38,389,115,390,391,392,33,34,35,1,116,2,3,4,5,6,7,117,8,10,11,393,12,394,395,118,119,120,121,122,123,124,396,125,126,127,128,129,397,39,40,398,41,130,399,42,43,400,401,44,402,403,404,405,29,131,195,132,133,52,406,30,407,134,135,408,136,20,137,21,138,409,410,139,411,412,413,414,415,416,417,418,140,419,141,420,142,421,422,423,424,425,426,427,428,429,143,430,431,144,432,433,434,435,436,437,438,439,440,145,441,442,443,444,445,146,446,447,448,449,450,451,452,453,454,147,148,455,456,149,457,458,459,460,150,151,461,462,463,464,152,465,466,467,468,469,153,154,470,155,156,471,157,472,473,53,54,474,158,159,160,161,162,475,476,477,163,164,165,166,478,167,168,169,479,480,170,196,171,481,197,172,482,45,46,483,47,173,484,48,49,485,486,50,174,37,487,175,488,489,490,491,492,493,176,177,494,495,178,179,180,181,182,183,496,497,184,185,186,187,188],"status":-1,"binaryOperator":"(int >= 1)","name":"conditionalBoundary","type":"mutation"},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":152,"org.easymock.tests2.UsageTest.argumentsOrdered":135,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":27,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":127,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateAssignmentPossible":484,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubDelegateToWithoutMethodCall":19,"org.easymock.tests2.UsageTest.mixingOrderedAndUnordered":52,"org.easymock.samples.AnnotatedMockWithRuleTest.addDocument":177,"org.easymock.tests2.DelegateToTest.testReturnException":137,"org.easymock.tests.UsageExpectAndDefaultThrowTest.longType":322,"org.easymock.tests.MockingTest.testPartialClassMocking":97,"org.easymock.tests.MockClassControlTest.testToString":313,"org.easymock.tests2.NameTest.shouldThrowIllegalArgumentExceptionIfNameIsNoValidJavaIdentifier":448,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":274,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":392,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectDefaultReturnValueWithoutMethodCall":220,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":435,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":144,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndCount":368,"org.easymock.tests.ErrorMessageTest.testAppendTo_matchingNone":531,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":148,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultThrowable":520,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":154,"org.easymock.tests2.UsageTest.wrongArguments":132,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":295,"org.easymock.tests2.EasyMockRuleTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":44,"org.easymock.tests.NiceMockControlTest.defaultReturnValueDouble":288,"org.easymock.samples.ExampleTest.answerVsDelegate":179,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":233,"org.easymock.tests2.UsageConstraintsTest.testNull":467,"org.easymock.tests.MockingTest.testNiceInterfaceMocking":348,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":112,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":126,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":318,"org.easymock.tests2.CaptureTest.testPrimitive":3,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":298,"org.easymock.tests.UsageTest.moreThanOneArgument":191,"org.easymock.tests.UsageExpectAndThrowTest.floatAndRange":377,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":111,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":251,"org.easymock.tests.UsageTest.argumentsOrdered":83,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMaximumCount":277,"org.easymock.tests.UsageVarargTest.varargIntAccepted":70,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultVoidCallableWithoutMethodCall":216,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":268,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":413,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":486,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":380,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":419,"org.easymock.tests.RecordStateMethodCallMissingTest.setDelegateToWithoutMethodCall":205,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":272,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndReturnObjectWithMinMax":504,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":130,"org.easymock.tests.ReplayStateInvalidUsageTest.times":358,"org.easymock.tests2.DependencyTest.testClassMocking":453,"org.easymock.tests2.AnswerTest.answer":174,"org.easymock.tests2.UsageConstraintsTest.equalsMissing":470,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnyTimesWithoutMethodCall":218,"org.easymock.tests2.NiceMockTest.defaultReturnValueObject":405,"org.easymock.tests2.CaptureTest.testAnd":1,"org.easymock.tests.MockTypeTest.fromEasyMockControlWithName":230,"org.easymock.tests2.UsageTest.strictResetToDefault":131,"org.easymock.tests2.MockBuilderTest.testWithConstructorConstructorArgs":417,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":38,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":250,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":122,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":247,"org.easymock.tests2.DelegateToTest.testDelegate":410,"org.easymock.tests.RecordStateInvalidRangeTest.setMinimumBiggerThanMaximum":281,"org.easymock.tests.ReplayStateInvalidCallsTest.makeThreadSafe":503,"org.easymock.tests.UsageExpectAndThrowTest.doubleType":107,"org.easymock.tests.LimitationsTest.mockFinalMethod":292,"org.easymock.tests.UsageExpectAndDefaultThrowTest.throwableAndDefaultThrowable":325,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.longReturningValue":259,"org.easymock.tests2.DependencyTest.testClassMockingSupport":454,"org.easymock.tests.RecordStateInvalidStateChangeTest.secondCallWithoutReturnValue":31,"org.easymock.tests2.CaptureTest.testCapture1_2446744":4,"org.easymock.tests2.EasyMockClassExtensionTest.testDisablingClassMocking":386,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndRange":373,"org.easymock.tests2.NiceMockTest.defaultReturnValueFloat":403,"org.easymock.tests.UsageThrowableTest.throwError":61,"org.easymock.tests.ReplayStateInvalidUsageTest.asStub":352,"org.easymock.tests.MockTypeTest.fromEasyMockClassWithName":232,"org.easymock.tests2.EasyMockRunnerTest.shouldNotAssignUnqualifiedMockWhereQualifiedMockAssigned":50,"org.easymock.tests.InvocationTest.testShouldDisplayMocksToStringIfValidJavaIdentifier":294,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":253,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":447,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultVoidCallable":507,"org.easymock.samples.PartialClassMockTest.testGetArea":176,"org.easymock.tests.MockingTest.testInterfaceMocking":346,"org.easymock.tests.ReplayStateInvalidUsageTest.makeThreadSafe":353,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":269,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":226,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":436,"org.easymock.tests2.UsageTest.niceToStrict":133,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":265,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndRange":369,"org.easymock.tests2.ThreadingTest.testChangeDefault":24,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongDefaultReturnValueWithoutMethodCall":203,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":140,"org.easymock.tests2.MockBuilderTest.testCreateMock":423,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":443,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":43,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":17,"org.easymock.tests.UsageExpectAndThrowTest.longAndMinMax":200,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":123,"org.easymock.tests.MockTypeTest.fromEasyMockSupportControlWithName":229,"org.easymock.tests.RecordStateInvalidThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":285,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtVerify":240,"org.easymock.tests.NiceMockControlTest.defaultReturnValueBoolean":286,"org.easymock.tests.UsageOverloadedMethodTest.overloading":79,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":445,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":440,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":472,"org.easymock.tests.StacktraceTest.assertFillWhenThrowingAnswer":89,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":78,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":334,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":157,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":8,"org.easymock.tests.UsageVarargTest.varargAcceptedIfArrayIsGiven":266,"org.easymock.tests2.EasyMockSupportClassTest.testAll":143,"org.easymock.tests.MockClassControlTest.testEquals":317,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":56,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithString":528,"org.easymock.tests.UsageExpectAndThrowTest.longAndRange":375,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Superclass":498,"org.easymock.tests2.MockBuilderTest.testWithArgs_WithoutConstructor":530,"org.easymock.tests2.NiceMockTest.defaultReturnValueDouble":404,"org.easymock.tests2.CaptureTest.testCaptureAll":116,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.shortReturningValue":257,"org.easymock.tests.MockNameTest.defaultName":254,"org.easymock.tests2.UsageConstraintsTest.testMatches":473,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":252,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubReturn":350,"org.easymock.samples.ExampleTest.voteForRemovals":183,"org.easymock.tests.UsageVarargTest.allKinds":77,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":190,"org.easymock.samples.BasicClassMockTest.testPrintContent":185,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.intReturningValue":258,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":66,"org.easymock.tests2.UsageStrictMockTest.unorderedCallsFailure":480,"org.easymock.tests2.DelegateToTest.nullDelegationNotAllowed":409,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":48,"org.easymock.tests.UsageExpectAndDefaultThrowTest.doubleType":326,"org.easymock.tests2.UsageConstraintsTest.greaterThan":54,"org.easymock.tests.DefaultClassInstantiatorTest.privateConstructorLimitation":309,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":430,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":246,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":390,"org.easymock.tests.ReplayStateInvalidCallsTest.checkOrder":508,"org.easymock.samples.ExampleTest.voteForRemoval":180,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":310,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":459,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":391,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClassWithName":234,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_ProxyButNotMock":381,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":385,"org.easymock.tests.ReplayStateInvalidCallsTest.setDefaultReturnValue":500,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":108,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":29,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":422,"org.easymock.tests.RecordStateMethodCallMissingTest.setDefaultThrowableWithoutMethodCall":209,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":120,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":25,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":428,"org.easymock.tests.UsageExpectAndDefaultThrowTest.floatType":321,"org.easymock.tests2.CaptureTest.testCaptureFirst":12,"org.easymock.tests2.DelegateToTest.nullStubDelegationNotAllowed":20,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":36,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":121,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":136,"org.easymock.tests.StacktraceTest.assertReplayStateNoFillInStacktraceWhenExceptionNotFromEasyMock":301,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":331,"org.easymock.tests2.CaptureTest.testCapture2_2446744":393,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":150,"org.easymock.tests2.UsageTest.moreThanOneArgument":195,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":424,"org.easymock.tests.RecordStateMethodCallMissingTest.setOnceWithoutMethodCall":219,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":76,"org.easymock.tests.GenericTest.testBridgedEquals":189,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallFailsAtSecondCall":59,"org.easymock.tests.UsageExpectAndReturnTest.longType":93,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":118,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.byteReturningValue":255,"org.easymock.tests.UsageExpectAndThrowTest.floatAndCount":376,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":161,"org.easymock.tests.RecordStateInvalidDefaultReturnValueTest.setInvalidStubReturnValue":293,"org.easymock.tests.UsageExpectAndThrowTest.longAndCount":374,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":249,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwWrongCheckedException":366,"org.easymock.tests.UsageCallCountTest.tooManyCalls":60,"org.easymock.tests.UsageCallCountTest.noUpperLimitWithoutCallCountSet":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":444,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":332,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableStaticField":401,"org.easymock.tests.UsageExpectAndThrowTest.booleanType":105,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":65,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":164,"org.easymock.tests.MockingTest.testNiceClassMocking":349,"org.easymock.tests.MockingTest.testClassMocking":344,"org.easymock.tests2.UsageConstraintsTest.testContains":471,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsPassesWithNoCalls":241,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":149,"org.easymock.tests2.UsageConstraintsTest.testFind":466,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":276,"org.easymock.tests.MockTypeTest.fromEasyMockClass":231,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":493,"org.easymock.tests.UsageStrictMockTest.unorderedCallsFailure":362,"org.easymock.tests.UsageExpectAndReturnTest.object":95,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":114,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":400,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":125,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":72,"org.easymock.tests.ObjectMethodsTest.equalsAfterActivation":263,"org.easymock.tests.UsageTest.exactCallCountByLastCall":84,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":319,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatDefaultReturnValueWithoutMethodCall":208,"org.easymock.tests.RecordStateInvalidUsageTest.openVoidCallCountWithoutMethodCall":273,"org.easymock.tests.RecordStateInvalidRangeTest.setOpenCallCountTwice":278,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":411,"org.easymock.tests.UsageVarargTest.varargObjectAccepted":68,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":338,"org.easymock.tests.StacktraceTest.assertNoFillWhenDelegatingAnswer":88,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":45,"org.easymock.tests.MockClassControlTest.testHashCode":316,"org.easymock.tests2.EasyMockSupportTest.testVerify":129,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":438,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithChar":526,"org.easymock.tests.RecordStateInvalidRangeTest.setCloseCallAfterOpenOne":279,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":87,"org.easymock.tests.RecordStateInvalidThrowableTest.throwWrongCheckedException":284,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":402,"org.easymock.tests2.UsageMatchersTest.additionalMatchersFailAtReplay":461,"org.easymock.tests.UsageVarargTest.varargCharAccepted":71,"org.easymock.tests.DefaultClassInstantiatorTest.constructorWithCodeLimitation":302,"org.easymock.tests2.CaptureTest.testCaptureMultiple":0,"org.easymock.tests2.UsageStrictMockTest.orderedCallsSucces":170,"org.easymock.tests.RecordStateMethodCallMissingTest.setObjectReturnValueWithoutMethodCall":224,"org.easymock.tests2.UsageTest.openCallCountByLastCall":406,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":128,"org.easymock.tests.DefaultClassInstantiatorTest.object":303,"org.easymock.tests.RecordStateInvalidThrowableTest.throwNull":283,"org.easymock.tests.ObjectMethodsTest.toStringAfterActivation":261,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":439,"org.easymock.tests.UsageExpectAndThrowTest.objectAndRange":371,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":63,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateQualifiers":398,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectMocksWhereTypeCompatible":482,"org.easymock.tests.ReplayStateInvalidCallsTest.replay":506,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":389,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":315,"org.easymock.tests.UsageExpectAndThrowTest.objectAndCount":370,"org.easymock.tests.ReplayStateInvalidCallsTest.times":512,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":339,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwNull":365,"org.easymock.tests.ReplayStateInvalidCallsTest.andReturn":513,"org.easymock.tests2.ConstraintsToStringTest.sameToStringWithObject":527,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":146,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":314,"org.easymock.tests2.UsageTest.resumeIfFailure":408,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":228,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":379,"org.easymock.tests.UsageExpectAndDefaultThrowTest.object":324,"org.easymock.tests2.StubTest.stubWithReturnValue":395,"org.easymock.tests2.MockBuilderTest.testWithConstructorWithArgs":420,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":162,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":333,"org.easymock.tests2.SerializationTest.testAllMockedMethod":35,"org.easymock.tests.RecordStateMethodCallMissingTest.timesWithoutReturnValue":217,"org.easymock.samples.SupportTest.voteForRemovals":188,"org.easymock.tests2.ConstraintsToStringTest.equalsToStringWithArray":18,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":238,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenDuplicateQualifiers":483,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndCount":372,"org.easymock.tests.MethodSerializationWrapperTest.testGetMethod":32,"org.easymock.tests.RecordStateMethodCallMissingTest.asStubWithNonVoidMethod":223,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":37,"org.easymock.tests.UsageExpectAndThrowTest.object":106,"org.easymock.tests.RecordStateInvalidUsageTest.notAMockPassedToExpect":275,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":159,"org.easymock.tests2.DelegateToTest.testWrongClass":138,"org.easymock.tests.ReplayStateInvalidCallsTest.andAnswer":510,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":236,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":237,"org.easymock.samples.ConstructorCalledMockTest.testTax":494,"org.easymock.tests.UsageStrictMockTest.range":363,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Interface":383,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":396,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":163,"org.easymock.tests.UsageExpectAndThrowTest.booleanAndMinMax":201,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":141,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":427,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":82,"org.easymock.tests.ReplayStateInvalidUsageTest.andStubThrow":360,"org.easymock.tests.NiceMockControlTest.defaultReturnValueFloat":287,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Array":13,"org.easymock.tests.ReplayStateInvalidCallsTest.asStub":502,"org.easymock.tests2.CaptureTest.testCaptureNone":117,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":227,"org.easymock.tests2.EasyMockPropertiesTest.testNoThreadContextClassLoader":521,"org.easymock.tests.UsageUnorderedTest.message":342,"org.easymock.tests.UsageVerifyTest.twoReturns":80,"org.easymock.tests.UsageVarargTest.varargByteAccepted":75,"org.easymock.tests2.ThreadingTest.testThreadSafe":458,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":441,"org.easymock.tests.UsageCallCountTest.correctNumberOfCalls":58,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":184,"org.easymock.tests.ObjectMethodsTest.toStringBeforeActivation":264,"org.easymock.tests2.CaptureTest.testCapture_2617107":2,"org.easymock.tests.RecordStateInvalidStateChangeTest.verifyWithoutActivation":192,"org.easymock.tests.UsageDefaultReturnValueTest.defaultVoidCallable":86,"org.easymock.tests.RecordStateMethodCallMissingTest.setLongReturnValueWithoutMethodCall":221,"org.easymock.tests2.UsageConstraintsTest.any":155,"org.easymock.tests2.StubTest.stub":394,"org.easymock.tests.ReplayStateInvalidUsageTest.anyTimes":357,"org.easymock.tests.RecordStateInvalidDefaultThrowableTest.throwCheckedExceptionWhereNoCheckedExceptionIsThrown":367,"org.easymock.tests.UsageExpectAndThrowTest.longType":104,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleReturnValueWithoutMethodCall":222,"org.easymock.tests.UsageExpectAndDefaultThrowTest.booleanType":323,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":307,"org.easymock.tests.ReplayStateInvalidUsageTest.checkOrder":356,"org.easymock.tests2.UsageStrictMockTest.tooManyCallsFailure":171,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":173,"org.easymock.tests2.SerializationTest.testClass":33,"org.easymock.tests.LimitationsTest.mockNativeMethod":85,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":239,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":341,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToNamedFields":40,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubAnswer":518,"org.easymock.tests2.UsageStrictMockTest.tooFewCallsFailure":172,"org.easymock.tests2.EasyMockPropertiesTest.testSetProperty":522,"org.easymock.tests2.NameTest.nameForMocksControl":452,"org.easymock.tests2.MockedExceptionTest.testMockedException":456,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenUnsatisfiedQualifier":41,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":431,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":28,"org.easymock.tests2.CallbackAndArgumentsTest.currentArgumentsFailsOutsideCallbacks":492,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":99,"org.easymock.tests.UsageExpectAndThrowTest.floatAndMinMax":198,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":109,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":142,"org.easymock.tests.MockingTest.testNicePartialClassMocking":98,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":113,"org.easymock.tests2.EasyMockRuleTest.shouldInjectMocksWhereTypeCompatible":397,"org.easymock.tests2.CaptureTest.testCaptureLast":7,"org.easymock.tests.RecordStateInvalidStateChangeTest.activateWithoutReturnValue":91,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubThrow":517,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":169,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":153,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":160,"org.easymock.tests.MockingTest.testTwoMocks":345,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultThrowable":514,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":479,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":327,"org.easymock.tests.UsageExpectAndThrowTest.doubleAndMinMax":199,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":134,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":476,"org.easymock.tests2.EasyMockPropertiesTest.testGetInstance":23,"org.easymock.samples.ExampleTest.removeNonExistingDocument":496,"org.easymock.tests2.EasyMockRuleTest.shouldErrorForUnmatchedQualifierWhenTypeIncompatibleQualifier":42,"org.easymock.tests.UsageStrictMockTest.differentMethods":194,"org.easymock.tests.ReplayStateInvalidUsageTest.replay":354,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToNamedFields":46,"org.easymock.tests2.EasyMockPropertiesTest.testNoEasymockPropertiesFile":524,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":305,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":460,"org.easymock.tests2.MockBuilderTest.testCreateMockString":426,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":311,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":432,"org.easymock.tests.UsageExpectAndThrowTest.floatType":103,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":53,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":429,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":175,"org.easymock.tests2.PartialMockingTest.testPartialMock_ExceptionInConstructor":412,"org.easymock.tests.UsageVerifyTest.twoThrows":26,"org.easymock.tests.StacktraceTest.assertReplayNoFillInStacktraceWhenExceptionNotFromEasyMock":299,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":145,"org.easymock.samples.ExampleTest.voteAgainstRemoval":181,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanReturnValueWithoutMethodCall":212,"org.easymock.tests.RecordStateInvalidReturnValueTest.setReturnValueForVoidMethod":225,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":115,"org.easymock.tests.LimitationsTest.privateConstructor":291,"org.easymock.tests2.UsageConstraintsTest.testNotNull":475,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":455,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":67,"org.easymock.tests2.UsageTest.defaultResetToNice":407,"org.easymock.samples.ExampleTest.voteAgainstRemovals":178,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":96,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesWithoutMethodCall":213,"org.easymock.tests2.EasyMockRuleTest.shouldInjectQualifiedMocksToAllMatchingTestSubjects":39,"org.easymock.tests.UsageVarargTest.differentLength":267,"org.easymock.tests2.CallbackTest.callback":490,"org.easymock.tests2.UsageConstraintsTest.equals":465,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":387,"org.easymock.tests.UsageTest.openCallCountByLastCall":282,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":462,"org.easymock.tests.UsageDefaultReturnValueTest.defaultThrowable":297,"org.easymock.tests.UsageCallCountTest.tooFewCalls":243,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":166,"org.easymock.tests.NiceMockControlTest.defaultReturnValueObject":289,"org.easymock.tests2.EasyMockPropertiesTest.testGetProperty":523,"org.easymock.tests.UsageThrowableTest.throwCheckedException":64,"org.easymock.tests.ArgumentToStringTest.testAppendArgument_Full":14,"org.easymock.tests.MockingTest.testStrictClassMocking":343,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":168,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":320,"org.easymock.tests2.EasyMockRuleTest.shouldErrorWhenDuplicateAssignmentPossible":399,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":165,"org.easymock.tests.ReplayStateInvalidUsageTest.checkIsUsedInOneThread":359,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":167,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":489,"org.easymock.tests.ObjectMethodsTest.testHashCode":262,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubDelegateTo":516,"org.easymock.tests2.NameTest.nameForNiceMock":451,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":151,"org.easymock.tests.ReplayStateInvalidCallsTest.callback":511,"org.easymock.tests2.DependencyTest.testInterfaceMocking":147,"org.easymock.samples.ExampleTest.addDocument":182,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":442,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":446,"org.easymock.tests2.DelegateToTest.testStubDelegate":21,"org.easymock.tests2.AnswerTest.stubAnswer":488,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":193,"org.easymock.tests2.MockBuilderTest.testCreateMock_ConstructorWithoutArgs":421,"org.easymock.tests.UsageVarargTest.varargLongAccepted":74,"org.easymock.tests.UsageStrictMockTest.tooFewCallsFailure":102,"org.easymock.tests.RecordStateMethodCallMissingTest.setFloatReturnValueWithoutMethodCall":211,"org.easymock.tests.UsageExpectAndReturnTest.floatType":92,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":340,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":139,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":495,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorForUnmatchedQualifierWhenUnassignableFinalField":485,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":474,"org.easymock.tests.UsageThrowableTest.noUpperLimit":62,"org.easymock.tests.StacktraceTest.assertRecordStateNoFillInStacktraceWhenExceptionNotFromEasyMock":300,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":463,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":378,"org.easymock.tests2.SerializationTest.test":34,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":5,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":304,"org.easymock.tests2.UsageConstraintsTest.testSame":468,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":328,"org.easymock.samples.SupportTest.addDocument":187,"org.easymock.tests2.MocksControlTest.testCreateMocksControlFromOldMockType":478,"org.easymock.tests.ReplayStateInvalidCallsTest.andDelegateTo":501,"org.easymock.tests.ReplayStateInvalidUsageTest.setVoidCallable":355,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":433,"org.easymock.tests.GenericTest.testPackageScope":55,"org.easymock.tests.RecordStateInvalidRangeTest.setIllegalMinimumCount":280,"org.easymock.tests.RecordStateMethodCallMissingTest.setBooleanDefaultReturnValueWithoutMethodCall":207,"org.easymock.tests2.EasyMockRunnerTest.shouldInjectQualifiedMocksToTestSubjectSuperClass":49,"org.easymock.tests.MockingTest.testStrictInterfaceMocking":347,"org.easymock.tests.ReplayStateInvalidCallsTest.andStubReturn":499,"org.easymock.tests2.NameTest.nameForMock":449,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":335,"org.easymock.tests2.MockBuilderTest.testWithConstructorParams":425,"org.easymock.tests2.UsageStrictMockTest.differentMethods":197,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":388,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":329,"org.easymock.tests.UsageExpectAndThrowTest.objectAndMinMax":202,"org.easymock.tests.ObjectMethodsTest.equalsBeforeActivation":260,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":248,"org.easymock.tests2.MockedExceptionTest.testRealException":457,"org.easymock.tests.MockTypeTest.fromEasyMockSupportClass":235,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMock":384,"org.easymock.tests.RecordStateMethodCallMissingTest.setDoubleDefaultReturnValueWithoutMethodCall":215,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":196,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":214,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":296,"org.easymock.tests.ReplayStateInvalidUsageTest.createMock":361,"org.easymock.tests2.NameTest.nameForStrictMock":450,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":418,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":491,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":51,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":382,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":158,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":306,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":415,"org.easymock.tests2.UsageStrictMockTest.range":481,"org.easymock.tests.ReplayStateInvalidCallsTest.andThrow":505,"org.easymock.tests2.UsageConstraintsTest.lessThan":477,"org.easymock.tests2.ReflectionUtilsTest.testFindMethod_Ambiguous":532,"org.easymock.tests2.EasyMockRunnerTest.shouldErrorWhenUnsatisfiedQualifier":47,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":119,"org.easymock.tests.RecordStateMethodCallMissingTest.setTimesMinMaxWithoutMethodCall":210,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":437,"org.easymock.tests2.CaptureTest.testCaptureRightOne":10,"org.easymock.tests2.EasyMockPropertiesTest.testBadPropertiesFile":22,"org.easymock.tests2.UsageConstraintsTest.testOr":469,"org.easymock.tests.UsageRangeTest.combination":245,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":110,"org.easymock.tests.UsageTest.wrongArguments":81,"org.easymock.tests2.MockBuilderTest.testWithConstructor":414,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":434,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":312,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":94,"org.easymock.tests.RecordStateMethodCallMissingTest.setAtLeastOnceWithoutMethodCall":204,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":336,"org.easymock.tests.UsageVarargTest.varargShortAccepted":73,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":308,"org.easymock.tests.UsageCallCountTest.mockWithNoExpectedCallsFailsAtFirstCall":244,"org.easymock.tests.ReplayStateInvalidCallsTest.expectAndThrowLongWithMinMax":519,"org.easymock.tests2.UsageConstraintsTest.cmpTo":156,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":487,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultReturnValue":509,"org.easymock.tests.RecordStateMethodCallMissingTest.setThrowableWithoutMethodCall":206,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":30,"org.easymock.tests2.CaptureTest.testCaptureFromStub":11,"org.easymock.tests.ReplayStateInvalidUsageTest.createMockWithName":351,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":416,"org.easymock.tests.UsageTest.unexpectedCallWithArray":15,"org.easymock.tests.ReplayStateInvalidCallsTest.defaultVoidCallable":515,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":16,"org.easymock.tests.UsageCallCountTest.mockWithOneExpectedCallPassesWithOneCall":57,"org.easymock.tests2.MockBuilderTest.testWithArgsTwice":529,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":337,"org.easymock.tests2.CaptureTest.testCapture":9,"org.easymock.tests2.UsageConstraintsTest.constraints":464,"org.easymock.tests.UsageStrictMockTest.tooManyCallsFailure":101,"org.easymock.samples.ExampleTest.addAndChangeDocument":497,"org.easymock.tests.UsageStrictMockTest.testVerify":364,"org.easymock.samples.AnnotatedMockWithRunnerTest.addDocument":186,"org.easymock.tests.UsageStrictMockTest.orderedCallsSucces":100,"org.easymock.tests2.CompareToTest.testGreateThan":525,"org.easymock.tests.NiceMockControlLongCompatibleReturnValueTest.charReturningValue":256,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":6,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":270,"org.easymock.tests.LimitationsTest.abstractClass":290,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":330,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":90,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":271,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":124,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":69}}]
