[{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","sourceCode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.ReflectionUtils:117","sourceCode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} ","type":"CtIfImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"method":"result"}},{"transplant":{"position":"org.easymock.internal.BridgeMethodResolver:353","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][0]","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:322","sourceCode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"bounds":"actualTypeArguments"}},{"transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","sourceCode":"java.io.DataOutputStream.writeShort(0)","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:149","sourceCode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)","type":"CtInvocationImpl"},"failures":[0,1,2],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:144","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:137","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:40","sourceCode":"this.org.easymock.internal.IMocksBehavior.checkThreadSafety()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:183","sourceCode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplant":{"position":"org.easymock.internal.MocksControl:137","sourceCode":"return org.easymock.internal.IProxyFactory","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:147","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory()","type":"CtReturnImpl"},"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,74,75,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,0,104,105,106,107,108,109,110,111],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"cached":"org.easymock.internal.MocksControl.classProxyFactory"}},{"transplant":{"position":"org.easymock.internal.matchers.And:43","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","sourceCode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")","type":"CtReturnImpl"},"failures":[0,2],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ArgumentToString:67","sourceCode":"final java.lang.StringBuffer java.lang.StringBuffer = new java.lang.StringBuffer()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:102","sourceCode":"org.easymock.internal.Result = org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object)","type":"CtAssignmentImpl"},"failures":[112,113,4,7,9,10,13,114,115,116,117,118,119,120,121,122,123,124,125,15,126,17,18,127,19,20,21,23,27,28,29,32,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,41,44,54,60,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,65,66,67,68,189,69,70,73,190,76,191,192,193,194,195,196,197,198,199,200,201,202,203,87,89,204,205,206,207,208,209,210,96,97,98,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,108,246,247,248,249,250,251,252],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:2024","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}","type":"CtForEachImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:2066","sourceCode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}","type":"CtForEachImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"mocks":"mocks","this":"this"}},{"transplant":{"position":"org.easymock.internal.MocksControl:221","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}","type":"CtTryImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:276","sourceCode":"org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>)","type":"CtInvocationImpl"},"failures":[112,253,254,255,256,257,258,259,260,261],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.RecordState:115","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")","type":"CtInvocationImpl"},"failures":[261],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.Capture:132","sourceCode":"return \"Nothing captured yet\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.LessOrEqual:34","sourceCode":"return \"leq\"","type":"CtReturnImpl"},"failures":[262],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:104","sourceCode":"return org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:122","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)","type":"CtReturnImpl"},"failures":[29,31,263],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"toMock":"toMock","this":"this"}},{"transplant":{"position":"org.easymock.internal.ReplayState:73","sourceCode":"this.org.easymock.internal.IMocksBehavior.verify()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:139","sourceCode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(java.lang.Object))","type":"CtInvocationImpl"},"failures":[130,142,143,146,147,148,149,154,156,157,159,160,166,167,168,264,190,74,75,196,265,266,267,268,269,199,200,201,202,203,211,243,244,245,251,252],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"behavior":"behavior"}},{"transplantationPoint":{"position":"org.easymock.EasyMock:1554","sourceCode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(short))","type":"CtInvocationImpl"},"failures":[145,150,161],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.EasyMockProperties:115","sourceCode":"if (!(java.lang.String.startsWith(java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + java.lang.String) + \"\\\"\"));\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.InjectionPlan:52","sourceCode":"org.easymock.internal.InjectionPlan.blockDuplicateQualifiers(java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"org.easymock.internal.EasyMockProperties.PREFIX":"qualifier","key":"qualifier"}},{"transplant":{"position":"org.easymock.EasyMock:1372","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:74","sourceCode":"java.lang.Object[][int] = java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int)","type":"CtAssignmentImpl"},"failures":[270,271,272,273,274,275,276,277,278],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:61","sourceCode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(org.easymock.internal.matchers.Equals.getExpected(), java.lang.StringBuffer)","type":"CtInvocationImpl"},"failures":[279,280],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:258","sourceCode":"org.easymock.internal.IMocksControlState.andReturn(java.lang.Object)","type":"CtInvocationImpl"},"failures":[113,4,7,9,10,13,114,115,116,117,118,119,120,121,122,123,124,125,15,126,17,18,127,19,20,21,23,27,28,29,32,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,41,44,54,60,169,170,171,172,173,174,175,176,177,179,180,181,182,183,184,185,186,188,65,66,67,68,189,69,70,73,190,76,191,192,193,194,195,196,198,199,200,201,202,203,89,91,204,205,206,207,208,209,210,96,97,98,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,281,282,234,235,236,237,238,239,240,241,242,243,244,245,108,283,246,247,248,249,250,251,252],"status":-1,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.ClassProxyFactory:208","sourceCode":"final java.lang.InstantiationException java.lang.InstantiationException","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:56","sourceCode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)","type":"CtAssignmentImpl"},"failures":[3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,26,27,28,29,31,32,41,44,54,60,65,66,67,68,69,70,73,74,74,75,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,95,96,97,98,108,284,110,111],"status":-1,"name":"replaceRandom","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:318","sourceCode":"return true","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Invocation:139","sourceCode":"return java.lang.Class<?>[][int].isPrimitive()","type":"CtReturnImpl"},"failures":[147,148,152,153,158,159,164,166,167,178,179,180,285,286,184,185,287],"status":-1,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.EasyMock:1458","sourceCode":"org.easymock.internal.LastControl.reportNot()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:1332","sourceCode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"this":"this"}},{"position":"org.easymock.internal.MockBuilder:229","failures":[44],"status":-1,"binaryOperator":"(org.easymock.EasyMockSupport) == null","name":"removeConditional","type":"mutation"},{"transplant":{"position":"org.easymock.internal.LastControl:37","sourceCode":"new java.lang.ThreadLocal<java.util.Stack<org.easymock.internal.Invocation>>()","type":"CtNewClassImpl"},"transplantationPoint":{"position":"org.easymock.internal.MockBuilder:98","sourceCode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"transplantationPoint":{"position":"org.easymock.internal.MocksControl:105","sourceCode":"if ((java.lang.Class<T>.isInterface()) && (java.lang.reflect.Method[] != null)) {\n    throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\");\n} ","type":"CtIfImpl"},"failures":[288],"status":-1,"name":"delete","type":"adrStmt"},{"transplant":{"position":"org.easymock.internal.matchers.Captures:47","sourceCode":"this.T = T","type":"CtAssignmentImpl"},"transplantationPoint":{"position":"org.easymock.internal.matchers.Captures:57","sourceCode":"org.easymock.Capture<T>.setValue(T)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"add","type":"adrStmt","variableMapping":{"potentialValue":"potentialValue"}},{"transplant":{"position":"org.easymock.internal.MocksControl:212","sourceCode":"this.org.easymock.internal.IMocksControlState.replay()","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:309","sourceCode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}","type":"CtTryImpl"},"failures":[289,113,255,290],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{"state":"state"}},{"transplant":{"position":"org.easymock.EasyMock:392","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.Class<T>, java.lang.reflect.Method[])","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.EasyMock:281","sourceCode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])","type":"CtReturnImpl"},"failures":[29],"status":-1,"name":"replaceReaction","type":"adrStmt","variableMapping":{}},{"position":"org.easymock.internal.BridgeMethodResolver:321","inlineConstant":"int int = 0","failures":[],"status":0,"name":"inlineConstant","type":"mutation"},{"transplant":{"position":"org.easymock.internal.RecordState:251","sourceCode":"java.lang.Class<?> java.lang.Class<?> = this.org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:309","sourceCode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"replace","type":"adrStmt","variableMapping":{"lastInvocation":"lastInvocation"}},{"transplant":{"position":"org.easymock.internal.MockBuilder:164","sourceCode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")","type":"CtThrowImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:279","sourceCode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))","type":"CtThrowImpl"},"failures":[253,261],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.MocksControl:147","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.ClassProxyFactory()","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.MocksControl:142","sourceCode":"return org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory = new org.easymock.internal.AndroidClassProxyFactory()","type":"CtReturnImpl"},"failures":[],"status":0,"name":"replaceWittgenstein","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:124","sourceCode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")","type":"CtInvocationImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:118","sourceCode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)","type":"CtInvocationImpl"},"failures":[],"status":0,"name":"addReaction","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.matchers.LessThan:34","sourceCode":"return \"lt\"","type":"CtReturnImpl"},"transplantationPoint":{"position":"org.easymock.internal.Range:66","sourceCode":"return \"\" + (int)","type":"CtReturnImpl"},"failures":[130,132,135,292,293,294,295,263,296,297,280,211,213,235,298,299,300,301,302,250],"status":-1,"name":"replace","type":"adrStmt","variableMapping":{}},{"transplant":{"position":"org.easymock.internal.RecordState:136","sourceCode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} ","type":"CtIfImpl"},"transplantationPoint":{"position":"org.easymock.internal.RecordState:320","sourceCode":"final java.lang.Class<?>[] java.lang.Class<?>[] = org.easymock.internal.ExpectedInvocation.getMethod().getExceptionTypes()","type":"CtLocalVariableImpl"},"failures":[],"status":0,"name":"addRandom","type":"adrStmt","variableMapping":{}},{"failureDictionary":{"org.easymock.tests2.UsageConstraintsTest.orOverloaded":145,"org.easymock.tests2.UsageTest.argumentsOrdered":294,"org.easymock.tests.UsageTest.exactCallCountByLastThrowable":234,"org.easymock.tests2.EasyMockSupportTest.testCreateMock":124,"org.easymock.tests2.StubTest.stubWithReturnValue":190,"org.easymock.tests.UsageExpectAndReturnTest.longAndMinMax":223,"org.easymock.tests2.UsageConstraintsTest.lessOrEqualOverloaded":165,"org.easymock.tests2.SerializationTest.testAllMockedMethod":16,"org.easymock.tests.MockingTest.testPartialClassMocking":96,"org.easymock.samples.SupportTest.voteForRemovals":191,"org.easymock.tests.GenericTest.testPartialMockBridgeMethodAreUnmocked":88,"org.easymock.tests.MockClassControlTest.testToString":81,"org.easymock.tests.RecordStateInvalidUsageTest.setWrongReturnValueBoolean":283,"org.easymock.tests2.EasyMockClassExtensionTest.testNamedMock":31,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTConstructorArgsMethodArray":48,"org.easymock.tests2.EasyMockSupportClassTest.testAllMockBuilderFlavors":44,"org.easymock.tests2.AnswerTest.nullStubAnswerNotAllowed":289,"org.easymock.tests2.UsageConstraintsTest.greaterThanOverloaded":162,"org.easymock.tests2.DependencyTest.testInterfaceMockingSupport":170,"org.easymock.tests2.DelegateToTest.testWrongClass":291,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnFloat":251,"org.easymock.tests.UsageFloatingPointReturnValueTest.returnDouble":252,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqualOverloaded":151,"org.easymock.tests2.UsageTest.wrongArguments":292,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValueBoolean":243,"org.easymock.tests.UsageStrictMockTest.range":212,"org.easymock.samples.ConstructorCalledMockTest.testTax":74,"org.easymock.samples.ExampleTest.answerVsDelegate":259,"org.easymock.tests2.EasyMockSupportTest.defaultResetToNice":121,"org.easymock.tests2.MocksControlTest.testMocksControl_Class_WithName":65,"org.easymock.tests.MockTypeTest.fromMockBuilderClass":111,"org.easymock.tests2.UsageConstraintsTest.testNull":147,"org.easymock.tests2.EasyMockClassExtensionTest.testResetReplay":19,"org.easymock.tests.MockClassControlTest.testEquals_WithOverload":86,"org.easymock.tests2.MockBuilderTest.testWithMockSupport":9,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictControl":123,"org.easymock.tests2.CaptureTest.testPrimitive":179,"org.easymock.tests.UsageDefaultReturnValueTest.returnValueAndDefaultReturnValue":245,"org.easymock.tests.UsageTest.summarizeSameObjectArguments":299,"org.easymock.tests.UsageTest.moreThanOneArgument":235,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfT":38,"org.easymock.tests2.EasyMockClassExtensionTest.testInterfaceMocking":127,"org.easymock.tests.UsageExpectAndDefaultReturnTest.booleanType":267,"org.easymock.tests.RecordStateInvalidReturnValueTest.nullForPrimitive":282,"org.easymock.tests2.CaptureTest.testCaptureNone":182,"org.easymock.tests.UsageUnorderedTest.message":301,"org.easymock.tests.UsageVerifyTest.twoReturns":250,"org.easymock.tests.UsageVarargTest.varargByteAccepted":277,"org.easymock.tests2.ThreadingTest.testThreadSafe":171,"org.easymock.tests.UsageTest.argumentsOrdered":300,"org.easymock.tests.UsageVarargTest.varargIntAccepted":271,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfT":55,"org.easymock.samples.BasicClassMockTest.testPrintEmptyContent":77,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnShort":199,"org.easymock.tests2.CaptureTest.testCapture_2617107":178,"org.easymock.tests2.MockBuilderTest.testCreateNiceMockString":3,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_NotAMock":36,"org.easymock.tests2.MockBuilderTest.testCreateNiceMock":8,"org.easymock.tests2.UsageConstraintsTest.any":152,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnLong":203,"org.easymock.tests.DefaultClassInstantiatorTest.serializable":0,"org.easymock.tests2.SerializationTest.testClass":15,"org.easymock.tests2.EasyMockRunnerTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":128,"org.easymock.tests.LimitationsTest.mockNativeMethod":108,"org.easymock.tests2.EasyMockRuleTest.shouldCreateMocksUsingTestClassWhenExtendsEasyMockSupport":188,"org.easymock.tests2.DependencyTest.testClassMocking":63,"org.easymock.tests.UsageExpectAndReturnTest.floatAndRange":233,"org.easymock.tests.GenericTest.testPartialMockingSeesBridgeHasUnmocked":91,"org.easymock.tests2.AnswerTest.answer":112,"org.easymock.tests2.CaptureTest.testAnd":176,"org.easymock.tests2.UsageTest.strictResetToDefault":134,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock":26,"org.easymock.tests2.NameTest.nameForMocksControl":297,"org.easymock.tests2.MockedExceptionTest.testMockedException":72,"org.easymock.tests.UsageExpectAndDefaultReturnTest.longType":266,"org.easymock.tests.UsageRangeTest.zeroOrMoreOneCall":241,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceControl":43,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceMock":118,"org.easymock.tests.UsageTest.openCallCountByLastThrowable":237,"org.easymock.tests.MockingTest.testStrictPartialClassMocking":98,"org.easymock.tests2.EasyMockClassExtensionTest.testClassMocking":17,"org.easymock.tests2.MockBuilderTest.testWithMockSupportNamed":10,"org.easymock.tests.MockingTest.testNicePartialClassMocking":97,"org.easymock.tests2.EasyMockClassExtensionTest.testVarargs":21,"org.easymock.tests.LimitationsTest.mockFinalMethod":109,"org.easymock.tests2.CaptureTest.testCaptureLast":181,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_ConstructorCalled":70,"org.easymock.tests2.UsageConstraintsTest.andOverloaded":150,"org.easymock.tests2.UsageConstraintsTest.lessThanOverloaded":163,"org.easymock.tests.MockingTest.testTwoMocks":95,"org.easymock.tests2.DependencyTest.testClassMockingSupport":64,"org.easymock.tests2.CaptureTest.testCapture1_2446744":180,"org.easymock.tests2.MocksControlTest.testInterfaceForbidden_PartialMock":288,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndCount":214,"org.easymock.tests2.UsageTest.summarizeSameObjectArguments":293,"org.easymock.tests2.UsageConstraintsTest.testStartsWith":167,"org.easymock.tests.UsageThrowableTest.throwError":204,"org.easymock.tests.UsageStrictMockTest.differentMethods":213,"org.easymock.tests.DefaultClassInstantiatorTest.emptyConstructor":102,"org.easymock.tests2.ThreadingTest.testThreadNotSafe":173,"org.easymock.tests2.MockBuilderTest.testCreateMockString":14,"org.easymock.tests.MockClassControlTest.testHashCode_WithOverload":79,"org.easymock.tests.UsageExpectAndDefaultReturnTest.objectType":269,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfT":45,"org.easymock.tests2.UsageConstraintsTest.compareWithComparator":158,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTConstructorArgsMethodArray":40,"org.easymock.tests2.AnswerTest.answerOnVoidMethod":254,"org.easymock.tests.UsageVerifyTest.twoThrows":302,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTConstructorArgsMethodArray":62,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder":54,"org.easymock.samples.PartialClassMockTest.testGetArea":76,"org.easymock.tests2.CompareToTest.testLessOrEqual":262,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnInt":200,"org.easymock.samples.ExampleTest.voteAgainstRemoval":194,"org.easymock.tests.RecordStateInvalidReturnValueTest.setInvalidBooleanReturnValue":281,"org.easymock.tests2.EasyMockClassExtensionTest.testMock_Partial":28,"org.easymock.tests.ObjectMethodsTest.toStringForClasses":284,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfT":49,"org.easymock.tests2.UsageTest.niceToStrict":136,"org.easymock.tests.LimitationsTest.privateConstructor":107,"org.easymock.tests2.UsageConstraintsTest.testNotNull":166,"org.easymock.tests.UsageThrowableTest.throwSubclassOfRuntimeException":210,"org.easymock.tests2.MockedExceptionTest.testNotMockedFillInStackTrace":71,"org.easymock.tests2.MockBuilderTest.testAddMockedMethod":7,"org.easymock.tests2.MockBuilderTest.testCreateMock":12,"org.easymock.tests2.UsageTest.defaultResetToNice":139,"org.easymock.samples.ExampleTest.voteAgainstRemovals":192,"org.easymock.tests.UsageExpectAndReturnTest.doubleType":229,"org.easymock.tests.UsageVarargTest.differentLength":274,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockStringClassOfTMethodArray":57,"org.easymock.tests2.CallbackTest.callback":256,"org.easymock.tests2.EasyMockClassExtensionTest.testCreateMockBuilder":24,"org.easymock.tests.UsageTest.openCallCountByLastCall":236,"org.easymock.tests2.ConstraintsToStringTest.arrayEqualsToString":279,"org.easymock.tests2.EasyMockSupportTest.niceToStrict":119,"org.easymock.tests2.UsageConstraintsTest.lessOrEqual":142,"org.easymock.tests.UsageOverloadedMethodTest.overloading":247,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfT":59,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTConstructorArgsMethodArray":53,"org.easymock.tests2.UsageConstraintsTest.greaterOrEqual":156,"org.easymock.tests.UsageOverloadedMethodTest.nullReturnValue":246,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndMinMax":225,"org.easymock.tests2.MocksControlTest.testMocksControl_Class":68,"org.easymock.tests.DefaultClassInstantiatorTest.serializableWithUID":1,"org.easymock.tests2.UsageConstraintsTest.arrayEquals":155,"org.easymock.tests2.CaptureTest.testPrimitiveVsObject":183,"org.easymock.tests.UsageThrowableTest.throwCheckedException":207,"org.easymock.tests.MockClassControlTest.testEquals":85,"org.easymock.tests2.EasyMockSupportClassTest.testAll":41,"org.easymock.tests.GenericTest.testTheBridgeMethodIsRecordedNotTheBridge":90,"org.easymock.tests.MockingTest.testStrictClassMocking":93,"org.easymock.tests2.CaptureTest.testCaptureAll":177,"org.easymock.tests.UsageOverloadedDefaultValueTest.defaultThrowable":197,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_NoConstructorCalled":69,"org.easymock.tests2.MocksControlTest.testMocksControl_PartialMock_ConstructorCalled":67,"org.easymock.tests2.UsageConstraintsTest.testMatches":157,"org.easymock.tests2.MocksControlTest.testMocksControl_Interface":189,"org.easymock.tests2.AnswerTest.testGenericityFlexibility":255,"org.easymock.tests.UsageExpectAndDefaultReturnTest.doubleType":268,"org.easymock.samples.ExampleTest.voteForRemovals":195,"org.easymock.tests2.NameTest.nameForNiceMock":296,"org.easymock.tests2.ThreadingTest.testRecordingInMultipleThreads":175,"org.easymock.tests.UsageVarargTest.allKinds":287,"org.easymock.tests.UsageVerifyTest.atLeastTwoReturns":249,"org.easymock.tests2.DependencyTest.testInterfaceMocking":169,"org.easymock.samples.BasicClassMockTest.testPrintContent":78,"org.easymock.tests2.EasyMockSupportClassTest.testCreateControl":56,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTConstructorArgsMethodArray":61,"org.easymock.tests2.DelegateToTest.testStubDelegate":129,"org.easymock.tests.UsageThrowableTest.throwRuntimeException":209,"org.easymock.tests2.AnswerTest.stubAnswer":113,"org.easymock.tests.UsageStrictMockTest.defaultBehavior":211,"org.easymock.tests2.UsageConstraintsTest.greaterThan":159,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTConstructorArgsMethodArray":42,"org.easymock.tests.UsageRangeTest.zeroOrMoreNoCalls":240,"org.easymock.tests.UsageVarargTest.varargLongAccepted":276,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock":29,"org.easymock.samples.ExampleTest.voteForRemoval":193,"org.easymock.tests.DefaultClassInstantiatorTest.newInstance":105,"org.easymock.tests2.EasyMockClassExtensionTest.testMakeThreadSafe":30,"org.easymock.tests2.ThreadingTest.testMockUsedCorrectly":172,"org.easymock.tests.UsageExpectAndReturnTest.floatAndCount":232,"org.easymock.tests.UsageExpectAndReturnTest.floatType":216,"org.easymock.tests2.EasyMockClassExtensionTest.testNiceMock_Partial":22,"org.easymock.tests2.PartialMockingTest.testPartialMock_ProtectedConstructor":32,"org.easymock.samples.ConstructorCalledMockTest.testTax_ZeroRate":75,"org.easymock.tests2.UsageConstraintsTest.equalsWithDelta":160,"org.easymock.tests.ConstructorTest.constructorCallingPublicMethod":87,"org.easymock.tests2.UsageTest.exactCallCountByLastThrowable":133,"org.easymock.tests2.UsageConstraintsTest.testEndsWith":143,"org.easymock.tests2.ClassExtensionHelperTest.testMockType_Class":34,"org.easymock.tests2.CaptureTest.testCaptureStrictControl_2133741":285,"org.easymock.tests2.SerializationTest.test":126,"org.easymock.tests2.MockBuilderTest.testWithEmptyConstructor":11,"org.easymock.tests.DefaultClassInstantiatorTest.badSerializable":2,"org.easymock.tests.DefaultClassInstantiatorTest.protectedWithPrimitiveConstructor":101,"org.easymock.tests2.EasyMockSupportTest.testCreateNiceControl":116,"org.easymock.tests.UsageThrowableTest.throwAfterReturnValue":205,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndRange":215,"org.easymock.tests2.UsageConstraintsTest.testSame":148,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockStringClassOfTMethodArray":39,"org.easymock.tests2.CaptureTest.testCaptureFirst":186,"org.easymock.tests.RecordStateMethodCallMissingTest.setStubAnswerWithoutMethodCall":290,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedMock":117,"org.easymock.tests2.UsageTest.exactCallCountByLastCall":141,"org.easymock.tests.UsageExpectAndReturnTest.objectAndRange":221,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfT":46,"org.easymock.tests.GenericTest.testPackageScope":89,"org.easymock.tests2.UsageTest.moreThanOneArgument":135,"org.easymock.tests2.ThreadingTest.testCleanupAfterFailureInRecordPhase":174,"org.easymock.tests2.CaptureTest.testCapture2_2446744":185,"org.easymock.tests2.MockBuilderTest.testCreateStrictMockString":13,"org.easymock.tests.UsageVarargTest.varargDoubleAccepted":278,"org.easymock.tests.GenericTest.testBridgedEquals":92,"org.easymock.tests2.NameTest.nameForMock":295,"org.easymock.tests.UsageExpectAndReturnTest.longType":217,"org.easymock.tests2.EasyMockSupportTest.strictResetToDefault":114,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndCount":226,"org.easymock.tests2.UsageConstraintsTest.differentConstraintsOnSameCall":164,"org.easymock.tests2.UsageStrictMockTest.differentMethods":132,"org.easymock.tests.UsageExpectAndDefaultReturnTest.floatType":265,"org.easymock.tests2.EasyMockClassExtensionTest.testResetTo":25,"org.easymock.tests.UsageExpectAndReturnTest.floatAndMinMax":218,"org.easymock.tests.UsageRangeTest.zeroOrMoreThreeCalls":242,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockStringClassOfTMethodArray":58,"org.easymock.tests.UsageExpectAndReturnTest.doubleAndMinMax":222,"org.easymock.tests.RecordStateMethodCallMissingTest.setAnswerWithoutMethodCall":261,"org.easymock.tests2.UsageStrictMockTest.stubBehavior":130,"org.easymock.tests.UsageDefaultReturnValueTest.defaultReturnValue":244,"org.easymock.tests.UsageThrowableTest.throwSubclassOfCheckedException":208,"org.easymock.tests2.MocksControlTest.testMocksControl_NamedPartialMock_NoConstructorCalled":66,"org.easymock.tests.MockingTest.testNiceClassMocking":99,"org.easymock.tests.MockingTest.testClassMocking":94,"org.easymock.tests2.NameTest.nameForStrictMock":263,"org.easymock.tests2.UsageConstraintsTest.testContains":154,"org.easymock.tests2.MockedExceptionTest.testExplicitFillInStackTrace":73,"org.easymock.tests2.UsageConstraintsTest.testFind":146,"org.easymock.tests.UsageOverloadedMethodTest.moreThanOneResultAndOpenCallCount":248,"org.easymock.tests2.MockBuilderTest.testCreateMockIMocksControl":6,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArgumentsEvenIfAMockCallsAnother":257,"org.easymock.tests2.EasyMockClassExtensionTest.testCheckOrder":20,"org.easymock.tests2.CallbackAndArgumentsTest.callbackGetsArguments":258,"org.easymock.tests.UsageExpectAndReturnTest.object":224,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EasyMockClassExtension":37,"org.easymock.tests.DefaultClassInstantiatorTest.protectedConstructor":103,"org.easymock.tests2.UsageConstraintsTest.notOverloaded":161,"org.easymock.tests2.EasyMockClassExtensionTest.testCompare":23,"org.easymock.tests2.MockBuilderTest.testCreateStrictMock":4,"org.easymock.tests2.UsageStrictMockTest.range":131,"org.easymock.tests2.UsageConstraintsTest.lessThan":168,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedNiceMock":122,"org.easymock.tests.UsageVarargTest.varargFloatAccepted":273,"org.easymock.tests.UsageTest.exactCallCountByLastCall":238,"org.easymock.tests.UsageOverloadedDefaultValueTest.overloading":196,"org.easymock.tests2.EasyMockSupportTest.testCreateStrictMock":115,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictMockClassOfTMethodArray":50,"org.easymock.tests2.CaptureTest.testCaptureRightOne":184,"org.easymock.tests2.UsageConstraintsTest.testOr":149,"org.easymock.tests.UsageRangeTest.combination":239,"org.easymock.tests2.PartialMockingTest.testPartialMock_PublicConstructor":33,"org.easymock.tests.UsageExpectAndReturnTest.longAndCount":230,"org.easymock.tests2.EasyMockClassExtensionTest.testNormalMock":18,"org.easymock.tests.UsageTest.wrongArguments":298,"org.easymock.tests.MockClassControlTest.testHashCode":84,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockClassOfTMethodArray":47,"org.easymock.tests.MockClassControlTest.testFinalize_AreIgnored":80,"org.easymock.tests.UsageExpectAndReturnTest.booleanType":219,"org.easymock.tests.UsageExpectAndReturnTest.booleanAndRange":227,"org.easymock.tests2.EasyMockSupportClassTest.testCreateNiceMockClassOfTMethodArray":51,"org.easymock.tests.UsageVarargTest.varargShortAccepted":275,"org.easymock.tests.StacktraceTest.assertNoFillWhenIAnswerAnswer":260,"org.easymock.tests.DefaultClassInstantiatorTest.primitiveType":104,"org.easymock.tests2.NiceMockTest.defaultReturnValueBoolean":187,"org.easymock.tests2.UsageConstraintsTest.cmpTo":153,"org.easymock.tests.UsageVarargTest.varargCharAccepted":272,"org.easymock.tests2.AnswerTest.nullAnswerNotAllowed":253,"org.easymock.tests2.UsageTest.openCallCountByLastCall":137,"org.easymock.tests2.UsageTest.openCallCountByLastThrowable":138,"org.easymock.tests.DefaultClassInstantiatorTest.object":100,"org.easymock.tests2.EasyMockSupportTest.testCreateControl":125,"org.easymock.tests2.CaptureTest.testCaptureFromStub":264,"org.easymock.tests2.MockBuilderTest.testCreateMockStringIMocksControl":5,"org.easymock.tests2.EasyMockSupportClassTest.testCreateStrictControl":52,"org.easymock.tests.UsageStrictMockTest.unexpectedCallWithArray":280,"org.easymock.tests.UsageThrowableTest.throwSubclassOfError":206,"org.easymock.tests.UsageExpectAndReturnTest.objectAndMinMax":228,"org.easymock.tests.MockClassControlTest.testToString_WithOverload":83,"org.easymock.tests2.EasyMockClassExtensionTest.testStrictMock_Partial":27,"org.easymock.tests2.UsageConstraintsTest.constraints":144,"org.easymock.tests.UsageExpectAndReturnTest.longAndRange":231,"org.easymock.tests.MockClassControlTest.testToString_WithTwoOverload":82,"org.easymock.tests2.EasyMockSupportClassTest.testCreateMockBuilder_existingControl":60,"org.easymock.tests2.CaptureTest.testCaptureNonStrictControl_2133741":286,"org.easymock.tests2.UsageTest.resumeIfFailure":140,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnByte":201,"org.easymock.tests.UsageExpectAndReturnTest.objectAndCount":220,"org.easymock.tests.LimitationsTest.abstractClass":106,"org.easymock.tests.MockTypeTest.fromMockBuilderClassWithName":110,"org.easymock.tests.UsageLongCompatibleReturnValueTest.returnChar":202,"org.easymock.tests.StacktraceTest.assertVerifyNoFillInStacktraceWhenExceptionNotFromEasyMock":198,"org.easymock.tests.UsageVarargTest.varargBooleanAccepted":270,"org.easymock.tests2.EasyMockSupportTest.testCreateNamedStrictMock":120,"org.easymock.tests2.ClassExtensionHelperTest.testGetControl_EnhancedButNotAMock":35}}]
